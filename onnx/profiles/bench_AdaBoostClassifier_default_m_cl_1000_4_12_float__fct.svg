<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2390" onload="init(evt)" viewBox="0 0 1200 2390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2390" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2373.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2373.00"> </text><g id="frames"><g><title>&lt;module&gt; (onnx/checker.py) (1 samples, 0.11%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(244,24,51)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(227,182,0)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(206,225,38)"/><text x="13.00" y="430.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(211,59,19)"/><text x="13.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(245,118,42)"/><text x="13.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(240,34,12)"/><text x="13.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(227,69,25)"/><text x="13.00" y="494.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(248,188,53)"/><text x="13.00" y="510.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="11" y="1044" width="1" height="15" fill="rgb(212,138,44)"/><text x="14.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(225,90,27)"/><text x="14.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(229,43,44)"/><text x="14.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(232,47,0)"/><text x="14.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(236,86,19)"/><text x="14.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(247,11,35)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(208,52,49)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(236,180,44)"/><text x="14.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(251,63,42)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(223,221,14)"/><text x="14.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(244,104,37)"/><text x="14.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.22%)</title><rect x="11" y="1028" width="2" height="15" fill="rgb(212,163,54)"/><text x="14.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.11%)</title><rect x="12" y="1044" width="1" height="15" fill="rgb(229,151,20)"/><text x="15.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.33%)</title><rect x="11" y="836" width="4" height="15" fill="rgb(246,77,42)"/><text x="14.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.33%)</title><rect x="11" y="852" width="4" height="15" fill="rgb(254,134,48)"/><text x="14.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(208,215,28)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(230,143,22)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(233,114,25)"/><text x="16.00" y="910.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.11%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(209,53,19)"/><text x="16.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(205,14,33)"/><text x="16.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(222,156,5)"/><text x="16.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="596" width="5" height="15" fill="rgb(208,41,47)"/><text x="14.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="612" width="5" height="15" fill="rgb(206,31,38)"/><text x="14.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="628" width="5" height="15" fill="rgb(251,222,19)"/><text x="14.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="644" width="5" height="15" fill="rgb(230,158,14)"/><text x="14.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="660" width="5" height="15" fill="rgb(206,56,51)"/><text x="14.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="676" width="5" height="15" fill="rgb(213,180,20)"/><text x="14.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="11" y="692" width="5" height="15" fill="rgb(222,124,40)"/><text x="14.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="708" width="5" height="15" fill="rgb(248,20,53)"/><text x="14.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.44%)</title><rect x="11" y="724" width="5" height="15" fill="rgb(230,46,4)"/><text x="14.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="740" width="5" height="15" fill="rgb(226,161,9)"/><text x="14.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="756" width="5" height="15" fill="rgb(251,45,10)"/><text x="14.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="772" width="5" height="15" fill="rgb(251,65,24)"/><text x="14.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="11" y="788" width="5" height="15" fill="rgb(237,180,17)"/><text x="14.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="11" y="804" width="5" height="15" fill="rgb(235,160,17)"/><text x="14.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.44%)</title><rect x="11" y="820" width="5" height="15" fill="rgb(240,125,40)"/><text x="14.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(208,60,11)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(245,68,8)"/><text x="18.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(248,199,3)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(239,53,39)"/><text x="18.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(253,18,34)"/><text x="18.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(210,103,2)"/><text x="18.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(234,89,45)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(228,183,6)"/><text x="18.00" y="958.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(217,209,15)"/><text x="18.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="11" y="564" width="6" height="15" fill="rgb(229,172,32)"/><text x="14.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.55%)</title><rect x="11" y="580" width="6" height="15" fill="rgb(229,95,16)"/><text x="14.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="596" width="1" height="15" fill="rgb(253,152,44)"/><text x="19.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="612" width="1" height="15" fill="rgb(223,108,2)"/><text x="19.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="628" width="1" height="15" fill="rgb(215,218,7)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="644" width="1" height="15" fill="rgb(215,123,4)"/><text x="19.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="660" width="1" height="15" fill="rgb(237,75,40)"/><text x="19.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="676" width="1" height="15" fill="rgb(254,1,48)"/><text x="19.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="692" width="1" height="15" fill="rgb(205,188,33)"/><text x="19.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/reflection.py) (1 samples, 0.11%)</title><rect x="16" y="708" width="1" height="15" fill="rgb(254,85,25)"/><text x="19.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="724" width="1" height="15" fill="rgb(223,179,19)"/><text x="19.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="740" width="1" height="15" fill="rgb(216,99,48)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="756" width="1" height="15" fill="rgb(215,79,44)"/><text x="19.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="772" width="1" height="15" fill="rgb(206,161,25)"/><text x="19.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(243,129,43)"/><text x="19.00" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(216,113,45)"/><text x="19.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="820" width="1" height="15" fill="rgb(252,3,43)"/><text x="19.00" y="830.50"></text></g><g><title>&lt;module&gt; (protobuf/message_factory.py) (1 samples, 0.11%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(254,80,9)"/><text x="19.00" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(205,78,31)"/><text x="19.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(221,209,23)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(206,192,20)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(236,56,50)"/><text x="19.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(234,110,40)"/><text x="19.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(245,89,16)"/><text x="19.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(206,42,30)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pool.py) (1 samples, 0.11%)</title><rect x="16" y="964" width="1" height="15" fill="rgb(210,11,35)"/><text x="19.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="980" width="1" height="15" fill="rgb(216,169,38)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="996" width="1" height="15" fill="rgb(221,121,44)"/><text x="19.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1012" width="1" height="15" fill="rgb(250,81,17)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1028" width="1" height="15" fill="rgb(253,113,48)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1044" width="1" height="15" fill="rgb(208,62,2)"/><text x="19.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1060" width="1" height="15" fill="rgb(252,221,47)"/><text x="19.00" y="1070.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1076" width="1" height="15" fill="rgb(226,110,27)"/><text x="19.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1092" width="1" height="15" fill="rgb(248,186,39)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 0.76%)</title><rect x="10" y="292" width="9" height="15" fill="rgb(246,95,50)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="308" width="9" height="15" fill="rgb(218,15,2)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="324" width="9" height="15" fill="rgb(213,38,27)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="340" width="9" height="15" fill="rgb(218,220,0)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="10" y="356" width="9" height="15" fill="rgb(235,99,9)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="372" width="9" height="15" fill="rgb(209,26,18)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.66%)</title><rect x="11" y="388" width="8" height="15" fill="rgb(225,62,15)"/><text x="14.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.66%)</title><rect x="11" y="404" width="8" height="15" fill="rgb(234,29,35)"/><text x="14.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.66%)</title><rect x="11" y="420" width="8" height="15" fill="rgb(219,106,18)"/><text x="14.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.66%)</title><rect x="11" y="436" width="8" height="15" fill="rgb(209,215,24)"/><text x="14.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.66%)</title><rect x="11" y="452" width="8" height="15" fill="rgb(220,136,9)"/><text x="14.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.66%)</title><rect x="11" y="468" width="8" height="15" fill="rgb(215,112,49)"/><text x="14.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.66%)</title><rect x="11" y="484" width="8" height="15" fill="rgb(240,227,38)"/><text x="14.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.66%)</title><rect x="11" y="500" width="8" height="15" fill="rgb(247,211,45)"/><text x="14.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.66%)</title><rect x="11" y="516" width="8" height="15" fill="rgb(223,222,50)"/><text x="14.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.66%)</title><rect x="11" y="532" width="8" height="15" fill="rgb(226,143,46)"/><text x="14.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.66%)</title><rect x="11" y="548" width="8" height="15" fill="rgb(214,98,22)"/><text x="14.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(246,27,53)"/><text x="20.00" y="574.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(218,34,9)"/><text x="20.00" y="590.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(228,77,52)"/><text x="20.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(252,19,41)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(219,131,23)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(247,66,49)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(224,45,20)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.87%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(218,212,18)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(238,26,10)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.11%)</title><rect x="19" y="292" width="1" height="15" fill="rgb(246,86,20)"/><text x="22.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="308" width="1" height="15" fill="rgb(244,77,4)"/><text x="22.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="324" width="1" height="15" fill="rgb(205,91,33)"/><text x="22.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="340" width="1" height="15" fill="rgb(224,62,40)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="356" width="1" height="15" fill="rgb(241,191,12)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="372" width="1" height="15" fill="rgb(207,170,18)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.11%)</title><rect x="19" y="388" width="1" height="15" fill="rgb(211,123,38)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="404" width="1" height="15" fill="rgb(221,59,18)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="420" width="1" height="15" fill="rgb(241,218,39)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="436" width="1" height="15" fill="rgb(208,174,24)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="452" width="1" height="15" fill="rgb(206,19,30)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="468" width="1" height="15" fill="rgb(218,11,10)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.11%)</title><rect x="19" y="484" width="1" height="15" fill="rgb(208,88,17)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="500" width="1" height="15" fill="rgb(234,193,32)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="516" width="1" height="15" fill="rgb(217,185,8)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="532" width="1" height="15" fill="rgb(213,97,20)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="548" width="1" height="15" fill="rgb(246,23,44)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="564" width="1" height="15" fill="rgb(236,97,54)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.11%)</title><rect x="19" y="580" width="1" height="15" fill="rgb(254,206,39)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="596" width="1" height="15" fill="rgb(234,25,29)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="612" width="1" height="15" fill="rgb(215,60,38)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="628" width="1" height="15" fill="rgb(210,168,45)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="644" width="1" height="15" fill="rgb(224,112,20)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="660" width="1" height="15" fill="rgb(222,133,10)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.11%)</title><rect x="19" y="676" width="1" height="15" fill="rgb(239,50,32)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="692" width="1" height="15" fill="rgb(225,60,21)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="708" width="1" height="15" fill="rgb(207,100,42)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="724" width="1" height="15" fill="rgb(239,153,33)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="740" width="1" height="15" fill="rgb(217,40,15)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="756" width="1" height="15" fill="rgb(248,121,44)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py) (1 samples, 0.11%)</title><rect x="19" y="772" width="1" height="15" fill="rgb(223,14,54)"/><text x="22.00" y="782.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.11%)</title><rect x="19" y="788" width="1" height="15" fill="rgb(242,92,22)"/><text x="22.00" y="798.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="19" y="804" width="1" height="15" fill="rgb(244,45,2)"/><text x="22.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(210,22,31)"/><text x="23.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(214,169,53)"/><text x="23.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(222,202,44)"/><text x="23.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(226,202,24)"/><text x="23.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(226,173,50)"/><text x="23.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(214,163,3)"/><text x="23.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="20" y="1572" width="1" height="15" fill="rgb(245,56,26)"/><text x="23.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1588" width="1" height="15" fill="rgb(245,209,33)"/><text x="23.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1604" width="1" height="15" fill="rgb(219,46,14)"/><text x="23.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1620" width="1" height="15" fill="rgb(216,173,33)"/><text x="23.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1636" width="1" height="15" fill="rgb(205,20,15)"/><text x="23.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1652" width="1" height="15" fill="rgb(248,52,40)"/><text x="23.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.11%)</title><rect x="20" y="1668" width="1" height="15" fill="rgb(254,204,10)"/><text x="23.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.11%)</title><rect x="20" y="1684" width="1" height="15" fill="rgb(227,57,28)"/><text x="23.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1700" width="1" height="15" fill="rgb(205,71,50)"/><text x="23.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1716" width="1" height="15" fill="rgb(241,221,32)"/><text x="23.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1732" width="1" height="15" fill="rgb(218,194,17)"/><text x="23.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1748" width="1" height="15" fill="rgb(252,36,21)"/><text x="23.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1764" width="1" height="15" fill="rgb(253,213,7)"/><text x="23.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.11%)</title><rect x="20" y="1780" width="1" height="15" fill="rgb(242,118,54)"/><text x="23.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1796" width="1" height="15" fill="rgb(217,105,31)"/><text x="23.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1812" width="1" height="15" fill="rgb(236,116,29)"/><text x="23.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1828" width="1" height="15" fill="rgb(243,103,42)"/><text x="23.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1844" width="1" height="15" fill="rgb(249,77,16)"/><text x="23.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1860" width="1" height="15" fill="rgb(237,99,21)"/><text x="23.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.11%)</title><rect x="20" y="1876" width="1" height="15" fill="rgb(233,130,16)"/><text x="23.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1892" width="1" height="15" fill="rgb(251,87,19)"/><text x="23.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1908" width="1" height="15" fill="rgb(236,87,40)"/><text x="23.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1924" width="1" height="15" fill="rgb(226,201,1)"/><text x="23.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1940" width="1" height="15" fill="rgb(223,111,10)"/><text x="23.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1956" width="1" height="15" fill="rgb(230,129,29)"/><text x="23.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.11%)</title><rect x="20" y="1972" width="1" height="15" fill="rgb(238,107,24)"/><text x="23.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1988" width="1" height="15" fill="rgb(224,187,41)"/><text x="23.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2004" width="1" height="15" fill="rgb(216,185,23)"/><text x="23.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2020" width="1" height="15" fill="rgb(212,155,28)"/><text x="23.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2036" width="1" height="15" fill="rgb(253,61,19)"/><text x="23.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2052" width="1" height="15" fill="rgb(246,16,41)"/><text x="23.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="2068" width="1" height="15" fill="rgb(227,68,22)"/><text x="23.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2084" width="1" height="15" fill="rgb(230,173,18)"/><text x="23.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/events.py) (1 samples, 0.11%)</title><rect x="20" y="2100" width="1" height="15" fill="rgb(213,10,0)"/><text x="23.00" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2116" width="1" height="15" fill="rgb(230,65,28)"/><text x="23.00" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2132" width="1" height="15" fill="rgb(244,49,46)"/><text x="23.00" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2148" width="1" height="15" fill="rgb(244,16,23)"/><text x="23.00" y="2158.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2164" width="1" height="15" fill="rgb(208,52,0)"/><text x="23.00" y="2174.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="2180" width="1" height="15" fill="rgb(215,45,25)"/><text x="23.00" y="2190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2196" width="1" height="15" fill="rgb(212,78,45)"/><text x="23.00" y="2206.50"></text></g><g><title>0x7f290ad713d4 (?) (1 samples, 0.11%)</title><rect x="20" y="2212" width="1" height="15" fill="rgb(247,38,33)"/><text x="23.00" y="2222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2228" width="1" height="15" fill="rgb(209,139,43)"/><text x="23.00" y="2238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2244" width="1" height="15" fill="rgb(254,89,15)"/><text x="23.00" y="2254.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="2260" width="1" height="15" fill="rgb(242,168,25)"/><text x="23.00" y="2270.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="2276" width="1" height="15" fill="rgb(250,95,3)"/><text x="23.00" y="2286.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="2292" width="1" height="15" fill="rgb(236,127,0)"/><text x="23.00" y="2302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="2308" width="1" height="15" fill="rgb(205,15,9)"/><text x="23.00" y="2318.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="2324" width="1" height="15" fill="rgb(228,80,51)"/><text x="23.00" y="2334.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="2340" width="1" height="15" fill="rgb(241,175,52)"/><text x="23.00" y="2350.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.22%)</title><rect x="21" y="1508" width="3" height="15" fill="rgb(237,39,39)"/><text x="24.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.22%)</title><rect x="21" y="1524" width="3" height="15" fill="rgb(208,5,3)"/><text x="24.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.22%)</title><rect x="21" y="1540" width="3" height="15" fill="rgb(206,36,37)"/><text x="24.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.22%)</title><rect x="21" y="1556" width="3" height="15" fill="rgb(214,53,54)"/><text x="24.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.22%)</title><rect x="21" y="1572" width="3" height="15" fill="rgb(226,102,9)"/><text x="24.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (2 samples, 0.22%)</title><rect x="21" y="1588" width="3" height="15" fill="rgb(220,99,36)"/><text x="24.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(210,24,41)"/><text x="25.00" y="1614.50"></text></g><g><title>0x7f292ce2a3b1 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1620" width="2" height="15" fill="rgb(246,49,19)"/><text x="25.00" y="1630.50"></text></g><g><title>google::protobuf::python::cmessage::Clear (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1636" width="2" height="15" fill="rgb(237,134,2)"/><text x="25.00" y="1646.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Clear (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1652" width="2" height="15" fill="rgb(225,122,46)"/><text x="25.00" y="1662.50"></text></g><g><title>google::protobuf::Reflection::MutableUnknownFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1668" width="2" height="15" fill="rgb(213,23,19)"/><text x="25.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="484" width="5" height="15" fill="rgb(222,13,11)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="500" width="5" height="15" fill="rgb(210,108,41)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="516" width="5" height="15" fill="rgb(240,52,17)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="532" width="5" height="15" fill="rgb(228,212,36)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="548" width="5" height="15" fill="rgb(231,23,10)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="564" width="5" height="15" fill="rgb(252,58,41)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.44%)</title><rect x="20" y="580" width="5" height="15" fill="rgb(244,4,47)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="596" width="5" height="15" fill="rgb(219,26,49)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="612" width="5" height="15" fill="rgb(238,226,41)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="628" width="5" height="15" fill="rgb(219,94,35)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="644" width="5" height="15" fill="rgb(247,167,32)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="660" width="5" height="15" fill="rgb(245,141,28)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.44%)</title><rect x="20" y="676" width="5" height="15" fill="rgb(244,183,37)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="692" width="5" height="15" fill="rgb(217,215,26)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="708" width="5" height="15" fill="rgb(216,19,17)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="724" width="5" height="15" fill="rgb(233,99,33)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="740" width="5" height="15" fill="rgb(249,212,6)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="756" width="5" height="15" fill="rgb(205,204,7)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.44%)</title><rect x="20" y="772" width="5" height="15" fill="rgb(249,167,42)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="788" width="5" height="15" fill="rgb(246,139,3)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="804" width="5" height="15" fill="rgb(252,98,28)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="820" width="5" height="15" fill="rgb(221,218,11)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="836" width="5" height="15" fill="rgb(206,78,54)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="852" width="5" height="15" fill="rgb(218,211,39)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.44%)</title><rect x="20" y="868" width="5" height="15" fill="rgb(253,35,53)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="884" width="5" height="15" fill="rgb(221,122,33)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="900" width="5" height="15" fill="rgb(247,115,52)"/><text x="23.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(250,9,5)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(210,89,53)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(233,160,29)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(215,147,51)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(227,127,11)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="996" width="5" height="15" fill="rgb(226,51,29)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.44%)</title><rect x="20" y="1012" width="5" height="15" fill="rgb(251,38,36)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1028" width="5" height="15" fill="rgb(241,155,11)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1044" width="5" height="15" fill="rgb(248,189,2)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1060" width="5" height="15" fill="rgb(222,80,54)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="1076" width="5" height="15" fill="rgb(236,169,54)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1092" width="5" height="15" fill="rgb(217,100,27)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.44%)</title><rect x="20" y="1108" width="5" height="15" fill="rgb(233,10,28)"/><text x="23.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1124" width="5" height="15" fill="rgb(250,164,29)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1140" width="5" height="15" fill="rgb(250,95,50)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1156" width="5" height="15" fill="rgb(230,128,2)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1172" width="5" height="15" fill="rgb(246,5,32)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1188" width="5" height="15" fill="rgb(211,33,27)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="1204" width="5" height="15" fill="rgb(211,154,3)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1220" width="5" height="15" fill="rgb(243,59,52)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 0.44%)</title><rect x="20" y="1236" width="5" height="15" fill="rgb(240,211,17)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1252" width="5" height="15" fill="rgb(214,149,21)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1268" width="5" height="15" fill="rgb(229,181,29)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1284" width="5" height="15" fill="rgb(211,58,18)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1300" width="5" height="15" fill="rgb(208,199,17)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1316" width="5" height="15" fill="rgb(250,80,46)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="1332" width="5" height="15" fill="rgb(213,137,48)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1348" width="5" height="15" fill="rgb(206,172,9)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.44%)</title><rect x="20" y="1364" width="5" height="15" fill="rgb(243,32,13)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1380" width="5" height="15" fill="rgb(246,133,54)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1396" width="5" height="15" fill="rgb(249,135,16)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1412" width="5" height="15" fill="rgb(239,132,44)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="20" y="1428" width="5" height="15" fill="rgb(235,200,49)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="20" y="1444" width="5" height="15" fill="rgb(249,130,6)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.44%)</title><rect x="20" y="1460" width="5" height="15" fill="rgb(250,169,28)"/><text x="23.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.33%)</title><rect x="21" y="1476" width="4" height="15" fill="rgb(239,227,11)"/><text x="24.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.33%)</title><rect x="21" y="1492" width="4" height="15" fill="rgb(225,60,23)"/><text x="24.00" y="1502.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.11%)</title><rect x="24" y="1508" width="1" height="15" fill="rgb(209,149,11)"/><text x="27.00" y="1518.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="24" y="1524" width="1" height="15" fill="rgb(237,45,52)"/><text x="27.00" y="1534.50"></text></g><g><title>0x7f293ead78a4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="24" y="1540" width="1" height="15" fill="rgb(231,147,51)"/><text x="27.00" y="1550.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="724" width="1" height="15" fill="rgb(248,182,18)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="740" width="1" height="15" fill="rgb(222,195,0)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="756" width="1" height="15" fill="rgb(226,96,32)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="772" width="1" height="15" fill="rgb(206,21,29)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="788" width="1" height="15" fill="rgb(232,85,36)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="804" width="1" height="15" fill="rgb(241,24,28)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="820" width="1" height="15" fill="rgb(250,4,16)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="836" width="1" height="15" fill="rgb(220,185,10)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="852" width="1" height="15" fill="rgb(210,194,42)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="868" width="1" height="15" fill="rgb(226,23,38)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="884" width="1" height="15" fill="rgb(231,39,25)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="900" width="1" height="15" fill="rgb(208,21,30)"/><text x="28.00" y="910.50"></text></g><g><title>0x7f291400640e (?) (1 samples, 0.11%)</title><rect x="25" y="916" width="1" height="15" fill="rgb(241,19,14)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="932" width="1" height="15" fill="rgb(225,19,33)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="948" width="1" height="15" fill="rgb(240,121,18)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="964" width="1" height="15" fill="rgb(224,29,39)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="980" width="1" height="15" fill="rgb(252,218,37)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="996" width="1" height="15" fill="rgb(224,150,2)"/><text x="28.00" y="1006.50"></text></g><g><title>0x7f2913dbfcd2 (?) (1 samples, 0.11%)</title><rect x="25" y="1012" width="1" height="15" fill="rgb(234,191,25)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1028" width="1" height="15" fill="rgb(226,165,16)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1044" width="1" height="15" fill="rgb(230,139,14)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1060" width="1" height="15" fill="rgb(208,102,37)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1076" width="1" height="15" fill="rgb(244,159,6)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1092" width="1" height="15" fill="rgb(240,20,14)"/><text x="28.00" y="1102.50"></text></g><g><title>0x7f29134b50e5 (?) (1 samples, 0.11%)</title><rect x="25" y="1108" width="1" height="15" fill="rgb(250,10,9)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1124" width="1" height="15" fill="rgb(233,227,49)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1140" width="1" height="15" fill="rgb(206,36,32)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1156" width="1" height="15" fill="rgb(251,120,50)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1172" width="1" height="15" fill="rgb(229,138,21)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1188" width="1" height="15" fill="rgb(226,19,4)"/><text x="28.00" y="1198.50"></text></g><g><title>0x7f2913239e68 (?) (1 samples, 0.11%)</title><rect x="25" y="1204" width="1" height="15" fill="rgb(237,83,20)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1220" width="1" height="15" fill="rgb(231,169,21)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1236" width="1" height="15" fill="rgb(245,169,4)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1252" width="1" height="15" fill="rgb(237,219,22)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1268" width="1" height="15" fill="rgb(243,154,18)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1284" width="1" height="15" fill="rgb(213,107,42)"/><text x="28.00" y="1294.50"></text></g><g><title>0x7f2912fca2fb (?) (1 samples, 0.11%)</title><rect x="25" y="1300" width="1" height="15" fill="rgb(227,200,35)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1316" width="1" height="15" fill="rgb(211,49,31)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1332" width="1" height="15" fill="rgb(221,137,24)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1348" width="1" height="15" fill="rgb(249,125,54)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1364" width="1" height="15" fill="rgb(211,32,52)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1380" width="1" height="15" fill="rgb(233,36,25)"/><text x="28.00" y="1390.50"></text></g><g><title>0x7f2912dae153 (?) (1 samples, 0.11%)</title><rect x="25" y="1396" width="1" height="15" fill="rgb(219,155,12)"/><text x="28.00" y="1406.50"></text></g><g><title>0x7f2912dacc13 (?) (1 samples, 0.11%)</title><rect x="25" y="1412" width="1" height="15" fill="rgb(241,13,23)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1428" width="1" height="15" fill="rgb(240,73,25)"/><text x="28.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1444" width="1" height="15" fill="rgb(234,48,34)"/><text x="28.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1460" width="1" height="15" fill="rgb(250,45,40)"/><text x="28.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1476" width="1" height="15" fill="rgb(226,228,12)"/><text x="28.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1492" width="1" height="15" fill="rgb(214,197,28)"/><text x="28.00" y="1502.50"></text></g><g><title>0x7f2912b49181 (?) (1 samples, 0.11%)</title><rect x="25" y="1508" width="1" height="15" fill="rgb(212,226,46)"/><text x="28.00" y="1518.50"></text></g><g><title>0x7f2912b4c1c9 (?) (1 samples, 0.11%)</title><rect x="25" y="1524" width="1" height="15" fill="rgb(252,217,24)"/><text x="28.00" y="1534.50"></text></g><g><title>0x7f2912b78167 (?) (1 samples, 0.11%)</title><rect x="25" y="1540" width="1" height="15" fill="rgb(224,72,15)"/><text x="28.00" y="1550.50"></text></g><g><title>0x7f2912b73b64 (?) (1 samples, 0.11%)</title><rect x="25" y="1556" width="1" height="15" fill="rgb(236,50,28)"/><text x="28.00" y="1566.50"></text></g><g><title>0x7f2912b5707b (?) (1 samples, 0.11%)</title><rect x="25" y="1572" width="1" height="15" fill="rgb(241,175,43)"/><text x="28.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.11%)</title><rect x="25" y="1588" width="1" height="15" fill="rgb(243,201,17)"/><text x="28.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="1604" width="1" height="15" fill="rgb(229,139,37)"/><text x="28.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="1620" width="1" height="15" fill="rgb(231,102,11)"/><text x="28.00" y="1630.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="25" y="1636" width="1" height="15" fill="rgb(242,146,17)"/><text x="28.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.11%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(231,57,30)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(221,183,1)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(218,101,50)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(253,86,0)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1172" width="2" height="15" fill="rgb(226,76,40)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1188" width="2" height="15" fill="rgb(234,42,49)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.11%)</title><rect x="26" y="1204" width="2" height="15" fill="rgb(234,229,23)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1220" width="2" height="15" fill="rgb(247,90,37)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1236" width="2" height="15" fill="rgb(237,7,4)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1252" width="2" height="15" fill="rgb(224,217,25)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1268" width="2" height="15" fill="rgb(208,146,22)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1284" width="2" height="15" fill="rgb(238,151,10)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.11%)</title><rect x="26" y="1300" width="2" height="15" fill="rgb(214,126,27)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1316" width="2" height="15" fill="rgb(211,153,16)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1332" width="2" height="15" fill="rgb(226,113,3)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1348" width="2" height="15" fill="rgb(227,38,54)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1364" width="2" height="15" fill="rgb(228,206,35)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1380" width="2" height="15" fill="rgb(218,88,35)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.11%)</title><rect x="26" y="1396" width="2" height="15" fill="rgb(248,155,38)"/><text x="29.00" y="1406.50"></text></g><g><title>IntervalIndex (pandas/core/indexes/interval.py) (1 samples, 0.11%)</title><rect x="26" y="1412" width="2" height="15" fill="rgb(212,177,44)"/><text x="29.00" y="1422.50"></text></g><g><title>__init__ (pandas/util/_decorators.py) (1 samples, 0.11%)</title><rect x="26" y="1428" width="2" height="15" fill="rgb(208,203,50)"/><text x="29.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 0.76%)</title><rect x="20" y="340" width="9" height="15" fill="rgb(254,185,21)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="20" y="356" width="9" height="15" fill="rgb(240,98,40)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="20" y="372" width="9" height="15" fill="rgb(218,101,54)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="20" y="388" width="9" height="15" fill="rgb(236,22,18)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="20" y="404" width="9" height="15" fill="rgb(205,82,3)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="20" y="420" width="9" height="15" fill="rgb(254,161,46)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 0.76%)</title><rect x="20" y="436" width="9" height="15" fill="rgb(234,216,38)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="20" y="452" width="9" height="15" fill="rgb(228,129,24)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="20" y="468" width="9" height="15" fill="rgb(231,158,29)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="484" width="4" height="15" fill="rgb(230,95,48)"/><text x="28.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="25" y="500" width="4" height="15" fill="rgb(207,129,46)"/><text x="28.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="516" width="4" height="15" fill="rgb(239,210,26)"/><text x="28.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.33%)</title><rect x="25" y="532" width="4" height="15" fill="rgb(244,208,21)"/><text x="28.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="548" width="4" height="15" fill="rgb(214,113,52)"/><text x="28.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="564" width="4" height="15" fill="rgb(232,42,1)"/><text x="28.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="580" width="4" height="15" fill="rgb(207,204,14)"/><text x="28.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="25" y="596" width="4" height="15" fill="rgb(229,131,13)"/><text x="28.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="612" width="4" height="15" fill="rgb(211,85,41)"/><text x="28.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.33%)</title><rect x="25" y="628" width="4" height="15" fill="rgb(243,37,34)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="644" width="4" height="15" fill="rgb(217,155,45)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="660" width="4" height="15" fill="rgb(247,146,3)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="676" width="4" height="15" fill="rgb(247,158,23)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="25" y="692" width="4" height="15" fill="rgb(233,103,53)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="708" width="4" height="15" fill="rgb(232,39,19)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.22%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(217,89,30)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(206,141,11)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(218,141,25)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(228,167,5)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="788" width="3" height="15" fill="rgb(216,136,46)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="804" width="3" height="15" fill="rgb(216,158,23)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.22%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(241,45,46)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(226,89,13)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(215,201,54)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(250,57,7)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(215,162,7)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(241,16,28)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.22%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(212,13,34)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(240,96,21)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(210,52,5)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(248,9,31)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(247,39,21)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(207,159,14)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.22%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(224,161,32)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(249,52,36)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(246,13,4)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(225,212,35)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(245,96,9)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(250,16,16)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.11%)</title><rect x="28" y="1108" width="1" height="15" fill="rgb(213,67,40)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1124" width="1" height="15" fill="rgb(238,220,44)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1140" width="1" height="15" fill="rgb(218,209,33)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1156" width="1" height="15" fill="rgb(232,187,32)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1172" width="1" height="15" fill="rgb(251,123,39)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1188" width="1" height="15" fill="rgb(235,214,26)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1204" width="1" height="15" fill="rgb(209,59,42)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1220" width="1" height="15" fill="rgb(243,78,19)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1236" width="1" height="15" fill="rgb(233,202,29)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1252" width="1" height="15" fill="rgb(243,97,11)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1268" width="1" height="15" fill="rgb(238,121,49)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1284" width="1" height="15" fill="rgb(247,37,52)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.11%)</title><rect x="28" y="1300" width="1" height="15" fill="rgb(207,82,53)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1316" width="1" height="15" fill="rgb(233,227,30)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1332" width="1" height="15" fill="rgb(218,205,40)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1348" width="1" height="15" fill="rgb(224,136,54)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1364" width="1" height="15" fill="rgb(212,79,8)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1380" width="1" height="15" fill="rgb(224,80,23)"/><text x="31.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1396" width="1" height="15" fill="rgb(246,141,43)"/><text x="31.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1412" width="1" height="15" fill="rgb(217,110,51)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1428" width="1" height="15" fill="rgb(213,227,20)"/><text x="31.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1444" width="1" height="15" fill="rgb(208,210,1)"/><text x="31.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1460" width="1" height="15" fill="rgb(219,32,43)"/><text x="31.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1476" width="1" height="15" fill="rgb(210,202,43)"/><text x="31.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.11%)</title><rect x="28" y="1492" width="1" height="15" fill="rgb(228,144,22)"/><text x="31.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1508" width="1" height="15" fill="rgb(234,64,15)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1524" width="1" height="15" fill="rgb(243,145,8)"/><text x="31.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1540" width="1" height="15" fill="rgb(254,143,29)"/><text x="31.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1556" width="1" height="15" fill="rgb(228,221,53)"/><text x="31.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1572" width="1" height="15" fill="rgb(249,134,45)"/><text x="31.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1588" width="1" height="15" fill="rgb(242,23,6)"/><text x="31.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1604" width="1" height="15" fill="rgb(205,148,0)"/><text x="31.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1620" width="1" height="15" fill="rgb(220,199,40)"/><text x="31.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1636" width="1" height="15" fill="rgb(222,201,35)"/><text x="31.00" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1652" width="1" height="15" fill="rgb(209,31,34)"/><text x="31.00" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1668" width="1" height="15" fill="rgb(229,167,15)"/><text x="31.00" y="1678.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1684" width="1" height="15" fill="rgb(226,221,8)"/><text x="31.00" y="1694.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.11%)</title><rect x="28" y="1700" width="1" height="15" fill="rgb(222,122,7)"/><text x="31.00" y="1710.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1716" width="1" height="15" fill="rgb(254,44,1)"/><text x="31.00" y="1726.50"></text></g><g><title>validate_cycler (matplotlib/rcsetup.py) (1 samples, 0.11%)</title><rect x="28" y="1732" width="1" height="15" fill="rgb(251,11,53)"/><text x="31.00" y="1742.50"></text></g><g><title>f (matplotlib/rcsetup.py) (1 samples, 0.11%)</title><rect x="28" y="1748" width="1" height="15" fill="rgb(224,229,35)"/><text x="31.00" y="1758.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/rcsetup.py) (1 samples, 0.11%)</title><rect x="28" y="1764" width="1" height="15" fill="rgb(224,28,8)"/><text x="31.00" y="1774.50"></text></g><g><title>validate_color_for_prop_cycle (matplotlib/rcsetup.py) (1 samples, 0.11%)</title><rect x="28" y="1780" width="1" height="15" fill="rgb(240,17,18)"/><text x="31.00" y="1790.50"></text></g><g><title>match (re.py) (1 samples, 0.11%)</title><rect x="28" y="1796" width="1" height="15" fill="rgb(212,97,18)"/><text x="31.00" y="1806.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="28" y="1812" width="1" height="15" fill="rgb(232,184,54)"/><text x="31.00" y="1822.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="28" y="1828" width="1" height="15" fill="rgb(242,184,27)"/><text x="31.00" y="1838.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="1844" width="1" height="15" fill="rgb(243,192,29)"/><text x="31.00" y="1854.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="1860" width="1" height="15" fill="rgb(205,172,36)"/><text x="31.00" y="1870.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="1876" width="1" height="15" fill="rgb(210,98,38)"/><text x="31.00" y="1886.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="1892" width="1" height="15" fill="rgb(252,21,14)"/><text x="31.00" y="1902.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="1908" width="1" height="15" fill="rgb(234,151,1)"/><text x="31.00" y="1918.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 0.87%)</title><rect x="20" y="244" width="10" height="15" fill="rgb(223,23,47)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="20" y="260" width="10" height="15" fill="rgb(247,23,5)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="20" y="276" width="10" height="15" fill="rgb(229,43,10)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="20" y="292" width="10" height="15" fill="rgb(207,210,14)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.87%)</title><rect x="20" y="308" width="10" height="15" fill="rgb(222,87,46)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="20" y="324" width="10" height="15" fill="rgb(253,135,33)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.11%)</title><rect x="29" y="340" width="1" height="15" fill="rgb(212,40,31)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="356" width="1" height="15" fill="rgb(206,141,41)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="372" width="1" height="15" fill="rgb(218,155,17)"/><text x="32.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="388" width="1" height="15" fill="rgb(243,187,45)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="404" width="1" height="15" fill="rgb(223,190,42)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="420" width="1" height="15" fill="rgb(235,153,53)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="436" width="1" height="15" fill="rgb(243,202,17)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="452" width="1" height="15" fill="rgb(215,134,36)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="468" width="1" height="15" fill="rgb(208,83,11)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.11%)</title><rect x="29" y="484" width="1" height="15" fill="rgb(254,218,9)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="500" width="1" height="15" fill="rgb(211,12,7)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="516" width="1" height="15" fill="rgb(236,163,26)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="532" width="1" height="15" fill="rgb(215,140,21)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="548" width="1" height="15" fill="rgb(225,52,26)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="564" width="1" height="15" fill="rgb(219,120,33)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="29" y="580" width="1" height="15" fill="rgb(213,217,48)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="596" width="1" height="15" fill="rgb(254,46,18)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="612" width="1" height="15" fill="rgb(251,17,26)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="628" width="1" height="15" fill="rgb(239,2,44)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="644" width="1" height="15" fill="rgb(205,192,36)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="660" width="1" height="15" fill="rgb(208,115,32)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="29" y="676" width="1" height="15" fill="rgb(227,207,8)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="692" width="1" height="15" fill="rgb(247,143,0)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="708" width="1" height="15" fill="rgb(246,15,20)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="724" width="1" height="15" fill="rgb(244,109,22)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="740" width="1" height="15" fill="rgb(241,45,24)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="756" width="1" height="15" fill="rgb(211,99,30)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="29" y="772" width="1" height="15" fill="rgb(235,70,14)"/><text x="32.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="788" width="1" height="15" fill="rgb(208,15,2)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="804" width="1" height="15" fill="rgb(225,128,43)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="820" width="1" height="15" fill="rgb(209,135,49)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="836" width="1" height="15" fill="rgb(247,58,44)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="852" width="1" height="15" fill="rgb(211,169,42)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="868" width="1" height="15" fill="rgb(211,29,24)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="884" width="1" height="15" fill="rgb(244,135,22)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.11%)</title><rect x="29" y="900" width="1" height="15" fill="rgb(223,51,36)"/><text x="32.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.86%)</title><rect x="10" y="68" width="21" height="15" fill="rgb(253,81,37)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.86%)</title><rect x="10" y="84" width="21" height="15" fill="rgb(238,178,44)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.86%)</title><rect x="10" y="100" width="21" height="15" fill="rgb(205,165,28)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 1.86%)</title><rect x="10" y="116" width="21" height="15" fill="rgb(245,76,54)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.86%)</title><rect x="10" y="132" width="21" height="15" fill="rgb(241,28,47)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (17 samples, 1.86%)</title><rect x="10" y="148" width="21" height="15" fill="rgb(244,100,29)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.86%)</title><rect x="10" y="164" width="21" height="15" fill="rgb(206,178,22)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.86%)</title><rect x="10" y="180" width="21" height="15" fill="rgb(209,99,8)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="20" y="196" width="11" height="15" fill="rgb(211,69,40)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.98%)</title><rect x="20" y="212" width="11" height="15" fill="rgb(225,113,42)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="20" y="228" width="11" height="15" fill="rgb(236,37,51)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="244" width="1" height="15" fill="rgb(231,89,39)"/><text x="33.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="260" width="1" height="15" fill="rgb(241,51,20)"/><text x="33.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="276" width="1" height="15" fill="rgb(205,113,54)"/><text x="33.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="292" width="1" height="15" fill="rgb(254,221,37)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="308" width="1" height="15" fill="rgb(220,139,22)"/><text x="33.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="324" width="1" height="15" fill="rgb(235,100,41)"/><text x="33.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="340" width="1" height="15" fill="rgb(224,31,30)"/><text x="33.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="356" width="1" height="15" fill="rgb(245,159,44)"/><text x="33.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="372" width="1" height="15" fill="rgb(213,181,10)"/><text x="33.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="388" width="1" height="15" fill="rgb(218,40,3)"/><text x="33.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="404" width="1" height="15" fill="rgb(224,58,8)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="420" width="1" height="15" fill="rgb(252,143,19)"/><text x="33.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="436" width="1" height="15" fill="rgb(220,97,16)"/><text x="33.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="452" width="1" height="15" fill="rgb(206,62,28)"/><text x="33.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="468" width="1" height="15" fill="rgb(252,198,31)"/><text x="33.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="484" width="1" height="15" fill="rgb(209,21,23)"/><text x="33.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.11%)</title><rect x="30" y="500" width="1" height="15" fill="rgb(246,32,49)"/><text x="33.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.11%)</title><rect x="30" y="516" width="1" height="15" fill="rgb(243,171,24)"/><text x="33.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.11%)</title><rect x="30" y="532" width="1" height="15" fill="rgb(246,70,32)"/><text x="33.00" y="542.50"></text></g><g><title>&lt;module&gt; (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="30" y="548" width="1" height="15" fill="rgb(236,19,16)"/><text x="33.00" y="558.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.11%)</title><rect x="30" y="564" width="1" height="15" fill="rgb(252,95,46)"/><text x="33.00" y="574.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="37" y="340" width="1" height="15" fill="rgb(214,229,2)"/><text x="40.00" y="350.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="340" width="1" height="15" fill="rgb(235,28,54)"/><text x="41.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="356" width="1" height="15" fill="rgb(217,62,45)"/><text x="41.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="372" width="1" height="15" fill="rgb(240,139,6)"/><text x="41.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="388" width="1" height="15" fill="rgb(253,186,53)"/><text x="41.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="404" width="1" height="15" fill="rgb(245,148,42)"/><text x="41.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="420" width="1" height="15" fill="rgb(229,45,2)"/><text x="41.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="436" width="1" height="15" fill="rgb(240,222,41)"/><text x="41.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="452" width="1" height="15" fill="rgb(214,10,34)"/><text x="41.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="468" width="1" height="15" fill="rgb(253,169,1)"/><text x="41.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="484" width="1" height="15" fill="rgb(211,174,8)"/><text x="41.00" y="494.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.76%)</title><rect x="39" y="340" width="9" height="15" fill="rgb(250,165,53)"/><text x="42.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="48" y="372" width="1" height="15" fill="rgb(210,41,33)"/><text x="51.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.18%)</title><rect x="49" y="372" width="26" height="15" fill="rgb(249,86,15)"/><text x="52.00" y="382.50">o..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.98%)</title><rect x="64" y="388" width="11" height="15" fill="rgb(210,104,1)"/><text x="67.00" y="398.50"></text></g><g><title>0x7f293ead5998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="75" y="388" width="1" height="15" fill="rgb(252,228,18)"/><text x="78.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 2.51%)</title><rect x="48" y="340" width="30" height="15" fill="rgb(216,106,5)"/><text x="51.00" y="350.50">on..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 2.51%)</title><rect x="48" y="356" width="30" height="15" fill="rgb(244,91,13)"/><text x="51.00" y="366.50">on..</text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="75" y="372" width="3" height="15" fill="rgb(207,47,41)"/><text x="78.00" y="382.50"></text></g><g><title>0x7f293ead5a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="76" y="388" width="2" height="15" fill="rgb(209,160,19)"/><text x="79.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="340" width="1" height="15" fill="rgb(253,189,1)"/><text x="81.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="356" width="1" height="15" fill="rgb(218,112,28)"/><text x="81.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="79" y="340" width="5" height="15" fill="rgb(220,17,35)"/><text x="82.00" y="350.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="340" width="2" height="15" fill="rgb(225,187,25)"/><text x="87.00" y="350.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="356" width="2" height="15" fill="rgb(224,103,51)"/><text x="87.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.29%)</title><rect x="86" y="340" width="27" height="15" fill="rgb(208,178,49)"/><text x="89.00" y="350.50">o..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.29%)</title><rect x="86" y="356" width="27" height="15" fill="rgb(239,163,5)"/><text x="89.00" y="366.50">o..</text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.29%)</title><rect x="86" y="372" width="27" height="15" fill="rgb(250,147,36)"/><text x="89.00" y="382.50">o..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.98%)</title><rect x="101" y="388" width="12" height="15" fill="rgb(227,159,17)"/><text x="104.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="155" y="356" width="5" height="15" fill="rgb(217,44,14)"/><text x="158.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (28 samples, 3.06%)</title><rect x="259" y="388" width="36" height="15" fill="rgb(213,45,24)"/><text x="262.00" y="398.50">ope..</text></g><g><title>malloc (libc-2.29.so) (21 samples, 2.29%)</title><rect x="268" y="404" width="27" height="15" fill="rgb(226,5,52)"/><text x="271.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (114 samples, 12.45%)</title><rect x="160" y="356" width="147" height="15" fill="rgb(235,24,51)"/><text x="163.00" y="366.50">onnxruntime::ml::T..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 6.00%)</title><rect x="236" y="372" width="71" height="15" fill="rgb(209,114,41)"/><text x="239.00" y="382.50">std::_Rb..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (9 samples, 0.98%)</title><rect x="295" y="388" width="12" height="15" fill="rgb(237,75,49)"/><text x="298.00" y="398.50"></text></g><g><title>0x7f293eaf5d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="315" y="372" width="1" height="15" fill="rgb(249,117,6)"/><text x="318.00" y="382.50"></text></g><g><title>0x7f293eaf5dae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="316" y="372" width="1" height="15" fill="rgb(227,18,14)"/><text x="319.00" y="382.50"></text></g><g><title>0x7f293eaf5dbb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="317" y="372" width="2" height="15" fill="rgb(238,81,42)"/><text x="320.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.09%)</title><rect x="307" y="356" width="13" height="15" fill="rgb(218,212,26)"/><text x="310.00" y="366.50"></text></g><g><title>0x7f293eaf5dbe (libc-2.29.so) (1 samples, 0.11%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(246,224,46)"/><text x="322.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="320" y="356" width="1" height="15" fill="rgb(253,204,24)"/><text x="323.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="320" y="372" width="1" height="15" fill="rgb(208,181,19)"/><text x="323.00" y="382.50"></text></g><g><title>0x7f292e5a27a0 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(252,129,4)"/><text x="331.00" y="382.50"></text></g><g><title>0x7f293ead5906 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="330" y="372" width="3" height="15" fill="rgb(225,175,39)"/><text x="333.00" y="382.50"></text></g><g><title>0x7f293ead5917 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="333" y="372" width="1" height="15" fill="rgb(219,143,16)"/><text x="336.00" y="382.50"></text></g><g><title>0x7f293ead591e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="334" y="372" width="1" height="15" fill="rgb(208,200,26)"/><text x="337.00" y="382.50"></text></g><g><title>0x7f293ead592c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="335" y="372" width="2" height="15" fill="rgb(240,229,8)"/><text x="338.00" y="382.50"></text></g><g><title>0x7f293ead5945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="372" width="1" height="15" fill="rgb(233,20,18)"/><text x="340.00" y="382.50"></text></g><g><title>0x7f293ead596a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="338" y="372" width="1" height="15" fill="rgb(210,79,49)"/><text x="341.00" y="382.50"></text></g><g><title>0x7f293ead597c (libc-2.29.so) (2 samples, 0.22%)</title><rect x="339" y="372" width="3" height="15" fill="rgb(250,223,13)"/><text x="342.00" y="382.50"></text></g><g><title>0x7f293ead5991 (libc-2.29.so) (6 samples, 0.66%)</title><rect x="342" y="372" width="8" height="15" fill="rgb(249,179,43)"/><text x="345.00" y="382.50"></text></g><g><title>0x7f293ead5998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="350" y="372" width="1" height="15" fill="rgb(240,1,34)"/><text x="353.00" y="382.50"></text></g><g><title>0x7f293ead5a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="351" y="372" width="1" height="15" fill="rgb(250,64,44)"/><text x="354.00" y="382.50"></text></g><g><title>0x7f293ead5bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="352" y="372" width="1" height="15" fill="rgb(229,122,18)"/><text x="355.00" y="382.50"></text></g><g><title>0x7f293ead5be8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="353" y="372" width="2" height="15" fill="rgb(209,118,11)"/><text x="356.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.44%)</title><rect x="355" y="372" width="5" height="15" fill="rgb(205,173,31)"/><text x="358.00" y="382.50"></text></g><g><title>0x7f293ead5902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="368" y="388" width="1" height="15" fill="rgb(228,132,30)"/><text x="371.00" y="398.50"></text></g><g><title>0x7f293ead5904 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="369" y="388" width="1" height="15" fill="rgb(216,175,54)"/><text x="372.00" y="398.50"></text></g><g><title>0x7f293ead591c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="370" y="388" width="1" height="15" fill="rgb(251,197,44)"/><text x="373.00" y="398.50"></text></g><g><title>0x7f293ead5929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="371" y="388" width="2" height="15" fill="rgb(238,98,48)"/><text x="374.00" y="398.50"></text></g><g><title>0x7f293ead596a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="373" y="388" width="2" height="15" fill="rgb(210,195,40)"/><text x="376.00" y="398.50"></text></g><g><title>0x7f293ead5991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="375" y="388" width="2" height="15" fill="rgb(242,31,48)"/><text x="378.00" y="398.50"></text></g><g><title>0x7f293ead5998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="377" y="388" width="1" height="15" fill="rgb(232,136,17)"/><text x="380.00" y="398.50"></text></g><g><title>0x7f293ead5a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="378" y="388" width="1" height="15" fill="rgb(211,116,44)"/><text x="381.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 5.13%)</title><rect x="321" y="356" width="61" height="15" fill="rgb(213,78,47)"/><text x="324.00" y="366.50">std::_..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.86%)</title><rect x="360" y="372" width="22" height="15" fill="rgb(235,140,11)"/><text x="363.00" y="382.50">s..</text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="379" y="388" width="3" height="15" fill="rgb(218,218,2)"/><text x="382.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (218 samples, 23.80%)</title><rect x="113" y="340" width="280" height="15" fill="rgb(253,161,14)"/><text x="116.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifi..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (9 samples, 0.98%)</title><rect x="382" y="356" width="11" height="15" fill="rgb(236,181,54)"/><text x="385.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 30.46%)</title><rect x="37" y="260" width="359" height="15" fill="rgb(236,67,29)"/><text x="40.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 30.46%)</title><rect x="37" y="276" width="359" height="15" fill="rgb(235,73,21)"/><text x="40.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 30.46%)</title><rect x="37" y="292" width="359" height="15" fill="rgb(228,201,0)"/><text x="40.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 30.46%)</title><rect x="37" y="308" width="359" height="15" fill="rgb(247,122,24)"/><text x="40.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 30.46%)</title><rect x="37" y="324" width="359" height="15" fill="rgb(212,91,0)"/><text x="40.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="393" y="340" width="3" height="15" fill="rgb(245,74,33)"/><text x="396.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="395" y="356" width="1" height="15" fill="rgb(245,85,31)"/><text x="398.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="395" y="372" width="1" height="15" fill="rgb(224,222,38)"/><text x="398.00" y="382.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="396" y="260" width="3" height="15" fill="rgb(251,101,44)"/><text x="399.00" y="270.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="399" y="260" width="1" height="15" fill="rgb(214,221,24)"/><text x="402.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="399" y="276" width="1" height="15" fill="rgb(230,155,17)"/><text x="402.00" y="286.50"></text></g><g><title>0x7f293eaf6124 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="399" y="292" width="1" height="15" fill="rgb(212,73,12)"/><text x="402.00" y="302.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (287 samples, 31.33%)</title><rect x="31" y="100" width="370" height="15" fill="rgb(250,111,29)"/><text x="34.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_100..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (285 samples, 31.11%)</title><rect x="34" y="116" width="367" height="15" fill="rgb(244,126,31)"/><text x="37.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (285 samples, 31.11%)</title><rect x="34" y="132" width="367" height="15" fill="rgb(225,175,6)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (285 samples, 31.11%)</title><rect x="34" y="148" width="367" height="15" fill="rgb(233,164,2)"/><text x="37.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (285 samples, 31.11%)</title><rect x="34" y="164" width="367" height="15" fill="rgb(220,194,19)"/><text x="37.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (283 samples, 30.90%)</title><rect x="37" y="180" width="364" height="15" fill="rgb(215,186,18)"/><text x="40.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (283 samples, 30.90%)</title><rect x="37" y="196" width="364" height="15" fill="rgb(239,22,9)"/><text x="40.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (283 samples, 30.90%)</title><rect x="37" y="212" width="364" height="15" fill="rgb(246,138,44)"/><text x="40.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (283 samples, 30.90%)</title><rect x="37" y="228" width="364" height="15" fill="rgb(212,178,8)"/><text x="40.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunti..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (283 samples, 30.90%)</title><rect x="37" y="244" width="364" height="15" fill="rgb(250,62,40)"/><text x="40.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::m..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="400" y="260" width="1" height="15" fill="rgb(225,143,5)"/><text x="403.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="400" y="276" width="1" height="15" fill="rgb(238,34,19)"/><text x="403.00" y="286.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (288 samples, 31.44%)</title><rect x="31" y="68" width="371" height="15" fill="rgb(221,141,45)"/><text x="34.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_m_cl..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (288 samples, 31.44%)</title><rect x="31" y="84" width="371" height="15" fill="rgb(235,146,19)"/><text x="34.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="401" y="100" width="1" height="15" fill="rgb(233,123,38)"/><text x="404.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="401" y="116" width="1" height="15" fill="rgb(252,180,11)"/><text x="404.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="401" y="132" width="1" height="15" fill="rgb(244,6,52)"/><text x="404.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="401" y="148" width="1" height="15" fill="rgb(225,148,35)"/><text x="404.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="401" y="164" width="1" height="15" fill="rgb(225,131,20)"/><text x="404.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.11%)</title><rect x="401" y="180" width="1" height="15" fill="rgb(247,41,52)"/><text x="404.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py) (1 samples, 0.11%)</title><rect x="401" y="196" width="1" height="15" fill="rgb(219,152,6)"/><text x="404.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py) (1 samples, 0.11%)</title><rect x="401" y="212" width="1" height="15" fill="rgb(207,33,49)"/><text x="404.00" y="222.50"></text></g><g><title>0x7f28fe793ff9 (?) (1 samples, 0.11%)</title><rect x="401" y="228" width="1" height="15" fill="rgb(217,214,45)"/><text x="404.00" y="238.50"></text></g><g><title>0x7f28fe78e57e (?) (1 samples, 0.11%)</title><rect x="401" y="244" width="1" height="15" fill="rgb(217,117,34)"/><text x="404.00" y="254.50"></text></g><g><title>0x7f28fe7bbc57 (?) (1 samples, 0.11%)</title><rect x="401" y="260" width="1" height="15" fill="rgb(248,10,32)"/><text x="404.00" y="270.50"></text></g><g><title>0x7f28febf7e6f (?) (1 samples, 0.11%)</title><rect x="401" y="276" width="1" height="15" fill="rgb(227,210,23)"/><text x="404.00" y="286.50"></text></g><g><title>0x7f28fec1e354 (?) (1 samples, 0.11%)</title><rect x="401" y="292" width="1" height="15" fill="rgb(247,125,27)"/><text x="404.00" y="302.50"></text></g><g><title>0x7f28fec1df1b (?) (1 samples, 0.11%)</title><rect x="401" y="308" width="1" height="15" fill="rgb(223,215,9)"/><text x="404.00" y="318.50"></text></g><g><title>0x7f28fec19bbe (?) (1 samples, 0.11%)</title><rect x="401" y="324" width="1" height="15" fill="rgb(232,222,44)"/><text x="404.00" y="334.50"></text></g><g><title>0x7f28fecdd13a (?) (1 samples, 0.11%)</title><rect x="401" y="340" width="1" height="15" fill="rgb(227,89,26)"/><text x="404.00" y="350.50"></text></g><g><title>0x7f28fece01ea (?) (1 samples, 0.11%)</title><rect x="401" y="356" width="1" height="15" fill="rgb(235,139,2)"/><text x="404.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="447" y="196" width="2" height="15" fill="rgb(248,17,40)"/><text x="450.00" y="206.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.11%)</title><rect x="455" y="276" width="2" height="15" fill="rgb(245,38,2)"/><text x="458.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.11%)</title><rect x="455" y="292" width="2" height="15" fill="rgb(209,160,24)"/><text x="458.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="455" y="308" width="2" height="15" fill="rgb(233,150,31)"/><text x="458.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(209,13,37)"/><text x="458.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(206,58,36)"/><text x="458.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (3 samples, 0.33%)</title><rect x="455" y="212" width="4" height="15" fill="rgb(249,95,53)"/><text x="458.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.33%)</title><rect x="455" y="228" width="4" height="15" fill="rgb(232,90,41)"/><text x="458.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (3 samples, 0.33%)</title><rect x="455" y="244" width="4" height="15" fill="rgb(229,36,24)"/><text x="458.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.33%)</title><rect x="455" y="260" width="4" height="15" fill="rgb(222,8,51)"/><text x="458.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.22%)</title><rect x="457" y="276" width="2" height="15" fill="rgb(224,134,18)"/><text x="460.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (2 samples, 0.22%)</title><rect x="457" y="292" width="2" height="15" fill="rgb(249,85,24)"/><text x="460.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (2 samples, 0.22%)</title><rect x="457" y="308" width="2" height="15" fill="rgb(210,183,52)"/><text x="460.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (2 samples, 0.22%)</title><rect x="457" y="324" width="2" height="15" fill="rgb(229,19,27)"/><text x="460.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="458" y="340" width="1" height="15" fill="rgb(222,78,14)"/><text x="461.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.11%)</title><rect x="459" y="212" width="1" height="15" fill="rgb(247,8,48)"/><text x="462.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (2 samples, 0.22%)</title><rect x="460" y="212" width="3" height="15" fill="rgb(252,218,42)"/><text x="463.00" y="222.50"></text></g><g><title>array_add (number.c) (2 samples, 0.22%)</title><rect x="460" y="228" width="3" height="15" fill="rgb(234,159,14)"/><text x="463.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.22%)</title><rect x="460" y="244" width="3" height="15" fill="rgb(253,58,38)"/><text x="463.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.22%)</title><rect x="460" y="260" width="3" height="15" fill="rgb(238,75,25)"/><text x="463.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="460" y="276" width="3" height="15" fill="rgb(217,172,6)"/><text x="463.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="460" y="292" width="3" height="15" fill="rgb(234,35,22)"/><text x="463.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.22%)</title><rect x="460" y="308" width="3" height="15" fill="rgb(229,39,17)"/><text x="463.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (2 samples, 0.22%)</title><rect x="460" y="324" width="3" height="15" fill="rgb(239,154,8)"/><text x="463.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (2 samples, 0.22%)</title><rect x="460" y="340" width="3" height="15" fill="rgb(222,111,42)"/><text x="463.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.22%)</title><rect x="460" y="356" width="3" height="15" fill="rgb(253,169,9)"/><text x="463.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.11%)</title><rect x="463" y="212" width="1" height="15" fill="rgb(218,153,34)"/><text x="466.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="463" y="228" width="1" height="15" fill="rgb(231,185,38)"/><text x="466.00" y="238.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.11%)</title><rect x="477" y="244" width="1" height="15" fill="rgb(222,184,12)"/><text x="480.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="478" y="260" width="2" height="15" fill="rgb(248,44,1)"/><text x="481.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="478" y="276" width="2" height="15" fill="rgb(253,113,29)"/><text x="481.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="478" y="292" width="2" height="15" fill="rgb(222,222,10)"/><text x="481.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="478" y="308" width="2" height="15" fill="rgb(230,61,49)"/><text x="481.00" y="318.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="482" y="276" width="3" height="15" fill="rgb(223,173,37)"/><text x="485.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="484" y="292" width="1" height="15" fill="rgb(213,24,50)"/><text x="487.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="484" y="308" width="1" height="15" fill="rgb(214,20,18)"/><text x="487.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="485" y="276" width="1" height="15" fill="rgb(215,108,22)"/><text x="488.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="485" y="292" width="1" height="15" fill="rgb(246,31,8)"/><text x="488.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.22%)</title><rect x="490" y="324" width="3" height="15" fill="rgb(232,226,15)"/><text x="493.00" y="334.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="491" y="340" width="2" height="15" fill="rgb(224,80,41)"/><text x="494.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.44%)</title><rect x="489" y="308" width="5" height="15" fill="rgb(239,197,31)"/><text x="492.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.11%)</title><rect x="493" y="324" width="1" height="15" fill="rgb(208,217,24)"/><text x="496.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.66%)</title><rect x="494" y="308" width="8" height="15" fill="rgb(236,172,21)"/><text x="497.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.55%)</title><rect x="495" y="324" width="7" height="15" fill="rgb(244,222,9)"/><text x="498.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.55%)</title><rect x="495" y="340" width="7" height="15" fill="rgb(235,32,26)"/><text x="498.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.44%)</title><rect x="496" y="356" width="6" height="15" fill="rgb(253,118,41)"/><text x="499.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 1.42%)</title><rect x="486" y="276" width="17" height="15" fill="rgb(250,209,42)"/><text x="489.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 1.42%)</title><rect x="486" y="292" width="17" height="15" fill="rgb(225,91,36)"/><text x="489.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="502" y="308" width="1" height="15" fill="rgb(247,143,22)"/><text x="505.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (29 samples, 3.17%)</title><rect x="468" y="228" width="37" height="15" fill="rgb(233,3,25)"/><text x="471.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 2.29%)</title><rect x="478" y="244" width="27" height="15" fill="rgb(247,7,13)"/><text x="481.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 2.18%)</title><rect x="480" y="260" width="25" height="15" fill="rgb(209,200,28)"/><text x="483.00" y="270.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="503" y="276" width="2" height="15" fill="rgb(216,120,52)"/><text x="506.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="505" y="228" width="2" height="15" fill="rgb(238,149,23)"/><text x="508.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="505" y="244" width="2" height="15" fill="rgb(224,13,52)"/><text x="508.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="505" y="260" width="2" height="15" fill="rgb(253,112,38)"/><text x="508.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="505" y="276" width="2" height="15" fill="rgb(241,154,6)"/><text x="508.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.11%)</title><rect x="507" y="228" width="1" height="15" fill="rgb(228,83,30)"/><text x="510.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.11%)</title><rect x="507" y="244" width="1" height="15" fill="rgb(221,105,54)"/><text x="510.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.11%)</title><rect x="507" y="260" width="1" height="15" fill="rgb(207,181,15)"/><text x="510.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="507" y="276" width="1" height="15" fill="rgb(225,155,48)"/><text x="510.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="507" y="292" width="1" height="15" fill="rgb(243,35,0)"/><text x="510.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="507" y="308" width="1" height="15" fill="rgb(232,142,41)"/><text x="510.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="507" y="324" width="1" height="15" fill="rgb(227,205,51)"/><text x="510.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="507" y="340" width="1" height="15" fill="rgb(205,172,37)"/><text x="510.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="507" y="356" width="1" height="15" fill="rgb(241,12,53)"/><text x="510.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="507" y="372" width="1" height="15" fill="rgb(246,30,44)"/><text x="510.00" y="382.50"></text></g><g><title>0x7f293ead6b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="507" y="388" width="1" height="15" fill="rgb(234,72,51)"/><text x="510.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="508" y="260" width="1" height="15" fill="rgb(246,10,3)"/><text x="511.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="508" y="276" width="1" height="15" fill="rgb(236,110,53)"/><text x="511.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="508" y="292" width="1" height="15" fill="rgb(238,109,6)"/><text x="511.00" y="302.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="511" y="276" width="1" height="15" fill="rgb(225,83,47)"/><text x="514.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="511" y="292" width="1" height="15" fill="rgb(242,119,21)"/><text x="514.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="511" y="308" width="1" height="15" fill="rgb(231,128,30)"/><text x="514.00" y="318.50"></text></g><g><title>0x7f293dcf84f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="512" y="340" width="1" height="15" fill="rgb(228,161,45)"/><text x="515.00" y="350.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.22%)</title><rect x="512" y="324" width="2" height="15" fill="rgb(232,214,47)"/><text x="515.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.11%)</title><rect x="513" y="340" width="1" height="15" fill="rgb(224,105,26)"/><text x="516.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.33%)</title><rect x="512" y="292" width="4" height="15" fill="rgb(210,180,38)"/><text x="515.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.33%)</title><rect x="512" y="308" width="4" height="15" fill="rgb(218,19,33)"/><text x="515.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="514" y="324" width="2" height="15" fill="rgb(212,146,38)"/><text x="517.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="514" y="340" width="2" height="15" fill="rgb(234,80,39)"/><text x="517.00" y="350.50"></text></g><g><title>0x7f293ead7700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="514" y="356" width="2" height="15" fill="rgb(211,180,33)"/><text x="517.00" y="366.50"></text></g><g><title>0x7f293ead4aa4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="514" y="372" width="2" height="15" fill="rgb(244,99,31)"/><text x="517.00" y="382.50"></text></g><g><title>0x7f293ec57979 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="520" y="324" width="3" height="15" fill="rgb(240,6,41)"/><text x="523.00" y="334.50"></text></g><g><title>0x7f293ec57997 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="523" y="324" width="3" height="15" fill="rgb(214,189,30)"/><text x="526.00" y="334.50"></text></g><g><title>0x7f293ec579a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="526" y="324" width="1" height="15" fill="rgb(231,129,25)"/><text x="529.00" y="334.50"></text></g><g><title>0x7f293ec579af (libm-2.29.so) (1 samples, 0.11%)</title><rect x="527" y="324" width="2" height="15" fill="rgb(214,127,42)"/><text x="530.00" y="334.50"></text></g><g><title>0x7f293ec579bd (libm-2.29.so) (1 samples, 0.11%)</title><rect x="529" y="324" width="1" height="15" fill="rgb(246,213,14)"/><text x="532.00" y="334.50"></text></g><g><title>0x7f293ec579c8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="530" y="324" width="1" height="15" fill="rgb(246,134,28)"/><text x="533.00" y="334.50"></text></g><g><title>0x7f293ec579cc (libm-2.29.so) (2 samples, 0.22%)</title><rect x="531" y="324" width="3" height="15" fill="rgb(238,61,37)"/><text x="534.00" y="334.50"></text></g><g><title>0x7f293ec579e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="534" y="324" width="1" height="15" fill="rgb(237,52,34)"/><text x="537.00" y="334.50"></text></g><g><title>0x7f293ec579f8 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="535" y="324" width="3" height="15" fill="rgb(211,17,15)"/><text x="538.00" y="334.50"></text></g><g><title>0x7f293ec57a19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="538" y="324" width="1" height="15" fill="rgb(221,27,54)"/><text x="541.00" y="334.50"></text></g><g><title>0x7f293ec57a1d (libm-2.29.so) (3 samples, 0.33%)</title><rect x="539" y="324" width="4" height="15" fill="rgb(253,118,38)"/><text x="542.00" y="334.50"></text></g><g><title>0x7f293ec57a21 (libm-2.29.so) (4 samples, 0.44%)</title><rect x="543" y="324" width="5" height="15" fill="rgb(218,75,41)"/><text x="546.00" y="334.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="548" y="324" width="1" height="15" fill="rgb(234,178,42)"/><text x="551.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src) (27 samples, 2.95%)</title><rect x="516" y="308" width="35" height="15" fill="rgb(233,27,25)"/><text x="519.00" y="318.50">FL..</text></g><g><title>npy_logf (npy_math_internal.h.src) (1 samples, 0.11%)</title><rect x="549" y="324" width="2" height="15" fill="rgb(249,110,37)"/><text x="552.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (34 samples, 3.71%)</title><rect x="508" y="228" width="44" height="15" fill="rgb(248,202,33)"/><text x="511.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (34 samples, 3.71%)</title><rect x="508" y="244" width="44" height="15" fill="rgb(213,224,5)"/><text x="511.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (33 samples, 3.60%)</title><rect x="509" y="260" width="43" height="15" fill="rgb(253,23,32)"/><text x="512.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (31 samples, 3.38%)</title><rect x="512" y="276" width="40" height="15" fill="rgb(229,29,38)"/><text x="515.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (28 samples, 3.06%)</title><rect x="516" y="292" width="36" height="15" fill="rgb(221,146,50)"/><text x="519.00" y="302.50">tri..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="551" y="308" width="1" height="15" fill="rgb(211,63,30)"/><text x="554.00" y="318.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="556" y="260" width="1" height="15" fill="rgb(245,29,11)"/><text x="559.00" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="561" y="308" width="1" height="15" fill="rgb(241,135,49)"/><text x="564.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="562" y="356" width="1" height="15" fill="rgb(206,193,8)"/><text x="565.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="562" y="372" width="1" height="15" fill="rgb(212,57,27)"/><text x="565.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="562" y="388" width="1" height="15" fill="rgb(248,17,33)"/><text x="565.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="562" y="324" width="3" height="15" fill="rgb(228,81,34)"/><text x="565.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="562" y="340" width="3" height="15" fill="rgb(247,60,1)"/><text x="565.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="563" y="356" width="2" height="15" fill="rgb(230,126,9)"/><text x="566.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="571" y="388" width="1" height="15" fill="rgb(246,22,10)"/><text x="574.00" y="398.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="572" y="388" width="2" height="15" fill="rgb(217,90,44)"/><text x="575.00" y="398.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="574" y="388" width="1" height="15" fill="rgb(229,56,48)"/><text x="577.00" y="398.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="574" y="404" width="1" height="15" fill="rgb(212,77,8)"/><text x="577.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="575" y="388" width="1" height="15" fill="rgb(239,222,5)"/><text x="578.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.55%)</title><rect x="571" y="372" width="7" height="15" fill="rgb(226,58,30)"/><text x="574.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="576" y="388" width="2" height="15" fill="rgb(235,199,46)"/><text x="579.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="578" y="372" width="1" height="15" fill="rgb(220,44,44)"/><text x="581.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="578" y="388" width="1" height="15" fill="rgb(229,105,52)"/><text x="581.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="578" y="404" width="1" height="15" fill="rgb(226,200,18)"/><text x="581.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="578" y="420" width="1" height="15" fill="rgb(225,21,26)"/><text x="581.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="578" y="436" width="1" height="15" fill="rgb(205,192,23)"/><text x="581.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="578" y="452" width="1" height="15" fill="rgb(216,8,11)"/><text x="581.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="578" y="468" width="1" height="15" fill="rgb(209,170,30)"/><text x="581.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="578" y="484" width="1" height="15" fill="rgb(207,88,24)"/><text x="581.00" y="494.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="579" y="372" width="1" height="15" fill="rgb(247,135,50)"/><text x="582.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="579" y="388" width="1" height="15" fill="rgb(229,150,32)"/><text x="582.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="579" y="404" width="1" height="15" fill="rgb(223,86,12)"/><text x="582.00" y="414.50"></text></g><g><title>_aligned_cast_longlong_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="579" y="420" width="1" height="15" fill="rgb(218,180,29)"/><text x="582.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (8 samples, 0.87%)</title><rect x="585" y="388" width="11" height="15" fill="rgb(213,129,26)"/><text x="588.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (3 samples, 0.33%)</title><rect x="592" y="404" width="4" height="15" fill="rgb(248,176,18)"/><text x="595.00" y="414.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="596" y="388" width="1" height="15" fill="rgb(223,102,44)"/><text x="599.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (41 samples, 4.48%)</title><rect x="552" y="228" width="53" height="15" fill="rgb(229,48,40)"/><text x="555.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (39 samples, 4.26%)</title><rect x="554" y="244" width="51" height="15" fill="rgb(252,35,39)"/><text x="557.00" y="254.50">sum (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (37 samples, 4.04%)</title><rect x="557" y="260" width="48" height="15" fill="rgb(220,100,6)"/><text x="560.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (37 samples, 4.04%)</title><rect x="557" y="276" width="48" height="15" fill="rgb(229,134,43)"/><text x="560.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (35 samples, 3.82%)</title><rect x="560" y="292" width="45" height="15" fill="rgb(225,179,35)"/><text x="563.00" y="302.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c) (33 samples, 3.60%)</title><rect x="562" y="308" width="43" height="15" fill="rgb(216,155,47)"/><text x="565.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (31 samples, 3.38%)</title><rect x="565" y="324" width="40" height="15" fill="rgb(213,227,40)"/><text x="568.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (28 samples, 3.06%)</title><rect x="569" y="340" width="36" height="15" fill="rgb(251,64,49)"/><text x="572.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (28 samples, 3.06%)</title><rect x="569" y="356" width="36" height="15" fill="rgb(254,9,28)"/><text x="572.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (19 samples, 2.07%)</title><rect x="580" y="372" width="25" height="15" fill="rgb(222,21,52)"/><text x="583.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.66%)</title><rect x="597" y="388" width="8" height="15" fill="rgb(230,159,34)"/><text x="600.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="603" y="404" width="2" height="15" fill="rgb(235,100,10)"/><text x="606.00" y="414.50"></text></g><g><title>0x7f28ff633422 (?) (1 samples, 0.11%)</title><rect x="606" y="244" width="1" height="15" fill="rgb(235,44,37)"/><text x="609.00" y="254.50"></text></g><g><title>0x7f28ff63989e (?) (1 samples, 0.11%)</title><rect x="606" y="260" width="1" height="15" fill="rgb(236,141,51)"/><text x="609.00" y="270.50"></text></g><g><title>0x7f28ff63974f (?) (1 samples, 0.11%)</title><rect x="606" y="276" width="1" height="15" fill="rgb(225,196,45)"/><text x="609.00" y="286.50"></text></g><g><title>0x7f28ff63fa3a (?) (1 samples, 0.11%)</title><rect x="606" y="292" width="1" height="15" fill="rgb(205,120,14)"/><text x="609.00" y="302.50"></text></g><g><title>0x7f2908a9bab9 (?) (1 samples, 0.11%)</title><rect x="606" y="308" width="1" height="15" fill="rgb(220,47,16)"/><text x="609.00" y="318.50"></text></g><g><title>0x7f2908a9cea9 (?) (1 samples, 0.11%)</title><rect x="606" y="324" width="1" height="15" fill="rgb(219,147,18)"/><text x="609.00" y="334.50"></text></g><g><title>0x7f2908a9cea0 (libgomp.so.1.0.0) (4 samples, 0.44%)</title><rect x="607" y="468" width="5" height="15" fill="rgb(207,170,8)"/><text x="610.00" y="478.50"></text></g><g><title>0x7f2908a9cea9 (libgomp.so.1.0.0) (16 samples, 1.75%)</title><rect x="612" y="468" width="21" height="15" fill="rgb(249,11,16)"/><text x="615.00" y="478.50"></text></g><g><title>0x7f2908a9ceab (libgomp.so.1.0.0) (12 samples, 1.31%)</title><rect x="633" y="468" width="15" height="15" fill="rgb(235,160,48)"/><text x="636.00" y="478.50"></text></g><g><title>0x7f2908a9bab9 (libgomp.so.1.0.0) (46 samples, 5.02%)</title><rect x="607" y="452" width="59" height="15" fill="rgb(231,59,0)"/><text x="610.00" y="462.50">0x7f29..</text></g><g><title>0x7f2908a9cead (libgomp.so.1.0.0) (14 samples, 1.53%)</title><rect x="648" y="468" width="18" height="15" fill="rgb(214,164,12)"/><text x="651.00" y="478.50"></text></g><g><title>0x7f2908a9ccf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="666" y="484" width="2" height="15" fill="rgb(240,187,15)"/><text x="669.00" y="494.50"></text></g><g><title>0x7f2908a9ccf9 (libgomp.so.1.0.0) (5 samples, 0.55%)</title><rect x="668" y="484" width="6" height="15" fill="rgb(252,196,50)"/><text x="671.00" y="494.50"></text></g><g><title>0x7f2908a9ccfb (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="674" y="484" width="2" height="15" fill="rgb(215,164,37)"/><text x="677.00" y="494.50"></text></g><g><title>0x7f2908a9adaa (libgomp.so.1.0.0) (13 samples, 1.42%)</title><rect x="666" y="468" width="17" height="15" fill="rgb(211,157,34)"/><text x="669.00" y="478.50"></text></g><g><title>0x7f2908a9ccfd (libgomp.so.1.0.0) (6 samples, 0.66%)</title><rect x="676" y="484" width="7" height="15" fill="rgb(239,219,12)"/><text x="679.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (183 samples, 19.98%)</title><rect x="449" y="196" width="236" height="15" fill="rgb(228,81,14)"/><text x="452.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (171 samples, 18.67%)</title><rect x="464" y="212" width="221" height="15" fill="rgb(207,106,43)"/><text x="467.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (62 samples, 6.77%)</title><rect x="605" y="228" width="80" height="15" fill="rgb(212,74,8)"/><text x="608.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (60 samples, 6.55%)</title><rect x="607" y="244" width="78" height="15" fill="rgb(207,113,31)"/><text x="610.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (60 samples, 6.55%)</title><rect x="607" y="260" width="78" height="15" fill="rgb(224,105,33)"/><text x="610.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (60 samples, 6.55%)</title><rect x="607" y="276" width="78" height="15" fill="rgb(252,69,41)"/><text x="610.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (60 samples, 6.55%)</title><rect x="607" y="292" width="78" height="15" fill="rgb(209,101,36)"/><text x="610.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (60 samples, 6.55%)</title><rect x="607" y="308" width="78" height="15" fill="rgb(252,189,3)"/><text x="610.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (60 samples, 6.55%)</title><rect x="607" y="324" width="78" height="15" fill="rgb(209,223,1)"/><text x="610.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (60 samples, 6.55%)</title><rect x="607" y="340" width="78" height="15" fill="rgb(242,108,2)"/><text x="610.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h) (60 samples, 6.55%)</title><rect x="607" y="356" width="78" height="15" fill="rgb(231,8,13)"/><text x="610.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (60 samples, 6.55%)</title><rect x="607" y="372" width="78" height="15" fill="rgb(254,115,13)"/><text x="610.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h) (60 samples, 6.55%)</title><rect x="607" y="388" width="78" height="15" fill="rgb(237,85,54)"/><text x="610.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (60 samples, 6.55%)</title><rect x="607" y="404" width="78" height="15" fill="rgb(231,221,41)"/><text x="610.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (60 samples, 6.55%)</title><rect x="607" y="420" width="78" height="15" fill="rgb(212,131,29)"/><text x="610.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (60 samples, 6.55%)</title><rect x="607" y="436" width="78" height="15" fill="rgb(234,218,19)"/><text x="610.00" y="446.50">pybind11:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (14 samples, 1.53%)</title><rect x="666" y="452" width="19" height="15" fill="rgb(235,158,43)"/><text x="669.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (1 samples, 0.11%)</title><rect x="683" y="468" width="2" height="15" fill="rgb(223,105,40)"/><text x="686.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="683" y="484" width="2" height="15" fill="rgb(235,107,21)"/><text x="686.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 0.11%)</title><rect x="683" y="500" width="2" height="15" fill="rgb(254,40,41)"/><text x="686.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (1 samples, 0.11%)</title><rect x="683" y="516" width="2" height="15" fill="rgb(218,201,23)"/><text x="686.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="683" y="532" width="2" height="15" fill="rgb(238,112,48)"/><text x="686.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="683" y="548" width="2" height="15" fill="rgb(214,208,17)"/><text x="686.00" y="558.50"></text></g><g><title>0x7f293ead7700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="683" y="564" width="2" height="15" fill="rgb(254,76,39)"/><text x="686.00" y="574.50"></text></g><g><title>0x7f293ead4acd (libc-2.29.so) (1 samples, 0.11%)</title><rect x="683" y="580" width="2" height="15" fill="rgb(248,19,51)"/><text x="686.00" y="590.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (8 samples, 0.87%)</title><rect x="699" y="420" width="10" height="15" fill="rgb(226,176,38)"/><text x="702.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="709" y="420" width="1" height="15" fill="rgb(220,26,54)"/><text x="712.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="709" y="436" width="1" height="15" fill="rgb(222,181,17)"/><text x="712.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="709" y="452" width="1" height="15" fill="rgb(254,12,54)"/><text x="712.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (5 samples, 0.55%)</title><rect x="710" y="468" width="7" height="15" fill="rgb(219,75,16)"/><text x="713.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.76%)</title><rect x="710" y="420" width="9" height="15" fill="rgb(242,49,25)"/><text x="713.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.76%)</title><rect x="710" y="436" width="9" height="15" fill="rgb(215,1,46)"/><text x="713.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.76%)</title><rect x="710" y="452" width="9" height="15" fill="rgb(254,71,0)"/><text x="713.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (2 samples, 0.22%)</title><rect x="717" y="468" width="2" height="15" fill="rgb(235,104,2)"/><text x="720.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 2.18%)</title><rect x="699" y="388" width="25" height="15" fill="rgb(235,35,30)"/><text x="702.00" y="398.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (20 samples, 2.18%)</title><rect x="699" y="404" width="25" height="15" fill="rgb(254,120,21)"/><text x="702.00" y="414.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (4 samples, 0.44%)</title><rect x="719" y="420" width="5" height="15" fill="rgb(221,195,0)"/><text x="722.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (4 samples, 0.44%)</title><rect x="719" y="436" width="5" height="15" fill="rgb(227,113,44)"/><text x="722.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (2 samples, 0.22%)</title><rect x="722" y="452" width="2" height="15" fill="rgb(239,171,9)"/><text x="725.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (2 samples, 0.22%)</title><rect x="722" y="468" width="2" height="15" fill="rgb(249,219,24)"/><text x="725.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (22 samples, 2.40%)</title><rect x="697" y="340" width="29" height="15" fill="rgb(223,85,12)"/><text x="700.00" y="350.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 2.29%)</title><rect x="699" y="356" width="27" height="15" fill="rgb(232,179,38)"/><text x="702.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (21 samples, 2.29%)</title><rect x="699" y="372" width="27" height="15" fill="rgb(233,21,38)"/><text x="702.00" y="382.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="724" y="388" width="2" height="15" fill="rgb(206,39,1)"/><text x="727.00" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="730" y="356" width="3" height="15" fill="rgb(222,139,34)"/><text x="733.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="737" y="404" width="2" height="15" fill="rgb(233,195,51)"/><text x="740.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="737" y="420" width="2" height="15" fill="rgb(246,185,54)"/><text x="740.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="737" y="436" width="2" height="15" fill="rgb(211,181,51)"/><text x="740.00" y="446.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="741" y="436" width="1" height="15" fill="rgb(238,12,17)"/><text x="744.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (8 samples, 0.87%)</title><rect x="733" y="356" width="11" height="15" fill="rgb(242,10,3)"/><text x="736.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 0.76%)</title><rect x="735" y="372" width="9" height="15" fill="rgb(226,108,52)"/><text x="738.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 0.76%)</title><rect x="735" y="388" width="9" height="15" fill="rgb(239,207,5)"/><text x="738.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.44%)</title><rect x="739" y="404" width="5" height="15" fill="rgb(241,19,37)"/><text x="742.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.33%)</title><rect x="740" y="420" width="4" height="15" fill="rgb(210,162,42)"/><text x="743.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="742" y="436" width="2" height="15" fill="rgb(252,143,41)"/><text x="745.00" y="446.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="745" y="388" width="1" height="15" fill="rgb(217,6,12)"/><text x="748.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="746" y="388" width="3" height="15" fill="rgb(233,47,50)"/><text x="749.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="748" y="404" width="1" height="15" fill="rgb(221,195,22)"/><text x="751.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="748" y="420" width="1" height="15" fill="rgb(207,183,38)"/><text x="751.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="748" y="436" width="1" height="15" fill="rgb(238,115,25)"/><text x="751.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.55%)</title><rect x="744" y="372" width="6" height="15" fill="rgb(241,205,40)"/><text x="747.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="749" y="388" width="1" height="15" fill="rgb(213,85,51)"/><text x="752.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="749" y="404" width="1" height="15" fill="rgb(251,159,34)"/><text x="752.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="749" y="420" width="1" height="15" fill="rgb(247,71,41)"/><text x="752.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="749" y="436" width="1" height="15" fill="rgb(212,130,25)"/><text x="752.00" y="446.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="749" y="452" width="1" height="15" fill="rgb(237,81,40)"/><text x="752.00" y="462.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (271 samples, 29.59%)</title><rect x="402" y="164" width="350" height="15" fill="rgb(219,128,47)"/><text x="405.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (265 samples, 28.93%)</title><rect x="410" y="180" width="342" height="15" fill="rgb(206,212,10)"/><text x="413.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (52 samples, 5.68%)</title><rect x="685" y="196" width="67" height="15" fill="rgb(251,176,2)"/><text x="688.00" y="206.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (50 samples, 5.46%)</title><rect x="687" y="212" width="65" height="15" fill="rgb(213,44,37)"/><text x="690.00" y="222.50">_run (m..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (48 samples, 5.24%)</title><rect x="690" y="228" width="62" height="15" fill="rgb(220,154,25)"/><text x="693.00" y="238.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (47 samples, 5.13%)</title><rect x="691" y="244" width="61" height="15" fill="rgb(220,13,52)"/><text x="694.00" y="254.50">array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (44 samples, 4.80%)</title><rect x="695" y="260" width="57" height="15" fill="rgb(218,29,34)"/><text x="698.00" y="270.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (44 samples, 4.80%)</title><rect x="695" y="276" width="57" height="15" fill="rgb(238,209,52)"/><text x="698.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c) (44 samples, 4.80%)</title><rect x="695" y="292" width="57" height="15" fill="rgb(216,35,41)"/><text x="698.00" y="302.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (44 samples, 4.80%)</title><rect x="695" y="308" width="57" height="15" fill="rgb(250,128,22)"/><text x="698.00" y="318.50">forwar..</text></g><g><title>_clip (numpy/core/_methods.py) (43 samples, 4.69%)</title><rect x="696" y="324" width="56" height="15" fill="rgb(244,193,49)"/><text x="699.00" y="334.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (20 samples, 2.18%)</title><rect x="726" y="340" width="26" height="15" fill="rgb(241,87,19)"/><text x="729.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.66%)</title><rect x="744" y="356" width="8" height="15" fill="rgb(230,189,34)"/><text x="747.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="750" y="372" width="2" height="15" fill="rgb(222,206,18)"/><text x="753.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="750" y="388" width="2" height="15" fill="rgb(217,227,4)"/><text x="753.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="750" y="404" width="2" height="15" fill="rgb(209,142,53)"/><text x="753.00" y="414.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (272 samples, 29.69%)</title><rect x="402" y="68" width="351" height="15" fill="rgb(211,85,45)"/><text x="405.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (272 samples, 29.69%)</title><rect x="402" y="84" width="351" height="15" fill="rgb(210,224,51)"/><text x="405.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (272 samples, 29.69%)</title><rect x="402" y="100" width="351" height="15" fill="rgb(246,181,42)"/><text x="405.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (272 samples, 29.69%)</title><rect x="402" y="116" width="351" height="15" fill="rgb(236,55,15)"/><text x="405.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (272 samples, 29.69%)</title><rect x="402" y="132" width="351" height="15" fill="rgb(246,229,16)"/><text x="405.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (272 samples, 29.69%)</title><rect x="402" y="148" width="351" height="15" fill="rgb(253,199,19)"/><text x="405.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="752" y="164" width="1" height="15" fill="rgb(233,2,26)"/><text x="755.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="752" y="180" width="1" height="15" fill="rgb(251,211,35)"/><text x="755.00" y="190.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="752" y="196" width="1" height="15" fill="rgb(211,177,28)"/><text x="755.00" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="753" y="260" width="1" height="15" fill="rgb(250,43,2)"/><text x="756.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="754" y="324" width="1" height="15" fill="rgb(241,218,50)"/><text x="757.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="754" y="340" width="1" height="15" fill="rgb(249,18,44)"/><text x="757.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="754" y="356" width="1" height="15" fill="rgb(213,108,49)"/><text x="757.00" y="366.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (5 samples, 0.55%)</title><rect x="753" y="196" width="6" height="15" fill="rgb(228,53,1)"/><text x="756.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.55%)</title><rect x="753" y="212" width="6" height="15" fill="rgb(230,85,52)"/><text x="756.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (5 samples, 0.55%)</title><rect x="753" y="228" width="6" height="15" fill="rgb(251,80,30)"/><text x="756.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 0.55%)</title><rect x="753" y="244" width="6" height="15" fill="rgb(225,190,53)"/><text x="756.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.44%)</title><rect x="754" y="260" width="5" height="15" fill="rgb(210,154,31)"/><text x="757.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.44%)</title><rect x="754" y="276" width="5" height="15" fill="rgb(237,54,5)"/><text x="757.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.44%)</title><rect x="754" y="292" width="5" height="15" fill="rgb(232,194,42)"/><text x="757.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.44%)</title><rect x="754" y="308" width="5" height="15" fill="rgb(225,196,17)"/><text x="757.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.33%)</title><rect x="755" y="324" width="4" height="15" fill="rgb(219,114,0)"/><text x="758.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (3 samples, 0.33%)</title><rect x="755" y="340" width="4" height="15" fill="rgb(209,43,38)"/><text x="758.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (3 samples, 0.33%)</title><rect x="755" y="356" width="4" height="15" fill="rgb(205,138,28)"/><text x="758.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (3 samples, 0.33%)</title><rect x="755" y="372" width="4" height="15" fill="rgb(246,188,27)"/><text x="758.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.22%)</title><rect x="757" y="388" width="2" height="15" fill="rgb(244,47,29)"/><text x="760.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.22%)</title><rect x="757" y="404" width="2" height="15" fill="rgb(205,27,27)"/><text x="760.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.22%)</title><rect x="757" y="420" width="2" height="15" fill="rgb(236,25,7)"/><text x="760.00" y="430.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (6 samples, 0.66%)</title><rect x="753" y="164" width="8" height="15" fill="rgb(210,205,44)"/><text x="756.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (6 samples, 0.66%)</title><rect x="753" y="180" width="8" height="15" fill="rgb(234,112,12)"/><text x="756.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="759" y="196" width="2" height="15" fill="rgb(240,123,14)"/><text x="762.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="759" y="212" width="2" height="15" fill="rgb(224,141,38)"/><text x="762.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="759" y="228" width="2" height="15" fill="rgb(212,177,13)"/><text x="762.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="759" y="244" width="2" height="15" fill="rgb(239,191,54)"/><text x="762.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="759" y="260" width="2" height="15" fill="rgb(247,212,40)"/><text x="762.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="759" y="276" width="2" height="15" fill="rgb(254,54,14)"/><text x="762.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="759" y="292" width="2" height="15" fill="rgb(254,4,54)"/><text x="762.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.11%)</title><rect x="759" y="308" width="2" height="15" fill="rgb(231,149,5)"/><text x="762.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="759" y="324" width="2" height="15" fill="rgb(235,111,30)"/><text x="762.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.11%)</title><rect x="759" y="340" width="2" height="15" fill="rgb(233,150,11)"/><text x="762.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.11%)</title><rect x="759" y="356" width="2" height="15" fill="rgb(237,137,3)"/><text x="762.00" y="366.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (1 samples, 0.11%)</title><rect x="770" y="212" width="1" height="15" fill="rgb(209,207,50)"/><text x="773.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="771" y="212" width="1" height="15" fill="rgb(216,100,33)"/><text x="774.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="771" y="228" width="1" height="15" fill="rgb(215,41,43)"/><text x="774.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="771" y="244" width="1" height="15" fill="rgb(241,208,35)"/><text x="774.00" y="254.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="771" y="260" width="1" height="15" fill="rgb(215,26,31)"/><text x="774.00" y="270.50"></text></g><g><title>0x7f293ead5a84 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="771" y="276" width="1" height="15" fill="rgb(231,223,53)"/><text x="774.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="772" y="212" width="1" height="15" fill="rgb(254,187,41)"/><text x="775.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="772" y="228" width="1" height="15" fill="rgb(239,169,37)"/><text x="775.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="772" y="244" width="1" height="15" fill="rgb(218,122,53)"/><text x="775.00" y="254.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.11%)</title><rect x="772" y="260" width="1" height="15" fill="rgb(215,179,22)"/><text x="775.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.11%)</title><rect x="772" y="276" width="1" height="15" fill="rgb(215,209,35)"/><text x="775.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="772" y="292" width="1" height="15" fill="rgb(245,182,40)"/><text x="775.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="772" y="308" width="1" height="15" fill="rgb(206,24,52)"/><text x="775.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="773" y="260" width="2" height="15" fill="rgb(254,123,48)"/><text x="776.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="775" y="260" width="1" height="15" fill="rgb(244,97,46)"/><text x="778.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="775" y="276" width="1" height="15" fill="rgb(218,110,46)"/><text x="778.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="775" y="292" width="1" height="15" fill="rgb(246,208,15)"/><text x="778.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="776" y="292" width="1" height="15" fill="rgb(250,27,0)"/><text x="779.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.44%)</title><rect x="773" y="244" width="6" height="15" fill="rgb(214,47,51)"/><text x="776.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="776" y="260" width="3" height="15" fill="rgb(221,215,29)"/><text x="779.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.22%)</title><rect x="776" y="276" width="3" height="15" fill="rgb(224,75,21)"/><text x="779.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="777" y="292" width="2" height="15" fill="rgb(248,46,15)"/><text x="780.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="777" y="308" width="2" height="15" fill="rgb(232,121,31)"/><text x="780.00" y="318.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (2 samples, 0.22%)</title><rect x="779" y="244" width="2" height="15" fill="rgb(236,212,17)"/><text x="782.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (2 samples, 0.22%)</title><rect x="779" y="260" width="2" height="15" fill="rgb(220,145,2)"/><text x="782.00" y="270.50"></text></g><g><title>array_multiply (number.c) (7 samples, 0.76%)</title><rect x="773" y="212" width="9" height="15" fill="rgb(244,73,5)"/><text x="776.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 0.76%)</title><rect x="773" y="228" width="9" height="15" fill="rgb(231,44,10)"/><text x="776.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="781" y="244" width="1" height="15" fill="rgb(237,229,54)"/><text x="784.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="781" y="260" width="1" height="15" fill="rgb(208,128,41)"/><text x="784.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="781" y="276" width="1" height="15" fill="rgb(245,37,6)"/><text x="784.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="782" y="212" width="2" height="15" fill="rgb(243,72,8)"/><text x="785.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="782" y="228" width="2" height="15" fill="rgb(248,67,11)"/><text x="785.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="782" y="244" width="2" height="15" fill="rgb(254,225,24)"/><text x="785.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="782" y="260" width="2" height="15" fill="rgb(225,154,28)"/><text x="785.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="782" y="276" width="2" height="15" fill="rgb(210,31,11)"/><text x="785.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="782" y="292" width="2" height="15" fill="rgb(212,68,9)"/><text x="785.00" y="302.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="784" y="260" width="1" height="15" fill="rgb(247,92,45)"/><text x="787.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="784" y="276" width="1" height="15" fill="rgb(220,58,30)"/><text x="787.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="784" y="292" width="1" height="15" fill="rgb(205,167,51)"/><text x="787.00" y="302.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="785" y="260" width="1" height="15" fill="rgb(254,127,29)"/><text x="788.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="785" y="276" width="1" height="15" fill="rgb(225,188,17)"/><text x="788.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="785" y="292" width="1" height="15" fill="rgb(211,218,45)"/><text x="788.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.22%)</title><rect x="788" y="340" width="2" height="15" fill="rgb(219,216,14)"/><text x="791.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (3 samples, 0.33%)</title><rect x="788" y="292" width="3" height="15" fill="rgb(218,134,13)"/><text x="791.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (3 samples, 0.33%)</title><rect x="788" y="308" width="3" height="15" fill="rgb(222,210,27)"/><text x="791.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (3 samples, 0.33%)</title><rect x="788" y="324" width="3" height="15" fill="rgb(230,144,31)"/><text x="791.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="790" y="340" width="1" height="15" fill="rgb(228,32,50)"/><text x="793.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="791" y="292" width="3" height="15" fill="rgb(237,206,45)"/><text x="794.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="793" y="308" width="1" height="15" fill="rgb(226,1,48)"/><text x="796.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="793" y="324" width="1" height="15" fill="rgb(237,0,24)"/><text x="796.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="793" y="340" width="1" height="15" fill="rgb(220,115,54)"/><text x="796.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="793" y="356" width="1" height="15" fill="rgb(227,37,21)"/><text x="796.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="793" y="372" width="1" height="15" fill="rgb(239,119,16)"/><text x="796.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="793" y="388" width="1" height="15" fill="rgb(238,218,32)"/><text x="796.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="793" y="404" width="1" height="15" fill="rgb(207,229,4)"/><text x="796.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="793" y="420" width="1" height="15" fill="rgb(247,52,34)"/><text x="796.00" y="430.50"></text></g><g><title>0x7f293ead6b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="793" y="436" width="1" height="15" fill="rgb(247,92,39)"/><text x="796.00" y="446.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="794" y="292" width="1" height="15" fill="rgb(207,226,26)"/><text x="797.00" y="302.50"></text></g><g><title>0x7f293ead5cb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="794" y="308" width="1" height="15" fill="rgb(249,46,35)"/><text x="797.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.44%)</title><rect x="795" y="292" width="5" height="15" fill="rgb(210,85,40)"/><text x="798.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.44%)</title><rect x="795" y="308" width="5" height="15" fill="rgb(225,33,47)"/><text x="798.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.44%)</title><rect x="795" y="324" width="5" height="15" fill="rgb(224,79,47)"/><text x="798.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="799" y="340" width="1" height="15" fill="rgb(212,188,15)"/><text x="802.00" y="350.50"></text></g><g><title>array_subtract (number.c) (14 samples, 1.53%)</title><rect x="784" y="212" width="18" height="15" fill="rgb(247,40,41)"/><text x="787.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 1.53%)</title><rect x="784" y="228" width="18" height="15" fill="rgb(249,227,21)"/><text x="787.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 1.53%)</title><rect x="784" y="244" width="18" height="15" fill="rgb(214,74,0)"/><text x="787.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 1.31%)</title><rect x="786" y="260" width="16" height="15" fill="rgb(225,114,44)"/><text x="789.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (12 samples, 1.31%)</title><rect x="786" y="276" width="16" height="15" fill="rgb(251,201,3)"/><text x="789.00" y="286.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.11%)</title><rect x="800" y="292" width="2" height="15" fill="rgb(210,229,0)"/><text x="803.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="803" y="276" width="3" height="15" fill="rgb(253,171,29)"/><text x="806.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="803" y="292" width="3" height="15" fill="rgb(212,45,17)"/><text x="806.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="803" y="308" width="3" height="15" fill="rgb(250,77,37)"/><text x="806.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="803" y="324" width="3" height="15" fill="rgb(212,48,42)"/><text x="806.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="803" y="340" width="3" height="15" fill="rgb(219,74,32)"/><text x="806.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="806" y="340" width="1" height="15" fill="rgb(233,44,18)"/><text x="809.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="806" y="356" width="1" height="15" fill="rgb(253,221,25)"/><text x="809.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.11%)</title><rect x="806" y="372" width="1" height="15" fill="rgb(211,200,26)"/><text x="809.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="806" y="324" width="2" height="15" fill="rgb(244,133,9)"/><text x="809.00" y="334.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.11%)</title><rect x="807" y="340" width="1" height="15" fill="rgb(209,45,46)"/><text x="810.00" y="350.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="808" y="356" width="1" height="15" fill="rgb(228,211,54)"/><text x="811.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="808" y="372" width="1" height="15" fill="rgb(219,155,52)"/><text x="811.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="808" y="388" width="1" height="15" fill="rgb(233,115,44)"/><text x="811.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="808" y="404" width="1" height="15" fill="rgb(218,165,30)"/><text x="811.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.22%)</title><rect x="808" y="324" width="3" height="15" fill="rgb(210,65,33)"/><text x="811.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.22%)</title><rect x="808" y="340" width="3" height="15" fill="rgb(208,34,12)"/><text x="811.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="809" y="356" width="2" height="15" fill="rgb(208,106,48)"/><text x="812.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="809" y="372" width="2" height="15" fill="rgb(217,89,49)"/><text x="812.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (11 samples, 1.20%)</title><rect x="815" y="340" width="14" height="15" fill="rgb(225,220,11)"/><text x="818.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 0.55%)</title><rect x="822" y="356" width="7" height="15" fill="rgb(212,104,1)"/><text x="825.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (26 samples, 2.84%)</title><rect x="806" y="308" width="33" height="15" fill="rgb(226,220,3)"/><text x="809.00" y="318.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (22 samples, 2.40%)</title><rect x="811" y="324" width="28" height="15" fill="rgb(217,7,34)"/><text x="814.00" y="334.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (8 samples, 0.87%)</title><rect x="829" y="340" width="10" height="15" fill="rgb(250,13,5)"/><text x="832.00" y="350.50"></text></g><g><title>array_sum (methods.c) (30 samples, 3.28%)</title><rect x="802" y="212" width="38" height="15" fill="rgb(227,108,25)"/><text x="805.00" y="222.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (30 samples, 3.28%)</title><rect x="802" y="228" width="38" height="15" fill="rgb(205,152,28)"/><text x="805.00" y="238.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (29 samples, 3.17%)</title><rect x="803" y="244" width="37" height="15" fill="rgb(242,135,15)"/><text x="806.00" y="254.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (29 samples, 3.17%)</title><rect x="803" y="260" width="37" height="15" fill="rgb(236,55,29)"/><text x="806.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (27 samples, 2.95%)</title><rect x="806" y="276" width="34" height="15" fill="rgb(223,155,10)"/><text x="809.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (27 samples, 2.95%)</title><rect x="806" y="292" width="34" height="15" fill="rgb(239,137,27)"/><text x="809.00" y="302.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="839" y="308" width="1" height="15" fill="rgb(246,164,13)"/><text x="842.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="839" y="324" width="1" height="15" fill="rgb(234,138,3)"/><text x="842.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="839" y="340" width="1" height="15" fill="rgb(246,164,19)"/><text x="842.00" y="350.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.11%)</title><rect x="839" y="356" width="1" height="15" fill="rgb(207,142,5)"/><text x="842.00" y="366.50"></text></g><g><title>0x7f293eaebe7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="852" y="436" width="1" height="15" fill="rgb(231,127,46)"/><text x="855.00" y="446.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="852" y="356" width="3" height="15" fill="rgb(217,72,27)"/><text x="855.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="852" y="372" width="3" height="15" fill="rgb(245,89,35)"/><text x="855.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="852" y="388" width="3" height="15" fill="rgb(219,105,31)"/><text x="855.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="852" y="404" width="3" height="15" fill="rgb(251,219,51)"/><text x="855.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="852" y="420" width="3" height="15" fill="rgb(251,36,18)"/><text x="855.00" y="430.50"></text></g><g><title>0x7f293ebb3151 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="853" y="436" width="2" height="15" fill="rgb(248,228,16)"/><text x="856.00" y="446.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.11%)</title><rect x="855" y="420" width="1" height="15" fill="rgb(246,168,50)"/><text x="858.00" y="430.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.22%)</title><rect x="855" y="388" width="2" height="15" fill="rgb(218,175,25)"/><text x="858.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.22%)</title><rect x="855" y="404" width="2" height="15" fill="rgb(222,14,32)"/><text x="858.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="856" y="420" width="1" height="15" fill="rgb(209,0,16)"/><text x="859.00" y="430.50"></text></g><g><title>0x7f293ead597e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="856" y="436" width="1" height="15" fill="rgb(235,72,23)"/><text x="859.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.09%)</title><rect x="855" y="372" width="12" height="15" fill="rgb(245,106,2)"/><text x="858.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (8 samples, 0.87%)</title><rect x="857" y="388" width="10" height="15" fill="rgb(246,2,39)"/><text x="860.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (8 samples, 0.87%)</title><rect x="857" y="404" width="10" height="15" fill="rgb(240,168,19)"/><text x="860.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.20%)</title><rect x="855" y="356" width="14" height="15" fill="rgb(251,132,13)"/><text x="858.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="867" y="372" width="2" height="15" fill="rgb(253,49,30)"/><text x="870.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="867" y="388" width="2" height="15" fill="rgb(218,147,44)"/><text x="870.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="867" y="404" width="2" height="15" fill="rgb(232,116,46)"/><text x="870.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (15 samples, 1.64%)</title><rect x="851" y="324" width="19" height="15" fill="rgb(209,74,43)"/><text x="854.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 1.53%)</title><rect x="852" y="340" width="18" height="15" fill="rgb(253,192,13)"/><text x="855.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="869" y="356" width="1" height="15" fill="rgb(231,76,39)"/><text x="872.00" y="366.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (3 samples, 0.33%)</title><rect x="870" y="324" width="4" height="15" fill="rgb(208,71,52)"/><text x="873.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.11%)</title><rect x="873" y="340" width="1" height="15" fill="rgb(238,50,3)"/><text x="876.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="884" y="340" width="4" height="15" fill="rgb(244,31,1)"/><text x="887.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (3 samples, 0.33%)</title><rect x="896" y="452" width="4" height="15" fill="rgb(254,148,23)"/><text x="899.00" y="462.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 0.66%)</title><rect x="893" y="388" width="8" height="15" fill="rgb(209,100,53)"/><text x="896.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.44%)</title><rect x="896" y="404" width="5" height="15" fill="rgb(219,15,17)"/><text x="899.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (4 samples, 0.44%)</title><rect x="896" y="420" width="5" height="15" fill="rgb(221,67,22)"/><text x="899.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.44%)</title><rect x="896" y="436" width="5" height="15" fill="rgb(207,92,0)"/><text x="899.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="900" y="452" width="1" height="15" fill="rgb(227,16,0)"/><text x="903.00" y="462.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.11%)</title><rect x="900" y="468" width="1" height="15" fill="rgb(247,122,37)"/><text x="903.00" y="478.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="900" y="484" width="1" height="15" fill="rgb(231,11,40)"/><text x="903.00" y="494.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (11 samples, 1.20%)</title><rect x="888" y="340" width="14" height="15" fill="rgb(226,11,42)"/><text x="891.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.09%)</title><rect x="889" y="356" width="13" height="15" fill="rgb(243,149,19)"/><text x="892.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (9 samples, 0.98%)</title><rect x="891" y="372" width="11" height="15" fill="rgb(210,0,9)"/><text x="894.00" y="382.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="901" y="388" width="1" height="15" fill="rgb(251,125,35)"/><text x="904.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="905" y="372" width="1" height="15" fill="rgb(244,156,23)"/><text x="908.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="905" y="388" width="1" height="15" fill="rgb(224,78,9)"/><text x="908.00" y="398.50"></text></g><g><title>DOUBLE_isnan (loops.c.src) (1 samples, 0.11%)</title><rect x="905" y="404" width="1" height="15" fill="rgb(248,153,10)"/><text x="908.00" y="414.50"></text></g><g><title>run_isnan_simd_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="905" y="420" width="1" height="15" fill="rgb(244,203,2)"/><text x="908.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.33%)</title><rect x="906" y="372" width="4" height="15" fill="rgb(238,210,27)"/><text x="909.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.22%)</title><rect x="907" y="388" width="3" height="15" fill="rgb(252,4,28)"/><text x="910.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.22%)</title><rect x="907" y="404" width="3" height="15" fill="rgb(238,108,48)"/><text x="910.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="909" y="420" width="1" height="15" fill="rgb(211,130,11)"/><text x="912.00" y="430.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (54 samples, 5.90%)</title><rect x="842" y="244" width="69" height="15" fill="rgb(211,53,18)"/><text x="845.00" y="254.50">clip (n..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (52 samples, 5.68%)</title><rect x="844" y="260" width="67" height="15" fill="rgb(213,54,25)"/><text x="847.00" y="270.50">_wrapfu..</text></g><g><title>array_clip (methods.c) (51 samples, 5.57%)</title><rect x="846" y="276" width="65" height="15" fill="rgb(243,195,53)"/><text x="849.00" y="286.50">array_c..</text></g><g><title>forward_ndarray_method (methods.c) (51 samples, 5.57%)</title><rect x="846" y="292" width="65" height="15" fill="rgb(242,109,6)"/><text x="849.00" y="302.50">forward..</text></g><g><title>_clip (numpy/core/_methods.py) (49 samples, 5.35%)</title><rect x="848" y="308" width="63" height="15" fill="rgb(250,116,8)"/><text x="851.00" y="318.50">_clip ..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (29 samples, 3.17%)</title><rect x="874" y="324" width="37" height="15" fill="rgb(218,14,41)"/><text x="877.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 0.76%)</title><rect x="902" y="340" width="9" height="15" fill="rgb(205,161,8)"/><text x="905.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.55%)</title><rect x="905" y="356" width="6" height="15" fill="rgb(231,148,11)"/><text x="908.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="910" y="372" width="1" height="15" fill="rgb(250,6,8)"/><text x="913.00" y="382.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (56 samples, 6.11%)</title><rect x="840" y="212" width="73" height="15" fill="rgb(250,72,32)"/><text x="843.00" y="222.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (56 samples, 6.11%)</title><rect x="840" y="228" width="73" height="15" fill="rgb(205,79,2)"/><text x="843.00" y="238.50">array_im..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="911" y="244" width="2" height="15" fill="rgb(208,50,19)"/><text x="914.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="911" y="260" width="2" height="15" fill="rgb(244,227,50)"/><text x="914.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="911" y="276" width="2" height="15" fill="rgb(214,18,11)"/><text x="914.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="911" y="292" width="2" height="15" fill="rgb(239,122,47)"/><text x="914.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.11%)</title><rect x="915" y="372" width="1" height="15" fill="rgb(244,13,2)"/><text x="918.00" y="382.50"></text></g><g><title>0x7f293eae46a2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="915" y="388" width="1" height="15" fill="rgb(230,211,46)"/><text x="918.00" y="398.50"></text></g><g><title>0x7f29185272df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="915" y="276" width="3" height="15" fill="rgb(246,157,27)"/><text x="918.00" y="286.50"></text></g><g><title>0x7f291850bd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="915" y="292" width="3" height="15" fill="rgb(206,198,46)"/><text x="918.00" y="302.50"></text></g><g><title>0x7f291850b666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="915" y="308" width="3" height="15" fill="rgb(237,161,42)"/><text x="918.00" y="318.50"></text></g><g><title>0x7f29185012fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="915" y="324" width="3" height="15" fill="rgb(234,0,29)"/><text x="918.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.22%)</title><rect x="915" y="340" width="3" height="15" fill="rgb(217,65,43)"/><text x="918.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.22%)</title><rect x="915" y="356" width="3" height="15" fill="rgb(242,67,37)"/><text x="918.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.11%)</title><rect x="916" y="372" width="2" height="15" fill="rgb(209,1,0)"/><text x="919.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.11%)</title><rect x="916" y="388" width="2" height="15" fill="rgb(230,138,17)"/><text x="919.00" y="398.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.11%)</title><rect x="916" y="404" width="2" height="15" fill="rgb(209,171,28)"/><text x="919.00" y="414.50"></text></g><g><title>0x7f2918527592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="918" y="276" width="2" height="15" fill="rgb(221,4,51)"/><text x="921.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.22%)</title><rect x="918" y="292" width="2" height="15" fill="rgb(243,62,10)"/><text x="921.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="919" y="308" width="1" height="15" fill="rgb(219,48,46)"/><text x="922.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.11%)</title><rect x="919" y="324" width="1" height="15" fill="rgb(213,126,38)"/><text x="922.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="919" y="340" width="1" height="15" fill="rgb(232,50,36)"/><text x="922.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="919" y="356" width="1" height="15" fill="rgb(227,79,50)"/><text x="922.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="919" y="372" width="1" height="15" fill="rgb(228,189,0)"/><text x="922.00" y="382.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="919" y="388" width="1" height="15" fill="rgb(243,125,27)"/><text x="922.00" y="398.50"></text></g><g><title>0x7f29185276aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="920" y="276" width="2" height="15" fill="rgb(225,214,29)"/><text x="923.00" y="286.50"></text></g><g><title>0x7f29185276b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="922" y="276" width="2" height="15" fill="rgb(212,72,17)"/><text x="925.00" y="286.50"></text></g><g><title>0x7f29185276c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="924" y="276" width="1" height="15" fill="rgb(227,139,4)"/><text x="927.00" y="286.50"></text></g><g><title>0x7f29185276d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="925" y="276" width="2" height="15" fill="rgb(211,196,42)"/><text x="928.00" y="286.50"></text></g><g><title>0x7f29185277a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="927" y="276" width="1" height="15" fill="rgb(206,127,3)"/><text x="930.00" y="286.50"></text></g><g><title>0x7f2918518fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.20%)</title><rect x="915" y="244" width="14" height="15" fill="rgb(241,50,31)"/><text x="918.00" y="254.50"></text></g><g><title>0x7f2918528405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.20%)</title><rect x="915" y="260" width="14" height="15" fill="rgb(244,71,21)"/><text x="918.00" y="270.50"></text></g><g><title>0x7f2918527c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="928" y="276" width="1" height="15" fill="rgb(246,199,14)"/><text x="931.00" y="286.50"></text></g><g><title>0x7f29184ff529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="928" y="292" width="1" height="15" fill="rgb(225,167,47)"/><text x="931.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="928" y="308" width="1" height="15" fill="rgb(206,176,0)"/><text x="931.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.11%)</title><rect x="928" y="324" width="1" height="15" fill="rgb(253,78,11)"/><text x="931.00" y="334.50"></text></g><g><title>0x7f293dcf8600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="928" y="340" width="1" height="15" fill="rgb(247,112,46)"/><text x="931.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="932" y="276" width="1" height="15" fill="rgb(241,187,32)"/><text x="935.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (10 samples, 1.09%)</title><rect x="933" y="292" width="13" height="15" fill="rgb(227,93,16)"/><text x="936.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="945" y="308" width="1" height="15" fill="rgb(210,58,16)"/><text x="948.00" y="318.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (11 samples, 1.20%)</title><rect x="933" y="276" width="14" height="15" fill="rgb(234,201,53)"/><text x="936.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="946" y="292" width="1" height="15" fill="rgb(244,207,30)"/><text x="949.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="946" y="308" width="1" height="15" fill="rgb(237,118,54)"/><text x="949.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="946" y="324" width="1" height="15" fill="rgb(244,229,6)"/><text x="949.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="946" y="340" width="1" height="15" fill="rgb(233,183,44)"/><text x="949.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="946" y="356" width="1" height="15" fill="rgb(242,96,16)"/><text x="949.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="946" y="372" width="1" height="15" fill="rgb(248,25,51)"/><text x="949.00" y="382.50"></text></g><g><title>0x7f293ead6b14 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="946" y="388" width="1" height="15" fill="rgb(209,154,49)"/><text x="949.00" y="398.50"></text></g><g><title>0x7f291851905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.64%)</title><rect x="929" y="244" width="20" height="15" fill="rgb(246,41,29)"/><text x="932.00" y="254.50"></text></g><g><title>array_take (methods.c) (15 samples, 1.64%)</title><rect x="929" y="260" width="20" height="15" fill="rgb(217,201,0)"/><text x="932.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="947" y="276" width="2" height="15" fill="rgb(209,158,30)"/><text x="950.00" y="286.50"></text></g><g><title>0x7f291851918f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="949" y="244" width="1" height="15" fill="rgb(253,68,5)"/><text x="952.00" y="254.50"></text></g><g><title>0x7f2918519d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 3.06%)</title><rect x="915" y="228" width="36" height="15" fill="rgb(229,127,50)"/><text x="918.00" y="238.50">0x7..</text></g><g><title>0x7f29185195f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="950" y="244" width="1" height="15" fill="rgb(242,38,15)"/><text x="953.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.11%)</title><rect x="961" y="260" width="2" height="15" fill="rgb(252,39,36)"/><text x="964.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.11%)</title><rect x="963" y="260" width="1" height="15" fill="rgb(217,73,15)"/><text x="966.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 1.09%)</title><rect x="964" y="260" width="13" height="15" fill="rgb(206,84,13)"/><text x="967.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="976" y="276" width="1" height="15" fill="rgb(220,55,48)"/><text x="979.00" y="286.50"></text></g><g><title>0x7f293eaebb60 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="983" y="276" width="2" height="15" fill="rgb(206,18,30)"/><text x="986.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (9 samples, 0.98%)</title><rect x="977" y="260" width="12" height="15" fill="rgb(226,140,2)"/><text x="980.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.33%)</title><rect x="985" y="276" width="4" height="15" fill="rgb(236,152,52)"/><text x="988.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.11%)</title><rect x="987" y="292" width="2" height="15" fill="rgb(236,159,3)"/><text x="990.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.33%)</title><rect x="989" y="260" width="3" height="15" fill="rgb(223,54,28)"/><text x="992.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.33%)</title><rect x="989" y="276" width="3" height="15" fill="rgb(235,82,23)"/><text x="992.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="991" y="292" width="1" height="15" fill="rgb(223,77,1)"/><text x="994.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (40 samples, 4.37%)</title><rect x="951" y="228" width="52" height="15" fill="rgb(253,45,3)"/><text x="954.00" y="238.50">_vali..</text></g><g><title>check_array (sklearn/utils/validation.py) (38 samples, 4.15%)</title><rect x="954" y="244" width="49" height="15" fill="rgb(237,191,21)"/><text x="957.00" y="254.50">chec..</text></g><g><title>simplefilter (warnings.py) (8 samples, 0.87%)</title><rect x="992" y="260" width="11" height="15" fill="rgb(238,228,35)"/><text x="995.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (7 samples, 0.76%)</title><rect x="994" y="276" width="9" height="15" fill="rgb(254,116,49)"/><text x="997.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1003" y="228" width="1" height="15" fill="rgb(231,175,39)"/><text x="1006.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1003" y="244" width="1" height="15" fill="rgb(241,132,31)"/><text x="1006.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1003" y="260" width="1" height="15" fill="rgb(221,6,8)"/><text x="1006.00" y="270.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.11%)</title><rect x="1005" y="244" width="2" height="15" fill="rgb(241,28,43)"/><text x="1008.00" y="254.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="1005" y="260" width="2" height="15" fill="rgb(233,188,38)"/><text x="1008.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="1005" y="276" width="2" height="15" fill="rgb(225,187,54)"/><text x="1008.00" y="286.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1007" y="276" width="1" height="15" fill="rgb(232,87,2)"/><text x="1010.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1007" y="292" width="1" height="15" fill="rgb(245,73,15)"/><text x="1010.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1007" y="308" width="1" height="15" fill="rgb(233,18,27)"/><text x="1010.00" y="318.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="1007" y="324" width="1" height="15" fill="rgb(248,37,36)"/><text x="1010.00" y="334.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="1007" y="340" width="1" height="15" fill="rgb(216,219,39)"/><text x="1010.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1008" y="276" width="1" height="15" fill="rgb(210,28,49)"/><text x="1011.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1008" y="292" width="1" height="15" fill="rgb(216,0,13)"/><text x="1011.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.11%)</title><rect x="1008" y="308" width="1" height="15" fill="rgb(239,28,28)"/><text x="1011.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1008" y="324" width="1" height="15" fill="rgb(245,88,6)"/><text x="1011.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1008" y="340" width="1" height="15" fill="rgb(214,8,2)"/><text x="1011.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1008" y="356" width="1" height="15" fill="rgb(218,125,44)"/><text x="1011.00" y="366.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h) (1 samples, 0.11%)</title><rect x="1008" y="372" width="1" height="15" fill="rgb(210,204,10)"/><text x="1011.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.33%)</title><rect x="1007" y="260" width="3" height="15" fill="rgb(217,112,3)"/><text x="1010.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1009" y="276" width="1" height="15" fill="rgb(238,146,5)"/><text x="1012.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (6 samples, 0.66%)</title><rect x="1004" y="228" width="8" height="15" fill="rgb(239,129,53)"/><text x="1007.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.44%)</title><rect x="1007" y="244" width="5" height="15" fill="rgb(236,120,42)"/><text x="1010.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1010" y="260" width="2" height="15" fill="rgb(246,142,51)"/><text x="1013.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1010" y="276" width="2" height="15" fill="rgb(237,47,4)"/><text x="1013.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1012" y="228" width="1" height="15" fill="rgb(223,198,48)"/><text x="1015.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.33%)</title><rect x="1021" y="292" width="4" height="15" fill="rgb(248,42,26)"/><text x="1024.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.33%)</title><rect x="1021" y="308" width="4" height="15" fill="rgb(220,164,14)"/><text x="1024.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="1022" y="324" width="3" height="15" fill="rgb(215,124,11)"/><text x="1025.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="1022" y="340" width="3" height="15" fill="rgb(254,106,54)"/><text x="1025.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="1022" y="356" width="3" height="15" fill="rgb(230,146,39)"/><text x="1025.00" y="366.50"></text></g><g><title>0x7f293ebb3143 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1023" y="372" width="2" height="15" fill="rgb(244,62,16)"/><text x="1026.00" y="382.50"></text></g><g><title>0x7f293eaeb734 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1026" y="308" width="1" height="15" fill="rgb(219,215,25)"/><text x="1029.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.22%)</title><rect x="1028" y="356" width="3" height="15" fill="rgb(244,31,52)"/><text x="1031.00" y="366.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.11%)</title><rect x="1030" y="372" width="1" height="15" fill="rgb(239,161,25)"/><text x="1033.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.33%)</title><rect x="1028" y="340" width="4" height="15" fill="rgb(243,104,12)"/><text x="1031.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1031" y="356" width="1" height="15" fill="rgb(206,180,46)"/><text x="1034.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1034" y="372" width="1" height="15" fill="rgb(211,45,48)"/><text x="1037.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1034" y="388" width="1" height="15" fill="rgb(206,118,16)"/><text x="1037.00" y="398.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1034" y="404" width="1" height="15" fill="rgb(233,136,9)"/><text x="1037.00" y="414.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="1034" y="420" width="1" height="15" fill="rgb(209,27,28)"/><text x="1037.00" y="430.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.22%)</title><rect x="1035" y="388" width="2" height="15" fill="rgb(206,175,48)"/><text x="1038.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (5 samples, 0.55%)</title><rect x="1032" y="340" width="7" height="15" fill="rgb(245,23,43)"/><text x="1035.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (5 samples, 0.55%)</title><rect x="1032" y="356" width="7" height="15" fill="rgb(217,42,52)"/><text x="1035.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.33%)</title><rect x="1035" y="372" width="4" height="15" fill="rgb(217,217,30)"/><text x="1038.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="1037" y="388" width="2" height="15" fill="rgb(252,1,18)"/><text x="1040.00" y="398.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="1039" y="340" width="1" height="15" fill="rgb(245,93,14)"/><text x="1042.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (12 samples, 1.31%)</title><rect x="1047" y="356" width="15" height="15" fill="rgb(212,133,53)"/><text x="1050.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.33%)</title><rect x="1058" y="372" width="4" height="15" fill="rgb(229,227,32)"/><text x="1061.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (33 samples, 3.60%)</title><rect x="1027" y="324" width="43" height="15" fill="rgb(249,2,9)"/><text x="1030.00" y="334.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (23 samples, 2.51%)</title><rect x="1040" y="340" width="30" height="15" fill="rgb(245,108,17)"/><text x="1043.00" y="350.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.66%)</title><rect x="1062" y="356" width="8" height="15" fill="rgb(244,228,24)"/><text x="1065.00" y="366.50"></text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1070" y="324" width="1" height="15" fill="rgb(214,104,15)"/><text x="1073.00" y="334.50"></text></g><g><title>array_sum (methods.c) (46 samples, 5.02%)</title><rect x="1013" y="228" width="59" height="15" fill="rgb(207,24,21)"/><text x="1016.00" y="238.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (46 samples, 5.02%)</title><rect x="1013" y="244" width="59" height="15" fill="rgb(231,151,1)"/><text x="1016.00" y="254.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (42 samples, 4.59%)</title><rect x="1018" y="260" width="54" height="15" fill="rgb(220,124,20)"/><text x="1021.00" y="270.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (40 samples, 4.37%)</title><rect x="1021" y="276" width="51" height="15" fill="rgb(222,225,44)"/><text x="1024.00" y="286.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (37 samples, 4.04%)</title><rect x="1025" y="292" width="47" height="15" fill="rgb(226,8,31)"/><text x="1028.00" y="302.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (35 samples, 3.82%)</title><rect x="1027" y="308" width="45" height="15" fill="rgb(205,163,48)"/><text x="1030.00" y="318.50">PyUF..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1071" y="324" width="1" height="15" fill="rgb(239,124,8)"/><text x="1074.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1071" y="340" width="1" height="15" fill="rgb(225,201,27)"/><text x="1074.00" y="350.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1071" y="356" width="1" height="15" fill="rgb(236,74,54)"/><text x="1074.00" y="366.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.22%)</title><rect x="1083" y="260" width="2" height="15" fill="rgb(233,43,10)"/><text x="1086.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 0.87%)</title><rect x="1076" y="244" width="10" height="15" fill="rgb(215,92,26)"/><text x="1079.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1085" y="260" width="1" height="15" fill="rgb(228,198,21)"/><text x="1088.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 1.31%)</title><rect x="1072" y="228" width="16" height="15" fill="rgb(228,47,10)"/><text x="1075.00" y="238.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.11%)</title><rect x="1086" y="244" width="2" height="15" fill="rgb(213,101,14)"/><text x="1089.00" y="254.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1088" y="340" width="1" height="15" fill="rgb(249,117,45)"/><text x="1091.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (15 samples, 1.64%)</title><rect x="1088" y="292" width="19" height="15" fill="rgb(207,113,27)"/><text x="1091.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (15 samples, 1.64%)</title><rect x="1088" y="308" width="19" height="15" fill="rgb(246,78,28)"/><text x="1091.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (15 samples, 1.64%)</title><rect x="1088" y="324" width="19" height="15" fill="rgb(253,28,14)"/><text x="1091.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (14 samples, 1.53%)</title><rect x="1089" y="340" width="18" height="15" fill="rgb(205,142,12)"/><text x="1092.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1107" y="308" width="1" height="15" fill="rgb(254,226,27)"/><text x="1110.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.33%)</title><rect x="1107" y="292" width="4" height="15" fill="rgb(207,15,47)"/><text x="1110.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.22%)</title><rect x="1108" y="308" width="3" height="15" fill="rgb(213,69,7)"/><text x="1111.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1111" y="292" width="1" height="15" fill="rgb(220,124,39)"/><text x="1114.00" y="302.50"></text></g><g><title>0x7f293ead5dfb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1111" y="308" width="1" height="15" fill="rgb(227,130,43)"/><text x="1114.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="1112" y="292" width="1" height="15" fill="rgb(252,125,34)"/><text x="1115.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.55%)</title><rect x="1113" y="292" width="7" height="15" fill="rgb(239,155,9)"/><text x="1116.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.55%)</title><rect x="1113" y="308" width="7" height="15" fill="rgb(236,170,30)"/><text x="1116.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.55%)</title><rect x="1113" y="324" width="7" height="15" fill="rgb(210,185,34)"/><text x="1116.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.22%)</title><rect x="1117" y="340" width="3" height="15" fill="rgb(241,33,48)"/><text x="1120.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1120" y="292" width="1" height="15" fill="rgb(248,132,53)"/><text x="1123.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (27 samples, 2.95%)</title><rect x="1088" y="260" width="35" height="15" fill="rgb(249,0,30)"/><text x="1091.00" y="270.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (27 samples, 2.95%)</title><rect x="1088" y="276" width="35" height="15" fill="rgb(222,25,18)"/><text x="1091.00" y="286.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="1121" y="292" width="2" height="15" fill="rgb(241,64,35)"/><text x="1124.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (28 samples, 3.06%)</title><rect x="1088" y="244" width="36" height="15" fill="rgb(245,176,4)"/><text x="1091.00" y="254.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1123" y="260" width="1" height="15" fill="rgb(221,137,45)"/><text x="1126.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1123" y="276" width="1" height="15" fill="rgb(250,89,52)"/><text x="1126.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1123" y="292" width="1" height="15" fill="rgb(244,79,35)"/><text x="1126.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (165 samples, 18.01%)</title><rect x="913" y="212" width="212" height="15" fill="rgb(216,64,43)"/><text x="916.00" y="222.50">predict_proba (sklearn/tree..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 3.17%)</title><rect x="1088" y="228" width="37" height="15" fill="rgb(212,216,33)"/><text x="1091.00" y="238.50">ufu..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1124" y="244" width="1" height="15" fill="rgb(253,80,4)"/><text x="1127.00" y="254.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1124" y="260" width="1" height="15" fill="rgb(233,117,13)"/><text x="1127.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1125" y="244" width="1" height="15" fill="rgb(219,111,31)"/><text x="1128.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1125" y="260" width="1" height="15" fill="rgb(228,21,36)"/><text x="1128.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1126" y="260" width="2" height="15" fill="rgb(208,160,47)"/><text x="1129.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="1126" y="276" width="2" height="15" fill="rgb(208,121,8)"/><text x="1129.00" y="286.50"></text></g><g><title>0x7f293dcf90c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="1134" y="292" width="4" height="15" fill="rgb(243,117,45)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7f293eca7dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1138" y="292" width="1" height="15" fill="rgb(238,143,25)"/><text x="1141.00" y="302.50"></text></g><g><title>0x7f293eca7e01 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1139" y="292" width="3" height="15" fill="rgb(238,172,26)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7f293eca7e25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1142" y="292" width="1" height="15" fill="rgb(234,121,6)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7f293eca7e40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1143" y="292" width="1" height="15" fill="rgb(208,53,7)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7f293eca7e4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(252,208,30)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f293eca7e6e (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1146" y="292" width="2" height="15" fill="rgb(237,163,18)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f293eca7e7e (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1148" y="292" width="3" height="15" fill="rgb(236,117,8)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f293eca7ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1151" y="292" width="1" height="15" fill="rgb(241,115,9)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f293eca7eb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1152" y="292" width="1" height="15" fill="rgb(206,4,33)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7f293eca7eca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(234,9,38)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7f293eca7ed2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1155" y="292" width="1" height="15" fill="rgb(230,8,16)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7f293eca7eda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1156" y="292" width="1" height="15" fill="rgb(246,171,9)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7f293eca7eee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1157" y="292" width="3" height="15" fill="rgb(210,46,10)"/><text x="1160.00" y="302.50"></text></g><g><title>0x7f293eca7ef6 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="1160" y="292" width="4" height="15" fill="rgb(228,107,41)"/><text x="1163.00" y="302.50"></text></g><g><title>0x7f293eca7efa (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1164" y="292" width="2" height="15" fill="rgb(212,224,51)"/><text x="1167.00" y="302.50"></text></g><g><title>0x7f293eca7f57 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(229,166,1)"/><text x="1169.00" y="302.50"></text></g><g><title>0x7f293eca7ff3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="292" width="1" height="15" fill="rgb(215,99,51)"/><text x="1171.00" y="302.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (34 samples, 3.71%)</title><rect x="1128" y="276" width="43" height="15" fill="rgb(242,36,47)"/><text x="1131.00" y="286.50">PyUF..</text></g><g><title>npy_log (npy_math_internal.h.src) (2 samples, 0.22%)</title><rect x="1169" y="292" width="2" height="15" fill="rgb(224,1,13)"/><text x="1172.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (36 samples, 3.93%)</title><rect x="1126" y="244" width="47" height="15" fill="rgb(229,96,11)"/><text x="1129.00" y="254.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (35 samples, 3.82%)</title><rect x="1128" y="260" width="45" height="15" fill="rgb(244,43,33)"/><text x="1131.00" y="270.50">triv..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1171" y="276" width="2" height="15" fill="rgb(220,95,15)"/><text x="1174.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (320 samples, 34.93%)</title><rect x="762" y="180" width="412" height="15" fill="rgb(241,171,50)"/><text x="765.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (319 samples, 34.83%)</title><rect x="763" y="196" width="411" height="15" fill="rgb(215,19,26)"/><text x="766.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (38 samples, 4.15%)</title><rect x="1125" y="212" width="49" height="15" fill="rgb(222,5,2)"/><text x="1128.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (38 samples, 4.15%)</title><rect x="1125" y="228" width="49" height="15" fill="rgb(219,96,7)"/><text x="1128.00" y="238.50">PyUF..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1173" y="244" width="1" height="15" fill="rgb(211,114,26)"/><text x="1176.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1173" y="260" width="1" height="15" fill="rgb(229,197,53)"/><text x="1176.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1173" y="276" width="1" height="15" fill="rgb(213,208,13)"/><text x="1176.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1173" y="292" width="1" height="15" fill="rgb(235,52,49)"/><text x="1176.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1173" y="308" width="1" height="15" fill="rgb(224,188,0)"/><text x="1176.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="1173" y="324" width="1" height="15" fill="rgb(226,100,47)"/><text x="1176.00" y="334.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1174" y="180" width="1" height="15" fill="rgb(213,109,3)"/><text x="1177.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1174" y="196" width="1" height="15" fill="rgb(243,147,28)"/><text x="1177.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.11%)</title><rect x="1174" y="212" width="1" height="15" fill="rgb(221,221,44)"/><text x="1177.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1174" y="228" width="1" height="15" fill="rgb(210,130,20)"/><text x="1177.00" y="238.50"></text></g><g><title>array_add (number.c) (4 samples, 0.44%)</title><rect x="1175" y="180" width="5" height="15" fill="rgb(224,128,16)"/><text x="1178.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.33%)</title><rect x="1177" y="196" width="3" height="15" fill="rgb(242,27,19)"/><text x="1180.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.33%)</title><rect x="1177" y="212" width="3" height="15" fill="rgb(206,150,11)"/><text x="1180.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.33%)</title><rect x="1177" y="228" width="3" height="15" fill="rgb(248,5,29)"/><text x="1180.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.33%)</title><rect x="1177" y="244" width="3" height="15" fill="rgb(240,178,8)"/><text x="1180.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.33%)</title><rect x="1177" y="260" width="3" height="15" fill="rgb(215,44,9)"/><text x="1180.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (3 samples, 0.33%)</title><rect x="1177" y="276" width="3" height="15" fill="rgb(248,211,39)"/><text x="1180.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.33%)</title><rect x="1177" y="292" width="3" height="15" fill="rgb(250,96,26)"/><text x="1180.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (3 samples, 0.33%)</title><rect x="1177" y="308" width="3" height="15" fill="rgb(234,179,0)"/><text x="1180.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1180" y="180" width="2" height="15" fill="rgb(209,187,18)"/><text x="1183.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1180" y="196" width="2" height="15" fill="rgb(253,161,13)"/><text x="1183.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1180" y="212" width="2" height="15" fill="rgb(217,49,45)"/><text x="1183.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="1180" y="228" width="2" height="15" fill="rgb(213,95,51)"/><text x="1183.00" y="238.50"></text></g><g><title>0x7f293ead5b21 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1180" y="244" width="2" height="15" fill="rgb(206,197,48)"/><text x="1183.00" y="254.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.11%)</title><rect x="1182" y="180" width="1" height="15" fill="rgb(228,14,22)"/><text x="1185.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.11%)</title><rect x="1182" y="196" width="1" height="15" fill="rgb(224,29,21)"/><text x="1185.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="1182" y="212" width="1" height="15" fill="rgb(235,229,47)"/><text x="1185.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1182" y="228" width="1" height="15" fill="rgb(254,167,50)"/><text x="1185.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1182" y="244" width="1" height="15" fill="rgb(209,209,31)"/><text x="1185.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1182" y="260" width="1" height="15" fill="rgb(253,153,17)"/><text x="1185.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.11%)</title><rect x="1182" y="276" width="1" height="15" fill="rgb(207,196,47)"/><text x="1185.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1182" y="292" width="1" height="15" fill="rgb(238,75,33)"/><text x="1185.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1182" y="308" width="1" height="15" fill="rgb(250,67,27)"/><text x="1185.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (335 samples, 36.57%)</title><rect x="753" y="100" width="431" height="15" fill="rgb(250,10,26)"/><text x="756.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (335 samples, 36.57%)</title><rect x="753" y="116" width="431" height="15" fill="rgb(225,129,51)"/><text x="756.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (335 samples, 36.57%)</title><rect x="753" y="132" width="431" height="15" fill="rgb(206,51,29)"/><text x="756.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (335 samples, 36.57%)</title><rect x="753" y="148" width="431" height="15" fill="rgb(216,161,31)"/><text x="756.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (329 samples, 35.92%)</title><rect x="761" y="164" width="423" height="15" fill="rgb(216,84,35)"/><text x="764.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1183" y="180" width="1" height="15" fill="rgb(211,149,31)"/><text x="1186.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1183" y="196" width="1" height="15" fill="rgb(221,118,49)"/><text x="1186.00" y="206.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1184" y="116" width="2" height="15" fill="rgb(254,79,24)"/><text x="1187.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1184" y="132" width="2" height="15" fill="rgb(231,78,6)"/><text x="1187.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="1184" y="148" width="2" height="15" fill="rgb(216,123,49)"/><text x="1187.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="1184" y="164" width="2" height="15" fill="rgb(245,45,13)"/><text x="1187.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="1184" y="180" width="2" height="15" fill="rgb(223,193,29)"/><text x="1187.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.11%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(207,40,21)"/><text x="1187.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="1184" y="212" width="2" height="15" fill="rgb(212,52,18)"/><text x="1187.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="1184" y="228" width="2" height="15" fill="rgb(209,110,27)"/><text x="1187.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="244" width="2" height="15" fill="rgb(228,137,35)"/><text x="1187.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="1184" y="260" width="2" height="15" fill="rgb(229,72,30)"/><text x="1187.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="1184" y="276" width="2" height="15" fill="rgb(220,225,5)"/><text x="1187.00" y="286.50"></text></g><g><title>0x7f292ce236b3 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="292" width="2" height="15" fill="rgb(243,194,46)"/><text x="1187.00" y="302.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototype (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="308" width="2" height="15" fill="rgb(234,110,2)"/><text x="1187.00" y="318.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototypeNoLock (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="324" width="2" height="15" fill="rgb(211,167,40)"/><text x="1187.00" y="334.50"></text></g><g><title>google::protobuf::DescriptorPool::generated_pool (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="340" width="2" height="15" fill="rgb(223,55,18)"/><text x="1187.00" y="350.50"></text></g><g><title>google::protobuf::internal::AssignDescriptors (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="356" width="2" height="15" fill="rgb(207,84,9)"/><text x="1187.00" y="366.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (337 samples, 36.79%)</title><rect x="753" y="68" width="434" height="15" fill="rgb(217,42,17)"/><text x="756.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_4_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (337 samples, 36.79%)</title><rect x="753" y="84" width="434" height="15" fill="rgb(220,105,26)"/><text x="756.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="1184" y="100" width="3" height="15" fill="rgb(213,169,9)"/><text x="1187.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.11%)</title><rect x="1186" y="116" width="1" height="15" fill="rgb(226,202,35)"/><text x="1189.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.11%)</title><rect x="1186" y="132" width="1" height="15" fill="rgb(242,207,39)"/><text x="1189.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="148" width="1" height="15" fill="rgb(216,222,46)"/><text x="1189.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="164" width="1" height="15" fill="rgb(253,76,1)"/><text x="1189.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="180" width="1" height="15" fill="rgb(209,17,23)"/><text x="1189.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1186" y="196" width="1" height="15" fill="rgb(241,114,48)"/><text x="1189.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(207,99,0)"/><text x="1189.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.11%)</title><rect x="1186" y="228" width="1" height="15" fill="rgb(213,149,24)"/><text x="1189.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(234,59,50)"/><text x="1189.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="260" width="1" height="15" fill="rgb(239,50,44)"/><text x="1189.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(226,150,11)"/><text x="1189.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1186" y="292" width="1" height="15" fill="rgb(252,173,13)"/><text x="1189.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="308" width="1" height="15" fill="rgb(226,42,39)"/><text x="1189.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py) (1 samples, 0.11%)</title><rect x="1186" y="324" width="1" height="15" fill="rgb(229,147,23)"/><text x="1189.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="340" width="1" height="15" fill="rgb(206,122,3)"/><text x="1189.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="356" width="1" height="15" fill="rgb(215,134,17)"/><text x="1189.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="372" width="1" height="15" fill="rgb(218,194,53)"/><text x="1189.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1186" y="388" width="1" height="15" fill="rgb(205,32,54)"/><text x="1189.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="404" width="1" height="15" fill="rgb(218,171,30)"/><text x="1189.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py) (1 samples, 0.11%)</title><rect x="1186" y="420" width="1" height="15" fill="rgb(206,83,15)"/><text x="1189.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="436" width="1" height="15" fill="rgb(247,216,34)"/><text x="1189.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="452" width="1" height="15" fill="rgb(220,106,33)"/><text x="1189.00" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="468" width="1" height="15" fill="rgb(238,173,14)"/><text x="1189.00" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1186" y="484" width="1" height="15" fill="rgb(247,91,49)"/><text x="1189.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="500" width="1" height="15" fill="rgb(217,139,37)"/><text x="1189.00" y="510.50"></text></g><g><title>&lt;module&gt; (graphviz/__init__.py) (1 samples, 0.11%)</title><rect x="1186" y="516" width="1" height="15" fill="rgb(220,49,42)"/><text x="1189.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="532" width="1" height="15" fill="rgb(211,20,28)"/><text x="1189.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="548" width="1" height="15" fill="rgb(219,81,12)"/><text x="1189.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="564" width="1" height="15" fill="rgb(237,118,41)"/><text x="1189.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1186" y="580" width="1" height="15" fill="rgb(232,225,41)"/><text x="1189.00" y="590.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1186" y="596" width="1" height="15" fill="rgb(213,8,5)"/><text x="1189.00" y="606.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1186" y="612" width="1" height="15" fill="rgb(213,11,5)"/><text x="1189.00" y="622.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1187" y="180" width="1" height="15" fill="rgb(205,91,52)"/><text x="1190.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1187" y="196" width="1" height="15" fill="rgb(220,158,51)"/><text x="1190.00" y="206.50"></text></g><g><title>set_params (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(223,16,36)"/><text x="1190.00" y="222.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(251,179,12)"/><text x="1190.00" y="238.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(232,69,53)"/><text x="1190.00" y="254.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(224,51,46)"/><text x="1190.00" y="270.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(214,207,5)"/><text x="1190.00" y="286.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(225,68,12)"/><text x="1190.00" y="302.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.11%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(229,33,47)"/><text x="1190.00" y="318.50"></text></g><g><title>all (916 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,25,14)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (916 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,4,18)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (2 samples, 0.22%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(216,215,47)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (2 samples, 0.22%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(248,119,54)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(217,81,49)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.22%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(214,105,14)"/><text x="1190.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(241,14,15)"/><text x="1190.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.22%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(228,63,7)"/><text x="1190.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.22%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(236,197,54)"/><text x="1190.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(230,133,41)"/><text x="1191.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(254,211,0)"/><text x="1191.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(233,195,10)"/><text x="1191.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(211,19,39)"/><text x="1191.00" y="238.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(215,0,42)"/><text x="1191.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(225,204,33)"/><text x="1191.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(238,157,48)"/><text x="1191.00" y="286.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(245,184,15)"/><text x="1191.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(214,172,27)"/><text x="1191.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(235,91,15)"/><text x="1191.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(249,167,48)"/><text x="1191.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="356" width="2" height="15" fill="rgb(238,223,14)"/><text x="1191.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.11%)</title><rect x="1188" y="372" width="2" height="15" fill="rgb(247,7,13)"/><text x="1191.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1188" y="388" width="2" height="15" fill="rgb(220,59,23)"/><text x="1191.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1188" y="404" width="2" height="15" fill="rgb(207,95,40)"/><text x="1191.00" y="414.50"></text></g></g></svg>