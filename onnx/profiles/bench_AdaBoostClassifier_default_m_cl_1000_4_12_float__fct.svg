<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="836" width="1" height="15" fill="rgb(217,151,38)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="852" width="1" height="15" fill="rgb(215,51,26)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(228,76,43)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(227,170,32)"/><text x="13.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(218,71,10)"/><text x="13.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(226,121,10)"/><text x="13.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(214,141,14)"/><text x="13.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(241,99,48)"/><text x="13.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(215,6,28)"/><text x="13.00" y="974.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(215,198,44)"/><text x="13.00" y="990.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(252,153,49)"/><text x="13.00" y="1006.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(246,90,30)"/><text x="13.00" y="1022.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.11%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(250,106,6)"/><text x="13.00" y="1038.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(206,97,54)"/><text x="13.00" y="1054.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="10" y="1060" width="1" height="15" fill="rgb(239,63,32)"/><text x="13.00" y="1070.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.11%)</title><rect x="11" y="1172" width="1" height="15" fill="rgb(254,185,48)"/><text x="14.00" y="1182.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="11" y="1188" width="1" height="15" fill="rgb(234,96,27)"/><text x="14.00" y="1198.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.11%)</title><rect x="11" y="1204" width="1" height="15" fill="rgb(225,186,51)"/><text x="14.00" y="1214.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.21%)</title><rect x="11" y="1108" width="2" height="15" fill="rgb(225,0,7)"/><text x="14.00" y="1118.50"></text></g><g><title>compile (re.py) (2 samples, 0.21%)</title><rect x="11" y="1124" width="2" height="15" fill="rgb(250,38,51)"/><text x="14.00" y="1134.50"></text></g><g><title>_compile (re.py) (2 samples, 0.21%)</title><rect x="11" y="1140" width="2" height="15" fill="rgb(233,82,10)"/><text x="14.00" y="1150.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.21%)</title><rect x="11" y="1156" width="2" height="15" fill="rgb(207,62,12)"/><text x="14.00" y="1166.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="12" y="1172" width="1" height="15" fill="rgb(206,132,3)"/><text x="15.00" y="1182.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="12" y="1188" width="1" height="15" fill="rgb(240,114,31)"/><text x="15.00" y="1198.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="12" y="1204" width="1" height="15" fill="rgb(246,214,14)"/><text x="15.00" y="1214.50"></text></g><g><title>match (sre_parse.py) (1 samples, 0.11%)</title><rect x="12" y="1220" width="1" height="15" fill="rgb(235,174,46)"/><text x="15.00" y="1230.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="13" y="1156" width="1" height="15" fill="rgb(235,156,19)"/><text x="16.00" y="1166.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="13" y="1172" width="1" height="15" fill="rgb(232,88,47)"/><text x="16.00" y="1182.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="13" y="1188" width="1" height="15" fill="rgb(210,217,4)"/><text x="16.00" y="1198.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="13" y="1204" width="1" height="15" fill="rgb(245,102,44)"/><text x="16.00" y="1214.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="13" y="1220" width="1" height="15" fill="rgb(246,98,12)"/><text x="16.00" y="1230.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="13" y="1236" width="1" height="15" fill="rgb(222,78,25)"/><text x="16.00" y="1246.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.53%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(226,138,32)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(226,221,42)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(226,80,30)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(218,14,17)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(234,28,17)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(230,105,25)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.53%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(247,18,21)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(210,82,40)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(232,55,27)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(212,43,11)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(239,227,28)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(233,30,13)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.53%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(253,14,11)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(231,69,2)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(212,18,37)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(234,30,6)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(227,208,49)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(248,157,41)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.53%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(210,28,1)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(208,119,44)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(247,80,2)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(220,57,18)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(214,57,5)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(250,154,30)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(233,55,34)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(230,219,48)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(243,197,47)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.53%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(239,135,48)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(236,112,29)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(239,7,27)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(245,170,47)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(208,107,20)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(235,7,19)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.53%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(246,220,21)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="836" width="5" height="15" fill="rgb(212,35,36)"/><text x="14.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="852" width="5" height="15" fill="rgb(238,157,38)"/><text x="14.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="868" width="5" height="15" fill="rgb(206,29,36)"/><text x="14.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="11" y="884" width="5" height="15" fill="rgb(222,227,35)"/><text x="14.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="900" width="5" height="15" fill="rgb(215,203,27)"/><text x="14.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (4 samples, 0.42%)</title><rect x="11" y="916" width="5" height="15" fill="rgb(226,39,43)"/><text x="14.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="932" width="5" height="15" fill="rgb(243,147,20)"/><text x="14.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="948" width="5" height="15" fill="rgb(237,195,19)"/><text x="14.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="964" width="5" height="15" fill="rgb(221,88,36)"/><text x="14.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="980" width="5" height="15" fill="rgb(234,140,38)"/><text x="14.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (4 samples, 0.42%)</title><rect x="11" y="996" width="5" height="15" fill="rgb(241,172,45)"/><text x="14.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="1012" width="5" height="15" fill="rgb(230,86,35)"/><text x="14.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="1028" width="5" height="15" fill="rgb(221,49,48)"/><text x="14.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="1044" width="5" height="15" fill="rgb(232,57,7)"/><text x="14.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="11" y="1060" width="5" height="15" fill="rgb(205,119,43)"/><text x="14.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="11" y="1076" width="5" height="15" fill="rgb(206,139,27)"/><text x="14.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (4 samples, 0.42%)</title><rect x="11" y="1092" width="5" height="15" fill="rgb(249,167,48)"/><text x="14.00" y="1102.50"></text></g><g><title>makeHTMLTags (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.21%)</title><rect x="13" y="1108" width="3" height="15" fill="rgb(240,220,46)"/><text x="16.00" y="1118.50"></text></g><g><title>_makeTags (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.21%)</title><rect x="13" y="1124" width="3" height="15" fill="rgb(247,206,35)"/><text x="16.00" y="1134.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.21%)</title><rect x="13" y="1140" width="3" height="15" fill="rgb(205,178,0)"/><text x="16.00" y="1150.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.11%)</title><rect x="14" y="1156" width="2" height="15" fill="rgb(208,143,51)"/><text x="17.00" y="1166.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="14" y="1172" width="2" height="15" fill="rgb(236,180,53)"/><text x="17.00" y="1182.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="14" y="1188" width="2" height="15" fill="rgb(229,68,16)"/><text x="17.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="532" width="1" height="15" fill="rgb(223,176,47)"/><text x="19.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="548" width="1" height="15" fill="rgb(228,122,44)"/><text x="19.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="564" width="1" height="15" fill="rgb(218,53,44)"/><text x="19.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="580" width="1" height="15" fill="rgb(254,41,37)"/><text x="19.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="596" width="1" height="15" fill="rgb(216,50,3)"/><text x="19.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="612" width="1" height="15" fill="rgb(213,51,41)"/><text x="19.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="628" width="1" height="15" fill="rgb(234,72,28)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="644" width="1" height="15" fill="rgb(205,61,39)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="660" width="1" height="15" fill="rgb(221,72,5)"/><text x="19.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="676" width="1" height="15" fill="rgb(222,153,41)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="692" width="1" height="15" fill="rgb(239,176,15)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="708" width="1" height="15" fill="rgb(220,178,20)"/><text x="19.00" y="718.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="724" width="1" height="15" fill="rgb(249,61,52)"/><text x="19.00" y="734.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="740" width="1" height="15" fill="rgb(232,20,40)"/><text x="19.00" y="750.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="756" width="1" height="15" fill="rgb(229,176,16)"/><text x="19.00" y="766.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="772" width="1" height="15" fill="rgb(227,137,16)"/><text x="19.00" y="782.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(224,214,47)"/><text x="19.00" y="798.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(228,208,31)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="500" width="2" height="15" fill="rgb(254,227,4)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="516" width="2" height="15" fill="rgb(242,1,4)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="532" width="1" height="15" fill="rgb(213,109,9)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="548" width="1" height="15" fill="rgb(251,0,44)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="564" width="1" height="15" fill="rgb(254,84,13)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.11%)</title><rect x="17" y="580" width="1" height="15" fill="rgb(207,47,45)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="596" width="1" height="15" fill="rgb(248,26,28)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="612" width="1" height="15" fill="rgb(226,137,15)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="628" width="1" height="15" fill="rgb(226,173,36)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="644" width="1" height="15" fill="rgb(242,159,0)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="660" width="1" height="15" fill="rgb(208,118,53)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="676" width="1" height="15" fill="rgb(207,13,22)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="692" width="1" height="15" fill="rgb(214,36,30)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="708" width="1" height="15" fill="rgb(226,125,52)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="724" width="1" height="15" fill="rgb(221,130,39)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="740" width="1" height="15" fill="rgb(228,207,24)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="756" width="1" height="15" fill="rgb(225,77,18)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.11%)</title><rect x="17" y="772" width="1" height="15" fill="rgb(212,5,1)"/><text x="20.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="788" width="1" height="15" fill="rgb(246,15,41)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(217,197,20)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(249,99,22)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(250,29,27)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(247,222,2)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.84%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(245,85,44)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(252,167,13)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.32%)</title><rect x="16" y="292" width="3" height="15" fill="rgb(210,112,24)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="308" width="3" height="15" fill="rgb(205,56,46)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="324" width="3" height="15" fill="rgb(205,64,12)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="340" width="3" height="15" fill="rgb(208,83,29)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="356" width="3" height="15" fill="rgb(254,129,25)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="372" width="3" height="15" fill="rgb(249,112,22)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.32%)</title><rect x="16" y="388" width="3" height="15" fill="rgb(227,106,31)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="404" width="3" height="15" fill="rgb(254,110,27)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="420" width="3" height="15" fill="rgb(205,102,47)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="436" width="3" height="15" fill="rgb(224,65,41)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="452" width="3" height="15" fill="rgb(209,152,39)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="468" width="3" height="15" fill="rgb(207,125,34)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.32%)</title><rect x="16" y="484" width="3" height="15" fill="rgb(231,160,20)"/><text x="19.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="500" width="1" height="15" fill="rgb(217,182,40)"/><text x="21.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="516" width="1" height="15" fill="rgb(209,182,14)"/><text x="21.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="532" width="1" height="15" fill="rgb(253,34,45)"/><text x="21.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="548" width="1" height="15" fill="rgb(229,87,35)"/><text x="21.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="564" width="1" height="15" fill="rgb(225,44,50)"/><text x="21.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="580" width="1" height="15" fill="rgb(233,117,26)"/><text x="21.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="596" width="1" height="15" fill="rgb(243,82,15)"/><text x="21.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.11%)</title><rect x="18" y="612" width="1" height="15" fill="rgb(253,66,43)"/><text x="21.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="628" width="1" height="15" fill="rgb(243,89,54)"/><text x="21.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="644" width="1" height="15" fill="rgb(230,209,11)"/><text x="21.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="660" width="1" height="15" fill="rgb(241,139,50)"/><text x="21.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="676" width="1" height="15" fill="rgb(242,171,36)"/><text x="21.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="692" width="1" height="15" fill="rgb(238,18,9)"/><text x="21.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="708" width="1" height="15" fill="rgb(220,123,18)"/><text x="21.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="724" width="1" height="15" fill="rgb(252,145,1)"/><text x="21.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="740" width="1" height="15" fill="rgb(246,8,49)"/><text x="21.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="756" width="1" height="15" fill="rgb(251,210,13)"/><text x="21.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="772" width="1" height="15" fill="rgb(233,184,46)"/><text x="21.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="788" width="1" height="15" fill="rgb(208,142,16)"/><text x="21.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.11%)</title><rect x="18" y="804" width="1" height="15" fill="rgb(205,86,19)"/><text x="21.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="820" width="1" height="15" fill="rgb(228,2,8)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="836" width="1" height="15" fill="rgb(238,42,31)"/><text x="21.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="852" width="1" height="15" fill="rgb(209,32,13)"/><text x="21.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="868" width="1" height="15" fill="rgb(252,105,1)"/><text x="21.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(210,48,2)"/><text x="21.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.11%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(235,92,1)"/><text x="21.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(219,103,25)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(244,93,51)"/><text x="21.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(252,137,29)"/><text x="21.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(217,110,18)"/><text x="21.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(224,77,49)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.11%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(224,166,13)"/><text x="21.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(213,165,30)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(237,185,43)"/><text x="21.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(245,142,8)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1060" width="1" height="15" fill="rgb(214,57,8)"/><text x="21.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1076" width="1" height="15" fill="rgb(235,204,0)"/><text x="21.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1092" width="1" height="15" fill="rgb(245,199,26)"/><text x="21.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1108" width="1" height="15" fill="rgb(254,214,34)"/><text x="21.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(253,89,52)"/><text x="21.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(222,121,12)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(205,189,16)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(226,204,37)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1188" width="1" height="15" fill="rgb(230,148,47)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1204" width="1" height="15" fill="rgb(237,3,12)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1220" width="1" height="15" fill="rgb(253,155,22)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.11%)</title><rect x="18" y="1236" width="1" height="15" fill="rgb(217,14,29)"/><text x="21.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1252" width="1" height="15" fill="rgb(245,92,10)"/><text x="21.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1268" width="1" height="15" fill="rgb(229,193,28)"/><text x="21.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1284" width="1" height="15" fill="rgb(242,19,26)"/><text x="21.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1300" width="1" height="15" fill="rgb(224,120,1)"/><text x="21.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1316" width="1" height="15" fill="rgb(220,166,42)"/><text x="21.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.11%)</title><rect x="18" y="1332" width="1" height="15" fill="rgb(233,140,14)"/><text x="21.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1348" width="1" height="15" fill="rgb(238,126,30)"/><text x="21.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1364" width="1" height="15" fill="rgb(243,200,48)"/><text x="21.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1380" width="1" height="15" fill="rgb(247,224,51)"/><text x="21.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1396" width="1" height="15" fill="rgb(230,117,20)"/><text x="21.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1412" width="1" height="15" fill="rgb(244,200,9)"/><text x="21.00" y="1422.50"></text></g><g><title>&lt;module&gt; (concurrent/futures/process.py) (1 samples, 0.11%)</title><rect x="18" y="1428" width="1" height="15" fill="rgb(224,140,49)"/><text x="21.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.21%)</title><rect x="19" y="1236" width="3" height="15" fill="rgb(249,134,12)"/><text x="22.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1252" width="3" height="15" fill="rgb(224,184,45)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1268" width="3" height="15" fill="rgb(251,229,27)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1284" width="3" height="15" fill="rgb(217,5,24)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1300" width="3" height="15" fill="rgb(236,211,45)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1316" width="3" height="15" fill="rgb(224,24,15)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="1332" width="3" height="15" fill="rgb(252,6,28)"/><text x="22.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1348" width="3" height="15" fill="rgb(236,154,41)"/><text x="22.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.21%)</title><rect x="19" y="1364" width="3" height="15" fill="rgb(248,36,17)"/><text x="22.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1380" width="3" height="15" fill="rgb(245,227,21)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1396" width="3" height="15" fill="rgb(241,190,7)"/><text x="22.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1412" width="3" height="15" fill="rgb(224,7,49)"/><text x="22.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="1428" width="3" height="15" fill="rgb(253,13,20)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1444" width="3" height="15" fill="rgb(232,62,27)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.21%)</title><rect x="19" y="1460" width="3" height="15" fill="rgb(242,200,34)"/><text x="22.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.21%)</title><rect x="19" y="1476" width="3" height="15" fill="rgb(246,185,11)"/><text x="22.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.21%)</title><rect x="19" y="1492" width="3" height="15" fill="rgb(251,1,39)"/><text x="22.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.21%)</title><rect x="19" y="1508" width="3" height="15" fill="rgb(252,103,9)"/><text x="22.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.21%)</title><rect x="19" y="1524" width="3" height="15" fill="rgb(246,127,0)"/><text x="22.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.21%)</title><rect x="19" y="1540" width="3" height="15" fill="rgb(248,62,46)"/><text x="22.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.21%)</title><rect x="19" y="1556" width="3" height="15" fill="rgb(226,112,3)"/><text x="22.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.21%)</title><rect x="19" y="1572" width="3" height="15" fill="rgb(240,112,53)"/><text x="22.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(210,88,34)"/><text x="24.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="21" y="1604" width="1" height="15" fill="rgb(235,134,27)"/><text x="24.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::FormalParameter const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema::FormalParameter const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="21" y="1620" width="1" height="15" fill="rgb(250,170,1)"/><text x="24.00" y="1630.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="21" y="1636" width="1" height="15" fill="rgb(233,51,53)"/><text x="24.00" y="1646.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="21" y="1652" width="1" height="15" fill="rgb(207,90,51)"/><text x="24.00" y="1662.50"></text></g><g><title>0x7fb2ced9ce7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="21" y="1668" width="1" height="15" fill="rgb(246,41,22)"/><text x="24.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="484" width="4" height="15" fill="rgb(253,38,45)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="500" width="4" height="15" fill="rgb(218,177,35)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="516" width="4" height="15" fill="rgb(219,195,2)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="532" width="4" height="15" fill="rgb(228,225,46)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="19" y="548" width="4" height="15" fill="rgb(219,74,0)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="564" width="4" height="15" fill="rgb(238,44,47)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.32%)</title><rect x="19" y="580" width="4" height="15" fill="rgb(253,133,52)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="596" width="4" height="15" fill="rgb(240,44,1)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="612" width="4" height="15" fill="rgb(220,178,36)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="628" width="4" height="15" fill="rgb(224,111,14)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="19" y="644" width="4" height="15" fill="rgb(241,201,10)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="660" width="4" height="15" fill="rgb(230,43,25)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.32%)</title><rect x="19" y="676" width="4" height="15" fill="rgb(223,59,45)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="692" width="4" height="15" fill="rgb(234,188,13)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="708" width="4" height="15" fill="rgb(214,186,6)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="724" width="4" height="15" fill="rgb(254,174,30)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="19" y="740" width="4" height="15" fill="rgb(241,145,15)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="756" width="4" height="15" fill="rgb(253,0,48)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.32%)</title><rect x="19" y="772" width="4" height="15" fill="rgb(230,152,13)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="788" width="4" height="15" fill="rgb(207,84,24)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="804" width="4" height="15" fill="rgb(229,132,0)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="820" width="4" height="15" fill="rgb(237,163,11)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(230,178,7)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(218,129,51)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.32%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(224,62,48)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="884" width="4" height="15" fill="rgb(244,125,54)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="900" width="4" height="15" fill="rgb(249,229,27)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(215,14,15)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(206,123,19)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="948" width="4" height="15" fill="rgb(213,152,27)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="964" width="4" height="15" fill="rgb(245,135,45)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="19" y="980" width="4" height="15" fill="rgb(224,203,29)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="996" width="4" height="15" fill="rgb(230,178,19)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.32%)</title><rect x="19" y="1012" width="4" height="15" fill="rgb(239,126,52)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1028" width="4" height="15" fill="rgb(224,217,25)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1044" width="4" height="15" fill="rgb(213,99,36)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1060" width="4" height="15" fill="rgb(225,72,47)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="19" y="1076" width="4" height="15" fill="rgb(207,15,26)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1092" width="4" height="15" fill="rgb(245,44,27)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.32%)</title><rect x="19" y="1108" width="4" height="15" fill="rgb(232,135,40)"/><text x="22.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1124" width="4" height="15" fill="rgb(222,53,39)"/><text x="22.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1140" width="4" height="15" fill="rgb(235,53,40)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1156" width="4" height="15" fill="rgb(249,72,41)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1172" width="4" height="15" fill="rgb(250,150,42)"/><text x="22.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1188" width="4" height="15" fill="rgb(233,29,14)"/><text x="22.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="19" y="1204" width="4" height="15" fill="rgb(254,139,48)"/><text x="22.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="19" y="1220" width="4" height="15" fill="rgb(219,226,51)"/><text x="22.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1236" width="1" height="15" fill="rgb(237,190,0)"/><text x="25.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1252" width="1" height="15" fill="rgb(210,45,15)"/><text x="25.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1268" width="1" height="15" fill="rgb(225,0,33)"/><text x="25.00" y="1278.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1284" width="1" height="15" fill="rgb(208,109,29)"/><text x="25.00" y="1294.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1300" width="1" height="15" fill="rgb(216,94,17)"/><text x="25.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.11%)</title><rect x="23" y="724" width="1" height="15" fill="rgb(206,206,47)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="740" width="1" height="15" fill="rgb(222,159,27)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="756" width="1" height="15" fill="rgb(212,56,14)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="772" width="1" height="15" fill="rgb(249,214,14)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="788" width="1" height="15" fill="rgb(213,146,27)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="804" width="1" height="15" fill="rgb(251,91,39)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.11%)</title><rect x="23" y="820" width="1" height="15" fill="rgb(215,167,34)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="836" width="1" height="15" fill="rgb(231,19,3)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="852" width="1" height="15" fill="rgb(250,138,16)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="868" width="1" height="15" fill="rgb(237,150,29)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="884" width="1" height="15" fill="rgb(223,219,54)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="900" width="1" height="15" fill="rgb(250,208,44)"/><text x="26.00" y="910.50"></text></g><g><title>0x7fb2a42b740e (?) (1 samples, 0.11%)</title><rect x="23" y="916" width="1" height="15" fill="rgb(246,226,41)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="932" width="1" height="15" fill="rgb(217,20,5)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="948" width="1" height="15" fill="rgb(245,162,17)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="964" width="1" height="15" fill="rgb(218,179,31)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="980" width="1" height="15" fill="rgb(238,32,28)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="996" width="1" height="15" fill="rgb(238,214,51)"/><text x="26.00" y="1006.50"></text></g><g><title>0x7fb2a4070cd2 (?) (1 samples, 0.11%)</title><rect x="23" y="1012" width="1" height="15" fill="rgb(219,58,54)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(232,128,22)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1044" width="1" height="15" fill="rgb(251,22,26)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1060" width="1" height="15" fill="rgb(229,104,44)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="1076" width="1" height="15" fill="rgb(241,15,36)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1092" width="1" height="15" fill="rgb(222,116,21)"/><text x="26.00" y="1102.50"></text></g><g><title>0x7fb2a37660e5 (?) (1 samples, 0.11%)</title><rect x="23" y="1108" width="1" height="15" fill="rgb(241,138,52)"/><text x="26.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(215,39,0)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(243,2,15)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(236,28,48)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="1172" width="1" height="15" fill="rgb(217,201,42)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1188" width="1" height="15" fill="rgb(210,10,16)"/><text x="26.00" y="1198.50"></text></g><g><title>0x7fb2a34eae68 (?) (1 samples, 0.11%)</title><rect x="23" y="1204" width="1" height="15" fill="rgb(216,149,42)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1220" width="1" height="15" fill="rgb(249,191,44)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(211,177,4)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(250,219,12)"/><text x="26.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(244,187,25)"/><text x="26.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(219,189,34)"/><text x="26.00" y="1294.50"></text></g><g><title>0x7fb2a327b2fb (?) (1 samples, 0.11%)</title><rect x="23" y="1300" width="1" height="15" fill="rgb(225,175,43)"/><text x="26.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1316" width="1" height="15" fill="rgb(229,0,22)"/><text x="26.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1332" width="1" height="15" fill="rgb(211,184,18)"/><text x="26.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1348" width="1" height="15" fill="rgb(231,197,24)"/><text x="26.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(250,2,52)"/><text x="26.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1380" width="1" height="15" fill="rgb(225,135,30)"/><text x="26.00" y="1390.50"></text></g><g><title>0x7fb2a305f153 (?) (1 samples, 0.11%)</title><rect x="23" y="1396" width="1" height="15" fill="rgb(209,49,31)"/><text x="26.00" y="1406.50"></text></g><g><title>0x7fb2a305dc13 (?) (1 samples, 0.11%)</title><rect x="23" y="1412" width="1" height="15" fill="rgb(212,154,31)"/><text x="26.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1428" width="1" height="15" fill="rgb(230,210,33)"/><text x="26.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1444" width="1" height="15" fill="rgb(228,5,4)"/><text x="26.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1460" width="1" height="15" fill="rgb(221,144,45)"/><text x="26.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="1476" width="1" height="15" fill="rgb(235,100,18)"/><text x="26.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1492" width="1" height="15" fill="rgb(218,84,44)"/><text x="26.00" y="1502.50"></text></g><g><title>0x7fb2a2dfa181 (?) (1 samples, 0.11%)</title><rect x="23" y="1508" width="1" height="15" fill="rgb(239,45,9)"/><text x="26.00" y="1518.50"></text></g><g><title>0x7fb2a2dfd1c9 (?) (1 samples, 0.11%)</title><rect x="23" y="1524" width="1" height="15" fill="rgb(232,98,46)"/><text x="26.00" y="1534.50"></text></g><g><title>0x7fb2a2e29167 (?) (1 samples, 0.11%)</title><rect x="23" y="1540" width="1" height="15" fill="rgb(238,75,21)"/><text x="26.00" y="1550.50"></text></g><g><title>0x7fb2a2e24b64 (?) (1 samples, 0.11%)</title><rect x="23" y="1556" width="1" height="15" fill="rgb(227,150,41)"/><text x="26.00" y="1566.50"></text></g><g><title>0x7fb2a2e0807b (?) (1 samples, 0.11%)</title><rect x="23" y="1572" width="1" height="15" fill="rgb(241,43,13)"/><text x="26.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.11%)</title><rect x="23" y="1588" width="1" height="15" fill="rgb(246,13,11)"/><text x="26.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="23" y="1604" width="1" height="15" fill="rgb(213,135,39)"/><text x="26.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="23" y="1620" width="1" height="15" fill="rgb(245,30,13)"/><text x="26.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="23" y="1636" width="1" height="15" fill="rgb(234,9,34)"/><text x="26.00" y="1646.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.11%)</title><rect x="23" y="1652" width="1" height="15" fill="rgb(226,167,5)"/><text x="26.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(211,115,19)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(252,50,33)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(233,41,35)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(211,173,0)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(247,158,19)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(219,122,12)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.11%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(226,114,10)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(234,154,11)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(252,128,25)"/><text x="27.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(216,154,11)"/><text x="27.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(227,133,7)"/><text x="27.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(220,15,2)"/><text x="27.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.11%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(238,120,25)"/><text x="27.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(209,67,49)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(206,127,19)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(226,58,28)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(215,188,4)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(238,193,24)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(252,43,20)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(207,202,25)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.11%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(205,94,53)"/><text x="27.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(254,150,26)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(215,142,14)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(248,133,51)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(215,153,52)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(231,190,31)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(237,4,44)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(226,189,43)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(254,129,17)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py) (1 samples, 0.11%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(222,70,54)"/><text x="27.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(215,84,31)"/><text x="27.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(244,48,2)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(241,90,14)"/><text x="27.00" y="1294.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(217,167,2)"/><text x="27.00" y="1310.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(210,21,14)"/><text x="27.00" y="1326.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(239,170,54)"/><text x="27.00" y="1342.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(224,227,41)"/><text x="27.00" y="1358.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(211,155,8)"/><text x="27.00" y="1374.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(212,177,18)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(210,51,50)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(207,71,29)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(213,171,42)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(236,133,34)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(252,144,31)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.11%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(213,140,0)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(218,116,17)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(242,46,46)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(252,127,51)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(243,205,27)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(230,21,15)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py) (1 samples, 0.11%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(243,13,48)"/><text x="29.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 0.74%)</title><rect x="19" y="340" width="9" height="15" fill="rgb(238,52,37)"/><text x="22.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.74%)</title><rect x="19" y="356" width="9" height="15" fill="rgb(241,105,48)"/><text x="22.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.74%)</title><rect x="19" y="372" width="9" height="15" fill="rgb(243,51,0)"/><text x="22.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.74%)</title><rect x="19" y="388" width="9" height="15" fill="rgb(240,122,13)"/><text x="22.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.74%)</title><rect x="19" y="404" width="9" height="15" fill="rgb(247,5,21)"/><text x="22.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.74%)</title><rect x="19" y="420" width="9" height="15" fill="rgb(251,209,35)"/><text x="22.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 0.74%)</title><rect x="19" y="436" width="9" height="15" fill="rgb(218,214,54)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.74%)</title><rect x="19" y="452" width="9" height="15" fill="rgb(219,149,44)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.74%)</title><rect x="19" y="468" width="9" height="15" fill="rgb(225,136,45)"/><text x="22.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="484" width="5" height="15" fill="rgb(251,19,13)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="23" y="500" width="5" height="15" fill="rgb(228,15,7)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="516" width="5" height="15" fill="rgb(223,87,9)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.42%)</title><rect x="23" y="532" width="5" height="15" fill="rgb(225,222,12)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="548" width="5" height="15" fill="rgb(221,27,47)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="564" width="5" height="15" fill="rgb(209,69,49)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="580" width="5" height="15" fill="rgb(205,12,20)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="23" y="596" width="5" height="15" fill="rgb(232,180,44)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="612" width="5" height="15" fill="rgb(242,79,6)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.42%)</title><rect x="23" y="628" width="5" height="15" fill="rgb(226,133,7)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="644" width="5" height="15" fill="rgb(215,133,48)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="660" width="5" height="15" fill="rgb(237,149,47)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="676" width="5" height="15" fill="rgb(220,144,5)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="23" y="692" width="5" height="15" fill="rgb(230,6,53)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="23" y="708" width="5" height="15" fill="rgb(233,61,27)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.32%)</title><rect x="24" y="724" width="4" height="15" fill="rgb(232,112,2)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="24" y="740" width="4" height="15" fill="rgb(214,44,39)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="24" y="756" width="4" height="15" fill="rgb(230,32,6)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(248,192,18)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(215,28,2)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(236,160,32)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.21%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(228,222,29)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(206,120,11)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(227,107,21)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(219,79,44)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(246,48,53)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(212,86,47)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.21%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(246,5,46)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(205,162,8)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(249,120,25)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(229,33,43)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(242,228,11)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(209,118,43)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.21%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(249,59,12)"/><text x="29.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1028" width="1" height="15" fill="rgb(221,61,0)"/><text x="30.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1044" width="1" height="15" fill="rgb(240,38,42)"/><text x="30.00" y="1054.50"></text></g><g><title>_flex_comp_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1060" width="1" height="15" fill="rgb(213,115,25)"/><text x="30.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.11%)</title><rect x="27" y="1076" width="1" height="15" fill="rgb(238,55,22)"/><text x="30.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.11%)</title><rect x="27" y="1092" width="1" height="15" fill="rgb(246,170,2)"/><text x="30.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.11%)</title><rect x="27" y="1108" width="1" height="15" fill="rgb(213,76,36)"/><text x="30.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="27" y="1124" width="1" height="15" fill="rgb(229,178,27)"/><text x="30.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="28" y="580" width="1" height="15" fill="rgb(251,65,24)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="596" width="1" height="15" fill="rgb(207,122,15)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="612" width="1" height="15" fill="rgb(210,136,22)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="628" width="1" height="15" fill="rgb(243,218,35)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="644" width="1" height="15" fill="rgb(234,20,46)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="660" width="1" height="15" fill="rgb(222,145,50)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="28" y="676" width="1" height="15" fill="rgb(209,48,49)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="692" width="1" height="15" fill="rgb(234,218,21)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="708" width="1" height="15" fill="rgb(214,213,29)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="724" width="1" height="15" fill="rgb(227,163,53)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="740" width="1" height="15" fill="rgb(228,160,51)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="756" width="1" height="15" fill="rgb(235,46,36)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="772" width="1" height="15" fill="rgb(210,40,43)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="788" width="1" height="15" fill="rgb(224,14,36)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="804" width="1" height="15" fill="rgb(236,133,18)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="820" width="1" height="15" fill="rgb(247,59,20)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="836" width="1" height="15" fill="rgb(221,177,54)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="852" width="1" height="15" fill="rgb(241,135,39)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="868" width="1" height="15" fill="rgb(230,87,20)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="884" width="1" height="15" fill="rgb(219,223,20)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.11%)</title><rect x="28" y="900" width="1" height="15" fill="rgb(220,124,22)"/><text x="31.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="916" width="1" height="15" fill="rgb(216,226,18)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="932" width="1" height="15" fill="rgb(222,201,21)"/><text x="31.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="948" width="1" height="15" fill="rgb(235,153,45)"/><text x="31.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="964" width="1" height="15" fill="rgb(223,133,15)"/><text x="31.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="980" width="1" height="15" fill="rgb(238,32,5)"/><text x="31.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="996" width="1" height="15" fill="rgb(212,228,0)"/><text x="31.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1012" width="1" height="15" fill="rgb(211,114,47)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1028" width="1" height="15" fill="rgb(205,111,35)"/><text x="31.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1044" width="1" height="15" fill="rgb(212,193,13)"/><text x="31.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1060" width="1" height="15" fill="rgb(210,204,15)"/><text x="31.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1076" width="1" height="15" fill="rgb(220,189,44)"/><text x="31.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.11%)</title><rect x="28" y="1092" width="1" height="15" fill="rgb(207,98,10)"/><text x="31.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.11%)</title><rect x="28" y="1108" width="1" height="15" fill="rgb(229,217,27)"/><text x="31.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.11%)</title><rect x="28" y="1124" width="1" height="15" fill="rgb(234,25,26)"/><text x="31.00" y="1134.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.11%)</title><rect x="28" y="1140" width="1" height="15" fill="rgb(208,205,50)"/><text x="31.00" y="1150.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="28" y="1156" width="1" height="15" fill="rgb(223,44,27)"/><text x="31.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="28" y="1172" width="1" height="15" fill="rgb(243,224,0)"/><text x="31.00" y="1182.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.11%)</title><rect x="28" y="1188" width="1" height="15" fill="rgb(215,31,9)"/><text x="31.00" y="1198.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.11%)</title><rect x="28" y="1204" width="1" height="15" fill="rgb(233,70,27)"/><text x="31.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 0.95%)</title><rect x="19" y="244" width="12" height="15" fill="rgb(205,146,35)"/><text x="22.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.95%)</title><rect x="19" y="260" width="12" height="15" fill="rgb(250,155,35)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.95%)</title><rect x="19" y="276" width="12" height="15" fill="rgb(246,219,38)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.95%)</title><rect x="19" y="292" width="12" height="15" fill="rgb(245,15,31)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.95%)</title><rect x="19" y="308" width="12" height="15" fill="rgb(254,8,28)"/><text x="22.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.95%)</title><rect x="19" y="324" width="12" height="15" fill="rgb(220,127,36)"/><text x="22.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.21%)</title><rect x="28" y="340" width="3" height="15" fill="rgb(235,176,8)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="356" width="3" height="15" fill="rgb(230,124,12)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="372" width="3" height="15" fill="rgb(228,169,14)"/><text x="31.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="388" width="3" height="15" fill="rgb(249,26,20)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="404" width="3" height="15" fill="rgb(245,158,8)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="420" width="3" height="15" fill="rgb(213,135,8)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="436" width="3" height="15" fill="rgb(230,38,23)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="28" y="452" width="3" height="15" fill="rgb(219,37,31)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="468" width="3" height="15" fill="rgb(250,36,22)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.21%)</title><rect x="28" y="484" width="3" height="15" fill="rgb(254,24,3)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="500" width="3" height="15" fill="rgb(227,113,29)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="516" width="3" height="15" fill="rgb(241,223,43)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="532" width="3" height="15" fill="rgb(227,180,45)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="28" y="548" width="3" height="15" fill="rgb(231,153,4)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="28" y="564" width="3" height="15" fill="rgb(223,20,32)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/unittestclass.py) (1 samples, 0.11%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(229,112,25)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(226,104,12)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(231,49,48)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(225,143,6)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(250,49,12)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(241,196,54)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/profiling.py) (1 samples, 0.11%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(220,23,47)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(245,137,25)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(205,139,54)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(251,196,53)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(210,20,43)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(230,164,26)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (cProfile.py) (1 samples, 0.11%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(229,0,1)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(251,68,51)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(236,161,15)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(205,178,47)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(218,40,30)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(229,81,44)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (profile.py) (1 samples, 0.11%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(214,45,35)"/><text x="32.00" y="878.50"></text></g><g><title>Profile (profile.py) (1 samples, 0.11%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(247,193,28)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(212,144,24)"/><text x="34.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="260" width="1" height="15" fill="rgb(230,35,48)"/><text x="34.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="276" width="1" height="15" fill="rgb(241,187,36)"/><text x="34.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="292" width="1" height="15" fill="rgb(252,183,26)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="308" width="1" height="15" fill="rgb(206,118,38)"/><text x="34.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="324" width="1" height="15" fill="rgb(239,78,42)"/><text x="34.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="340" width="1" height="15" fill="rgb(241,152,53)"/><text x="34.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="356" width="1" height="15" fill="rgb(247,1,15)"/><text x="34.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="372" width="1" height="15" fill="rgb(250,180,47)"/><text x="34.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="388" width="1" height="15" fill="rgb(217,23,26)"/><text x="34.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="404" width="1" height="15" fill="rgb(226,8,32)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="420" width="1" height="15" fill="rgb(244,157,0)"/><text x="34.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="436" width="1" height="15" fill="rgb(218,80,17)"/><text x="34.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="452" width="1" height="15" fill="rgb(232,92,29)"/><text x="34.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="468" width="1" height="15" fill="rgb(251,86,36)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="484" width="1" height="15" fill="rgb(232,210,25)"/><text x="34.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.11%)</title><rect x="31" y="500" width="1" height="15" fill="rgb(244,86,5)"/><text x="34.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.11%)</title><rect x="31" y="516" width="1" height="15" fill="rgb(248,213,46)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.00%)</title><rect x="10" y="68" width="23" height="15" fill="rgb(214,78,15)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.00%)</title><rect x="10" y="84" width="23" height="15" fill="rgb(217,107,0)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.00%)</title><rect x="10" y="100" width="23" height="15" fill="rgb(213,60,44)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 2.00%)</title><rect x="10" y="116" width="23" height="15" fill="rgb(230,180,24)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.00%)</title><rect x="10" y="132" width="23" height="15" fill="rgb(209,154,31)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (19 samples, 2.00%)</title><rect x="10" y="148" width="23" height="15" fill="rgb(252,82,29)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.00%)</title><rect x="10" y="164" width="23" height="15" fill="rgb(249,23,36)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.00%)</title><rect x="10" y="180" width="23" height="15" fill="rgb(233,25,41)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.16%)</title><rect x="19" y="196" width="14" height="15" fill="rgb(246,203,10)"/><text x="22.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.16%)</title><rect x="19" y="212" width="14" height="15" fill="rgb(229,9,15)"/><text x="22.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.16%)</title><rect x="19" y="228" width="14" height="15" fill="rgb(210,132,8)"/><text x="22.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.11%)</title><rect x="32" y="244" width="1" height="15" fill="rgb(215,199,38)"/><text x="35.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="260" width="1" height="15" fill="rgb(228,90,29)"/><text x="35.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="276" width="1" height="15" fill="rgb(231,150,33)"/><text x="35.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="292" width="1" height="15" fill="rgb(218,31,50)"/><text x="35.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="32" y="308" width="1" height="15" fill="rgb(228,222,19)"/><text x="35.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="324" width="1" height="15" fill="rgb(254,221,41)"/><text x="35.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py) (1 samples, 0.11%)</title><rect x="32" y="340" width="1" height="15" fill="rgb(229,72,49)"/><text x="35.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="356" width="1" height="15" fill="rgb(241,161,34)"/><text x="35.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="372" width="1" height="15" fill="rgb(215,46,3)"/><text x="35.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="388" width="1" height="15" fill="rgb(229,52,51)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="404" width="1" height="15" fill="rgb(254,178,25)"/><text x="35.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="420" width="1" height="15" fill="rgb(242,191,45)"/><text x="35.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="32" y="436" width="1" height="15" fill="rgb(219,116,20)"/><text x="35.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="452" width="1" height="15" fill="rgb(211,8,40)"/><text x="35.00" y="462.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb_losses.py) (1 samples, 0.11%)</title><rect x="32" y="468" width="1" height="15" fill="rgb(224,104,6)"/><text x="35.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="484" width="1" height="15" fill="rgb(224,48,4)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="500" width="1" height="15" fill="rgb(221,76,34)"/><text x="35.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="32" y="516" width="1" height="15" fill="rgb(217,165,10)"/><text x="35.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="32" y="532" width="1" height="15" fill="rgb(223,126,15)"/><text x="35.00" y="542.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="32" y="548" width="1" height="15" fill="rgb(233,40,30)"/><text x="35.00" y="558.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="32" y="564" width="1" height="15" fill="rgb(228,45,30)"/><text x="35.00" y="574.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="37" y="340" width="1" height="15" fill="rgb(250,200,35)"/><text x="40.00" y="350.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="340" width="1" height="15" fill="rgb(222,120,40)"/><text x="41.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="356" width="1" height="15" fill="rgb(240,173,30)"/><text x="41.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="38" y="372" width="1" height="15" fill="rgb(241,203,20)"/><text x="41.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="356" width="2" height="15" fill="rgb(222,89,47)"/><text x="42.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="372" width="2" height="15" fill="rgb(248,49,32)"/><text x="42.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="388" width="2" height="15" fill="rgb(209,199,36)"/><text x="42.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="39" y="340" width="3" height="15" fill="rgb(250,174,37)"/><text x="42.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="41" y="356" width="1" height="15" fill="rgb(227,76,30)"/><text x="44.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="41" y="372" width="1" height="15" fill="rgb(210,174,12)"/><text x="44.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="41" y="388" width="1" height="15" fill="rgb(207,67,47)"/><text x="44.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="41" y="404" width="1" height="15" fill="rgb(214,139,4)"/><text x="44.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="41" y="420" width="1" height="15" fill="rgb(230,223,26)"/><text x="44.00" y="430.50"></text></g><g><title>0x7fb2ced88028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="41" y="436" width="1" height="15" fill="rgb(210,4,8)"/><text x="44.00" y="446.50"></text></g><g><title>0x7fb2ced85c98 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="41" y="452" width="1" height="15" fill="rgb(221,84,51)"/><text x="44.00" y="462.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="42" y="340" width="1" height="15" fill="rgb(241,199,37)"/><text x="45.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.84%)</title><rect x="43" y="340" width="10" height="15" fill="rgb(229,229,26)"/><text x="46.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.69%)</title><rect x="53" y="372" width="20" height="15" fill="rgb(208,111,42)"/><text x="56.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="69" y="388" width="4" height="15" fill="rgb(230,86,27)"/><text x="72.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="73" y="372" width="5" height="15" fill="rgb(225,56,38)"/><text x="76.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="73" y="388" width="5" height="15" fill="rgb(250,152,39)"/><text x="76.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="73" y="404" width="5" height="15" fill="rgb(237,1,10)"/><text x="76.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="73" y="420" width="5" height="15" fill="rgb(206,44,14)"/><text x="76.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="73" y="436" width="5" height="15" fill="rgb(231,24,45)"/><text x="76.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="73" y="452" width="5" height="15" fill="rgb(212,124,39)"/><text x="76.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="75" y="468" width="3" height="15" fill="rgb(244,198,11)"/><text x="78.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="75" y="484" width="3" height="15" fill="rgb(231,190,39)"/><text x="78.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="75" y="500" width="3" height="15" fill="rgb(253,104,19)"/><text x="78.00" y="510.50"></text></g><g><title>0x7fb2ced87d48 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="77" y="516" width="1" height="15" fill="rgb(232,4,26)"/><text x="80.00" y="526.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.22%)</title><rect x="53" y="340" width="26" height="15" fill="rgb(244,92,1)"/><text x="56.00" y="350.50">o..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.22%)</title><rect x="53" y="356" width="26" height="15" fill="rgb(246,10,30)"/><text x="56.00" y="366.50">o..</text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="372" width="1" height="15" fill="rgb(228,132,34)"/><text x="81.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="388" width="1" height="15" fill="rgb(232,141,51)"/><text x="81.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="404" width="1" height="15" fill="rgb(215,52,14)"/><text x="81.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="78" y="420" width="1" height="15" fill="rgb(223,194,6)"/><text x="81.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="78" y="436" width="1" height="15" fill="rgb(251,129,39)"/><text x="81.00" y="446.50"></text></g><g><title>0x7fb2ced87c5a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="78" y="452" width="1" height="15" fill="rgb(223,87,43)"/><text x="81.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="79" y="340" width="1" height="15" fill="rgb(230,83,45)"/><text x="82.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="79" y="356" width="1" height="15" fill="rgb(223,220,10)"/><text x="82.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.74%)</title><rect x="80" y="340" width="9" height="15" fill="rgb(233,49,27)"/><text x="83.00" y="350.50"></text></g><g><title>0x7fb2ced86a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="89" y="356" width="1" height="15" fill="rgb(240,118,18)"/><text x="92.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="89" y="340" width="4" height="15" fill="rgb(246,107,2)"/><text x="92.00" y="350.50"></text></g><g><title>onnxruntime::ReshapeHelper::ReshapeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="90" y="356" width="3" height="15" fill="rgb(210,80,12)"/><text x="93.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.58%)</title><rect x="93" y="372" width="19" height="15" fill="rgb(249,179,11)"/><text x="96.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="108" y="388" width="4" height="15" fill="rgb(214,199,26)"/><text x="111.00" y="398.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="112" y="372" width="1" height="15" fill="rgb(221,166,50)"/><text x="115.00" y="382.50"></text></g><g><title>0x7fb2ced8691e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="112" y="388" width="1" height="15" fill="rgb(233,143,4)"/><text x="115.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.79%)</title><rect x="93" y="340" width="21" height="15" fill="rgb(243,45,29)"/><text x="96.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.79%)</title><rect x="93" y="356" width="21" height="15" fill="rgb(215,131,4)"/><text x="96.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="113" y="372" width="1" height="15" fill="rgb(234,45,7)"/><text x="116.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="114" y="372" width="1" height="15" fill="rgb(248,176,12)"/><text x="117.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="114" y="388" width="1" height="15" fill="rgb(230,33,19)"/><text x="117.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="114" y="404" width="1" height="15" fill="rgb(238,172,17)"/><text x="117.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="114" y="420" width="1" height="15" fill="rgb(231,114,46)"/><text x="117.00" y="430.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="114" y="436" width="1" height="15" fill="rgb(213,165,23)"/><text x="117.00" y="446.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="114" y="340" width="3" height="15" fill="rgb(235,77,36)"/><text x="117.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="114" y="356" width="3" height="15" fill="rgb(229,195,7)"/><text x="117.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="115" y="372" width="2" height="15" fill="rgb(245,116,16)"/><text x="118.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="115" y="388" width="2" height="15" fill="rgb(244,38,54)"/><text x="118.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="115" y="404" width="2" height="15" fill="rgb(218,97,41)"/><text x="118.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="115" y="420" width="2" height="15" fill="rgb(242,108,53)"/><text x="118.00" y="430.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="115" y="436" width="2" height="15" fill="rgb(245,113,53)"/><text x="118.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="115" y="452" width="2" height="15" fill="rgb(209,224,2)"/><text x="118.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="115" y="468" width="2" height="15" fill="rgb(252,74,13)"/><text x="118.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="115" y="484" width="2" height="15" fill="rgb(217,189,13)"/><text x="118.00" y="494.50"></text></g><g><title>0x7fb28ea0c9d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="156" y="356" width="2" height="15" fill="rgb(250,189,4)"/><text x="159.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="158" y="356" width="5" height="15" fill="rgb(243,200,22)"/><text x="161.00" y="366.50"></text></g><g><title>0x7fb28ea0b930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="241" y="388" width="3" height="15" fill="rgb(244,50,10)"/><text x="244.00" y="398.50"></text></g><g><title>0x7fb2be852d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="246" y="404" width="1" height="15" fill="rgb(222,85,32)"/><text x="249.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (24 samples, 2.53%)</title><rect x="244" y="388" width="29" height="15" fill="rgb(251,175,13)"/><text x="247.00" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (21 samples, 2.22%)</title><rect x="247" y="404" width="26" height="15" fill="rgb(247,43,2)"/><text x="250.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 10.13%)</title><rect x="163" y="356" width="119" height="15" fill="rgb(242,152,50)"/><text x="166.00" y="366.50">onnxruntime::m..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 5.49%)</title><rect x="217" y="372" width="65" height="15" fill="rgb(225,60,49)"/><text x="220.00" y="382.50">std::_R..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (7 samples, 0.74%)</title><rect x="273" y="388" width="9" height="15" fill="rgb(209,62,1)"/><text x="276.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.16%)</title><rect x="282" y="356" width="14" height="15" fill="rgb(229,189,18)"/><text x="285.00" y="366.50"></text></g><g><title>0x7fb2ceda6d97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="295" y="372" width="1" height="15" fill="rgb(240,116,3)"/><text x="298.00" y="382.50"></text></g><g><title>0x7fb2ced86908 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="296" y="372" width="1" height="15" fill="rgb(243,154,29)"/><text x="299.00" y="382.50"></text></g><g><title>0x7fb2ced8690e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="297" y="372" width="1" height="15" fill="rgb(241,117,22)"/><text x="300.00" y="382.50"></text></g><g><title>0x7fb2ced8692c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="298" y="372" width="2" height="15" fill="rgb(248,182,44)"/><text x="301.00" y="382.50"></text></g><g><title>0x7fb2ced86945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="300" y="372" width="1" height="15" fill="rgb(225,82,20)"/><text x="303.00" y="382.50"></text></g><g><title>0x7fb2ced86961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="301" y="372" width="1" height="15" fill="rgb(241,186,33)"/><text x="304.00" y="382.50"></text></g><g><title>0x7fb2ced86965 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="302" y="372" width="3" height="15" fill="rgb(228,120,45)"/><text x="305.00" y="382.50"></text></g><g><title>0x7fb2ced86991 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="305" y="372" width="2" height="15" fill="rgb(244,221,35)"/><text x="308.00" y="382.50"></text></g><g><title>0x7fb2ced86998 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="307" y="372" width="2" height="15" fill="rgb(243,198,15)"/><text x="310.00" y="382.50"></text></g><g><title>0x7fb2ced86a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="309" y="372" width="2" height="15" fill="rgb(214,157,37)"/><text x="312.00" y="382.50"></text></g><g><title>0x7fb2ced86bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="311" y="372" width="1" height="15" fill="rgb(232,159,50)"/><text x="314.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (7 samples, 0.74%)</title><rect x="312" y="372" width="9" height="15" fill="rgb(225,85,52)"/><text x="315.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="321" y="372" width="1" height="15" fill="rgb(247,20,49)"/><text x="324.00" y="382.50"></text></g><g><title>0x7fb2ced86902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="332" y="388" width="1" height="15" fill="rgb(250,1,16)"/><text x="335.00" y="398.50"></text></g><g><title>0x7fb2ced86904 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="333" y="388" width="3" height="15" fill="rgb(222,131,43)"/><text x="336.00" y="398.50"></text></g><g><title>0x7fb2ced8690a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="336" y="388" width="1" height="15" fill="rgb(225,161,40)"/><text x="339.00" y="398.50"></text></g><g><title>0x7fb2ced8691c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="388" width="1" height="15" fill="rgb(221,134,18)"/><text x="340.00" y="398.50"></text></g><g><title>0x7fb2ced8691e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="338" y="388" width="1" height="15" fill="rgb(206,72,32)"/><text x="341.00" y="398.50"></text></g><g><title>0x7fb2ced86929 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="339" y="388" width="3" height="15" fill="rgb(238,85,4)"/><text x="342.00" y="398.50"></text></g><g><title>0x7fb2ced8693b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="342" y="388" width="1" height="15" fill="rgb(237,11,26)"/><text x="345.00" y="398.50"></text></g><g><title>0x7fb2ced86965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="343" y="388" width="1" height="15" fill="rgb(213,131,39)"/><text x="346.00" y="398.50"></text></g><g><title>0x7fb2ced86991 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="344" y="388" width="3" height="15" fill="rgb(214,94,43)"/><text x="347.00" y="398.50"></text></g><g><title>0x7fb2ced86998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="347" y="388" width="1" height="15" fill="rgb(234,84,40)"/><text x="350.00" y="398.50"></text></g><g><title>0x7fb2ced86bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="348" y="388" width="1" height="15" fill="rgb(246,95,12)"/><text x="351.00" y="398.50"></text></g><g><title>0x7fb2ced86be8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="349" y="388" width="2" height="15" fill="rgb(237,103,53)"/><text x="352.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="351" y="388" width="2" height="15" fill="rgb(226,49,48)"/><text x="354.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 4.96%)</title><rect x="296" y="356" width="58" height="15" fill="rgb(241,81,53)"/><text x="299.00" y="366.50">std::_..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 2.74%)</title><rect x="322" y="372" width="32" height="15" fill="rgb(241,155,23)"/><text x="325.00" y="382.50">st..</text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="353" y="388" width="1" height="15" fill="rgb(212,5,50)"/><text x="356.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (200 samples, 21.10%)</title><rect x="117" y="340" width="248" height="15" fill="rgb(226,213,41)"/><text x="120.00" y="350.50">onnxruntime::ml::TreeEnsembleClas..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (9 samples, 0.95%)</title><rect x="354" y="356" width="11" height="15" fill="rgb(234,59,25)"/><text x="357.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 28.16%)</title><rect x="37" y="260" width="332" height="15" fill="rgb(220,215,50)"/><text x="40.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 28.16%)</title><rect x="37" y="276" width="332" height="15" fill="rgb(247,101,3)"/><text x="40.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 28.16%)</title><rect x="37" y="292" width="332" height="15" fill="rgb(227,200,16)"/><text x="40.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 28.16%)</title><rect x="37" y="308" width="332" height="15" fill="rgb(210,212,28)"/><text x="40.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 28.16%)</title><rect x="37" y="324" width="332" height="15" fill="rgb(234,160,36)"/><text x="40.00" y="334.50">onnxruntime::SequentialExecutor::Execute (on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="365" y="340" width="4" height="15" fill="rgb(247,103,46)"/><text x="368.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="365" y="356" width="4" height="15" fill="rgb(234,105,29)"/><text x="368.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="365" y="372" width="4" height="15" fill="rgb(253,64,46)"/><text x="368.00" y="382.50"></text></g><g><title>0x7fb2ced882f8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="368" y="388" width="1" height="15" fill="rgb(230,166,4)"/><text x="371.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (275 samples, 29.01%)</title><rect x="33" y="100" width="342" height="15" fill="rgb(217,14,32)"/><text x="36.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (273 samples, 28.80%)</title><rect x="36" y="116" width="339" height="15" fill="rgb(218,66,11)"/><text x="39.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (273 samples, 28.80%)</title><rect x="36" y="132" width="339" height="15" fill="rgb(246,89,27)"/><text x="39.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (273 samples, 28.80%)</title><rect x="36" y="148" width="339" height="15" fill="rgb(229,206,7)"/><text x="39.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (272 samples, 28.69%)</title><rect x="37" y="164" width="338" height="15" fill="rgb(237,106,14)"/><text x="40.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (272 samples, 28.69%)</title><rect x="37" y="180" width="338" height="15" fill="rgb(227,201,36)"/><text x="40.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (272 samples, 28.69%)</title><rect x="37" y="196" width="338" height="15" fill="rgb(245,219,30)"/><text x="40.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (272 samples, 28.69%)</title><rect x="37" y="212" width="338" height="15" fill="rgb(233,114,16)"/><text x="40.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrunti..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (272 samples, 28.69%)</title><rect x="37" y="228" width="338" height="15" fill="rgb(226,93,33)"/><text x="40.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxr..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (272 samples, 28.69%)</title><rect x="37" y="244" width="338" height="15" fill="rgb(212,14,53)"/><text x="40.00" y="254.50">onnxruntime::python::addObjectMethods(pybind1..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.53%)</title><rect x="369" y="260" width="6" height="15" fill="rgb(233,27,8)"/><text x="372.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="374" y="276" width="1" height="15" fill="rgb(214,17,5)"/><text x="377.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="372" width="2" height="15" fill="rgb(245,100,17)"/><text x="378.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="388" width="2" height="15" fill="rgb(254,148,18)"/><text x="378.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="404" width="2" height="15" fill="rgb(244,26,14)"/><text x="378.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="375" y="420" width="2" height="15" fill="rgb(246,118,0)"/><text x="378.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="436" width="2" height="15" fill="rgb(244,83,46)"/><text x="378.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.11%)</title><rect x="375" y="452" width="2" height="15" fill="rgb(206,94,21)"/><text x="378.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="468" width="2" height="15" fill="rgb(234,175,23)"/><text x="378.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="484" width="2" height="15" fill="rgb(207,95,22)"/><text x="378.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="500" width="2" height="15" fill="rgb(243,32,19)"/><text x="378.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="516" width="2" height="15" fill="rgb(244,181,41)"/><text x="378.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="375" y="532" width="2" height="15" fill="rgb(230,138,47)"/><text x="378.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="375" y="548" width="2" height="15" fill="rgb(208,68,15)"/><text x="378.00" y="558.50"></text></g><g><title>0x7fb28ea4caf0 (?) (1 samples, 0.11%)</title><rect x="375" y="564" width="2" height="15" fill="rgb(208,42,4)"/><text x="378.00" y="574.50"></text></g><g><title>0x7fb28ea5f1d2 (?) (1 samples, 0.11%)</title><rect x="375" y="580" width="2" height="15" fill="rgb(211,73,36)"/><text x="378.00" y="590.50"></text></g><g><title>0x7fb28ea5e7b8 (?) (1 samples, 0.11%)</title><rect x="375" y="596" width="2" height="15" fill="rgb(243,165,47)"/><text x="378.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="375" y="612" width="2" height="15" fill="rgb(226,32,26)"/><text x="378.00" y="622.50"></text></g><g><title>0x7fb28ea5c994 (?) (1 samples, 0.11%)</title><rect x="375" y="628" width="2" height="15" fill="rgb(224,82,3)"/><text x="378.00" y="638.50"></text></g><g><title>0x7fb28ea5b37b (?) (1 samples, 0.11%)</title><rect x="375" y="644" width="2" height="15" fill="rgb(214,60,27)"/><text x="378.00" y="654.50"></text></g><g><title>0x7fb28efdcbec (?) (1 samples, 0.11%)</title><rect x="375" y="660" width="2" height="15" fill="rgb(233,28,15)"/><text x="378.00" y="670.50"></text></g><g><title>0x7fb28f042baf (?) (1 samples, 0.11%)</title><rect x="375" y="676" width="2" height="15" fill="rgb(238,119,20)"/><text x="378.00" y="686.50"></text></g><g><title>0x7fb28eaa675a (?) (1 samples, 0.11%)</title><rect x="375" y="692" width="2" height="15" fill="rgb(220,142,10)"/><text x="378.00" y="702.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="375" y="708" width="2" height="15" fill="rgb(217,208,25)"/><text x="378.00" y="718.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="375" y="724" width="2" height="15" fill="rgb(254,69,35)"/><text x="378.00" y="734.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="375" y="132" width="3" height="15" fill="rgb(236,166,24)"/><text x="378.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="375" y="148" width="3" height="15" fill="rgb(242,81,41)"/><text x="378.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="375" y="164" width="3" height="15" fill="rgb(244,187,38)"/><text x="378.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="180" width="3" height="15" fill="rgb(220,34,27)"/><text x="378.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="196" width="3" height="15" fill="rgb(221,192,8)"/><text x="378.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="212" width="3" height="15" fill="rgb(222,34,4)"/><text x="378.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="375" y="228" width="3" height="15" fill="rgb(205,156,49)"/><text x="378.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="244" width="3" height="15" fill="rgb(247,110,27)"/><text x="378.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.21%)</title><rect x="375" y="260" width="3" height="15" fill="rgb(208,34,34)"/><text x="378.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="276" width="3" height="15" fill="rgb(222,205,22)"/><text x="378.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="292" width="3" height="15" fill="rgb(252,125,11)"/><text x="378.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="308" width="3" height="15" fill="rgb(245,85,6)"/><text x="378.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="375" y="324" width="3" height="15" fill="rgb(242,173,21)"/><text x="378.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="375" y="340" width="3" height="15" fill="rgb(253,53,48)"/><text x="378.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.21%)</title><rect x="375" y="356" width="3" height="15" fill="rgb(213,95,37)"/><text x="378.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.11%)</title><rect x="377" y="372" width="1" height="15" fill="rgb(208,43,9)"/><text x="380.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.11%)</title><rect x="377" y="388" width="1" height="15" fill="rgb(242,118,23)"/><text x="380.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.11%)</title><rect x="377" y="404" width="1" height="15" fill="rgb(237,228,23)"/><text x="380.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.11%)</title><rect x="377" y="420" width="1" height="15" fill="rgb(216,63,8)"/><text x="380.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.11%)</title><rect x="377" y="436" width="1" height="15" fill="rgb(254,89,38)"/><text x="380.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.11%)</title><rect x="377" y="452" width="1" height="15" fill="rgb(246,14,31)"/><text x="380.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.11%)</title><rect x="377" y="468" width="1" height="15" fill="rgb(224,162,42)"/><text x="380.00" y="478.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (278 samples, 29.32%)</title><rect x="33" y="68" width="346" height="15" fill="rgb(213,109,15)"/><text x="36.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (278 samples, 29.32%)</title><rect x="33" y="84" width="346" height="15" fill="rgb(225,68,46)"/><text x="36.00" y="94.50">setup_profile (bench_AdaBoostClassifier_defaul..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.32%)</title><rect x="375" y="100" width="4" height="15" fill="rgb(216,36,39)"/><text x="378.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.32%)</title><rect x="375" y="116" width="4" height="15" fill="rgb(226,17,3)"/><text x="378.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="378" y="132" width="1" height="15" fill="rgb(227,62,31)"/><text x="381.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="378" y="148" width="1" height="15" fill="rgb(221,149,18)"/><text x="381.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="378" y="164" width="1" height="15" fill="rgb(243,47,34)"/><text x="381.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="378" y="180" width="1" height="15" fill="rgb(206,7,25)"/><text x="381.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="378" y="196" width="1" height="15" fill="rgb(218,196,26)"/><text x="381.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="378" y="212" width="1" height="15" fill="rgb(229,175,13)"/><text x="381.00" y="222.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py) (1 samples, 0.11%)</title><rect x="378" y="228" width="1" height="15" fill="rgb(236,8,19)"/><text x="381.00" y="238.50"></text></g><g><title>add_initializer (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="378" y="244" width="1" height="15" fill="rgb(235,208,38)"/><text x="381.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="378" y="260" width="1" height="15" fill="rgb(250,9,53)"/><text x="381.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="429" y="196" width="1" height="15" fill="rgb(233,170,8)"/><text x="432.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.11%)</title><rect x="433" y="228" width="1" height="15" fill="rgb(230,188,7)"/><text x="436.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.11%)</title><rect x="433" y="244" width="1" height="15" fill="rgb(244,192,53)"/><text x="436.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="433" y="260" width="1" height="15" fill="rgb(217,101,3)"/><text x="436.00" y="270.50"></text></g><g><title>0x7fb2cdfa9800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="433" y="276" width="1" height="15" fill="rgb(221,65,30)"/><text x="436.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (3 samples, 0.32%)</title><rect x="433" y="212" width="3" height="15" fill="rgb(249,126,8)"/><text x="436.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.21%)</title><rect x="434" y="228" width="2" height="15" fill="rgb(239,80,31)"/><text x="437.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.21%)</title><rect x="434" y="244" width="2" height="15" fill="rgb(252,152,40)"/><text x="437.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.21%)</title><rect x="434" y="260" width="2" height="15" fill="rgb(244,49,44)"/><text x="437.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.21%)</title><rect x="434" y="276" width="2" height="15" fill="rgb(234,8,1)"/><text x="437.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (2 samples, 0.21%)</title><rect x="434" y="292" width="2" height="15" fill="rgb(218,163,52)"/><text x="437.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="435" y="308" width="1" height="15" fill="rgb(223,224,29)"/><text x="438.00" y="318.50"></text></g><g><title>0x7fb2cdfa93f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="435" y="324" width="1" height="15" fill="rgb(254,135,46)"/><text x="438.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.11%)</title><rect x="436" y="276" width="2" height="15" fill="rgb(215,144,13)"/><text x="439.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="436" y="292" width="2" height="15" fill="rgb(254,51,30)"/><text x="439.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.21%)</title><rect x="436" y="244" width="3" height="15" fill="rgb(216,102,0)"/><text x="439.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.21%)</title><rect x="436" y="260" width="3" height="15" fill="rgb(214,225,4)"/><text x="439.00" y="270.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.11%)</title><rect x="438" y="276" width="1" height="15" fill="rgb(218,57,45)"/><text x="441.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="438" y="292" width="1" height="15" fill="rgb(249,215,46)"/><text x="441.00" y="302.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="438" y="308" width="1" height="15" fill="rgb(224,226,49)"/><text x="441.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="438" y="324" width="1" height="15" fill="rgb(244,91,8)"/><text x="441.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.32%)</title><rect x="436" y="212" width="4" height="15" fill="rgb(238,12,2)"/><text x="439.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.32%)</title><rect x="436" y="228" width="4" height="15" fill="rgb(207,167,32)"/><text x="439.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="439" y="244" width="1" height="15" fill="rgb(253,34,36)"/><text x="442.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="439" y="260" width="1" height="15" fill="rgb(252,63,9)"/><text x="442.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="439" y="276" width="1" height="15" fill="rgb(232,175,12)"/><text x="442.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="439" y="292" width="1" height="15" fill="rgb(217,147,44)"/><text x="442.00" y="302.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="440" y="340" width="1" height="15" fill="rgb(240,120,44)"/><text x="443.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="440" y="356" width="1" height="15" fill="rgb(212,92,43)"/><text x="443.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (2 samples, 0.21%)</title><rect x="440" y="212" width="3" height="15" fill="rgb(218,110,38)"/><text x="443.00" y="222.50"></text></g><g><title>array_add (number.c) (2 samples, 0.21%)</title><rect x="440" y="228" width="3" height="15" fill="rgb(250,145,32)"/><text x="443.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.21%)</title><rect x="440" y="244" width="3" height="15" fill="rgb(213,127,41)"/><text x="443.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.21%)</title><rect x="440" y="260" width="3" height="15" fill="rgb(238,222,18)"/><text x="443.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="440" y="276" width="3" height="15" fill="rgb(244,88,44)"/><text x="443.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="440" y="292" width="3" height="15" fill="rgb(214,23,14)"/><text x="443.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.21%)</title><rect x="440" y="308" width="3" height="15" fill="rgb(250,5,13)"/><text x="443.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (2 samples, 0.21%)</title><rect x="440" y="324" width="3" height="15" fill="rgb(206,194,34)"/><text x="443.00" y="334.50"></text></g><g><title>sse2_binary_scalar1_add_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="441" y="340" width="2" height="15" fill="rgb(222,60,17)"/><text x="444.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="441" y="356" width="2" height="15" fill="rgb(241,24,48)"/><text x="444.00" y="366.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.21%)</title><rect x="448" y="244" width="2" height="15" fill="rgb(244,211,1)"/><text x="451.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="451" y="292" width="2" height="15" fill="rgb(222,58,42)"/><text x="454.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.21%)</title><rect x="451" y="260" width="3" height="15" fill="rgb(242,71,31)"/><text x="454.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.21%)</title><rect x="451" y="276" width="3" height="15" fill="rgb(228,26,52)"/><text x="454.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="453" y="292" width="1" height="15" fill="rgb(252,89,13)"/><text x="456.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="455" y="276" width="1" height="15" fill="rgb(239,37,7)"/><text x="458.00" y="286.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (2 samples, 0.21%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(250,150,21)"/><text x="461.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (2 samples, 0.21%)</title><rect x="458" y="324" width="2" height="15" fill="rgb(208,73,26)"/><text x="461.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="459" y="340" width="1" height="15" fill="rgb(223,40,47)"/><text x="462.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="459" y="356" width="1" height="15" fill="rgb(208,23,46)"/><text x="462.00" y="366.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="461" y="340" width="2" height="15" fill="rgb(239,49,23)"/><text x="464.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.11%)</title><rect x="461" y="356" width="2" height="15" fill="rgb(220,154,54)"/><text x="464.00" y="366.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="463" y="340" width="1" height="15" fill="rgb(247,92,18)"/><text x="466.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="463" y="356" width="1" height="15" fill="rgb(220,229,24)"/><text x="466.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="463" y="372" width="1" height="15" fill="rgb(241,167,37)"/><text x="466.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="463" y="388" width="1" height="15" fill="rgb(212,95,39)"/><text x="466.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="463" y="404" width="1" height="15" fill="rgb(218,152,3)"/><text x="466.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="463" y="420" width="1" height="15" fill="rgb(218,222,17)"/><text x="466.00" y="430.50"></text></g><g><title>0x7fb2ced88584 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="463" y="436" width="1" height="15" fill="rgb(236,73,50)"/><text x="466.00" y="446.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 0.42%)</title><rect x="460" y="324" width="5" height="15" fill="rgb(239,220,43)"/><text x="463.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="464" y="340" width="1" height="15" fill="rgb(209,59,33)"/><text x="467.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="465" y="324" width="1" height="15" fill="rgb(242,139,50)"/><text x="468.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="465" y="340" width="1" height="15" fill="rgb(205,85,24)"/><text x="468.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 0.63%)</title><rect x="460" y="308" width="8" height="15" fill="rgb(207,178,45)"/><text x="463.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="466" y="324" width="2" height="15" fill="rgb(211,75,33)"/><text x="469.00" y="334.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="468" y="308" width="1" height="15" fill="rgb(215,71,45)"/><text x="471.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.42%)</title><rect x="469" y="308" width="5" height="15" fill="rgb(236,58,19)"/><text x="472.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.42%)</title><rect x="469" y="324" width="5" height="15" fill="rgb(209,99,35)"/><text x="472.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.42%)</title><rect x="469" y="340" width="5" height="15" fill="rgb(254,218,54)"/><text x="472.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.21%)</title><rect x="471" y="356" width="3" height="15" fill="rgb(241,163,3)"/><text x="474.00" y="366.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.11%)</title><rect x="474" y="308" width="1" height="15" fill="rgb(205,160,19)"/><text x="477.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 1.69%)</title><rect x="456" y="276" width="20" height="15" fill="rgb(220,50,42)"/><text x="459.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (16 samples, 1.69%)</title><rect x="456" y="292" width="20" height="15" fill="rgb(234,217,32)"/><text x="459.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="475" y="308" width="1" height="15" fill="rgb(226,103,6)"/><text x="478.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="475" y="324" width="1" height="15" fill="rgb(247,203,27)"/><text x="478.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (27 samples, 2.85%)</title><rect x="444" y="228" width="34" height="15" fill="rgb(232,70,0)"/><text x="447.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 2.32%)</title><rect x="450" y="244" width="28" height="15" fill="rgb(219,101,10)"/><text x="453.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 2.00%)</title><rect x="454" y="260" width="24" height="15" fill="rgb(229,187,38)"/><text x="457.00" y="270.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="476" y="276" width="2" height="15" fill="rgb(244,134,1)"/><text x="479.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.11%)</title><rect x="476" y="292" width="2" height="15" fill="rgb(242,161,35)"/><text x="479.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="478" y="228" width="1" height="15" fill="rgb(222,124,12)"/><text x="481.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="478" y="244" width="1" height="15" fill="rgb(211,154,34)"/><text x="481.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="478" y="260" width="1" height="15" fill="rgb(219,184,25)"/><text x="481.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="478" y="276" width="1" height="15" fill="rgb(240,172,22)"/><text x="481.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.11%)</title><rect x="479" y="228" width="1" height="15" fill="rgb(240,78,26)"/><text x="482.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="482" y="260" width="2" height="15" fill="rgb(220,170,0)"/><text x="485.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="482" y="276" width="2" height="15" fill="rgb(233,146,21)"/><text x="485.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="482" y="292" width="2" height="15" fill="rgb(224,0,32)"/><text x="485.00" y="302.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.11%)</title><rect x="485" y="324" width="1" height="15" fill="rgb(223,195,0)"/><text x="488.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.11%)</title><rect x="485" y="340" width="1" height="15" fill="rgb(217,177,42)"/><text x="488.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.21%)</title><rect x="485" y="292" width="2" height="15" fill="rgb(240,72,29)"/><text x="488.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.21%)</title><rect x="485" y="308" width="2" height="15" fill="rgb(248,218,34)"/><text x="488.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="486" y="324" width="1" height="15" fill="rgb(228,33,52)"/><text x="489.00" y="334.50"></text></g><g><title>0x7fb2ced86bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="486" y="340" width="1" height="15" fill="rgb(254,119,4)"/><text x="489.00" y="350.50"></text></g><g><title>0x7fb2cef08960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="491" y="324" width="1" height="15" fill="rgb(253,4,39)"/><text x="494.00" y="334.50"></text></g><g><title>0x7fb2cef08997 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="492" y="324" width="3" height="15" fill="rgb(241,182,35)"/><text x="495.00" y="334.50"></text></g><g><title>0x7fb2cef089a4 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="495" y="324" width="4" height="15" fill="rgb(248,146,15)"/><text x="498.00" y="334.50"></text></g><g><title>0x7fb2cef089bd (libm-2.29.so) (3 samples, 0.32%)</title><rect x="499" y="324" width="3" height="15" fill="rgb(246,136,21)"/><text x="502.00" y="334.50"></text></g><g><title>0x7fb2cef089c8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="502" y="324" width="2" height="15" fill="rgb(225,26,48)"/><text x="505.00" y="334.50"></text></g><g><title>0x7fb2cef089e0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="504" y="324" width="1" height="15" fill="rgb(233,226,5)"/><text x="507.00" y="334.50"></text></g><g><title>0x7fb2cef089e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="505" y="324" width="1" height="15" fill="rgb(236,78,43)"/><text x="508.00" y="334.50"></text></g><g><title>0x7fb2cef089f4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="506" y="324" width="1" height="15" fill="rgb(224,166,27)"/><text x="509.00" y="334.50"></text></g><g><title>0x7fb2cef089f8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="507" y="324" width="2" height="15" fill="rgb(231,201,33)"/><text x="510.00" y="334.50"></text></g><g><title>0x7fb2cef08a04 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="509" y="324" width="1" height="15" fill="rgb(247,154,30)"/><text x="512.00" y="334.50"></text></g><g><title>0x7fb2cef08a15 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="510" y="324" width="4" height="15" fill="rgb(210,49,13)"/><text x="513.00" y="334.50"></text></g><g><title>0x7fb2cef08a19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="514" y="324" width="1" height="15" fill="rgb(240,140,13)"/><text x="517.00" y="334.50"></text></g><g><title>0x7fb2cef08a1d (libm-2.29.so) (2 samples, 0.21%)</title><rect x="515" y="324" width="2" height="15" fill="rgb(228,130,54)"/><text x="518.00" y="334.50"></text></g><g><title>0x7fb2cef08a21 (libm-2.29.so) (9 samples, 0.95%)</title><rect x="517" y="324" width="12" height="15" fill="rgb(253,74,47)"/><text x="520.00" y="334.50"></text></g><g><title>logf (libm-2.29.so) (3 samples, 0.32%)</title><rect x="529" y="324" width="3" height="15" fill="rgb(207,137,48)"/><text x="532.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (39 samples, 4.11%)</title><rect x="485" y="276" width="49" height="15" fill="rgb(228,138,26)"/><text x="488.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (37 samples, 3.90%)</title><rect x="487" y="292" width="47" height="15" fill="rgb(238,28,54)"/><text x="490.00" y="302.50">triv..</text></g><g><title>FLOAT_log (loops.c.src) (37 samples, 3.90%)</title><rect x="487" y="308" width="47" height="15" fill="rgb(210,149,4)"/><text x="490.00" y="318.50">FLOA..</text></g><g><title>npy_logf (npy_math_internal.h.src) (1 samples, 0.11%)</title><rect x="532" y="324" width="2" height="15" fill="rgb(221,1,37)"/><text x="535.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="534" y="276" width="1" height="15" fill="rgb(222,105,39)"/><text x="537.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.11%)</title><rect x="534" y="292" width="1" height="15" fill="rgb(207,42,46)"/><text x="537.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 4.43%)</title><rect x="484" y="260" width="52" height="15" fill="rgb(229,136,51)"/><text x="487.00" y="270.50">PyUFu..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="535" y="276" width="1" height="15" fill="rgb(227,145,37)"/><text x="538.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="535" y="292" width="1" height="15" fill="rgb(230,129,28)"/><text x="538.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (46 samples, 4.85%)</title><rect x="480" y="228" width="57" height="15" fill="rgb(233,206,28)"/><text x="483.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (46 samples, 4.85%)</title><rect x="480" y="244" width="57" height="15" fill="rgb(244,176,23)"/><text x="483.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="536" y="260" width="1" height="15" fill="rgb(240,221,46)"/><text x="539.00" y="270.50"></text></g><g><title>0x7fb2ceda7124 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="536" y="276" width="1" height="15" fill="rgb(214,40,12)"/><text x="539.00" y="286.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py) (2 samples, 0.21%)</title><rect x="540" y="260" width="2" height="15" fill="rgb(250,97,30)"/><text x="543.00" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="546" y="308" width="1" height="15" fill="rgb(233,4,43)"/><text x="549.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="547" y="324" width="1" height="15" fill="rgb(252,75,28)"/><text x="550.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="547" y="340" width="1" height="15" fill="rgb(218,14,31)"/><text x="550.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="547" y="356" width="1" height="15" fill="rgb(241,25,43)"/><text x="550.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="547" y="372" width="1" height="15" fill="rgb(207,64,16)"/><text x="550.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="547" y="388" width="1" height="15" fill="rgb(221,156,35)"/><text x="550.00" y="398.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="551" y="340" width="1" height="15" fill="rgb(239,70,50)"/><text x="554.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.21%)</title><rect x="552" y="388" width="3" height="15" fill="rgb(228,15,14)"/><text x="555.00" y="398.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="555" y="388" width="1" height="15" fill="rgb(234,84,36)"/><text x="558.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.42%)</title><rect x="552" y="372" width="5" height="15" fill="rgb(216,143,7)"/><text x="555.00" y="382.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.11%)</title><rect x="556" y="388" width="1" height="15" fill="rgb(206,122,26)"/><text x="559.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="557" y="372" width="1" height="15" fill="rgb(225,30,8)"/><text x="560.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="557" y="388" width="1" height="15" fill="rgb(234,62,33)"/><text x="560.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="557" y="404" width="1" height="15" fill="rgb(218,178,1)"/><text x="560.00" y="414.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="560" y="404" width="1" height="15" fill="rgb(244,96,43)"/><text x="563.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="560" y="420" width="1" height="15" fill="rgb(213,151,14)"/><text x="563.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="560" y="436" width="1" height="15" fill="rgb(219,213,39)"/><text x="563.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.32%)</title><rect x="558" y="372" width="4" height="15" fill="rgb(250,132,24)"/><text x="561.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.21%)</title><rect x="560" y="388" width="2" height="15" fill="rgb(209,13,13)"/><text x="563.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="561" y="404" width="1" height="15" fill="rgb(254,90,27)"/><text x="564.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="561" y="420" width="1" height="15" fill="rgb(207,32,46)"/><text x="564.00" y="430.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="561" y="436" width="1" height="15" fill="rgb(228,117,22)"/><text x="564.00" y="446.50"></text></g><g><title>FLOAT_add (loops.c.src) (11 samples, 1.16%)</title><rect x="563" y="388" width="14" height="15" fill="rgb(237,95,5)"/><text x="566.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (4 samples, 0.42%)</title><rect x="572" y="404" width="5" height="15" fill="rgb(241,193,29)"/><text x="575.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (29 samples, 3.06%)</title><rect x="552" y="356" width="36" height="15" fill="rgb(208,0,1)"/><text x="555.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (21 samples, 2.22%)</title><rect x="562" y="372" width="26" height="15" fill="rgb(217,29,6)"/><text x="565.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (9 samples, 0.95%)</title><rect x="577" y="388" width="11" height="15" fill="rgb(233,139,13)"/><text x="580.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (43 samples, 4.54%)</title><rect x="537" y="228" width="54" height="15" fill="rgb(228,55,6)"/><text x="540.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (41 samples, 4.32%)</title><rect x="540" y="244" width="51" height="15" fill="rgb(210,204,37)"/><text x="543.00" y="254.50">sum (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (39 samples, 4.11%)</title><rect x="542" y="260" width="49" height="15" fill="rgb(228,199,1)"/><text x="545.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (39 samples, 4.11%)</title><rect x="542" y="276" width="49" height="15" fill="rgb(233,30,28)"/><text x="545.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (36 samples, 3.80%)</title><rect x="546" y="292" width="45" height="15" fill="rgb(220,186,26)"/><text x="549.00" y="302.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c) (35 samples, 3.69%)</title><rect x="547" y="308" width="44" height="15" fill="rgb(226,54,33)"/><text x="550.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (34 samples, 3.59%)</title><rect x="548" y="324" width="43" height="15" fill="rgb(208,97,16)"/><text x="551.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (31 samples, 3.27%)</title><rect x="552" y="340" width="39" height="15" fill="rgb(250,62,45)"/><text x="555.00" y="350.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.21%)</title><rect x="588" y="356" width="3" height="15" fill="rgb(249,208,39)"/><text x="591.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="590" y="372" width="1" height="15" fill="rgb(243,141,37)"/><text x="593.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="590" y="388" width="1" height="15" fill="rgb(231,185,41)"/><text x="593.00" y="398.50"></text></g><g><title>0x7fb28f8e4422 (?) (1 samples, 0.11%)</title><rect x="591" y="244" width="1" height="15" fill="rgb(222,205,8)"/><text x="594.00" y="254.50"></text></g><g><title>0x7fb28f8ea89e (?) (1 samples, 0.11%)</title><rect x="591" y="260" width="1" height="15" fill="rgb(251,127,30)"/><text x="594.00" y="270.50"></text></g><g><title>0x7fb28f8ea74f (?) (1 samples, 0.11%)</title><rect x="591" y="276" width="1" height="15" fill="rgb(228,112,45)"/><text x="594.00" y="286.50"></text></g><g><title>0x7fb28f8f0a3a (?) (1 samples, 0.11%)</title><rect x="591" y="292" width="1" height="15" fill="rgb(213,51,29)"/><text x="594.00" y="302.50"></text></g><g><title>0x7fb298d4cab9 (?) (1 samples, 0.11%)</title><rect x="591" y="308" width="1" height="15" fill="rgb(241,15,2)"/><text x="594.00" y="318.50"></text></g><g><title>0x7fb298d4dea9 (?) (1 samples, 0.11%)</title><rect x="591" y="324" width="1" height="15" fill="rgb(213,123,1)"/><text x="594.00" y="334.50"></text></g><g><title>0x7fb298d4dea0 (libgomp.so.1.0.0) (4 samples, 0.42%)</title><rect x="592" y="468" width="5" height="15" fill="rgb(230,90,33)"/><text x="595.00" y="478.50"></text></g><g><title>0x7fb298d4dea9 (libgomp.so.1.0.0) (23 samples, 2.43%)</title><rect x="597" y="468" width="29" height="15" fill="rgb(227,187,1)"/><text x="600.00" y="478.50">0x..</text></g><g><title>0x7fb298d4deab (libgomp.so.1.0.0) (18 samples, 1.90%)</title><rect x="626" y="468" width="22" height="15" fill="rgb(240,188,28)"/><text x="629.00" y="478.50">0..</text></g><g><title>0x7fb298d4cab9 (libgomp.so.1.0.0) (56 samples, 5.91%)</title><rect x="592" y="452" width="70" height="15" fill="rgb(231,198,43)"/><text x="595.00" y="462.50">0x7fb29..</text></g><g><title>0x7fb298d4dead (libgomp.so.1.0.0) (11 samples, 1.16%)</title><rect x="648" y="468" width="14" height="15" fill="rgb(228,4,19)"/><text x="651.00" y="478.50"></text></g><g><title>0x7fb298d4dcfb (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="662" y="484" width="1" height="15" fill="rgb(254,67,33)"/><text x="665.00" y="494.50"></text></g><g><title>0x7fb298d4bdaa (libgomp.so.1.0.0) (6 samples, 0.63%)</title><rect x="662" y="468" width="7" height="15" fill="rgb(205,128,18)"/><text x="665.00" y="478.50"></text></g><g><title>0x7fb298d4dcfd (libgomp.so.1.0.0) (5 samples, 0.53%)</title><rect x="663" y="484" width="6" height="15" fill="rgb(230,166,0)"/><text x="666.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (193 samples, 20.36%)</title><rect x="430" y="196" width="240" height="15" fill="rgb(248,41,0)"/><text x="433.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (183 samples, 19.30%)</title><rect x="443" y="212" width="227" height="15" fill="rgb(243,99,36)"/><text x="446.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (64 samples, 6.75%)</title><rect x="591" y="228" width="79" height="15" fill="rgb(225,133,38)"/><text x="594.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (63 samples, 6.65%)</title><rect x="592" y="244" width="78" height="15" fill="rgb(236,58,11)"/><text x="595.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (63 samples, 6.65%)</title><rect x="592" y="260" width="78" height="15" fill="rgb(205,96,13)"/><text x="595.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (63 samples, 6.65%)</title><rect x="592" y="276" width="78" height="15" fill="rgb(222,10,12)"/><text x="595.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (63 samples, 6.65%)</title><rect x="592" y="292" width="78" height="15" fill="rgb(237,41,43)"/><text x="595.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (63 samples, 6.65%)</title><rect x="592" y="308" width="78" height="15" fill="rgb(214,7,24)"/><text x="595.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (63 samples, 6.65%)</title><rect x="592" y="324" width="78" height="15" fill="rgb(230,118,8)"/><text x="595.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (63 samples, 6.65%)</title><rect x="592" y="340" width="78" height="15" fill="rgb(249,180,3)"/><text x="595.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h) (63 samples, 6.65%)</title><rect x="592" y="356" width="78" height="15" fill="rgb(231,4,19)"/><text x="595.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (63 samples, 6.65%)</title><rect x="592" y="372" width="78" height="15" fill="rgb(238,10,47)"/><text x="595.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h) (63 samples, 6.65%)</title><rect x="592" y="388" width="78" height="15" fill="rgb(249,199,13)"/><text x="595.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (63 samples, 6.65%)</title><rect x="592" y="404" width="78" height="15" fill="rgb(243,173,9)"/><text x="595.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (63 samples, 6.65%)</title><rect x="592" y="420" width="78" height="15" fill="rgb(254,101,50)"/><text x="595.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (63 samples, 6.65%)</title><rect x="592" y="436" width="78" height="15" fill="rgb(237,18,10)"/><text x="595.00" y="446.50">pybind11:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (7 samples, 0.74%)</title><rect x="662" y="452" width="8" height="15" fill="rgb(233,158,32)"/><text x="665.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (1 samples, 0.11%)</title><rect x="669" y="468" width="1" height="15" fill="rgb(232,1,47)"/><text x="672.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="669" y="484" width="1" height="15" fill="rgb(216,70,25)"/><text x="672.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h) (1 samples, 0.11%)</title><rect x="669" y="500" width="1" height="15" fill="rgb(205,56,22)"/><text x="672.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.11%)</title><rect x="669" y="516" width="1" height="15" fill="rgb(246,52,31)"/><text x="672.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h) (1 samples, 0.11%)</title><rect x="669" y="532" width="1" height="15" fill="rgb(233,18,45)"/><text x="672.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h) (1 samples, 0.11%)</title><rect x="669" y="548" width="1" height="15" fill="rgb(227,81,52)"/><text x="672.00" y="558.50"></text></g><g><title>0x7fb2ced86d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="669" y="564" width="1" height="15" fill="rgb(234,218,51)"/><text x="672.00" y="574.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="684" y="372" width="1" height="15" fill="rgb(233,200,15)"/><text x="687.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="684" y="388" width="1" height="15" fill="rgb(232,43,38)"/><text x="687.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="684" y="404" width="1" height="15" fill="rgb(251,47,47)"/><text x="687.00" y="414.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="685" y="404" width="2" height="15" fill="rgb(216,79,6)"/><text x="688.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="685" y="420" width="2" height="15" fill="rgb(234,57,37)"/><text x="688.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.11%)</title><rect x="685" y="436" width="2" height="15" fill="rgb(209,152,16)"/><text x="688.00" y="446.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="685" y="388" width="3" height="15" fill="rgb(211,182,29)"/><text x="688.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="687" y="404" width="1" height="15" fill="rgb(238,34,50)"/><text x="690.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="687" y="420" width="1" height="15" fill="rgb(213,168,4)"/><text x="690.00" y="430.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="687" y="436" width="1" height="15" fill="rgb(220,110,8)"/><text x="690.00" y="446.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (4 samples, 0.42%)</title><rect x="688" y="420" width="5" height="15" fill="rgb(239,21,41)"/><text x="691.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.21%)</title><rect x="693" y="436" width="2" height="15" fill="rgb(240,147,7)"/><text x="696.00" y="446.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="695" y="436" width="2" height="15" fill="rgb(205,120,24)"/><text x="698.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="695" y="452" width="2" height="15" fill="rgb(218,108,43)"/><text x="698.00" y="462.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c) (1 samples, 0.11%)</title><rect x="697" y="436" width="1" height="15" fill="rgb(223,124,23)"/><text x="700.00" y="446.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="697" y="452" width="1" height="15" fill="rgb(213,44,16)"/><text x="700.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.53%)</title><rect x="693" y="420" width="6" height="15" fill="rgb(221,107,40)"/><text x="696.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="698" y="436" width="1" height="15" fill="rgb(230,4,6)"/><text x="701.00" y="446.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="698" y="452" width="1" height="15" fill="rgb(214,91,40)"/><text x="701.00" y="462.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.11%)</title><rect x="699" y="420" width="1" height="15" fill="rgb(218,157,22)"/><text x="702.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="699" y="436" width="1" height="15" fill="rgb(232,95,37)"/><text x="702.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="699" y="452" width="1" height="15" fill="rgb(206,213,54)"/><text x="702.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="699" y="468" width="1" height="15" fill="rgb(230,142,4)"/><text x="702.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.16%)</title><rect x="688" y="388" width="14" height="15" fill="rgb(222,152,32)"/><text x="691.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 1.16%)</title><rect x="688" y="404" width="14" height="15" fill="rgb(250,88,31)"/><text x="691.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="700" y="420" width="2" height="15" fill="rgb(214,97,47)"/><text x="703.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="700" y="436" width="2" height="15" fill="rgb(241,209,13)"/><text x="703.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="700" y="452" width="2" height="15" fill="rgb(235,106,4)"/><text x="703.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="700" y="468" width="2" height="15" fill="rgb(235,110,48)"/><text x="703.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (18 samples, 1.90%)</title><rect x="680" y="340" width="23" height="15" fill="rgb(236,176,5)"/><text x="683.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 1.69%)</title><rect x="683" y="356" width="20" height="15" fill="rgb(241,206,18)"/><text x="686.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 1.48%)</title><rect x="685" y="372" width="18" height="15" fill="rgb(208,116,48)"/><text x="688.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="702" y="388" width="1" height="15" fill="rgb(241,206,16)"/><text x="705.00" y="398.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="703" y="340" width="1" height="15" fill="rgb(231,9,18)"/><text x="706.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="710" y="356" width="3" height="15" fill="rgb(225,114,54)"/><text x="713.00" y="366.50"></text></g><g><title>0x7fb2ced9cebc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="712" y="372" width="1" height="15" fill="rgb(250,169,34)"/><text x="715.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.21%)</title><rect x="717" y="420" width="2" height="15" fill="rgb(253,50,3)"/><text x="720.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.21%)</title><rect x="717" y="436" width="2" height="15" fill="rgb(205,26,45)"/><text x="720.00" y="446.50"></text></g><g><title>0x7fb2cdfa7e30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="718" y="452" width="1" height="15" fill="rgb(215,82,54)"/><text x="721.00" y="462.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.32%)</title><rect x="717" y="404" width="3" height="15" fill="rgb(236,14,31)"/><text x="720.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="719" y="420" width="1" height="15" fill="rgb(229,157,30)"/><text x="722.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (15 samples, 1.58%)</title><rect x="713" y="356" width="18" height="15" fill="rgb(236,199,12)"/><text x="716.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (15 samples, 1.58%)</title><rect x="713" y="372" width="18" height="15" fill="rgb(217,181,18)"/><text x="716.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (15 samples, 1.58%)</title><rect x="713" y="388" width="18" height="15" fill="rgb(230,72,24)"/><text x="716.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (9 samples, 0.95%)</title><rect x="720" y="404" width="11" height="15" fill="rgb(226,34,29)"/><text x="723.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 0.63%)</title><rect x="724" y="420" width="7" height="15" fill="rgb(240,82,31)"/><text x="727.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.11%)</title><rect x="730" y="436" width="1" height="15" fill="rgb(242,13,8)"/><text x="733.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="730" y="452" width="1" height="15" fill="rgb(235,155,31)"/><text x="733.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="730" y="468" width="1" height="15" fill="rgb(206,5,43)"/><text x="733.00" y="478.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="730" y="484" width="1" height="15" fill="rgb(237,183,52)"/><text x="733.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="733" y="420" width="1" height="15" fill="rgb(215,229,35)"/><text x="736.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="733" y="436" width="1" height="15" fill="rgb(245,30,53)"/><text x="736.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.32%)</title><rect x="731" y="388" width="4" height="15" fill="rgb(240,110,34)"/><text x="734.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.21%)</title><rect x="733" y="404" width="2" height="15" fill="rgb(247,229,42)"/><text x="736.00" y="414.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="734" y="420" width="1" height="15" fill="rgb(230,104,27)"/><text x="737.00" y="430.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="734" y="436" width="1" height="15" fill="rgb(225,39,24)"/><text x="737.00" y="446.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="734" y="452" width="1" height="15" fill="rgb(241,108,21)"/><text x="737.00" y="462.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (288 samples, 30.38%)</title><rect x="379" y="100" width="359" height="15" fill="rgb(218,183,15)"/><text x="382.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (288 samples, 30.38%)</title><rect x="379" y="116" width="359" height="15" fill="rgb(224,205,36)"/><text x="382.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (288 samples, 30.38%)</title><rect x="379" y="132" width="359" height="15" fill="rgb(243,181,15)"/><text x="382.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (288 samples, 30.38%)</title><rect x="379" y="148" width="359" height="15" fill="rgb(234,181,38)"/><text x="382.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (287 samples, 30.27%)</title><rect x="380" y="164" width="358" height="15" fill="rgb(207,217,30)"/><text x="383.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (282 samples, 29.75%)</title><rect x="387" y="180" width="351" height="15" fill="rgb(236,110,48)"/><text x="390.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (54 samples, 5.70%)</title><rect x="670" y="196" width="68" height="15" fill="rgb(233,78,13)"/><text x="673.00" y="206.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (51 samples, 5.38%)</title><rect x="674" y="212" width="64" height="15" fill="rgb(229,138,24)"/><text x="677.00" y="222.50">_run (m..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (50 samples, 5.27%)</title><rect x="675" y="228" width="63" height="15" fill="rgb(228,106,37)"/><text x="678.00" y="238.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (48 samples, 5.06%)</title><rect x="678" y="244" width="60" height="15" fill="rgb(234,167,23)"/><text x="681.00" y="254.50">array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (48 samples, 5.06%)</title><rect x="678" y="260" width="60" height="15" fill="rgb(237,31,1)"/><text x="681.00" y="270.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (47 samples, 4.96%)</title><rect x="679" y="276" width="59" height="15" fill="rgb(209,219,37)"/><text x="682.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c) (47 samples, 4.96%)</title><rect x="679" y="292" width="59" height="15" fill="rgb(251,210,14)"/><text x="682.00" y="302.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (47 samples, 4.96%)</title><rect x="679" y="308" width="59" height="15" fill="rgb(214,53,52)"/><text x="682.00" y="318.50">forwar..</text></g><g><title>_clip (numpy/core/_methods.py) (47 samples, 4.96%)</title><rect x="679" y="324" width="59" height="15" fill="rgb(220,93,4)"/><text x="682.00" y="334.50">_clip ..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (27 samples, 2.85%)</title><rect x="704" y="340" width="34" height="15" fill="rgb(221,114,49)"/><text x="707.00" y="350.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.53%)</title><rect x="731" y="356" width="7" height="15" fill="rgb(217,17,20)"/><text x="734.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.53%)</title><rect x="731" y="372" width="7" height="15" fill="rgb(238,68,30)"/><text x="734.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="735" y="388" width="3" height="15" fill="rgb(231,31,34)"/><text x="738.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="736" y="404" width="2" height="15" fill="rgb(218,37,29)"/><text x="739.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="736" y="420" width="2" height="15" fill="rgb(247,151,44)"/><text x="739.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="736" y="436" width="2" height="15" fill="rgb(219,92,16)"/><text x="739.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="738" y="404" width="1" height="15" fill="rgb(243,137,1)"/><text x="741.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="738" y="420" width="1" height="15" fill="rgb(216,24,10)"/><text x="741.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="738" y="436" width="1" height="15" fill="rgb(242,12,27)"/><text x="741.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="738" y="452" width="1" height="15" fill="rgb(212,163,26)"/><text x="741.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="738" y="468" width="1" height="15" fill="rgb(226,114,14)"/><text x="741.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.11%)</title><rect x="738" y="484" width="1" height="15" fill="rgb(210,16,47)"/><text x="741.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.11%)</title><rect x="738" y="500" width="1" height="15" fill="rgb(213,78,35)"/><text x="741.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="738" y="516" width="1" height="15" fill="rgb(249,204,6)"/><text x="741.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="738" y="532" width="1" height="15" fill="rgb(217,37,6)"/><text x="741.00" y="542.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="738" y="548" width="1" height="15" fill="rgb(217,222,41)"/><text x="741.00" y="558.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="738" y="564" width="1" height="15" fill="rgb(215,138,49)"/><text x="741.00" y="574.50"></text></g><g><title>0x7fb2ceda6f4e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="738" y="580" width="1" height="15" fill="rgb(248,11,52)"/><text x="741.00" y="590.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.21%)</title><rect x="738" y="180" width="2" height="15" fill="rgb(251,62,24)"/><text x="741.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.21%)</title><rect x="738" y="196" width="2" height="15" fill="rgb(242,96,19)"/><text x="741.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="212" width="2" height="15" fill="rgb(230,228,7)"/><text x="741.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="228" width="2" height="15" fill="rgb(222,166,15)"/><text x="741.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="244" width="2" height="15" fill="rgb(230,16,16)"/><text x="741.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="738" y="260" width="2" height="15" fill="rgb(250,191,29)"/><text x="741.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="276" width="2" height="15" fill="rgb(238,8,49)"/><text x="741.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.21%)</title><rect x="738" y="292" width="2" height="15" fill="rgb(221,181,51)"/><text x="741.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="308" width="2" height="15" fill="rgb(218,108,22)"/><text x="741.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="324" width="2" height="15" fill="rgb(237,70,48)"/><text x="741.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="340" width="2" height="15" fill="rgb(243,19,47)"/><text x="741.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="738" y="356" width="2" height="15" fill="rgb(211,195,11)"/><text x="741.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="738" y="372" width="2" height="15" fill="rgb(244,153,26)"/><text x="741.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.21%)</title><rect x="738" y="388" width="2" height="15" fill="rgb(240,101,44)"/><text x="741.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.11%)</title><rect x="739" y="404" width="1" height="15" fill="rgb(228,147,28)"/><text x="742.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.11%)</title><rect x="739" y="420" width="1" height="15" fill="rgb(212,110,4)"/><text x="742.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="739" y="436" width="1" height="15" fill="rgb(244,219,45)"/><text x="742.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="739" y="452" width="1" height="15" fill="rgb(228,144,53)"/><text x="742.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.11%)</title><rect x="739" y="468" width="1" height="15" fill="rgb(232,155,44)"/><text x="742.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.11%)</title><rect x="739" y="484" width="1" height="15" fill="rgb(235,128,37)"/><text x="742.00" y="494.50"></text></g><g><title>format_option (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.11%)</title><rect x="739" y="500" width="1" height="15" fill="rgb(234,187,4)"/><text x="742.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="739" y="516" width="1" height="15" fill="rgb(215,78,43)"/><text x="742.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="739" y="532" width="1" height="15" fill="rgb(210,87,47)"/><text x="742.00" y="542.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="739" y="548" width="1" height="15" fill="rgb(225,124,30)"/><text x="742.00" y="558.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.32%)</title><rect x="738" y="132" width="3" height="15" fill="rgb(244,60,9)"/><text x="741.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.32%)</title><rect x="738" y="148" width="3" height="15" fill="rgb(219,74,34)"/><text x="741.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.32%)</title><rect x="738" y="164" width="3" height="15" fill="rgb(228,53,13)"/><text x="741.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="740" y="180" width="1" height="15" fill="rgb(208,216,23)"/><text x="743.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.11%)</title><rect x="740" y="196" width="1" height="15" fill="rgb(239,205,21)"/><text x="743.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.11%)</title><rect x="740" y="212" width="1" height="15" fill="rgb(219,152,14)"/><text x="743.00" y="222.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (292 samples, 30.80%)</title><rect x="379" y="68" width="364" height="15" fill="rgb(251,223,53)"/><text x="382.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (292 samples, 30.80%)</title><rect x="379" y="84" width="364" height="15" fill="rgb(241,50,53)"/><text x="382.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.42%)</title><rect x="738" y="100" width="5" height="15" fill="rgb(229,226,23)"/><text x="741.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.42%)</title><rect x="738" y="116" width="5" height="15" fill="rgb(237,0,15)"/><text x="741.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="741" y="132" width="2" height="15" fill="rgb(206,8,33)"/><text x="744.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="741" y="148" width="2" height="15" fill="rgb(235,180,15)"/><text x="744.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="741" y="164" width="2" height="15" fill="rgb(224,91,20)"/><text x="744.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="741" y="180" width="2" height="15" fill="rgb(251,181,17)"/><text x="744.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.11%)</title><rect x="741" y="196" width="2" height="15" fill="rgb(236,144,16)"/><text x="744.00" y="206.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (4 samples, 0.42%)</title><rect x="744" y="196" width="5" height="15" fill="rgb(233,19,17)"/><text x="747.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.42%)</title><rect x="744" y="212" width="5" height="15" fill="rgb(207,16,11)"/><text x="747.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (4 samples, 0.42%)</title><rect x="744" y="228" width="5" height="15" fill="rgb(232,23,19)"/><text x="747.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 0.42%)</title><rect x="744" y="244" width="5" height="15" fill="rgb(253,184,36)"/><text x="747.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.42%)</title><rect x="744" y="260" width="5" height="15" fill="rgb(205,134,17)"/><text x="747.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.42%)</title><rect x="744" y="276" width="5" height="15" fill="rgb(218,15,45)"/><text x="747.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.42%)</title><rect x="744" y="292" width="5" height="15" fill="rgb(206,225,6)"/><text x="747.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.42%)</title><rect x="744" y="308" width="5" height="15" fill="rgb(237,213,54)"/><text x="747.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 0.42%)</title><rect x="744" y="324" width="5" height="15" fill="rgb(244,225,21)"/><text x="747.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (3 samples, 0.32%)</title><rect x="745" y="340" width="4" height="15" fill="rgb(232,184,9)"/><text x="748.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (2 samples, 0.21%)</title><rect x="746" y="356" width="3" height="15" fill="rgb(252,138,27)"/><text x="749.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (2 samples, 0.21%)</title><rect x="746" y="372" width="3" height="15" fill="rgb(239,129,19)"/><text x="749.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.21%)</title><rect x="746" y="388" width="3" height="15" fill="rgb(251,3,48)"/><text x="749.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.21%)</title><rect x="746" y="404" width="3" height="15" fill="rgb(232,66,50)"/><text x="749.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="748" y="420" width="1" height="15" fill="rgb(249,121,47)"/><text x="751.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="749" y="244" width="1" height="15" fill="rgb(232,90,31)"/><text x="752.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.11%)</title><rect x="749" y="260" width="1" height="15" fill="rgb(225,221,49)"/><text x="752.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="749" y="276" width="1" height="15" fill="rgb(207,87,3)"/><text x="752.00" y="286.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="749" y="292" width="1" height="15" fill="rgb(239,205,43)"/><text x="752.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="749" y="308" width="1" height="15" fill="rgb(220,187,39)"/><text x="752.00" y="318.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (6 samples, 0.63%)</title><rect x="744" y="164" width="7" height="15" fill="rgb(252,39,4)"/><text x="747.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (6 samples, 0.63%)</title><rect x="744" y="180" width="7" height="15" fill="rgb(219,205,51)"/><text x="747.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.21%)</title><rect x="749" y="196" width="2" height="15" fill="rgb(224,219,46)"/><text x="752.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.21%)</title><rect x="749" y="212" width="2" height="15" fill="rgb(243,51,18)"/><text x="752.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="749" y="228" width="2" height="15" fill="rgb(224,20,4)"/><text x="752.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="750" y="244" width="1" height="15" fill="rgb(223,36,16)"/><text x="753.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.11%)</title><rect x="750" y="260" width="1" height="15" fill="rgb(217,10,2)"/><text x="753.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.11%)</title><rect x="750" y="276" width="1" height="15" fill="rgb(217,106,0)"/><text x="753.00" y="286.50"></text></g><g><title>0x7fb2cef58c7b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="750" y="292" width="1" height="15" fill="rgb(250,52,22)"/><text x="753.00" y="302.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="751" y="164" width="2" height="15" fill="rgb(217,142,5)"/><text x="754.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="751" y="180" width="2" height="15" fill="rgb(232,191,52)"/><text x="754.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.11%)</title><rect x="751" y="196" width="2" height="15" fill="rgb(237,160,41)"/><text x="754.00" y="206.50"></text></g><g><title>0x7fb2cdfa9800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="751" y="212" width="2" height="15" fill="rgb(240,150,1)"/><text x="754.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="753" y="164" width="1" height="15" fill="rgb(245,189,35)"/><text x="756.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="753" y="180" width="1" height="15" fill="rgb(229,17,14)"/><text x="756.00" y="190.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.21%)</title><rect x="768" y="212" width="2" height="15" fill="rgb(228,16,53)"/><text x="771.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.21%)</title><rect x="768" y="228" width="2" height="15" fill="rgb(240,191,42)"/><text x="771.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="771" y="260" width="2" height="15" fill="rgb(247,38,54)"/><text x="774.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="771" y="276" width="2" height="15" fill="rgb(232,160,42)"/><text x="774.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="771" y="292" width="2" height="15" fill="rgb(209,129,52)"/><text x="774.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.11%)</title><rect x="771" y="308" width="2" height="15" fill="rgb(227,76,16)"/><text x="774.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="771" y="324" width="2" height="15" fill="rgb(205,168,28)"/><text x="774.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="771" y="340" width="2" height="15" fill="rgb(231,91,23)"/><text x="774.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="773" y="276" width="1" height="15" fill="rgb(232,22,18)"/><text x="776.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.11%)</title><rect x="773" y="292" width="1" height="15" fill="rgb(245,159,15)"/><text x="776.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="773" y="308" width="1" height="15" fill="rgb(235,126,43)"/><text x="776.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="773" y="324" width="1" height="15" fill="rgb(236,21,10)"/><text x="776.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="773" y="340" width="1" height="15" fill="rgb(213,125,39)"/><text x="776.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="773" y="356" width="1" height="15" fill="rgb(241,97,8)"/><text x="776.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="773" y="260" width="2" height="15" fill="rgb(240,54,51)"/><text x="776.00" y="270.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="774" y="276" width="1" height="15" fill="rgb(241,205,44)"/><text x="777.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="775" y="308" width="1" height="15" fill="rgb(210,25,18)"/><text x="778.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="775" y="324" width="1" height="15" fill="rgb(205,36,36)"/><text x="778.00" y="334.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="775" y="340" width="1" height="15" fill="rgb(246,153,49)"/><text x="778.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.21%)</title><rect x="775" y="276" width="2" height="15" fill="rgb(214,220,51)"/><text x="778.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="775" y="292" width="2" height="15" fill="rgb(229,102,51)"/><text x="778.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="776" y="308" width="1" height="15" fill="rgb(246,139,17)"/><text x="779.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="776" y="324" width="1" height="15" fill="rgb(246,202,44)"/><text x="779.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="776" y="340" width="1" height="15" fill="rgb(225,147,14)"/><text x="779.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="776" y="356" width="1" height="15" fill="rgb(220,17,16)"/><text x="779.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="777" y="292" width="2" height="15" fill="rgb(208,137,51)"/><text x="780.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.42%)</title><rect x="775" y="260" width="5" height="15" fill="rgb(209,151,43)"/><text x="778.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="777" y="276" width="3" height="15" fill="rgb(210,133,5)"/><text x="780.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="779" y="292" width="1" height="15" fill="rgb(221,116,51)"/><text x="782.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="780" y="292" width="1" height="15" fill="rgb(217,157,7)"/><text x="783.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="780" y="308" width="1" height="15" fill="rgb(210,107,27)"/><text x="783.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="781" y="292" width="1" height="15" fill="rgb(243,73,41)"/><text x="784.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="781" y="308" width="1" height="15" fill="rgb(243,220,9)"/><text x="784.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.32%)</title><rect x="780" y="260" width="4" height="15" fill="rgb(241,70,51)"/><text x="783.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.32%)</title><rect x="780" y="276" width="4" height="15" fill="rgb(254,113,24)"/><text x="783.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="782" y="292" width="2" height="15" fill="rgb(208,47,24)"/><text x="785.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="782" y="308" width="2" height="15" fill="rgb(234,166,17)"/><text x="785.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="782" y="324" width="2" height="15" fill="rgb(252,171,8)"/><text x="785.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.16%)</title><rect x="771" y="244" width="14" height="15" fill="rgb(237,141,19)"/><text x="774.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="784" y="260" width="1" height="15" fill="rgb(218,34,49)"/><text x="787.00" y="270.50"></text></g><g><title>array_multiply (number.c) (13 samples, 1.37%)</title><rect x="770" y="212" width="16" height="15" fill="rgb(216,110,22)"/><text x="773.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.37%)</title><rect x="770" y="228" width="16" height="15" fill="rgb(232,115,7)"/><text x="773.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="785" y="244" width="1" height="15" fill="rgb(211,100,26)"/><text x="788.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="785" y="260" width="1" height="15" fill="rgb(224,106,35)"/><text x="788.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="785" y="276" width="1" height="15" fill="rgb(229,47,26)"/><text x="788.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="787" y="276" width="2" height="15" fill="rgb(229,1,34)"/><text x="790.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.32%)</title><rect x="786" y="212" width="4" height="15" fill="rgb(220,113,53)"/><text x="789.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.32%)</title><rect x="786" y="228" width="4" height="15" fill="rgb(223,61,3)"/><text x="789.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.21%)</title><rect x="787" y="244" width="3" height="15" fill="rgb(212,45,42)"/><text x="790.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="787" y="260" width="3" height="15" fill="rgb(209,1,41)"/><text x="790.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="789" y="276" width="1" height="15" fill="rgb(254,179,44)"/><text x="792.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (4 samples, 0.42%)</title><rect x="790" y="292" width="5" height="15" fill="rgb(220,222,32)"/><text x="793.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (4 samples, 0.42%)</title><rect x="790" y="308" width="5" height="15" fill="rgb(220,81,31)"/><text x="793.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (4 samples, 0.42%)</title><rect x="790" y="324" width="5" height="15" fill="rgb(221,9,1)"/><text x="793.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 0.42%)</title><rect x="790" y="340" width="5" height="15" fill="rgb(249,84,2)"/><text x="793.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.21%)</title><rect x="795" y="308" width="2" height="15" fill="rgb(253,52,5)"/><text x="798.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.21%)</title><rect x="795" y="324" width="2" height="15" fill="rgb(236,10,48)"/><text x="798.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.21%)</title><rect x="795" y="340" width="2" height="15" fill="rgb(253,220,24)"/><text x="798.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="795" y="356" width="2" height="15" fill="rgb(242,141,26)"/><text x="798.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="796" y="372" width="1" height="15" fill="rgb(253,124,22)"/><text x="799.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="796" y="388" width="1" height="15" fill="rgb(251,73,40)"/><text x="799.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="796" y="404" width="1" height="15" fill="rgb(248,165,7)"/><text x="799.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="796" y="420" width="1" height="15" fill="rgb(232,194,33)"/><text x="799.00" y="430.50"></text></g><g><title>0x7fb2ced88727 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="796" y="436" width="1" height="15" fill="rgb(247,23,29)"/><text x="799.00" y="446.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="797" y="308" width="2" height="15" fill="rgb(239,161,13)"/><text x="800.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="797" y="324" width="2" height="15" fill="rgb(250,214,32)"/><text x="800.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="797" y="340" width="2" height="15" fill="rgb(222,126,24)"/><text x="800.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.42%)</title><rect x="795" y="292" width="5" height="15" fill="rgb(221,18,20)"/><text x="798.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="799" y="308" width="1" height="15" fill="rgb(249,10,25)"/><text x="802.00" y="318.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.11%)</title><rect x="799" y="324" width="1" height="15" fill="rgb(246,138,17)"/><text x="802.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="800" y="292" width="1" height="15" fill="rgb(232,21,49)"/><text x="803.00" y="302.50"></text></g><g><title>0x7fb2ced86d28 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="800" y="308" width="1" height="15" fill="rgb(225,123,37)"/><text x="803.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 0.95%)</title><rect x="801" y="292" width="11" height="15" fill="rgb(207,190,45)"/><text x="804.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (9 samples, 0.95%)</title><rect x="801" y="308" width="11" height="15" fill="rgb(205,125,42)"/><text x="804.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (9 samples, 0.95%)</title><rect x="801" y="324" width="11" height="15" fill="rgb(221,142,26)"/><text x="804.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (7 samples, 0.74%)</title><rect x="804" y="340" width="8" height="15" fill="rgb(220,100,47)"/><text x="807.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 2.00%)</title><rect x="790" y="244" width="24" height="15" fill="rgb(242,46,34)"/><text x="793.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (19 samples, 2.00%)</title><rect x="790" y="260" width="24" height="15" fill="rgb(225,190,39)"/><text x="793.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (19 samples, 2.00%)</title><rect x="790" y="276" width="24" height="15" fill="rgb(227,111,18)"/><text x="793.00" y="286.50">i..</text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="812" y="292" width="2" height="15" fill="rgb(247,191,11)"/><text x="815.00" y="302.50"></text></g><g><title>array_subtract (number.c) (20 samples, 2.11%)</title><rect x="790" y="212" width="25" height="15" fill="rgb(245,60,29)"/><text x="793.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 2.11%)</title><rect x="790" y="228" width="25" height="15" fill="rgb(236,48,36)"/><text x="793.00" y="238.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="814" y="244" width="1" height="15" fill="rgb(240,169,18)"/><text x="817.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="814" y="260" width="1" height="15" fill="rgb(218,8,9)"/><text x="817.00" y="270.50"></text></g><g><title>0x7fb2ceda71ef (libc-2.29.so) (1 samples, 0.11%)</title><rect x="815" y="244" width="1" height="15" fill="rgb(246,36,8)"/><text x="818.00" y="254.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="821" y="324" width="1" height="15" fill="rgb(208,169,40)"/><text x="824.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="821" y="340" width="1" height="15" fill="rgb(219,123,47)"/><text x="824.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="821" y="356" width="1" height="15" fill="rgb(207,127,19)"/><text x="824.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="821" y="372" width="1" height="15" fill="rgb(252,224,20)"/><text x="824.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="821" y="388" width="1" height="15" fill="rgb(211,36,1)"/><text x="824.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="821" y="404" width="1" height="15" fill="rgb(211,8,41)"/><text x="824.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="821" y="420" width="1" height="15" fill="rgb(254,11,4)"/><text x="824.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="821" y="436" width="1" height="15" fill="rgb(245,95,37)"/><text x="824.00" y="446.50"></text></g><g><title>0x7fb2ced88514 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="821" y="452" width="1" height="15" fill="rgb(213,138,15)"/><text x="824.00" y="462.50"></text></g><g><title>0x7fb2cdfa9710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="822" y="340" width="2" height="15" fill="rgb(243,123,3)"/><text x="825.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.21%)</title><rect x="822" y="324" width="3" height="15" fill="rgb(242,121,40)"/><text x="825.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="824" y="340" width="1" height="15" fill="rgb(245,229,15)"/><text x="827.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (17 samples, 1.79%)</title><rect x="834" y="340" width="21" height="15" fill="rgb(252,209,23)"/><text x="837.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (6 samples, 0.63%)</title><rect x="847" y="356" width="8" height="15" fill="rgb(212,42,39)"/><text x="850.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (33 samples, 3.48%)</title><rect x="821" y="292" width="41" height="15" fill="rgb(244,113,41)"/><text x="824.00" y="302.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (33 samples, 3.48%)</title><rect x="821" y="308" width="41" height="15" fill="rgb(226,15,43)"/><text x="824.00" y="318.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (30 samples, 3.16%)</title><rect x="825" y="324" width="37" height="15" fill="rgb(249,83,45)"/><text x="828.00" y="334.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.63%)</title><rect x="855" y="340" width="7" height="15" fill="rgb(230,138,13)"/><text x="858.00" y="350.50"></text></g><g><title>array_sum (methods.c) (39 samples, 4.11%)</title><rect x="815" y="212" width="48" height="15" fill="rgb(220,198,27)"/><text x="818.00" y="222.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (39 samples, 4.11%)</title><rect x="815" y="228" width="48" height="15" fill="rgb(245,100,54)"/><text x="818.00" y="238.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (38 samples, 4.01%)</title><rect x="816" y="244" width="47" height="15" fill="rgb(223,178,46)"/><text x="819.00" y="254.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (38 samples, 4.01%)</title><rect x="816" y="260" width="47" height="15" fill="rgb(234,39,10)"/><text x="819.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (38 samples, 4.01%)</title><rect x="816" y="276" width="47" height="15" fill="rgb(239,169,53)"/><text x="819.00" y="286.50">PyUF..</text></g><g><title>_wheremask_converter (ufunc_object.c) (1 samples, 0.11%)</title><rect x="862" y="292" width="1" height="15" fill="rgb(211,221,17)"/><text x="865.00" y="302.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="865" y="228" width="1" height="15" fill="rgb(215,75,6)"/><text x="868.00" y="238.50"></text></g><g><title>0x7fb2ceda714a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="868" y="308" width="2" height="15" fill="rgb(236,42,47)"/><text x="871.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="875" y="356" width="1" height="15" fill="rgb(209,160,37)"/><text x="878.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="875" y="372" width="1" height="15" fill="rgb(247,224,10)"/><text x="878.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="875" y="388" width="1" height="15" fill="rgb(250,139,39)"/><text x="878.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="875" y="404" width="1" height="15" fill="rgb(236,211,4)"/><text x="878.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="875" y="420" width="1" height="15" fill="rgb(205,22,43)"/><text x="878.00" y="430.50"></text></g><g><title>0x7fb2ced9ce9d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="875" y="436" width="1" height="15" fill="rgb(217,46,2)"/><text x="878.00" y="446.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="876" y="372" width="2" height="15" fill="rgb(218,152,23)"/><text x="879.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="876" y="388" width="2" height="15" fill="rgb(237,60,17)"/><text x="879.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="877" y="404" width="1" height="15" fill="rgb(214,91,51)"/><text x="880.00" y="414.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="878" y="388" width="2" height="15" fill="rgb(242,141,6)"/><text x="881.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="878" y="404" width="2" height="15" fill="rgb(228,26,37)"/><text x="881.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.11%)</title><rect x="878" y="420" width="2" height="15" fill="rgb(223,107,49)"/><text x="881.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.16%)</title><rect x="878" y="372" width="14" height="15" fill="rgb(249,170,14)"/><text x="881.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (10 samples, 1.05%)</title><rect x="880" y="388" width="12" height="15" fill="rgb(237,208,36)"/><text x="883.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (10 samples, 1.05%)</title><rect x="880" y="404" width="12" height="15" fill="rgb(222,18,38)"/><text x="883.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (16 samples, 1.69%)</title><rect x="873" y="324" width="20" height="15" fill="rgb(226,151,12)"/><text x="876.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 1.58%)</title><rect x="875" y="340" width="18" height="15" fill="rgb(240,123,43)"/><text x="878.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 1.48%)</title><rect x="876" y="356" width="17" height="15" fill="rgb(243,10,43)"/><text x="879.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="892" y="372" width="1" height="15" fill="rgb(250,37,36)"/><text x="895.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="892" y="388" width="1" height="15" fill="rgb(243,162,22)"/><text x="895.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="892" y="404" width="1" height="15" fill="rgb(250,63,35)"/><text x="895.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="892" y="420" width="1" height="15" fill="rgb(212,164,54)"/><text x="895.00" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="901" y="340" width="2" height="15" fill="rgb(220,56,43)"/><text x="904.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.32%)</title><rect x="904" y="372" width="4" height="15" fill="rgb(230,148,31)"/><text x="907.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (3 samples, 0.32%)</title><rect x="904" y="388" width="4" height="15" fill="rgb(210,121,44)"/><text x="907.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.32%)</title><rect x="904" y="404" width="4" height="15" fill="rgb(221,222,12)"/><text x="907.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.32%)</title><rect x="904" y="420" width="4" height="15" fill="rgb(247,193,6)"/><text x="907.00" y="430.50"></text></g><g><title>0x7fb2ced9ce7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="907" y="436" width="1" height="15" fill="rgb(235,159,1)"/><text x="910.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="913" y="388" width="1" height="15" fill="rgb(222,229,37)"/><text x="916.00" y="398.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.21%)</title><rect x="916" y="420" width="2" height="15" fill="rgb(244,26,12)"/><text x="919.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.21%)</title><rect x="916" y="436" width="2" height="15" fill="rgb(219,174,26)"/><text x="919.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.21%)</title><rect x="916" y="452" width="2" height="15" fill="rgb(253,38,49)"/><text x="919.00" y="462.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (13 samples, 1.37%)</title><rect x="903" y="340" width="16" height="15" fill="rgb(214,185,28)"/><text x="906.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 1.27%)</title><rect x="904" y="356" width="15" height="15" fill="rgb(235,133,30)"/><text x="907.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (9 samples, 0.95%)</title><rect x="908" y="372" width="11" height="15" fill="rgb(247,52,35)"/><text x="911.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.42%)</title><rect x="914" y="388" width="5" height="15" fill="rgb(219,7,20)"/><text x="917.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.32%)</title><rect x="916" y="404" width="3" height="15" fill="rgb(253,109,6)"/><text x="919.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="918" y="420" width="1" height="15" fill="rgb(247,14,25)"/><text x="921.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.21%)</title><rect x="919" y="356" width="3" height="15" fill="rgb(223,83,9)"/><text x="922.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="921" y="372" width="1" height="15" fill="rgb(205,69,28)"/><text x="924.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="921" y="388" width="1" height="15" fill="rgb(206,98,54)"/><text x="924.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="921" y="404" width="1" height="15" fill="rgb(248,199,50)"/><text x="924.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="921" y="420" width="1" height="15" fill="rgb(243,190,9)"/><text x="924.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.53%)</title><rect x="922" y="356" width="6" height="15" fill="rgb(235,7,41)"/><text x="925.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (5 samples, 0.53%)</title><rect x="922" y="372" width="6" height="15" fill="rgb(226,2,49)"/><text x="925.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (3 samples, 0.32%)</title><rect x="924" y="388" width="4" height="15" fill="rgb(205,109,34)"/><text x="927.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="927" y="404" width="1" height="15" fill="rgb(250,42,34)"/><text x="930.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (51 samples, 5.38%)</title><rect x="866" y="244" width="63" height="15" fill="rgb(249,216,1)"/><text x="869.00" y="254.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (51 samples, 5.38%)</title><rect x="866" y="260" width="63" height="15" fill="rgb(231,8,9)"/><text x="869.00" y="270.50">_wrapf..</text></g><g><title>array_clip (methods.c) (50 samples, 5.27%)</title><rect x="867" y="276" width="62" height="15" fill="rgb(239,54,44)"/><text x="870.00" y="286.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (49 samples, 5.17%)</title><rect x="868" y="292" width="61" height="15" fill="rgb(205,4,31)"/><text x="871.00" y="302.50">forwar..</text></g><g><title>_clip (numpy/core/_methods.py) (48 samples, 5.06%)</title><rect x="870" y="308" width="59" height="15" fill="rgb(213,156,35)"/><text x="873.00" y="318.50">_clip ..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (29 samples, 3.06%)</title><rect x="893" y="324" width="36" height="15" fill="rgb(211,88,29)"/><text x="896.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 0.84%)</title><rect x="919" y="340" width="10" height="15" fill="rgb(222,0,1)"/><text x="922.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="928" y="356" width="1" height="15" fill="rgb(245,154,27)"/><text x="931.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="928" y="372" width="1" height="15" fill="rgb(209,210,30)"/><text x="931.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="928" y="388" width="1" height="15" fill="rgb(241,201,11)"/><text x="931.00" y="398.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (55 samples, 5.80%)</title><rect x="863" y="212" width="69" height="15" fill="rgb(224,120,37)"/><text x="866.00" y="222.50">clip (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (53 samples, 5.59%)</title><rect x="866" y="228" width="66" height="15" fill="rgb(232,202,45)"/><text x="869.00" y="238.50">array_i..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.21%)</title><rect x="929" y="244" width="3" height="15" fill="rgb(226,150,31)"/><text x="932.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.21%)</title><rect x="929" y="260" width="3" height="15" fill="rgb(237,152,53)"/><text x="932.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.21%)</title><rect x="929" y="276" width="3" height="15" fill="rgb(222,167,15)"/><text x="932.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.21%)</title><rect x="929" y="292" width="3" height="15" fill="rgb(246,42,6)"/><text x="932.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="941" y="292" width="1" height="15" fill="rgb(229,220,22)"/><text x="944.00" y="302.50"></text></g><g><title>0x7fb2a87c9f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.32%)</title><rect x="941" y="244" width="3" height="15" fill="rgb(212,226,29)"/><text x="944.00" y="254.50"></text></g><g><title>0x7fb2a87b9d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.32%)</title><rect x="941" y="260" width="3" height="15" fill="rgb(230,143,0)"/><text x="944.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.32%)</title><rect x="941" y="276" width="3" height="15" fill="rgb(243,45,49)"/><text x="944.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="942" y="292" width="2" height="15" fill="rgb(237,170,20)"/><text x="945.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.21%)</title><rect x="942" y="308" width="2" height="15" fill="rgb(252,42,1)"/><text x="945.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (2 samples, 0.21%)</title><rect x="942" y="324" width="2" height="15" fill="rgb(223,142,45)"/><text x="945.00" y="334.50"></text></g><g><title>PyArray_CLEARFLAGS (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="943" y="340" width="1" height="15" fill="rgb(231,220,26)"/><text x="946.00" y="350.50"></text></g><g><title>0x7fb2a87d8225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="944" y="276" width="2" height="15" fill="rgb(244,94,21)"/><text x="947.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.11%)</title><rect x="944" y="292" width="2" height="15" fill="rgb(245,3,26)"/><text x="947.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.11%)</title><rect x="944" y="308" width="2" height="15" fill="rgb(208,21,43)"/><text x="947.00" y="318.50"></text></g><g><title>0x7fb2a87b210c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="946" y="324" width="1" height="15" fill="rgb(239,174,9)"/><text x="949.00" y="334.50"></text></g><g><title>0x7fb2a87d82df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="946" y="276" width="2" height="15" fill="rgb(240,226,40)"/><text x="949.00" y="286.50"></text></g><g><title>0x7fb2a87bcd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="946" y="292" width="2" height="15" fill="rgb(228,164,31)"/><text x="949.00" y="302.50"></text></g><g><title>0x7fb2a87bc666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="946" y="308" width="2" height="15" fill="rgb(210,27,23)"/><text x="949.00" y="318.50"></text></g><g><title>0x7fb2a87b22fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="947" y="324" width="1" height="15" fill="rgb(237,189,20)"/><text x="950.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="947" y="340" width="1" height="15" fill="rgb(208,221,11)"/><text x="950.00" y="350.50"></text></g><g><title>0x7fb2a87d84b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="948" y="276" width="1" height="15" fill="rgb(232,12,5)"/><text x="951.00" y="286.50"></text></g><g><title>0x7fb2a87d8511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="949" y="276" width="3" height="15" fill="rgb(243,81,34)"/><text x="952.00" y="286.50"></text></g><g><title>0x7fb2cee64d21 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="951" y="292" width="1" height="15" fill="rgb(218,19,51)"/><text x="954.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="954" y="356" width="1" height="15" fill="rgb(205,182,40)"/><text x="957.00" y="366.50"></text></g><g><title>0x7fb2a87d8592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.53%)</title><rect x="952" y="276" width="6" height="15" fill="rgb(240,214,33)"/><text x="955.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 0.53%)</title><rect x="952" y="292" width="6" height="15" fill="rgb(243,66,52)"/><text x="955.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.32%)</title><rect x="954" y="308" width="4" height="15" fill="rgb(226,24,33)"/><text x="957.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (3 samples, 0.32%)</title><rect x="954" y="324" width="4" height="15" fill="rgb(239,134,28)"/><text x="957.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.32%)</title><rect x="954" y="340" width="4" height="15" fill="rgb(251,182,4)"/><text x="957.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.21%)</title><rect x="955" y="356" width="3" height="15" fill="rgb(240,111,33)"/><text x="958.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.11%)</title><rect x="957" y="372" width="1" height="15" fill="rgb(231,8,35)"/><text x="960.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="957" y="388" width="1" height="15" fill="rgb(238,138,5)"/><text x="960.00" y="398.50"></text></g><g><title>0x7fb2ceda7103 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="957" y="404" width="1" height="15" fill="rgb(224,165,49)"/><text x="960.00" y="414.50"></text></g><g><title>0x7fb2a87d86aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="958" y="276" width="1" height="15" fill="rgb(225,167,40)"/><text x="961.00" y="286.50"></text></g><g><title>0x7fb2a87d86b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="959" y="276" width="3" height="15" fill="rgb(248,149,19)"/><text x="962.00" y="286.50"></text></g><g><title>0x7fb2a87d86d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="962" y="276" width="1" height="15" fill="rgb(227,172,23)"/><text x="965.00" y="286.50"></text></g><g><title>0x7fb2a87d87a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="963" y="276" width="1" height="15" fill="rgb(232,86,9)"/><text x="966.00" y="286.50"></text></g><g><title>0x7fb2a87d887d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="964" y="276" width="1" height="15" fill="rgb(242,127,49)"/><text x="967.00" y="286.50"></text></g><g><title>0x7fb2a87d892f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="965" y="276" width="2" height="15" fill="rgb(251,86,45)"/><text x="968.00" y="286.50"></text></g><g><title>0x7fb2a87ada05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="965" y="292" width="2" height="15" fill="rgb(205,92,15)"/><text x="968.00" y="302.50"></text></g><g><title>0x7fb2a87c9fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 2.00%)</title><rect x="944" y="244" width="24" height="15" fill="rgb(224,132,3)"/><text x="947.00" y="254.50">0..</text></g><g><title>0x7fb2a87d9405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 2.00%)</title><rect x="944" y="260" width="24" height="15" fill="rgb(254,8,9)"/><text x="947.00" y="270.50">0..</text></g><g><title>0x7fb2a87d8c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="967" y="276" width="1" height="15" fill="rgb(206,20,14)"/><text x="970.00" y="286.50"></text></g><g><title>0x7fb2a87b0529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="967" y="292" width="1" height="15" fill="rgb(235,168,20)"/><text x="970.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="967" y="308" width="1" height="15" fill="rgb(253,125,42)"/><text x="970.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.11%)</title><rect x="967" y="324" width="1" height="15" fill="rgb(220,55,40)"/><text x="970.00" y="334.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (4 samples, 0.42%)</title><rect x="968" y="276" width="5" height="15" fill="rgb(238,34,54)"/><text x="971.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (4 samples, 0.42%)</title><rect x="968" y="292" width="5" height="15" fill="rgb(221,47,11)"/><text x="971.00" y="302.50"></text></g><g><title>0x7fb2a87cad2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 2.85%)</title><rect x="941" y="228" width="33" height="15" fill="rgb(216,215,46)"/><text x="944.00" y="238.50">0x..</text></g><g><title>0x7fb2a87ca05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.53%)</title><rect x="968" y="244" width="6" height="15" fill="rgb(249,132,45)"/><text x="971.00" y="254.50"></text></g><g><title>array_take (methods.c) (5 samples, 0.53%)</title><rect x="968" y="260" width="6" height="15" fill="rgb(253,155,23)"/><text x="971.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="973" y="276" width="1" height="15" fill="rgb(215,204,49)"/><text x="976.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.11%)</title><rect x="984" y="260" width="1" height="15" fill="rgb(215,200,29)"/><text x="987.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.11%)</title><rect x="985" y="260" width="2" height="15" fill="rgb(222,196,6)"/><text x="988.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="992" y="276" width="2" height="15" fill="rgb(227,92,40)"/><text x="995.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 0.74%)</title><rect x="987" y="260" width="8" height="15" fill="rgb(218,19,27)"/><text x="990.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.11%)</title><rect x="994" y="276" width="1" height="15" fill="rgb(223,86,30)"/><text x="997.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="995" y="260" width="2" height="15" fill="rgb(239,214,20)"/><text x="998.00" y="270.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.11%)</title><rect x="995" y="276" width="2" height="15" fill="rgb(242,114,27)"/><text x="998.00" y="286.50"></text></g><g><title>0x7fb2ced9cb6c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1007" y="276" width="1" height="15" fill="rgb(231,125,9)"/><text x="1010.00" y="286.50"></text></g><g><title>0x7fb2ced9ce7e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1008" y="276" width="1" height="15" fill="rgb(219,27,42)"/><text x="1011.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.11%)</title><rect x="1009" y="276" width="1" height="15" fill="rgb(216,31,38)"/><text x="1012.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 1.27%)</title><rect x="997" y="260" width="15" height="15" fill="rgb(240,214,35)"/><text x="1000.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.11%)</title><rect x="1010" y="276" width="2" height="15" fill="rgb(224,168,1)"/><text x="1013.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.21%)</title><rect x="1012" y="260" width="2" height="15" fill="rgb(247,203,0)"/><text x="1015.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1013" y="276" width="1" height="15" fill="rgb(238,120,17)"/><text x="1016.00" y="286.50"></text></g><g><title>simplefilter (warnings.py) (6 samples, 0.63%)</title><rect x="1014" y="260" width="7" height="15" fill="rgb(216,138,9)"/><text x="1017.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 0.63%)</title><rect x="1014" y="276" width="7" height="15" fill="rgb(253,224,10)"/><text x="1017.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (39 samples, 4.11%)</title><rect x="974" y="228" width="49" height="15" fill="rgb(226,170,50)"/><text x="977.00" y="238.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py) (39 samples, 4.11%)</title><rect x="974" y="244" width="49" height="15" fill="rgb(208,76,15)"/><text x="977.00" y="254.50">chec..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="1021" y="260" width="2" height="15" fill="rgb(245,229,25)"/><text x="1024.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.21%)</title><rect x="1023" y="228" width="2" height="15" fill="rgb(235,41,28)"/><text x="1026.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1024" y="244" width="1" height="15" fill="rgb(208,98,51)"/><text x="1027.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1024" y="260" width="1" height="15" fill="rgb(249,210,0)"/><text x="1027.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1024" y="276" width="1" height="15" fill="rgb(218,39,1)"/><text x="1027.00" y="286.50"></text></g><g><title>array_inplace_true_divide (number.c) (1 samples, 0.11%)</title><rect x="1025" y="228" width="1" height="15" fill="rgb(247,53,26)"/><text x="1028.00" y="238.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c) (1 samples, 0.11%)</title><rect x="1025" y="244" width="1" height="15" fill="rgb(241,163,19)"/><text x="1028.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1026" y="276" width="2" height="15" fill="rgb(214,217,41)"/><text x="1029.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1026" y="292" width="2" height="15" fill="rgb(249,177,11)"/><text x="1029.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1026" y="308" width="2" height="15" fill="rgb(219,16,13)"/><text x="1029.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1026" y="324" width="2" height="15" fill="rgb(205,13,34)"/><text x="1029.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.32%)</title><rect x="1026" y="260" width="4" height="15" fill="rgb(216,110,18)"/><text x="1029.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.21%)</title><rect x="1028" y="276" width="2" height="15" fill="rgb(220,13,50)"/><text x="1031.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1029" y="292" width="1" height="15" fill="rgb(225,100,20)"/><text x="1032.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="1029" y="308" width="1" height="15" fill="rgb(244,134,24)"/><text x="1032.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1030" y="276" width="1" height="15" fill="rgb(235,92,4)"/><text x="1033.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1030" y="292" width="1" height="15" fill="rgb(240,225,32)"/><text x="1033.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c) (5 samples, 0.53%)</title><rect x="1026" y="228" width="7" height="15" fill="rgb(210,130,46)"/><text x="1029.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.53%)</title><rect x="1026" y="244" width="7" height="15" fill="rgb(208,193,28)"/><text x="1029.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.21%)</title><rect x="1030" y="260" width="3" height="15" fill="rgb(244,110,42)"/><text x="1033.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1031" y="276" width="2" height="15" fill="rgb(245,136,48)"/><text x="1034.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1033" y="228" width="1" height="15" fill="rgb(243,125,36)"/><text x="1036.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="1033" y="244" width="1" height="15" fill="rgb(238,45,47)"/><text x="1036.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.21%)</title><rect x="1038" y="292" width="2" height="15" fill="rgb(243,31,13)"/><text x="1041.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.21%)</title><rect x="1038" y="308" width="2" height="15" fill="rgb(217,215,47)"/><text x="1041.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.21%)</title><rect x="1038" y="324" width="2" height="15" fill="rgb(237,167,31)"/><text x="1041.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.21%)</title><rect x="1038" y="340" width="2" height="15" fill="rgb(217,228,39)"/><text x="1041.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.21%)</title><rect x="1038" y="356" width="2" height="15" fill="rgb(215,113,29)"/><text x="1041.00" y="366.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.11%)</title><rect x="1043" y="308" width="1" height="15" fill="rgb(215,184,1)"/><text x="1046.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1045" y="372" width="1" height="15" fill="rgb(239,178,11)"/><text x="1048.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1045" y="388" width="1" height="15" fill="rgb(239,228,4)"/><text x="1048.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.21%)</title><rect x="1045" y="340" width="3" height="15" fill="rgb(246,24,50)"/><text x="1048.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.21%)</title><rect x="1045" y="356" width="3" height="15" fill="rgb(248,213,2)"/><text x="1048.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1046" y="372" width="2" height="15" fill="rgb(220,191,5)"/><text x="1049.00" y="382.50"></text></g><g><title>0x7fb2ced3e9f1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1046" y="388" width="2" height="15" fill="rgb(232,5,33)"/><text x="1049.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="1048" y="340" width="1" height="15" fill="rgb(247,203,5)"/><text x="1051.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="1048" y="356" width="1" height="15" fill="rgb(241,147,46)"/><text x="1051.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1048" y="372" width="1" height="15" fill="rgb(235,219,44)"/><text x="1051.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1048" y="388" width="1" height="15" fill="rgb(222,191,17)"/><text x="1051.00" y="398.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1048" y="404" width="1" height="15" fill="rgb(210,124,18)"/><text x="1051.00" y="414.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="1048" y="420" width="1" height="15" fill="rgb(246,44,6)"/><text x="1051.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src) (15 samples, 1.58%)</title><rect x="1050" y="356" width="19" height="15" fill="rgb(238,160,22)"/><text x="1053.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (11 samples, 1.16%)</title><rect x="1055" y="372" width="14" height="15" fill="rgb(222,189,8)"/><text x="1058.00" y="382.50"></text></g><g><title>array_sum (methods.c) (34 samples, 3.59%)</title><rect x="1034" y="228" width="42" height="15" fill="rgb(226,32,23)"/><text x="1037.00" y="238.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (34 samples, 3.59%)</title><rect x="1034" y="244" width="42" height="15" fill="rgb(228,194,10)"/><text x="1037.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (31 samples, 3.27%)</title><rect x="1038" y="260" width="38" height="15" fill="rgb(205,145,12)"/><text x="1041.00" y="270.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (31 samples, 3.27%)</title><rect x="1038" y="276" width="38" height="15" fill="rgb(232,131,36)"/><text x="1041.00" y="286.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (29 samples, 3.06%)</title><rect x="1040" y="292" width="36" height="15" fill="rgb(207,4,35)"/><text x="1043.00" y="302.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 2.74%)</title><rect x="1044" y="308" width="32" height="15" fill="rgb(250,160,33)"/><text x="1047.00" y="318.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (25 samples, 2.64%)</title><rect x="1045" y="324" width="31" height="15" fill="rgb(222,104,6)"/><text x="1048.00" y="334.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (22 samples, 2.32%)</title><rect x="1049" y="340" width="27" height="15" fill="rgb(213,51,36)"/><text x="1052.00" y="350.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.63%)</title><rect x="1069" y="356" width="7" height="15" fill="rgb(254,35,35)"/><text x="1072.00" y="366.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 1.58%)</title><rect x="1076" y="228" width="19" height="15" fill="rgb(230,8,50)"/><text x="1079.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 0.63%)</title><rect x="1087" y="244" width="8" height="15" fill="rgb(237,81,5)"/><text x="1090.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.21%)</title><rect x="1092" y="260" width="3" height="15" fill="rgb(245,90,32)"/><text x="1095.00" y="270.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (2 samples, 0.21%)</title><rect x="1095" y="340" width="2" height="15" fill="rgb(245,177,40)"/><text x="1098.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (11 samples, 1.16%)</title><rect x="1095" y="292" width="14" height="15" fill="rgb(248,126,17)"/><text x="1098.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (11 samples, 1.16%)</title><rect x="1095" y="308" width="14" height="15" fill="rgb(211,88,31)"/><text x="1098.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (11 samples, 1.16%)</title><rect x="1095" y="324" width="14" height="15" fill="rgb(242,14,53)"/><text x="1098.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (9 samples, 0.95%)</title><rect x="1097" y="340" width="12" height="15" fill="rgb(209,116,41)"/><text x="1100.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1109" y="292" width="1" height="15" fill="rgb(215,22,44)"/><text x="1112.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1109" y="308" width="1" height="15" fill="rgb(227,112,32)"/><text x="1112.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1110" y="308" width="1" height="15" fill="rgb(209,103,5)"/><text x="1113.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1110" y="324" width="1" height="15" fill="rgb(208,161,8)"/><text x="1113.00" y="334.50"></text></g><g><title>0x7fb2ced882a3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1110" y="340" width="1" height="15" fill="rgb(241,167,0)"/><text x="1113.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.63%)</title><rect x="1110" y="292" width="7" height="15" fill="rgb(234,145,31)"/><text x="1113.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.53%)</title><rect x="1111" y="308" width="6" height="15" fill="rgb(213,184,17)"/><text x="1114.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.53%)</title><rect x="1111" y="324" width="6" height="15" fill="rgb(253,191,12)"/><text x="1114.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="1116" y="340" width="1" height="15" fill="rgb(221,52,46)"/><text x="1119.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(233,161,26)"/><text x="1120.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (151 samples, 15.93%)</title><rect x="932" y="212" width="188" height="15" fill="rgb(212,87,1)"/><text x="935.00" y="222.50">predict_proba (sklearn/t..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 2.11%)</title><rect x="1095" y="228" width="25" height="15" fill="rgb(249,28,9)"/><text x="1098.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 2.11%)</title><rect x="1095" y="244" width="25" height="15" fill="rgb(253,168,34)"/><text x="1098.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 2.11%)</title><rect x="1095" y="260" width="25" height="15" fill="rgb(215,58,25)"/><text x="1098.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (20 samples, 2.11%)</title><rect x="1095" y="276" width="25" height="15" fill="rgb(214,90,9)"/><text x="1098.00" y="286.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="1119" y="292" width="1" height="15" fill="rgb(241,51,53)"/><text x="1122.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1119" y="308" width="1" height="15" fill="rgb(253,82,28)"/><text x="1122.00" y="318.50"></text></g><g><title>0x7fb2cef58dd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1130" y="292" width="1" height="15" fill="rgb(211,124,24)"/><text x="1133.00" y="302.50"></text></g><g><title>0x7fb2cef58dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1131" y="292" width="1" height="15" fill="rgb(217,4,48)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7fb2cef58e01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1132" y="292" width="1" height="15" fill="rgb(238,178,3)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7fb2cef58e25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1133" y="292" width="2" height="15" fill="rgb(247,2,8)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7fb2cef58e4d (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1135" y="292" width="2" height="15" fill="rgb(234,159,20)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7fb2cef58e61 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1137" y="292" width="1" height="15" fill="rgb(222,58,2)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7fb2cef58e8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1138" y="292" width="2" height="15" fill="rgb(241,215,39)"/><text x="1141.00" y="302.50"></text></g><g><title>0x7fb2cef58ea2 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1140" y="292" width="2" height="15" fill="rgb(233,91,22)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7fb2cef58eca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1142" y="292" width="1" height="15" fill="rgb(206,69,6)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7fb2cef58eee (libm-2.29.so) (6 samples, 0.63%)</title><rect x="1143" y="292" width="8" height="15" fill="rgb(243,39,20)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7fb2cef58ef6 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="1151" y="292" width="4" height="15" fill="rgb(222,215,28)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fb2cef58efa (libm-2.29.so) (6 samples, 0.63%)</title><rect x="1155" y="292" width="7" height="15" fill="rgb(244,90,30)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7fb2cef58f57 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1162" y="292" width="1" height="15" fill="rgb(220,132,48)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7fb2cef58fab (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1163" y="292" width="2" height="15" fill="rgb(237,134,47)"/><text x="1166.00" y="302.50"></text></g><g><title>0x7fb2cef58fbf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1165" y="292" width="1" height="15" fill="rgb(230,68,43)"/><text x="1168.00" y="302.50"></text></g><g><title>0x7fb2cef58fd3 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(219,22,11)"/><text x="1169.00" y="302.50"></text></g><g><title>0x7fb2cef59013 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(224,108,18)"/><text x="1171.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (335 samples, 35.34%)</title><rect x="755" y="196" width="417" height="15" fill="rgb(226,102,23)"/><text x="758.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (42 samples, 4.43%)</title><rect x="1120" y="212" width="52" height="15" fill="rgb(217,20,27)"/><text x="1123.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 4.43%)</title><rect x="1120" y="228" width="52" height="15" fill="rgb(252,65,40)"/><text x="1123.00" y="238.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (42 samples, 4.43%)</title><rect x="1120" y="244" width="52" height="15" fill="rgb(212,170,54)"/><text x="1123.00" y="254.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (42 samples, 4.43%)</title><rect x="1120" y="260" width="52" height="15" fill="rgb(205,111,7)"/><text x="1123.00" y="270.50">trivi..</text></g><g><title>PyUFunc_d_d (loops.c.src) (41 samples, 4.32%)</title><rect x="1121" y="276" width="51" height="15" fill="rgb(254,16,43)"/><text x="1124.00" y="286.50">PyUFu..</text></g><g><title>log (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1170" y="292" width="2" height="15" fill="rgb(239,222,44)"/><text x="1173.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (337 samples, 35.55%)</title><rect x="754" y="180" width="419" height="15" fill="rgb(241,117,26)"/><text x="757.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1172" y="196" width="1" height="15" fill="rgb(238,92,4)"/><text x="1175.00" y="206.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="1172" y="212" width="1" height="15" fill="rgb(253,59,21)"/><text x="1175.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1172" y="228" width="1" height="15" fill="rgb(231,139,27)"/><text x="1175.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1175" y="228" width="1" height="15" fill="rgb(245,106,27)"/><text x="1178.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1176" y="244" width="1" height="15" fill="rgb(254,171,44)"/><text x="1179.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1176" y="260" width="1" height="15" fill="rgb(209,186,32)"/><text x="1179.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1176" y="276" width="1" height="15" fill="rgb(223,174,30)"/><text x="1179.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1176" y="292" width="1" height="15" fill="rgb(240,61,40)"/><text x="1179.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="1176" y="308" width="1" height="15" fill="rgb(237,164,35)"/><text x="1179.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1176" y="324" width="1" height="15" fill="rgb(237,19,27)"/><text x="1179.00" y="334.50"></text></g><g><title>0x7fb2ced881a3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1176" y="340" width="1" height="15" fill="rgb(248,82,37)"/><text x="1179.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (4 samples, 0.42%)</title><rect x="1177" y="308" width="5" height="15" fill="rgb(247,186,6)"/><text x="1180.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.74%)</title><rect x="1176" y="228" width="9" height="15" fill="rgb(213,44,18)"/><text x="1179.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (6 samples, 0.63%)</title><rect x="1177" y="244" width="8" height="15" fill="rgb(213,68,40)"/><text x="1180.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (6 samples, 0.63%)</title><rect x="1177" y="260" width="8" height="15" fill="rgb(248,114,10)"/><text x="1180.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (6 samples, 0.63%)</title><rect x="1177" y="276" width="8" height="15" fill="rgb(240,156,29)"/><text x="1180.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (6 samples, 0.63%)</title><rect x="1177" y="292" width="8" height="15" fill="rgb(209,58,39)"/><text x="1180.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.21%)</title><rect x="1182" y="308" width="3" height="15" fill="rgb(240,126,21)"/><text x="1185.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (356 samples, 37.55%)</title><rect x="743" y="100" width="443" height="15" fill="rgb(207,161,33)"/><text x="746.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (356 samples, 37.55%)</title><rect x="743" y="116" width="443" height="15" fill="rgb(232,124,30)"/><text x="746.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (356 samples, 37.55%)</title><rect x="743" y="132" width="443" height="15" fill="rgb(213,214,3)"/><text x="746.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (356 samples, 37.55%)</title><rect x="743" y="148" width="443" height="15" fill="rgb(207,81,50)"/><text x="746.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (347 samples, 36.60%)</title><rect x="754" y="164" width="432" height="15" fill="rgb(210,227,32)"/><text x="757.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_add (number.c) (10 samples, 1.05%)</title><rect x="1173" y="180" width="13" height="15" fill="rgb(234,82,13)"/><text x="1176.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 0.95%)</title><rect x="1175" y="196" width="11" height="15" fill="rgb(213,32,10)"/><text x="1178.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 0.95%)</title><rect x="1175" y="212" width="11" height="15" fill="rgb(225,45,11)"/><text x="1178.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1185" y="228" width="1" height="15" fill="rgb(249,186,48)"/><text x="1188.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.11%)</title><rect x="1185" y="244" width="1" height="15" fill="rgb(243,73,49)"/><text x="1188.00" y="254.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (357 samples, 37.66%)</title><rect x="743" y="68" width="444" height="15" fill="rgb(226,228,7)"/><text x="746.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_4_12..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (357 samples, 37.66%)</title><rect x="743" y="84" width="444" height="15" fill="rgb(254,15,46)"/><text x="746.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1186" y="100" width="1" height="15" fill="rgb(239,91,54)"/><text x="1189.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1186" y="116" width="1" height="15" fill="rgb(228,151,32)"/><text x="1189.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1186" y="132" width="1" height="15" fill="rgb(234,19,51)"/><text x="1189.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="1186" y="148" width="1" height="15" fill="rgb(212,125,46)"/><text x="1189.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="1186" y="164" width="1" height="15" fill="rgb(234,31,2)"/><text x="1189.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="1186" y="180" width="1" height="15" fill="rgb(207,133,6)"/><text x="1189.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="1186" y="196" width="1" height="15" fill="rgb(244,178,9)"/><text x="1189.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(231,51,4)"/><text x="1189.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="1186" y="228" width="1" height="15" fill="rgb(228,21,54)"/><text x="1189.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(206,229,52)"/><text x="1189.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="260" width="1" height="15" fill="rgb(215,57,49)"/><text x="1189.00" y="270.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(221,58,30)"/><text x="1189.00" y="286.50"></text></g><g><title>google::protobuf::python::cmessage::InternalGetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="292" width="1" height="15" fill="rgb(216,114,38)"/><text x="1189.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::GetStringReference (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="308" width="1" height="15" fill="rgb(232,131,2)"/><text x="1189.00" y="318.50"></text></g><g><title>_pickle_dump (_pickle.c.h) (1 samples, 0.11%)</title><rect x="1187" y="116" width="1" height="15" fill="rgb(216,83,16)"/><text x="1190.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="132" width="1" height="15" fill="rgb(236,162,0)"/><text x="1190.00" y="142.50"></text></g><g><title>dump (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="148" width="1" height="15" fill="rgb(232,136,1)"/><text x="1190.00" y="158.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="164" width="1" height="15" fill="rgb(247,151,18)"/><text x="1190.00" y="174.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="180" width="1" height="15" fill="rgb(220,146,53)"/><text x="1190.00" y="190.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="196" width="1" height="15" fill="rgb(245,4,47)"/><text x="1190.00" y="206.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(214,154,11)"/><text x="1190.00" y="222.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(238,44,14)"/><text x="1190.00" y="238.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(216,25,53)"/><text x="1190.00" y="254.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(210,217,7)"/><text x="1190.00" y="270.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(215,48,15)"/><text x="1190.00" y="286.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(254,154,12)"/><text x="1190.00" y="302.50"></text></g><g><title>save_list (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(218,72,45)"/><text x="1190.00" y="318.50"></text></g><g><title>batch_list_exact (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="324" width="1" height="15" fill="rgb(246,208,48)"/><text x="1190.00" y="334.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="340" width="1" height="15" fill="rgb(206,6,3)"/><text x="1190.00" y="350.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="356" width="1" height="15" fill="rgb(246,48,26)"/><text x="1190.00" y="366.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="372" width="1" height="15" fill="rgb(231,162,1)"/><text x="1190.00" y="382.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="388" width="1" height="15" fill="rgb(216,40,13)"/><text x="1190.00" y="398.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="404" width="1" height="15" fill="rgb(253,223,3)"/><text x="1190.00" y="414.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="420" width="1" height="15" fill="rgb(241,95,42)"/><text x="1190.00" y="430.50"></text></g><g><title>_Pickle_FastCall (_pickle.c) (1 samples, 0.11%)</title><rect x="1187" y="436" width="1" height="15" fill="rgb(208,106,30)"/><text x="1190.00" y="446.50"></text></g><g><title>gentype_reduce (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="1187" y="452" width="1" height="15" fill="rgb(245,82,25)"/><text x="1190.00" y="462.50"></text></g><g><title>gentype_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="1187" y="468" width="1" height="15" fill="rgb(224,28,26)"/><text x="1190.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.11%)</title><rect x="1187" y="484" width="1" height="15" fill="rgb(232,40,4)"/><text x="1190.00" y="494.50"></text></g><g><title>all (948 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,90,16)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (948 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(252,187,38)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py) (2 samples, 0.21%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(247,153,46)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (2 samples, 0.21%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(220,33,20)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(231,158,8)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(241,178,41)"/><text x="1191.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(230,125,24)"/><text x="1191.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(215,27,46)"/><text x="1191.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(213,184,12)"/><text x="1191.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(251,159,9)"/><text x="1191.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(251,9,4)"/><text x="1191.00" y="206.50"></text></g><g><title>0x7fb2a87beb11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(222,174,17)"/><text x="1191.00" y="222.50"></text></g><g><title>0x7fb2a87f010a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(251,72,46)"/><text x="1191.00" y="238.50"></text></g><g><title>0x7fb2a8a1bd8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(253,10,21)"/><text x="1191.00" y="254.50"></text></g><g><title>0x7fb2a8a14d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(252,82,5)"/><text x="1191.00" y="270.50"></text></g><g><title>0x7fb2a8a14d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(227,226,36)"/><text x="1191.00" y="286.50"></text></g><g><title>0x7fb2a8a14d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(249,94,54)"/><text x="1191.00" y="302.50"></text></g><g><title>0x7fb2a8a14d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(213,147,25)"/><text x="1191.00" y="318.50"></text></g><g><title>0x7fb2a8a14d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(244,31,17)"/><text x="1191.00" y="334.50"></text></g><g><title>0x7fb2a8a14c96 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(253,134,10)"/><text x="1191.00" y="350.50"></text></g></g></svg>