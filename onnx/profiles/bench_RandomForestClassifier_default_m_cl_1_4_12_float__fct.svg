<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(206,34,8)"/><text x="13.00" y="254.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(241,84,33)"/><text x="13.00" y="270.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(254,26,0)"/><text x="13.00" y="286.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(205,5,8)"/><text x="13.00" y="302.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(241,184,48)"/><text x="13.00" y="318.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.29%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(211,184,15)"/><text x="13.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(228,205,35)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(252,120,4)"/><text x="16.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(236,170,13)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(208,152,44)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(228,12,18)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(244,225,35)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(223,68,23)"/><text x="16.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(229,150,40)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(234,147,29)"/><text x="16.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(230,12,51)"/><text x="16.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(235,140,48)"/><text x="16.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.29%)</title><rect x="13" y="1044" width="3" height="15" fill="rgb(240,70,7)"/><text x="16.00" y="1054.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(248,81,30)"/><text x="23.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(241,58,38)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(231,143,52)"/><text x="23.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.17%)</title><rect x="13" y="292" width="14" height="15" fill="rgb(229,93,25)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="308" width="14" height="15" fill="rgb(248,21,43)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="324" width="14" height="15" fill="rgb(250,45,24)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="340" width="14" height="15" fill="rgb(243,95,34)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="13" y="356" width="14" height="15" fill="rgb(232,66,7)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="372" width="14" height="15" fill="rgb(217,100,51)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.17%)</title><rect x="13" y="388" width="14" height="15" fill="rgb(222,32,4)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="404" width="14" height="15" fill="rgb(212,181,53)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="420" width="14" height="15" fill="rgb(211,166,43)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="436" width="14" height="15" fill="rgb(207,8,35)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="13" y="452" width="14" height="15" fill="rgb(245,112,35)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="468" width="14" height="15" fill="rgb(239,137,3)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.17%)</title><rect x="13" y="484" width="14" height="15" fill="rgb(254,228,17)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="500" width="14" height="15" fill="rgb(227,222,4)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="516" width="14" height="15" fill="rgb(230,58,18)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="532" width="14" height="15" fill="rgb(206,170,30)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="13" y="548" width="14" height="15" fill="rgb(233,225,29)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="564" width="14" height="15" fill="rgb(211,3,14)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.17%)</title><rect x="13" y="580" width="14" height="15" fill="rgb(212,152,33)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="596" width="14" height="15" fill="rgb(247,39,24)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="612" width="14" height="15" fill="rgb(248,5,29)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="628" width="14" height="15" fill="rgb(205,46,32)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="644" width="14" height="15" fill="rgb(254,174,4)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="660" width="14" height="15" fill="rgb(231,150,30)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="676" width="14" height="15" fill="rgb(213,71,9)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="13" y="692" width="14" height="15" fill="rgb(215,146,13)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="708" width="14" height="15" fill="rgb(254,20,48)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.17%)</title><rect x="13" y="724" width="14" height="15" fill="rgb(254,29,1)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="740" width="14" height="15" fill="rgb(232,59,11)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="756" width="14" height="15" fill="rgb(220,184,42)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="772" width="14" height="15" fill="rgb(205,169,36)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="13" y="788" width="14" height="15" fill="rgb(220,142,30)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="13" y="804" width="14" height="15" fill="rgb(209,63,45)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.17%)</title><rect x="13" y="820" width="14" height="15" fill="rgb(233,192,46)"/><text x="16.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.17%)</title><rect x="13" y="836" width="14" height="15" fill="rgb(224,104,51)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.17%)</title><rect x="13" y="852" width="14" height="15" fill="rgb(241,141,52)"/><text x="16.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.87%)</title><rect x="16" y="868" width="11" height="15" fill="rgb(247,25,47)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.87%)</title><rect x="16" y="884" width="11" height="15" fill="rgb(208,205,12)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.87%)</title><rect x="16" y="900" width="11" height="15" fill="rgb(222,227,37)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.58%)</title><rect x="20" y="916" width="7" height="15" fill="rgb(223,180,8)"/><text x="23.00" y="926.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(245,62,46)"/><text x="26.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.29%)</title><rect x="23" y="948" width="4" height="15" fill="rgb(254,154,47)"/><text x="26.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="23" y="964" width="4" height="15" fill="rgb(229,115,22)"/><text x="26.00" y="974.50"></text></g><g><title>0x7efc07a17237 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="23" y="980" width="4" height="15" fill="rgb(252,158,34)"/><text x="26.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="500" width="3" height="15" fill="rgb(248,191,50)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="516" width="3" height="15" fill="rgb(219,14,31)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="532" width="3" height="15" fill="rgb(253,83,51)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="27" y="548" width="3" height="15" fill="rgb(252,2,42)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="564" width="3" height="15" fill="rgb(240,13,32)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.29%)</title><rect x="27" y="580" width="3" height="15" fill="rgb(252,3,46)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="596" width="3" height="15" fill="rgb(241,203,1)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="612" width="3" height="15" fill="rgb(238,171,47)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="628" width="3" height="15" fill="rgb(239,39,21)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="27" y="644" width="3" height="15" fill="rgb(254,196,38)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="660" width="3" height="15" fill="rgb(242,182,25)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/base.py) (1 samples, 0.29%)</title><rect x="27" y="676" width="3" height="15" fill="rgb(248,3,27)"/><text x="30.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.04%)</title><rect x="10" y="196" width="24" height="15" fill="rgb(236,185,32)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.04%)</title><rect x="10" y="212" width="24" height="15" fill="rgb(215,179,31)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.04%)</title><rect x="10" y="228" width="24" height="15" fill="rgb(252,96,49)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="13" y="244" width="21" height="15" fill="rgb(249,98,6)"/><text x="16.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="13" y="260" width="21" height="15" fill="rgb(227,229,33)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="13" y="276" width="21" height="15" fill="rgb(216,6,34)"/><text x="16.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.58%)</title><rect x="27" y="292" width="7" height="15" fill="rgb(239,59,2)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="308" width="7" height="15" fill="rgb(253,179,52)"/><text x="30.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="324" width="7" height="15" fill="rgb(219,111,31)"/><text x="30.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="340" width="7" height="15" fill="rgb(234,10,23)"/><text x="30.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="27" y="356" width="7" height="15" fill="rgb(237,97,12)"/><text x="30.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="372" width="7" height="15" fill="rgb(252,41,26)"/><text x="30.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.58%)</title><rect x="27" y="388" width="7" height="15" fill="rgb(230,129,10)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="404" width="7" height="15" fill="rgb(239,179,13)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="420" width="7" height="15" fill="rgb(254,201,35)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="436" width="7" height="15" fill="rgb(245,139,37)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="27" y="452" width="7" height="15" fill="rgb(248,102,54)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="27" y="468" width="7" height="15" fill="rgb(216,8,9)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.58%)</title><rect x="27" y="484" width="7" height="15" fill="rgb(228,61,41)"/><text x="30.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="500" width="4" height="15" fill="rgb(208,64,45)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="516" width="4" height="15" fill="rgb(224,206,18)"/><text x="33.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="532" width="4" height="15" fill="rgb(247,71,19)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="548" width="4" height="15" fill="rgb(222,204,33)"/><text x="33.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="564" width="4" height="15" fill="rgb(250,43,38)"/><text x="33.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="580" width="4" height="15" fill="rgb(234,171,21)"/><text x="33.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="596" width="4" height="15" fill="rgb(222,66,17)"/><text x="33.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.29%)</title><rect x="30" y="612" width="4" height="15" fill="rgb(243,135,0)"/><text x="33.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="628" width="4" height="15" fill="rgb(205,98,47)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="644" width="4" height="15" fill="rgb(212,51,28)"/><text x="33.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="660" width="4" height="15" fill="rgb(254,147,47)"/><text x="33.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="676" width="4" height="15" fill="rgb(254,71,47)"/><text x="33.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="692" width="4" height="15" fill="rgb(205,68,13)"/><text x="33.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.29%)</title><rect x="30" y="708" width="4" height="15" fill="rgb(213,221,44)"/><text x="33.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="724" width="4" height="15" fill="rgb(247,55,39)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="740" width="4" height="15" fill="rgb(221,81,30)"/><text x="33.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="756" width="4" height="15" fill="rgb(247,99,45)"/><text x="33.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="772" width="4" height="15" fill="rgb(214,22,7)"/><text x="33.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="788" width="4" height="15" fill="rgb(246,183,47)"/><text x="33.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.29%)</title><rect x="30" y="804" width="4" height="15" fill="rgb(254,193,41)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="820" width="4" height="15" fill="rgb(246,206,21)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="836" width="4" height="15" fill="rgb(206,57,33)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="852" width="4" height="15" fill="rgb(231,53,0)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="868" width="4" height="15" fill="rgb(216,19,42)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="884" width="4" height="15" fill="rgb(237,72,36)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.29%)</title><rect x="30" y="900" width="4" height="15" fill="rgb(222,117,49)"/><text x="33.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="916" width="4" height="15" fill="rgb(248,201,46)"/><text x="33.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="932" width="4" height="15" fill="rgb(228,34,39)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="948" width="4" height="15" fill="rgb(225,222,2)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="964" width="4" height="15" fill="rgb(229,0,12)"/><text x="33.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="980" width="4" height="15" fill="rgb(233,45,10)"/><text x="33.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="996" width="4" height="15" fill="rgb(218,128,52)"/><text x="33.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1012" width="4" height="15" fill="rgb(249,18,47)"/><text x="33.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.29%)</title><rect x="30" y="1028" width="4" height="15" fill="rgb(212,219,41)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1044" width="4" height="15" fill="rgb(212,143,50)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1060" width="4" height="15" fill="rgb(248,66,27)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1076" width="4" height="15" fill="rgb(212,207,11)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1092" width="4" height="15" fill="rgb(248,209,27)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1108" width="4" height="15" fill="rgb(243,129,52)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.29%)</title><rect x="30" y="1124" width="4" height="15" fill="rgb(237,34,17)"/><text x="33.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="484" width="3" height="15" fill="rgb(249,154,21)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="500" width="3" height="15" fill="rgb(207,45,40)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="516" width="3" height="15" fill="rgb(210,132,42)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="532" width="3" height="15" fill="rgb(254,209,28)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="548" width="3" height="15" fill="rgb(232,133,24)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="564" width="3" height="15" fill="rgb(223,40,54)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="580" width="3" height="15" fill="rgb(219,165,4)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="596" width="3" height="15" fill="rgb(214,125,10)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="612" width="3" height="15" fill="rgb(243,24,15)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="628" width="3" height="15" fill="rgb(246,80,25)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="644" width="3" height="15" fill="rgb(211,35,7)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="660" width="3" height="15" fill="rgb(245,30,17)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.29%)</title><rect x="34" y="676" width="3" height="15" fill="rgb(228,88,43)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="692" width="3" height="15" fill="rgb(236,66,9)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="708" width="3" height="15" fill="rgb(236,67,49)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="724" width="3" height="15" fill="rgb(216,123,34)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="740" width="3" height="15" fill="rgb(222,93,8)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="756" width="3" height="15" fill="rgb(237,87,26)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="772" width="3" height="15" fill="rgb(223,129,46)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="788" width="3" height="15" fill="rgb(247,30,21)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="804" width="3" height="15" fill="rgb(223,122,25)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="820" width="3" height="15" fill="rgb(248,82,6)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="836" width="3" height="15" fill="rgb(251,45,10)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="852" width="3" height="15" fill="rgb(234,82,8)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.29%)</title><rect x="34" y="868" width="3" height="15" fill="rgb(253,134,53)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="884" width="3" height="15" fill="rgb(213,143,20)"/><text x="37.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="900" width="3" height="15" fill="rgb(250,227,13)"/><text x="37.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="916" width="3" height="15" fill="rgb(216,119,52)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="932" width="3" height="15" fill="rgb(216,64,46)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="948" width="3" height="15" fill="rgb(232,60,34)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="964" width="3" height="15" fill="rgb(246,79,16)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="980" width="3" height="15" fill="rgb(238,170,32)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="996" width="3" height="15" fill="rgb(234,106,26)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="1012" width="3" height="15" fill="rgb(217,3,30)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1028" width="3" height="15" fill="rgb(240,144,13)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1044" width="3" height="15" fill="rgb(234,184,38)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(209,116,4)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(243,149,11)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(217,90,43)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.29%)</title><rect x="34" y="1108" width="3" height="15" fill="rgb(232,221,14)"/><text x="37.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1124" width="3" height="15" fill="rgb(245,74,53)"/><text x="37.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1140" width="3" height="15" fill="rgb(241,131,40)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1156" width="3" height="15" fill="rgb(241,105,4)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1172" width="3" height="15" fill="rgb(245,173,53)"/><text x="37.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1188" width="3" height="15" fill="rgb(235,191,4)"/><text x="37.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="1204" width="3" height="15" fill="rgb(239,59,22)"/><text x="37.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1220" width="3" height="15" fill="rgb(218,91,25)"/><text x="37.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="1236" width="3" height="15" fill="rgb(249,173,41)"/><text x="37.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1252" width="3" height="15" fill="rgb(240,196,18)"/><text x="37.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1268" width="3" height="15" fill="rgb(215,116,22)"/><text x="37.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1284" width="3" height="15" fill="rgb(216,182,4)"/><text x="37.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1300" width="3" height="15" fill="rgb(246,128,41)"/><text x="37.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1316" width="3" height="15" fill="rgb(227,61,7)"/><text x="37.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="1332" width="3" height="15" fill="rgb(251,66,5)"/><text x="37.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1348" width="3" height="15" fill="rgb(228,205,10)"/><text x="37.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.29%)</title><rect x="34" y="1364" width="3" height="15" fill="rgb(213,218,3)"/><text x="37.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1380" width="3" height="15" fill="rgb(233,82,30)"/><text x="37.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1396" width="3" height="15" fill="rgb(239,178,28)"/><text x="37.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1412" width="3" height="15" fill="rgb(212,120,40)"/><text x="37.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="1428" width="3" height="15" fill="rgb(243,109,36)"/><text x="37.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1444" width="3" height="15" fill="rgb(232,146,52)"/><text x="37.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.29%)</title><rect x="34" y="1460" width="3" height="15" fill="rgb(243,166,43)"/><text x="37.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1476" width="3" height="15" fill="rgb(246,189,14)"/><text x="37.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1492" width="3" height="15" fill="rgb(225,170,18)"/><text x="37.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1508" width="3" height="15" fill="rgb(209,220,9)"/><text x="37.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="1524" width="3" height="15" fill="rgb(243,42,0)"/><text x="37.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="1540" width="3" height="15" fill="rgb(206,42,6)"/><text x="37.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="34" y="1556" width="3" height="15" fill="rgb(245,7,15)"/><text x="37.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="34" y="1572" width="3" height="15" fill="rgb(248,126,54)"/><text x="37.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="34" y="1588" width="3" height="15" fill="rgb(239,206,39)"/><text x="37.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="34" y="1604" width="3" height="15" fill="rgb(253,51,49)"/><text x="37.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="34" y="1620" width="3" height="15" fill="rgb(247,214,29)"/><text x="37.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="34" y="1636" width="3" height="15" fill="rgb(231,171,24)"/><text x="37.00" y="1646.50"></text></g><g><title>__init__ (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="34" y="1652" width="3" height="15" fill="rgb(224,207,12)"/><text x="37.00" y="1662.50"></text></g><g><title>_tokenize (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="34" y="1668" width="3" height="15" fill="rgb(239,197,38)"/><text x="37.00" y="1678.50"></text></g><g><title>get_lexer (jinja2/lexer.py) (1 samples, 0.29%)</title><rect x="34" y="1684" width="3" height="15" fill="rgb(251,32,38)"/><text x="37.00" y="1694.50"></text></g><g><title>__init__ (jinja2/lexer.py) (1 samples, 0.29%)</title><rect x="34" y="1700" width="3" height="15" fill="rgb(207,162,13)"/><text x="37.00" y="1710.50"></text></g><g><title>&lt;lambda&gt; (jinja2/lexer.py) (1 samples, 0.29%)</title><rect x="34" y="1716" width="3" height="15" fill="rgb(227,209,50)"/><text x="37.00" y="1726.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="34" y="1732" width="3" height="15" fill="rgb(205,170,49)"/><text x="37.00" y="1742.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="34" y="1748" width="3" height="15" fill="rgb(254,147,16)"/><text x="37.00" y="1758.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="34" y="1764" width="3" height="15" fill="rgb(250,38,35)"/><text x="37.00" y="1774.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.29%)</title><rect x="37" y="724" width="3" height="15" fill="rgb(247,170,28)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="740" width="3" height="15" fill="rgb(234,11,17)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="756" width="3" height="15" fill="rgb(211,142,54)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="772" width="3" height="15" fill="rgb(245,176,18)"/><text x="40.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="788" width="3" height="15" fill="rgb(214,12,16)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="804" width="3" height="15" fill="rgb(241,19,15)"/><text x="40.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.29%)</title><rect x="37" y="820" width="3" height="15" fill="rgb(220,25,39)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="836" width="3" height="15" fill="rgb(210,178,17)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="852" width="3" height="15" fill="rgb(234,144,6)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="868" width="3" height="15" fill="rgb(212,31,26)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="884" width="3" height="15" fill="rgb(214,54,54)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="900" width="3" height="15" fill="rgb(252,32,32)"/><text x="40.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.29%)</title><rect x="37" y="916" width="3" height="15" fill="rgb(222,57,27)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="932" width="3" height="15" fill="rgb(246,222,50)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="948" width="3" height="15" fill="rgb(253,183,24)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="964" width="3" height="15" fill="rgb(243,189,37)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="980" width="3" height="15" fill="rgb(235,194,39)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="996" width="3" height="15" fill="rgb(248,161,5)"/><text x="40.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.29%)</title><rect x="37" y="1012" width="3" height="15" fill="rgb(228,229,25)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1028" width="3" height="15" fill="rgb(246,59,30)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1044" width="3" height="15" fill="rgb(233,6,39)"/><text x="40.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1060" width="3" height="15" fill="rgb(230,186,42)"/><text x="40.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1076" width="3" height="15" fill="rgb(206,48,1)"/><text x="40.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1092" width="3" height="15" fill="rgb(210,49,7)"/><text x="40.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.29%)</title><rect x="37" y="1108" width="3" height="15" fill="rgb(216,145,3)"/><text x="40.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1124" width="3" height="15" fill="rgb(214,23,16)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1140" width="3" height="15" fill="rgb(208,121,39)"/><text x="40.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1156" width="3" height="15" fill="rgb(238,99,46)"/><text x="40.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1172" width="3" height="15" fill="rgb(252,204,10)"/><text x="40.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1188" width="3" height="15" fill="rgb(218,69,39)"/><text x="40.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.29%)</title><rect x="37" y="1204" width="3" height="15" fill="rgb(229,63,7)"/><text x="40.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1220" width="3" height="15" fill="rgb(235,88,2)"/><text x="40.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1236" width="3" height="15" fill="rgb(234,148,41)"/><text x="40.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1252" width="3" height="15" fill="rgb(207,216,54)"/><text x="40.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1268" width="3" height="15" fill="rgb(238,92,14)"/><text x="40.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1284" width="3" height="15" fill="rgb(225,185,43)"/><text x="40.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.29%)</title><rect x="37" y="1300" width="3" height="15" fill="rgb(209,146,6)"/><text x="40.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1316" width="3" height="15" fill="rgb(224,4,14)"/><text x="40.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1332" width="3" height="15" fill="rgb(222,147,21)"/><text x="40.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1348" width="3" height="15" fill="rgb(229,185,50)"/><text x="40.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1364" width="3" height="15" fill="rgb(251,45,11)"/><text x="40.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1380" width="3" height="15" fill="rgb(248,209,46)"/><text x="40.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.29%)</title><rect x="37" y="1396" width="3" height="15" fill="rgb(235,8,3)"/><text x="40.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1412" width="3" height="15" fill="rgb(214,143,41)"/><text x="40.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1428" width="3" height="15" fill="rgb(210,179,42)"/><text x="40.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1444" width="3" height="15" fill="rgb(248,162,48)"/><text x="40.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1460" width="3" height="15" fill="rgb(249,113,10)"/><text x="40.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1476" width="3" height="15" fill="rgb(243,66,35)"/><text x="40.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.29%)</title><rect x="37" y="1492" width="3" height="15" fill="rgb(218,71,6)"/><text x="40.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1508" width="3" height="15" fill="rgb(245,40,9)"/><text x="40.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1524" width="3" height="15" fill="rgb(241,132,49)"/><text x="40.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1540" width="3" height="15" fill="rgb(230,110,33)"/><text x="40.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1556" width="3" height="15" fill="rgb(229,29,43)"/><text x="40.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1572" width="3" height="15" fill="rgb(207,146,11)"/><text x="40.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.29%)</title><rect x="37" y="1588" width="3" height="15" fill="rgb(231,19,10)"/><text x="40.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1604" width="3" height="15" fill="rgb(224,173,1)"/><text x="40.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1620" width="3" height="15" fill="rgb(254,60,22)"/><text x="40.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1636" width="3" height="15" fill="rgb(238,220,40)"/><text x="40.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1652" width="3" height="15" fill="rgb(233,187,54)"/><text x="40.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1668" width="3" height="15" fill="rgb(225,192,6)"/><text x="40.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.29%)</title><rect x="37" y="1684" width="3" height="15" fill="rgb(234,214,41)"/><text x="40.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1700" width="3" height="15" fill="rgb(238,121,31)"/><text x="40.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1716" width="3" height="15" fill="rgb(220,42,19)"/><text x="40.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1732" width="3" height="15" fill="rgb(248,23,37)"/><text x="40.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1748" width="3" height="15" fill="rgb(213,216,31)"/><text x="40.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1764" width="3" height="15" fill="rgb(248,105,4)"/><text x="40.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.29%)</title><rect x="37" y="1780" width="3" height="15" fill="rgb(206,190,46)"/><text x="40.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1796" width="3" height="15" fill="rgb(223,23,39)"/><text x="40.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1812" width="3" height="15" fill="rgb(238,149,17)"/><text x="40.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1828" width="3" height="15" fill="rgb(217,135,21)"/><text x="40.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1844" width="3" height="15" fill="rgb(239,146,24)"/><text x="40.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1860" width="3" height="15" fill="rgb(245,67,52)"/><text x="40.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.29%)</title><rect x="37" y="1876" width="3" height="15" fill="rgb(207,206,46)"/><text x="40.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1892" width="3" height="15" fill="rgb(214,175,48)"/><text x="40.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1908" width="3" height="15" fill="rgb(249,155,19)"/><text x="40.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1924" width="3" height="15" fill="rgb(213,137,34)"/><text x="40.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1940" width="3" height="15" fill="rgb(223,203,10)"/><text x="40.00" y="1950.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1956" width="3" height="15" fill="rgb(228,159,12)"/><text x="40.00" y="1966.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1972" width="3" height="15" fill="rgb(252,190,8)"/><text x="40.00" y="1982.50"></text></g><g><title>0x7efc07ab5134 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="37" y="1988" width="3" height="15" fill="rgb(210,136,30)"/><text x="40.00" y="1998.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.87%)</title><rect x="34" y="340" width="10" height="15" fill="rgb(234,226,37)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="34" y="356" width="10" height="15" fill="rgb(229,200,14)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="34" y="372" width="10" height="15" fill="rgb(252,28,35)"/><text x="37.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="34" y="388" width="10" height="15" fill="rgb(252,89,11)"/><text x="37.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="34" y="404" width="10" height="15" fill="rgb(249,104,50)"/><text x="37.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="34" y="420" width="10" height="15" fill="rgb(214,164,49)"/><text x="37.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.87%)</title><rect x="34" y="436" width="10" height="15" fill="rgb(221,175,28)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="34" y="452" width="10" height="15" fill="rgb(224,220,28)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="34" y="468" width="10" height="15" fill="rgb(216,137,9)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="484" width="7" height="15" fill="rgb(246,56,53)"/><text x="40.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="37" y="500" width="7" height="15" fill="rgb(210,84,36)"/><text x="40.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="516" width="7" height="15" fill="rgb(207,21,10)"/><text x="40.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.58%)</title><rect x="37" y="532" width="7" height="15" fill="rgb(228,78,4)"/><text x="40.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="548" width="7" height="15" fill="rgb(239,177,36)"/><text x="40.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="564" width="7" height="15" fill="rgb(254,39,32)"/><text x="40.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="580" width="7" height="15" fill="rgb(254,104,19)"/><text x="40.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="37" y="596" width="7" height="15" fill="rgb(240,185,19)"/><text x="40.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="612" width="7" height="15" fill="rgb(219,26,43)"/><text x="40.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.58%)</title><rect x="37" y="628" width="7" height="15" fill="rgb(247,16,17)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="644" width="7" height="15" fill="rgb(231,223,11)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="660" width="7" height="15" fill="rgb(210,178,41)"/><text x="40.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="676" width="7" height="15" fill="rgb(222,200,12)"/><text x="40.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="37" y="692" width="7" height="15" fill="rgb(236,172,33)"/><text x="40.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="708" width="7" height="15" fill="rgb(231,225,2)"/><text x="40.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.29%)</title><rect x="40" y="724" width="4" height="15" fill="rgb(222,72,10)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="40" y="740" width="4" height="15" fill="rgb(218,115,12)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="40" y="756" width="4" height="15" fill="rgb(243,175,37)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="40" y="772" width="4" height="15" fill="rgb(214,110,34)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="40" y="788" width="4" height="15" fill="rgb(207,6,36)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="40" y="804" width="4" height="15" fill="rgb(229,124,43)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/spss.py) (1 samples, 0.29%)</title><rect x="40" y="820" width="4" height="15" fill="rgb(236,63,19)"/><text x="43.00" y="830.50"></text></g><g><title>inner (typing.py) (1 samples, 0.29%)</title><rect x="40" y="836" width="4" height="15" fill="rgb(235,42,19)"/><text x="43.00" y="846.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.29%)</title><rect x="40" y="852" width="4" height="15" fill="rgb(219,159,20)"/><text x="43.00" y="862.50"></text></g><g><title>_subs_tvars (typing.py) (1 samples, 0.29%)</title><rect x="40" y="868" width="4" height="15" fill="rgb(241,9,16)"/><text x="43.00" y="878.50"></text></g><g><title>copy_with (typing.py) (1 samples, 0.29%)</title><rect x="40" y="884" width="4" height="15" fill="rgb(235,136,15)"/><text x="43.00" y="894.50"></text></g><g><title>__init__ (typing.py) (1 samples, 0.29%)</title><rect x="40" y="900" width="4" height="15" fill="rgb(242,68,16)"/><text x="43.00" y="910.50"></text></g><g><title>__setattr__ (typing.py) (1 samples, 0.29%)</title><rect x="40" y="916" width="4" height="15" fill="rgb(205,150,44)"/><text x="43.00" y="926.50"></text></g><g><title>_is_dunder (typing.py) (1 samples, 0.29%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(212,72,0)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="788" width="3" height="15" fill="rgb(224,221,0)"/><text x="47.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="804" width="3" height="15" fill="rgb(216,180,21)"/><text x="47.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="820" width="3" height="15" fill="rgb(218,20,46)"/><text x="47.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="836" width="3" height="15" fill="rgb(216,220,47)"/><text x="47.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="852" width="3" height="15" fill="rgb(215,185,15)"/><text x="47.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.29%)</title><rect x="44" y="868" width="3" height="15" fill="rgb(246,204,26)"/><text x="47.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="884" width="3" height="15" fill="rgb(220,208,15)"/><text x="47.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="900" width="3" height="15" fill="rgb(245,169,10)"/><text x="47.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="916" width="3" height="15" fill="rgb(226,216,1)"/><text x="47.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="932" width="3" height="15" fill="rgb(213,59,35)"/><text x="47.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="948" width="3" height="15" fill="rgb(222,75,18)"/><text x="47.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.29%)</title><rect x="44" y="964" width="3" height="15" fill="rgb(210,180,1)"/><text x="47.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="980" width="3" height="15" fill="rgb(224,0,7)"/><text x="47.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="996" width="3" height="15" fill="rgb(237,33,54)"/><text x="47.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="1012" width="3" height="15" fill="rgb(248,92,34)"/><text x="47.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="1028" width="3" height="15" fill="rgb(228,36,17)"/><text x="47.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="1044" width="3" height="15" fill="rgb(252,183,15)"/><text x="47.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="1060" width="3" height="15" fill="rgb(239,35,53)"/><text x="47.00" y="1070.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.29%)</title><rect x="47" y="900" width="4" height="15" fill="rgb(250,123,17)"/><text x="50.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="916" width="4" height="15" fill="rgb(252,212,38)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="932" width="4" height="15" fill="rgb(220,179,10)"/><text x="50.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="948" width="4" height="15" fill="rgb(254,227,34)"/><text x="50.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="964" width="4" height="15" fill="rgb(215,9,41)"/><text x="50.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="980" width="4" height="15" fill="rgb(208,180,1)"/><text x="50.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.29%)</title><rect x="47" y="996" width="4" height="15" fill="rgb(214,89,10)"/><text x="50.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1012" width="4" height="15" fill="rgb(234,113,45)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1028" width="4" height="15" fill="rgb(253,136,16)"/><text x="50.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1044" width="4" height="15" fill="rgb(234,61,15)"/><text x="50.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1060" width="4" height="15" fill="rgb(213,84,12)"/><text x="50.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1076" width="4" height="15" fill="rgb(228,188,12)"/><text x="50.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.29%)</title><rect x="47" y="1092" width="4" height="15" fill="rgb(209,167,34)"/><text x="50.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1108" width="4" height="15" fill="rgb(235,46,13)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1124" width="4" height="15" fill="rgb(228,152,47)"/><text x="50.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1140" width="4" height="15" fill="rgb(214,18,45)"/><text x="50.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1156" width="4" height="15" fill="rgb(254,159,38)"/><text x="50.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1172" width="4" height="15" fill="rgb(214,56,19)"/><text x="50.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py) (1 samples, 0.29%)</title><rect x="47" y="1188" width="4" height="15" fill="rgb(226,10,26)"/><text x="50.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1204" width="4" height="15" fill="rgb(252,164,34)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1220" width="4" height="15" fill="rgb(209,181,22)"/><text x="50.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1236" width="4" height="15" fill="rgb(205,81,29)"/><text x="50.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1252" width="4" height="15" fill="rgb(230,183,11)"/><text x="50.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1268" width="4" height="15" fill="rgb(222,209,3)"/><text x="50.00" y="1278.50"></text></g><g><title>&lt;module&gt; (simplejson/decoder.py) (1 samples, 0.29%)</title><rect x="47" y="1284" width="4" height="15" fill="rgb(249,36,17)"/><text x="50.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1300" width="4" height="15" fill="rgb(212,189,50)"/><text x="50.00" y="1310.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1316" width="4" height="15" fill="rgb(253,181,25)"/><text x="50.00" y="1326.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1332" width="4" height="15" fill="rgb(244,129,33)"/><text x="50.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.75%)</title><rect x="34" y="244" width="20" height="15" fill="rgb(235,81,9)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="34" y="260" width="20" height="15" fill="rgb(250,14,40)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="34" y="276" width="20" height="15" fill="rgb(220,180,50)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="34" y="292" width="20" height="15" fill="rgb(221,26,42)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="34" y="308" width="20" height="15" fill="rgb(219,197,41)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="34" y="324" width="20" height="15" fill="rgb(241,76,35)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.87%)</title><rect x="44" y="340" width="10" height="15" fill="rgb(227,172,0)"/><text x="47.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="356" width="10" height="15" fill="rgb(238,61,3)"/><text x="47.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="372" width="10" height="15" fill="rgb(237,115,51)"/><text x="47.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="388" width="10" height="15" fill="rgb(244,134,7)"/><text x="47.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="404" width="10" height="15" fill="rgb(239,151,40)"/><text x="47.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="420" width="10" height="15" fill="rgb(210,139,38)"/><text x="47.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="436" width="10" height="15" fill="rgb(232,93,41)"/><text x="47.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="44" y="452" width="10" height="15" fill="rgb(234,111,42)"/><text x="47.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="468" width="10" height="15" fill="rgb(244,184,34)"/><text x="47.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.87%)</title><rect x="44" y="484" width="10" height="15" fill="rgb(228,64,20)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="500" width="10" height="15" fill="rgb(228,160,41)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="516" width="10" height="15" fill="rgb(235,128,27)"/><text x="47.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="532" width="10" height="15" fill="rgb(236,19,7)"/><text x="47.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="44" y="548" width="10" height="15" fill="rgb(219,174,30)"/><text x="47.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="564" width="10" height="15" fill="rgb(212,162,42)"/><text x="47.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.87%)</title><rect x="44" y="580" width="10" height="15" fill="rgb(213,23,50)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="596" width="10" height="15" fill="rgb(247,15,2)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="612" width="10" height="15" fill="rgb(211,49,49)"/><text x="47.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="628" width="10" height="15" fill="rgb(211,52,15)"/><text x="47.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="44" y="644" width="10" height="15" fill="rgb(245,215,5)"/><text x="47.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="660" width="10" height="15" fill="rgb(231,104,22)"/><text x="47.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.87%)</title><rect x="44" y="676" width="10" height="15" fill="rgb(253,196,14)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="692" width="10" height="15" fill="rgb(229,77,19)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="708" width="10" height="15" fill="rgb(233,51,23)"/><text x="47.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="724" width="10" height="15" fill="rgb(249,113,27)"/><text x="47.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="44" y="740" width="10" height="15" fill="rgb(253,161,5)"/><text x="47.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="44" y="756" width="10" height="15" fill="rgb(253,47,18)"/><text x="47.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.87%)</title><rect x="44" y="772" width="10" height="15" fill="rgb(235,136,44)"/><text x="47.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="47" y="788" width="7" height="15" fill="rgb(223,221,29)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="47" y="804" width="7" height="15" fill="rgb(221,105,26)"/><text x="50.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="47" y="820" width="7" height="15" fill="rgb(214,24,25)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="47" y="836" width="7" height="15" fill="rgb(223,97,17)"/><text x="50.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="47" y="852" width="7" height="15" fill="rgb(207,86,30)"/><text x="50.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="47" y="868" width="7" height="15" fill="rgb(212,72,10)"/><text x="50.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="47" y="884" width="7" height="15" fill="rgb(222,215,49)"/><text x="50.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.29%)</title><rect x="51" y="900" width="3" height="15" fill="rgb(247,16,10)"/><text x="54.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="916" width="3" height="15" fill="rgb(242,107,10)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="932" width="3" height="15" fill="rgb(227,52,0)"/><text x="54.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="948" width="3" height="15" fill="rgb(223,106,9)"/><text x="54.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="964" width="3" height="15" fill="rgb(217,220,25)"/><text x="54.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="980" width="3" height="15" fill="rgb(206,109,33)"/><text x="54.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="996" width="3" height="15" fill="rgb(212,41,44)"/><text x="54.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1012" width="3" height="15" fill="rgb(214,79,31)"/><text x="54.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1028" width="3" height="15" fill="rgb(226,98,25)"/><text x="54.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.29%)</title><rect x="51" y="1044" width="3" height="15" fill="rgb(206,24,27)"/><text x="54.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1060" width="3" height="15" fill="rgb(227,203,31)"/><text x="54.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1076" width="3" height="15" fill="rgb(246,109,11)"/><text x="54.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1092" width="3" height="15" fill="rgb(213,158,47)"/><text x="54.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1108" width="3" height="15" fill="rgb(250,107,8)"/><text x="54.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1124" width="3" height="15" fill="rgb(236,72,32)"/><text x="54.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1140" width="3" height="15" fill="rgb(221,62,20)"/><text x="54.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1156" width="3" height="15" fill="rgb(241,139,52)"/><text x="54.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.29%)</title><rect x="51" y="1172" width="3" height="15" fill="rgb(226,176,27)"/><text x="54.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1188" width="3" height="15" fill="rgb(209,176,37)"/><text x="54.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1204" width="3" height="15" fill="rgb(237,153,29)"/><text x="54.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1220" width="3" height="15" fill="rgb(250,71,34)"/><text x="54.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1236" width="3" height="15" fill="rgb(247,59,27)"/><text x="54.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1252" width="3" height="15" fill="rgb(212,227,29)"/><text x="54.00" y="1262.50"></text></g><g><title>&lt;module&gt; (cryptography/__init__.py) (1 samples, 0.29%)</title><rect x="51" y="1268" width="3" height="15" fill="rgb(247,29,39)"/><text x="54.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1284" width="3" height="15" fill="rgb(243,18,33)"/><text x="54.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1300" width="3" height="15" fill="rgb(218,120,1)"/><text x="54.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1316" width="3" height="15" fill="rgb(219,51,8)"/><text x="54.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1332" width="3" height="15" fill="rgb(222,207,26)"/><text x="54.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1348" width="3" height="15" fill="rgb(216,119,42)"/><text x="54.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.08%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(217,62,41)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.08%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(231,210,13)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.08%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(220,179,38)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 4.08%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(214,109,0)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.08%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(207,62,33)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (14 samples, 4.08%)</title><rect x="10" y="148" width="48" height="15" fill="rgb(211,186,16)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.08%)</title><rect x="10" y="164" width="48" height="15" fill="rgb(249,46,0)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.08%)</title><rect x="10" y="180" width="48" height="15" fill="rgb(243,113,17)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.04%)</title><rect x="34" y="196" width="24" height="15" fill="rgb(215,175,43)"/><text x="37.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.04%)</title><rect x="34" y="212" width="24" height="15" fill="rgb(235,1,12)"/><text x="37.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.04%)</title><rect x="34" y="228" width="24" height="15" fill="rgb(218,122,4)"/><text x="37.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.29%)</title><rect x="54" y="244" width="4" height="15" fill="rgb(242,195,23)"/><text x="57.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="260" width="4" height="15" fill="rgb(248,130,45)"/><text x="57.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="276" width="4" height="15" fill="rgb(213,94,18)"/><text x="57.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="292" width="4" height="15" fill="rgb(250,198,13)"/><text x="57.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="308" width="4" height="15" fill="rgb(243,202,31)"/><text x="57.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="324" width="4" height="15" fill="rgb(229,103,3)"/><text x="57.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="54" y="340" width="4" height="15" fill="rgb(221,160,17)"/><text x="57.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="356" width="4" height="15" fill="rgb(228,222,18)"/><text x="57.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.29%)</title><rect x="54" y="372" width="4" height="15" fill="rgb(217,94,45)"/><text x="57.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="388" width="4" height="15" fill="rgb(228,77,50)"/><text x="57.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="404" width="4" height="15" fill="rgb(249,56,18)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="420" width="4" height="15" fill="rgb(226,213,5)"/><text x="57.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="436" width="4" height="15" fill="rgb(238,167,42)"/><text x="57.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="452" width="4" height="15" fill="rgb(211,6,33)"/><text x="57.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="54" y="468" width="4" height="15" fill="rgb(216,183,15)"/><text x="57.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="484" width="4" height="15" fill="rgb(242,191,7)"/><text x="57.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.29%)</title><rect x="54" y="500" width="4" height="15" fill="rgb(235,83,34)"/><text x="57.00" y="510.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="54" y="516" width="4" height="15" fill="rgb(243,24,27)"/><text x="57.00" y="526.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="54" y="532" width="4" height="15" fill="rgb(248,31,28)"/><text x="57.00" y="542.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="54" y="548" width="4" height="15" fill="rgb(207,27,24)"/><text x="57.00" y="558.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="564" width="4" height="15" fill="rgb(220,85,23)"/><text x="57.00" y="574.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="580" width="4" height="15" fill="rgb(208,164,24)"/><text x="57.00" y="590.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="596" width="4" height="15" fill="rgb(221,179,52)"/><text x="57.00" y="606.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="612" width="4" height="15" fill="rgb(237,153,6)"/><text x="57.00" y="622.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="628" width="4" height="15" fill="rgb(233,207,43)"/><text x="57.00" y="638.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="644" width="4" height="15" fill="rgb(214,156,41)"/><text x="57.00" y="654.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="660" width="4" height="15" fill="rgb(215,169,48)"/><text x="57.00" y="670.50"></text></g><g><title>match (sre_parse.py) (1 samples, 0.29%)</title><rect x="54" y="676" width="4" height="15" fill="rgb(249,174,15)"/><text x="57.00" y="686.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (1 samples, 0.29%)</title><rect x="58" y="68" width="3" height="15" fill="rgb(211,223,9)"/><text x="61.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (1 samples, 0.29%)</title><rect x="58" y="84" width="3" height="15" fill="rgb(207,24,14)"/><text x="61.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="58" y="100" width="3" height="15" fill="rgb(234,177,46)"/><text x="61.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="58" y="116" width="3" height="15" fill="rgb(218,32,11)"/><text x="61.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="58" y="132" width="3" height="15" fill="rgb(212,187,6)"/><text x="61.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.29%)</title><rect x="58" y="148" width="3" height="15" fill="rgb(216,49,44)"/><text x="61.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.29%)</title><rect x="58" y="164" width="3" height="15" fill="rgb(249,218,54)"/><text x="61.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.29%)</title><rect x="58" y="180" width="3" height="15" fill="rgb(236,229,17)"/><text x="61.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.29%)</title><rect x="58" y="196" width="3" height="15" fill="rgb(216,46,9)"/><text x="61.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.29%)</title><rect x="58" y="212" width="3" height="15" fill="rgb(207,80,48)"/><text x="61.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="58" y="228" width="3" height="15" fill="rgb(247,155,15)"/><text x="61.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="58" y="244" width="3" height="15" fill="rgb(209,11,54)"/><text x="61.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="58" y="260" width="3" height="15" fill="rgb(250,65,52)"/><text x="61.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="58" y="276" width="3" height="15" fill="rgb(238,37,48)"/><text x="61.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="58" y="292" width="3" height="15" fill="rgb(252,35,49)"/><text x="61.00" y="302.50"></text></g><g><title>0x7efbc8675422 (?) (1 samples, 0.29%)</title><rect x="61" y="244" width="4" height="15" fill="rgb(233,23,7)"/><text x="64.00" y="254.50"></text></g><g><title>0x7efbc867b89e (?) (1 samples, 0.29%)</title><rect x="61" y="260" width="4" height="15" fill="rgb(239,25,31)"/><text x="64.00" y="270.50"></text></g><g><title>0x7efbc867b74f (?) (1 samples, 0.29%)</title><rect x="61" y="276" width="4" height="15" fill="rgb(252,31,14)"/><text x="64.00" y="286.50"></text></g><g><title>0x7efbc8681a3a (?) (1 samples, 0.29%)</title><rect x="61" y="292" width="4" height="15" fill="rgb(227,1,15)"/><text x="64.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="61" y="308" width="4" height="15" fill="rgb(214,202,39)"/><text x="64.00" y="318.50"></text></g><g><title>0x7efbd199cdaa (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="61" y="324" width="4" height="15" fill="rgb(237,101,6)"/><text x="64.00" y="334.50"></text></g><g><title>0x7efbd199ecfd (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="61" y="340" width="4" height="15" fill="rgb(228,222,47)"/><text x="64.00" y="350.50"></text></g><g><title>0x7efbd199dab9 (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="65" y="452" width="3" height="15" fill="rgb(224,81,53)"/><text x="68.00" y="462.50"></text></g><g><title>0x7efbd199eeab (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="65" y="468" width="3" height="15" fill="rgb(239,174,3)"/><text x="68.00" y="478.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (4 samples, 1.17%)</title><rect x="61" y="100" width="14" height="15" fill="rgb(254,180,24)"/><text x="64.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.17%)</title><rect x="61" y="116" width="14" height="15" fill="rgb(244,151,2)"/><text x="64.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.17%)</title><rect x="61" y="132" width="14" height="15" fill="rgb(243,116,46)"/><text x="64.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.17%)</title><rect x="61" y="148" width="14" height="15" fill="rgb(212,32,51)"/><text x="64.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.17%)</title><rect x="61" y="164" width="14" height="15" fill="rgb(246,135,34)"/><text x="64.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (4 samples, 1.17%)</title><rect x="61" y="180" width="14" height="15" fill="rgb(253,196,27)"/><text x="64.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (4 samples, 1.17%)</title><rect x="61" y="196" width="14" height="15" fill="rgb(247,70,45)"/><text x="64.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (4 samples, 1.17%)</title><rect x="61" y="212" width="14" height="15" fill="rgb(206,226,18)"/><text x="64.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (4 samples, 1.17%)</title><rect x="61" y="228" width="14" height="15" fill="rgb(240,106,30)"/><text x="64.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (3 samples, 0.87%)</title><rect x="65" y="244" width="10" height="15" fill="rgb(217,125,32)"/><text x="68.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (3 samples, 0.87%)</title><rect x="65" y="260" width="10" height="15" fill="rgb(223,96,37)"/><text x="68.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (3 samples, 0.87%)</title><rect x="65" y="276" width="10" height="15" fill="rgb(246,3,31)"/><text x="68.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (3 samples, 0.87%)</title><rect x="65" y="292" width="10" height="15" fill="rgb(220,175,19)"/><text x="68.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (3 samples, 0.87%)</title><rect x="65" y="308" width="10" height="15" fill="rgb(205,140,48)"/><text x="68.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (3 samples, 0.87%)</title><rect x="65" y="324" width="10" height="15" fill="rgb(249,160,10)"/><text x="68.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (3 samples, 0.87%)</title><rect x="65" y="340" width="10" height="15" fill="rgb(223,32,5)"/><text x="68.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h) (3 samples, 0.87%)</title><rect x="65" y="356" width="10" height="15" fill="rgb(253,132,49)"/><text x="68.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (3 samples, 0.87%)</title><rect x="65" y="372" width="10" height="15" fill="rgb(226,82,4)"/><text x="68.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (3 samples, 0.87%)</title><rect x="65" y="388" width="10" height="15" fill="rgb(210,200,13)"/><text x="68.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (3 samples, 0.87%)</title><rect x="65" y="404" width="10" height="15" fill="rgb(231,113,7)"/><text x="68.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (3 samples, 0.87%)</title><rect x="65" y="420" width="10" height="15" fill="rgb(254,107,24)"/><text x="68.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (3 samples, 0.87%)</title><rect x="65" y="436" width="10" height="15" fill="rgb(218,191,14)"/><text x="68.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.58%)</title><rect x="68" y="452" width="7" height="15" fill="rgb(230,64,17)"/><text x="71.00" y="462.50"></text></g><g><title>0x7efbd199cdaa (libgomp.so.1.0.0) (2 samples, 0.58%)</title><rect x="68" y="468" width="7" height="15" fill="rgb(242,159,45)"/><text x="71.00" y="478.50"></text></g><g><title>0x7efbd199ecfb (libgomp.so.1.0.0) (2 samples, 0.58%)</title><rect x="68" y="484" width="7" height="15" fill="rgb(223,124,26)"/><text x="71.00" y="494.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="75" y="484" width="3" height="15" fill="rgb(219,76,14)"/><text x="78.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="75" y="500" width="3" height="15" fill="rgb(242,114,13)"/><text x="78.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="75" y="516" width="3" height="15" fill="rgb(208,201,18)"/><text x="78.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="75" y="532" width="3" height="15" fill="rgb(234,80,4)"/><text x="78.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="75" y="548" width="3" height="15" fill="rgb(231,64,4)"/><text x="78.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="75" y="564" width="3" height="15" fill="rgb(206,56,17)"/><text x="78.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="580" width="3" height="15" fill="rgb(226,63,24)"/><text x="78.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="596" width="3" height="15" fill="rgb(229,50,30)"/><text x="78.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="612" width="3" height="15" fill="rgb(205,211,35)"/><text x="78.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="628" width="3" height="15" fill="rgb(221,175,33)"/><text x="78.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="644" width="3" height="15" fill="rgb(217,130,36)"/><text x="78.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="660" width="3" height="15" fill="rgb(250,44,22)"/><text x="78.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="676" width="3" height="15" fill="rgb(231,95,26)"/><text x="78.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="692" width="3" height="15" fill="rgb(246,190,53)"/><text x="78.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="708" width="3" height="15" fill="rgb(223,111,21)"/><text x="78.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="724" width="3" height="15" fill="rgb(221,63,10)"/><text x="78.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="740" width="3" height="15" fill="rgb(221,214,0)"/><text x="78.00" y="750.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="756" width="3" height="15" fill="rgb(209,63,16)"/><text x="78.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="772" width="3" height="15" fill="rgb(253,128,39)"/><text x="78.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="788" width="3" height="15" fill="rgb(244,17,40)"/><text x="78.00" y="798.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="804" width="3" height="15" fill="rgb(238,184,22)"/><text x="78.00" y="814.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="820" width="3" height="15" fill="rgb(246,34,26)"/><text x="78.00" y="830.50"></text></g><g><title>parse_condexpr (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="75" y="836" width="3" height="15" fill="rgb(249,33,38)"/><text x="78.00" y="846.50"></text></g><g><title>skip_if (jinja2/lexer.py) (1 samples, 0.29%)</title><rect x="75" y="852" width="3" height="15" fill="rgb(253,96,49)"/><text x="78.00" y="862.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.58%)</title><rect x="75" y="132" width="7" height="15" fill="rgb(213,183,13)"/><text x="78.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.58%)</title><rect x="75" y="148" width="7" height="15" fill="rgb(253,38,42)"/><text x="78.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.58%)</title><rect x="75" y="164" width="7" height="15" fill="rgb(225,49,1)"/><text x="78.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.58%)</title><rect x="75" y="180" width="7" height="15" fill="rgb(215,103,28)"/><text x="78.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.58%)</title><rect x="75" y="196" width="7" height="15" fill="rgb(223,112,49)"/><text x="78.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="212" width="7" height="15" fill="rgb(217,112,0)"/><text x="78.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="228" width="7" height="15" fill="rgb(238,192,49)"/><text x="78.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="244" width="7" height="15" fill="rgb(207,221,52)"/><text x="78.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="75" y="260" width="7" height="15" fill="rgb(244,116,50)"/><text x="78.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="276" width="7" height="15" fill="rgb(229,96,39)"/><text x="78.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.58%)</title><rect x="75" y="292" width="7" height="15" fill="rgb(235,187,10)"/><text x="78.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="308" width="7" height="15" fill="rgb(244,119,26)"/><text x="78.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="324" width="7" height="15" fill="rgb(252,9,20)"/><text x="78.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="340" width="7" height="15" fill="rgb(244,132,43)"/><text x="78.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="75" y="356" width="7" height="15" fill="rgb(228,159,44)"/><text x="78.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="372" width="7" height="15" fill="rgb(252,56,27)"/><text x="78.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.58%)</title><rect x="75" y="388" width="7" height="15" fill="rgb(215,56,27)"/><text x="78.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="404" width="7" height="15" fill="rgb(229,194,1)"/><text x="78.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="420" width="7" height="15" fill="rgb(205,108,10)"/><text x="78.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="436" width="7" height="15" fill="rgb(221,219,48)"/><text x="78.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="75" y="452" width="7" height="15" fill="rgb(231,21,31)"/><text x="78.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="75" y="468" width="7" height="15" fill="rgb(213,106,22)"/><text x="78.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_argmin.py) (1 samples, 0.29%)</title><rect x="78" y="484" width="4" height="15" fill="rgb(229,221,38)"/><text x="81.00" y="494.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.29%)</title><rect x="82" y="212" width="3" height="15" fill="rgb(239,89,47)"/><text x="85.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="82" y="228" width="3" height="15" fill="rgb(218,77,48)"/><text x="85.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="82" y="244" width="3" height="15" fill="rgb(208,161,19)"/><text x="85.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="82" y="260" width="3" height="15" fill="rgb(231,176,48)"/><text x="85.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="82" y="276" width="3" height="15" fill="rgb(250,100,13)"/><text x="85.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="82" y="292" width="3" height="15" fill="rgb(216,124,14)"/><text x="85.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.29%)</title><rect x="82" y="308" width="3" height="15" fill="rgb(246,121,47)"/><text x="85.00" y="318.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (8 samples, 2.33%)</title><rect x="61" y="68" width="28" height="15" fill="rgb(251,147,16)"/><text x="64.00" y="78.50">p..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (8 samples, 2.33%)</title><rect x="61" y="84" width="28" height="15" fill="rgb(235,182,0)"/><text x="64.00" y="94.50">s..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.17%)</title><rect x="75" y="100" width="14" height="15" fill="rgb(219,48,11)"/><text x="78.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.17%)</title><rect x="75" y="116" width="14" height="15" fill="rgb(205,60,6)"/><text x="78.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.58%)</title><rect x="82" y="132" width="7" height="15" fill="rgb(209,166,7)"/><text x="85.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.58%)</title><rect x="82" y="148" width="7" height="15" fill="rgb(206,173,33)"/><text x="85.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.58%)</title><rect x="82" y="164" width="7" height="15" fill="rgb(227,93,37)"/><text x="85.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.58%)</title><rect x="82" y="180" width="7" height="15" fill="rgb(226,171,51)"/><text x="85.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (2 samples, 0.58%)</title><rect x="82" y="196" width="7" height="15" fill="rgb(250,61,14)"/><text x="85.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.29%)</title><rect x="85" y="212" width="4" height="15" fill="rgb(245,188,34)"/><text x="88.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.29%)</title><rect x="85" y="228" width="4" height="15" fill="rgb(215,5,9)"/><text x="88.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/common/tree_ensemble.py) (1 samples, 0.29%)</title><rect x="85" y="244" width="4" height="15" fill="rgb(241,191,3)"/><text x="88.00" y="254.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.29%)</title><rect x="85" y="260" width="4" height="15" fill="rgb(215,222,47)"/><text x="88.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.29%)</title><rect x="89" y="164" width="3" height="15" fill="rgb(219,200,40)"/><text x="92.00" y="174.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="89" y="180" width="3" height="15" fill="rgb(210,13,7)"/><text x="92.00" y="190.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.29%)</title><rect x="89" y="196" width="3" height="15" fill="rgb(218,110,4)"/><text x="92.00" y="206.50"></text></g><g><title>update_wrapper (functools.py) (7 samples, 2.04%)</title><rect x="209" y="228" width="24" height="15" fill="rgb(213,14,26)"/><text x="212.00" y="238.50">u..</text></g><g><title>delayed (joblib/parallel.py) (14 samples, 4.08%)</title><rect x="199" y="212" width="48" height="15" fill="rgb(252,199,46)"/><text x="202.00" y="222.50">dela..</text></g><g><title>wraps (functools.py) (4 samples, 1.17%)</title><rect x="233" y="228" width="14" height="15" fill="rgb(244,151,1)"/><text x="236.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (16 samples, 4.66%)</title><rect x="195" y="196" width="55" height="15" fill="rgb(219,102,22)"/><text x="198.00" y="206.50">&lt;gene..</text></g><g><title>delayed_function (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="247" y="212" width="3" height="15" fill="rgb(217,122,52)"/><text x="250.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.58%)</title><rect x="250" y="196" width="7" height="15" fill="rgb(213,13,16)"/><text x="253.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="285" y="212" width="3" height="15" fill="rgb(211,145,42)"/><text x="288.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (10 samples, 2.92%)</title><rect x="292" y="228" width="34" height="15" fill="rgb(216,26,12)"/><text x="295.00" y="238.50">__..</text></g><g><title>print_progress (joblib/parallel.py) (2 samples, 0.58%)</title><rect x="319" y="244" width="7" height="15" fill="rgb(245,144,52)"/><text x="322.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.58%)</title><rect x="364" y="292" width="7" height="15" fill="rgb(248,51,48)"/><text x="367.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.58%)</title><rect x="364" y="308" width="7" height="15" fill="rgb(231,110,53)"/><text x="367.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.58%)</title><rect x="364" y="324" width="7" height="15" fill="rgb(246,216,32)"/><text x="367.00" y="334.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.58%)</title><rect x="371" y="292" width="7" height="15" fill="rgb(233,165,26)"/><text x="374.00" y="302.50"></text></g><g><title>0x7efc079ed73f (libc-2.29.so) (1 samples, 0.29%)</title><rect x="374" y="308" width="4" height="15" fill="rgb(219,54,20)"/><text x="377.00" y="318.50"></text></g><g><title>0x7efbe141af55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="415" y="324" width="4" height="15" fill="rgb(214,86,35)"/><text x="418.00" y="334.50"></text></g><g><title>0x7efbe140ad33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="415" y="340" width="4" height="15" fill="rgb(236,96,44)"/><text x="418.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.29%)</title><rect x="415" y="356" width="4" height="15" fill="rgb(207,60,3)"/><text x="418.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.29%)</title><rect x="415" y="372" width="4" height="15" fill="rgb(241,198,43)"/><text x="418.00" y="382.50"></text></g><g><title>0x7efbe1428f30 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="419" y="356" width="3" height="15" fill="rgb(216,201,22)"/><text x="422.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.29%)</title><rect x="433" y="452" width="3" height="15" fill="rgb(210,188,47)"/><text x="436.00" y="462.50"></text></g><g><title>0x7efc079d7902 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="433" y="468" width="3" height="15" fill="rgb(252,155,35)"/><text x="436.00" y="478.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.29%)</title><rect x="436" y="468" width="4" height="15" fill="rgb(207,210,33)"/><text x="439.00" y="478.50"></text></g><g><title>0x7efbe14292df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.75%)</title><rect x="422" y="356" width="21" height="15" fill="rgb(240,63,10)"/><text x="425.00" y="366.50"></text></g><g><title>0x7efbe140dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.75%)</title><rect x="422" y="372" width="21" height="15" fill="rgb(249,223,46)"/><text x="425.00" y="382.50"></text></g><g><title>0x7efbe140d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.75%)</title><rect x="422" y="388" width="21" height="15" fill="rgb(234,149,49)"/><text x="425.00" y="398.50"></text></g><g><title>0x7efbe14032fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.75%)</title><rect x="422" y="404" width="21" height="15" fill="rgb(247,53,9)"/><text x="425.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 1.46%)</title><rect x="426" y="420" width="17" height="15" fill="rgb(207,196,38)"/><text x="429.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (5 samples, 1.46%)</title><rect x="426" y="436" width="17" height="15" fill="rgb(230,76,51)"/><text x="429.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.58%)</title><rect x="436" y="452" width="7" height="15" fill="rgb(221,30,25)"/><text x="439.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="440" y="468" width="3" height="15" fill="rgb(223,54,10)"/><text x="443.00" y="478.50"></text></g><g><title>0x7efbe142943a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="443" y="356" width="3" height="15" fill="rgb(245,86,35)"/><text x="446.00" y="366.50"></text></g><g><title>0x7efbe1429511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="446" y="356" width="4" height="15" fill="rgb(231,198,12)"/><text x="449.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.29%)</title><rect x="453" y="404" width="4" height="15" fill="rgb(242,189,4)"/><text x="456.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.29%)</title><rect x="453" y="420" width="4" height="15" fill="rgb(243,105,50)"/><text x="456.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.29%)</title><rect x="453" y="436" width="4" height="15" fill="rgb(250,134,0)"/><text x="456.00" y="446.50"></text></g><g><title>0x7efbe1429592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="450" y="356" width="10" height="15" fill="rgb(215,165,35)"/><text x="453.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 0.87%)</title><rect x="450" y="372" width="10" height="15" fill="rgb(234,41,54)"/><text x="453.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.58%)</title><rect x="453" y="388" width="7" height="15" fill="rgb(240,216,50)"/><text x="456.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.29%)</title><rect x="457" y="404" width="3" height="15" fill="rgb(236,22,47)"/><text x="460.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.29%)</title><rect x="457" y="420" width="3" height="15" fill="rgb(247,214,22)"/><text x="460.00" y="430.50"></text></g><g><title>0x7efbe1429644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="460" y="356" width="4" height="15" fill="rgb(250,92,4)"/><text x="463.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="460" y="372" width="4" height="15" fill="rgb(246,14,2)"/><text x="463.00" y="382.50"></text></g><g><title>0x7efbe14296fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="464" y="356" width="3" height="15" fill="rgb(237,200,1)"/><text x="467.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="464" y="372" width="3" height="15" fill="rgb(206,168,39)"/><text x="467.00" y="382.50"></text></g><g><title>0x7efbe142992f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="467" y="356" width="3" height="15" fill="rgb(232,37,22)"/><text x="470.00" y="366.50"></text></g><g><title>0x7efbe13fea05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="467" y="372" width="3" height="15" fill="rgb(226,64,40)"/><text x="470.00" y="382.50"></text></g><g><title>0x7efbe1429a15 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="470" y="356" width="4" height="15" fill="rgb(228,58,29)"/><text x="473.00" y="366.50"></text></g><g><title>0x7efbe1400902 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="474" y="404" width="3" height="15" fill="rgb(210,80,51)"/><text x="477.00" y="414.50"></text></g><g><title>0x7efbe142a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 5.25%)</title><rect x="419" y="340" width="62" height="15" fill="rgb(241,201,40)"/><text x="422.00" y="350.50">0x7efb..</text></g><g><title>0x7efbe1429c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="474" y="356" width="7" height="15" fill="rgb(253,44,54)"/><text x="477.00" y="366.50"></text></g><g><title>0x7efbe14015f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="474" y="372" width="7" height="15" fill="rgb(216,206,12)"/><text x="477.00" y="382.50"></text></g><g><title>0x7efbe14012bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="474" y="388" width="7" height="15" fill="rgb(254,80,30)"/><text x="477.00" y="398.50"></text></g><g><title>0x7efbe1400d78 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="477" y="404" width="4" height="15" fill="rgb(205,180,40)"/><text x="480.00" y="414.50"></text></g><g><title>0x7efbe13fe4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="481" y="372" width="3" height="15" fill="rgb(222,163,43)"/><text x="484.00" y="382.50"></text></g><g><title>0x7efbe141afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 6.12%)</title><rect x="419" y="324" width="72" height="15" fill="rgb(211,61,45)"/><text x="422.00" y="334.50">0x7efbe1..</text></g><g><title>0x7efbe142a540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="481" y="340" width="10" height="15" fill="rgb(205,94,38)"/><text x="484.00" y="350.50"></text></g><g><title>0x7efbe13ff2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="481" y="356" width="10" height="15" fill="rgb(223,160,27)"/><text x="484.00" y="366.50"></text></g><g><title>0x7efbe13fe530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="484" y="372" width="7" height="15" fill="rgb(217,152,37)"/><text x="487.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.58%)</title><rect x="484" y="388" width="7" height="15" fill="rgb(233,1,51)"/><text x="487.00" y="398.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.58%)</title><rect x="491" y="356" width="7" height="15" fill="rgb(226,190,5)"/><text x="494.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.29%)</title><rect x="498" y="372" width="3" height="15" fill="rgb(207,90,42)"/><text x="501.00" y="382.50"></text></g><g><title>0x7efbe141b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.17%)</title><rect x="491" y="324" width="14" height="15" fill="rgb(250,132,25)"/><text x="494.00" y="334.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.17%)</title><rect x="491" y="340" width="14" height="15" fill="rgb(242,131,23)"/><text x="494.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.58%)</title><rect x="498" y="356" width="7" height="15" fill="rgb(238,206,45)"/><text x="501.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.29%)</title><rect x="501" y="372" width="4" height="15" fill="rgb(226,131,20)"/><text x="504.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.29%)</title><rect x="501" y="388" width="4" height="15" fill="rgb(229,206,23)"/><text x="504.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.29%)</title><rect x="501" y="404" width="4" height="15" fill="rgb(247,192,24)"/><text x="504.00" y="414.50"></text></g><g><title>0x7efbe141b13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="505" y="324" width="10" height="15" fill="rgb(243,219,21)"/><text x="508.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.58%)</title><rect x="508" y="340" width="7" height="15" fill="rgb(240,36,48)"/><text x="511.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.29%)</title><rect x="512" y="356" width="3" height="15" fill="rgb(241,202,40)"/><text x="515.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="512" y="372" width="3" height="15" fill="rgb(232,140,9)"/><text x="515.00" y="382.50"></text></g><g><title>0x7efbe141b14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="515" y="324" width="4" height="15" fill="rgb(248,54,9)"/><text x="518.00" y="334.50"></text></g><g><title>0x7efbe141b163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(217,99,9)"/><text x="522.00" y="334.50"></text></g><g><title>0x7efbe141b18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="522" y="324" width="4" height="15" fill="rgb(210,146,35)"/><text x="525.00" y="334.50"></text></g><g><title>0x7efbe141b23a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="526" y="324" width="3" height="15" fill="rgb(229,160,7)"/><text x="529.00" y="334.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.29%)</title><rect x="532" y="356" width="4" height="15" fill="rgb(236,195,24)"/><text x="535.00" y="366.50"></text></g><g><title>0x7efbe141bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (37 samples, 10.79%)</title><rect x="415" y="308" width="128" height="15" fill="rgb(217,186,14)"/><text x="418.00" y="318.50">0x7efbe141bd2e (..</text></g><g><title>0x7efbe141b328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.17%)</title><rect x="529" y="324" width="14" height="15" fill="rgb(224,62,50)"/><text x="532.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 1.17%)</title><rect x="529" y="340" width="14" height="15" fill="rgb(252,15,14)"/><text x="532.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.58%)</title><rect x="536" y="356" width="7" height="15" fill="rgb(236,182,50)"/><text x="539.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.58%)</title><rect x="536" y="372" width="7" height="15" fill="rgb(217,117,44)"/><text x="539.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="539" y="388" width="4" height="15" fill="rgb(224,199,30)"/><text x="542.00" y="398.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (4 samples, 1.17%)</title><rect x="543" y="308" width="13" height="15" fill="rgb(216,35,7)"/><text x="546.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.29%)</title><rect x="553" y="324" width="3" height="15" fill="rgb(228,81,31)"/><text x="556.00" y="334.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.29%)</title><rect x="556" y="308" width="4" height="15" fill="rgb(223,149,8)"/><text x="559.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.29%)</title><rect x="556" y="324" width="4" height="15" fill="rgb(245,131,41)"/><text x="559.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.29%)</title><rect x="556" y="340" width="4" height="15" fill="rgb(226,119,17)"/><text x="559.00" y="350.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c) (1 samples, 0.29%)</title><rect x="556" y="356" width="4" height="15" fill="rgb(210,112,34)"/><text x="559.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.58%)</title><rect x="560" y="308" width="7" height="15" fill="rgb(252,57,37)"/><text x="563.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.58%)</title><rect x="560" y="324" width="7" height="15" fill="rgb(240,62,36)"/><text x="563.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.58%)</title><rect x="560" y="340" width="7" height="15" fill="rgb(229,166,8)"/><text x="563.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="570" y="356" width="4" height="15" fill="rgb(221,170,19)"/><text x="573.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="570" y="372" width="4" height="15" fill="rgb(242,199,13)"/><text x="573.00" y="382.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.29%)</title><rect x="570" y="388" width="4" height="15" fill="rgb(228,49,44)"/><text x="573.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.58%)</title><rect x="577" y="372" width="7" height="15" fill="rgb(205,112,52)"/><text x="580.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.58%)</title><rect x="577" y="388" width="7" height="15" fill="rgb(210,91,48)"/><text x="580.00" y="398.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.29%)</title><rect x="581" y="404" width="3" height="15" fill="rgb(248,50,13)"/><text x="584.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.17%)</title><rect x="574" y="356" width="13" height="15" fill="rgb(243,7,15)"/><text x="577.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="584" y="372" width="3" height="15" fill="rgb(234,103,28)"/><text x="587.00" y="382.50"></text></g><g><title>array_richcompare (arrayobject.c) (7 samples, 2.04%)</title><rect x="567" y="308" width="24" height="15" fill="rgb(235,78,49)"/><text x="570.00" y="318.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.04%)</title><rect x="567" y="324" width="24" height="15" fill="rgb(218,78,35)"/><text x="570.00" y="334.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.04%)</title><rect x="567" y="340" width="24" height="15" fill="rgb(216,116,41)"/><text x="570.00" y="350.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.29%)</title><rect x="587" y="356" width="4" height="15" fill="rgb(248,162,15)"/><text x="590.00" y="366.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.29%)</title><rect x="591" y="308" width="3" height="15" fill="rgb(244,101,6)"/><text x="594.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.29%)</title><rect x="591" y="324" width="3" height="15" fill="rgb(216,39,1)"/><text x="594.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.17%)</title><rect x="605" y="372" width="13" height="15" fill="rgb(229,159,15)"/><text x="608.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.17%)</title><rect x="605" y="388" width="13" height="15" fill="rgb(244,135,44)"/><text x="608.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 1.17%)</title><rect x="605" y="404" width="13" height="15" fill="rgb(233,171,31)"/><text x="608.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 1.17%)</title><rect x="605" y="420" width="13" height="15" fill="rgb(215,66,5)"/><text x="608.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 1.17%)</title><rect x="605" y="436" width="13" height="15" fill="rgb(215,37,33)"/><text x="608.00" y="446.50"></text></g><g><title>0x7efc079ed730 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="629" y="388" width="3" height="15" fill="rgb(226,228,0)"/><text x="632.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.58%)</title><rect x="639" y="436" width="7" height="15" fill="rgb(220,207,2)"/><text x="642.00" y="446.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.29%)</title><rect x="643" y="452" width="3" height="15" fill="rgb(206,61,38)"/><text x="646.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.29%)</title><rect x="643" y="468" width="3" height="15" fill="rgb(250,98,31)"/><text x="646.00" y="478.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.29%)</title><rect x="646" y="436" width="3" height="15" fill="rgb(244,136,54)"/><text x="649.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.46%)</title><rect x="636" y="420" width="17" height="15" fill="rgb(254,58,40)"/><text x="639.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="649" y="436" width="4" height="15" fill="rgb(210,5,34)"/><text x="652.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.29%)</title><rect x="649" y="452" width="4" height="15" fill="rgb(219,114,2)"/><text x="652.00" y="462.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.29%)</title><rect x="653" y="420" width="3" height="15" fill="rgb(244,126,34)"/><text x="656.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.29%)</title><rect x="653" y="436" width="3" height="15" fill="rgb(236,19,30)"/><text x="656.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="653" y="452" width="3" height="15" fill="rgb(247,185,39)"/><text x="656.00" y="462.50"></text></g><g><title>0x7efc0798fa05 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="653" y="468" width="3" height="15" fill="rgb(233,94,42)"/><text x="656.00" y="478.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.29%)</title><rect x="663" y="468" width="4" height="15" fill="rgb(252,32,7)"/><text x="666.00" y="478.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="663" y="484" width="4" height="15" fill="rgb(227,139,22)"/><text x="666.00" y="494.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="663" y="500" width="4" height="15" fill="rgb(211,153,11)"/><text x="666.00" y="510.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.29%)</title><rect x="667" y="468" width="3" height="15" fill="rgb(220,221,17)"/><text x="670.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (5 samples, 1.46%)</title><rect x="656" y="420" width="17" height="15" fill="rgb(229,139,25)"/><text x="659.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 1.17%)</title><rect x="660" y="436" width="13" height="15" fill="rgb(226,161,47)"/><text x="663.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (4 samples, 1.17%)</title><rect x="660" y="452" width="13" height="15" fill="rgb(252,98,40)"/><text x="663.00" y="462.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.29%)</title><rect x="670" y="468" width="3" height="15" fill="rgb(249,142,28)"/><text x="673.00" y="478.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.29%)</title><rect x="673" y="436" width="4" height="15" fill="rgb(243,213,46)"/><text x="676.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.29%)</title><rect x="673" y="452" width="4" height="15" fill="rgb(217,163,34)"/><text x="676.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (14 samples, 4.08%)</title><rect x="632" y="404" width="48" height="15" fill="rgb(213,198,34)"/><text x="635.00" y="414.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.58%)</title><rect x="673" y="420" width="7" height="15" fill="rgb(231,189,18)"/><text x="676.00" y="430.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.29%)</title><rect x="677" y="436" width="3" height="15" fill="rgb(215,141,20)"/><text x="680.00" y="446.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.29%)</title><rect x="677" y="452" width="3" height="15" fill="rgb(250,100,11)"/><text x="680.00" y="462.50"></text></g><g><title>_get_identity (ufunc_object.c) (2 samples, 0.58%)</title><rect x="680" y="404" width="7" height="15" fill="rgb(242,39,10)"/><text x="683.00" y="414.50"></text></g><g><title>npy_cache_import (npy_import.h) (1 samples, 0.29%)</title><rect x="687" y="404" width="4" height="15" fill="rgb(249,36,10)"/><text x="690.00" y="414.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="698" y="452" width="3" height="15" fill="rgb(224,175,43)"/><text x="701.00" y="462.50"></text></g><g><title>ensure_dtype_nbo (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="698" y="468" width="3" height="15" fill="rgb(221,103,48)"/><text x="701.00" y="478.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.29%)</title><rect x="701" y="452" width="3" height="15" fill="rgb(207,228,20)"/><text x="704.00" y="462.50"></text></g><g><title>array_sum (methods.c) (34 samples, 9.91%)</title><rect x="594" y="308" width="117" height="15" fill="rgb(231,111,16)"/><text x="597.00" y="318.50">array_sum (met..</text></g><g><title>forward_ndarray_method (methods.c) (33 samples, 9.62%)</title><rect x="598" y="324" width="113" height="15" fill="rgb(244,98,31)"/><text x="601.00" y="334.50">forward_ndarr..</text></g><g><title>_sum (numpy/core/_methods.py) (32 samples, 9.33%)</title><rect x="601" y="340" width="110" height="15" fill="rgb(205,54,15)"/><text x="604.00" y="350.50">_sum (numpy/c..</text></g><g><title>ufunc_reduce (ufunc_object.c) (31 samples, 9.04%)</title><rect x="605" y="356" width="106" height="15" fill="rgb(215,15,13)"/><text x="608.00" y="366.50">ufunc_reduce..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (27 samples, 7.87%)</title><rect x="618" y="372" width="93" height="15" fill="rgb(254,218,42)"/><text x="621.00" y="382.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (23 samples, 6.71%)</title><rect x="632" y="388" width="79" height="15" fill="rgb(240,126,21)"/><text x="635.00" y="398.50">PyUFunc_R..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (6 samples, 1.75%)</title><rect x="691" y="404" width="20" height="15" fill="rgb(223,132,3)"/><text x="694.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (6 samples, 1.75%)</title><rect x="691" y="420" width="20" height="15" fill="rgb(252,170,29)"/><text x="694.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (5 samples, 1.46%)</title><rect x="694" y="436" width="17" height="15" fill="rgb(239,59,34)"/><text x="697.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.58%)</title><rect x="704" y="452" width="7" height="15" fill="rgb(206,138,1)"/><text x="707.00" y="462.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.29%)</title><rect x="708" y="468" width="3" height="15" fill="rgb(230,167,17)"/><text x="711.00" y="478.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.87%)</title><rect x="759" y="340" width="11" height="15" fill="rgb(233,39,20)"/><text x="762.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (16 samples, 4.66%)</title><rect x="722" y="324" width="55" height="15" fill="rgb(221,143,36)"/><text x="725.00" y="334.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.58%)</title><rect x="770" y="340" width="7" height="15" fill="rgb(233,124,31)"/><text x="773.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (21 samples, 6.12%)</title><rect x="711" y="308" width="73" height="15" fill="rgb(207,204,27)"/><text x="714.00" y="318.50">check_is..</text></g><g><title>isclass (inspect.py) (2 samples, 0.58%)</title><rect x="777" y="324" width="7" height="15" fill="rgb(207,57,47)"/><text x="780.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.29%)</title><rect x="784" y="324" width="3" height="15" fill="rgb(242,136,19)"/><text x="787.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.29%)</title><rect x="784" y="340" width="3" height="15" fill="rgb(222,173,22)"/><text x="787.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.29%)</title><rect x="784" y="356" width="3" height="15" fill="rgb(241,169,24)"/><text x="787.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.58%)</title><rect x="797" y="388" width="7" height="15" fill="rgb(215,53,26)"/><text x="800.00" y="398.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.29%)</title><rect x="801" y="404" width="3" height="15" fill="rgb(253,222,4)"/><text x="804.00" y="414.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.29%)</title><rect x="804" y="388" width="4" height="15" fill="rgb(229,157,15)"/><text x="807.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.04%)</title><rect x="790" y="340" width="25" height="15" fill="rgb(239,86,42)"/><text x="793.00" y="350.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.04%)</title><rect x="790" y="356" width="25" height="15" fill="rgb(211,9,29)"/><text x="793.00" y="366.50">i..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 2.04%)</title><rect x="790" y="372" width="25" height="15" fill="rgb(236,110,53)"/><text x="793.00" y="382.50">N..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.58%)</title><rect x="808" y="388" width="7" height="15" fill="rgb(253,100,18)"/><text x="811.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.29%)</title><rect x="811" y="404" width="4" height="15" fill="rgb(219,152,38)"/><text x="814.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.29%)</title><rect x="815" y="372" width="3" height="15" fill="rgb(223,82,47)"/><text x="818.00" y="382.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.29%)</title><rect x="815" y="388" width="3" height="15" fill="rgb(224,49,53)"/><text x="818.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.58%)</title><rect x="815" y="340" width="6" height="15" fill="rgb(215,102,54)"/><text x="818.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.58%)</title><rect x="815" y="356" width="6" height="15" fill="rgb(230,69,17)"/><text x="818.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.29%)</title><rect x="818" y="372" width="3" height="15" fill="rgb(245,168,18)"/><text x="821.00" y="382.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.29%)</title><rect x="821" y="340" width="4" height="15" fill="rgb(233,147,51)"/><text x="824.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (131 samples, 38.19%)</title><rect x="378" y="292" width="450" height="15" fill="rgb(220,90,37)"/><text x="381.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.79%)</title><rect x="784" y="308" width="44" height="15" fill="rgb(227,136,12)"/><text x="787.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.50%)</title><rect x="787" y="324" width="41" height="15" fill="rgb(219,60,34)"/><text x="790.00" y="334.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.29%)</title><rect x="825" y="340" width="3" height="15" fill="rgb(207,43,15)"/><text x="828.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.29%)</title><rect x="825" y="356" width="3" height="15" fill="rgb(222,68,25)"/><text x="828.00" y="366.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.29%)</title><rect x="825" y="372" width="3" height="15" fill="rgb(205,114,52)"/><text x="828.00" y="382.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.29%)</title><rect x="832" y="324" width="3" height="15" fill="rgb(241,11,17)"/><text x="835.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.29%)</title><rect x="835" y="340" width="4" height="15" fill="rgb(216,217,48)"/><text x="838.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.29%)</title><rect x="835" y="356" width="4" height="15" fill="rgb(237,101,40)"/><text x="838.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.29%)</title><rect x="835" y="372" width="4" height="15" fill="rgb(244,162,18)"/><text x="838.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="835" y="388" width="4" height="15" fill="rgb(234,26,1)"/><text x="838.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (147 samples, 42.86%)</title><rect x="340" y="260" width="505" height="15" fill="rgb(227,210,10)"/><text x="343.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (146 samples, 42.57%)</title><rect x="343" y="276" width="502" height="15" fill="rgb(212,56,44)"/><text x="346.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.46%)</title><rect x="828" y="292" width="17" height="15" fill="rgb(211,68,27)"/><text x="831.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.46%)</title><rect x="828" y="308" width="17" height="15" fill="rgb(231,4,37)"/><text x="831.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.87%)</title><rect x="835" y="324" width="10" height="15" fill="rgb(208,171,38)"/><text x="838.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.58%)</title><rect x="839" y="340" width="6" height="15" fill="rgb(206,219,40)"/><text x="842.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.58%)</title><rect x="839" y="356" width="6" height="15" fill="rgb(238,36,12)"/><text x="842.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.29%)</title><rect x="842" y="372" width="3" height="15" fill="rgb(221,92,40)"/><text x="845.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.29%)</title><rect x="842" y="388" width="3" height="15" fill="rgb(221,15,12)"/><text x="845.00" y="398.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (1 samples, 0.29%)</title><rect x="842" y="404" width="3" height="15" fill="rgb(238,92,2)"/><text x="845.00" y="414.50"></text></g><g><title>__exit__ (joblib/parallel.py) (4 samples, 1.17%)</title><rect x="845" y="260" width="14" height="15" fill="rgb(242,104,37)"/><text x="848.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (3 samples, 0.87%)</title><rect x="849" y="276" width="10" height="15" fill="rgb(246,76,20)"/><text x="852.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (178 samples, 51.90%)</title><rect x="288" y="212" width="613" height="15" fill="rgb(227,203,5)"/><text x="291.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (167 samples, 48.69%)</title><rect x="326" y="228" width="575" height="15" fill="rgb(235,145,39)"/><text x="329.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (166 samples, 48.40%)</title><rect x="329" y="244" width="572" height="15" fill="rgb(212,121,22)"/><text x="332.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (12 samples, 3.50%)</title><rect x="859" y="260" width="42" height="15" fill="rgb(250,72,21)"/><text x="862.00" y="270.50">__i..</text></g><g><title>_dispatch (joblib/parallel.py) (189 samples, 55.10%)</title><rect x="257" y="196" width="650" height="15" fill="rgb(205,87,19)"/><text x="260.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (2 samples, 0.58%)</title><rect x="901" y="212" width="6" height="15" fill="rgb(240,225,2)"/><text x="904.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.29%)</title><rect x="904" y="228" width="3" height="15" fill="rgb(209,216,47)"/><text x="907.00" y="238.50"></text></g><g><title>__enter__ (threading.py) (2 samples, 0.58%)</title><rect x="949" y="212" width="7" height="15" fill="rgb(247,111,1)"/><text x="952.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.29%)</title><rect x="952" y="228" width="4" height="15" fill="rgb(229,2,3)"/><text x="955.00" y="238.50"></text></g><g><title>__exit__ (threading.py) (3 samples, 0.87%)</title><rect x="956" y="212" width="10" height="15" fill="rgb(213,205,3)"/><text x="959.00" y="222.50"></text></g><g><title>_get (queue.py) (1 samples, 0.29%)</title><rect x="966" y="212" width="3" height="15" fill="rgb(209,213,7)"/><text x="969.00" y="222.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.29%)</title><rect x="969" y="212" width="4" height="15" fill="rgb(232,177,15)"/><text x="972.00" y="222.50"></text></g><g><title>get (queue.py) (24 samples, 7.00%)</title><rect x="907" y="196" width="83" height="15" fill="rgb(246,131,5)"/><text x="910.00" y="206.50">get (queu..</text></g><g><title>notify (threading.py) (5 samples, 1.46%)</title><rect x="973" y="212" width="17" height="15" fill="rgb(249,39,38)"/><text x="976.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (2 samples, 0.58%)</title><rect x="983" y="228" width="7" height="15" fill="rgb(249,213,9)"/><text x="986.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.29%)</title><rect x="987" y="244" width="3" height="15" fill="rgb(248,162,32)"/><text x="990.00" y="254.50"></text></g><g><title>0x7efc07ab5ee0 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1028" y="212" width="3" height="15" fill="rgb(249,196,17)"/><text x="1031.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1031" y="212" width="11" height="15" fill="rgb(251,191,18)"/><text x="1034.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (10 samples, 2.92%)</title><rect x="1042" y="212" width="34" height="15" fill="rgb(218,149,41)"/><text x="1045.00" y="222.50">ge..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.87%)</title><rect x="1066" y="228" width="10" height="15" fill="rgb(248,117,46)"/><text x="1069.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (27 samples, 7.87%)</title><rect x="990" y="196" width="93" height="15" fill="rgb(251,136,4)"/><text x="993.00" y="206.50">get_nested_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="1076" y="212" width="7" height="15" fill="rgb(206,30,17)"/><text x="1079.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (2 samples, 0.58%)</title><rect x="1097" y="212" width="6" height="15" fill="rgb(223,56,52)"/><text x="1100.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.58%)</title><rect x="1097" y="228" width="6" height="15" fill="rgb(250,64,19)"/><text x="1100.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.29%)</title><rect x="1100" y="244" width="3" height="15" fill="rgb(211,197,18)"/><text x="1103.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="1100" y="260" width="3" height="15" fill="rgb(237,35,21)"/><text x="1103.00" y="270.50"></text></g><g><title>__exit__ (threading.py) (3 samples, 0.87%)</title><rect x="1103" y="212" width="11" height="15" fill="rgb(254,114,8)"/><text x="1106.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.29%)</title><rect x="1110" y="228" width="4" height="15" fill="rgb(251,162,3)"/><text x="1113.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.29%)</title><rect x="1110" y="244" width="4" height="15" fill="rgb(224,111,23)"/><text x="1113.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (300 samples, 87.46%)</title><rect x="102" y="180" width="1032" height="15" fill="rgb(251,4,39)"/><text x="105.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (15 samples, 4.37%)</title><rect x="1083" y="196" width="51" height="15" fill="rgb(230,223,43)"/><text x="1086.00" y="206.50">put (..</text></g><g><title>notify (threading.py) (6 samples, 1.75%)</title><rect x="1114" y="212" width="20" height="15" fill="rgb(237,79,30)"/><text x="1117.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.29%)</title><rect x="1131" y="228" width="3" height="15" fill="rgb(212,158,53)"/><text x="1134.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (307 samples, 89.50%)</title><rect x="92" y="164" width="1056" height="15" fill="rgb(207,109,18)"/><text x="95.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (4 samples, 1.17%)</title><rect x="1134" y="180" width="14" height="15" fill="rgb(218,120,34)"/><text x="1137.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="1148" y="164" width="4" height="15" fill="rgb(225,226,9)"/><text x="1151.00" y="174.50"></text></g><g><title>memstr_to_bytes (joblib/disk.py) (1 samples, 0.29%)</title><rect x="1148" y="180" width="4" height="15" fill="rgb(207,174,21)"/><text x="1151.00" y="190.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (3 samples, 0.87%)</title><rect x="1152" y="164" width="10" height="15" fill="rgb(237,71,26)"/><text x="1155.00" y="174.50"></text></g><g><title>full (numpy/core/numeric.py) (2 samples, 0.58%)</title><rect x="1155" y="180" width="7" height="15" fill="rgb(223,55,35)"/><text x="1158.00" y="190.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;) (2 samples, 0.58%)</title><rect x="1155" y="196" width="7" height="15" fill="rgb(243,29,12)"/><text x="1158.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.58%)</title><rect x="1155" y="212" width="7" height="15" fill="rgb(224,52,14)"/><text x="1158.00" y="222.50"></text></g><g><title>array_copyto (multiarraymodule.c) (2 samples, 0.58%)</title><rect x="1155" y="228" width="7" height="15" fill="rgb(249,135,42)"/><text x="1158.00" y="238.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.29%)</title><rect x="1159" y="244" width="3" height="15" fill="rgb(232,93,21)"/><text x="1162.00" y="254.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.29%)</title><rect x="1159" y="260" width="3" height="15" fill="rgb(252,28,10)"/><text x="1162.00" y="270.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.29%)</title><rect x="1159" y="276" width="3" height="15" fill="rgb(218,82,34)"/><text x="1162.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (1 samples, 0.29%)</title><rect x="1162" y="164" width="3" height="15" fill="rgb(237,52,23)"/><text x="1165.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.29%)</title><rect x="1162" y="180" width="3" height="15" fill="rgb(209,0,12)"/><text x="1165.00" y="190.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.29%)</title><rect x="1162" y="196" width="3" height="15" fill="rgb(251,161,44)"/><text x="1165.00" y="206.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (314 samples, 91.55%)</title><rect x="89" y="100" width="1080" height="15" fill="rgb(205,188,47)"/><text x="92.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (314 samples, 91.55%)</title><rect x="89" y="116" width="1080" height="15" fill="rgb(231,126,12)"/><text x="92.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (314 samples, 91.55%)</title><rect x="89" y="132" width="1080" height="15" fill="rgb(254,92,27)"/><text x="92.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (314 samples, 91.55%)</title><rect x="89" y="148" width="1080" height="15" fill="rgb(237,100,43)"/><text x="92.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;) (1 samples, 0.29%)</title><rect x="1165" y="164" width="4" height="15" fill="rgb(218,62,8)"/><text x="1168.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.29%)</title><rect x="1165" y="180" width="4" height="15" fill="rgb(215,195,26)"/><text x="1168.00" y="190.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py) (1 samples, 0.29%)</title><rect x="1165" y="196" width="4" height="15" fill="rgb(253,186,7)"/><text x="1168.00" y="206.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.29%)</title><rect x="1165" y="212" width="4" height="15" fill="rgb(243,219,30)"/><text x="1168.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.29%)</title><rect x="1165" y="228" width="4" height="15" fill="rgb(231,53,12)"/><text x="1168.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.29%)</title><rect x="1165" y="244" width="4" height="15" fill="rgb(225,208,38)"/><text x="1168.00" y="254.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (317 samples, 92.42%)</title><rect x="89" y="68" width="1090" height="15" fill="rgb(252,229,31)"/><text x="92.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (317 samples, 92.42%)</title><rect x="89" y="84" width="1090" height="15" fill="rgb(245,9,48)"/><text x="92.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.87%)</title><rect x="1169" y="100" width="10" height="15" fill="rgb(254,205,29)"/><text x="1172.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (3 samples, 0.87%)</title><rect x="1169" y="116" width="10" height="15" fill="rgb(206,28,26)"/><text x="1172.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (3 samples, 0.87%)</title><rect x="1169" y="132" width="10" height="15" fill="rgb(207,108,25)"/><text x="1172.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1169" y="148" width="10" height="15" fill="rgb(206,126,47)"/><text x="1172.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1169" y="164" width="10" height="15" fill="rgb(218,89,3)"/><text x="1172.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1169" y="180" width="10" height="15" fill="rgb(221,134,44)"/><text x="1172.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="1169" y="196" width="10" height="15" fill="rgb(233,39,45)"/><text x="1172.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1169" y="212" width="10" height="15" fill="rgb(251,159,53)"/><text x="1172.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (3 samples, 0.87%)</title><rect x="1169" y="228" width="10" height="15" fill="rgb(243,92,38)"/><text x="1172.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1169" y="244" width="10" height="15" fill="rgb(241,185,16)"/><text x="1172.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1169" y="260" width="10" height="15" fill="rgb(237,48,9)"/><text x="1172.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="1169" y="276" width="10" height="15" fill="rgb(231,210,7)"/><text x="1172.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="1169" y="292" width="10" height="15" fill="rgb(225,48,47)"/><text x="1172.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="1169" y="308" width="10" height="15" fill="rgb(213,59,28)"/><text x="1172.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="1169" y="324" width="10" height="15" fill="rgb(228,11,17)"/><text x="1172.00" y="334.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="1176" y="340" width="3" height="15" fill="rgb(238,173,17)"/><text x="1179.00" y="350.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;) (1 samples, 0.29%)</title><rect x="1179" y="292" width="4" height="15" fill="rgb(253,160,4)"/><text x="1182.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.29%)</title><rect x="1179" y="308" width="4" height="15" fill="rgb(241,108,41)"/><text x="1182.00" y="318.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py) (1 samples, 0.29%)</title><rect x="1179" y="324" width="4" height="15" fill="rgb(222,194,19)"/><text x="1182.00" y="334.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.58%)</title><rect x="1179" y="260" width="7" height="15" fill="rgb(217,11,51)"/><text x="1182.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.58%)</title><rect x="1179" y="276" width="7" height="15" fill="rgb(247,85,46)"/><text x="1182.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.29%)</title><rect x="1183" y="292" width="3" height="15" fill="rgb(244,121,22)"/><text x="1186.00" y="302.50"></text></g><g><title>0x7efbfa2b2a66 (?) (1 samples, 0.29%)</title><rect x="1183" y="308" width="3" height="15" fill="rgb(234,35,44)"/><text x="1186.00" y="318.50"></text></g><g><title>0x7efbfa2a4579 (?) (1 samples, 0.29%)</title><rect x="1183" y="324" width="3" height="15" fill="rgb(249,191,27)"/><text x="1186.00" y="334.50"></text></g><g><title>0x7efbf9be5713 (?) (1 samples, 0.29%)</title><rect x="1183" y="340" width="3" height="15" fill="rgb(205,192,34)"/><text x="1186.00" y="350.50"></text></g><g><title>0x7efbf9bde884 (?) (1 samples, 0.29%)</title><rect x="1183" y="356" width="3" height="15" fill="rgb(226,202,38)"/><text x="1186.00" y="366.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.29%)</title><rect x="1183" y="372" width="3" height="15" fill="rgb(209,37,16)"/><text x="1186.00" y="382.50"></text></g><g><title>0x7efbf99c0dcf (?) (1 samples, 0.29%)</title><rect x="1183" y="388" width="3" height="15" fill="rgb(229,185,44)"/><text x="1186.00" y="398.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.29%)</title><rect x="1183" y="404" width="3" height="15" fill="rgb(247,91,2)"/><text x="1186.00" y="414.50"></text></g><g><title>get_item_pointer (mapping.c) (1 samples, 0.29%)</title><rect x="1183" y="420" width="3" height="15" fill="rgb(216,8,25)"/><text x="1186.00" y="430.50"></text></g><g><title>all (343 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,163,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (343 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(206,201,10)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py) (3 samples, 0.87%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(238,105,52)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (3 samples, 0.87%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(231,149,30)"/><text x="1182.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.87%)</title><rect x="1179" y="100" width="11" height="15" fill="rgb(242,178,13)"/><text x="1182.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (3 samples, 0.87%)</title><rect x="1179" y="116" width="11" height="15" fill="rgb(208,48,9)"/><text x="1182.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.87%)</title><rect x="1179" y="132" width="11" height="15" fill="rgb(230,31,44)"/><text x="1182.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (3 samples, 0.87%)</title><rect x="1179" y="148" width="11" height="15" fill="rgb(235,83,48)"/><text x="1182.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (3 samples, 0.87%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(215,144,6)"/><text x="1182.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (3 samples, 0.87%)</title><rect x="1179" y="180" width="11" height="15" fill="rgb(217,48,9)"/><text x="1182.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.87%)</title><rect x="1179" y="196" width="11" height="15" fill="rgb(239,105,47)"/><text x="1182.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.87%)</title><rect x="1179" y="212" width="11" height="15" fill="rgb(239,138,28)"/><text x="1182.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (3 samples, 0.87%)</title><rect x="1179" y="228" width="11" height="15" fill="rgb(249,135,9)"/><text x="1182.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (3 samples, 0.87%)</title><rect x="1179" y="244" width="11" height="15" fill="rgb(226,119,21)"/><text x="1182.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(227,4,2)"/><text x="1189.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(215,69,42)"/><text x="1189.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(235,225,43)"/><text x="1189.00" y="302.50"></text></g></g></svg>