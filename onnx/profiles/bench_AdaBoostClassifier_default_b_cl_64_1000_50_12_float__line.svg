<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.11%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(245,111,45)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:71) (1 samples, 0.11%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(206,186,50)"/><text x="13.00" y="206.50"></text></g><g><title>clone (sklearn/base.py:62) (1 samples, 0.11%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(221,98,28)"/><text x="13.00" y="222.50"></text></g><g><title>deepcopy (copy.py:150) (1 samples, 0.11%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(242,189,16)"/><text x="13.00" y="238.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (2 samples, 0.22%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(227,12,26)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.11%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(245,176,25)"/><text x="14.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.11%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(230,68,21)"/><text x="14.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.11%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(216,157,40)"/><text x="14.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.11%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(250,64,11)"/><text x="14.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.11%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(254,145,54)"/><text x="14.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.11%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(225,8,11)"/><text x="14.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.11%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(216,125,21)"/><text x="14.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.11%)</title><rect x="11" y="292" width="1" height="15" fill="rgb(211,115,5)"/><text x="14.00" y="302.50"></text></g><g><title>fit (sklearn/tree/_classes.py:149) (1 samples, 0.11%)</title><rect x="12" y="196" width="1" height="15" fill="rgb(216,135,18)"/><text x="15.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="12" y="212" width="1" height="15" fill="rgb(209,93,50)"/><text x="15.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (1 samples, 0.11%)</title><rect x="12" y="228" width="1" height="15" fill="rgb(237,59,19)"/><text x="15.00" y="238.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:704) (1 samples, 0.11%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(207,43,39)"/><text x="15.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="12" y="260" width="1" height="15" fill="rgb(222,218,35)"/><text x="15.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="12" y="276" width="1" height="15" fill="rgb(248,192,13)"/><text x="15.00" y="286.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.11%)</title><rect x="12" y="292" width="1" height="15" fill="rgb(212,85,38)"/><text x="15.00" y="302.50"></text></g><g><title>fit (sklearn/tree/_classes.py:150) (1 samples, 0.11%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(252,33,14)"/><text x="16.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="13" y="212" width="2" height="15" fill="rgb(234,77,28)"/><text x="16.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.11%)</title><rect x="13" y="228" width="2" height="15" fill="rgb(230,99,25)"/><text x="16.00" y="238.50"></text></g><g><title>fit (sklearn/tree/_classes.py:173) (1 samples, 0.11%)</title><rect x="15" y="196" width="1" height="15" fill="rgb(242,101,39)"/><text x="18.00" y="206.50"></text></g><g><title>check_classification_targets (sklearn/utils/multiclass.py:166) (1 samples, 0.11%)</title><rect x="15" y="212" width="1" height="15" fill="rgb(224,131,17)"/><text x="18.00" y="222.50"></text></g><g><title>type_of_target (sklearn/utils/multiclass.py:287) (1 samples, 0.11%)</title><rect x="15" y="228" width="1" height="15" fill="rgb(209,119,21)"/><text x="18.00" y="238.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="15" y="244" width="1" height="15" fill="rgb(247,130,42)"/><text x="18.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="15" y="260" width="1" height="15" fill="rgb(246,2,51)"/><text x="18.00" y="270.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:262) (1 samples, 0.11%)</title><rect x="15" y="276" width="1" height="15" fill="rgb(208,120,54)"/><text x="18.00" y="286.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:314) (1 samples, 0.11%)</title><rect x="15" y="292" width="1" height="15" fill="rgb(227,149,39)"/><text x="18.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:31) (6 samples, 0.66%)</title><rect x="10" y="52" width="7" height="15" fill="rgb(240,129,27)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:11) (6 samples, 0.66%)</title><rect x="10" y="68" width="7" height="15" fill="rgb(235,193,43)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:39) (6 samples, 0.66%)</title><rect x="10" y="84" width="7" height="15" fill="rgb(226,226,33)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (6 samples, 0.66%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(252,33,24)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (6 samples, 0.66%)</title><rect x="10" y="116" width="7" height="15" fill="rgb(215,103,47)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (6 samples, 0.66%)</title><rect x="10" y="132" width="7" height="15" fill="rgb(253,52,38)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (6 samples, 0.66%)</title><rect x="10" y="148" width="7" height="15" fill="rgb(236,87,9)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (4 samples, 0.44%)</title><rect x="12" y="164" width="5" height="15" fill="rgb(243,73,3)"/><text x="15.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (4 samples, 0.44%)</title><rect x="12" y="180" width="5" height="15" fill="rgb(252,122,35)"/><text x="15.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:280) (1 samples, 0.11%)</title><rect x="16" y="196" width="1" height="15" fill="rgb(213,141,6)"/><text x="19.00" y="206.50"></text></g><g><title>_check_sample_weight (sklearn/utils/validation.py:1231) (1 samples, 0.11%)</title><rect x="16" y="212" width="1" height="15" fill="rgb(239,47,26)"/><text x="19.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="16" y="228" width="1" height="15" fill="rgb(245,164,21)"/><text x="19.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (1 samples, 0.11%)</title><rect x="16" y="244" width="1" height="15" fill="rgb(239,201,37)"/><text x="19.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="16" y="260" width="1" height="15" fill="rgb(211,136,47)"/><text x="19.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="16" y="276" width="1" height="15" fill="rgb(234,132,26)"/><text x="19.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2007) (1 samples, 0.11%)</title><rect x="16" y="292" width="1" height="15" fill="rgb(244,216,50)"/><text x="19.00" y="302.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:58) (1 samples, 0.11%)</title><rect x="17" y="260" width="2" height="15" fill="rgb(210,86,9)"/><text x="20.00" y="270.50"></text></g><g><title>google::protobuf::python::cmessage::SetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(237,12,27)"/><text x="20.00" y="286.50"></text></g><g><title>google::protobuf::python::cmessage::InternalSetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(207,167,46)"/><text x="20.00" y="302.50"></text></g><g><title>google::protobuf::python::cmessage::InternalSetNonOneofScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(210,28,22)"/><text x="20.00" y="318.50"></text></g><g><title>google::protobuf::python::CheckAndSetString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="17" y="324" width="2" height="15" fill="rgb(246,75,14)"/><text x="20.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::SetString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="17" y="340" width="2" height="15" fill="rgb(235,40,52)"/><text x="20.00" y="350.50"></text></g><g><title>0x7ff4bf184550 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="17" y="356" width="2" height="15" fill="rgb(226,124,45)"/><text x="20.00" y="366.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:28) (2 samples, 0.22%)</title><rect x="17" y="84" width="3" height="15" fill="rgb(240,29,47)"/><text x="20.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.22%)</title><rect x="17" y="100" width="3" height="15" fill="rgb(234,213,32)"/><text x="20.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.22%)</title><rect x="17" y="116" width="3" height="15" fill="rgb(221,226,30)"/><text x="20.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.22%)</title><rect x="17" y="132" width="3" height="15" fill="rgb(225,140,20)"/><text x="20.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.22%)</title><rect x="17" y="148" width="3" height="15" fill="rgb(211,152,4)"/><text x="20.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.22%)</title><rect x="17" y="164" width="3" height="15" fill="rgb(217,20,25)"/><text x="20.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.22%)</title><rect x="17" y="180" width="3" height="15" fill="rgb(224,131,15)"/><text x="20.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:254) (2 samples, 0.22%)</title><rect x="17" y="196" width="3" height="15" fill="rgb(241,184,1)"/><text x="20.00" y="206.50"></text></g><g><title>_normalise_probability (skl2onnx/operator_converters/ada_boost.py:141) (2 samples, 0.22%)</title><rect x="17" y="212" width="3" height="15" fill="rgb(219,190,12)"/><text x="20.00" y="222.50"></text></g><g><title>apply_cast (onnxconverter_common/onnx_ops.py:169) (2 samples, 0.22%)</title><rect x="17" y="228" width="3" height="15" fill="rgb(229,56,46)"/><text x="20.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (2 samples, 0.22%)</title><rect x="17" y="244" width="3" height="15" fill="rgb(211,194,18)"/><text x="20.00" y="254.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.11%)</title><rect x="19" y="260" width="1" height="15" fill="rgb(232,79,47)"/><text x="22.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (3 samples, 0.33%)</title><rect x="20" y="212" width="4" height="15" fill="rgb(226,142,23)"/><text x="23.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="22" y="228" width="2" height="15" fill="rgb(232,48,15)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.11%)</title><rect x="22" y="244" width="2" height="15" fill="rgb(245,21,43)"/><text x="25.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="22" y="260" width="2" height="15" fill="rgb(210,201,28)"/><text x="25.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.11%)</title><rect x="24" y="244" width="1" height="15" fill="rgb(205,124,46)"/><text x="27.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="25" y="244" width="1" height="15" fill="rgb(234,11,22)"/><text x="28.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="25" y="260" width="1" height="15" fill="rgb(236,123,41)"/><text x="28.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="26" y="244" width="2" height="15" fill="rgb(226,182,54)"/><text x="29.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.22%)</title><rect x="28" y="244" width="2" height="15" fill="rgb(241,16,15)"/><text x="31.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.22%)</title><rect x="28" y="260" width="2" height="15" fill="rgb(251,52,12)"/><text x="31.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.22%)</title><rect x="28" y="276" width="2" height="15" fill="rgb(222,44,28)"/><text x="31.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.11%)</title><rect x="30" y="244" width="2" height="15" fill="rgb(212,33,44)"/><text x="33.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.33%)</title><rect x="32" y="260" width="3" height="15" fill="rgb(254,183,38)"/><text x="35.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.22%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(240,161,3)"/><text x="36.00" y="286.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.11%)</title><rect x="34" y="292" width="1" height="15" fill="rgb(216,75,17)"/><text x="37.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.44%)</title><rect x="32" y="244" width="5" height="15" fill="rgb(214,215,39)"/><text x="35.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.11%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(254,144,13)"/><text x="38.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.11%)</title><rect x="37" y="260" width="1" height="15" fill="rgb(248,133,23)"/><text x="40.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="37" y="276" width="1" height="15" fill="rgb(239,142,12)"/><text x="40.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.22%)</title><rect x="38" y="260" width="3" height="15" fill="rgb(254,96,15)"/><text x="41.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.11%)</title><rect x="41" y="260" width="1" height="15" fill="rgb(236,153,45)"/><text x="44.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (15 samples, 1.65%)</title><rect x="24" y="212" width="19" height="15" fill="rgb(224,97,27)"/><text x="27.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (15 samples, 1.65%)</title><rect x="24" y="228" width="19" height="15" fill="rgb(248,207,47)"/><text x="27.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.55%)</title><rect x="37" y="244" width="6" height="15" fill="rgb(219,228,48)"/><text x="40.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="42" y="260" width="1" height="15" fill="rgb(236,163,24)"/><text x="45.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.11%)</title><rect x="42" y="276" width="1" height="15" fill="rgb(251,24,33)"/><text x="45.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.11%)</title><rect x="42" y="292" width="1" height="15" fill="rgb(238,70,16)"/><text x="45.00" y="302.50"></text></g><g><title>0x7ff4aa881f61 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="43" y="244" width="1" height="15" fill="rgb(219,93,41)"/><text x="46.00" y="254.50"></text></g><g><title>0x7ff4aa890684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="44" y="276" width="2" height="15" fill="rgb(206,173,36)"/><text x="47.00" y="286.50"></text></g><g><title>0x7ff4aa89069b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="46" y="276" width="1" height="15" fill="rgb(236,35,26)"/><text x="49.00" y="286.50"></text></g><g><title>0x7ff4aa8906aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="47" y="276" width="1" height="15" fill="rgb(252,208,18)"/><text x="50.00" y="286.50"></text></g><g><title>0x7ff4aa8906e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="276" width="2" height="15" fill="rgb(222,73,48)"/><text x="51.00" y="286.50"></text></g><g><title>0x7ff4aa881fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.55%)</title><rect x="44" y="244" width="7" height="15" fill="rgb(211,227,35)"/><text x="47.00" y="254.50"></text></g><g><title>0x7ff4aa891405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.55%)</title><rect x="44" y="260" width="7" height="15" fill="rgb(252,148,33)"/><text x="47.00" y="270.50"></text></g><g><title>0x7ff4aa890c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="50" y="276" width="1" height="15" fill="rgb(239,209,21)"/><text x="53.00" y="286.50"></text></g><g><title>0x7ff4aa868529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="50" y="292" width="1" height="15" fill="rgb(236,138,39)"/><text x="53.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="50" y="308" width="1" height="15" fill="rgb(244,213,13)"/><text x="53.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.11%)</title><rect x="50" y="324" width="1" height="15" fill="rgb(234,224,50)"/><text x="53.00" y="334.50"></text></g><g><title>0x7ff4aa881fbc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="51" y="244" width="1" height="15" fill="rgb(232,189,12)"/><text x="54.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.11%)</title><rect x="52" y="260" width="2" height="15" fill="rgb(220,200,30)"/><text x="55.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.11%)</title><rect x="54" y="292" width="1" height="15" fill="rgb(252,28,51)"/><text x="57.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="54" y="308" width="1" height="15" fill="rgb(214,223,20)"/><text x="57.00" y="318.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3950) (1 samples, 0.11%)</title><rect x="55" y="292" width="1" height="15" fill="rgb(213,187,4)"/><text x="58.00" y="302.50"></text></g><g><title>0x7ff4aa88205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.44%)</title><rect x="52" y="244" width="5" height="15" fill="rgb(207,142,20)"/><text x="55.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.33%)</title><rect x="54" y="260" width="3" height="15" fill="rgb(206,11,23)"/><text x="57.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.33%)</title><rect x="54" y="276" width="3" height="15" fill="rgb(228,156,23)"/><text x="57.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.11%)</title><rect x="56" y="292" width="1" height="15" fill="rgb(235,193,8)"/><text x="59.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (12 samples, 1.32%)</title><rect x="43" y="212" width="16" height="15" fill="rgb(210,229,14)"/><text x="46.00" y="222.50"></text></g><g><title>0x7ff4aa882d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.32%)</title><rect x="43" y="228" width="16" height="15" fill="rgb(222,153,27)"/><text x="46.00" y="238.50"></text></g><g><title>0x7ff4aa882328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(245,104,39)"/><text x="60.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="57" y="260" width="2" height="15" fill="rgb(221,34,43)"/><text x="60.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="57" y="276" width="2" height="15" fill="rgb(245,52,53)"/><text x="60.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="57" y="292" width="2" height="15" fill="rgb(217,90,48)"/><text x="60.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.11%)</title><rect x="57" y="308" width="2" height="15" fill="rgb(220,127,44)"/><text x="60.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:165) (1 samples, 0.11%)</title><rect x="57" y="324" width="2" height="15" fill="rgb(219,216,6)"/><text x="60.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (3 samples, 0.33%)</title><rect x="59" y="212" width="4" height="15" fill="rgb(230,3,48)"/><text x="62.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="61" y="228" width="2" height="15" fill="rgb(207,37,38)"/><text x="64.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.11%)</title><rect x="61" y="244" width="2" height="15" fill="rgb(237,18,7)"/><text x="64.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="63" y="308" width="1" height="15" fill="rgb(213,119,41)"/><text x="66.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.11%)</title><rect x="63" y="324" width="1" height="15" fill="rgb(233,102,43)"/><text x="66.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="64" y="324" width="1" height="15" fill="rgb(210,183,6)"/><text x="67.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="64" y="340" width="1" height="15" fill="rgb(242,209,36)"/><text x="67.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="64" y="356" width="1" height="15" fill="rgb(243,60,26)"/><text x="67.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.11%)</title><rect x="64" y="372" width="1" height="15" fill="rgb(211,71,3)"/><text x="67.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.11%)</title><rect x="64" y="388" width="1" height="15" fill="rgb(219,175,47)"/><text x="67.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:237) (1 samples, 0.11%)</title><rect x="65" y="340" width="1" height="15" fill="rgb(249,135,44)"/><text x="68.00" y="350.50"></text></g><g><title>0x7ff4d0e5f14a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="65" y="356" width="1" height="15" fill="rgb(243,220,18)"/><text x="68.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="65" y="324" width="3" height="15" fill="rgb(236,1,23)"/><text x="68.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="66" y="340" width="2" height="15" fill="rgb(237,74,7)"/><text x="69.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3171) (1 samples, 0.11%)</title><rect x="66" y="356" width="2" height="15" fill="rgb(236,67,33)"/><text x="69.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="68" y="340" width="1" height="15" fill="rgb(253,166,44)"/><text x="71.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.22%)</title><rect x="69" y="356" width="3" height="15" fill="rgb(240,174,43)"/><text x="72.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="73" y="372" width="1" height="15" fill="rgb(242,145,35)"/><text x="76.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.44%)</title><rect x="72" y="356" width="5" height="15" fill="rgb(206,45,21)"/><text x="75.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (2 samples, 0.22%)</title><rect x="74" y="372" width="3" height="15" fill="rgb(254,218,3)"/><text x="77.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="77" y="356" width="1" height="15" fill="rgb(211,206,1)"/><text x="80.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="78" y="356" width="1" height="15" fill="rgb(215,206,1)"/><text x="81.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (14 samples, 1.54%)</title><rect x="63" y="212" width="18" height="15" fill="rgb(233,124,15)"/><text x="66.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 1.54%)</title><rect x="63" y="228" width="18" height="15" fill="rgb(237,191,15)"/><text x="66.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 1.54%)</title><rect x="63" y="244" width="18" height="15" fill="rgb(205,105,25)"/><text x="66.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 1.54%)</title><rect x="63" y="260" width="18" height="15" fill="rgb(248,201,19)"/><text x="66.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 1.54%)</title><rect x="63" y="276" width="18" height="15" fill="rgb(228,78,16)"/><text x="66.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 1.54%)</title><rect x="63" y="292" width="18" height="15" fill="rgb(221,60,12)"/><text x="66.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 1.43%)</title><rect x="64" y="308" width="17" height="15" fill="rgb(235,46,23)"/><text x="67.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.10%)</title><rect x="68" y="324" width="13" height="15" fill="rgb(241,197,41)"/><text x="71.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 0.99%)</title><rect x="69" y="340" width="12" height="15" fill="rgb(244,222,44)"/><text x="72.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="79" y="356" width="2" height="15" fill="rgb(246,133,17)"/><text x="82.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.11%)</title><rect x="81" y="228" width="1" height="15" fill="rgb(232,142,17)"/><text x="84.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.11%)</title><rect x="81" y="244" width="1" height="15" fill="rgb(239,200,35)"/><text x="84.00" y="254.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:112) (1 samples, 0.11%)</title><rect x="81" y="260" width="1" height="15" fill="rgb(238,139,28)"/><text x="84.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="82" y="260" width="1" height="15" fill="rgb(230,53,35)"/><text x="85.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:336) (1 samples, 0.11%)</title><rect x="82" y="276" width="1" height="15" fill="rgb(224,199,26)"/><text x="85.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="83" y="260" width="2" height="15" fill="rgb(244,108,32)"/><text x="86.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="83" y="276" width="2" height="15" fill="rgb(245,221,0)"/><text x="86.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (4 samples, 0.44%)</title><rect x="81" y="212" width="5" height="15" fill="rgb(241,159,6)"/><text x="84.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (3 samples, 0.33%)</title><rect x="82" y="228" width="4" height="15" fill="rgb(205,177,51)"/><text x="85.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="82" y="244" width="4" height="15" fill="rgb(252,41,6)"/><text x="85.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="85" y="260" width="1" height="15" fill="rgb(230,95,2)"/><text x="88.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.11%)</title><rect x="85" y="276" width="1" height="15" fill="rgb(241,129,22)"/><text x="88.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="85" y="292" width="1" height="15" fill="rgb(240,225,37)"/><text x="88.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="85" y="308" width="1" height="15" fill="rgb(230,24,12)"/><text x="88.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="85" y="324" width="1" height="15" fill="rgb(218,200,44)"/><text x="88.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.11%)</title><rect x="85" y="340" width="1" height="15" fill="rgb(236,166,18)"/><text x="88.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2757) (1 samples, 0.11%)</title><rect x="86" y="308" width="1" height="15" fill="rgb(226,96,4)"/><text x="89.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="86" y="276" width="3" height="15" fill="rgb(240,23,13)"/><text x="89.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.22%)</title><rect x="86" y="292" width="3" height="15" fill="rgb(223,85,39)"/><text x="89.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3034) (1 samples, 0.11%)</title><rect x="87" y="308" width="2" height="15" fill="rgb(218,118,26)"/><text x="90.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="89" y="324" width="2" height="15" fill="rgb(234,182,46)"/><text x="92.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.22%)</title><rect x="89" y="340" width="2" height="15" fill="rgb(220,149,31)"/><text x="92.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.33%)</title><rect x="89" y="276" width="3" height="15" fill="rgb(229,110,7)"/><text x="92.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.33%)</title><rect x="89" y="292" width="3" height="15" fill="rgb(236,86,37)"/><text x="92.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.33%)</title><rect x="89" y="308" width="3" height="15" fill="rgb(227,99,39)"/><text x="92.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.11%)</title><rect x="91" y="324" width="1" height="15" fill="rgb(249,203,50)"/><text x="94.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.66%)</title><rect x="86" y="244" width="8" height="15" fill="rgb(244,15,53)"/><text x="89.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.66%)</title><rect x="86" y="260" width="8" height="15" fill="rgb(245,162,41)"/><text x="89.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="92" y="276" width="2" height="15" fill="rgb(219,27,22)"/><text x="95.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="92" y="292" width="2" height="15" fill="rgb(250,163,17)"/><text x="95.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="92" y="308" width="2" height="15" fill="rgb(239,169,32)"/><text x="95.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="92" y="324" width="2" height="15" fill="rgb(223,88,10)"/><text x="95.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="92" y="340" width="2" height="15" fill="rgb(243,26,14)"/><text x="95.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (58 samples, 6.37%)</title><rect x="20" y="196" width="75" height="15" fill="rgb(215,71,44)"/><text x="23.00" y="206.50">_samme_p..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (7 samples, 0.77%)</title><rect x="86" y="212" width="9" height="15" fill="rgb(217,181,43)"/><text x="89.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="86" y="228" width="9" height="15" fill="rgb(213,85,42)"/><text x="89.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.11%)</title><rect x="94" y="244" width="1" height="15" fill="rgb(216,69,23)"/><text x="97.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="95" y="212" width="1" height="15" fill="rgb(230,139,21)"/><text x="98.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.11%)</title><rect x="95" y="228" width="1" height="15" fill="rgb(232,48,49)"/><text x="98.00" y="238.50"></text></g><g><title>0x7ff4d0e54730 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="95" y="244" width="1" height="15" fill="rgb(223,70,48)"/><text x="98.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="96" y="228" width="2" height="15" fill="rgb(245,135,17)"/><text x="99.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.11%)</title><rect x="96" y="244" width="2" height="15" fill="rgb(233,28,8)"/><text x="99.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.11%)</title><rect x="96" y="260" width="2" height="15" fill="rgb(240,108,15)"/><text x="99.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="96" y="276" width="2" height="15" fill="rgb(245,78,40)"/><text x="99.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="96" y="292" width="2" height="15" fill="rgb(215,153,31)"/><text x="99.00" y="302.50"></text></g><g><title>0x7ff4d0f1cff4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="98" y="260" width="1" height="15" fill="rgb(215,7,52)"/><text x="101.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.11%)</title><rect x="99" y="260" width="1" height="15" fill="rgb(244,17,11)"/><text x="102.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:63) (1 samples, 0.11%)</title><rect x="100" y="324" width="1" height="15" fill="rgb(215,224,53)"/><text x="103.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="101" y="324" width="2" height="15" fill="rgb(226,130,27)"/><text x="104.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="101" y="340" width="2" height="15" fill="rgb(237,202,42)"/><text x="104.00" y="350.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="101" y="356" width="2" height="15" fill="rgb(248,207,18)"/><text x="104.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="104" y="340" width="1" height="15" fill="rgb(212,159,29)"/><text x="107.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="105" y="372" width="2" height="15" fill="rgb(253,196,33)"/><text x="108.00" y="382.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:547) (1 samples, 0.11%)</title><rect x="108" y="420" width="1" height="15" fill="rgb(215,13,26)"/><text x="111.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 0.33%)</title><rect x="107" y="404" width="4" height="15" fill="rgb(220,157,25)"/><text x="110.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="109" y="420" width="2" height="15" fill="rgb(210,152,1)"/><text x="112.00" y="430.50"></text></g><g><title>0x7ff4d0f1c130 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="109" y="436" width="2" height="15" fill="rgb(254,203,9)"/><text x="112.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 0.88%)</title><rect x="103" y="324" width="10" height="15" fill="rgb(224,211,35)"/><text x="106.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 0.66%)</title><rect x="105" y="340" width="8" height="15" fill="rgb(230,73,23)"/><text x="108.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.66%)</title><rect x="105" y="356" width="8" height="15" fill="rgb(237,120,1)"/><text x="108.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 0.55%)</title><rect x="107" y="372" width="6" height="15" fill="rgb(240,154,2)"/><text x="110.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 0.55%)</title><rect x="107" y="388" width="6" height="15" fill="rgb(254,171,26)"/><text x="110.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.22%)</title><rect x="111" y="404" width="2" height="15" fill="rgb(224,173,17)"/><text x="114.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.22%)</title><rect x="111" y="420" width="2" height="15" fill="rgb(241,91,37)"/><text x="114.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.22%)</title><rect x="111" y="436" width="2" height="15" fill="rgb(243,216,19)"/><text x="114.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.22%)</title><rect x="111" y="452" width="2" height="15" fill="rgb(238,155,39)"/><text x="114.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.11%)</title><rect x="113" y="356" width="1" height="15" fill="rgb(247,178,11)"/><text x="116.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.11%)</title><rect x="114" y="372" width="2" height="15" fill="rgb(232,125,52)"/><text x="117.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="116" y="372" width="1" height="15" fill="rgb(242,212,39)"/><text x="119.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.11%)</title><rect x="116" y="388" width="1" height="15" fill="rgb(206,221,43)"/><text x="119.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.11%)</title><rect x="116" y="404" width="1" height="15" fill="rgb(225,174,35)"/><text x="119.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.11%)</title><rect x="116" y="420" width="1" height="15" fill="rgb(228,49,42)"/><text x="119.00" y="430.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:412) (1 samples, 0.11%)</title><rect x="116" y="436" width="1" height="15" fill="rgb(231,78,51)"/><text x="119.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (14 samples, 1.54%)</title><rect x="100" y="308" width="18" height="15" fill="rgb(225,166,26)"/><text x="103.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.44%)</title><rect x="113" y="324" width="5" height="15" fill="rgb(217,156,41)"/><text x="116.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.44%)</title><rect x="113" y="340" width="5" height="15" fill="rgb(246,84,47)"/><text x="116.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.33%)</title><rect x="114" y="356" width="4" height="15" fill="rgb(237,148,52)"/><text x="117.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.11%)</title><rect x="117" y="372" width="1" height="15" fill="rgb(233,129,34)"/><text x="120.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.11%)</title><rect x="121" y="388" width="1" height="15" fill="rgb(223,223,44)"/><text x="124.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="121" y="404" width="1" height="15" fill="rgb(209,22,46)"/><text x="124.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1869) (1 samples, 0.11%)</title><rect x="122" y="404" width="1" height="15" fill="rgb(229,10,0)"/><text x="125.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (7 samples, 0.77%)</title><rect x="118" y="308" width="9" height="15" fill="rgb(207,58,47)"/><text x="121.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (5 samples, 0.55%)</title><rect x="121" y="324" width="6" height="15" fill="rgb(234,39,28)"/><text x="124.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.55%)</title><rect x="121" y="340" width="6" height="15" fill="rgb(243,197,18)"/><text x="124.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.55%)</title><rect x="121" y="356" width="6" height="15" fill="rgb(216,222,28)"/><text x="124.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (5 samples, 0.55%)</title><rect x="121" y="372" width="6" height="15" fill="rgb(222,197,11)"/><text x="124.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.44%)</title><rect x="122" y="388" width="5" height="15" fill="rgb(251,152,32)"/><text x="125.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (3 samples, 0.33%)</title><rect x="123" y="404" width="4" height="15" fill="rgb(247,220,42)"/><text x="126.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (26 samples, 2.85%)</title><rect x="95" y="196" width="34" height="15" fill="rgb(249,16,13)"/><text x="98.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (25 samples, 2.74%)</title><rect x="96" y="212" width="33" height="15" fill="rgb(245,195,27)"/><text x="99.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (24 samples, 2.63%)</title><rect x="98" y="228" width="31" height="15" fill="rgb(241,106,7)"/><text x="101.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (24 samples, 2.63%)</title><rect x="98" y="244" width="31" height="15" fill="rgb(226,99,52)"/><text x="101.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (22 samples, 2.41%)</title><rect x="100" y="260" width="29" height="15" fill="rgb(223,75,7)"/><text x="103.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (22 samples, 2.41%)</title><rect x="100" y="276" width="29" height="15" fill="rgb(205,51,5)"/><text x="103.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (22 samples, 2.41%)</title><rect x="100" y="292" width="29" height="15" fill="rgb(243,134,19)"/><text x="103.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:98) (1 samples, 0.11%)</title><rect x="127" y="308" width="2" height="15" fill="rgb(223,106,54)"/><text x="130.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="129" y="228" width="1" height="15" fill="rgb(227,74,23)"/><text x="132.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2002) (1 samples, 0.11%)</title><rect x="129" y="244" width="1" height="15" fill="rgb(253,223,11)"/><text x="132.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="130" y="228" width="1" height="15" fill="rgb(227,213,8)"/><text x="133.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.11%)</title><rect x="130" y="244" width="1" height="15" fill="rgb(240,49,28)"/><text x="133.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.11%)</title><rect x="130" y="260" width="1" height="15" fill="rgb(218,3,31)"/><text x="133.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (2 samples, 0.22%)</title><rect x="131" y="244" width="3" height="15" fill="rgb(233,219,36)"/><text x="134.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="131" y="260" width="3" height="15" fill="rgb(236,135,5)"/><text x="134.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.22%)</title><rect x="131" y="276" width="3" height="15" fill="rgb(219,22,9)"/><text x="134.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.22%)</title><rect x="131" y="292" width="3" height="15" fill="rgb(225,74,40)"/><text x="134.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.22%)</title><rect x="131" y="308" width="3" height="15" fill="rgb(235,91,35)"/><text x="134.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.22%)</title><rect x="131" y="324" width="3" height="15" fill="rgb(248,145,53)"/><text x="134.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="131" y="340" width="3" height="15" fill="rgb(212,127,14)"/><text x="134.00" y="350.50"></text></g><g><title>0x7ff4d0e3fdd6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="133" y="356" width="1" height="15" fill="rgb(244,67,29)"/><text x="136.00" y="366.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.11%)</title><rect x="134" y="276" width="1" height="15" fill="rgb(252,185,50)"/><text x="137.00" y="286.50"></text></g><g><title>0x7ff4d00620c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="135" y="292" width="1" height="15" fill="rgb(236,153,22)"/><text x="138.00" y="302.50"></text></g><g><title>0x7ff4d1010dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="136" y="292" width="2" height="15" fill="rgb(223,111,10)"/><text x="139.00" y="302.50"></text></g><g><title>0x7ff4d1010e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="138" y="292" width="1" height="15" fill="rgb(228,208,16)"/><text x="141.00" y="302.50"></text></g><g><title>0x7ff4d1010e8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="139" y="292" width="1" height="15" fill="rgb(218,223,31)"/><text x="142.00" y="302.50"></text></g><g><title>0x7ff4d1010eb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="140" y="292" width="2" height="15" fill="rgb(207,169,35)"/><text x="143.00" y="302.50"></text></g><g><title>0x7ff4d1010eca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="142" y="292" width="1" height="15" fill="rgb(254,44,40)"/><text x="145.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.32%)</title><rect x="129" y="212" width="15" height="15" fill="rgb(217,172,30)"/><text x="132.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.10%)</title><rect x="131" y="228" width="13" height="15" fill="rgb(224,207,8)"/><text x="134.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (8 samples, 0.88%)</title><rect x="134" y="244" width="10" height="15" fill="rgb(223,38,28)"/><text x="137.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (8 samples, 0.88%)</title><rect x="134" y="260" width="10" height="15" fill="rgb(244,160,43)"/><text x="137.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (7 samples, 0.77%)</title><rect x="135" y="276" width="9" height="15" fill="rgb(236,182,7)"/><text x="138.00" y="286.50"></text></g><g><title>0x7ff4d1010efa (libm-2.29.so) (1 samples, 0.11%)</title><rect x="143" y="292" width="1" height="15" fill="rgb(216,130,20)"/><text x="146.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (13 samples, 1.43%)</title><rect x="129" y="196" width="17" height="15" fill="rgb(251,46,30)"/><text x="132.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="144" y="212" width="2" height="15" fill="rgb(205,217,30)"/><text x="147.00" y="222.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:470) (1 samples, 0.11%)</title><rect x="144" y="228" width="2" height="15" fill="rgb(246,127,17)"/><text x="147.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="146" y="212" width="1" height="15" fill="rgb(227,201,24)"/><text x="149.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="146" y="228" width="1" height="15" fill="rgb(206,169,49)"/><text x="149.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="146" y="244" width="1" height="15" fill="rgb(220,125,35)"/><text x="149.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="146" y="260" width="1" height="15" fill="rgb(252,137,15)"/><text x="149.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="146" y="276" width="1" height="15" fill="rgb(249,209,36)"/><text x="149.00" y="286.50"></text></g><g><title>0x7ff4d0e3eace (libc-2.29.so) (1 samples, 0.11%)</title><rect x="146" y="292" width="1" height="15" fill="rgb(234,205,35)"/><text x="149.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="147" y="228" width="1" height="15" fill="rgb(236,59,19)"/><text x="150.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:460) (1 samples, 0.11%)</title><rect x="147" y="244" width="1" height="15" fill="rgb(211,57,36)"/><text x="150.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.22%)</title><rect x="147" y="212" width="2" height="15" fill="rgb(212,117,25)"/><text x="150.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="148" y="228" width="1" height="15" fill="rgb(227,151,33)"/><text x="151.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="148" y="244" width="1" height="15" fill="rgb(211,9,1)"/><text x="151.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="148" y="260" width="1" height="15" fill="rgb(208,89,29)"/><text x="151.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="148" y="276" width="1" height="15" fill="rgb(239,188,29)"/><text x="151.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.11%)</title><rect x="148" y="292" width="1" height="15" fill="rgb(228,5,27)"/><text x="151.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="148" y="308" width="1" height="15" fill="rgb(240,47,46)"/><text x="151.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="149" y="324" width="2" height="15" fill="rgb(206,65,1)"/><text x="152.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.22%)</title><rect x="149" y="212" width="3" height="15" fill="rgb(221,222,7)"/><text x="152.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="149" y="228" width="3" height="15" fill="rgb(217,71,33)"/><text x="152.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="149" y="244" width="3" height="15" fill="rgb(247,43,46)"/><text x="152.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.22%)</title><rect x="149" y="260" width="3" height="15" fill="rgb(233,196,13)"/><text x="152.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="149" y="276" width="3" height="15" fill="rgb(250,26,6)"/><text x="152.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="149" y="292" width="3" height="15" fill="rgb(232,181,37)"/><text x="152.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="149" y="308" width="3" height="15" fill="rgb(242,130,48)"/><text x="152.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="151" y="324" width="1" height="15" fill="rgb(205,149,32)"/><text x="154.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="151" y="340" width="1" height="15" fill="rgb(233,57,31)"/><text x="154.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="152" y="292" width="1" height="15" fill="rgb(228,137,7)"/><text x="155.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="152" y="308" width="1" height="15" fill="rgb(211,228,50)"/><text x="155.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="152" y="324" width="1" height="15" fill="rgb(206,218,51)"/><text x="155.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.11%)</title><rect x="152" y="340" width="1" height="15" fill="rgb(210,153,18)"/><text x="155.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.11%)</title><rect x="153" y="340" width="2" height="15" fill="rgb(253,10,17)"/><text x="156.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="153" y="356" width="2" height="15" fill="rgb(241,178,43)"/><text x="156.00" y="366.50"></text></g><g><title>0x7ff4d0e5ed50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="153" y="372" width="2" height="15" fill="rgb(223,220,4)"/><text x="156.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.22%)</title><rect x="153" y="308" width="3" height="15" fill="rgb(231,64,21)"/><text x="156.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.22%)</title><rect x="153" y="324" width="3" height="15" fill="rgb(250,223,30)"/><text x="156.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="155" y="340" width="1" height="15" fill="rgb(222,139,54)"/><text x="158.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="155" y="356" width="1" height="15" fill="rgb(245,32,16)"/><text x="158.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="155" y="372" width="1" height="15" fill="rgb(205,164,29)"/><text x="158.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="155" y="388" width="1" height="15" fill="rgb(217,218,48)"/><text x="158.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="155" y="404" width="1" height="15" fill="rgb(208,210,24)"/><text x="158.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="155" y="420" width="1" height="15" fill="rgb(244,2,50)"/><text x="158.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="155" y="436" width="1" height="15" fill="rgb(220,225,17)"/><text x="158.00" y="446.50"></text></g><g><title>0x7ff4d0e40531 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="155" y="452" width="1" height="15" fill="rgb(247,229,3)"/><text x="158.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="156" y="308" width="1" height="15" fill="rgb(245,112,0)"/><text x="159.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="156" y="324" width="1" height="15" fill="rgb(229,155,43)"/><text x="159.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.11%)</title><rect x="156" y="340" width="1" height="15" fill="rgb(217,43,31)"/><text x="159.00" y="350.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="156" y="356" width="1" height="15" fill="rgb(228,108,6)"/><text x="159.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.11%)</title><rect x="156" y="372" width="1" height="15" fill="rgb(215,63,48)"/><text x="159.00" y="382.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1525) (1 samples, 0.11%)</title><rect x="156" y="388" width="1" height="15" fill="rgb(238,134,24)"/><text x="159.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.11%)</title><rect x="157" y="324" width="1" height="15" fill="rgb(234,210,23)"/><text x="160.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.11%)</title><rect x="158" y="324" width="2" height="15" fill="rgb(227,195,12)"/><text x="161.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.33%)</title><rect x="161" y="340" width="4" height="15" fill="rgb(213,129,46)"/><text x="164.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (16 samples, 1.76%)</title><rect x="146" y="196" width="20" height="15" fill="rgb(217,67,47)"/><text x="149.00" y="206.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 1.21%)</title><rect x="152" y="212" width="14" height="15" fill="rgb(222,20,49)"/><text x="155.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 1.21%)</title><rect x="152" y="228" width="14" height="15" fill="rgb(218,112,37)"/><text x="155.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 1.21%)</title><rect x="152" y="244" width="14" height="15" fill="rgb(211,83,32)"/><text x="155.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 1.21%)</title><rect x="152" y="260" width="14" height="15" fill="rgb(213,31,30)"/><text x="155.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.21%)</title><rect x="152" y="276" width="14" height="15" fill="rgb(234,140,0)"/><text x="155.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.10%)</title><rect x="153" y="292" width="13" height="15" fill="rgb(245,79,44)"/><text x="156.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 0.77%)</title><rect x="157" y="308" width="9" height="15" fill="rgb(241,27,43)"/><text x="160.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.55%)</title><rect x="160" y="324" width="6" height="15" fill="rgb(221,10,11)"/><text x="163.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="165" y="340" width="1" height="15" fill="rgb(243,201,24)"/><text x="168.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (114 samples, 12.51%)</title><rect x="20" y="180" width="148" height="15" fill="rgb(241,79,17)"/><text x="23.00" y="190.50">&lt;genexpr&gt; (sklearn..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="166" y="196" width="2" height="15" fill="rgb(247,47,30)"/><text x="169.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="166" y="212" width="2" height="15" fill="rgb(241,30,40)"/><text x="169.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="166" y="228" width="2" height="15" fill="rgb(241,190,34)"/><text x="169.00" y="238.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="168" y="292" width="1" height="15" fill="rgb(215,206,34)"/><text x="171.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="168" y="308" width="1" height="15" fill="rgb(221,196,32)"/><text x="171.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:18) (116 samples, 12.73%)</title><rect x="20" y="100" width="150" height="15" fill="rgb(225,225,43)"/><text x="23.00" y="110.50">profile (bench_AdaB..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (116 samples, 12.73%)</title><rect x="20" y="116" width="150" height="15" fill="rgb(211,31,17)"/><text x="23.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (116 samples, 12.73%)</title><rect x="20" y="132" width="150" height="15" fill="rgb(242,20,2)"/><text x="23.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (116 samples, 12.73%)</title><rect x="20" y="148" width="150" height="15" fill="rgb(233,2,33)"/><text x="23.00" y="158.50">predict_proba (skle..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (116 samples, 12.73%)</title><rect x="20" y="164" width="150" height="15" fill="rgb(241,0,24)"/><text x="23.00" y="174.50">decision_function (..</text></g><g><title>array_add (number.c:330) (2 samples, 0.22%)</title><rect x="168" y="180" width="2" height="15" fill="rgb(234,146,14)"/><text x="171.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="168" y="196" width="2" height="15" fill="rgb(232,114,6)"/><text x="171.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="168" y="212" width="2" height="15" fill="rgb(206,74,38)"/><text x="171.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.22%)</title><rect x="168" y="228" width="2" height="15" fill="rgb(208,110,12)"/><text x="171.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="168" y="244" width="2" height="15" fill="rgb(224,109,26)"/><text x="171.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="168" y="260" width="2" height="15" fill="rgb(205,204,32)"/><text x="171.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="168" y="276" width="2" height="15" fill="rgb(214,99,34)"/><text x="171.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="169" y="292" width="1" height="15" fill="rgb(213,94,17)"/><text x="172.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="169" y="308" width="1" height="15" fill="rgb(222,83,11)"/><text x="172.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="171" y="212" width="2" height="15" fill="rgb(222,177,27)"/><text x="174.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:540) (1 samples, 0.11%)</title><rect x="171" y="228" width="2" height="15" fill="rgb(214,120,48)"/><text x="174.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="173" y="228" width="1" height="15" fill="rgb(211,32,41)"/><text x="176.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.44%)</title><rect x="175" y="244" width="5" height="15" fill="rgb(254,50,7)"/><text x="178.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.33%)</title><rect x="177" y="260" width="3" height="15" fill="rgb(209,109,0)"/><text x="180.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 0.77%)</title><rect x="173" y="212" width="9" height="15" fill="rgb(222,46,51)"/><text x="176.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 0.66%)</title><rect x="174" y="228" width="8" height="15" fill="rgb(223,4,37)"/><text x="177.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.11%)</title><rect x="180" y="244" width="2" height="15" fill="rgb(226,146,35)"/><text x="183.00" y="254.50"></text></g><g><title>0x7ff4d0e5f120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="180" y="260" width="2" height="15" fill="rgb(218,110,7)"/><text x="183.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.11%)</title><rect x="183" y="244" width="1" height="15" fill="rgb(218,223,28)"/><text x="186.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (2 samples, 0.22%)</title><rect x="184" y="244" width="3" height="15" fill="rgb(213,87,37)"/><text x="187.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.11%)</title><rect x="190" y="260" width="1" height="15" fill="rgb(254,196,42)"/><text x="193.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.44%)</title><rect x="187" y="244" width="5" height="15" fill="rgb(214,109,42)"/><text x="190.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.11%)</title><rect x="191" y="260" width="1" height="15" fill="rgb(241,98,24)"/><text x="194.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.11%)</title><rect x="192" y="260" width="1" height="15" fill="rgb(221,72,1)"/><text x="195.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.44%)</title><rect x="192" y="244" width="5" height="15" fill="rgb(229,68,26)"/><text x="195.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.33%)</title><rect x="193" y="260" width="4" height="15" fill="rgb(239,207,10)"/><text x="196.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.11%)</title><rect x="196" y="276" width="1" height="15" fill="rgb(246,214,19)"/><text x="199.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.11%)</title><rect x="197" y="244" width="2" height="15" fill="rgb(236,29,33)"/><text x="200.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.33%)</title><rect x="199" y="244" width="3" height="15" fill="rgb(239,173,16)"/><text x="202.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="200" y="260" width="2" height="15" fill="rgb(250,218,19)"/><text x="203.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="201" y="276" width="1" height="15" fill="rgb(216,179,39)"/><text x="204.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.11%)</title><rect x="201" y="292" width="1" height="15" fill="rgb(219,105,0)"/><text x="204.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.11%)</title><rect x="202" y="244" width="2" height="15" fill="rgb(235,115,23)"/><text x="205.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="206" y="276" width="2" height="15" fill="rgb(232,156,30)"/><text x="209.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 0.55%)</title><rect x="204" y="244" width="6" height="15" fill="rgb(224,190,34)"/><text x="207.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 0.55%)</title><rect x="204" y="260" width="6" height="15" fill="rgb(254,228,5)"/><text x="207.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.22%)</title><rect x="208" y="276" width="2" height="15" fill="rgb(217,46,1)"/><text x="211.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.33%)</title><rect x="210" y="260" width="4" height="15" fill="rgb(221,104,35)"/><text x="213.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.11%)</title><rect x="213" y="276" width="1" height="15" fill="rgb(206,88,11)"/><text x="216.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (26 samples, 2.85%)</title><rect x="182" y="212" width="33" height="15" fill="rgb(247,16,10)"/><text x="185.00" y="222.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (25 samples, 2.74%)</title><rect x="183" y="228" width="32" height="15" fill="rgb(249,115,46)"/><text x="186.00" y="238.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.44%)</title><rect x="210" y="244" width="5" height="15" fill="rgb(245,178,40)"/><text x="213.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.11%)</title><rect x="214" y="260" width="1" height="15" fill="rgb(241,177,11)"/><text x="217.00" y="270.50"></text></g><g><title>0x7ff4aa882d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="218" y="228" width="1" height="15" fill="rgb(215,198,1)"/><text x="221.00" y="238.50"></text></g><g><title>0x7ff4aa8902df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="219" y="276" width="2" height="15" fill="rgb(250,217,37)"/><text x="222.00" y="286.50"></text></g><g><title>0x7ff4aa874d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="219" y="292" width="2" height="15" fill="rgb(228,54,16)"/><text x="222.00" y="302.50"></text></g><g><title>0x7ff4aa874666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="219" y="308" width="2" height="15" fill="rgb(214,95,9)"/><text x="222.00" y="318.50"></text></g><g><title>0x7ff4aa86a2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="219" y="324" width="2" height="15" fill="rgb(215,105,52)"/><text x="222.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="219" y="340" width="2" height="15" fill="rgb(215,213,31)"/><text x="222.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.11%)</title><rect x="219" y="356" width="2" height="15" fill="rgb(233,126,22)"/><text x="222.00" y="366.50"></text></g><g><title>0x7ff4aa890456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="221" y="276" width="1" height="15" fill="rgb(237,100,3)"/><text x="224.00" y="286.50"></text></g><g><title>0x7ff4d0e3fdd6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="222" y="404" width="1" height="15" fill="rgb(219,32,24)"/><text x="225.00" y="414.50"></text></g><g><title>0x7ff4aa890592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="222" y="276" width="3" height="15" fill="rgb(221,2,29)"/><text x="225.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.22%)</title><rect x="222" y="292" width="3" height="15" fill="rgb(215,101,32)"/><text x="225.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.22%)</title><rect x="222" y="308" width="3" height="15" fill="rgb(206,218,5)"/><text x="225.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.22%)</title><rect x="222" y="324" width="3" height="15" fill="rgb(212,10,39)"/><text x="225.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (2 samples, 0.22%)</title><rect x="222" y="340" width="3" height="15" fill="rgb(243,102,24)"/><text x="225.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (2 samples, 0.22%)</title><rect x="222" y="356" width="3" height="15" fill="rgb(209,69,24)"/><text x="225.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.22%)</title><rect x="222" y="372" width="3" height="15" fill="rgb(249,204,52)"/><text x="225.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="222" y="388" width="3" height="15" fill="rgb(226,7,34)"/><text x="225.00" y="398.50"></text></g><g><title>0x7ff4d0e5f124 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="223" y="404" width="2" height="15" fill="rgb(209,185,27)"/><text x="226.00" y="414.50"></text></g><g><title>0x7ff4aa8906aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="225" y="276" width="1" height="15" fill="rgb(238,175,53)"/><text x="228.00" y="286.50"></text></g><g><title>0x7ff4aa8906b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="226" y="276" width="1" height="15" fill="rgb(210,133,33)"/><text x="229.00" y="286.50"></text></g><g><title>0x7ff4aa8906d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="227" y="276" width="1" height="15" fill="rgb(251,23,49)"/><text x="230.00" y="286.50"></text></g><g><title>0x7ff4aa881fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.99%)</title><rect x="219" y="244" width="12" height="15" fill="rgb(240,176,22)"/><text x="222.00" y="254.50"></text></g><g><title>0x7ff4aa891405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.99%)</title><rect x="219" y="260" width="12" height="15" fill="rgb(223,92,38)"/><text x="222.00" y="270.50"></text></g><g><title>0x7ff4aa890c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="228" y="276" width="3" height="15" fill="rgb(231,94,33)"/><text x="231.00" y="286.50"></text></g><g><title>0x7ff4aa868529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="228" y="292" width="3" height="15" fill="rgb(242,39,34)"/><text x="231.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="230" y="308" width="1" height="15" fill="rgb(228,18,21)"/><text x="233.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.11%)</title><rect x="230" y="324" width="1" height="15" fill="rgb(242,84,19)"/><text x="233.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.11%)</title><rect x="230" y="340" width="1" height="15" fill="rgb(208,150,6)"/><text x="233.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.11%)</title><rect x="230" y="356" width="1" height="15" fill="rgb(249,168,26)"/><text x="233.00" y="366.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:202) (1 samples, 0.11%)</title><rect x="230" y="372" width="1" height="15" fill="rgb(209,66,17)"/><text x="233.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.11%)</title><rect x="231" y="276" width="1" height="15" fill="rgb(244,31,30)"/><text x="234.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.11%)</title><rect x="231" y="292" width="1" height="15" fill="rgb(254,67,9)"/><text x="234.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.11%)</title><rect x="232" y="276" width="2" height="15" fill="rgb(254,130,14)"/><text x="235.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.11%)</title><rect x="232" y="292" width="2" height="15" fill="rgb(240,221,41)"/><text x="235.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.11%)</title><rect x="232" y="308" width="2" height="15" fill="rgb(233,220,38)"/><text x="235.00" y="318.50"></text></g><g><title>0x7ff4aa88205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="231" y="244" width="4" height="15" fill="rgb(209,45,24)"/><text x="234.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.33%)</title><rect x="231" y="260" width="4" height="15" fill="rgb(219,55,12)"/><text x="234.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:72) (1 samples, 0.11%)</title><rect x="234" y="276" width="1" height="15" fill="rgb(236,68,8)"/><text x="237.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (16 samples, 1.76%)</title><rect x="215" y="212" width="21" height="15" fill="rgb(243,191,43)"/><text x="218.00" y="222.50"></text></g><g><title>0x7ff4aa882d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.43%)</title><rect x="219" y="228" width="17" height="15" fill="rgb(230,204,43)"/><text x="222.00" y="238.50"></text></g><g><title>0x7ff4aa88213a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="235" y="244" width="1" height="15" fill="rgb(224,23,49)"/><text x="238.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.11%)</title><rect x="236" y="212" width="1" height="15" fill="rgb(250,48,39)"/><text x="239.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="236" y="228" width="1" height="15" fill="rgb(220,162,36)"/><text x="239.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:834) (1 samples, 0.11%)</title><rect x="236" y="244" width="1" height="15" fill="rgb(215,5,40)"/><text x="239.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="237" y="228" width="2" height="15" fill="rgb(224,137,23)"/><text x="240.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.11%)</title><rect x="237" y="244" width="2" height="15" fill="rgb(232,21,5)"/><text x="240.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.11%)</title><rect x="237" y="260" width="2" height="15" fill="rgb(235,98,25)"/><text x="240.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="237" y="276" width="2" height="15" fill="rgb(246,106,35)"/><text x="240.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.11%)</title><rect x="237" y="292" width="2" height="15" fill="rgb(212,10,7)"/><text x="240.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.11%)</title><rect x="237" y="308" width="2" height="15" fill="rgb(240,132,1)"/><text x="240.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.11%)</title><rect x="237" y="324" width="2" height="15" fill="rgb(247,151,17)"/><text x="240.00" y="334.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.11%)</title><rect x="240" y="308" width="1" height="15" fill="rgb(238,50,23)"/><text x="243.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.22%)</title><rect x="240" y="292" width="3" height="15" fill="rgb(233,117,42)"/><text x="243.00" y="302.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:66) (1 samples, 0.11%)</title><rect x="241" y="308" width="2" height="15" fill="rgb(248,122,42)"/><text x="244.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="243" y="308" width="1" height="15" fill="rgb(252,107,12)"/><text x="246.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="243" y="324" width="1" height="15" fill="rgb(232,50,4)"/><text x="246.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="243" y="340" width="1" height="15" fill="rgb(214,149,34)"/><text x="246.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.11%)</title><rect x="243" y="356" width="1" height="15" fill="rgb(220,164,51)"/><text x="246.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="244" y="324" width="1" height="15" fill="rgb(205,11,38)"/><text x="247.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="244" y="340" width="1" height="15" fill="rgb(235,155,48)"/><text x="247.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="244" y="356" width="1" height="15" fill="rgb(250,5,35)"/><text x="247.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.11%)</title><rect x="244" y="372" width="1" height="15" fill="rgb(205,47,38)"/><text x="247.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="245" y="340" width="2" height="15" fill="rgb(208,67,29)"/><text x="248.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.11%)</title><rect x="245" y="356" width="2" height="15" fill="rgb(253,172,46)"/><text x="248.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.11%)</title><rect x="247" y="340" width="1" height="15" fill="rgb(249,84,19)"/><text x="250.00" y="350.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2269) (1 samples, 0.11%)</title><rect x="247" y="356" width="1" height="15" fill="rgb(244,31,34)"/><text x="250.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="248" y="340" width="1" height="15" fill="rgb(215,213,35)"/><text x="251.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3024) (1 samples, 0.11%)</title><rect x="248" y="356" width="1" height="15" fill="rgb(243,26,12)"/><text x="251.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.11%)</title><rect x="249" y="340" width="1" height="15" fill="rgb(231,8,48)"/><text x="252.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.11%)</title><rect x="249" y="356" width="1" height="15" fill="rgb(223,142,33)"/><text x="252.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.11%)</title><rect x="250" y="340" width="2" height="15" fill="rgb(243,153,54)"/><text x="253.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="250" y="356" width="2" height="15" fill="rgb(241,62,11)"/><text x="253.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="250" y="372" width="2" height="15" fill="rgb(228,24,53)"/><text x="253.00" y="382.50"></text></g><g><title>0x7ff4d0e3fc7e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="250" y="388" width="2" height="15" fill="rgb(207,193,53)"/><text x="253.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (6 samples, 0.66%)</title><rect x="245" y="324" width="8" height="15" fill="rgb(236,192,9)"/><text x="248.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:505) (1 samples, 0.11%)</title><rect x="252" y="340" width="1" height="15" fill="rgb(253,186,23)"/><text x="255.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.11%)</title><rect x="253" y="340" width="1" height="15" fill="rgb(221,88,32)"/><text x="256.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (2 samples, 0.22%)</title><rect x="254" y="340" width="3" height="15" fill="rgb(214,8,45)"/><text x="257.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="257" y="340" width="1" height="15" fill="rgb(219,193,17)"/><text x="260.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="258" y="356" width="1" height="15" fill="rgb(208,0,39)"/><text x="261.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="261" y="372" width="1" height="15" fill="rgb(247,212,24)"/><text x="264.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.44%)</title><rect x="259" y="356" width="6" height="15" fill="rgb(211,31,26)"/><text x="262.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.22%)</title><rect x="262" y="372" width="3" height="15" fill="rgb(227,42,5)"/><text x="265.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (2 samples, 0.22%)</title><rect x="265" y="356" width="2" height="15" fill="rgb(205,187,31)"/><text x="268.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (3 samples, 0.33%)</title><rect x="267" y="356" width="4" height="15" fill="rgb(208,205,35)"/><text x="270.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (2 samples, 0.22%)</title><rect x="271" y="356" width="3" height="15" fill="rgb(241,206,30)"/><text x="274.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (29 samples, 3.18%)</title><rect x="237" y="212" width="38" height="15" fill="rgb(214,181,25)"/><text x="240.00" y="222.50">pre..</text></g><g><title>array_sum (methods.c:2215) (28 samples, 3.07%)</title><rect x="239" y="228" width="36" height="15" fill="rgb(224,8,47)"/><text x="242.00" y="238.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 3.07%)</title><rect x="239" y="244" width="36" height="15" fill="rgb(217,196,41)"/><text x="242.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (27 samples, 2.96%)</title><rect x="240" y="260" width="35" height="15" fill="rgb(246,71,41)"/><text x="243.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (27 samples, 2.96%)</title><rect x="240" y="276" width="35" height="15" fill="rgb(227,167,20)"/><text x="243.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (25 samples, 2.74%)</title><rect x="243" y="292" width="32" height="15" fill="rgb(223,19,1)"/><text x="246.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (24 samples, 2.63%)</title><rect x="244" y="308" width="31" height="15" fill="rgb(246,117,5)"/><text x="247.00" y="318.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (17 samples, 1.87%)</title><rect x="253" y="324" width="22" height="15" fill="rgb(209,77,14)"/><text x="256.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (13 samples, 1.43%)</title><rect x="258" y="340" width="17" height="15" fill="rgb(219,160,9)"/><text x="261.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.11%)</title><rect x="274" y="356" width="1" height="15" fill="rgb(216,169,24)"/><text x="277.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="275" y="244" width="1" height="15" fill="rgb(252,31,41)"/><text x="278.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="275" y="260" width="1" height="15" fill="rgb(205,74,35)"/><text x="278.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="275" y="276" width="1" height="15" fill="rgb(222,154,30)"/><text x="278.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="275" y="292" width="1" height="15" fill="rgb(252,134,22)"/><text x="278.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (2 samples, 0.22%)</title><rect x="275" y="212" width="3" height="15" fill="rgb(208,161,31)"/><text x="278.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.22%)</title><rect x="275" y="228" width="3" height="15" fill="rgb(228,41,0)"/><text x="278.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="276" y="244" width="2" height="15" fill="rgb(230,115,35)"/><text x="279.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.11%)</title><rect x="276" y="260" width="2" height="15" fill="rgb(238,63,11)"/><text x="279.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="278" y="244" width="1" height="15" fill="rgb(234,154,24)"/><text x="281.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.11%)</title><rect x="278" y="260" width="1" height="15" fill="rgb(216,142,19)"/><text x="281.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="279" y="244" width="1" height="15" fill="rgb(250,35,54)"/><text x="282.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2002) (1 samples, 0.11%)</title><rect x="279" y="260" width="1" height="15" fill="rgb(230,66,45)"/><text x="282.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="280" y="276" width="2" height="15" fill="rgb(224,125,6)"/><text x="283.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.11%)</title><rect x="280" y="292" width="2" height="15" fill="rgb(229,212,50)"/><text x="283.00" y="302.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2159) (1 samples, 0.11%)</title><rect x="280" y="308" width="2" height="15" fill="rgb(246,207,32)"/><text x="283.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2246) (1 samples, 0.11%)</title><rect x="282" y="308" width="1" height="15" fill="rgb(208,123,18)"/><text x="285.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (2 samples, 0.22%)</title><rect x="283" y="324" width="2" height="15" fill="rgb(217,159,8)"/><text x="286.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (2 samples, 0.22%)</title><rect x="287" y="340" width="2" height="15" fill="rgb(250,74,20)"/><text x="290.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="289" y="340" width="2" height="15" fill="rgb(249,165,12)"/><text x="292.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 0.88%)</title><rect x="282" y="276" width="10" height="15" fill="rgb(224,160,49)"/><text x="285.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 0.88%)</title><rect x="282" y="292" width="10" height="15" fill="rgb(205,20,47)"/><text x="285.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 0.77%)</title><rect x="283" y="308" width="9" height="15" fill="rgb(216,158,49)"/><text x="286.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.55%)</title><rect x="285" y="324" width="7" height="15" fill="rgb(209,1,7)"/><text x="288.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="291" y="340" width="1" height="15" fill="rgb(213,83,25)"/><text x="294.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (7 samples, 0.77%)</title><rect x="292" y="276" width="9" height="15" fill="rgb(246,205,18)"/><text x="295.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (7 samples, 0.77%)</title><rect x="292" y="292" width="9" height="15" fill="rgb(242,179,38)"/><text x="295.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (7 samples, 0.77%)</title><rect x="292" y="308" width="9" height="15" fill="rgb(246,209,21)"/><text x="295.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (7 samples, 0.77%)</title><rect x="292" y="324" width="9" height="15" fill="rgb(217,161,24)"/><text x="295.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (7 samples, 0.77%)</title><rect x="292" y="340" width="9" height="15" fill="rgb(226,154,35)"/><text x="295.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 2.09%)</title><rect x="278" y="228" width="24" height="15" fill="rgb(222,69,37)"/><text x="281.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 1.87%)</title><rect x="280" y="244" width="22" height="15" fill="rgb(206,137,0)"/><text x="283.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (17 samples, 1.87%)</title><rect x="280" y="260" width="22" height="15" fill="rgb(211,22,14)"/><text x="283.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="301" y="276" width="1" height="15" fill="rgb(253,192,19)"/><text x="304.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="301" y="292" width="1" height="15" fill="rgb(210,14,42)"/><text x="304.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="301" y="308" width="1" height="15" fill="rgb(237,228,10)"/><text x="304.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (103 samples, 11.31%)</title><rect x="170" y="196" width="134" height="15" fill="rgb(232,166,45)"/><text x="173.00" y="206.50">_samme_proba (sk..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (20 samples, 2.20%)</title><rect x="278" y="212" width="26" height="15" fill="rgb(218,31,21)"/><text x="281.00" y="222.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.11%)</title><rect x="302" y="228" width="2" height="15" fill="rgb(250,183,46)"/><text x="305.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.11%)</title><rect x="302" y="244" width="2" height="15" fill="rgb(236,134,14)"/><text x="305.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="304" y="212" width="1" height="15" fill="rgb(252,114,39)"/><text x="307.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.11%)</title><rect x="305" y="212" width="1" height="15" fill="rgb(250,178,49)"/><text x="308.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.22%)</title><rect x="306" y="228" width="3" height="15" fill="rgb(246,86,25)"/><text x="309.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.22%)</title><rect x="306" y="244" width="3" height="15" fill="rgb(244,110,24)"/><text x="309.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.22%)</title><rect x="306" y="260" width="3" height="15" fill="rgb(250,190,14)"/><text x="309.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="306" y="276" width="3" height="15" fill="rgb(233,218,2)"/><text x="309.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.22%)</title><rect x="306" y="292" width="3" height="15" fill="rgb(249,159,12)"/><text x="309.00" y="302.50"></text></g><g><title>0x7ff4d0f1ce65 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="307" y="308" width="2" height="15" fill="rgb(254,178,17)"/><text x="310.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (3 samples, 0.33%)</title><rect x="309" y="308" width="4" height="15" fill="rgb(211,71,21)"/><text x="312.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (3 samples, 0.33%)</title><rect x="309" y="324" width="4" height="15" fill="rgb(215,31,32)"/><text x="312.00" y="334.50"></text></g><g><title>0x7ff4d0e54e50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="314" y="356" width="1" height="15" fill="rgb(212,195,37)"/><text x="317.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.33%)</title><rect x="313" y="324" width="3" height="15" fill="rgb(216,27,32)"/><text x="316.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.33%)</title><rect x="313" y="340" width="3" height="15" fill="rgb(248,222,1)"/><text x="316.00" y="350.50"></text></g><g><title>0x7ff4d0e54eb5 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="315" y="356" width="1" height="15" fill="rgb(222,108,53)"/><text x="318.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="316" y="324" width="3" height="15" fill="rgb(230,34,52)"/><text x="319.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="316" y="340" width="3" height="15" fill="rgb(254,204,50)"/><text x="319.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="318" y="356" width="1" height="15" fill="rgb(248,175,47)"/><text x="321.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.11%)</title><rect x="318" y="372" width="1" height="15" fill="rgb(236,225,1)"/><text x="321.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.11%)</title><rect x="318" y="388" width="1" height="15" fill="rgb(218,111,44)"/><text x="321.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="318" y="404" width="1" height="15" fill="rgb(213,157,31)"/><text x="321.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="318" y="420" width="1" height="15" fill="rgb(252,161,1)"/><text x="321.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="319" y="340" width="1" height="15" fill="rgb(209,27,52)"/><text x="322.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="319" y="356" width="1" height="15" fill="rgb(234,100,9)"/><text x="322.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:89) (1 samples, 0.11%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(233,142,10)"/><text x="322.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(206,161,29)"/><text x="323.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.11%)</title><rect x="320" y="372" width="2" height="15" fill="rgb(246,110,18)"/><text x="323.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="322" y="356" width="1" height="15" fill="rgb(244,81,4)"/><text x="325.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.11%)</title><rect x="322" y="372" width="1" height="15" fill="rgb(241,85,2)"/><text x="325.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="320" y="340" width="4" height="15" fill="rgb(245,78,30)"/><text x="323.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="323" y="356" width="1" height="15" fill="rgb(242,2,39)"/><text x="326.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="324" y="340" width="2" height="15" fill="rgb(246,59,38)"/><text x="327.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="324" y="356" width="2" height="15" fill="rgb(253,109,27)"/><text x="327.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.11%)</title><rect x="324" y="372" width="2" height="15" fill="rgb(207,120,13)"/><text x="327.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (11 samples, 1.21%)</title><rect x="313" y="308" width="14" height="15" fill="rgb(252,9,7)"/><text x="316.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (6 samples, 0.66%)</title><rect x="319" y="324" width="8" height="15" fill="rgb(244,82,29)"/><text x="322.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="326" y="340" width="1" height="15" fill="rgb(220,95,15)"/><text x="329.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.11%)</title><rect x="326" y="356" width="1" height="15" fill="rgb(237,208,51)"/><text x="329.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="327" y="324" width="1" height="15" fill="rgb(211,88,45)"/><text x="330.00" y="334.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="328" y="372" width="1" height="15" fill="rgb(222,54,33)"/><text x="331.00" y="382.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="331" y="404" width="1" height="15" fill="rgb(254,4,52)"/><text x="334.00" y="414.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.22%)</title><rect x="332" y="452" width="3" height="15" fill="rgb(228,71,0)"/><text x="335.00" y="462.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1664) (1 samples, 0.11%)</title><rect x="335" y="452" width="1" height="15" fill="rgb(235,57,11)"/><text x="338.00" y="462.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (4 samples, 0.44%)</title><rect x="332" y="436" width="5" height="15" fill="rgb(251,63,49)"/><text x="335.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1696) (1 samples, 0.11%)</title><rect x="336" y="452" width="1" height="15" fill="rgb(246,132,39)"/><text x="339.00" y="462.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c:2611) (1 samples, 0.11%)</title><rect x="336" y="468" width="1" height="15" fill="rgb(214,51,46)"/><text x="339.00" y="478.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 0.88%)</title><rect x="328" y="324" width="11" height="15" fill="rgb(228,95,52)"/><text x="331.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (8 samples, 0.88%)</title><rect x="328" y="340" width="11" height="15" fill="rgb(215,16,42)"/><text x="331.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 0.88%)</title><rect x="328" y="356" width="11" height="15" fill="rgb(253,25,12)"/><text x="331.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (7 samples, 0.77%)</title><rect x="329" y="372" width="10" height="15" fill="rgb(215,169,17)"/><text x="332.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (6 samples, 0.66%)</title><rect x="331" y="388" width="8" height="15" fill="rgb(236,141,1)"/><text x="334.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (5 samples, 0.55%)</title><rect x="332" y="404" width="7" height="15" fill="rgb(234,2,24)"/><text x="335.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (5 samples, 0.55%)</title><rect x="332" y="420" width="7" height="15" fill="rgb(229,200,12)"/><text x="335.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="337" y="436" width="2" height="15" fill="rgb(242,211,30)"/><text x="340.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.11%)</title><rect x="337" y="452" width="2" height="15" fill="rgb(206,26,31)"/><text x="340.00" y="462.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.11%)</title><rect x="337" y="468" width="2" height="15" fill="rgb(244,100,4)"/><text x="340.00" y="478.50"></text></g><g><title>0x7ff4d0e5f134 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="484" width="2" height="15" fill="rgb(243,156,18)"/><text x="340.00" y="494.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="339" y="356" width="1" height="15" fill="rgb(232,187,20)"/><text x="342.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="339" y="372" width="1" height="15" fill="rgb(220,201,30)"/><text x="342.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="339" y="388" width="1" height="15" fill="rgb(206,203,40)"/><text x="342.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.11%)</title><rect x="339" y="404" width="1" height="15" fill="rgb(254,68,17)"/><text x="342.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="339" y="324" width="2" height="15" fill="rgb(208,16,35)"/><text x="342.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="339" y="340" width="2" height="15" fill="rgb(241,184,15)"/><text x="342.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.11%)</title><rect x="340" y="356" width="1" height="15" fill="rgb(222,88,20)"/><text x="343.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.11%)</title><rect x="340" y="372" width="1" height="15" fill="rgb(230,89,22)"/><text x="343.00" y="382.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.11%)</title><rect x="340" y="388" width="1" height="15" fill="rgb(210,60,38)"/><text x="343.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (13 samples, 1.43%)</title><rect x="327" y="308" width="17" height="15" fill="rgb(244,170,44)"/><text x="330.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:70) (2 samples, 0.22%)</title><rect x="341" y="324" width="3" height="15" fill="rgb(236,155,47)"/><text x="344.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="346" y="356" width="2" height="15" fill="rgb(228,40,7)"/><text x="349.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:557) (1 samples, 0.11%)</title><rect x="346" y="372" width="2" height="15" fill="rgb(233,8,37)"/><text x="349.00" y="382.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.11%)</title><rect x="348" y="420" width="1" height="15" fill="rgb(228,220,46)"/><text x="351.00" y="430.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:283) (1 samples, 0.11%)</title><rect x="348" y="436" width="1" height="15" fill="rgb(223,52,24)"/><text x="351.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.22%)</title><rect x="348" y="372" width="2" height="15" fill="rgb(231,62,24)"/><text x="351.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.22%)</title><rect x="348" y="388" width="2" height="15" fill="rgb(232,68,43)"/><text x="351.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.22%)</title><rect x="348" y="404" width="2" height="15" fill="rgb(221,12,50)"/><text x="351.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="349" y="420" width="1" height="15" fill="rgb(207,161,46)"/><text x="352.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:321) (1 samples, 0.11%)</title><rect x="349" y="436" width="1" height="15" fill="rgb(242,110,5)"/><text x="352.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.33%)</title><rect x="350" y="372" width="4" height="15" fill="rgb(233,67,47)"/><text x="353.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.33%)</title><rect x="350" y="388" width="4" height="15" fill="rgb(228,143,42)"/><text x="353.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (3 samples, 0.33%)</title><rect x="350" y="404" width="4" height="15" fill="rgb(237,98,6)"/><text x="353.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (40 samples, 4.39%)</title><rect x="304" y="196" width="51" height="15" fill="rgb(231,184,46)"/><text x="307.00" y="206.50">_samm..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (38 samples, 4.17%)</title><rect x="306" y="212" width="49" height="15" fill="rgb(237,220,36)"/><text x="309.00" y="222.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (36 samples, 3.95%)</title><rect x="309" y="228" width="46" height="15" fill="rgb(252,1,49)"/><text x="312.00" y="238.50">arra..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (36 samples, 3.95%)</title><rect x="309" y="244" width="46" height="15" fill="rgb(208,96,3)"/><text x="312.00" y="254.50">clip..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (36 samples, 3.95%)</title><rect x="309" y="260" width="46" height="15" fill="rgb(222,124,53)"/><text x="312.00" y="270.50">_wra..</text></g><g><title>array_clip (methods.c:2381) (36 samples, 3.95%)</title><rect x="309" y="276" width="46" height="15" fill="rgb(226,220,26)"/><text x="312.00" y="286.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (36 samples, 3.95%)</title><rect x="309" y="292" width="46" height="15" fill="rgb(208,157,3)"/><text x="312.00" y="302.50">forw..</text></g><g><title>_clip (numpy/core/_methods.py:129) (9 samples, 0.99%)</title><rect x="344" y="308" width="11" height="15" fill="rgb(242,107,3)"/><text x="347.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 0.88%)</title><rect x="345" y="324" width="10" height="15" fill="rgb(220,114,30)"/><text x="348.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="346" y="340" width="9" height="15" fill="rgb(228,55,13)"/><text x="349.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.66%)</title><rect x="348" y="356" width="7" height="15" fill="rgb(248,144,14)"/><text x="351.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1749) (1 samples, 0.11%)</title><rect x="354" y="372" width="1" height="15" fill="rgb(233,56,44)"/><text x="357.00" y="382.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.11%)</title><rect x="355" y="276" width="2" height="15" fill="rgb(247,33,45)"/><text x="358.00" y="286.50"></text></g><g><title>0x7ff4d1010e25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="358" y="292" width="1" height="15" fill="rgb(208,71,38)"/><text x="361.00" y="302.50"></text></g><g><title>0x7ff4d1010e8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="359" y="292" width="2" height="15" fill="rgb(243,132,54)"/><text x="362.00" y="302.50"></text></g><g><title>0x7ff4d1010e91 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(224,182,35)"/><text x="364.00" y="302.50"></text></g><g><title>0x7ff4d1010eb6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="363" y="292" width="3" height="15" fill="rgb(249,154,50)"/><text x="366.00" y="302.50"></text></g><g><title>0x7ff4d1010eee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="366" y="292" width="2" height="15" fill="rgb(248,99,45)"/><text x="369.00" y="302.50"></text></g><g><title>0x7ff4d1010efa (libm-2.29.so) (2 samples, 0.22%)</title><rect x="368" y="292" width="3" height="15" fill="rgb(230,150,21)"/><text x="371.00" y="302.50"></text></g><g><title>0x7ff4d1010f0a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="371" y="292" width="1" height="15" fill="rgb(245,89,13)"/><text x="374.00" y="302.50"></text></g><g><title>0x7ff4d1010f43 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="372" y="292" width="1" height="15" fill="rgb(208,0,30)"/><text x="375.00" y="302.50"></text></g><g><title>0x7ff4d1010fe3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="373" y="292" width="2" height="15" fill="rgb(208,190,51)"/><text x="376.00" y="302.50"></text></g><g><title>0x7ff4d1010ff3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="375" y="292" width="1" height="15" fill="rgb(210,112,22)"/><text x="378.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (2 samples, 0.22%)</title><rect x="376" y="292" width="3" height="15" fill="rgb(237,179,7)"/><text x="379.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (20 samples, 2.20%)</title><rect x="355" y="196" width="26" height="15" fill="rgb(233,126,23)"/><text x="358.00" y="206.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 2.20%)</title><rect x="355" y="212" width="26" height="15" fill="rgb(215,91,7)"/><text x="358.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 2.20%)</title><rect x="355" y="228" width="26" height="15" fill="rgb(248,213,4)"/><text x="358.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (20 samples, 2.20%)</title><rect x="355" y="244" width="26" height="15" fill="rgb(249,182,24)"/><text x="358.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (20 samples, 2.20%)</title><rect x="355" y="260" width="26" height="15" fill="rgb(252,14,16)"/><text x="358.00" y="270.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (19 samples, 2.09%)</title><rect x="357" y="276" width="24" height="15" fill="rgb(213,210,37)"/><text x="360.00" y="286.50">P..</text></g><g><title>npy_log (npy_math_internal.h.src:469) (2 samples, 0.22%)</title><rect x="379" y="292" width="2" height="15" fill="rgb(253,52,48)"/><text x="382.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="384" y="212" width="1" height="15" fill="rgb(253,81,32)"/><text x="387.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="384" y="228" width="1" height="15" fill="rgb(229,176,23)"/><text x="387.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="384" y="244" width="1" height="15" fill="rgb(250,207,14)"/><text x="387.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="384" y="260" width="1" height="15" fill="rgb(217,22,19)"/><text x="387.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="385" y="212" width="1" height="15" fill="rgb(221,149,38)"/><text x="388.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="385" y="228" width="1" height="15" fill="rgb(208,74,0)"/><text x="388.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="385" y="244" width="1" height="15" fill="rgb(233,35,35)"/><text x="388.00" y="254.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="385" y="260" width="1" height="15" fill="rgb(243,121,37)"/><text x="388.00" y="270.50"></text></g><g><title>0x7ff4d0e3eb05 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="385" y="276" width="1" height="15" fill="rgb(215,213,38)"/><text x="388.00" y="286.50"></text></g><g><title>0x7ff4d0e3db02 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="385" y="292" width="1" height="15" fill="rgb(243,218,0)"/><text x="388.00" y="302.50"></text></g><g><title>array_multiply (number.c:353) (1 samples, 0.11%)</title><rect x="386" y="212" width="2" height="15" fill="rgb(234,73,54)"/><text x="389.00" y="222.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:281) (1 samples, 0.11%)</title><rect x="386" y="228" width="2" height="15" fill="rgb(214,25,37)"/><text x="389.00" y="238.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="388" y="308" width="1" height="15" fill="rgb(253,190,6)"/><text x="391.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:63) (1 samples, 0.11%)</title><rect x="388" y="324" width="1" height="15" fill="rgb(214,168,4)"/><text x="391.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="388" y="244" width="2" height="15" fill="rgb(231,209,27)"/><text x="391.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.22%)</title><rect x="388" y="260" width="2" height="15" fill="rgb(212,211,35)"/><text x="391.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (2 samples, 0.22%)</title><rect x="388" y="276" width="2" height="15" fill="rgb(206,228,46)"/><text x="391.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (2 samples, 0.22%)</title><rect x="388" y="292" width="2" height="15" fill="rgb(252,127,23)"/><text x="391.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="389" y="308" width="1" height="15" fill="rgb(212,131,17)"/><text x="392.00" y="318.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.11%)</title><rect x="389" y="324" width="1" height="15" fill="rgb(253,5,23)"/><text x="392.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="390" y="244" width="2" height="15" fill="rgb(209,23,27)"/><text x="393.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.11%)</title><rect x="390" y="260" width="2" height="15" fill="rgb(235,99,49)"/><text x="393.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.11%)</title><rect x="390" y="276" width="2" height="15" fill="rgb(247,117,38)"/><text x="393.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.11%)</title><rect x="390" y="292" width="2" height="15" fill="rgb(236,80,23)"/><text x="393.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="392" y="244" width="1" height="15" fill="rgb(219,196,0)"/><text x="395.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.11%)</title><rect x="392" y="260" width="1" height="15" fill="rgb(237,113,6)"/><text x="395.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="392" y="276" width="1" height="15" fill="rgb(218,78,21)"/><text x="395.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="392" y="292" width="1" height="15" fill="rgb(208,128,54)"/><text x="395.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="392" y="308" width="1" height="15" fill="rgb(219,113,33)"/><text x="395.00" y="318.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:698) (1 samples, 0.11%)</title><rect x="393" y="292" width="1" height="15" fill="rgb(231,112,22)"/><text x="396.00" y="302.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (1 samples, 0.11%)</title><rect x="393" y="308" width="1" height="15" fill="rgb(234,2,29)"/><text x="396.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.66%)</title><rect x="388" y="228" width="7" height="15" fill="rgb(229,147,24)"/><text x="391.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="393" y="244" width="2" height="15" fill="rgb(215,179,29)"/><text x="396.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.22%)</title><rect x="393" y="260" width="2" height="15" fill="rgb(224,220,12)"/><text x="396.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="393" y="276" width="2" height="15" fill="rgb(216,54,33)"/><text x="396.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.11%)</title><rect x="394" y="292" width="1" height="15" fill="rgb(244,51,4)"/><text x="397.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="394" y="308" width="1" height="15" fill="rgb(234,152,44)"/><text x="397.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="397" y="276" width="1" height="15" fill="rgb(208,25,34)"/><text x="400.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (9 samples, 0.99%)</title><rect x="388" y="212" width="11" height="15" fill="rgb(235,165,2)"/><text x="391.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (3 samples, 0.33%)</title><rect x="395" y="228" width="4" height="15" fill="rgb(230,89,50)"/><text x="398.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.22%)</title><rect x="397" y="244" width="2" height="15" fill="rgb(210,168,29)"/><text x="400.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.22%)</title><rect x="397" y="260" width="2" height="15" fill="rgb(238,135,7)"/><text x="400.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="398" y="276" width="1" height="15" fill="rgb(216,184,53)"/><text x="401.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="399" y="292" width="2" height="15" fill="rgb(233,176,49)"/><text x="402.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="399" y="276" width="3" height="15" fill="rgb(246,124,42)"/><text x="402.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="401" y="292" width="1" height="15" fill="rgb(241,214,5)"/><text x="404.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.11%)</title><rect x="401" y="308" width="1" height="15" fill="rgb(239,106,32)"/><text x="404.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.22%)</title><rect x="402" y="324" width="3" height="15" fill="rgb(241,119,26)"/><text x="405.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.44%)</title><rect x="402" y="276" width="5" height="15" fill="rgb(237,193,11)"/><text x="405.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.44%)</title><rect x="402" y="292" width="5" height="15" fill="rgb(216,119,3)"/><text x="405.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.44%)</title><rect x="402" y="308" width="5" height="15" fill="rgb(234,182,19)"/><text x="405.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="405" y="324" width="2" height="15" fill="rgb(229,109,1)"/><text x="408.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.22%)</title><rect x="405" y="340" width="2" height="15" fill="rgb(247,68,25)"/><text x="408.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (7 samples, 0.77%)</title><rect x="399" y="212" width="9" height="15" fill="rgb(206,71,54)"/><text x="402.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="399" y="228" width="9" height="15" fill="rgb(216,42,37)"/><text x="402.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.77%)</title><rect x="399" y="244" width="9" height="15" fill="rgb(245,135,46)"/><text x="402.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.77%)</title><rect x="399" y="260" width="9" height="15" fill="rgb(250,110,29)"/><text x="402.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="407" y="276" width="1" height="15" fill="rgb(205,86,22)"/><text x="410.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="407" y="292" width="1" height="15" fill="rgb(233,30,9)"/><text x="410.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="407" y="308" width="1" height="15" fill="rgb(209,50,40)"/><text x="410.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="407" y="324" width="1" height="15" fill="rgb(240,60,7)"/><text x="410.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="407" y="340" width="1" height="15" fill="rgb(248,184,20)"/><text x="410.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="408" y="340" width="2" height="15" fill="rgb(228,6,31)"/><text x="411.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="408" y="356" width="2" height="15" fill="rgb(206,132,19)"/><text x="411.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="408" y="260" width="3" height="15" fill="rgb(209,113,47)"/><text x="411.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="408" y="276" width="3" height="15" fill="rgb(205,224,45)"/><text x="411.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.22%)</title><rect x="408" y="292" width="3" height="15" fill="rgb(239,174,48)"/><text x="411.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.22%)</title><rect x="408" y="308" width="3" height="15" fill="rgb(239,180,13)"/><text x="411.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="408" y="324" width="3" height="15" fill="rgb(254,100,25)"/><text x="411.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="410" y="340" width="1" height="15" fill="rgb(208,17,6)"/><text x="413.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.11%)</title><rect x="411" y="276" width="1" height="15" fill="rgb(251,107,26)"/><text x="414.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.11%)</title><rect x="411" y="292" width="1" height="15" fill="rgb(250,122,30)"/><text x="414.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="412" y="292" width="2" height="15" fill="rgb(210,190,29)"/><text x="415.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="412" y="308" width="2" height="15" fill="rgb(249,15,52)"/><text x="415.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="414" y="308" width="1" height="15" fill="rgb(240,204,50)"/><text x="417.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="414" y="324" width="1" height="15" fill="rgb(205,113,27)"/><text x="417.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.11%)</title><rect x="414" y="340" width="1" height="15" fill="rgb(245,83,53)"/><text x="417.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="414" y="356" width="1" height="15" fill="rgb(231,182,42)"/><text x="417.00" y="366.50"></text></g><g><title>0x7ff4d0e5ed50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="414" y="372" width="1" height="15" fill="rgb(221,149,37)"/><text x="417.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="415" y="308" width="1" height="15" fill="rgb(217,49,18)"/><text x="418.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="415" y="324" width="1" height="15" fill="rgb(243,150,47)"/><text x="418.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="415" y="340" width="1" height="15" fill="rgb(243,129,32)"/><text x="418.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:54) (1 samples, 0.11%)</title><rect x="415" y="356" width="1" height="15" fill="rgb(224,69,52)"/><text x="418.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:563) (1 samples, 0.11%)</title><rect x="416" y="308" width="2" height="15" fill="rgb(211,31,6)"/><text x="419.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="418" y="324" width="1" height="15" fill="rgb(216,107,49)"/><text x="421.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="419" y="324" width="1" height="15" fill="rgb(225,208,46)"/><text x="422.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="420" y="340" width="1" height="15" fill="rgb(220,150,18)"/><text x="423.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="421" y="340" width="2" height="15" fill="rgb(225,172,53)"/><text x="424.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="425" y="356" width="2" height="15" fill="rgb(214,172,12)"/><text x="428.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (2 samples, 0.22%)</title><rect x="427" y="356" width="2" height="15" fill="rgb(219,61,33)"/><text x="430.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 0.66%)</title><rect x="423" y="340" width="7" height="15" fill="rgb(212,65,50)"/><text x="426.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="429" y="356" width="1" height="15" fill="rgb(239,144,17)"/><text x="432.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="430" y="340" width="2" height="15" fill="rgb(207,162,43)"/><text x="433.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="432" y="340" width="1" height="15" fill="rgb(237,133,29)"/><text x="435.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="433" y="340" width="1" height="15" fill="rgb(238,120,13)"/><text x="436.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (2 samples, 0.22%)</title><rect x="434" y="340" width="3" height="15" fill="rgb(212,134,36)"/><text x="437.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (16 samples, 1.76%)</title><rect x="418" y="308" width="20" height="15" fill="rgb(245,140,36)"/><text x="421.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (14 samples, 1.54%)</title><rect x="420" y="324" width="18" height="15" fill="rgb(239,134,8)"/><text x="423.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="437" y="340" width="1" height="15" fill="rgb(214,13,25)"/><text x="440.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (208 samples, 22.83%)</title><rect x="170" y="180" width="270" height="15" fill="rgb(228,207,52)"/><text x="173.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (45 samples, 4.94%)</title><rect x="381" y="196" width="59" height="15" fill="rgb(233,88,35)"/><text x="384.00" y="206.50">_samme..</text></g><g><title>array_sum (methods.c:2215) (24 samples, 2.63%)</title><rect x="408" y="212" width="32" height="15" fill="rgb(234,81,16)"/><text x="411.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.63%)</title><rect x="408" y="228" width="32" height="15" fill="rgb(239,111,29)"/><text x="411.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 2.63%)</title><rect x="408" y="244" width="32" height="15" fill="rgb(248,174,14)"/><text x="411.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (22 samples, 2.41%)</title><rect x="411" y="260" width="29" height="15" fill="rgb(250,217,24)"/><text x="414.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (21 samples, 2.31%)</title><rect x="412" y="276" width="28" height="15" fill="rgb(248,1,5)"/><text x="415.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (20 samples, 2.20%)</title><rect x="414" y="292" width="26" height="15" fill="rgb(251,7,6)"/><text x="417.00" y="302.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:616) (1 samples, 0.11%)</title><rect x="438" y="308" width="2" height="15" fill="rgb(215,8,51)"/><text x="441.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="440" y="244" width="1" height="15" fill="rgb(224,15,19)"/><text x="443.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="440" y="260" width="1" height="15" fill="rgb(216,51,18)"/><text x="443.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="440" y="276" width="1" height="15" fill="rgb(208,176,15)"/><text x="443.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="440" y="292" width="1" height="15" fill="rgb(237,12,53)"/><text x="443.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="440" y="308" width="1" height="15" fill="rgb(242,124,21)"/><text x="443.00" y="318.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.22%)</title><rect x="440" y="180" width="2" height="15" fill="rgb(223,35,31)"/><text x="443.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="440" y="196" width="2" height="15" fill="rgb(235,16,53)"/><text x="443.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="440" y="212" width="2" height="15" fill="rgb(207,96,21)"/><text x="443.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.22%)</title><rect x="440" y="228" width="2" height="15" fill="rgb(246,98,31)"/><text x="443.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.11%)</title><rect x="441" y="244" width="1" height="15" fill="rgb(215,21,7)"/><text x="444.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="441" y="260" width="1" height="15" fill="rgb(213,218,50)"/><text x="444.00" y="270.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (211 samples, 23.16%)</title><rect x="170" y="148" width="273" height="15" fill="rgb(240,193,34)"/><text x="173.00" y="158.50">predict_proba (sklearn/ensemble/_wei..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (211 samples, 23.16%)</title><rect x="170" y="164" width="273" height="15" fill="rgb(237,52,47)"/><text x="173.00" y="174.50">decision_function (sklearn/ensemble/..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="442" y="180" width="1" height="15" fill="rgb(239,98,44)"/><text x="445.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="442" y="196" width="1" height="15" fill="rgb(245,22,45)"/><text x="445.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="442" y="212" width="1" height="15" fill="rgb(250,60,36)"/><text x="445.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="442" y="228" width="1" height="15" fill="rgb(208,87,15)"/><text x="445.00" y="238.50"></text></g><g><title>0x7ff4d0e3eace (libc-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="244" width="1" height="15" fill="rgb(207,161,18)"/><text x="445.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:38) (330 samples, 36.22%)</title><rect x="17" y="52" width="428" height="15" fill="rgb(249,90,3)"/><text x="20.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:37) (330 samples, 36.22%)</title><rect x="17" y="68" width="428" height="15" fill="rgb(244,45,19)"/><text x="20.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:29) (328 samples, 36.00%)</title><rect x="20" y="84" width="425" height="15" fill="rgb(205,148,1)"/><text x="23.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_10..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:23) (212 samples, 23.27%)</title><rect x="170" y="100" width="275" height="15" fill="rgb(211,224,28)"/><text x="173.00" y="110.50">profile (bench_AdaBoostClassifier_de..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (212 samples, 23.27%)</title><rect x="170" y="116" width="275" height="15" fill="rgb(247,115,0)"/><text x="173.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (212 samples, 23.27%)</title><rect x="170" y="132" width="275" height="15" fill="rgb(207,28,4)"/><text x="173.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.11%)</title><rect x="443" y="148" width="2" height="15" fill="rgb(210,146,53)"/><text x="446.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.11%)</title><rect x="443" y="164" width="2" height="15" fill="rgb(210,96,47)"/><text x="446.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.11%)</title><rect x="443" y="180" width="2" height="15" fill="rgb(210,40,48)"/><text x="446.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="443" y="196" width="2" height="15" fill="rgb(221,214,30)"/><text x="446.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="443" y="212" width="2" height="15" fill="rgb(248,221,40)"/><text x="446.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="443" y="228" width="2" height="15" fill="rgb(214,46,52)"/><text x="446.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="443" y="244" width="2" height="15" fill="rgb(227,89,7)"/><text x="446.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.11%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(208,169,28)"/><text x="446.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.11%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(248,52,18)"/><text x="446.00" y="286.50"></text></g><g><title>0x7ff4d1010c32 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="443" y="292" width="2" height="15" fill="rgb(218,225,42)"/><text x="446.00" y="302.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.11%)</title><rect x="445" y="820" width="1" height="15" fill="rgb(226,159,15)"/><text x="448.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.11%)</title><rect x="445" y="836" width="1" height="15" fill="rgb(222,117,40)"/><text x="448.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="445" y="852" width="1" height="15" fill="rgb(244,37,0)"/><text x="448.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="445" y="868" width="1" height="15" fill="rgb(216,85,52)"/><text x="448.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.11%)</title><rect x="445" y="884" width="1" height="15" fill="rgb(251,190,49)"/><text x="448.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.11%)</title><rect x="445" y="900" width="1" height="15" fill="rgb(240,66,14)"/><text x="448.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.11%)</title><rect x="445" y="916" width="1" height="15" fill="rgb(217,139,31)"/><text x="448.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.11%)</title><rect x="445" y="932" width="1" height="15" fill="rgb(246,16,0)"/><text x="448.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.11%)</title><rect x="445" y="948" width="1" height="15" fill="rgb(214,177,40)"/><text x="448.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.11%)</title><rect x="445" y="964" width="1" height="15" fill="rgb(244,178,11)"/><text x="448.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.11%)</title><rect x="445" y="980" width="1" height="15" fill="rgb(248,120,43)"/><text x="448.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.11%)</title><rect x="445" y="996" width="1" height="15" fill="rgb(218,104,2)"/><text x="448.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.11%)</title><rect x="445" y="1012" width="1" height="15" fill="rgb(226,103,10)"/><text x="448.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:41) (1 samples, 0.11%)</title><rect x="446" y="820" width="1" height="15" fill="rgb(252,102,20)"/><text x="449.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="446" y="836" width="1" height="15" fill="rgb(218,45,47)"/><text x="449.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="446" y="852" width="1" height="15" fill="rgb(241,211,16)"/><text x="449.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="446" y="868" width="1" height="15" fill="rgb(230,32,19)"/><text x="449.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="446" y="884" width="1" height="15" fill="rgb(222,101,33)"/><text x="449.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="446" y="900" width="1" height="15" fill="rgb(232,78,27)"/><text x="449.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="446" y="916" width="1" height="15" fill="rgb(235,175,18)"/><text x="449.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:2) (3 samples, 0.33%)</title><rect x="445" y="148" width="4" height="15" fill="rgb(239,139,53)"/><text x="448.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="164" width="4" height="15" fill="rgb(210,152,5)"/><text x="448.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.33%)</title><rect x="445" y="180" width="4" height="15" fill="rgb(246,220,48)"/><text x="448.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="196" width="4" height="15" fill="rgb(235,31,8)"/><text x="448.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="212" width="4" height="15" fill="rgb(232,202,37)"/><text x="448.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="445" y="228" width="4" height="15" fill="rgb(208,143,48)"/><text x="448.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="445" y="244" width="4" height="15" fill="rgb(235,183,18)"/><text x="448.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="445" y="260" width="4" height="15" fill="rgb(205,109,9)"/><text x="448.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="276" width="4" height="15" fill="rgb(215,2,53)"/><text x="448.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.33%)</title><rect x="445" y="292" width="4" height="15" fill="rgb(231,76,0)"/><text x="448.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="308" width="4" height="15" fill="rgb(223,0,13)"/><text x="448.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="445" y="324" width="4" height="15" fill="rgb(231,60,31)"/><text x="448.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="445" y="340" width="4" height="15" fill="rgb(213,218,13)"/><text x="448.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="445" y="356" width="4" height="15" fill="rgb(213,76,54)"/><text x="448.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="372" width="4" height="15" fill="rgb(241,224,12)"/><text x="448.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.33%)</title><rect x="445" y="388" width="4" height="15" fill="rgb(246,22,39)"/><text x="448.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="404" width="4" height="15" fill="rgb(230,96,50)"/><text x="448.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="445" y="420" width="4" height="15" fill="rgb(218,183,19)"/><text x="448.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="445" y="436" width="4" height="15" fill="rgb(249,9,43)"/><text x="448.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="445" y="452" width="4" height="15" fill="rgb(237,222,14)"/><text x="448.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="468" width="4" height="15" fill="rgb(243,18,16)"/><text x="448.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.33%)</title><rect x="445" y="484" width="4" height="15" fill="rgb(223,80,16)"/><text x="448.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="500" width="4" height="15" fill="rgb(227,117,54)"/><text x="448.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="445" y="516" width="4" height="15" fill="rgb(246,146,15)"/><text x="448.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="445" y="532" width="4" height="15" fill="rgb(214,148,19)"/><text x="448.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="445" y="548" width="4" height="15" fill="rgb(242,86,13)"/><text x="448.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="564" width="4" height="15" fill="rgb(213,196,8)"/><text x="448.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.33%)</title><rect x="445" y="580" width="4" height="15" fill="rgb(220,100,52)"/><text x="448.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="596" width="4" height="15" fill="rgb(248,122,24)"/><text x="448.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.33%)</title><rect x="445" y="612" width="4" height="15" fill="rgb(242,181,41)"/><text x="448.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="628" width="4" height="15" fill="rgb(206,157,53)"/><text x="448.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="644" width="4" height="15" fill="rgb(208,159,9)"/><text x="448.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="445" y="660" width="4" height="15" fill="rgb(241,21,13)"/><text x="448.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="445" y="676" width="4" height="15" fill="rgb(237,84,22)"/><text x="448.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="445" y="692" width="4" height="15" fill="rgb(230,62,11)"/><text x="448.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="708" width="4" height="15" fill="rgb(235,99,2)"/><text x="448.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.33%)</title><rect x="445" y="724" width="4" height="15" fill="rgb(227,163,2)"/><text x="448.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="445" y="740" width="4" height="15" fill="rgb(222,144,16)"/><text x="448.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="445" y="756" width="4" height="15" fill="rgb(246,6,23)"/><text x="448.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="445" y="772" width="4" height="15" fill="rgb(252,196,27)"/><text x="448.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="445" y="788" width="4" height="15" fill="rgb(232,84,6)"/><text x="448.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="445" y="804" width="4" height="15" fill="rgb(250,123,30)"/><text x="448.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:57) (1 samples, 0.11%)</title><rect x="447" y="820" width="2" height="15" fill="rgb(212,204,34)"/><text x="450.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="447" y="836" width="2" height="15" fill="rgb(244,138,42)"/><text x="450.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="447" y="852" width="2" height="15" fill="rgb(231,154,51)"/><text x="450.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="447" y="868" width="2" height="15" fill="rgb(231,157,40)"/><text x="450.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="447" y="884" width="2" height="15" fill="rgb(216,194,42)"/><text x="450.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.11%)</title><rect x="447" y="900" width="2" height="15" fill="rgb(233,51,30)"/><text x="450.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.11%)</title><rect x="447" y="916" width="2" height="15" fill="rgb(217,19,46)"/><text x="450.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.11%)</title><rect x="447" y="932" width="2" height="15" fill="rgb(244,28,6)"/><text x="450.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="447" y="948" width="2" height="15" fill="rgb(223,214,10)"/><text x="450.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="447" y="964" width="2" height="15" fill="rgb(245,210,9)"/><text x="450.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="447" y="980" width="2" height="15" fill="rgb(210,155,39)"/><text x="450.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="447" y="996" width="2" height="15" fill="rgb(209,119,13)"/><text x="450.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="447" y="1012" width="2" height="15" fill="rgb(213,159,1)"/><text x="450.00" y="1022.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="447" y="1028" width="2" height="15" fill="rgb(252,180,14)"/><text x="450.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="449" y="180" width="1" height="15" fill="rgb(235,23,50)"/><text x="452.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="196" width="1" height="15" fill="rgb(233,56,13)"/><text x="452.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="212" width="1" height="15" fill="rgb(241,197,6)"/><text x="452.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="228" width="1" height="15" fill="rgb(223,6,18)"/><text x="452.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="244" width="1" height="15" fill="rgb(228,107,17)"/><text x="452.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="260" width="1" height="15" fill="rgb(220,66,35)"/><text x="452.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="276" width="1" height="15" fill="rgb(222,179,36)"/><text x="452.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.11%)</title><rect x="449" y="292" width="1" height="15" fill="rgb(238,130,0)"/><text x="452.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="308" width="1" height="15" fill="rgb(238,44,45)"/><text x="452.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="324" width="1" height="15" fill="rgb(210,181,50)"/><text x="452.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="340" width="1" height="15" fill="rgb(214,35,34)"/><text x="452.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="356" width="1" height="15" fill="rgb(245,154,47)"/><text x="452.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="372" width="1" height="15" fill="rgb(206,12,49)"/><text x="452.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.11%)</title><rect x="449" y="388" width="1" height="15" fill="rgb(249,212,33)"/><text x="452.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="404" width="1" height="15" fill="rgb(215,0,9)"/><text x="452.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="420" width="1" height="15" fill="rgb(242,135,14)"/><text x="452.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="436" width="1" height="15" fill="rgb(247,29,29)"/><text x="452.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="452" width="1" height="15" fill="rgb(231,93,52)"/><text x="452.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="468" width="1" height="15" fill="rgb(214,154,43)"/><text x="452.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.11%)</title><rect x="449" y="484" width="1" height="15" fill="rgb(236,78,5)"/><text x="452.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="500" width="1" height="15" fill="rgb(252,1,52)"/><text x="452.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="516" width="1" height="15" fill="rgb(242,20,18)"/><text x="452.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="532" width="1" height="15" fill="rgb(207,2,14)"/><text x="452.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="548" width="1" height="15" fill="rgb(206,27,35)"/><text x="452.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="564" width="1" height="15" fill="rgb(210,201,44)"/><text x="452.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.11%)</title><rect x="449" y="580" width="1" height="15" fill="rgb(207,216,33)"/><text x="452.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="596" width="1" height="15" fill="rgb(248,7,19)"/><text x="452.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="612" width="1" height="15" fill="rgb(209,72,42)"/><text x="452.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="628" width="1" height="15" fill="rgb(224,85,8)"/><text x="452.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="644" width="1" height="15" fill="rgb(241,71,8)"/><text x="452.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="660" width="1" height="15" fill="rgb(216,59,34)"/><text x="452.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.11%)</title><rect x="449" y="676" width="1" height="15" fill="rgb(207,102,39)"/><text x="452.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="692" width="1" height="15" fill="rgb(224,144,42)"/><text x="452.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="708" width="1" height="15" fill="rgb(207,123,8)"/><text x="452.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="724" width="1" height="15" fill="rgb(220,156,52)"/><text x="452.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="740" width="1" height="15" fill="rgb(241,161,31)"/><text x="452.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="756" width="1" height="15" fill="rgb(229,137,31)"/><text x="452.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.11%)</title><rect x="449" y="772" width="1" height="15" fill="rgb(216,47,38)"/><text x="452.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="449" y="788" width="1" height="15" fill="rgb(254,163,43)"/><text x="452.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="804" width="1" height="15" fill="rgb(206,88,52)"/><text x="452.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="820" width="1" height="15" fill="rgb(234,69,31)"/><text x="452.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="836" width="1" height="15" fill="rgb(208,157,30)"/><text x="452.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="852" width="1" height="15" fill="rgb(221,225,46)"/><text x="452.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="868" width="1" height="15" fill="rgb(211,180,37)"/><text x="452.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="884" width="1" height="15" fill="rgb(212,53,2)"/><text x="452.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.11%)</title><rect x="449" y="900" width="1" height="15" fill="rgb(209,106,4)"/><text x="452.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="449" y="916" width="1" height="15" fill="rgb(241,194,15)"/><text x="452.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="932" width="1" height="15" fill="rgb(249,41,4)"/><text x="452.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="948" width="1" height="15" fill="rgb(207,32,27)"/><text x="452.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="964" width="1" height="15" fill="rgb(248,214,9)"/><text x="452.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="980" width="1" height="15" fill="rgb(240,102,44)"/><text x="452.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="996" width="1" height="15" fill="rgb(232,163,22)"/><text x="452.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="1012" width="1" height="15" fill="rgb(252,17,33)"/><text x="452.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3034) (1 samples, 0.11%)</title><rect x="449" y="1028" width="1" height="15" fill="rgb(221,76,12)"/><text x="452.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.11%)</title><rect x="449" y="1044" width="1" height="15" fill="rgb(213,182,11)"/><text x="452.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.11%)</title><rect x="449" y="1060" width="1" height="15" fill="rgb(206,195,19)"/><text x="452.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:50) (1 samples, 0.11%)</title><rect x="449" y="1076" width="1" height="15" fill="rgb(211,85,2)"/><text x="452.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.11%)</title><rect x="449" y="1092" width="1" height="15" fill="rgb(209,119,13)"/><text x="452.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:4) (2 samples, 0.22%)</title><rect x="449" y="148" width="2" height="15" fill="rgb(208,98,50)"/><text x="452.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="449" y="164" width="2" height="15" fill="rgb(248,55,48)"/><text x="452.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="450" y="180" width="1" height="15" fill="rgb(222,186,6)"/><text x="453.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="450" y="196" width="1" height="15" fill="rgb(251,34,24)"/><text x="453.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="450" y="212" width="1" height="15" fill="rgb(221,39,10)"/><text x="453.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="450" y="228" width="1" height="15" fill="rgb(250,32,50)"/><text x="453.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.11%)</title><rect x="450" y="244" width="1" height="15" fill="rgb(227,101,8)"/><text x="453.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="450" y="260" width="1" height="15" fill="rgb(205,194,13)"/><text x="453.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="450" y="276" width="1" height="15" fill="rgb(216,192,19)"/><text x="453.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="450" y="292" width="1" height="15" fill="rgb(223,60,22)"/><text x="453.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="450" y="308" width="1" height="15" fill="rgb(222,57,42)"/><text x="453.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="450" y="324" width="1" height="15" fill="rgb(229,15,50)"/><text x="453.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:54) (1 samples, 0.11%)</title><rect x="450" y="340" width="1" height="15" fill="rgb(213,26,40)"/><text x="453.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="450" y="356" width="1" height="15" fill="rgb(242,152,32)"/><text x="453.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="450" y="372" width="1" height="15" fill="rgb(212,109,10)"/><text x="453.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="450" y="388" width="1" height="15" fill="rgb(232,172,43)"/><text x="453.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="450" y="404" width="1" height="15" fill="rgb(226,58,53)"/><text x="453.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="450" y="420" width="1" height="15" fill="rgb(251,216,46)"/><text x="453.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:75) (1 samples, 0.11%)</title><rect x="450" y="436" width="1" height="15" fill="rgb(244,150,31)"/><text x="453.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="450" y="452" width="1" height="15" fill="rgb(251,95,14)"/><text x="453.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="450" y="468" width="1" height="15" fill="rgb(225,214,31)"/><text x="453.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="450" y="484" width="1" height="15" fill="rgb(241,179,53)"/><text x="453.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="450" y="500" width="1" height="15" fill="rgb(220,211,20)"/><text x="453.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="450" y="516" width="1" height="15" fill="rgb(240,190,52)"/><text x="453.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="450" y="532" width="1" height="15" fill="rgb(237,72,50)"/><text x="453.00" y="542.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.11%)</title><rect x="451" y="244" width="1" height="15" fill="rgb(240,228,45)"/><text x="454.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="260" width="1" height="15" fill="rgb(211,41,29)"/><text x="454.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="276" width="1" height="15" fill="rgb(217,185,6)"/><text x="454.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="292" width="1" height="15" fill="rgb(235,77,11)"/><text x="454.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="308" width="1" height="15" fill="rgb(253,191,25)"/><text x="454.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="324" width="1" height="15" fill="rgb(243,64,51)"/><text x="454.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.11%)</title><rect x="451" y="340" width="1" height="15" fill="rgb(237,166,16)"/><text x="454.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="356" width="1" height="15" fill="rgb(210,197,28)"/><text x="454.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="451" y="372" width="1" height="15" fill="rgb(241,101,6)"/><text x="454.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="388" width="1" height="15" fill="rgb(226,114,36)"/><text x="454.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="404" width="1" height="15" fill="rgb(210,148,35)"/><text x="454.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="420" width="1" height="15" fill="rgb(241,6,20)"/><text x="454.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="436" width="1" height="15" fill="rgb(248,215,40)"/><text x="454.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="452" width="1" height="15" fill="rgb(247,34,42)"/><text x="454.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="468" width="1" height="15" fill="rgb(229,72,37)"/><text x="454.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.11%)</title><rect x="451" y="484" width="1" height="15" fill="rgb(206,100,36)"/><text x="454.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="500" width="1" height="15" fill="rgb(214,188,32)"/><text x="454.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="516" width="1" height="15" fill="rgb(250,135,31)"/><text x="454.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="532" width="1" height="15" fill="rgb(234,204,25)"/><text x="454.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="548" width="1" height="15" fill="rgb(229,194,53)"/><text x="454.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="564" width="1" height="15" fill="rgb(237,200,19)"/><text x="454.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.11%)</title><rect x="451" y="580" width="1" height="15" fill="rgb(239,22,22)"/><text x="454.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="596" width="1" height="15" fill="rgb(234,218,30)"/><text x="454.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="612" width="1" height="15" fill="rgb(215,77,4)"/><text x="454.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="628" width="1" height="15" fill="rgb(230,55,36)"/><text x="454.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="644" width="1" height="15" fill="rgb(224,29,33)"/><text x="454.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="660" width="1" height="15" fill="rgb(248,23,35)"/><text x="454.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.11%)</title><rect x="451" y="676" width="1" height="15" fill="rgb(225,114,9)"/><text x="454.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="692" width="1" height="15" fill="rgb(232,219,45)"/><text x="454.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="708" width="1" height="15" fill="rgb(245,63,1)"/><text x="454.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="724" width="1" height="15" fill="rgb(216,114,18)"/><text x="454.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="740" width="1" height="15" fill="rgb(236,27,29)"/><text x="454.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="756" width="1" height="15" fill="rgb(248,138,8)"/><text x="454.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.11%)</title><rect x="451" y="772" width="1" height="15" fill="rgb(225,15,8)"/><text x="454.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="451" y="788" width="1" height="15" fill="rgb(226,67,5)"/><text x="454.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="804" width="1" height="15" fill="rgb(226,177,53)"/><text x="454.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="820" width="1" height="15" fill="rgb(244,226,46)"/><text x="454.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="836" width="1" height="15" fill="rgb(205,133,49)"/><text x="454.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="852" width="1" height="15" fill="rgb(233,21,42)"/><text x="454.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="868" width="1" height="15" fill="rgb(237,120,14)"/><text x="454.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="884" width="1" height="15" fill="rgb(245,164,9)"/><text x="454.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.11%)</title><rect x="451" y="900" width="1" height="15" fill="rgb(207,77,46)"/><text x="454.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="916" width="1" height="15" fill="rgb(246,69,33)"/><text x="454.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="451" y="932" width="1" height="15" fill="rgb(242,74,22)"/><text x="454.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="948" width="1" height="15" fill="rgb(208,224,21)"/><text x="454.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="964" width="1" height="15" fill="rgb(247,98,14)"/><text x="454.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="980" width="1" height="15" fill="rgb(207,168,17)"/><text x="454.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="996" width="1" height="15" fill="rgb(214,179,0)"/><text x="454.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="1012" width="1" height="15" fill="rgb(230,1,50)"/><text x="454.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1028" width="1" height="15" fill="rgb(228,63,32)"/><text x="454.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.11%)</title><rect x="451" y="1044" width="1" height="15" fill="rgb(241,24,0)"/><text x="454.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="451" y="1060" width="1" height="15" fill="rgb(214,202,42)"/><text x="454.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1076" width="1" height="15" fill="rgb(243,70,31)"/><text x="454.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="1092" width="1" height="15" fill="rgb(227,100,21)"/><text x="454.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="1108" width="1" height="15" fill="rgb(224,94,7)"/><text x="454.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="1124" width="1" height="15" fill="rgb(220,71,20)"/><text x="454.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="1140" width="1" height="15" fill="rgb(212,97,41)"/><text x="454.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1156" width="1" height="15" fill="rgb(209,217,5)"/><text x="454.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.11%)</title><rect x="451" y="1172" width="1" height="15" fill="rgb(246,204,12)"/><text x="454.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="451" y="1188" width="1" height="15" fill="rgb(249,35,6)"/><text x="454.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1204" width="1" height="15" fill="rgb(233,98,0)"/><text x="454.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="1220" width="1" height="15" fill="rgb(222,204,47)"/><text x="454.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="1236" width="1" height="15" fill="rgb(226,89,39)"/><text x="454.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="1252" width="1" height="15" fill="rgb(232,46,4)"/><text x="454.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="1268" width="1" height="15" fill="rgb(211,20,34)"/><text x="454.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1284" width="1" height="15" fill="rgb(240,9,24)"/><text x="454.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.11%)</title><rect x="451" y="1300" width="1" height="15" fill="rgb(253,138,28)"/><text x="454.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="1316" width="1" height="15" fill="rgb(250,190,45)"/><text x="454.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="1332" width="1" height="15" fill="rgb(250,76,13)"/><text x="454.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="1348" width="1" height="15" fill="rgb(226,184,24)"/><text x="454.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="1364" width="1" height="15" fill="rgb(220,11,7)"/><text x="454.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1380" width="1" height="15" fill="rgb(220,13,8)"/><text x="454.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:18) (1 samples, 0.11%)</title><rect x="451" y="1396" width="1" height="15" fill="rgb(208,157,53)"/><text x="454.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="1412" width="1" height="15" fill="rgb(229,184,9)"/><text x="454.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="1428" width="1" height="15" fill="rgb(228,8,46)"/><text x="454.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="1444" width="1" height="15" fill="rgb(212,73,20)"/><text x="454.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="1460" width="1" height="15" fill="rgb(237,20,37)"/><text x="454.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1476" width="1" height="15" fill="rgb(233,190,4)"/><text x="454.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:20) (1 samples, 0.11%)</title><rect x="451" y="1492" width="1" height="15" fill="rgb(234,48,26)"/><text x="454.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="451" y="1508" width="1" height="15" fill="rgb(227,169,30)"/><text x="454.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="1524" width="1" height="15" fill="rgb(252,47,6)"/><text x="454.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="1540" width="1" height="15" fill="rgb(217,31,52)"/><text x="454.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="451" y="1556" width="1" height="15" fill="rgb(235,23,33)"/><text x="454.00" y="1566.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="451" y="1572" width="1" height="15" fill="rgb(207,116,0)"/><text x="454.00" y="1582.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="451" y="1588" width="1" height="15" fill="rgb(222,218,48)"/><text x="454.00" y="1598.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="451" y="1604" width="1" height="15" fill="rgb(212,85,44)"/><text x="454.00" y="1614.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.11%)</title><rect x="451" y="1620" width="1" height="15" fill="rgb(225,35,12)"/><text x="454.00" y="1630.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.11%)</title><rect x="451" y="1636" width="1" height="15" fill="rgb(214,108,20)"/><text x="454.00" y="1646.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="451" y="1652" width="1" height="15" fill="rgb(216,48,21)"/><text x="454.00" y="1662.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.11%)</title><rect x="452" y="916" width="2" height="15" fill="rgb(217,203,34)"/><text x="455.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="932" width="2" height="15" fill="rgb(244,20,1)"/><text x="455.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="948" width="2" height="15" fill="rgb(209,110,20)"/><text x="455.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="964" width="2" height="15" fill="rgb(244,195,54)"/><text x="455.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="980" width="2" height="15" fill="rgb(235,67,3)"/><text x="455.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="996" width="2" height="15" fill="rgb(222,166,52)"/><text x="455.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.11%)</title><rect x="452" y="1012" width="2" height="15" fill="rgb(235,150,2)"/><text x="455.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1028" width="2" height="15" fill="rgb(211,36,21)"/><text x="455.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1044" width="2" height="15" fill="rgb(228,62,7)"/><text x="455.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1060" width="2" height="15" fill="rgb(216,164,36)"/><text x="455.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1076" width="2" height="15" fill="rgb(213,122,40)"/><text x="455.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1092" width="2" height="15" fill="rgb(208,162,16)"/><text x="455.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.11%)</title><rect x="452" y="1108" width="2" height="15" fill="rgb(212,4,7)"/><text x="455.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1124" width="2" height="15" fill="rgb(212,79,2)"/><text x="455.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1140" width="2" height="15" fill="rgb(218,229,38)"/><text x="455.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1156" width="2" height="15" fill="rgb(243,44,28)"/><text x="455.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1172" width="2" height="15" fill="rgb(229,76,23)"/><text x="455.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1188" width="2" height="15" fill="rgb(243,80,34)"/><text x="455.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.11%)</title><rect x="452" y="1204" width="2" height="15" fill="rgb(247,144,26)"/><text x="455.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1220" width="2" height="15" fill="rgb(229,39,42)"/><text x="455.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1236" width="2" height="15" fill="rgb(225,41,2)"/><text x="455.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1252" width="2" height="15" fill="rgb(221,15,27)"/><text x="455.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1268" width="2" height="15" fill="rgb(222,213,21)"/><text x="455.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1284" width="2" height="15" fill="rgb(227,220,13)"/><text x="455.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.11%)</title><rect x="452" y="1300" width="2" height="15" fill="rgb(226,63,28)"/><text x="455.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1316" width="2" height="15" fill="rgb(247,95,13)"/><text x="455.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1332" width="2" height="15" fill="rgb(221,41,44)"/><text x="455.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1348" width="2" height="15" fill="rgb(234,53,44)"/><text x="455.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1364" width="2" height="15" fill="rgb(250,20,23)"/><text x="455.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1380" width="2" height="15" fill="rgb(229,192,25)"/><text x="455.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.11%)</title><rect x="452" y="1396" width="2" height="15" fill="rgb(246,140,5)"/><text x="455.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1412" width="2" height="15" fill="rgb(230,138,19)"/><text x="455.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1428" width="2" height="15" fill="rgb(224,91,11)"/><text x="455.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1444" width="2" height="15" fill="rgb(245,224,21)"/><text x="455.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1460" width="2" height="15" fill="rgb(224,129,16)"/><text x="455.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1476" width="2" height="15" fill="rgb(242,84,11)"/><text x="455.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.11%)</title><rect x="452" y="1492" width="2" height="15" fill="rgb(217,129,6)"/><text x="455.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1508" width="2" height="15" fill="rgb(252,102,11)"/><text x="455.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="452" y="1524" width="2" height="15" fill="rgb(218,34,40)"/><text x="455.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1540" width="2" height="15" fill="rgb(232,89,10)"/><text x="455.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1556" width="2" height="15" fill="rgb(224,28,49)"/><text x="455.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1572" width="2" height="15" fill="rgb(236,21,30)"/><text x="455.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1588" width="2" height="15" fill="rgb(249,0,33)"/><text x="455.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1604" width="2" height="15" fill="rgb(241,210,21)"/><text x="455.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1620" width="2" height="15" fill="rgb(221,224,43)"/><text x="455.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.11%)</title><rect x="452" y="1636" width="2" height="15" fill="rgb(231,105,1)"/><text x="455.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="452" y="1652" width="2" height="15" fill="rgb(225,84,2)"/><text x="455.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1668" width="2" height="15" fill="rgb(212,56,11)"/><text x="455.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1684" width="2" height="15" fill="rgb(224,132,16)"/><text x="455.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1700" width="2" height="15" fill="rgb(227,153,38)"/><text x="455.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1716" width="2" height="15" fill="rgb(244,154,53)"/><text x="455.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1732" width="2" height="15" fill="rgb(233,58,43)"/><text x="455.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1748" width="2" height="15" fill="rgb(249,120,35)"/><text x="455.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.11%)</title><rect x="452" y="1764" width="2" height="15" fill="rgb(225,71,40)"/><text x="455.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1780" width="2" height="15" fill="rgb(233,202,46)"/><text x="455.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1796" width="2" height="15" fill="rgb(249,29,43)"/><text x="455.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1812" width="2" height="15" fill="rgb(212,104,16)"/><text x="455.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1828" width="2" height="15" fill="rgb(207,184,23)"/><text x="455.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1844" width="2" height="15" fill="rgb(208,210,34)"/><text x="455.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.11%)</title><rect x="452" y="1860" width="2" height="15" fill="rgb(253,19,38)"/><text x="455.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1876" width="2" height="15" fill="rgb(245,219,38)"/><text x="455.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1892" width="2" height="15" fill="rgb(215,177,16)"/><text x="455.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1908" width="2" height="15" fill="rgb(223,143,2)"/><text x="455.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1924" width="2" height="15" fill="rgb(238,115,42)"/><text x="455.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1940" width="2" height="15" fill="rgb(214,133,50)"/><text x="455.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6339) (1 samples, 0.11%)</title><rect x="452" y="1956" width="2" height="15" fill="rgb(214,0,7)"/><text x="455.00" y="1966.50"></text></g><g><title>srange (pyparsing.py:5688) (1 samples, 0.11%)</title><rect x="452" y="1972" width="2" height="15" fill="rgb(214,93,45)"/><text x="455.00" y="1982.50"></text></g><g><title>parseString (pyparsing.py:1935) (1 samples, 0.11%)</title><rect x="452" y="1988" width="2" height="15" fill="rgb(210,220,50)"/><text x="455.00" y="1998.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.11%)</title><rect x="452" y="2004" width="2" height="15" fill="rgb(241,162,15)"/><text x="455.00" y="2014.50"></text></g><g><title>parseImpl (pyparsing.py:4050) (1 samples, 0.11%)</title><rect x="452" y="2020" width="2" height="15" fill="rgb(214,37,20)"/><text x="455.00" y="2030.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.11%)</title><rect x="452" y="2036" width="2" height="15" fill="rgb(251,134,46)"/><text x="455.00" y="2046.50"></text></g><g><title>parseImpl (pyparsing.py:4443) (1 samples, 0.11%)</title><rect x="452" y="2052" width="2" height="15" fill="rgb(213,88,45)"/><text x="455.00" y="2062.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.11%)</title><rect x="452" y="2068" width="2" height="15" fill="rgb(244,168,50)"/><text x="455.00" y="2078.50"></text></g><g><title>parseImpl (pyparsing.py:4688) (1 samples, 0.11%)</title><rect x="452" y="2084" width="2" height="15" fill="rgb(226,58,19)"/><text x="455.00" y="2094.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.11%)</title><rect x="452" y="2100" width="2" height="15" fill="rgb(221,37,12)"/><text x="455.00" y="2110.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="452" y="2116" width="2" height="15" fill="rgb(210,20,50)"/><text x="455.00" y="2126.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.22%)</title><rect x="452" y="436" width="3" height="15" fill="rgb(253,142,20)"/><text x="455.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="452" width="3" height="15" fill="rgb(212,138,42)"/><text x="455.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="468" width="3" height="15" fill="rgb(240,60,19)"/><text x="455.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="484" width="3" height="15" fill="rgb(213,126,38)"/><text x="455.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="500" width="3" height="15" fill="rgb(246,23,12)"/><text x="455.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="516" width="3" height="15" fill="rgb(224,38,42)"/><text x="455.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.22%)</title><rect x="452" y="532" width="3" height="15" fill="rgb(242,118,15)"/><text x="455.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="548" width="3" height="15" fill="rgb(216,84,21)"/><text x="455.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="564" width="3" height="15" fill="rgb(243,218,20)"/><text x="455.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="580" width="3" height="15" fill="rgb(233,56,26)"/><text x="455.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="596" width="3" height="15" fill="rgb(225,68,51)"/><text x="455.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="612" width="3" height="15" fill="rgb(214,21,37)"/><text x="455.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.22%)</title><rect x="452" y="628" width="3" height="15" fill="rgb(247,185,50)"/><text x="455.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="644" width="3" height="15" fill="rgb(231,35,5)"/><text x="455.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="660" width="3" height="15" fill="rgb(205,84,37)"/><text x="455.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="676" width="3" height="15" fill="rgb(228,6,42)"/><text x="455.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="692" width="3" height="15" fill="rgb(216,44,30)"/><text x="455.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="708" width="3" height="15" fill="rgb(224,56,5)"/><text x="455.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.22%)</title><rect x="452" y="724" width="3" height="15" fill="rgb(245,55,41)"/><text x="455.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="740" width="3" height="15" fill="rgb(231,45,44)"/><text x="455.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="756" width="3" height="15" fill="rgb(242,60,43)"/><text x="455.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="772" width="3" height="15" fill="rgb(238,124,30)"/><text x="455.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="788" width="3" height="15" fill="rgb(234,6,9)"/><text x="455.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="804" width="3" height="15" fill="rgb(243,192,37)"/><text x="455.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.22%)</title><rect x="452" y="820" width="3" height="15" fill="rgb(239,198,45)"/><text x="455.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="836" width="3" height="15" fill="rgb(208,33,13)"/><text x="455.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="852" width="3" height="15" fill="rgb(207,50,22)"/><text x="455.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="868" width="3" height="15" fill="rgb(236,146,5)"/><text x="455.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="884" width="3" height="15" fill="rgb(248,127,17)"/><text x="455.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="900" width="3" height="15" fill="rgb(250,194,41)"/><text x="455.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:58) (1 samples, 0.11%)</title><rect x="454" y="916" width="1" height="15" fill="rgb(246,142,0)"/><text x="457.00" y="926.50"></text></g><g><title>inner (typing.py:248) (1 samples, 0.11%)</title><rect x="454" y="932" width="1" height="15" fill="rgb(217,142,41)"/><text x="457.00" y="942.50"></text></g><g><title>__getitem__ (typing.py:352) (1 samples, 0.11%)</title><rect x="454" y="948" width="1" height="15" fill="rgb(213,211,14)"/><text x="457.00" y="958.50"></text></g><g><title>__init__ (typing.py:613) (1 samples, 0.11%)</title><rect x="454" y="964" width="1" height="15" fill="rgb(225,68,36)"/><text x="457.00" y="974.50"></text></g><g><title>__setattr__ (typing.py:703) (1 samples, 0.11%)</title><rect x="454" y="980" width="1" height="15" fill="rgb(206,159,52)"/><text x="457.00" y="990.50"></text></g><g><title>getsourcelines (inspect.py:955) (1 samples, 0.11%)</title><rect x="455" y="1348" width="1" height="15" fill="rgb(254,132,38)"/><text x="458.00" y="1358.50"></text></g><g><title>findsource (inspect.py:768) (1 samples, 0.11%)</title><rect x="455" y="1364" width="1" height="15" fill="rgb(234,214,45)"/><text x="458.00" y="1374.50"></text></g><g><title>getsourcefile (inspect.py:691) (1 samples, 0.11%)</title><rect x="455" y="1380" width="1" height="15" fill="rgb(239,65,33)"/><text x="458.00" y="1390.50"></text></g><g><title>&lt;genexpr&gt; (inspect.py:690) (1 samples, 0.11%)</title><rect x="455" y="1396" width="1" height="15" fill="rgb(232,40,14)"/><text x="458.00" y="1406.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.11%)</title><rect x="456" y="1380" width="2" height="15" fill="rgb(252,44,48)"/><text x="459.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.11%)</title><rect x="456" y="1396" width="2" height="15" fill="rgb(234,117,48)"/><text x="459.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="456" y="1412" width="2" height="15" fill="rgb(225,124,27)"/><text x="459.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="456" y="1428" width="2" height="15" fill="rgb(224,209,31)"/><text x="459.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.11%)</title><rect x="456" y="1444" width="2" height="15" fill="rgb(218,27,26)"/><text x="459.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.11%)</title><rect x="456" y="1460" width="2" height="15" fill="rgb(247,143,1)"/><text x="459.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1476" width="2" height="15" fill="rgb(213,146,36)"/><text x="459.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="456" y="1492" width="2" height="15" fill="rgb(209,98,44)"/><text x="459.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1508" width="2" height="15" fill="rgb(214,214,5)"/><text x="459.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="456" y="1524" width="2" height="15" fill="rgb(239,62,35)"/><text x="459.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1540" width="2" height="15" fill="rgb(211,137,1)"/><text x="459.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="456" y="1556" width="2" height="15" fill="rgb(249,52,12)"/><text x="459.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1572" width="2" height="15" fill="rgb(237,24,6)"/><text x="459.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.11%)</title><rect x="456" y="1588" width="2" height="15" fill="rgb(250,204,53)"/><text x="459.00" y="1598.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.11%)</title><rect x="456" y="1604" width="2" height="15" fill="rgb(230,168,8)"/><text x="459.00" y="1614.50"></text></g><g><title>getwidth (sre_parse.py:185) (1 samples, 0.11%)</title><rect x="456" y="1620" width="2" height="15" fill="rgb(230,144,38)"/><text x="459.00" y="1630.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 0.33%)</title><rect x="455" y="1108" width="4" height="15" fill="rgb(240,17,25)"/><text x="458.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="455" y="1124" width="4" height="15" fill="rgb(254,64,54)"/><text x="458.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="455" y="1140" width="4" height="15" fill="rgb(239,7,26)"/><text x="458.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="455" y="1156" width="4" height="15" fill="rgb(220,78,25)"/><text x="458.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="455" y="1172" width="4" height="15" fill="rgb(224,14,43)"/><text x="458.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="455" y="1188" width="4" height="15" fill="rgb(222,23,36)"/><text x="458.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (3 samples, 0.33%)</title><rect x="455" y="1204" width="4" height="15" fill="rgb(244,23,0)"/><text x="458.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="455" y="1220" width="4" height="15" fill="rgb(222,176,14)"/><text x="458.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="455" y="1236" width="4" height="15" fill="rgb(254,120,49)"/><text x="458.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="455" y="1252" width="4" height="15" fill="rgb(228,58,8)"/><text x="458.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="455" y="1268" width="4" height="15" fill="rgb(217,157,19)"/><text x="458.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="455" y="1284" width="4" height="15" fill="rgb(254,57,18)"/><text x="458.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (3 samples, 0.33%)</title><rect x="455" y="1300" width="4" height="15" fill="rgb(243,19,28)"/><text x="458.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (3 samples, 0.33%)</title><rect x="455" y="1316" width="4" height="15" fill="rgb(249,57,53)"/><text x="458.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (3 samples, 0.33%)</title><rect x="455" y="1332" width="4" height="15" fill="rgb(219,34,26)"/><text x="458.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.22%)</title><rect x="456" y="1348" width="3" height="15" fill="rgb(231,96,37)"/><text x="459.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.22%)</title><rect x="456" y="1364" width="3" height="15" fill="rgb(254,129,49)"/><text x="459.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:585) (1 samples, 0.11%)</title><rect x="458" y="1380" width="1" height="15" fill="rgb(254,35,37)"/><text x="461.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.11%)</title><rect x="459" y="1108" width="1" height="15" fill="rgb(226,126,44)"/><text x="462.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1124" width="1" height="15" fill="rgb(218,47,52)"/><text x="462.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1140" width="1" height="15" fill="rgb(207,42,21)"/><text x="462.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1156" width="1" height="15" fill="rgb(217,210,53)"/><text x="462.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1172" width="1" height="15" fill="rgb(221,217,20)"/><text x="462.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1188" width="1" height="15" fill="rgb(243,163,22)"/><text x="462.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.11%)</title><rect x="459" y="1204" width="1" height="15" fill="rgb(233,102,48)"/><text x="462.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1220" width="1" height="15" fill="rgb(230,120,17)"/><text x="462.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1236" width="1" height="15" fill="rgb(228,69,31)"/><text x="462.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1252" width="1" height="15" fill="rgb(230,145,22)"/><text x="462.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1268" width="1" height="15" fill="rgb(252,4,35)"/><text x="462.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1284" width="1" height="15" fill="rgb(254,149,30)"/><text x="462.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.11%)</title><rect x="459" y="1300" width="1" height="15" fill="rgb(240,71,28)"/><text x="462.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1316" width="1" height="15" fill="rgb(212,22,7)"/><text x="462.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1332" width="1" height="15" fill="rgb(248,12,6)"/><text x="462.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1348" width="1" height="15" fill="rgb(221,6,54)"/><text x="462.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1364" width="1" height="15" fill="rgb(247,117,35)"/><text x="462.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1380" width="1" height="15" fill="rgb(239,203,35)"/><text x="462.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.11%)</title><rect x="459" y="1396" width="1" height="15" fill="rgb(207,29,28)"/><text x="462.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1412" width="1" height="15" fill="rgb(233,61,14)"/><text x="462.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1428" width="1" height="15" fill="rgb(240,73,52)"/><text x="462.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1444" width="1" height="15" fill="rgb(221,162,16)"/><text x="462.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1460" width="1" height="15" fill="rgb(245,107,52)"/><text x="462.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1476" width="1" height="15" fill="rgb(214,189,26)"/><text x="462.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.11%)</title><rect x="459" y="1492" width="1" height="15" fill="rgb(252,118,25)"/><text x="462.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="459" y="1508" width="1" height="15" fill="rgb(240,55,0)"/><text x="462.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1524" width="1" height="15" fill="rgb(207,77,30)"/><text x="462.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1540" width="1" height="15" fill="rgb(227,225,22)"/><text x="462.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1556" width="1" height="15" fill="rgb(218,194,31)"/><text x="462.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1572" width="1" height="15" fill="rgb(220,16,53)"/><text x="462.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1588" width="1" height="15" fill="rgb(250,21,36)"/><text x="462.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1604" width="1" height="15" fill="rgb(233,72,30)"/><text x="462.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.11%)</title><rect x="459" y="1620" width="1" height="15" fill="rgb(207,221,6)"/><text x="462.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1636" width="1" height="15" fill="rgb(209,116,32)"/><text x="462.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1652" width="1" height="15" fill="rgb(231,169,2)"/><text x="462.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1668" width="1" height="15" fill="rgb(221,101,24)"/><text x="462.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1684" width="1" height="15" fill="rgb(228,186,2)"/><text x="462.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1700" width="1" height="15" fill="rgb(233,140,30)"/><text x="462.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.11%)</title><rect x="459" y="1716" width="1" height="15" fill="rgb(232,2,24)"/><text x="462.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1732" width="1" height="15" fill="rgb(230,147,15)"/><text x="462.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1748" width="1" height="15" fill="rgb(250,79,54)"/><text x="462.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1764" width="1" height="15" fill="rgb(250,75,42)"/><text x="462.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1780" width="1" height="15" fill="rgb(209,125,5)"/><text x="462.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1796" width="1" height="15" fill="rgb(208,64,34)"/><text x="462.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:5) (1 samples, 0.11%)</title><rect x="459" y="1812" width="1" height="15" fill="rgb(248,33,7)"/><text x="462.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="459" y="1828" width="1" height="15" fill="rgb(230,93,3)"/><text x="462.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="459" y="1844" width="1" height="15" fill="rgb(214,8,25)"/><text x="462.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="459" y="1860" width="1" height="15" fill="rgb(223,143,36)"/><text x="462.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="459" y="1876" width="1" height="15" fill="rgb(222,2,25)"/><text x="462.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="459" y="1892" width="1" height="15" fill="rgb(252,42,23)"/><text x="462.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_locally_linear.py:8) (1 samples, 0.11%)</title><rect x="459" y="1908" width="1" height="15" fill="rgb(229,68,8)"/><text x="462.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1032) (1 samples, 0.11%)</title><rect x="459" y="1924" width="1" height="15" fill="rgb(249,113,25)"/><text x="462.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.55%)</title><rect x="455" y="772" width="7" height="15" fill="rgb(234,115,4)"/><text x="458.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.55%)</title><rect x="455" y="788" width="7" height="15" fill="rgb(221,60,45)"/><text x="458.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.55%)</title><rect x="455" y="804" width="7" height="15" fill="rgb(213,65,19)"/><text x="458.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.55%)</title><rect x="455" y="820" width="7" height="15" fill="rgb(209,4,34)"/><text x="458.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.55%)</title><rect x="455" y="836" width="7" height="15" fill="rgb(226,156,11)"/><text x="458.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.55%)</title><rect x="455" y="852" width="7" height="15" fill="rgb(240,13,3)"/><text x="458.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.55%)</title><rect x="455" y="868" width="7" height="15" fill="rgb(211,6,27)"/><text x="458.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.55%)</title><rect x="455" y="884" width="7" height="15" fill="rgb(232,145,48)"/><text x="458.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.55%)</title><rect x="455" y="900" width="7" height="15" fill="rgb(209,30,39)"/><text x="458.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.55%)</title><rect x="455" y="916" width="7" height="15" fill="rgb(235,209,8)"/><text x="458.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.55%)</title><rect x="455" y="932" width="7" height="15" fill="rgb(229,101,1)"/><text x="458.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.55%)</title><rect x="455" y="948" width="7" height="15" fill="rgb(249,226,51)"/><text x="458.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.55%)</title><rect x="455" y="964" width="7" height="15" fill="rgb(240,218,22)"/><text x="458.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.55%)</title><rect x="455" y="980" width="7" height="15" fill="rgb(221,115,6)"/><text x="458.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.55%)</title><rect x="455" y="996" width="7" height="15" fill="rgb(222,105,1)"/><text x="458.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.55%)</title><rect x="455" y="1012" width="7" height="15" fill="rgb(216,93,15)"/><text x="458.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.55%)</title><rect x="455" y="1028" width="7" height="15" fill="rgb(206,178,29)"/><text x="458.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.55%)</title><rect x="455" y="1044" width="7" height="15" fill="rgb(229,16,30)"/><text x="458.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.55%)</title><rect x="455" y="1060" width="7" height="15" fill="rgb(232,208,25)"/><text x="458.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.55%)</title><rect x="455" y="1076" width="7" height="15" fill="rgb(243,127,53)"/><text x="458.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.55%)</title><rect x="455" y="1092" width="7" height="15" fill="rgb(234,24,12)"/><text x="458.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.11%)</title><rect x="460" y="1108" width="2" height="15" fill="rgb(232,131,50)"/><text x="463.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="460" y="1124" width="2" height="15" fill="rgb(213,118,40)"/><text x="463.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="460" y="1140" width="2" height="15" fill="rgb(230,102,40)"/><text x="463.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="460" y="1156" width="2" height="15" fill="rgb(252,32,27)"/><text x="463.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="460" y="1172" width="2" height="15" fill="rgb(232,48,24)"/><text x="463.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="460" y="1188" width="2" height="15" fill="rgb(205,133,24)"/><text x="463.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="460" y="1204" width="2" height="15" fill="rgb(226,25,8)"/><text x="463.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="460" y="1220" width="2" height="15" fill="rgb(218,209,22)"/><text x="463.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.11%)</title><rect x="460" y="1236" width="2" height="15" fill="rgb(226,221,38)"/><text x="463.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="460" y="1252" width="2" height="15" fill="rgb(243,14,20)"/><text x="463.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="460" y="1268" width="2" height="15" fill="rgb(215,215,6)"/><text x="463.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="460" y="1284" width="2" height="15" fill="rgb(216,113,14)"/><text x="463.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="460" y="1300" width="2" height="15" fill="rgb(228,186,41)"/><text x="463.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="460" y="1316" width="2" height="15" fill="rgb(219,90,32)"/><text x="463.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="460" y="1332" width="2" height="15" fill="rgb(229,221,3)"/><text x="463.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="460" y="1348" width="2" height="15" fill="rgb(247,89,4)"/><text x="463.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.11%)</title><rect x="460" y="1364" width="2" height="15" fill="rgb(232,145,35)"/><text x="463.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="460" y="1380" width="2" height="15" fill="rgb(248,69,3)"/><text x="463.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="460" y="1396" width="2" height="15" fill="rgb(217,100,30)"/><text x="463.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="460" y="1412" width="2" height="15" fill="rgb(214,180,54)"/><text x="463.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="460" y="1428" width="2" height="15" fill="rgb(212,159,33)"/><text x="463.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="460" y="1444" width="2" height="15" fill="rgb(232,207,27)"/><text x="463.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.11%)</title><rect x="460" y="1460" width="2" height="15" fill="rgb(239,210,35)"/><text x="463.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.11%)</title><rect x="460" y="1476" width="2" height="15" fill="rgb(207,71,40)"/><text x="463.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.11%)</title><rect x="460" y="1492" width="2" height="15" fill="rgb(220,209,26)"/><text x="463.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.11%)</title><rect x="460" y="1508" width="2" height="15" fill="rgb(217,118,43)"/><text x="463.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.11%)</title><rect x="460" y="1524" width="2" height="15" fill="rgb(236,28,32)"/><text x="463.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.11%)</title><rect x="460" y="1540" width="2" height="15" fill="rgb(250,60,9)"/><text x="463.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="460" y="1556" width="2" height="15" fill="rgb(247,47,41)"/><text x="463.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:67) (1 samples, 0.11%)</title><rect x="460" y="1572" width="2" height="15" fill="rgb(239,120,37)"/><text x="463.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.11%)</title><rect x="460" y="1588" width="2" height="15" fill="rgb(249,34,48)"/><text x="463.00" y="1598.50"></text></g><g><title>0x7ff4c0ef9958 (?) (1 samples, 0.11%)</title><rect x="460" y="1604" width="2" height="15" fill="rgb(227,67,49)"/><text x="463.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:4) (15 samples, 1.65%)</title><rect x="445" y="52" width="19" height="15" fill="rgb(244,86,39)"/><text x="448.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 1.65%)</title><rect x="445" y="68" width="19" height="15" fill="rgb(225,108,35)"/><text x="448.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 1.65%)</title><rect x="445" y="84" width="19" height="15" fill="rgb(205,204,38)"/><text x="448.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 1.65%)</title><rect x="445" y="100" width="19" height="15" fill="rgb(205,164,2)"/><text x="448.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 1.65%)</title><rect x="445" y="116" width="19" height="15" fill="rgb(247,112,23)"/><text x="448.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 1.65%)</title><rect x="445" y="132" width="19" height="15" fill="rgb(252,139,20)"/><text x="448.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:7) (10 samples, 1.10%)</title><rect x="451" y="148" width="13" height="15" fill="rgb(227,111,41)"/><text x="454.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.10%)</title><rect x="451" y="164" width="13" height="15" fill="rgb(238,222,2)"/><text x="454.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.10%)</title><rect x="451" y="180" width="13" height="15" fill="rgb(236,223,34)"/><text x="454.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.10%)</title><rect x="451" y="196" width="13" height="15" fill="rgb(206,54,3)"/><text x="454.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.10%)</title><rect x="451" y="212" width="13" height="15" fill="rgb(241,28,12)"/><text x="454.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.10%)</title><rect x="451" y="228" width="13" height="15" fill="rgb(253,16,3)"/><text x="454.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 0.99%)</title><rect x="452" y="244" width="12" height="15" fill="rgb(243,191,10)"/><text x="455.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 0.99%)</title><rect x="452" y="260" width="12" height="15" fill="rgb(238,81,49)"/><text x="455.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 0.99%)</title><rect x="452" y="276" width="12" height="15" fill="rgb(243,98,36)"/><text x="455.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 0.99%)</title><rect x="452" y="292" width="12" height="15" fill="rgb(215,64,18)"/><text x="455.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 0.99%)</title><rect x="452" y="308" width="12" height="15" fill="rgb(232,189,54)"/><text x="455.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 0.99%)</title><rect x="452" y="324" width="12" height="15" fill="rgb(246,21,44)"/><text x="455.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (9 samples, 0.99%)</title><rect x="452" y="340" width="12" height="15" fill="rgb(208,29,27)"/><text x="455.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 0.99%)</title><rect x="452" y="356" width="12" height="15" fill="rgb(219,211,10)"/><text x="455.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 0.99%)</title><rect x="452" y="372" width="12" height="15" fill="rgb(248,129,20)"/><text x="455.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 0.99%)</title><rect x="452" y="388" width="12" height="15" fill="rgb(240,85,32)"/><text x="455.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 0.99%)</title><rect x="452" y="404" width="12" height="15" fill="rgb(212,189,11)"/><text x="455.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 0.99%)</title><rect x="452" y="420" width="12" height="15" fill="rgb(253,22,8)"/><text x="455.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 0.77%)</title><rect x="455" y="436" width="9" height="15" fill="rgb(254,225,31)"/><text x="458.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.77%)</title><rect x="455" y="452" width="9" height="15" fill="rgb(229,44,10)"/><text x="458.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 0.77%)</title><rect x="455" y="468" width="9" height="15" fill="rgb(247,57,16)"/><text x="458.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.77%)</title><rect x="455" y="484" width="9" height="15" fill="rgb(214,221,17)"/><text x="458.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.77%)</title><rect x="455" y="500" width="9" height="15" fill="rgb(209,64,46)"/><text x="458.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.77%)</title><rect x="455" y="516" width="9" height="15" fill="rgb(243,114,3)"/><text x="458.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.77%)</title><rect x="455" y="532" width="9" height="15" fill="rgb(215,142,27)"/><text x="458.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.77%)</title><rect x="455" y="548" width="9" height="15" fill="rgb(207,207,38)"/><text x="458.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.77%)</title><rect x="455" y="564" width="9" height="15" fill="rgb(220,84,19)"/><text x="458.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 0.77%)</title><rect x="455" y="580" width="9" height="15" fill="rgb(227,110,33)"/><text x="458.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.77%)</title><rect x="455" y="596" width="9" height="15" fill="rgb(216,42,47)"/><text x="458.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.77%)</title><rect x="455" y="612" width="9" height="15" fill="rgb(242,197,13)"/><text x="458.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.77%)</title><rect x="455" y="628" width="9" height="15" fill="rgb(247,173,7)"/><text x="458.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.77%)</title><rect x="455" y="644" width="9" height="15" fill="rgb(241,79,13)"/><text x="458.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.77%)</title><rect x="455" y="660" width="9" height="15" fill="rgb(217,176,7)"/><text x="458.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (7 samples, 0.77%)</title><rect x="455" y="676" width="9" height="15" fill="rgb(232,37,34)"/><text x="458.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.77%)</title><rect x="455" y="692" width="9" height="15" fill="rgb(231,163,22)"/><text x="458.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.77%)</title><rect x="455" y="708" width="9" height="15" fill="rgb(207,99,43)"/><text x="458.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.77%)</title><rect x="455" y="724" width="9" height="15" fill="rgb(213,131,48)"/><text x="458.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.77%)</title><rect x="455" y="740" width="9" height="15" fill="rgb(251,136,29)"/><text x="458.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.77%)</title><rect x="455" y="756" width="9" height="15" fill="rgb(246,108,36)"/><text x="458.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:9) (2 samples, 0.22%)</title><rect x="462" y="772" width="2" height="15" fill="rgb(229,135,14)"/><text x="465.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="462" y="788" width="2" height="15" fill="rgb(229,88,8)"/><text x="465.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="462" y="804" width="2" height="15" fill="rgb(224,131,39)"/><text x="465.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="462" y="820" width="2" height="15" fill="rgb(245,63,22)"/><text x="465.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.22%)</title><rect x="462" y="836" width="2" height="15" fill="rgb(241,199,21)"/><text x="465.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (2 samples, 0.22%)</title><rect x="462" y="852" width="2" height="15" fill="rgb(215,145,49)"/><text x="465.00" y="862.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (2 samples, 0.22%)</title><rect x="462" y="868" width="2" height="15" fill="rgb(217,22,35)"/><text x="465.00" y="878.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="463" y="884" width="1" height="15" fill="rgb(215,16,12)"/><text x="466.00" y="894.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="464" y="116" width="1" height="15" fill="rgb(242,18,16)"/><text x="467.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="464" y="132" width="1" height="15" fill="rgb(214,52,44)"/><text x="467.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="464" y="148" width="1" height="15" fill="rgb(234,41,18)"/><text x="467.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="464" y="164" width="1" height="15" fill="rgb(240,133,23)"/><text x="467.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="464" y="180" width="1" height="15" fill="rgb(238,181,9)"/><text x="467.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (1 samples, 0.11%)</title><rect x="464" y="196" width="1" height="15" fill="rgb(206,77,43)"/><text x="467.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.11%)</title><rect x="464" y="212" width="1" height="15" fill="rgb(225,211,11)"/><text x="467.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:148) (1 samples, 0.11%)</title><rect x="464" y="228" width="1" height="15" fill="rgb(239,127,38)"/><text x="467.00" y="238.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:28) (2 samples, 0.22%)</title><rect x="464" y="84" width="3" height="15" fill="rgb(222,139,12)"/><text x="467.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.22%)</title><rect x="464" y="100" width="3" height="15" fill="rgb(215,51,31)"/><text x="467.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.11%)</title><rect x="465" y="116" width="2" height="15" fill="rgb(230,203,33)"/><text x="468.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.11%)</title><rect x="465" y="132" width="2" height="15" fill="rgb(215,218,21)"/><text x="468.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.11%)</title><rect x="465" y="148" width="2" height="15" fill="rgb(238,50,7)"/><text x="468.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.11%)</title><rect x="465" y="164" width="2" height="15" fill="rgb(205,199,37)"/><text x="468.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.11%)</title><rect x="465" y="180" width="2" height="15" fill="rgb(211,161,53)"/><text x="468.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.11%)</title><rect x="465" y="196" width="2" height="15" fill="rgb(208,178,14)"/><text x="468.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="465" y="212" width="2" height="15" fill="rgb(224,173,13)"/><text x="468.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="465" y="228" width="2" height="15" fill="rgb(219,210,43)"/><text x="468.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="465" y="244" width="2" height="15" fill="rgb(249,104,40)"/><text x="468.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="465" y="260" width="2" height="15" fill="rgb(216,20,17)"/><text x="468.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="465" y="276" width="2" height="15" fill="rgb(229,111,3)"/><text x="468.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.11%)</title><rect x="465" y="292" width="2" height="15" fill="rgb(221,24,36)"/><text x="468.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="465" y="308" width="2" height="15" fill="rgb(252,29,19)"/><text x="468.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="465" y="324" width="2" height="15" fill="rgb(249,135,20)"/><text x="468.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="465" y="340" width="2" height="15" fill="rgb(246,126,27)"/><text x="468.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="465" y="356" width="2" height="15" fill="rgb(206,54,14)"/><text x="468.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="465" y="372" width="2" height="15" fill="rgb(236,22,45)"/><text x="468.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.11%)</title><rect x="465" y="388" width="2" height="15" fill="rgb(237,204,35)"/><text x="468.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="465" y="404" width="2" height="15" fill="rgb(248,159,29)"/><text x="468.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="465" y="420" width="2" height="15" fill="rgb(220,177,19)"/><text x="468.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="465" y="436" width="2" height="15" fill="rgb(249,57,38)"/><text x="468.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="465" y="452" width="2" height="15" fill="rgb(223,179,39)"/><text x="468.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="465" y="468" width="2" height="15" fill="rgb(249,178,54)"/><text x="468.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.11%)</title><rect x="465" y="484" width="2" height="15" fill="rgb(224,10,22)"/><text x="468.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.11%)</title><rect x="465" y="500" width="2" height="15" fill="rgb(240,0,49)"/><text x="468.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.11%)</title><rect x="465" y="516" width="2" height="15" fill="rgb(221,104,47)"/><text x="468.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.11%)</title><rect x="465" y="532" width="2" height="15" fill="rgb(209,52,16)"/><text x="468.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.11%)</title><rect x="465" y="548" width="2" height="15" fill="rgb(210,133,26)"/><text x="468.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.11%)</title><rect x="465" y="564" width="2" height="15" fill="rgb(242,129,4)"/><text x="468.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.11%)</title><rect x="465" y="580" width="2" height="15" fill="rgb(214,51,50)"/><text x="468.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="465" y="596" width="2" height="15" fill="rgb(250,85,36)"/><text x="468.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.11%)</title><rect x="465" y="612" width="2" height="15" fill="rgb(241,73,49)"/><text x="468.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.11%)</title><rect x="465" y="628" width="2" height="15" fill="rgb(248,58,12)"/><text x="468.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="465" y="644" width="2" height="15" fill="rgb(209,101,10)"/><text x="468.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.11%)</title><rect x="465" y="660" width="2" height="15" fill="rgb(223,146,23)"/><text x="468.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.11%)</title><rect x="465" y="676" width="2" height="15" fill="rgb(222,186,38)"/><text x="468.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="465" y="692" width="2" height="15" fill="rgb(225,207,25)"/><text x="468.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.11%)</title><rect x="465" y="708" width="2" height="15" fill="rgb(245,50,11)"/><text x="468.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.11%)</title><rect x="465" y="724" width="2" height="15" fill="rgb(221,182,24)"/><text x="468.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="465" y="740" width="2" height="15" fill="rgb(237,213,32)"/><text x="468.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py:1040) (1 samples, 0.11%)</title><rect x="465" y="756" width="2" height="15" fill="rgb(211,192,35)"/><text x="468.00" y="766.50"></text></g><g><title>analyze_node (jinja2/idtracking.py:41) (1 samples, 0.11%)</title><rect x="465" y="772" width="2" height="15" fill="rgb(219,139,29)"/><text x="468.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="465" y="788" width="2" height="15" fill="rgb(206,2,3)"/><text x="468.00" y="798.50"></text></g><g><title>visit_For (jinja2/idtracking.py:190) (1 samples, 0.11%)</title><rect x="465" y="804" width="2" height="15" fill="rgb(222,227,53)"/><text x="468.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="465" y="820" width="2" height="15" fill="rgb(248,103,26)"/><text x="468.00" y="830.50"></text></g><g><title>visit_If (jinja2/idtracking.py:233) (1 samples, 0.11%)</title><rect x="465" y="836" width="2" height="15" fill="rgb(233,130,37)"/><text x="468.00" y="846.50"></text></g><g><title>inner_visit (jinja2/idtracking.py:229) (1 samples, 0.11%)</title><rect x="465" y="852" width="2" height="15" fill="rgb(212,99,4)"/><text x="468.00" y="862.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.11%)</title><rect x="465" y="868" width="2" height="15" fill="rgb(221,203,26)"/><text x="468.00" y="878.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.11%)</title><rect x="465" y="884" width="2" height="15" fill="rgb(225,11,11)"/><text x="468.00" y="894.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.11%)</title><rect x="465" y="900" width="2" height="15" fill="rgb(211,109,34)"/><text x="468.00" y="910.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.11%)</title><rect x="465" y="916" width="2" height="15" fill="rgb(241,173,45)"/><text x="468.00" y="926.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="465" y="932" width="2" height="15" fill="rgb(222,69,2)"/><text x="468.00" y="942.50"></text></g><g><title>visit_Name (jinja2/idtracking.py:211) (1 samples, 0.11%)</title><rect x="465" y="948" width="2" height="15" fill="rgb(239,83,12)"/><text x="468.00" y="958.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="468" y="260" width="1" height="15" fill="rgb(243,189,53)"/><text x="471.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.11%)</title><rect x="468" y="276" width="1" height="15" fill="rgb(241,101,27)"/><text x="471.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.11%)</title><rect x="468" y="292" width="1" height="15" fill="rgb(228,93,39)"/><text x="471.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:429) (1 samples, 0.11%)</title><rect x="468" y="308" width="1" height="15" fill="rgb(226,186,48)"/><text x="471.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (2 samples, 0.22%)</title><rect x="468" y="212" width="3" height="15" fill="rgb(246,130,45)"/><text x="471.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.22%)</title><rect x="468" y="228" width="3" height="15" fill="rgb(241,120,11)"/><text x="471.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.22%)</title><rect x="468" y="244" width="3" height="15" fill="rgb(229,14,42)"/><text x="471.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.11%)</title><rect x="469" y="260" width="2" height="15" fill="rgb(212,16,20)"/><text x="472.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.11%)</title><rect x="469" y="276" width="2" height="15" fill="rgb(229,46,52)"/><text x="472.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (1 samples, 0.11%)</title><rect x="469" y="292" width="2" height="15" fill="rgb(228,35,9)"/><text x="472.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="469" y="308" width="2" height="15" fill="rgb(253,193,15)"/><text x="472.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="469" y="324" width="2" height="15" fill="rgb(215,191,35)"/><text x="472.00" y="334.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="471" y="260" width="1" height="15" fill="rgb(238,25,41)"/><text x="474.00" y="270.50"></text></g><g><title>array_item (mapping.c:1366) (1 samples, 0.11%)</title><rect x="471" y="276" width="1" height="15" fill="rgb(246,42,54)"/><text x="474.00" y="286.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.22%)</title><rect x="471" y="228" width="2" height="15" fill="rgb(206,68,27)"/><text x="474.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.22%)</title><rect x="471" y="244" width="2" height="15" fill="rgb(245,166,35)"/><text x="474.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.11%)</title><rect x="472" y="260" width="1" height="15" fill="rgb(241,48,27)"/><text x="475.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.11%)</title><rect x="472" y="276" width="1" height="15" fill="rgb(221,76,41)"/><text x="475.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="472" y="292" width="1" height="15" fill="rgb(213,135,13)"/><text x="475.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="472" y="308" width="1" height="15" fill="rgb(207,54,17)"/><text x="475.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.33%)</title><rect x="471" y="212" width="4" height="15" fill="rgb(211,99,3)"/><text x="474.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="473" y="228" width="2" height="15" fill="rgb(244,40,26)"/><text x="476.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="473" y="244" width="2" height="15" fill="rgb(237,208,0)"/><text x="476.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="473" y="260" width="2" height="15" fill="rgb(205,195,21)"/><text x="476.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="473" y="276" width="2" height="15" fill="rgb(238,128,33)"/><text x="476.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.11%)</title><rect x="473" y="292" width="2" height="15" fill="rgb(234,148,22)"/><text x="476.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="475" y="260" width="1" height="15" fill="rgb(229,74,17)"/><text x="478.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="475" y="276" width="1" height="15" fill="rgb(212,204,8)"/><text x="478.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.11%)</title><rect x="475" y="292" width="1" height="15" fill="rgb(251,119,11)"/><text x="478.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1823) (1 samples, 0.11%)</title><rect x="475" y="308" width="1" height="15" fill="rgb(226,77,34)"/><text x="478.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (7 samples, 0.77%)</title><rect x="468" y="196" width="9" height="15" fill="rgb(252,183,11)"/><text x="471.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (2 samples, 0.22%)</title><rect x="475" y="212" width="2" height="15" fill="rgb(229,145,12)"/><text x="478.00" y="222.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.22%)</title><rect x="475" y="228" width="2" height="15" fill="rgb(236,44,52)"/><text x="478.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="475" y="244" width="2" height="15" fill="rgb(241,109,23)"/><text x="478.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="476" y="260" width="1" height="15" fill="rgb(223,57,8)"/><text x="479.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="476" y="276" width="1" height="15" fill="rgb(214,22,47)"/><text x="479.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.11%)</title><rect x="476" y="292" width="1" height="15" fill="rgb(247,207,45)"/><text x="479.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="478" y="244" width="2" height="15" fill="rgb(213,174,30)"/><text x="481.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="478" y="260" width="2" height="15" fill="rgb(205,61,22)"/><text x="481.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="478" y="276" width="2" height="15" fill="rgb(235,186,15)"/><text x="481.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="478" y="292" width="2" height="15" fill="rgb(232,61,10)"/><text x="481.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="478" y="308" width="2" height="15" fill="rgb(222,201,22)"/><text x="481.00" y="318.50"></text></g><g><title>0x7ff4d0fc0960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="480" y="324" width="1" height="15" fill="rgb(206,109,39)"/><text x="483.00" y="334.50"></text></g><g><title>0x7ff4d0fc09a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="481" y="324" width="1" height="15" fill="rgb(247,204,9)"/><text x="484.00" y="334.50"></text></g><g><title>0x7ff4d0fc09e0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="482" y="324" width="2" height="15" fill="rgb(248,204,10)"/><text x="485.00" y="334.50"></text></g><g><title>0x7ff4d0fc09e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="484" y="324" width="1" height="15" fill="rgb(208,85,0)"/><text x="487.00" y="334.50"></text></g><g><title>0x7ff4d0fc0a19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="485" y="324" width="1" height="15" fill="rgb(238,34,19)"/><text x="488.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (7 samples, 0.77%)</title><rect x="480" y="308" width="9" height="15" fill="rgb(253,163,12)"/><text x="483.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.22%)</title><rect x="486" y="324" width="3" height="15" fill="rgb(207,208,45)"/><text x="489.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (11 samples, 1.21%)</title><rect x="477" y="228" width="14" height="15" fill="rgb(248,140,13)"/><text x="480.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.99%)</title><rect x="480" y="244" width="11" height="15" fill="rgb(245,90,53)"/><text x="483.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 0.99%)</title><rect x="480" y="260" width="11" height="15" fill="rgb(253,147,50)"/><text x="483.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (9 samples, 0.99%)</title><rect x="480" y="276" width="11" height="15" fill="rgb(252,147,44)"/><text x="483.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 0.99%)</title><rect x="480" y="292" width="11" height="15" fill="rgb(231,41,53)"/><text x="483.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (2 samples, 0.22%)</title><rect x="489" y="308" width="2" height="15" fill="rgb(231,206,46)"/><text x="492.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (2 samples, 0.22%)</title><rect x="489" y="324" width="2" height="15" fill="rgb(230,41,49)"/><text x="492.00" y="334.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (1 samples, 0.11%)</title><rect x="493" y="244" width="1" height="15" fill="rgb(233,197,4)"/><text x="496.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="494" y="292" width="1" height="15" fill="rgb(209,91,0)"/><text x="497.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.11%)</title><rect x="494" y="308" width="1" height="15" fill="rgb(228,52,48)"/><text x="497.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.22%)</title><rect x="497" y="324" width="2" height="15" fill="rgb(209,221,21)"/><text x="500.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="499" y="340" width="1" height="15" fill="rgb(215,22,11)"/><text x="502.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="499" y="356" width="1" height="15" fill="rgb(218,58,43)"/><text x="502.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:503) (1 samples, 0.11%)</title><rect x="499" y="372" width="1" height="15" fill="rgb(215,154,34)"/><text x="502.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="500" y="356" width="2" height="15" fill="rgb(245,13,2)"/><text x="503.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="500" y="372" width="2" height="15" fill="rgb(226,8,15)"/><text x="503.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.11%)</title><rect x="500" y="388" width="2" height="15" fill="rgb(235,10,8)"/><text x="503.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="500" y="404" width="2" height="15" fill="rgb(239,34,45)"/><text x="503.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.11%)</title><rect x="500" y="420" width="2" height="15" fill="rgb(215,168,9)"/><text x="503.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.11%)</title><rect x="500" y="436" width="2" height="15" fill="rgb(214,54,2)"/><text x="503.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.11%)</title><rect x="500" y="452" width="2" height="15" fill="rgb(222,95,26)"/><text x="503.00" y="462.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="502" y="388" width="1" height="15" fill="rgb(251,24,24)"/><text x="505.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="503" y="404" width="1" height="15" fill="rgb(247,70,21)"/><text x="506.00" y="414.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="504" y="404" width="2" height="15" fill="rgb(250,134,11)"/><text x="507.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.33%)</title><rect x="503" y="388" width="4" height="15" fill="rgb(209,9,17)"/><text x="506.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="506" y="404" width="1" height="15" fill="rgb(248,170,40)"/><text x="509.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (25 samples, 2.74%)</title><rect x="477" y="196" width="32" height="15" fill="rgb(253,81,18)"/><text x="480.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 2.74%)</title><rect x="477" y="212" width="32" height="15" fill="rgb(226,22,3)"/><text x="480.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (14 samples, 1.54%)</title><rect x="491" y="228" width="18" height="15" fill="rgb(248,91,21)"/><text x="494.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (12 samples, 1.32%)</title><rect x="494" y="244" width="15" height="15" fill="rgb(210,116,11)"/><text x="497.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.32%)</title><rect x="494" y="260" width="15" height="15" fill="rgb(225,101,14)"/><text x="497.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (12 samples, 1.32%)</title><rect x="494" y="276" width="15" height="15" fill="rgb(210,107,6)"/><text x="497.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (11 samples, 1.21%)</title><rect x="495" y="292" width="14" height="15" fill="rgb(252,3,6)"/><text x="498.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.10%)</title><rect x="497" y="308" width="12" height="15" fill="rgb(237,183,24)"/><text x="500.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 0.88%)</title><rect x="499" y="324" width="10" height="15" fill="rgb(249,129,43)"/><text x="502.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 0.77%)</title><rect x="500" y="340" width="9" height="15" fill="rgb(247,112,7)"/><text x="503.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.66%)</title><rect x="502" y="356" width="7" height="15" fill="rgb(248,58,29)"/><text x="505.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.66%)</title><rect x="502" y="372" width="7" height="15" fill="rgb(219,52,31)"/><text x="505.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.22%)</title><rect x="507" y="388" width="2" height="15" fill="rgb(222,19,21)"/><text x="510.00" y="398.50"></text></g><g><title>0x7ff49199c422 (?) (1 samples, 0.11%)</title><rect x="509" y="244" width="2" height="15" fill="rgb(222,162,3)"/><text x="512.00" y="254.50"></text></g><g><title>0x7ff4919a289e (?) (1 samples, 0.11%)</title><rect x="509" y="260" width="2" height="15" fill="rgb(225,205,47)"/><text x="512.00" y="270.50"></text></g><g><title>0x7ff4919a274f (?) (1 samples, 0.11%)</title><rect x="509" y="276" width="2" height="15" fill="rgb(244,129,50)"/><text x="512.00" y="286.50"></text></g><g><title>0x7ff4919a8a3a (?) (1 samples, 0.11%)</title><rect x="509" y="292" width="2" height="15" fill="rgb(250,157,37)"/><text x="512.00" y="302.50"></text></g><g><title>0x7ff49adfacfa (?) (1 samples, 0.11%)</title><rect x="509" y="308" width="2" height="15" fill="rgb(243,46,53)"/><text x="512.00" y="318.50"></text></g><g><title>0x7ff49ae03daa (?) (1 samples, 0.11%)</title><rect x="509" y="324" width="2" height="15" fill="rgb(250,220,27)"/><text x="512.00" y="334.50"></text></g><g><title>0x7ff49ae05cf9 (?) (1 samples, 0.11%)</title><rect x="509" y="340" width="2" height="15" fill="rgb(215,196,13)"/><text x="512.00" y="350.50"></text></g><g><title>0x7ff49ae05ea0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="511" y="468" width="1" height="15" fill="rgb(243,60,26)"/><text x="514.00" y="478.50"></text></g><g><title>0x7ff49ae05ea9 (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="512" y="468" width="4" height="15" fill="rgb(212,225,17)"/><text x="515.00" y="478.50"></text></g><g><title>0x7ff49ae05eab (libgomp.so.1.0.0) (12 samples, 1.32%)</title><rect x="516" y="468" width="15" height="15" fill="rgb(249,77,23)"/><text x="519.00" y="478.50"></text></g><g><title>0x7ff49ae04ab9 (libgomp.so.1.0.0) (20 samples, 2.20%)</title><rect x="511" y="452" width="26" height="15" fill="rgb(243,49,36)"/><text x="514.00" y="462.50">0..</text></g><g><title>0x7ff49ae05ead (libgomp.so.1.0.0) (4 samples, 0.44%)</title><rect x="531" y="468" width="6" height="15" fill="rgb(215,67,52)"/><text x="534.00" y="478.50"></text></g><g><title>0x7ff49ae05cf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="537" y="484" width="1" height="15" fill="rgb(223,55,18)"/><text x="540.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (24 samples, 2.63%)</title><rect x="509" y="196" width="32" height="15" fill="rgb(213,38,44)"/><text x="512.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 2.63%)</title><rect x="509" y="212" width="32" height="15" fill="rgb(205,123,50)"/><text x="512.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (24 samples, 2.63%)</title><rect x="509" y="228" width="32" height="15" fill="rgb(213,154,24)"/><text x="512.00" y="238.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (23 samples, 2.52%)</title><rect x="511" y="244" width="30" height="15" fill="rgb(231,70,20)"/><text x="514.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (23 samples, 2.52%)</title><rect x="511" y="260" width="30" height="15" fill="rgb(207,109,11)"/><text x="514.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (23 samples, 2.52%)</title><rect x="511" y="276" width="30" height="15" fill="rgb(231,208,31)"/><text x="514.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (23 samples, 2.52%)</title><rect x="511" y="292" width="30" height="15" fill="rgb(243,66,1)"/><text x="514.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (23 samples, 2.52%)</title><rect x="511" y="308" width="30" height="15" fill="rgb(228,105,48)"/><text x="514.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (23 samples, 2.52%)</title><rect x="511" y="324" width="30" height="15" fill="rgb(213,79,39)"/><text x="514.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (23 samples, 2.52%)</title><rect x="511" y="340" width="30" height="15" fill="rgb(224,136,43)"/><text x="514.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (23 samples, 2.52%)</title><rect x="511" y="356" width="30" height="15" fill="rgb(246,93,15)"/><text x="514.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (23 samples, 2.52%)</title><rect x="511" y="372" width="30" height="15" fill="rgb(210,195,21)"/><text x="514.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (23 samples, 2.52%)</title><rect x="511" y="388" width="30" height="15" fill="rgb(220,229,18)"/><text x="514.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (23 samples, 2.52%)</title><rect x="511" y="404" width="30" height="15" fill="rgb(225,17,51)"/><text x="514.00" y="414.50">py..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (23 samples, 2.52%)</title><rect x="511" y="420" width="30" height="15" fill="rgb(205,151,40)"/><text x="514.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (23 samples, 2.52%)</title><rect x="511" y="436" width="30" height="15" fill="rgb(208,6,44)"/><text x="514.00" y="446.50">py..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="537" y="452" width="4" height="15" fill="rgb(210,18,8)"/><text x="540.00" y="462.50"></text></g><g><title>0x7ff49ae03daa (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="537" y="468" width="4" height="15" fill="rgb(227,26,26)"/><text x="540.00" y="478.50"></text></g><g><title>0x7ff49ae05cf9 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="538" y="484" width="3" height="15" fill="rgb(223,196,53)"/><text x="541.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.11%)</title><rect x="542" y="228" width="1" height="15" fill="rgb(228,122,2)"/><text x="545.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="544" y="276" width="2" height="15" fill="rgb(234,7,17)"/><text x="547.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.11%)</title><rect x="544" y="292" width="2" height="15" fill="rgb(235,143,10)"/><text x="547.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="546" y="292" width="1" height="15" fill="rgb(237,136,48)"/><text x="549.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.11%)</title><rect x="546" y="308" width="1" height="15" fill="rgb(232,35,27)"/><text x="549.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (4 samples, 0.44%)</title><rect x="543" y="228" width="5" height="15" fill="rgb(205,149,8)"/><text x="546.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="544" y="244" width="4" height="15" fill="rgb(212,172,54)"/><text x="547.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.33%)</title><rect x="544" y="260" width="4" height="15" fill="rgb(221,218,2)"/><text x="547.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.22%)</title><rect x="546" y="276" width="2" height="15" fill="rgb(249,42,3)"/><text x="549.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="547" y="292" width="1" height="15" fill="rgb(247,166,30)"/><text x="550.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.11%)</title><rect x="547" y="308" width="1" height="15" fill="rgb(228,6,19)"/><text x="550.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1882) (1 samples, 0.11%)</title><rect x="547" y="324" width="1" height="15" fill="rgb(236,61,16)"/><text x="550.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="548" y="260" width="2" height="15" fill="rgb(229,127,15)"/><text x="551.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="548" y="276" width="2" height="15" fill="rgb(246,214,24)"/><text x="551.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (8 samples, 0.88%)</title><rect x="541" y="196" width="10" height="15" fill="rgb(223,184,27)"/><text x="544.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 0.88%)</title><rect x="541" y="212" width="10" height="15" fill="rgb(210,121,24)"/><text x="544.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.22%)</title><rect x="548" y="228" width="3" height="15" fill="rgb(254,125,14)"/><text x="551.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="548" y="244" width="3" height="15" fill="rgb(214,168,5)"/><text x="551.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="550" y="260" width="1" height="15" fill="rgb(226,187,54)"/><text x="553.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="550" y="276" width="1" height="15" fill="rgb(233,125,20)"/><text x="553.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="550" y="292" width="1" height="15" fill="rgb(225,145,7)"/><text x="553.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="550" y="308" width="1" height="15" fill="rgb(240,209,45)"/><text x="553.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="550" y="324" width="1" height="15" fill="rgb(209,4,31)"/><text x="553.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.11%)</title><rect x="550" y="340" width="1" height="15" fill="rgb(206,136,5)"/><text x="553.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="551" y="244" width="1" height="15" fill="rgb(219,222,25)"/><text x="554.00" y="254.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:114) (1 samples, 0.11%)</title><rect x="551" y="260" width="1" height="15" fill="rgb(206,144,38)"/><text x="554.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:105) (1 samples, 0.11%)</title><rect x="554" y="324" width="1" height="15" fill="rgb(214,200,26)"/><text x="557.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.33%)</title><rect x="555" y="340" width="4" height="15" fill="rgb(232,191,11)"/><text x="558.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="559" y="356" width="1" height="15" fill="rgb(221,77,0)"/><text x="562.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2983) (1 samples, 0.11%)</title><rect x="559" y="372" width="1" height="15" fill="rgb(251,184,53)"/><text x="562.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.55%)</title><rect x="555" y="324" width="6" height="15" fill="rgb(219,7,29)"/><text x="558.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="559" y="340" width="2" height="15" fill="rgb(229,134,14)"/><text x="562.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="560" y="356" width="1" height="15" fill="rgb(252,194,49)"/><text x="563.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="561" y="340" width="2" height="15" fill="rgb(215,116,15)"/><text x="564.00" y="350.50"></text></g><g><title>0x7ff4d0f1d16b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="561" y="356" width="2" height="15" fill="rgb(251,136,12)"/><text x="564.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.11%)</title><rect x="564" y="404" width="1" height="15" fill="rgb(215,81,7)"/><text x="567.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="563" y="340" width="3" height="15" fill="rgb(224,175,39)"/><text x="566.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="563" y="356" width="3" height="15" fill="rgb(250,200,24)"/><text x="566.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="563" y="372" width="3" height="15" fill="rgb(219,228,46)"/><text x="566.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.33%)</title><rect x="563" y="388" width="3" height="15" fill="rgb(205,138,47)"/><text x="566.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="565" y="404" width="1" height="15" fill="rgb(227,105,42)"/><text x="568.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="565" y="420" width="1" height="15" fill="rgb(240,200,47)"/><text x="568.00" y="430.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:618) (1 samples, 0.11%)</title><rect x="565" y="436" width="1" height="15" fill="rgb(225,74,23)"/><text x="568.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="566" y="372" width="2" height="15" fill="rgb(217,100,16)"/><text x="569.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="566" y="388" width="2" height="15" fill="rgb(205,226,40)"/><text x="569.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="566" y="404" width="2" height="15" fill="rgb(246,100,39)"/><text x="569.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1077) (1 samples, 0.11%)</title><rect x="566" y="420" width="2" height="15" fill="rgb(216,216,17)"/><text x="569.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="568" y="372" width="1" height="15" fill="rgb(227,210,19)"/><text x="571.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="568" y="388" width="1" height="15" fill="rgb(245,22,38)"/><text x="571.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1689) (1 samples, 0.11%)</title><rect x="568" y="404" width="1" height="15" fill="rgb(238,138,49)"/><text x="571.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="566" y="356" width="4" height="15" fill="rgb(234,11,19)"/><text x="569.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="569" y="372" width="1" height="15" fill="rgb(216,54,29)"/><text x="572.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.11%)</title><rect x="569" y="388" width="1" height="15" fill="rgb(229,212,48)"/><text x="572.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (8 samples, 0.88%)</title><rect x="561" y="324" width="11" height="15" fill="rgb(246,65,31)"/><text x="564.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.44%)</title><rect x="566" y="340" width="6" height="15" fill="rgb(224,75,20)"/><text x="569.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="570" y="356" width="2" height="15" fill="rgb(250,36,22)"/><text x="573.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.11%)</title><rect x="570" y="372" width="2" height="15" fill="rgb(246,54,14)"/><text x="573.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="572" y="404" width="1" height="15" fill="rgb(207,74,28)"/><text x="575.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="572" y="420" width="1" height="15" fill="rgb(213,114,1)"/><text x="575.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.11%)</title><rect x="572" y="436" width="1" height="15" fill="rgb(245,107,18)"/><text x="575.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.11%)</title><rect x="572" y="452" width="1" height="15" fill="rgb(211,18,41)"/><text x="575.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.11%)</title><rect x="572" y="468" width="1" height="15" fill="rgb(253,9,35)"/><text x="575.00" y="478.50"></text></g><g><title>0x7ff4d0e40293 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="573" y="468" width="1" height="15" fill="rgb(245,109,31)"/><text x="576.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (2 samples, 0.22%)</title><rect x="573" y="420" width="3" height="15" fill="rgb(207,210,37)"/><text x="576.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (2 samples, 0.22%)</title><rect x="573" y="436" width="3" height="15" fill="rgb(231,125,21)"/><text x="576.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="573" y="452" width="3" height="15" fill="rgb(228,116,32)"/><text x="576.00" y="462.50"></text></g><g><title>0x7ff4d0e408a8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="574" y="468" width="2" height="15" fill="rgb(206,46,35)"/><text x="577.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.33%)</title><rect x="573" y="404" width="4" height="15" fill="rgb(247,179,49)"/><text x="576.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="576" y="420" width="1" height="15" fill="rgb(211,86,15)"/><text x="579.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="576" y="436" width="1" height="15" fill="rgb(220,79,23)"/><text x="579.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (1 samples, 0.11%)</title><rect x="576" y="452" width="1" height="15" fill="rgb(246,175,20)"/><text x="579.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="576" y="468" width="1" height="15" fill="rgb(224,74,46)"/><text x="579.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.11%)</title><rect x="577" y="420" width="1" height="15" fill="rgb(217,140,31)"/><text x="580.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.33%)</title><rect x="578" y="420" width="4" height="15" fill="rgb(224,7,29)"/><text x="581.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src:83) (1 samples, 0.11%)</title><rect x="582" y="420" width="1" height="15" fill="rgb(251,98,8)"/><text x="585.00" y="430.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 2.74%)</title><rect x="552" y="244" width="33" height="15" fill="rgb(219,179,8)"/><text x="555.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (25 samples, 2.74%)</title><rect x="552" y="260" width="33" height="15" fill="rgb(245,28,7)"/><text x="555.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (24 samples, 2.63%)</title><rect x="554" y="276" width="31" height="15" fill="rgb(250,76,21)"/><text x="557.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (24 samples, 2.63%)</title><rect x="554" y="292" width="31" height="15" fill="rgb(238,200,53)"/><text x="557.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.63%)</title><rect x="554" y="308" width="31" height="15" fill="rgb(212,131,31)"/><text x="557.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (10 samples, 1.10%)</title><rect x="572" y="324" width="13" height="15" fill="rgb(233,193,28)"/><text x="575.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.10%)</title><rect x="572" y="340" width="13" height="15" fill="rgb(222,96,43)"/><text x="575.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.10%)</title><rect x="572" y="356" width="13" height="15" fill="rgb(229,130,23)"/><text x="575.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.10%)</title><rect x="572" y="372" width="13" height="15" fill="rgb(237,43,39)"/><text x="575.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.10%)</title><rect x="572" y="388" width="13" height="15" fill="rgb(211,78,41)"/><text x="575.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.66%)</title><rect x="577" y="404" width="8" height="15" fill="rgb(218,50,14)"/><text x="580.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.11%)</title><rect x="583" y="420" width="2" height="15" fill="rgb(236,20,35)"/><text x="586.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.11%)</title><rect x="583" y="436" width="2" height="15" fill="rgb(233,84,29)"/><text x="586.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (1 samples, 0.11%)</title><rect x="583" y="452" width="2" height="15" fill="rgb(206,112,15)"/><text x="586.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="583" y="468" width="2" height="15" fill="rgb(230,131,33)"/><text x="586.00" y="478.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (27 samples, 2.96%)</title><rect x="551" y="212" width="35" height="15" fill="rgb(217,157,35)"/><text x="554.00" y="222.50">_r..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (27 samples, 2.96%)</title><rect x="551" y="228" width="35" height="15" fill="rgb(221,70,52)"/><text x="554.00" y="238.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:303) (1 samples, 0.11%)</title><rect x="585" y="244" width="1" height="15" fill="rgb(227,217,23)"/><text x="588.00" y="254.50"></text></g><g><title>npy_cache_import (npy_import.h:22) (1 samples, 0.11%)</title><rect x="585" y="260" width="1" height="15" fill="rgb(239,225,45)"/><text x="588.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (93 samples, 10.21%)</title><rect x="467" y="180" width="120" height="15" fill="rgb(214,101,30)"/><text x="470.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (28 samples, 3.07%)</title><rect x="551" y="196" width="36" height="15" fill="rgb(219,146,45)"/><text x="554.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.11%)</title><rect x="586" y="212" width="1" height="15" fill="rgb(254,118,14)"/><text x="589.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.22%)</title><rect x="587" y="180" width="3" height="15" fill="rgb(222,206,5)"/><text x="590.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.33%)</title><rect x="590" y="180" width="4" height="15" fill="rgb(243,39,31)"/><text x="593.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.11%)</title><rect x="594" y="180" width="1" height="15" fill="rgb(208,190,48)"/><text x="597.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.33%)</title><rect x="595" y="180" width="4" height="15" fill="rgb(248,207,17)"/><text x="598.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:18) (103 samples, 11.31%)</title><rect x="467" y="100" width="133" height="15" fill="rgb(214,52,4)"/><text x="470.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (103 samples, 11.31%)</title><rect x="467" y="116" width="133" height="15" fill="rgb(238,177,54)"/><text x="470.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (103 samples, 11.31%)</title><rect x="467" y="132" width="133" height="15" fill="rgb(236,67,35)"/><text x="470.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (103 samples, 11.31%)</title><rect x="467" y="148" width="133" height="15" fill="rgb(233,189,29)"/><text x="470.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (103 samples, 11.31%)</title><rect x="467" y="164" width="133" height="15" fill="rgb(237,40,31)"/><text x="470.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.11%)</title><rect x="599" y="180" width="1" height="15" fill="rgb(221,144,37)"/><text x="602.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:22) (1 samples, 0.11%)</title><rect x="600" y="100" width="1" height="15" fill="rgb(230,152,49)"/><text x="603.00" y="110.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.22%)</title><rect x="601" y="164" width="3" height="15" fill="rgb(233,186,48)"/><text x="604.00" y="174.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="601" y="180" width="3" height="15" fill="rgb(249,10,43)"/><text x="604.00" y="190.50"></text></g><g><title>0x7ff4d0e3fe07 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="601" y="196" width="3" height="15" fill="rgb(223,91,3)"/><text x="604.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.22%)</title><rect x="604" y="180" width="3" height="15" fill="rgb(238,190,30)"/><text x="607.00" y="190.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.11%)</title><rect x="614" y="228" width="2" height="15" fill="rgb(243,9,3)"/><text x="617.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:45) (1 samples, 0.11%)</title><rect x="614" y="244" width="2" height="15" fill="rgb(230,160,7)"/><text x="617.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.11%)</title><rect x="617" y="292" width="1" height="15" fill="rgb(224,139,39)"/><text x="620.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="618" y="308" width="2" height="15" fill="rgb(234,77,43)"/><text x="621.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="620" y="308" width="1" height="15" fill="rgb(223,116,14)"/><text x="623.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (7 samples, 0.77%)</title><rect x="613" y="212" width="9" height="15" fill="rgb(247,206,16)"/><text x="616.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (5 samples, 0.55%)</title><rect x="616" y="228" width="6" height="15" fill="rgb(228,92,18)"/><text x="619.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (5 samples, 0.55%)</title><rect x="616" y="244" width="6" height="15" fill="rgb(225,114,18)"/><text x="619.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (5 samples, 0.55%)</title><rect x="616" y="260" width="6" height="15" fill="rgb(224,173,54)"/><text x="619.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (5 samples, 0.55%)</title><rect x="616" y="276" width="6" height="15" fill="rgb(250,161,26)"/><text x="619.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.33%)</title><rect x="618" y="292" width="4" height="15" fill="rgb(238,71,12)"/><text x="621.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="621" y="308" width="1" height="15" fill="rgb(235,20,18)"/><text x="624.00" y="318.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="622" y="340" width="1" height="15" fill="rgb(249,206,50)"/><text x="625.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (1 samples, 0.11%)</title><rect x="622" y="356" width="1" height="15" fill="rgb(252,98,52)"/><text x="625.00" y="366.50"></text></g><g><title>array_add (number.c:330) (3 samples, 0.33%)</title><rect x="622" y="228" width="4" height="15" fill="rgb(249,138,17)"/><text x="625.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="622" y="244" width="4" height="15" fill="rgb(205,170,35)"/><text x="625.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.33%)</title><rect x="622" y="260" width="4" height="15" fill="rgb(212,45,52)"/><text x="625.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.33%)</title><rect x="622" y="276" width="4" height="15" fill="rgb(218,41,4)"/><text x="625.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.33%)</title><rect x="622" y="292" width="4" height="15" fill="rgb(226,207,9)"/><text x="625.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (3 samples, 0.33%)</title><rect x="622" y="308" width="4" height="15" fill="rgb(233,211,45)"/><text x="625.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (3 samples, 0.33%)</title><rect x="622" y="324" width="4" height="15" fill="rgb(230,60,45)"/><text x="625.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (2 samples, 0.22%)</title><rect x="623" y="340" width="3" height="15" fill="rgb(223,16,27)"/><text x="626.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.22%)</title><rect x="623" y="356" width="3" height="15" fill="rgb(225,228,19)"/><text x="626.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (11 samples, 1.21%)</title><rect x="613" y="196" width="14" height="15" fill="rgb(233,29,39)"/><text x="616.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (4 samples, 0.44%)</title><rect x="622" y="212" width="5" height="15" fill="rgb(212,18,43)"/><text x="625.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="626" y="228" width="1" height="15" fill="rgb(207,65,8)"/><text x="629.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="626" y="244" width="1" height="15" fill="rgb(234,30,16)"/><text x="629.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="626" y="260" width="1" height="15" fill="rgb(239,142,21)"/><text x="629.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="626" y="276" width="1" height="15" fill="rgb(209,20,12)"/><text x="629.00" y="286.50"></text></g><g><title>0x7ff4d0e3ef71 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="626" y="292" width="1" height="15" fill="rgb(252,74,11)"/><text x="629.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.11%)</title><rect x="629" y="244" width="1" height="15" fill="rgb(232,171,43)"/><text x="632.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="630" y="244" width="1" height="15" fill="rgb(212,225,35)"/><text x="633.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="630" y="260" width="1" height="15" fill="rgb(246,4,9)"/><text x="633.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="630" y="276" width="1" height="15" fill="rgb(246,206,53)"/><text x="633.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="630" y="292" width="1" height="15" fill="rgb(252,178,21)"/><text x="633.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="631" y="260" width="2" height="15" fill="rgb(236,5,36)"/><text x="634.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="631" y="276" width="2" height="15" fill="rgb(232,198,14)"/><text x="634.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.11%)</title><rect x="631" y="292" width="2" height="15" fill="rgb(239,159,17)"/><text x="634.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="633" y="260" width="1" height="15" fill="rgb(216,189,48)"/><text x="636.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="633" y="276" width="1" height="15" fill="rgb(205,188,2)"/><text x="636.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.11%)</title><rect x="633" y="292" width="1" height="15" fill="rgb(251,99,32)"/><text x="636.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.11%)</title><rect x="633" y="308" width="1" height="15" fill="rgb(212,13,22)"/><text x="636.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.11%)</title><rect x="633" y="324" width="1" height="15" fill="rgb(210,107,52)"/><text x="636.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1516) (1 samples, 0.11%)</title><rect x="633" y="340" width="1" height="15" fill="rgb(224,130,14)"/><text x="636.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.11%)</title><rect x="634" y="276" width="1" height="15" fill="rgb(242,75,15)"/><text x="637.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="634" y="292" width="1" height="15" fill="rgb(243,137,28)"/><text x="637.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="634" y="308" width="1" height="15" fill="rgb(244,178,11)"/><text x="637.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="634" y="324" width="1" height="15" fill="rgb(254,138,20)"/><text x="637.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.11%)</title><rect x="634" y="340" width="1" height="15" fill="rgb(225,165,0)"/><text x="637.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.11%)</title><rect x="634" y="356" width="1" height="15" fill="rgb(207,152,44)"/><text x="637.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.11%)</title><rect x="634" y="372" width="1" height="15" fill="rgb(238,158,19)"/><text x="637.00" y="382.50"></text></g><g><title>FLOAT_log (loops.c.src:1601) (1 samples, 0.11%)</title><rect x="635" y="308" width="1" height="15" fill="rgb(221,160,50)"/><text x="638.00" y="318.50"></text></g><g><title>0x7ff4d0fc0979 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="636" y="324" width="3" height="15" fill="rgb(236,32,13)"/><text x="639.00" y="334.50"></text></g><g><title>0x7ff4d0fc0997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="639" y="324" width="1" height="15" fill="rgb(249,85,38)"/><text x="642.00" y="334.50"></text></g><g><title>0x7ff4d0fc09bd (libm-2.29.so) (2 samples, 0.22%)</title><rect x="640" y="324" width="3" height="15" fill="rgb(235,95,27)"/><text x="643.00" y="334.50"></text></g><g><title>0x7ff4d0fc09f8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="643" y="324" width="1" height="15" fill="rgb(230,13,6)"/><text x="646.00" y="334.50"></text></g><g><title>0x7ff4d0fc0a04 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="644" y="324" width="1" height="15" fill="rgb(219,168,54)"/><text x="647.00" y="334.50"></text></g><g><title>0x7ff4d0fc0a19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="645" y="324" width="2" height="15" fill="rgb(217,111,17)"/><text x="648.00" y="334.50"></text></g><g><title>0x7ff4d0fc0a21 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="647" y="324" width="4" height="15" fill="rgb(218,185,19)"/><text x="650.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (14 samples, 1.54%)</title><rect x="636" y="308" width="19" height="15" fill="rgb(210,138,29)"/><text x="639.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (3 samples, 0.33%)</title><rect x="651" y="324" width="4" height="15" fill="rgb(220,85,43)"/><text x="654.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 2.20%)</title><rect x="634" y="260" width="26" height="15" fill="rgb(247,140,17)"/><text x="637.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (19 samples, 2.09%)</title><rect x="635" y="276" width="25" height="15" fill="rgb(239,212,47)"/><text x="638.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (19 samples, 2.09%)</title><rect x="635" y="292" width="25" height="15" fill="rgb(253,89,42)"/><text x="638.00" y="302.50">t..</text></g><g><title>FLOAT_log (loops.c.src:1604) (4 samples, 0.44%)</title><rect x="655" y="308" width="5" height="15" fill="rgb(240,15,54)"/><text x="658.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (4 samples, 0.44%)</title><rect x="655" y="324" width="5" height="15" fill="rgb(214,69,13)"/><text x="658.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (26 samples, 2.85%)</title><rect x="627" y="228" width="34" height="15" fill="rgb(224,124,27)"/><text x="630.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (23 samples, 2.52%)</title><rect x="631" y="244" width="30" height="15" fill="rgb(216,22,21)"/><text x="634.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3281) (1 samples, 0.11%)</title><rect x="660" y="260" width="1" height="15" fill="rgb(241,111,41)"/><text x="663.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.11%)</title><rect x="662" y="292" width="2" height="15" fill="rgb(227,13,1)"/><text x="665.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.22%)</title><rect x="664" y="324" width="2" height="15" fill="rgb(212,203,20)"/><text x="667.00" y="334.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.11%)</title><rect x="665" y="340" width="1" height="15" fill="rgb(241,12,23)"/><text x="668.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.11%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(223,202,14)"/><text x="669.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.11%)</title><rect x="666" y="340" width="2" height="15" fill="rgb(235,75,5)"/><text x="669.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.11%)</title><rect x="666" y="356" width="2" height="15" fill="rgb(228,89,21)"/><text x="669.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.11%)</title><rect x="666" y="372" width="2" height="15" fill="rgb(211,121,50)"/><text x="669.00" y="382.50"></text></g><g><title>long_index (scalartypes.c.src:3032) (1 samples, 0.11%)</title><rect x="666" y="388" width="2" height="15" fill="rgb(225,210,0)"/><text x="669.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.11%)</title><rect x="668" y="404" width="1" height="15" fill="rgb(232,6,45)"/><text x="671.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.22%)</title><rect x="668" y="340" width="2" height="15" fill="rgb(248,164,54)"/><text x="671.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.22%)</title><rect x="668" y="356" width="2" height="15" fill="rgb(211,155,29)"/><text x="671.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.22%)</title><rect x="668" y="372" width="2" height="15" fill="rgb(223,49,0)"/><text x="671.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (2 samples, 0.22%)</title><rect x="668" y="388" width="2" height="15" fill="rgb(236,176,38)"/><text x="671.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1401) (1 samples, 0.11%)</title><rect x="669" y="404" width="1" height="15" fill="rgb(223,178,24)"/><text x="672.00" y="414.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.11%)</title><rect x="670" y="388" width="1" height="15" fill="rgb(231,22,35)"/><text x="673.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.22%)</title><rect x="670" y="356" width="3" height="15" fill="rgb(238,229,48)"/><text x="673.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.22%)</title><rect x="670" y="372" width="3" height="15" fill="rgb(225,4,50)"/><text x="673.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="671" y="388" width="2" height="15" fill="rgb(206,97,50)"/><text x="674.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="671" y="404" width="2" height="15" fill="rgb(233,57,8)"/><text x="674.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.11%)</title><rect x="671" y="420" width="2" height="15" fill="rgb(245,164,20)"/><text x="674.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.11%)</title><rect x="673" y="388" width="1" height="15" fill="rgb(253,155,20)"/><text x="676.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="673" y="404" width="1" height="15" fill="rgb(222,143,30)"/><text x="676.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.11%)</title><rect x="673" y="420" width="1" height="15" fill="rgb(228,76,45)"/><text x="676.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:744) (1 samples, 0.11%)</title><rect x="673" y="436" width="1" height="15" fill="rgb(239,156,21)"/><text x="676.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.11%)</title><rect x="674" y="404" width="1" height="15" fill="rgb(249,204,4)"/><text x="677.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3884) (1 samples, 0.11%)</title><rect x="674" y="420" width="1" height="15" fill="rgb(213,185,44)"/><text x="677.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.33%)</title><rect x="673" y="356" width="4" height="15" fill="rgb(233,167,47)"/><text x="676.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.33%)</title><rect x="673" y="372" width="4" height="15" fill="rgb(245,78,27)"/><text x="676.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.22%)</title><rect x="674" y="388" width="3" height="15" fill="rgb(225,7,49)"/><text x="677.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.11%)</title><rect x="675" y="404" width="2" height="15" fill="rgb(236,135,17)"/><text x="678.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="675" y="420" width="2" height="15" fill="rgb(206,81,19)"/><text x="678.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2046) (1 samples, 0.11%)</title><rect x="677" y="388" width="1" height="15" fill="rgb(246,30,14)"/><text x="680.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="677" y="356" width="2" height="15" fill="rgb(222,212,8)"/><text x="680.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.22%)</title><rect x="677" y="372" width="2" height="15" fill="rgb(232,193,7)"/><text x="680.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2183) (1 samples, 0.11%)</title><rect x="678" y="388" width="1" height="15" fill="rgb(253,14,37)"/><text x="681.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.11%)</title><rect x="679" y="372" width="1" height="15" fill="rgb(229,154,32)"/><text x="682.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.11%)</title><rect x="679" y="388" width="1" height="15" fill="rgb(242,72,24)"/><text x="682.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="682" y="388" width="1" height="15" fill="rgb(235,38,48)"/><text x="685.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (5 samples, 0.55%)</title><rect x="683" y="388" width="7" height="15" fill="rgb(211,92,52)"/><text x="686.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="688" y="404" width="2" height="15" fill="rgb(216,134,8)"/><text x="691.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="690" y="388" width="1" height="15" fill="rgb(244,113,7)"/><text x="693.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="691" y="388" width="1" height="15" fill="rgb(236,227,38)"/><text x="694.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.22%)</title><rect x="692" y="388" width="3" height="15" fill="rgb(217,85,34)"/><text x="695.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="695" y="388" width="1" height="15" fill="rgb(220,125,21)"/><text x="698.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (54 samples, 5.93%)</title><rect x="627" y="196" width="70" height="15" fill="rgb(248,193,2)"/><text x="630.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (54 samples, 5.93%)</title><rect x="627" y="212" width="70" height="15" fill="rgb(245,196,35)"/><text x="630.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (28 samples, 3.07%)</title><rect x="661" y="228" width="36" height="15" fill="rgb(251,146,30)"/><text x="664.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (27 samples, 2.96%)</title><rect x="662" y="244" width="35" height="15" fill="rgb(250,162,46)"/><text x="665.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (27 samples, 2.96%)</title><rect x="662" y="260" width="35" height="15" fill="rgb(228,1,9)"/><text x="665.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (27 samples, 2.96%)</title><rect x="662" y="276" width="35" height="15" fill="rgb(250,160,28)"/><text x="665.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (26 samples, 2.85%)</title><rect x="664" y="292" width="33" height="15" fill="rgb(251,191,22)"/><text x="667.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (26 samples, 2.85%)</title><rect x="664" y="308" width="33" height="15" fill="rgb(250,124,43)"/><text x="667.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (23 samples, 2.52%)</title><rect x="668" y="324" width="29" height="15" fill="rgb(216,0,9)"/><text x="671.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (21 samples, 2.31%)</title><rect x="670" y="340" width="27" height="15" fill="rgb(254,106,46)"/><text x="673.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 1.54%)</title><rect x="679" y="356" width="18" height="15" fill="rgb(248,225,11)"/><text x="682.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (13 samples, 1.43%)</title><rect x="680" y="372" width="17" height="15" fill="rgb(244,19,17)"/><text x="683.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.11%)</title><rect x="696" y="388" width="1" height="15" fill="rgb(221,160,47)"/><text x="699.00" y="398.50"></text></g><g><title>0x7ff49ae05ea0 (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="697" y="468" width="4" height="15" fill="rgb(213,42,31)"/><text x="700.00" y="478.50"></text></g><g><title>0x7ff49ae05ea9 (libgomp.so.1.0.0) (11 samples, 1.21%)</title><rect x="701" y="468" width="14" height="15" fill="rgb(219,17,43)"/><text x="704.00" y="478.50"></text></g><g><title>0x7ff49ae05eab (libgomp.so.1.0.0) (8 samples, 0.88%)</title><rect x="715" y="468" width="11" height="15" fill="rgb(243,52,4)"/><text x="718.00" y="478.50"></text></g><g><title>0x7ff49ae04ab9 (libgomp.so.1.0.0) (26 samples, 2.85%)</title><rect x="697" y="452" width="34" height="15" fill="rgb(230,116,53)"/><text x="700.00" y="462.50">0x..</text></g><g><title>0x7ff49ae05ead (libgomp.so.1.0.0) (4 samples, 0.44%)</title><rect x="726" y="468" width="5" height="15" fill="rgb(235,155,50)"/><text x="729.00" y="478.50"></text></g><g><title>0x7ff49ae05cf9 (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="731" y="484" width="4" height="15" fill="rgb(241,74,20)"/><text x="734.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (31 samples, 3.40%)</title><rect x="697" y="196" width="40" height="15" fill="rgb(243,229,1)"/><text x="700.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (31 samples, 3.40%)</title><rect x="697" y="212" width="40" height="15" fill="rgb(234,59,32)"/><text x="700.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (31 samples, 3.40%)</title><rect x="697" y="228" width="40" height="15" fill="rgb(229,195,16)"/><text x="700.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (31 samples, 3.40%)</title><rect x="697" y="244" width="40" height="15" fill="rgb(210,151,51)"/><text x="700.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (31 samples, 3.40%)</title><rect x="697" y="260" width="40" height="15" fill="rgb(209,218,7)"/><text x="700.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (31 samples, 3.40%)</title><rect x="697" y="276" width="40" height="15" fill="rgb(247,154,42)"/><text x="700.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (31 samples, 3.40%)</title><rect x="697" y="292" width="40" height="15" fill="rgb(233,163,19)"/><text x="700.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (31 samples, 3.40%)</title><rect x="697" y="308" width="40" height="15" fill="rgb(219,43,27)"/><text x="700.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (31 samples, 3.40%)</title><rect x="697" y="324" width="40" height="15" fill="rgb(232,203,6)"/><text x="700.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (31 samples, 3.40%)</title><rect x="697" y="340" width="40" height="15" fill="rgb(225,151,33)"/><text x="700.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (31 samples, 3.40%)</title><rect x="697" y="356" width="40" height="15" fill="rgb(224,29,4)"/><text x="700.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (31 samples, 3.40%)</title><rect x="697" y="372" width="40" height="15" fill="rgb(253,182,27)"/><text x="700.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (31 samples, 3.40%)</title><rect x="697" y="388" width="40" height="15" fill="rgb(217,9,34)"/><text x="700.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (31 samples, 3.40%)</title><rect x="697" y="404" width="40" height="15" fill="rgb(216,67,4)"/><text x="700.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (31 samples, 3.40%)</title><rect x="697" y="420" width="40" height="15" fill="rgb(247,212,54)"/><text x="700.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (31 samples, 3.40%)</title><rect x="697" y="436" width="40" height="15" fill="rgb(250,182,38)"/><text x="700.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 0.55%)</title><rect x="731" y="452" width="6" height="15" fill="rgb(224,164,5)"/><text x="734.00" y="462.50"></text></g><g><title>0x7ff49ae03daa (libgomp.so.1.0.0) (5 samples, 0.55%)</title><rect x="731" y="468" width="6" height="15" fill="rgb(221,96,18)"/><text x="734.00" y="478.50"></text></g><g><title>0x7ff49ae05cfb (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="735" y="484" width="2" height="15" fill="rgb(219,112,1)"/><text x="738.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.11%)</title><rect x="737" y="228" width="2" height="15" fill="rgb(245,91,26)"/><text x="740.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.11%)</title><rect x="739" y="228" width="1" height="15" fill="rgb(213,47,28)"/><text x="742.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="741" y="260" width="2" height="15" fill="rgb(241,86,51)"/><text x="744.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="741" y="276" width="2" height="15" fill="rgb(226,98,43)"/><text x="744.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.11%)</title><rect x="741" y="292" width="2" height="15" fill="rgb(241,228,28)"/><text x="744.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.11%)</title><rect x="743" y="308" width="1" height="15" fill="rgb(234,157,29)"/><text x="746.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:777) (1 samples, 0.11%)</title><rect x="743" y="324" width="1" height="15" fill="rgb(210,217,8)"/><text x="746.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="744" y="308" width="1" height="15" fill="rgb(241,225,9)"/><text x="747.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.11%)</title><rect x="744" y="324" width="1" height="15" fill="rgb(245,171,50)"/><text x="747.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="744" y="340" width="1" height="15" fill="rgb(206,217,7)"/><text x="747.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.11%)</title><rect x="745" y="308" width="2" height="15" fill="rgb(236,111,0)"/><text x="748.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2159) (1 samples, 0.11%)</title><rect x="745" y="324" width="2" height="15" fill="rgb(242,13,53)"/><text x="748.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.44%)</title><rect x="743" y="292" width="5" height="15" fill="rgb(220,149,40)"/><text x="746.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="747" y="308" width="1" height="15" fill="rgb(241,229,23)"/><text x="750.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.11%)</title><rect x="747" y="324" width="1" height="15" fill="rgb(225,187,10)"/><text x="750.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.66%)</title><rect x="741" y="244" width="8" height="15" fill="rgb(234,132,54)"/><text x="744.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.55%)</title><rect x="743" y="260" width="6" height="15" fill="rgb(238,137,21)"/><text x="746.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.55%)</title><rect x="743" y="276" width="6" height="15" fill="rgb(230,23,48)"/><text x="746.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="748" y="292" width="1" height="15" fill="rgb(229,214,15)"/><text x="751.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.11%)</title><rect x="748" y="308" width="1" height="15" fill="rgb(212,65,6)"/><text x="751.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (8 samples, 0.88%)</title><rect x="740" y="228" width="10" height="15" fill="rgb(212,50,5)"/><text x="743.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4798) (1 samples, 0.11%)</title><rect x="749" y="244" width="1" height="15" fill="rgb(231,151,49)"/><text x="752.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="752" y="292" width="1" height="15" fill="rgb(243,189,21)"/><text x="755.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="752" y="308" width="1" height="15" fill="rgb(215,63,36)"/><text x="755.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.11%)</title><rect x="752" y="324" width="1" height="15" fill="rgb(221,27,37)"/><text x="755.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2519) (1 samples, 0.11%)</title><rect x="752" y="340" width="1" height="15" fill="rgb(219,89,17)"/><text x="755.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2246) (1 samples, 0.11%)</title><rect x="753" y="324" width="1" height="15" fill="rgb(251,50,7)"/><text x="756.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="754" y="340" width="2" height="15" fill="rgb(214,135,14)"/><text x="757.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="756" y="340" width="1" height="15" fill="rgb(246,184,28)"/><text x="759.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 0.77%)</title><rect x="753" y="292" width="9" height="15" fill="rgb(252,57,11)"/><text x="756.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 0.77%)</title><rect x="753" y="308" width="9" height="15" fill="rgb(220,67,41)"/><text x="756.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.66%)</title><rect x="754" y="324" width="8" height="15" fill="rgb(238,175,24)"/><text x="757.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.44%)</title><rect x="757" y="340" width="5" height="15" fill="rgb(223,132,33)"/><text x="760.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (4 samples, 0.44%)</title><rect x="757" y="356" width="5" height="15" fill="rgb(211,162,36)"/><text x="760.00" y="366.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:600) (1 samples, 0.11%)</title><rect x="762" y="340" width="1" height="15" fill="rgb(231,70,42)"/><text x="765.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (21 samples, 2.31%)</title><rect x="737" y="196" width="28" height="15" fill="rgb(250,17,13)"/><text x="740.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (21 samples, 2.31%)</title><rect x="737" y="212" width="28" height="15" fill="rgb(241,90,42)"/><text x="740.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (11 samples, 1.21%)</title><rect x="750" y="228" width="15" height="15" fill="rgb(250,227,28)"/><text x="753.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.10%)</title><rect x="752" y="244" width="13" height="15" fill="rgb(206,227,34)"/><text x="755.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.10%)</title><rect x="752" y="260" width="13" height="15" fill="rgb(223,210,19)"/><text x="755.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.10%)</title><rect x="752" y="276" width="13" height="15" fill="rgb(236,220,31)"/><text x="755.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.22%)</title><rect x="762" y="292" width="3" height="15" fill="rgb(241,163,25)"/><text x="765.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="762" y="308" width="3" height="15" fill="rgb(217,103,4)"/><text x="765.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="762" y="324" width="3" height="15" fill="rgb(241,152,47)"/><text x="765.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="763" y="340" width="2" height="15" fill="rgb(253,121,18)"/><text x="766.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.11%)</title><rect x="763" y="356" width="2" height="15" fill="rgb(253,164,10)"/><text x="766.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 0.66%)</title><rect x="769" y="324" width="7" height="15" fill="rgb(253,97,20)"/><text x="772.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (6 samples, 0.66%)</title><rect x="769" y="340" width="7" height="15" fill="rgb(250,178,20)"/><text x="772.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.33%)</title><rect x="772" y="356" width="4" height="15" fill="rgb(212,104,32)"/><text x="775.00" y="366.50"></text></g><g><title>0x7ff4d0e54e93 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="775" y="372" width="1" height="15" fill="rgb(247,31,18)"/><text x="778.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="776" y="388" width="2" height="15" fill="rgb(241,157,4)"/><text x="779.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.11%)</title><rect x="778" y="388" width="1" height="15" fill="rgb(229,106,26)"/><text x="781.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="780" y="404" width="1" height="15" fill="rgb(227,78,15)"/><text x="783.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="780" y="420" width="1" height="15" fill="rgb(223,36,52)"/><text x="783.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="780" y="436" width="1" height="15" fill="rgb(234,178,26)"/><text x="783.00" y="446.50"></text></g><g><title>0x7ff4d0060e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="781" y="420" width="2" height="15" fill="rgb(233,79,7)"/><text x="784.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (2 samples, 0.22%)</title><rect x="781" y="404" width="3" height="15" fill="rgb(235,63,11)"/><text x="784.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="783" y="420" width="1" height="15" fill="rgb(238,92,12)"/><text x="786.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (9 samples, 0.99%)</title><rect x="776" y="340" width="12" height="15" fill="rgb(210,120,52)"/><text x="779.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (9 samples, 0.99%)</title><rect x="776" y="356" width="12" height="15" fill="rgb(247,65,33)"/><text x="779.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 0.99%)</title><rect x="776" y="372" width="12" height="15" fill="rgb(215,16,38)"/><text x="779.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (7 samples, 0.77%)</title><rect x="779" y="388" width="9" height="15" fill="rgb(207,124,13)"/><text x="782.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.33%)</title><rect x="784" y="404" width="4" height="15" fill="rgb(240,153,14)"/><text x="787.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="787" y="420" width="1" height="15" fill="rgb(229,78,50)"/><text x="790.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2025) (1 samples, 0.11%)</title><rect x="787" y="436" width="1" height="15" fill="rgb(244,151,5)"/><text x="790.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (11 samples, 1.21%)</title><rect x="776" y="324" width="15" height="15" fill="rgb(236,2,25)"/><text x="779.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="788" y="340" width="3" height="15" fill="rgb(208,218,46)"/><text x="791.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="791" y="356" width="1" height="15" fill="rgb(218,155,21)"/><text x="794.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="791" y="372" width="1" height="15" fill="rgb(238,65,29)"/><text x="794.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="791" y="388" width="1" height="15" fill="rgb(221,126,45)"/><text x="794.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.11%)</title><rect x="791" y="404" width="1" height="15" fill="rgb(205,27,10)"/><text x="794.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="792" y="372" width="1" height="15" fill="rgb(245,114,26)"/><text x="795.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="792" y="388" width="1" height="15" fill="rgb(223,95,50)"/><text x="795.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="792" y="404" width="1" height="15" fill="rgb(225,177,44)"/><text x="795.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="792" y="420" width="1" height="15" fill="rgb(209,74,24)"/><text x="795.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="792" y="436" width="1" height="15" fill="rgb(233,58,31)"/><text x="795.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:168) (1 samples, 0.11%)</title><rect x="792" y="452" width="1" height="15" fill="rgb(243,150,21)"/><text x="795.00" y="462.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="793" y="388" width="1" height="15" fill="rgb(246,184,24)"/><text x="796.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.11%)</title><rect x="793" y="404" width="1" height="15" fill="rgb(215,216,46)"/><text x="796.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.11%)</title><rect x="793" y="420" width="1" height="15" fill="rgb(230,78,36)"/><text x="796.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1427) (1 samples, 0.11%)</title><rect x="793" y="436" width="1" height="15" fill="rgb(236,33,42)"/><text x="796.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.22%)</title><rect x="793" y="372" width="3" height="15" fill="rgb(248,61,42)"/><text x="796.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.11%)</title><rect x="794" y="388" width="2" height="15" fill="rgb(214,79,52)"/><text x="797.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.11%)</title><rect x="794" y="404" width="2" height="15" fill="rgb(250,164,51)"/><text x="797.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.11%)</title><rect x="794" y="420" width="2" height="15" fill="rgb(221,85,54)"/><text x="797.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="796" y="388" width="1" height="15" fill="rgb(244,38,13)"/><text x="799.00" y="398.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.11%)</title><rect x="796" y="404" width="1" height="15" fill="rgb(214,168,3)"/><text x="799.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="797" y="420" width="1" height="15" fill="rgb(253,46,40)"/><text x="800.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.11%)</title><rect x="797" y="436" width="1" height="15" fill="rgb(213,9,49)"/><text x="800.00" y="446.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.11%)</title><rect x="797" y="452" width="1" height="15" fill="rgb(219,2,52)"/><text x="800.00" y="462.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.11%)</title><rect x="797" y="468" width="1" height="15" fill="rgb(206,62,21)"/><text x="800.00" y="478.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:675) (1 samples, 0.11%)</title><rect x="797" y="484" width="1" height="15" fill="rgb(223,7,10)"/><text x="800.00" y="494.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="797" y="404" width="3" height="15" fill="rgb(251,12,52)"/><text x="800.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="798" y="420" width="2" height="15" fill="rgb(236,137,46)"/><text x="801.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.11%)</title><rect x="798" y="436" width="2" height="15" fill="rgb(247,78,47)"/><text x="801.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.11%)</title><rect x="798" y="452" width="2" height="15" fill="rgb(242,192,31)"/><text x="801.00" y="462.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.11%)</title><rect x="798" y="468" width="2" height="15" fill="rgb(241,208,16)"/><text x="801.00" y="478.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.11%)</title><rect x="798" y="484" width="2" height="15" fill="rgb(216,59,30)"/><text x="801.00" y="494.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="800" y="420" width="1" height="15" fill="rgb(229,42,29)"/><text x="803.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="800" y="436" width="1" height="15" fill="rgb(208,172,3)"/><text x="803.00" y="446.50"></text></g><g><title>0x7ff4d0060710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="800" y="452" width="1" height="15" fill="rgb(245,213,1)"/><text x="803.00" y="462.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1090) (1 samples, 0.11%)</title><rect x="801" y="452" width="1" height="15" fill="rgb(231,32,22)"/><text x="804.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.11%)</title><rect x="802" y="468" width="2" height="15" fill="rgb(251,82,45)"/><text x="805.00" y="478.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:873) (2 samples, 0.22%)</title><rect x="804" y="468" width="2" height="15" fill="rgb(238,148,24)"/><text x="807.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.66%)</title><rect x="800" y="404" width="7" height="15" fill="rgb(208,224,52)"/><text x="803.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.55%)</title><rect x="801" y="420" width="6" height="15" fill="rgb(212,14,21)"/><text x="804.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.55%)</title><rect x="801" y="436" width="6" height="15" fill="rgb(239,175,7)"/><text x="804.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (4 samples, 0.44%)</title><rect x="802" y="452" width="5" height="15" fill="rgb(224,146,40)"/><text x="805.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="806" y="468" width="1" height="15" fill="rgb(248,137,10)"/><text x="809.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.11%)</title><rect x="807" y="420" width="2" height="15" fill="rgb(206,159,22)"/><text x="810.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.44%)</title><rect x="807" y="404" width="6" height="15" fill="rgb(224,185,1)"/><text x="810.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.33%)</title><rect x="809" y="420" width="4" height="15" fill="rgb(207,178,42)"/><text x="812.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (160 samples, 17.56%)</title><rect x="607" y="180" width="207" height="15" fill="rgb(218,218,29)"/><text x="610.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (38 samples, 4.17%)</title><rect x="765" y="196" width="49" height="15" fill="rgb(237,148,23)"/><text x="768.00" y="206.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (38 samples, 4.17%)</title><rect x="765" y="212" width="49" height="15" fill="rgb(233,1,33)"/><text x="768.00" y="222.50">_run..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (38 samples, 4.17%)</title><rect x="765" y="228" width="49" height="15" fill="rgb(251,20,18)"/><text x="768.00" y="238.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (38 samples, 4.17%)</title><rect x="765" y="244" width="49" height="15" fill="rgb(213,216,47)"/><text x="768.00" y="254.50">arra..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (37 samples, 4.06%)</title><rect x="766" y="260" width="48" height="15" fill="rgb(223,19,12)"/><text x="769.00" y="270.50">clip..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (37 samples, 4.06%)</title><rect x="766" y="276" width="48" height="15" fill="rgb(249,222,28)"/><text x="769.00" y="286.50">_wra..</text></g><g><title>array_clip (methods.c:2381) (37 samples, 4.06%)</title><rect x="766" y="292" width="48" height="15" fill="rgb(232,95,23)"/><text x="769.00" y="302.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (37 samples, 4.06%)</title><rect x="766" y="308" width="48" height="15" fill="rgb(220,63,28)"/><text x="769.00" y="318.50">forw..</text></g><g><title>_clip (numpy/core/_methods.py:132) (18 samples, 1.98%)</title><rect x="791" y="324" width="23" height="15" fill="rgb(206,182,49)"/><text x="794.00" y="334.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (18 samples, 1.98%)</title><rect x="791" y="340" width="23" height="15" fill="rgb(211,155,0)"/><text x="794.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 1.87%)</title><rect x="792" y="356" width="22" height="15" fill="rgb(238,93,35)"/><text x="795.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 1.54%)</title><rect x="796" y="372" width="18" height="15" fill="rgb(236,212,45)"/><text x="799.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (13 samples, 1.43%)</title><rect x="797" y="388" width="17" height="15" fill="rgb(234,172,7)"/><text x="800.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="813" y="404" width="1" height="15" fill="rgb(211,147,12)"/><text x="816.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="813" y="420" width="1" height="15" fill="rgb(240,80,1)"/><text x="816.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.33%)</title><rect x="814" y="180" width="4" height="15" fill="rgb(253,170,0)"/><text x="817.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.22%)</title><rect x="818" y="180" width="2" height="15" fill="rgb(213,82,54)"/><text x="821.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (168 samples, 18.44%)</title><rect x="604" y="164" width="218" height="15" fill="rgb(220,0,13)"/><text x="607.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.11%)</title><rect x="820" y="180" width="2" height="15" fill="rgb(252,0,7)"/><text x="823.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:45) (277 samples, 30.41%)</title><rect x="464" y="52" width="359" height="15" fill="rgb(222,33,4)"/><text x="467.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:44) (277 samples, 30.41%)</title><rect x="464" y="68" width="359" height="15" fill="rgb(213,121,26)"/><text x="467.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:29) (275 samples, 30.19%)</title><rect x="467" y="84" width="356" height="15" fill="rgb(246,146,23)"/><text x="470.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:23) (171 samples, 18.77%)</title><rect x="601" y="100" width="222" height="15" fill="rgb(211,87,22)"/><text x="604.00" y="110.50">profile (bench_AdaBoostClassi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (171 samples, 18.77%)</title><rect x="601" y="116" width="222" height="15" fill="rgb(216,209,30)"/><text x="604.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (171 samples, 18.77%)</title><rect x="601" y="132" width="222" height="15" fill="rgb(231,154,4)"/><text x="604.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (171 samples, 18.77%)</title><rect x="601" y="148" width="222" height="15" fill="rgb(208,159,50)"/><text x="604.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="822" y="164" width="1" height="15" fill="rgb(217,166,50)"/><text x="825.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="822" y="180" width="1" height="15" fill="rgb(214,210,44)"/><text x="825.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="822" y="196" width="1" height="15" fill="rgb(238,41,48)"/><text x="825.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="822" y="212" width="1" height="15" fill="rgb(249,152,12)"/><text x="825.00" y="222.50"></text></g><g><title>0x7ff4d0e3ef71 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="822" y="228" width="1" height="15" fill="rgb(238,159,5)"/><text x="825.00" y="238.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.11%)</title><rect x="823" y="212" width="1" height="15" fill="rgb(225,50,29)"/><text x="826.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:211) (1 samples, 0.11%)</title><rect x="823" y="228" width="1" height="15" fill="rgb(247,155,9)"/><text x="826.00" y="238.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.11%)</title><rect x="823" y="244" width="1" height="15" fill="rgb(209,210,14)"/><text x="826.00" y="254.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.11%)</title><rect x="823" y="260" width="1" height="15" fill="rgb(240,84,20)"/><text x="826.00" y="270.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.22%)</title><rect x="823" y="116" width="3" height="15" fill="rgb(242,127,12)"/><text x="826.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.22%)</title><rect x="823" y="132" width="3" height="15" fill="rgb(246,139,22)"/><text x="826.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.22%)</title><rect x="823" y="148" width="3" height="15" fill="rgb(221,192,2)"/><text x="826.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.22%)</title><rect x="823" y="164" width="3" height="15" fill="rgb(206,2,7)"/><text x="826.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.22%)</title><rect x="823" y="180" width="3" height="15" fill="rgb(246,18,33)"/><text x="826.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.22%)</title><rect x="823" y="196" width="3" height="15" fill="rgb(244,174,53)"/><text x="826.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:89) (1 samples, 0.11%)</title><rect x="824" y="212" width="2" height="15" fill="rgb(235,14,31)"/><text x="827.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.11%)</title><rect x="824" y="228" width="2" height="15" fill="rgb(232,210,20)"/><text x="827.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.11%)</title><rect x="824" y="244" width="2" height="15" fill="rgb(207,88,8)"/><text x="827.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.11%)</title><rect x="824" y="260" width="2" height="15" fill="rgb(229,156,17)"/><text x="827.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.11%)</title><rect x="824" y="276" width="2" height="15" fill="rgb(249,19,31)"/><text x="827.00" y="286.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.11%)</title><rect x="824" y="292" width="2" height="15" fill="rgb(249,145,5)"/><text x="827.00" y="302.50"></text></g><g><title>extract (traceback.py:359) (1 samples, 0.11%)</title><rect x="824" y="308" width="2" height="15" fill="rgb(222,224,43)"/><text x="827.00" y="318.50"></text></g><g><title>checkcache (linecache.py:74) (1 samples, 0.11%)</title><rect x="824" y="324" width="2" height="15" fill="rgb(254,40,7)"/><text x="827.00" y="334.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="824" y="340" width="2" height="15" fill="rgb(229,62,0)"/><text x="827.00" y="350.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.11%)</title><rect x="826" y="164" width="1" height="15" fill="rgb(209,96,6)"/><text x="829.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (1 samples, 0.11%)</title><rect x="826" y="180" width="1" height="15" fill="rgb(236,33,28)"/><text x="829.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:186) (1 samples, 0.11%)</title><rect x="826" y="196" width="1" height="15" fill="rgb(245,192,2)"/><text x="829.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:158) (1 samples, 0.11%)</title><rect x="826" y="212" width="1" height="15" fill="rgb(233,144,5)"/><text x="829.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.11%)</title><rect x="826" y="228" width="1" height="15" fill="rgb(234,150,48)"/><text x="829.00" y="238.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:28) (4 samples, 0.44%)</title><rect x="823" y="84" width="5" height="15" fill="rgb(244,217,13)"/><text x="826.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (4 samples, 0.44%)</title><rect x="823" y="100" width="5" height="15" fill="rgb(212,4,38)"/><text x="826.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.22%)</title><rect x="826" y="116" width="2" height="15" fill="rgb(246,167,31)"/><text x="829.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.22%)</title><rect x="826" y="132" width="2" height="15" fill="rgb(250,94,15)"/><text x="829.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.22%)</title><rect x="826" y="148" width="2" height="15" fill="rgb(225,69,16)"/><text x="829.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.11%)</title><rect x="827" y="164" width="1" height="15" fill="rgb(211,20,27)"/><text x="830.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.11%)</title><rect x="827" y="180" width="1" height="15" fill="rgb(239,141,6)"/><text x="830.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.11%)</title><rect x="827" y="196" width="1" height="15" fill="rgb(250,160,3)"/><text x="830.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.11%)</title><rect x="827" y="212" width="1" height="15" fill="rgb(254,126,43)"/><text x="830.00" y="222.50"></text></g><g><title>0x7ff490afcff9 (?) (1 samples, 0.11%)</title><rect x="827" y="228" width="1" height="15" fill="rgb(219,94,23)"/><text x="830.00" y="238.50"></text></g><g><title>0x7ff490af753d (?) (1 samples, 0.11%)</title><rect x="827" y="244" width="1" height="15" fill="rgb(231,94,16)"/><text x="830.00" y="254.50"></text></g><g><title>0x7ff490b234ec (?) (1 samples, 0.11%)</title><rect x="827" y="260" width="1" height="15" fill="rgb(223,92,48)"/><text x="830.00" y="270.50"></text></g><g><title>0x7ff490b22c3a (?) (1 samples, 0.11%)</title><rect x="827" y="276" width="1" height="15" fill="rgb(208,221,38)"/><text x="830.00" y="286.50"></text></g><g><title>0x7ff490b25a0c (?) (1 samples, 0.11%)</title><rect x="827" y="292" width="1" height="15" fill="rgb(231,130,50)"/><text x="830.00" y="302.50"></text></g><g><title>0x7ff490fcc178 (?) (1 samples, 0.11%)</title><rect x="827" y="308" width="1" height="15" fill="rgb(242,133,35)"/><text x="830.00" y="318.50"></text></g><g><title>0x7ff490fc14c3 (?) (1 samples, 0.11%)</title><rect x="827" y="324" width="1" height="15" fill="rgb(211,166,5)"/><text x="830.00" y="334.50"></text></g><g><title>0x7ff490fa58c2 (?) (1 samples, 0.11%)</title><rect x="827" y="340" width="1" height="15" fill="rgb(240,51,9)"/><text x="830.00" y="350.50"></text></g><g><title>0x7ff490fb3c0c (?) (1 samples, 0.11%)</title><rect x="827" y="356" width="1" height="15" fill="rgb(207,20,16)"/><text x="830.00" y="366.50"></text></g><g><title>0x7ff490fb3a8f (?) (1 samples, 0.11%)</title><rect x="827" y="372" width="1" height="15" fill="rgb(222,131,27)"/><text x="830.00" y="382.50"></text></g><g><title>0x7ff490fb295a (?) (1 samples, 0.11%)</title><rect x="827" y="388" width="1" height="15" fill="rgb(242,27,47)"/><text x="830.00" y="398.50"></text></g><g><title>0x7ff490fb0112 (?) (1 samples, 0.11%)</title><rect x="827" y="404" width="1" height="15" fill="rgb(216,65,32)"/><text x="830.00" y="414.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="832" y="340" width="1" height="15" fill="rgb(241,90,37)"/><text x="835.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="833" y="340" width="7" height="15" fill="rgb(210,217,41)"/><text x="836.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="840" y="340" width="5" height="15" fill="rgb(234,200,18)"/><text x="843.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="840" y="356" width="5" height="15" fill="rgb(209,93,9)"/><text x="843.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="840" y="372" width="5" height="15" fill="rgb(205,72,10)"/><text x="843.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="842" y="388" width="3" height="15" fill="rgb(231,30,53)"/><text x="845.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="845" y="340" width="4" height="15" fill="rgb(228,48,42)"/><text x="848.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="849" y="340" width="6" height="15" fill="rgb(226,208,22)"/><text x="852.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="849" y="356" width="6" height="15" fill="rgb(234,169,7)"/><text x="852.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="849" y="372" width="6" height="15" fill="rgb(215,75,42)"/><text x="852.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="853" y="388" width="2" height="15" fill="rgb(249,160,5)"/><text x="856.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="875" y="356" width="2" height="15" fill="rgb(230,172,15)"/><text x="878.00" y="366.50"></text></g><g><title>0x7ff490ac4ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="908" y="388" width="2" height="15" fill="rgb(251,130,42)"/><text x="911.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 0.99%)</title><rect x="910" y="388" width="11" height="15" fill="rgb(233,147,8)"/><text x="913.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.99%)</title><rect x="910" y="404" width="11" height="15" fill="rgb(210,1,7)"/><text x="913.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 4.50%)</title><rect x="877" y="356" width="53" height="15" fill="rgb(214,32,52)"/><text x="880.00" y="366.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.41%)</title><rect x="902" y="372" width="28" height="15" fill="rgb(230,226,50)"/><text x="905.00" y="382.50">s..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (7 samples, 0.77%)</title><rect x="921" y="388" width="9" height="15" fill="rgb(246,92,30)"/><text x="924.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="930" y="356" width="7" height="15" fill="rgb(215,155,40)"/><text x="933.00" y="366.50"></text></g><g><title>0x7ff4d0e3e908 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="372" width="2" height="15" fill="rgb(212,102,32)"/><text x="941.00" y="382.50"></text></g><g><title>0x7ff4d0e3e92c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="940" y="372" width="1" height="15" fill="rgb(222,156,11)"/><text x="943.00" y="382.50"></text></g><g><title>0x7ff4d0e3e961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="941" y="372" width="1" height="15" fill="rgb(243,227,37)"/><text x="944.00" y="382.50"></text></g><g><title>0x7ff4d0e3e965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="942" y="372" width="1" height="15" fill="rgb(212,224,35)"/><text x="945.00" y="382.50"></text></g><g><title>0x7ff4d0e3e97c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="943" y="372" width="2" height="15" fill="rgb(246,206,25)"/><text x="946.00" y="382.50"></text></g><g><title>0x7ff4d0e3e991 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="945" y="372" width="2" height="15" fill="rgb(213,145,44)"/><text x="948.00" y="382.50"></text></g><g><title>0x7ff4d0e3ebd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="947" y="372" width="2" height="15" fill="rgb(252,198,43)"/><text x="950.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.55%)</title><rect x="949" y="372" width="6" height="15" fill="rgb(227,225,33)"/><text x="952.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.65%)</title><rect x="937" y="356" width="19" height="15" fill="rgb(215,147,46)"/><text x="940.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="955" y="372" width="1" height="15" fill="rgb(206,121,7)"/><text x="958.00" y="382.50"></text></g><g><title>0x7ff4d0e3e906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="955" y="388" width="1" height="15" fill="rgb(213,80,3)"/><text x="958.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 10.87%)</title><rect x="832" y="260" width="128" height="15" fill="rgb(207,126,33)"/><text x="835.00" y="270.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 10.87%)</title><rect x="832" y="276" width="128" height="15" fill="rgb(250,103,1)"/><text x="835.00" y="286.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 10.87%)</title><rect x="832" y="292" width="128" height="15" fill="rgb(239,199,15)"/><text x="835.00" y="302.50">onnxruntime::uti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 10.87%)</title><rect x="832" y="308" width="128" height="15" fill="rgb(212,162,30)"/><text x="835.00" y="318.50">onnxruntime::uti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 10.87%)</title><rect x="832" y="324" width="128" height="15" fill="rgb(243,221,4)"/><text x="835.00" y="334.50">onnxruntime::Seq..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (81 samples, 8.89%)</title><rect x="855" y="340" width="105" height="15" fill="rgb(208,32,28)"/><text x="858.00" y="350.50">onnxruntime:..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.33%)</title><rect x="956" y="356" width="4" height="15" fill="rgb(252,123,14)"/><text x="959.00" y="366.50"></text></g><g><title>0x7ff4d0e3e9d3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="960" y="292" width="2" height="15" fill="rgb(227,33,34)"/><text x="963.00" y="302.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:18) (104 samples, 11.42%)</title><rect x="828" y="100" width="135" height="15" fill="rgb(208,25,36)"/><text x="831.00" y="110.50">profile (bench_Ad..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (101 samples, 11.09%)</title><rect x="832" y="116" width="131" height="15" fill="rgb(247,10,14)"/><text x="835.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (101 samples, 11.09%)</title><rect x="832" y="132" width="131" height="15" fill="rgb(253,95,35)"/><text x="835.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (101 samples, 11.09%)</title><rect x="832" y="148" width="131" height="15" fill="rgb(246,217,0)"/><text x="835.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (101 samples, 11.09%)</title><rect x="832" y="164" width="131" height="15" fill="rgb(209,56,15)"/><text x="835.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (101 samples, 11.09%)</title><rect x="832" y="180" width="131" height="15" fill="rgb(234,229,17)"/><text x="835.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (101 samples, 11.09%)</title><rect x="832" y="196" width="131" height="15" fill="rgb(224,5,45)"/><text x="835.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 11.09%)</title><rect x="832" y="212" width="131" height="15" fill="rgb(234,5,1)"/><text x="835.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 11.09%)</title><rect x="832" y="228" width="131" height="15" fill="rgb(226,98,51)"/><text x="835.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 11.09%)</title><rect x="832" y="244" width="131" height="15" fill="rgb(226,164,5)"/><text x="835.00" y="254.50">onnxruntime::pyt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="960" y="260" width="3" height="15" fill="rgb(211,124,9)"/><text x="963.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="960" y="276" width="3" height="15" fill="rgb(237,213,54)"/><text x="963.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="962" y="292" width="1" height="15" fill="rgb(243,9,36)"/><text x="965.00" y="302.50"></text></g><g><title>0x7ff4d0e3ed02 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="962" y="308" width="1" height="15" fill="rgb(231,35,6)"/><text x="965.00" y="318.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="963" y="340" width="1" height="15" fill="rgb(242,72,25)"/><text x="966.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="963" y="356" width="1" height="15" fill="rgb(226,115,4)"/><text x="966.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="963" y="372" width="1" height="15" fill="rgb(210,226,18)"/><text x="966.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="964" y="340" width="1" height="15" fill="rgb(254,131,38)"/><text x="967.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="964" y="356" width="1" height="15" fill="rgb(221,55,24)"/><text x="967.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="964" y="372" width="1" height="15" fill="rgb(215,201,42)"/><text x="967.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="964" y="388" width="1" height="15" fill="rgb(215,183,5)"/><text x="967.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="964" y="404" width="1" height="15" fill="rgb(210,89,2)"/><text x="967.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="964" y="420" width="1" height="15" fill="rgb(206,55,6)"/><text x="967.00" y="430.50"></text></g><g><title>0x7ff4d0e40028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="964" y="436" width="1" height="15" fill="rgb(252,131,49)"/><text x="967.00" y="446.50"></text></g><g><title>0x7ff4d0e3dc20 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="964" y="452" width="1" height="15" fill="rgb(246,151,6)"/><text x="967.00" y="462.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="965" y="340" width="2" height="15" fill="rgb(245,8,38)"/><text x="968.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="967" y="340" width="1" height="15" fill="rgb(212,228,9)"/><text x="970.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="967" y="356" width="1" height="15" fill="rgb(247,112,5)"/><text x="970.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="967" y="372" width="1" height="15" fill="rgb(225,208,23)"/><text x="970.00" y="382.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.66%)</title><rect x="968" y="340" width="8" height="15" fill="rgb(221,43,45)"/><text x="971.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="356" width="2" height="15" fill="rgb(233,61,52)"/><text x="977.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="372" width="2" height="15" fill="rgb(205,69,17)"/><text x="977.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="388" width="2" height="15" fill="rgb(209,102,53)"/><text x="977.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="404" width="2" height="15" fill="rgb(215,69,31)"/><text x="977.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="420" width="2" height="15" fill="rgb(246,47,33)"/><text x="977.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="436" width="2" height="15" fill="rgb(251,146,45)"/><text x="977.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="452" width="2" height="15" fill="rgb(227,215,45)"/><text x="977.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="468" width="2" height="15" fill="rgb(209,143,12)"/><text x="977.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="974" y="484" width="2" height="15" fill="rgb(240,197,8)"/><text x="977.00" y="494.50"></text></g><g><title>0x7ff4c090b7a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="976" y="372" width="1" height="15" fill="rgb(240,32,33)"/><text x="979.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.10%)</title><rect x="977" y="372" width="13" height="15" fill="rgb(205,20,42)"/><text x="980.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="984" y="388" width="6" height="15" fill="rgb(240,71,45)"/><text x="987.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.32%)</title><rect x="976" y="340" width="15" height="15" fill="rgb(237,55,46)"/><text x="979.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.32%)</title><rect x="976" y="356" width="15" height="15" fill="rgb(211,40,49)"/><text x="979.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="990" y="372" width="1" height="15" fill="rgb(235,60,13)"/><text x="993.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="990" y="388" width="1" height="15" fill="rgb(238,198,8)"/><text x="993.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="990" y="404" width="1" height="15" fill="rgb(240,113,33)"/><text x="993.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="990" y="420" width="1" height="15" fill="rgb(224,121,21)"/><text x="993.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="990" y="436" width="1" height="15" fill="rgb(206,227,48)"/><text x="993.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="990" y="452" width="1" height="15" fill="rgb(244,53,47)"/><text x="993.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="990" y="468" width="1" height="15" fill="rgb(221,73,51)"/><text x="993.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="990" y="484" width="1" height="15" fill="rgb(219,178,7)"/><text x="993.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="990" y="500" width="1" height="15" fill="rgb(231,77,19)"/><text x="993.00" y="510.50"></text></g><g><title>0x7ff4d0e3fd27 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="990" y="516" width="1" height="15" fill="rgb(232,93,16)"/><text x="993.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="991" y="340" width="2" height="15" fill="rgb(226,89,30)"/><text x="994.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="991" y="356" width="2" height="15" fill="rgb(236,114,4)"/><text x="994.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="993" y="340" width="4" height="15" fill="rgb(229,60,5)"/><text x="996.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="356" width="3" height="15" fill="rgb(216,177,9)"/><text x="997.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="372" width="3" height="15" fill="rgb(233,106,41)"/><text x="997.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="388" width="3" height="15" fill="rgb(254,221,43)"/><text x="997.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="404" width="3" height="15" fill="rgb(250,215,30)"/><text x="997.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="420" width="3" height="15" fill="rgb(241,55,10)"/><text x="997.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="436" width="3" height="15" fill="rgb(249,220,18)"/><text x="997.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="452" width="3" height="15" fill="rgb(232,137,47)"/><text x="997.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="995" y="468" width="2" height="15" fill="rgb(230,99,6)"/><text x="998.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="995" y="484" width="2" height="15" fill="rgb(219,127,8)"/><text x="998.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="995" y="500" width="2" height="15" fill="rgb(234,10,45)"/><text x="998.00" y="510.50"></text></g><g><title>0x7ff4d0e4d6e3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="995" y="516" width="2" height="15" fill="rgb(230,214,54)"/><text x="998.00" y="526.50"></text></g><g><title>0x7ff4d0e4037d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="997" y="484" width="1" height="15" fill="rgb(249,226,29)"/><text x="1000.00" y="494.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="340" width="2" height="15" fill="rgb(205,128,50)"/><text x="1000.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="356" width="2" height="15" fill="rgb(220,99,5)"/><text x="1000.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="372" width="2" height="15" fill="rgb(207,188,0)"/><text x="1000.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="388" width="2" height="15" fill="rgb(222,209,32)"/><text x="1000.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="404" width="2" height="15" fill="rgb(242,217,9)"/><text x="1000.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="420" width="2" height="15" fill="rgb(224,88,32)"/><text x="1000.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="436" width="2" height="15" fill="rgb(216,3,4)"/><text x="1000.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="997" y="452" width="2" height="15" fill="rgb(224,166,1)"/><text x="1000.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="997" y="468" width="2" height="15" fill="rgb(212,52,42)"/><text x="1000.00" y="478.50"></text></g><g><title>0x7ff4d0e40510 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="998" y="484" width="1" height="15" fill="rgb(239,174,9)"/><text x="1001.00" y="494.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.76%)</title><rect x="999" y="340" width="21" height="15" fill="rgb(240,189,3)"/><text x="1002.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.76%)</title><rect x="999" y="356" width="21" height="15" fill="rgb(249,148,46)"/><text x="1002.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.76%)</title><rect x="999" y="372" width="21" height="15" fill="rgb(252,197,1)"/><text x="1002.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.88%)</title><rect x="1009" y="388" width="11" height="15" fill="rgb(244,95,7)"/><text x="1012.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="1046" y="356" width="4" height="15" fill="rgb(226,182,48)"/><text x="1049.00" y="366.50"></text></g><g><title>0x7ff490ac4ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1103" y="388" width="1" height="15" fill="rgb(222,95,30)"/><text x="1106.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.88%)</title><rect x="1104" y="388" width="10" height="15" fill="rgb(221,135,1)"/><text x="1107.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.88%)</title><rect x="1104" y="404" width="10" height="15" fill="rgb(218,202,6)"/><text x="1107.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 6.37%)</title><rect x="1050" y="356" width="75" height="15" fill="rgb(238,45,38)"/><text x="1053.00" y="366.50">onnxrunt..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 3.18%)</title><rect x="1087" y="372" width="38" height="15" fill="rgb(217,32,20)"/><text x="1090.00" y="382.50">std..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (8 samples, 0.88%)</title><rect x="1114" y="388" width="11" height="15" fill="rgb(223,125,19)"/><text x="1117.00" y="398.50"></text></g><g><title>0x7ff490ac3850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1134" y="372" width="1" height="15" fill="rgb(217,21,11)"/><text x="1137.00" y="382.50"></text></g><g><title>0x7ff4d0e5ed50 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1135" y="372" width="3" height="15" fill="rgb(235,162,26)"/><text x="1138.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.32%)</title><rect x="1125" y="356" width="15" height="15" fill="rgb(231,128,41)"/><text x="1128.00" y="366.50"></text></g><g><title>0x7ff4d0e5edbe (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1138" y="372" width="2" height="15" fill="rgb(254,88,38)"/><text x="1141.00" y="382.50"></text></g><g><title>0x7ff4d0e3e90e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1140" y="372" width="2" height="15" fill="rgb(245,146,7)"/><text x="1143.00" y="382.50"></text></g><g><title>0x7ff4d0e3e93b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1142" y="372" width="1" height="15" fill="rgb(230,7,16)"/><text x="1145.00" y="382.50"></text></g><g><title>0x7ff4d0e3e95e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1143" y="372" width="1" height="15" fill="rgb(254,38,14)"/><text x="1146.00" y="382.50"></text></g><g><title>0x7ff4d0e3e965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1144" y="372" width="1" height="15" fill="rgb(250,55,12)"/><text x="1147.00" y="382.50"></text></g><g><title>0x7ff4d0e3e97c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1145" y="372" width="2" height="15" fill="rgb(233,104,43)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7ff4d0e3e991 (libc-2.29.so) (3 samples, 0.33%)</title><rect x="1147" y="372" width="4" height="15" fill="rgb(230,96,26)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7ff4d0e3e998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1151" y="372" width="1" height="15" fill="rgb(212,71,52)"/><text x="1154.00" y="382.50"></text></g><g><title>0x7ff4d0e3ea4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1152" y="372" width="1" height="15" fill="rgb(230,93,24)"/><text x="1155.00" y="382.50"></text></g><g><title>0x7ff4d0e3ebe4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1153" y="372" width="2" height="15" fill="rgb(234,150,4)"/><text x="1156.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.55%)</title><rect x="1155" y="372" width="6" height="15" fill="rgb(213,8,27)"/><text x="1158.00" y="382.50"></text></g><g><title>0x7ff4d0e3e945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="388" width="1" height="15" fill="rgb(246,85,20)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7ff4d0e3e965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1167" y="388" width="2" height="15" fill="rgb(247,125,46)"/><text x="1170.00" y="398.50"></text></g><g><title>0x7ff4d0e3e998 (libc-2.29.so) (3 samples, 0.33%)</title><rect x="1169" y="388" width="4" height="15" fill="rgb(246,162,14)"/><text x="1172.00" y="398.50"></text></g><g><title>0x7ff4d0e3ebd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1173" y="388" width="1" height="15" fill="rgb(217,96,34)"/><text x="1176.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 2.96%)</title><rect x="1140" y="356" width="35" height="15" fill="rgb(214,220,33)"/><text x="1143.00" y="366.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.21%)</title><rect x="1161" y="372" width="14" height="15" fill="rgb(206,190,15)"/><text x="1164.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1174" y="388" width="1" height="15" fill="rgb(237,71,20)"/><text x="1177.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 18.88%)</title><rect x="963" y="260" width="223" height="15" fill="rgb(210,206,5)"/><text x="966.00" y="270.50">onnxruntime::InferenceSession..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 18.88%)</title><rect x="963" y="276" width="223" height="15" fill="rgb(231,152,30)"/><text x="966.00" y="286.50">onnxruntime::InferenceSession..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 18.88%)</title><rect x="963" y="292" width="223" height="15" fill="rgb(214,165,36)"/><text x="966.00" y="302.50">onnxruntime::utils::ExecuteGr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 18.88%)</title><rect x="963" y="308" width="223" height="15" fill="rgb(247,87,51)"/><text x="966.00" y="318.50">onnxruntime::utils::ExecuteGr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 18.88%)</title><rect x="963" y="324" width="223" height="15" fill="rgb(225,201,28)"/><text x="966.00" y="334.50">onnxruntime::SequentialExecut..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 14.05%)</title><rect x="1020" y="340" width="166" height="15" fill="rgb(236,68,43)"/><text x="1023.00" y="350.50">onnxruntime::ml::Tree..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (8 samples, 0.88%)</title><rect x="1175" y="356" width="11" height="15" fill="rgb(222,190,23)"/><text x="1178.00" y="366.50"></text></g><g><title>all (911 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,117,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:52) (283 samples, 31.06%)</title><rect x="823" y="52" width="367" height="15" fill="rgb(212,17,8)"/><text x="826.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_6..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:51) (283 samples, 31.06%)</title><rect x="823" y="68" width="367" height="15" fill="rgb(247,61,34)"/><text x="826.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:29) (279 samples, 30.63%)</title><rect x="828" y="84" width="362" height="15" fill="rgb(213,124,8)"/><text x="831.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py:23) (175 samples, 19.21%)</title><rect x="963" y="100" width="227" height="15" fill="rgb(229,210,16)"/><text x="966.00" y="110.50">profile (bench_AdaBoostClassif..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (175 samples, 19.21%)</title><rect x="963" y="116" width="227" height="15" fill="rgb(250,111,16)"/><text x="966.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (175 samples, 19.21%)</title><rect x="963" y="132" width="227" height="15" fill="rgb(225,75,5)"/><text x="966.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (175 samples, 19.21%)</title><rect x="963" y="148" width="227" height="15" fill="rgb(211,22,35)"/><text x="966.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (175 samples, 19.21%)</title><rect x="963" y="164" width="227" height="15" fill="rgb(242,93,0)"/><text x="966.00" y="174.50">_run_whole_runtime (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (175 samples, 19.21%)</title><rect x="963" y="180" width="227" height="15" fill="rgb(227,162,35)"/><text x="966.00" y="190.50">run (mlprodict/onnxrt/ops_whol..</text></g><g><title>run (onnxruntime/capi/session.py:136) (175 samples, 19.21%)</title><rect x="963" y="196" width="227" height="15" fill="rgb(228,168,21)"/><text x="966.00" y="206.50">run (onnxruntime/capi/session...</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.21%)</title><rect x="963" y="212" width="227" height="15" fill="rgb(218,147,12)"/><text x="966.00" y="222.50">pybind11::cpp_function::dispat..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.21%)</title><rect x="963" y="228" width="227" height="15" fill="rgb(246,75,21)"/><text x="966.00" y="238.50">void pybind11::cpp_function::i..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.21%)</title><rect x="963" y="244" width="227" height="15" fill="rgb(233,72,31)"/><text x="966.00" y="254.50">onnxruntime::python::addObject..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(240,113,10)"/><text x="1189.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(244,116,46)"/><text x="1190.00" y="286.50"></text></g></g></svg>