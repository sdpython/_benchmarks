<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>load_iris (sklearn/datasets/_base.py:383) (1 samples, 0.23%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(216,221,45)"/><text x="13.00" y="142.50"></text></g><g><title>dirname (posixpath.py:156) (1 samples, 0.23%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(236,107,18)"/><text x="13.00" y="158.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (2 samples, 0.46%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(237,95,19)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.23%)</title><rect x="12" y="132" width="3" height="15" fill="rgb(213,89,16)"/><text x="15.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:244) (1 samples, 0.23%)</title><rect x="12" y="148" width="3" height="15" fill="rgb(252,38,11)"/><text x="15.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.23%)</title><rect x="12" y="164" width="3" height="15" fill="rgb(207,191,31)"/><text x="15.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.23%)</title><rect x="12" y="180" width="3" height="15" fill="rgb(225,80,18)"/><text x="15.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.23%)</title><rect x="12" y="196" width="3" height="15" fill="rgb(217,37,37)"/><text x="15.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.23%)</title><rect x="12" y="212" width="3" height="15" fill="rgb(207,83,46)"/><text x="15.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.23%)</title><rect x="12" y="228" width="3" height="15" fill="rgb(235,109,17)"/><text x="15.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:118) (1 samples, 0.23%)</title><rect x="12" y="244" width="3" height="15" fill="rgb(212,136,5)"/><text x="15.00" y="254.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.23%)</title><rect x="12" y="260" width="3" height="15" fill="rgb(229,22,25)"/><text x="15.00" y="270.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (1 samples, 0.23%)</title><rect x="12" y="276" width="3" height="15" fill="rgb(214,194,43)"/><text x="15.00" y="286.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (3 samples, 0.69%)</title><rect x="10" y="100" width="8" height="15" fill="rgb(209,110,29)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.23%)</title><rect x="15" y="116" width="3" height="15" fill="rgb(209,223,52)"/><text x="18.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:89) (1 samples, 0.23%)</title><rect x="15" y="132" width="3" height="15" fill="rgb(233,192,32)"/><text x="18.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="15" y="148" width="3" height="15" fill="rgb(208,163,28)"/><text x="18.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="15" y="164" width="3" height="15" fill="rgb(232,206,14)"/><text x="18.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py:3506) (1 samples, 0.23%)</title><rect x="15" y="180" width="3" height="15" fill="rgb(253,107,35)"/><text x="18.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py:186) (1 samples, 0.23%)</title><rect x="15" y="196" width="3" height="15" fill="rgb(231,113,17)"/><text x="18.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="15" y="212" width="3" height="15" fill="rgb(239,91,44)"/><text x="18.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="15" y="228" width="3" height="15" fill="rgb(211,45,33)"/><text x="18.00" y="238.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.23%)</title><rect x="15" y="244" width="3" height="15" fill="rgb(205,47,32)"/><text x="18.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:31) (4 samples, 0.92%)</title><rect x="10" y="52" width="10" height="15" fill="rgb(227,204,11)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:11) (4 samples, 0.92%)</title><rect x="10" y="68" width="10" height="15" fill="rgb(227,114,48)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:39) (4 samples, 0.92%)</title><rect x="10" y="84" width="10" height="15" fill="rgb(232,120,3)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.23%)</title><rect x="18" y="100" width="2" height="15" fill="rgb(234,116,51)"/><text x="21.00" y="110.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.23%)</title><rect x="18" y="116" width="2" height="15" fill="rgb(217,174,46)"/><text x="21.00" y="126.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (1 samples, 0.23%)</title><rect x="20" y="180" width="3" height="15" fill="rgb(210,53,38)"/><text x="23.00" y="190.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (1 samples, 0.23%)</title><rect x="20" y="196" width="3" height="15" fill="rgb(218,18,0)"/><text x="23.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.23%)</title><rect x="20" y="212" width="3" height="15" fill="rgb(231,1,10)"/><text x="23.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.23%)</title><rect x="20" y="228" width="3" height="15" fill="rgb(245,104,5)"/><text x="23.00" y="238.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:18) (2 samples, 0.46%)</title><rect x="20" y="100" width="6" height="15" fill="rgb(215,22,31)"/><text x="23.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.46%)</title><rect x="20" y="116" width="6" height="15" fill="rgb(243,90,9)"/><text x="23.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.46%)</title><rect x="20" y="132" width="6" height="15" fill="rgb(217,202,32)"/><text x="23.00" y="142.50"></text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (2 samples, 0.46%)</title><rect x="20" y="148" width="6" height="15" fill="rgb(238,75,44)"/><text x="23.00" y="158.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (2 samples, 0.46%)</title><rect x="20" y="164" width="6" height="15" fill="rgb(235,93,4)"/><text x="23.00" y="174.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (1 samples, 0.23%)</title><rect x="23" y="180" width="3" height="15" fill="rgb(253,190,33)"/><text x="26.00" y="190.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (1 samples, 0.23%)</title><rect x="23" y="196" width="3" height="15" fill="rgb(227,141,16)"/><text x="26.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.23%)</title><rect x="23" y="212" width="3" height="15" fill="rgb(222,12,45)"/><text x="26.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.23%)</title><rect x="23" y="228" width="3" height="15" fill="rgb(251,202,44)"/><text x="26.00" y="238.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:22) (1 samples, 0.23%)</title><rect x="26" y="100" width="2" height="15" fill="rgb(245,201,22)"/><text x="29.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="37" y="164" width="2" height="15" fill="rgb(211,76,36)"/><text x="40.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="37" y="180" width="2" height="15" fill="rgb(221,229,6)"/><text x="40.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="37" y="196" width="2" height="15" fill="rgb(246,86,32)"/><text x="40.00" y="206.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (5 samples, 1.15%)</title><rect x="39" y="164" width="14" height="15" fill="rgb(250,215,7)"/><text x="42.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.92%)</title><rect x="42" y="180" width="11" height="15" fill="rgb(244,127,54)"/><text x="45.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.46%)</title><rect x="47" y="196" width="6" height="15" fill="rgb(226,70,41)"/><text x="50.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.23%)</title><rect x="50" y="212" width="3" height="15" fill="rgb(243,189,15)"/><text x="53.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.23%)</title><rect x="53" y="212" width="3" height="15" fill="rgb(230,138,29)"/><text x="56.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.23%)</title><rect x="53" y="228" width="3" height="15" fill="rgb(218,4,17)"/><text x="56.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.23%)</title><rect x="58" y="228" width="3" height="15" fill="rgb(233,159,7)"/><text x="61.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.23%)</title><rect x="61" y="228" width="3" height="15" fill="rgb(217,142,29)"/><text x="64.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 1.15%)</title><rect x="56" y="212" width="13" height="15" fill="rgb(210,38,24)"/><text x="59.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.46%)</title><rect x="64" y="228" width="5" height="15" fill="rgb(220,205,47)"/><text x="67.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.23%)</title><rect x="74" y="244" width="3" height="15" fill="rgb(212,148,5)"/><text x="77.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.46%)</title><rect x="77" y="244" width="6" height="15" fill="rgb(221,139,36)"/><text x="80.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.38%)</title><rect x="69" y="212" width="16" height="15" fill="rgb(246,34,1)"/><text x="72.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.15%)</title><rect x="72" y="228" width="13" height="15" fill="rgb(209,63,24)"/><text x="75.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.23%)</title><rect x="83" y="244" width="2" height="15" fill="rgb(224,208,9)"/><text x="86.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.23%)</title><rect x="85" y="212" width="3" height="15" fill="rgb(207,143,5)"/><text x="88.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.23%)</title><rect x="88" y="212" width="3" height="15" fill="rgb(235,101,50)"/><text x="91.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.23%)</title><rect x="88" y="228" width="3" height="15" fill="rgb(219,112,25)"/><text x="91.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.23%)</title><rect x="91" y="212" width="2" height="15" fill="rgb(230,222,32)"/><text x="94.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.23%)</title><rect x="93" y="212" width="3" height="15" fill="rgb(253,199,5)"/><text x="96.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.23%)</title><rect x="102" y="244" width="2" height="15" fill="rgb(225,71,19)"/><text x="105.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.92%)</title><rect x="96" y="228" width="11" height="15" fill="rgb(209,43,24)"/><text x="99.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.23%)</title><rect x="104" y="244" width="3" height="15" fill="rgb(229,204,0)"/><text x="107.00" y="254.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.23%)</title><rect x="104" y="260" width="3" height="15" fill="rgb(248,95,52)"/><text x="107.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.15%)</title><rect x="96" y="212" width="14" height="15" fill="rgb(249,154,20)"/><text x="99.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.23%)</title><rect x="107" y="228" width="3" height="15" fill="rgb(225,139,3)"/><text x="110.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.23%)</title><rect x="107" y="244" width="3" height="15" fill="rgb(220,119,23)"/><text x="110.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (22 samples, 5.05%)</title><rect x="53" y="180" width="59" height="15" fill="rgb(226,212,0)"/><text x="56.00" y="190.50">_check..</text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (22 samples, 5.05%)</title><rect x="53" y="196" width="59" height="15" fill="rgb(245,194,26)"/><text x="56.00" y="206.50">_check..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.23%)</title><rect x="110" y="212" width="2" height="15" fill="rgb(248,90,12)"/><text x="113.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.23%)</title><rect x="110" y="228" width="2" height="15" fill="rgb(238,155,46)"/><text x="113.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.23%)</title><rect x="110" y="244" width="2" height="15" fill="rgb(237,211,17)"/><text x="113.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="115" y="196" width="3" height="15" fill="rgb(229,38,48)"/><text x="118.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="115" y="212" width="3" height="15" fill="rgb(242,203,15)"/><text x="118.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.23%)</title><rect x="115" y="228" width="3" height="15" fill="rgb(211,184,12)"/><text x="118.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.23%)</title><rect x="123" y="212" width="3" height="15" fill="rgb(213,17,26)"/><text x="126.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.23%)</title><rect x="126" y="228" width="3" height="15" fill="rgb(223,179,34)"/><text x="129.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.46%)</title><rect x="126" y="212" width="5" height="15" fill="rgb(244,223,28)"/><text x="129.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.23%)</title><rect x="129" y="228" width="2" height="15" fill="rgb(234,124,30)"/><text x="132.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.23%)</title><rect x="131" y="212" width="3" height="15" fill="rgb(253,136,14)"/><text x="134.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.23%)</title><rect x="131" y="228" width="3" height="15" fill="rgb(206,177,23)"/><text x="134.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.23%)</title><rect x="131" y="244" width="3" height="15" fill="rgb(225,153,40)"/><text x="134.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.23%)</title><rect x="134" y="212" width="3" height="15" fill="rgb(237,108,36)"/><text x="137.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.23%)</title><rect x="134" y="228" width="3" height="15" fill="rgb(220,102,18)"/><text x="137.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.23%)</title><rect x="137" y="228" width="2" height="15" fill="rgb(220,4,48)"/><text x="140.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.46%)</title><rect x="137" y="212" width="5" height="15" fill="rgb(239,152,37)"/><text x="140.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.23%)</title><rect x="139" y="228" width="3" height="15" fill="rgb(214,158,4)"/><text x="142.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.23%)</title><rect x="150" y="244" width="3" height="15" fill="rgb(232,186,12)"/><text x="153.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 1.38%)</title><rect x="142" y="212" width="16" height="15" fill="rgb(210,108,3)"/><text x="145.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.15%)</title><rect x="145" y="228" width="13" height="15" fill="rgb(214,26,53)"/><text x="148.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.46%)</title><rect x="153" y="244" width="5" height="15" fill="rgb(234,26,44)"/><text x="156.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.23%)</title><rect x="158" y="228" width="3" height="15" fill="rgb(224,88,43)"/><text x="161.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.92%)</title><rect x="158" y="212" width="11" height="15" fill="rgb(243,91,46)"/><text x="161.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.69%)</title><rect x="161" y="228" width="8" height="15" fill="rgb(212,103,3)"/><text x="164.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.69%)</title><rect x="161" y="244" width="8" height="15" fill="rgb(216,82,23)"/><text x="164.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.23%)</title><rect x="166" y="260" width="3" height="15" fill="rgb(214,116,46)"/><text x="169.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1614) (1 samples, 0.23%)</title><rect x="169" y="228" width="3" height="15" fill="rgb(242,110,2)"/><text x="172.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:556) (1 samples, 0.23%)</title><rect x="172" y="244" width="3" height="15" fill="rgb(230,34,16)"/><text x="175.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.23%)</title><rect x="172" y="260" width="3" height="15" fill="rgb(244,154,36)"/><text x="175.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.23%)</title><rect x="172" y="276" width="3" height="15" fill="rgb(216,82,33)"/><text x="175.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.23%)</title><rect x="172" y="292" width="3" height="15" fill="rgb(237,177,41)"/><text x="175.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.23%)</title><rect x="172" y="308" width="3" height="15" fill="rgb(228,91,10)"/><text x="175.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.23%)</title><rect x="172" y="324" width="3" height="15" fill="rgb(236,21,19)"/><text x="175.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.23%)</title><rect x="172" y="340" width="3" height="15" fill="rgb(211,228,20)"/><text x="175.00" y="350.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.23%)</title><rect x="172" y="356" width="3" height="15" fill="rgb(241,90,36)"/><text x="175.00" y="366.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (22 samples, 5.05%)</title><rect x="118" y="196" width="59" height="15" fill="rgb(233,102,49)"/><text x="121.00" y="206.50">binari..</text></g><g><title>check_array (sklearn/utils/validation.py:586) (3 samples, 0.69%)</title><rect x="169" y="212" width="8" height="15" fill="rgb(208,122,53)"/><text x="172.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (2 samples, 0.46%)</title><rect x="172" y="228" width="5" height="15" fill="rgb(232,40,1)"/><text x="175.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (1 samples, 0.23%)</title><rect x="175" y="244" width="2" height="15" fill="rgb(206,149,35)"/><text x="178.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.23%)</title><rect x="175" y="260" width="2" height="15" fill="rgb(233,186,31)"/><text x="178.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.23%)</title><rect x="175" y="276" width="2" height="15" fill="rgb(243,17,11)"/><text x="178.00" y="286.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1863) (1 samples, 0.23%)</title><rect x="177" y="196" width="3" height="15" fill="rgb(210,112,34)"/><text x="180.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.23%)</title><rect x="180" y="260" width="3" height="15" fill="rgb(218,148,30)"/><text x="183.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.23%)</title><rect x="183" y="260" width="2" height="15" fill="rgb(235,107,20)"/><text x="186.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.69%)</title><rect x="180" y="244" width="8" height="15" fill="rgb(208,37,44)"/><text x="183.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.23%)</title><rect x="185" y="260" width="3" height="15" fill="rgb(219,19,11)"/><text x="188.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.23%)</title><rect x="185" y="276" width="3" height="15" fill="rgb(233,178,25)"/><text x="188.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.23%)</title><rect x="185" y="292" width="3" height="15" fill="rgb(237,170,51)"/><text x="188.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.23%)</title><rect x="188" y="244" width="3" height="15" fill="rgb(209,30,37)"/><text x="191.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.23%)</title><rect x="188" y="260" width="3" height="15" fill="rgb(251,122,21)"/><text x="191.00" y="270.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (6 samples, 1.38%)</title><rect x="180" y="196" width="16" height="15" fill="rgb(250,176,31)"/><text x="183.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (6 samples, 1.38%)</title><rect x="180" y="212" width="16" height="15" fill="rgb(244,192,2)"/><text x="183.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.38%)</title><rect x="180" y="228" width="16" height="15" fill="rgb(243,142,25)"/><text x="183.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.46%)</title><rect x="191" y="244" width="5" height="15" fill="rgb(236,68,39)"/><text x="194.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.23%)</title><rect x="194" y="260" width="2" height="15" fill="rgb(213,54,17)"/><text x="197.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="194" y="276" width="2" height="15" fill="rgb(244,6,33)"/><text x="197.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="194" y="292" width="2" height="15" fill="rgb(222,148,8)"/><text x="197.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="194" y="308" width="2" height="15" fill="rgb(244,99,8)"/><text x="197.00" y="318.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1874) (1 samples, 0.23%)</title><rect x="196" y="196" width="3" height="15" fill="rgb(244,43,44)"/><text x="199.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="196" y="212" width="3" height="15" fill="rgb(231,5,23)"/><text x="199.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="196" y="228" width="3" height="15" fill="rgb(223,67,18)"/><text x="199.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.23%)</title><rect x="196" y="244" width="3" height="15" fill="rgb(211,40,37)"/><text x="199.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1240) (1 samples, 0.23%)</title><rect x="199" y="228" width="3" height="15" fill="rgb(226,85,26)"/><text x="202.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.23%)</title><rect x="199" y="244" width="3" height="15" fill="rgb(208,226,47)"/><text x="202.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.23%)</title><rect x="199" y="260" width="3" height="15" fill="rgb(248,144,45)"/><text x="202.00" y="270.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1246) (1 samples, 0.23%)</title><rect x="202" y="228" width="2" height="15" fill="rgb(229,115,52)"/><text x="205.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.23%)</title><rect x="202" y="244" width="2" height="15" fill="rgb(211,30,27)"/><text x="205.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1272) (1 samples, 0.23%)</title><rect x="204" y="228" width="3" height="15" fill="rgb(237,89,13)"/><text x="207.00" y="238.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.23%)</title><rect x="204" y="244" width="3" height="15" fill="rgb(210,147,11)"/><text x="207.00" y="254.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (58 samples, 13.30%)</title><rect x="53" y="164" width="157" height="15" fill="rgb(211,210,2)"/><text x="56.00" y="174.50">predict_log_proba (s..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (36 samples, 8.26%)</title><rect x="112" y="180" width="98" height="15" fill="rgb(250,129,16)"/><text x="115.00" y="190.50">_check_X (s..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (4 samples, 0.92%)</title><rect x="199" y="196" width="11" height="15" fill="rgb(240,212,26)"/><text x="202.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (4 samples, 0.92%)</title><rect x="199" y="212" width="11" height="15" fill="rgb(213,134,3)"/><text x="202.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1305) (1 samples, 0.23%)</title><rect x="207" y="228" width="3" height="15" fill="rgb(222,229,13)"/><text x="210.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:711) (1 samples, 0.23%)</title><rect x="207" y="244" width="3" height="15" fill="rgb(219,178,14)"/><text x="210.00" y="254.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1014) (1 samples, 0.23%)</title><rect x="212" y="180" width="3" height="15" fill="rgb(217,21,38)"/><text x="215.00" y="190.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:61) (1 samples, 0.23%)</title><rect x="215" y="260" width="3" height="15" fill="rgb(246,15,53)"/><text x="218.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="215" y="276" width="3" height="15" fill="rgb(246,59,34)"/><text x="218.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="215" y="292" width="3" height="15" fill="rgb(207,112,38)"/><text x="218.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="215" y="308" width="3" height="15" fill="rgb(215,91,5)"/><text x="218.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.23%)</title><rect x="218" y="292" width="3" height="15" fill="rgb(242,199,5)"/><text x="221.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.23%)</title><rect x="218" y="308" width="3" height="15" fill="rgb(223,159,2)"/><text x="221.00" y="318.50"></text></g><g><title>_aligned_cast_long_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.23%)</title><rect x="218" y="324" width="3" height="15" fill="rgb(231,225,50)"/><text x="221.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.69%)</title><rect x="215" y="212" width="8" height="15" fill="rgb(225,134,21)"/><text x="218.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (3 samples, 0.69%)</title><rect x="215" y="228" width="8" height="15" fill="rgb(224,9,48)"/><text x="218.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (3 samples, 0.69%)</title><rect x="215" y="244" width="8" height="15" fill="rgb(214,59,8)"/><text x="218.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (2 samples, 0.46%)</title><rect x="218" y="260" width="5" height="15" fill="rgb(217,218,7)"/><text x="221.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (2 samples, 0.46%)</title><rect x="218" y="276" width="5" height="15" fill="rgb(217,70,4)"/><text x="221.00" y="286.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:309) (1 samples, 0.23%)</title><rect x="221" y="292" width="2" height="15" fill="rgb(236,25,31)"/><text x="224.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.92%)</title><rect x="215" y="196" width="11" height="15" fill="rgb(233,68,54)"/><text x="218.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.23%)</title><rect x="223" y="212" width="3" height="15" fill="rgb(241,81,31)"/><text x="226.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="223" y="228" width="3" height="15" fill="rgb(224,5,9)"/><text x="226.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="223" y="244" width="3" height="15" fill="rgb(212,27,29)"/><text x="226.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.23%)</title><rect x="223" y="260" width="3" height="15" fill="rgb(222,196,0)"/><text x="226.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.23%)</title><rect x="226" y="196" width="3" height="15" fill="rgb(241,116,38)"/><text x="229.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1631) (1 samples, 0.23%)</title><rect x="229" y="228" width="2" height="15" fill="rgb(233,29,41)"/><text x="232.00" y="238.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1018) (7 samples, 1.61%)</title><rect x="215" y="180" width="19" height="15" fill="rgb(223,48,19)"/><text x="218.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.46%)</title><rect x="229" y="196" width="5" height="15" fill="rgb(220,204,4)"/><text x="232.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.46%)</title><rect x="229" y="212" width="5" height="15" fill="rgb(235,26,2)"/><text x="232.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.23%)</title><rect x="231" y="228" width="3" height="15" fill="rgb(212,147,44)"/><text x="234.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.23%)</title><rect x="231" y="244" width="3" height="15" fill="rgb(241,192,5)"/><text x="234.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:186) (1 samples, 0.23%)</title><rect x="231" y="260" width="3" height="15" fill="rgb(239,107,13)"/><text x="234.00" y="270.50"></text></g><g><title>PyArray_Transpose (shape.c:727) (1 samples, 0.23%)</title><rect x="234" y="196" width="3" height="15" fill="rgb(244,181,5)"/><text x="237.00" y="206.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.23%)</title><rect x="237" y="196" width="3" height="15" fill="rgb(219,98,44)"/><text x="240.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="237" y="212" width="3" height="15" fill="rgb(249,220,26)"/><text x="240.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="237" y="228" width="3" height="15" fill="rgb(216,60,35)"/><text x="240.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.23%)</title><rect x="237" y="244" width="3" height="15" fill="rgb(240,86,32)"/><text x="240.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.23%)</title><rect x="237" y="260" width="3" height="15" fill="rgb(225,130,44)"/><text x="240.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.23%)</title><rect x="237" y="276" width="3" height="15" fill="rgb(248,151,1)"/><text x="240.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.23%)</title><rect x="237" y="292" width="3" height="15" fill="rgb(245,22,11)"/><text x="240.00" y="302.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.23%)</title><rect x="237" y="308" width="3" height="15" fill="rgb(240,87,24)"/><text x="240.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.23%)</title><rect x="237" y="324" width="3" height="15" fill="rgb(248,65,29)"/><text x="240.00" y="334.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.23%)</title><rect x="240" y="196" width="2" height="15" fill="rgb(218,91,25)"/><text x="243.00" y="206.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.23%)</title><rect x="245" y="244" width="3" height="15" fill="rgb(216,41,31)"/><text x="248.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1081) (1 samples, 0.23%)</title><rect x="245" y="260" width="3" height="15" fill="rgb(235,52,43)"/><text x="248.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.23%)</title><rect x="248" y="260" width="2" height="15" fill="rgb(221,218,20)"/><text x="251.00" y="270.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:829) (1 samples, 0.23%)</title><rect x="248" y="276" width="2" height="15" fill="rgb(251,26,35)"/><text x="251.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="250" y="260" width="3" height="15" fill="rgb(239,220,45)"/><text x="253.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1447) (1 samples, 0.23%)</title><rect x="250" y="276" width="3" height="15" fill="rgb(215,30,7)"/><text x="253.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.23%)</title><rect x="253" y="276" width="3" height="15" fill="rgb(233,127,17)"/><text x="256.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.23%)</title><rect x="253" y="292" width="3" height="15" fill="rgb(225,20,50)"/><text x="256.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.23%)</title><rect x="253" y="308" width="3" height="15" fill="rgb(208,54,9)"/><text x="256.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.23%)</title><rect x="253" y="324" width="3" height="15" fill="rgb(226,96,39)"/><text x="256.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.23%)</title><rect x="256" y="276" width="2" height="15" fill="rgb(254,119,47)"/><text x="259.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1961) (1 samples, 0.23%)</title><rect x="256" y="292" width="2" height="15" fill="rgb(233,111,35)"/><text x="259.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.23%)</title><rect x="258" y="276" width="3" height="15" fill="rgb(240,50,41)"/><text x="261.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.23%)</title><rect x="258" y="292" width="3" height="15" fill="rgb(252,155,47)"/><text x="261.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.23%)</title><rect x="258" y="308" width="3" height="15" fill="rgb(240,73,10)"/><text x="261.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.23%)</title><rect x="258" y="324" width="3" height="15" fill="rgb(216,148,16)"/><text x="261.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:117) (1 samples, 0.23%)</title><rect x="258" y="340" width="3" height="15" fill="rgb(231,124,11)"/><text x="261.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (6 samples, 1.38%)</title><rect x="248" y="244" width="16" height="15" fill="rgb(231,188,24)"/><text x="251.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 0.92%)</title><rect x="253" y="260" width="11" height="15" fill="rgb(235,150,20)"/><text x="256.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.23%)</title><rect x="261" y="276" width="3" height="15" fill="rgb(225,112,7)"/><text x="264.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1953) (1 samples, 0.23%)</title><rect x="261" y="292" width="3" height="15" fill="rgb(210,104,21)"/><text x="264.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.23%)</title><rect x="264" y="244" width="3" height="15" fill="rgb(220,41,34)"/><text x="267.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:37) (1 samples, 0.23%)</title><rect x="264" y="260" width="3" height="15" fill="rgb(242,227,47)"/><text x="267.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (10 samples, 2.29%)</title><rect x="242" y="196" width="27" height="15" fill="rgb(228,26,45)"/><text x="245.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.06%)</title><rect x="245" y="212" width="24" height="15" fill="rgb(224,84,29)"/><text x="248.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (9 samples, 2.06%)</title><rect x="245" y="228" width="24" height="15" fill="rgb(248,134,10)"/><text x="248.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.23%)</title><rect x="267" y="244" width="2" height="15" fill="rgb(238,4,21)"/><text x="270.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:434) (1 samples, 0.23%)</title><rect x="267" y="260" width="2" height="15" fill="rgb(251,198,44)"/><text x="270.00" y="270.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (14 samples, 3.21%)</title><rect x="234" y="180" width="38" height="15" fill="rgb(243,43,44)"/><text x="237.00" y="190.50">_jo..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.23%)</title><rect x="269" y="196" width="3" height="15" fill="rgb(214,79,17)"/><text x="272.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.23%)</title><rect x="269" y="212" width="3" height="15" fill="rgb(214,186,52)"/><text x="272.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.46%)</title><rect x="277" y="324" width="6" height="15" fill="rgb(219,213,28)"/><text x="280.00" y="334.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="280" y="340" width="3" height="15" fill="rgb(212,12,20)"/><text x="283.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (5 samples, 1.15%)</title><rect x="277" y="244" width="14" height="15" fill="rgb(225,17,49)"/><text x="280.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (5 samples, 1.15%)</title><rect x="277" y="260" width="14" height="15" fill="rgb(225,8,52)"/><text x="280.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (5 samples, 1.15%)</title><rect x="277" y="276" width="14" height="15" fill="rgb(208,146,14)"/><text x="280.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (5 samples, 1.15%)</title><rect x="277" y="292" width="14" height="15" fill="rgb(205,207,53)"/><text x="280.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (5 samples, 1.15%)</title><rect x="277" y="308" width="14" height="15" fill="rgb(223,62,49)"/><text x="280.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.69%)</title><rect x="283" y="324" width="8" height="15" fill="rgb(214,134,53)"/><text x="286.00" y="334.50"></text></g><g><title>0x7f7a56f5ae54 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="288" y="340" width="3" height="15" fill="rgb(248,35,11)"/><text x="291.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.23%)</title><rect x="291" y="276" width="3" height="15" fill="rgb(242,69,45)"/><text x="294.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.23%)</title><rect x="291" y="292" width="3" height="15" fill="rgb(246,83,27)"/><text x="294.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.23%)</title><rect x="294" y="292" width="2" height="15" fill="rgb(229,215,1)"/><text x="297.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.23%)</title><rect x="294" y="308" width="2" height="15" fill="rgb(253,164,12)"/><text x="297.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.23%)</title><rect x="294" y="324" width="2" height="15" fill="rgb(249,102,5)"/><text x="297.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.23%)</title><rect x="294" y="340" width="2" height="15" fill="rgb(252,153,44)"/><text x="297.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.23%)</title><rect x="294" y="356" width="2" height="15" fill="rgb(253,75,0)"/><text x="297.00" y="366.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.23%)</title><rect x="294" y="372" width="2" height="15" fill="rgb(243,118,8)"/><text x="297.00" y="382.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:350) (1 samples, 0.23%)</title><rect x="294" y="388" width="2" height="15" fill="rgb(209,166,37)"/><text x="297.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.23%)</title><rect x="296" y="292" width="3" height="15" fill="rgb(211,32,24)"/><text x="299.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.23%)</title><rect x="296" y="308" width="3" height="15" fill="rgb(208,223,46)"/><text x="299.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.23%)</title><rect x="296" y="324" width="3" height="15" fill="rgb(227,31,34)"/><text x="299.00" y="334.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (34 samples, 7.80%)</title><rect x="210" y="164" width="92" height="15" fill="rgb(248,66,20)"/><text x="213.00" y="174.50">predict_lo..</text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (11 samples, 2.52%)</title><rect x="272" y="180" width="30" height="15" fill="rgb(206,167,37)"/><text x="275.00" y="190.50">_j..</text></g><g><title>array_sum (methods.c:2215) (10 samples, 2.29%)</title><rect x="275" y="196" width="27" height="15" fill="rgb(226,145,8)"/><text x="278.00" y="206.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 2.29%)</title><rect x="275" y="212" width="27" height="15" fill="rgb(205,49,26)"/><text x="278.00" y="222.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 2.29%)</title><rect x="275" y="228" width="27" height="15" fill="rgb(226,136,2)"/><text x="278.00" y="238.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.92%)</title><rect x="291" y="244" width="11" height="15" fill="rgb(212,28,31)"/><text x="294.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.92%)</title><rect x="291" y="260" width="11" height="15" fill="rgb(208,161,3)"/><text x="294.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.69%)</title><rect x="294" y="276" width="8" height="15" fill="rgb(235,9,8)"/><text x="297.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.23%)</title><rect x="299" y="292" width="3" height="15" fill="rgb(218,185,52)"/><text x="302.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.23%)</title><rect x="299" y="308" width="3" height="15" fill="rgb(251,79,3)"/><text x="302.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:248) (1 samples, 0.23%)</title><rect x="299" y="324" width="3" height="15" fill="rgb(248,153,37)"/><text x="302.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.23%)</title><rect x="313" y="244" width="2" height="15" fill="rgb(210,111,47)"/><text x="316.00" y="254.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.23%)</title><rect x="318" y="340" width="3" height="15" fill="rgb(247,97,45)"/><text x="321.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.46%)</title><rect x="318" y="292" width="5" height="15" fill="rgb(225,183,6)"/><text x="321.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.46%)</title><rect x="318" y="308" width="5" height="15" fill="rgb(237,207,44)"/><text x="321.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.46%)</title><rect x="318" y="324" width="5" height="15" fill="rgb(205,123,53)"/><text x="321.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.23%)</title><rect x="321" y="340" width="2" height="15" fill="rgb(219,138,53)"/><text x="324.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.23%)</title><rect x="321" y="356" width="2" height="15" fill="rgb(230,84,44)"/><text x="324.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.23%)</title><rect x="323" y="340" width="3" height="15" fill="rgb(240,152,34)"/><text x="326.00" y="350.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.23%)</title><rect x="323" y="356" width="3" height="15" fill="rgb(241,81,43)"/><text x="326.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.46%)</title><rect x="323" y="308" width="6" height="15" fill="rgb(235,27,28)"/><text x="326.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.46%)</title><rect x="323" y="324" width="6" height="15" fill="rgb(245,48,25)"/><text x="326.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.23%)</title><rect x="326" y="340" width="3" height="15" fill="rgb(216,177,48)"/><text x="329.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="326" y="356" width="3" height="15" fill="rgb(216,77,46)"/><text x="329.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="326" y="372" width="3" height="15" fill="rgb(232,105,38)"/><text x="329.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="326" y="388" width="3" height="15" fill="rgb(224,217,2)"/><text x="329.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.23%)</title><rect x="329" y="324" width="3" height="15" fill="rgb(238,147,39)"/><text x="332.00" y="334.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (11 samples, 2.52%)</title><rect x="305" y="180" width="29" height="15" fill="rgb(215,138,27)"/><text x="308.00" y="190.50">lo..</text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (10 samples, 2.29%)</title><rect x="307" y="196" width="27" height="15" fill="rgb(210,221,11)"/><text x="310.00" y="206.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.06%)</title><rect x="310" y="212" width="24" height="15" fill="rgb(245,203,41)"/><text x="313.00" y="222.50">a..</text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (8 samples, 1.83%)</title><rect x="313" y="228" width="21" height="15" fill="rgb(213,49,21)"/><text x="316.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (7 samples, 1.61%)</title><rect x="315" y="244" width="19" height="15" fill="rgb(219,143,1)"/><text x="318.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.38%)</title><rect x="318" y="260" width="16" height="15" fill="rgb(250,107,49)"/><text x="321.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.38%)</title><rect x="318" y="276" width="16" height="15" fill="rgb(237,101,15)"/><text x="321.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.92%)</title><rect x="323" y="292" width="11" height="15" fill="rgb(236,131,27)"/><text x="326.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.46%)</title><rect x="329" y="308" width="5" height="15" fill="rgb(214,220,30)"/><text x="332.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.23%)</title><rect x="332" y="324" width="2" height="15" fill="rgb(216,3,39)"/><text x="335.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2457) (1 samples, 0.23%)</title><rect x="332" y="340" width="2" height="15" fill="rgb(223,66,7)"/><text x="335.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1801) (1 samples, 0.23%)</title><rect x="337" y="196" width="3" height="15" fill="rgb(227,101,53)"/><text x="340.00" y="206.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.23%)</title><rect x="337" y="212" width="3" height="15" fill="rgb(244,191,24)"/><text x="340.00" y="222.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.23%)</title><rect x="340" y="196" width="2" height="15" fill="rgb(212,159,4)"/><text x="343.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.23%)</title><rect x="340" y="212" width="2" height="15" fill="rgb(236,19,16)"/><text x="343.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (4 samples, 0.92%)</title><rect x="334" y="180" width="11" height="15" fill="rgb(231,190,27)"/><text x="337.00" y="190.50"></text></g><g><title>array_assign_subscript (mapping.c:2065) (1 samples, 0.23%)</title><rect x="342" y="196" width="3" height="15" fill="rgb(250,181,36)"/><text x="345.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="342" y="212" width="3" height="15" fill="rgb(235,186,14)"/><text x="345.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="342" y="228" width="3" height="15" fill="rgb(211,146,38)"/><text x="345.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.23%)</title><rect x="342" y="244" width="3" height="15" fill="rgb(206,158,11)"/><text x="345.00" y="254.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:108) (1 samples, 0.23%)</title><rect x="345" y="180" width="3" height="15" fill="rgb(213,44,11)"/><text x="348.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.23%)</title><rect x="351" y="196" width="2" height="15" fill="rgb(227,73,31)"/><text x="354.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="353" y="228" width="3" height="15" fill="rgb(219,61,4)"/><text x="356.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.23%)</title><rect x="353" y="244" width="3" height="15" fill="rgb(244,86,27)"/><text x="356.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.23%)</title><rect x="353" y="260" width="3" height="15" fill="rgb(231,112,21)"/><text x="356.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="353" y="276" width="3" height="15" fill="rgb(254,6,42)"/><text x="356.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1472) (1 samples, 0.23%)</title><rect x="353" y="292" width="3" height="15" fill="rgb(226,53,42)"/><text x="356.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (4 samples, 0.92%)</title><rect x="348" y="180" width="11" height="15" fill="rgb(223,128,13)"/><text x="351.00" y="190.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.46%)</title><rect x="353" y="196" width="6" height="15" fill="rgb(210,170,28)"/><text x="356.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.46%)</title><rect x="353" y="212" width="6" height="15" fill="rgb(215,104,42)"/><text x="356.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.23%)</title><rect x="356" y="228" width="3" height="15" fill="rgb(228,160,39)"/><text x="359.00" y="238.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4807) (1 samples, 0.23%)</title><rect x="361" y="228" width="3" height="15" fill="rgb(236,179,50)"/><text x="364.00" y="238.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (2 samples, 0.46%)</title><rect x="361" y="212" width="6" height="15" fill="rgb(241,50,26)"/><text x="364.00" y="222.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4810) (1 samples, 0.23%)</title><rect x="364" y="228" width="3" height="15" fill="rgb(217,176,49)"/><text x="367.00" y="238.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:176) (1 samples, 0.23%)</title><rect x="367" y="228" width="2" height="15" fill="rgb(221,111,21)"/><text x="370.00" y="238.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (2 samples, 0.46%)</title><rect x="367" y="212" width="5" height="15" fill="rgb(224,1,35)"/><text x="370.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:183) (1 samples, 0.23%)</title><rect x="369" y="228" width="3" height="15" fill="rgb(254,138,20)"/><text x="372.00" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (5 samples, 1.15%)</title><rect x="361" y="196" width="14" height="15" fill="rgb(229,149,6)"/><text x="364.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.23%)</title><rect x="372" y="212" width="3" height="15" fill="rgb(237,69,48)"/><text x="375.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (7 samples, 1.61%)</title><rect x="359" y="180" width="19" height="15" fill="rgb(239,7,52)"/><text x="362.00" y="190.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py:438) (1 samples, 0.23%)</title><rect x="375" y="196" width="3" height="15" fill="rgb(215,96,17)"/><text x="378.00" y="206.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.46%)</title><rect x="378" y="244" width="5" height="15" fill="rgb(210,214,48)"/><text x="381.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.23%)</title><rect x="380" y="260" width="3" height="15" fill="rgb(205,200,29)"/><text x="383.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.23%)</title><rect x="383" y="260" width="3" height="15" fill="rgb(221,103,29)"/><text x="386.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="383" y="276" width="3" height="15" fill="rgb(217,203,6)"/><text x="386.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.23%)</title><rect x="383" y="292" width="3" height="15" fill="rgb(222,7,32)"/><text x="386.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.23%)</title><rect x="383" y="308" width="3" height="15" fill="rgb(240,4,40)"/><text x="386.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="383" y="324" width="3" height="15" fill="rgb(240,213,50)"/><text x="386.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.23%)</title><rect x="386" y="292" width="2" height="15" fill="rgb(206,19,14)"/><text x="389.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.23%)</title><rect x="386" y="308" width="2" height="15" fill="rgb(241,190,47)"/><text x="389.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.23%)</title><rect x="386" y="324" width="2" height="15" fill="rgb(218,24,18)"/><text x="389.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.23%)</title><rect x="386" y="340" width="2" height="15" fill="rgb(208,107,40)"/><text x="389.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.23%)</title><rect x="388" y="340" width="3" height="15" fill="rgb(250,199,46)"/><text x="391.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="388" y="356" width="3" height="15" fill="rgb(240,136,10)"/><text x="391.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.46%)</title><rect x="388" y="308" width="6" height="15" fill="rgb(225,75,6)"/><text x="391.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.46%)</title><rect x="388" y="324" width="6" height="15" fill="rgb(226,103,26)"/><text x="391.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.23%)</title><rect x="391" y="340" width="3" height="15" fill="rgb(227,44,12)"/><text x="394.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="391" y="356" width="3" height="15" fill="rgb(215,71,43)"/><text x="394.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.23%)</title><rect x="391" y="372" width="3" height="15" fill="rgb(227,15,15)"/><text x="394.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:89) (1 samples, 0.23%)</title><rect x="391" y="388" width="3" height="15" fill="rgb(234,211,18)"/><text x="394.00" y="398.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (7 samples, 1.61%)</title><rect x="378" y="180" width="19" height="15" fill="rgb(252,52,40)"/><text x="381.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (7 samples, 1.61%)</title><rect x="378" y="196" width="19" height="15" fill="rgb(226,81,32)"/><text x="381.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.61%)</title><rect x="378" y="212" width="19" height="15" fill="rgb(230,150,45)"/><text x="381.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (7 samples, 1.61%)</title><rect x="378" y="228" width="19" height="15" fill="rgb(211,34,2)"/><text x="381.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 1.15%)</title><rect x="383" y="244" width="14" height="15" fill="rgb(240,193,35)"/><text x="386.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.92%)</title><rect x="386" y="260" width="11" height="15" fill="rgb(232,100,6)"/><text x="389.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.92%)</title><rect x="386" y="276" width="11" height="15" fill="rgb(254,47,30)"/><text x="389.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.69%)</title><rect x="388" y="292" width="9" height="15" fill="rgb(230,60,50)"/><text x="391.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.23%)</title><rect x="394" y="308" width="3" height="15" fill="rgb(218,211,22)"/><text x="397.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.23%)</title><rect x="394" y="324" width="3" height="15" fill="rgb(220,117,42)"/><text x="397.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.23%)</title><rect x="394" y="340" width="3" height="15" fill="rgb(210,194,42)"/><text x="397.00" y="350.50"></text></g><g><title>0x7f7a56f65120 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="407" y="196" width="3" height="15" fill="rgb(248,226,21)"/><text x="410.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.23%)</title><rect x="410" y="212" width="3" height="15" fill="rgb(241,200,30)"/><text x="413.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:176) (1 samples, 0.23%)</title><rect x="413" y="228" width="2" height="15" fill="rgb(250,20,45)"/><text x="416.00" y="238.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:180) (1 samples, 0.23%)</title><rect x="415" y="228" width="3" height="15" fill="rgb(238,214,4)"/><text x="418.00" y="238.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:182) (1 samples, 0.23%)</title><rect x="418" y="228" width="3" height="15" fill="rgb(231,35,7)"/><text x="421.00" y="238.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (5 samples, 1.15%)</title><rect x="413" y="212" width="13" height="15" fill="rgb(221,39,44)"/><text x="416.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:186) (2 samples, 0.46%)</title><rect x="421" y="228" width="5" height="15" fill="rgb(232,9,26)"/><text x="424.00" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (7 samples, 1.61%)</title><rect x="410" y="196" width="19" height="15" fill="rgb(214,86,9)"/><text x="413.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:122) (1 samples, 0.23%)</title><rect x="426" y="212" width="3" height="15" fill="rgb(221,4,35)"/><text x="429.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (13 samples, 2.98%)</title><rect x="397" y="180" width="35" height="15" fill="rgb(243,206,27)"/><text x="400.00" y="190.50">lo..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="429" y="196" width="3" height="15" fill="rgb(222,104,12)"/><text x="432.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.23%)</title><rect x="429" y="212" width="3" height="15" fill="rgb(238,218,35)"/><text x="432.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:379) (1 samples, 0.23%)</title><rect x="429" y="228" width="3" height="15" fill="rgb(238,201,14)"/><text x="432.00" y="238.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:4) (1 samples, 0.23%)</title><rect x="432" y="196" width="2" height="15" fill="rgb(225,87,33)"/><text x="435.00" y="206.50"></text></g><g><title>_squeeze_dispatcher (numpy/core/fromnumeric.py:1378) (1 samples, 0.23%)</title><rect x="432" y="212" width="2" height="15" fill="rgb(207,228,15)"/><text x="435.00" y="222.50"></text></g><g><title>array_squeeze (methods.c:225) (1 samples, 0.23%)</title><rect x="440" y="244" width="3" height="15" fill="rgb(242,75,8)"/><text x="443.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="440" y="260" width="3" height="15" fill="rgb(234,120,40)"/><text x="443.00" y="270.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:123) (5 samples, 1.15%)</title><rect x="432" y="180" width="13" height="15" fill="rgb(238,80,11)"/><text x="435.00" y="190.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:6) (4 samples, 0.92%)</title><rect x="434" y="196" width="11" height="15" fill="rgb(238,167,23)"/><text x="437.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.92%)</title><rect x="434" y="212" width="11" height="15" fill="rgb(207,216,37)"/><text x="437.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py:1438) (2 samples, 0.46%)</title><rect x="440" y="228" width="5" height="15" fill="rgb(225,88,36)"/><text x="443.00" y="238.50"></text></g><g><title>array_squeeze (methods.c:241) (1 samples, 0.23%)</title><rect x="443" y="244" width="2" height="15" fill="rgb(241,108,24)"/><text x="446.00" y="254.50"></text></g><g><title>PyArray_SqueezeSelected (shape.c:609) (1 samples, 0.23%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(207,111,8)"/><text x="446.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="445" y="212" width="3" height="15" fill="rgb(208,223,20)"/><text x="448.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.23%)</title><rect x="445" y="228" width="3" height="15" fill="rgb(248,85,41)"/><text x="448.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c:2068) (1 samples, 0.23%)</title><rect x="445" y="244" width="3" height="15" fill="rgb(218,206,1)"/><text x="448.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="448" y="212" width="3" height="15" fill="rgb(226,34,10)"/><text x="451.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.23%)</title><rect x="448" y="228" width="3" height="15" fill="rgb(243,208,20)"/><text x="451.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.23%)</title><rect x="448" y="244" width="3" height="15" fill="rgb(253,165,1)"/><text x="451.00" y="254.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.23%)</title><rect x="448" y="260" width="3" height="15" fill="rgb(210,42,25)"/><text x="451.00" y="270.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.23%)</title><rect x="448" y="276" width="3" height="15" fill="rgb(230,189,15)"/><text x="451.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.23%)</title><rect x="451" y="228" width="2" height="15" fill="rgb(249,63,23)"/><text x="454.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.23%)</title><rect x="451" y="244" width="2" height="15" fill="rgb(238,223,8)"/><text x="454.00" y="254.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.23%)</title><rect x="451" y="260" width="2" height="15" fill="rgb(235,68,6)"/><text x="454.00" y="270.50"></text></g><g><title>solve_diophantine (mem_overlap.c:513) (1 samples, 0.23%)</title><rect x="451" y="276" width="2" height="15" fill="rgb(222,13,49)"/><text x="454.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:124) (4 samples, 0.92%)</title><rect x="445" y="180" width="11" height="15" fill="rgb(245,66,9)"/><text x="448.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.92%)</title><rect x="445" y="196" width="11" height="15" fill="rgb(209,100,31)"/><text x="448.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.46%)</title><rect x="451" y="212" width="5" height="15" fill="rgb(229,28,13)"/><text x="454.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.23%)</title><rect x="453" y="228" width="3" height="15" fill="rgb(240,228,4)"/><text x="456.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.23%)</title><rect x="453" y="244" width="3" height="15" fill="rgb(219,27,38)"/><text x="456.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="453" y="260" width="3" height="15" fill="rgb(226,96,30)"/><text x="456.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.23%)</title><rect x="453" y="276" width="3" height="15" fill="rgb(248,218,15)"/><text x="456.00" y="286.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:230) (1 samples, 0.23%)</title><rect x="459" y="196" width="2" height="15" fill="rgb(225,111,47)"/><text x="462.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.23%)</title><rect x="459" y="212" width="2" height="15" fill="rgb(244,184,7)"/><text x="462.00" y="222.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:239) (2 samples, 0.46%)</title><rect x="461" y="196" width="6" height="15" fill="rgb(251,40,16)"/><text x="464.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.23%)</title><rect x="464" y="212" width="3" height="15" fill="rgb(251,36,14)"/><text x="467.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.23%)</title><rect x="464" y="228" width="3" height="15" fill="rgb(238,226,6)"/><text x="467.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (63 samples, 14.45%)</title><rect x="302" y="164" width="170" height="15" fill="rgb(243,128,50)"/><text x="305.00" y="174.50">predict_log_proba (skl..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (6 samples, 1.38%)</title><rect x="456" y="180" width="16" height="15" fill="rgb(214,179,26)"/><text x="459.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:241) (2 samples, 0.46%)</title><rect x="467" y="196" width="5" height="15" fill="rgb(232,61,8)"/><text x="470.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="478" y="212" width="2" height="15" fill="rgb(250,222,23)"/><text x="481.00" y="222.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.23%)</title><rect x="478" y="228" width="2" height="15" fill="rgb(243,172,39)"/><text x="481.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.23%)</title><rect x="478" y="244" width="2" height="15" fill="rgb(227,130,33)"/><text x="481.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.23%)</title><rect x="478" y="260" width="2" height="15" fill="rgb(239,115,26)"/><text x="481.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.23%)</title><rect x="480" y="244" width="3" height="15" fill="rgb(210,146,8)"/><text x="483.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.23%)</title><rect x="480" y="260" width="3" height="15" fill="rgb(224,189,3)"/><text x="483.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.23%)</title><rect x="480" y="276" width="3" height="15" fill="rgb(211,146,54)"/><text x="483.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2589) (1 samples, 0.23%)</title><rect x="480" y="292" width="3" height="15" fill="rgb(223,133,6)"/><text x="483.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (5 samples, 1.15%)</title><rect x="472" y="180" width="14" height="15" fill="rgb(229,63,40)"/><text x="475.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.69%)</title><rect x="478" y="196" width="8" height="15" fill="rgb(245,143,39)"/><text x="481.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.46%)</title><rect x="480" y="212" width="6" height="15" fill="rgb(223,153,10)"/><text x="483.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.46%)</title><rect x="480" y="228" width="6" height="15" fill="rgb(240,106,53)"/><text x="483.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.23%)</title><rect x="483" y="244" width="3" height="15" fill="rgb(229,203,54)"/><text x="486.00" y="254.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1375) (1 samples, 0.23%)</title><rect x="483" y="260" width="3" height="15" fill="rgb(238,128,31)"/><text x="486.00" y="270.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:4) (1 samples, 0.23%)</title><rect x="486" y="180" width="3" height="15" fill="rgb(253,29,12)"/><text x="489.00" y="190.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:122) (1 samples, 0.23%)</title><rect x="489" y="212" width="2" height="15" fill="rgb(233,46,31)"/><text x="492.00" y="222.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.23%)</title><rect x="489" y="228" width="2" height="15" fill="rgb(251,157,47)"/><text x="492.00" y="238.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:125) (1 samples, 0.23%)</title><rect x="491" y="212" width="3" height="15" fill="rgb(228,190,25)"/><text x="494.00" y="222.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:126) (1 samples, 0.23%)</title><rect x="494" y="212" width="3" height="15" fill="rgb(215,63,40)"/><text x="497.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.23%)</title><rect x="494" y="228" width="3" height="15" fill="rgb(225,32,26)"/><text x="497.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:742) (1 samples, 0.23%)</title><rect x="494" y="244" width="3" height="15" fill="rgb(247,4,42)"/><text x="497.00" y="254.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (11 samples, 2.52%)</title><rect x="472" y="164" width="30" height="15" fill="rgb(239,223,18)"/><text x="475.00" y="174.50">pr..</text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (5 samples, 1.15%)</title><rect x="489" y="180" width="13" height="15" fill="rgb(205,61,23)"/><text x="492.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.15%)</title><rect x="489" y="196" width="13" height="15" fill="rgb(233,51,38)"/><text x="492.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:130) (2 samples, 0.46%)</title><rect x="497" y="212" width="5" height="15" fill="rgb(214,149,39)"/><text x="500.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="502" y="180" width="3" height="15" fill="rgb(252,104,13)"/><text x="505.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.23%)</title><rect x="502" y="196" width="3" height="15" fill="rgb(224,94,54)"/><text x="505.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (176 samples, 40.37%)</title><rect x="31" y="132" width="476" height="15" fill="rgb(240,95,31)"/><text x="34.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (176 samples, 40.37%)</title><rect x="31" y="148" width="476" height="15" fill="rgb(235,160,39)"/><text x="34.00" y="158.50">predict_proba (sklearn/naive_bayes.py:115)</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.46%)</title><rect x="502" y="164" width="5" height="15" fill="rgb(223,13,6)"/><text x="505.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="505" y="180" width="2" height="15" fill="rgb(208,69,11)"/><text x="508.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1662) (1 samples, 0.23%)</title><rect x="505" y="196" width="2" height="15" fill="rgb(221,121,32)"/><text x="508.00" y="206.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1402) (1 samples, 0.23%)</title><rect x="505" y="212" width="2" height="15" fill="rgb(215,32,39)"/><text x="508.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:38) (181 samples, 41.51%)</title><rect x="20" y="52" width="490" height="15" fill="rgb(245,224,35)"/><text x="23.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:37) (181 samples, 41.51%)</title><rect x="20" y="68" width="490" height="15" fill="rgb(253,3,52)"/><text x="23.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:29) (181 samples, 41.51%)</title><rect x="20" y="84" width="490" height="15" fill="rgb(208,206,27)"/><text x="23.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:23) (178 samples, 40.83%)</title><rect x="28" y="100" width="482" height="15" fill="rgb(243,89,15)"/><text x="31.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (178 samples, 40.83%)</title><rect x="28" y="116" width="482" height="15" fill="rgb(216,22,30)"/><text x="31.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="507" y="132" width="3" height="15" fill="rgb(236,92,18)"/><text x="510.00" y="142.50"></text></g><g><title>0x7f7a452944ac (?) (1 samples, 0.23%)</title><rect x="510" y="724" width="3" height="15" fill="rgb(241,84,33)"/><text x="513.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="510" y="740" width="3" height="15" fill="rgb(230,116,36)"/><text x="513.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.23%)</title><rect x="510" y="756" width="3" height="15" fill="rgb(249,138,31)"/><text x="513.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.23%)</title><rect x="510" y="772" width="3" height="15" fill="rgb(235,128,25)"/><text x="513.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.23%)</title><rect x="510" y="788" width="3" height="15" fill="rgb(239,137,26)"/><text x="513.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.23%)</title><rect x="510" y="804" width="3" height="15" fill="rgb(216,169,37)"/><text x="513.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1367) (1 samples, 0.23%)</title><rect x="510" y="820" width="3" height="15" fill="rgb(236,191,48)"/><text x="513.00" y="830.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:11) (2 samples, 0.46%)</title><rect x="510" y="580" width="6" height="15" fill="rgb(236,92,38)"/><text x="513.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.46%)</title><rect x="510" y="596" width="6" height="15" fill="rgb(247,79,30)"/><text x="513.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="510" y="612" width="6" height="15" fill="rgb(222,47,48)"/><text x="513.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="510" y="628" width="6" height="15" fill="rgb(246,17,47)"/><text x="513.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="510" y="644" width="6" height="15" fill="rgb(220,39,22)"/><text x="513.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="510" y="660" width="6" height="15" fill="rgb(252,195,36)"/><text x="513.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="510" y="676" width="6" height="15" fill="rgb(243,15,46)"/><text x="513.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="510" y="692" width="6" height="15" fill="rgb(242,83,15)"/><text x="513.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py:1838) (2 samples, 0.46%)</title><rect x="510" y="708" width="6" height="15" fill="rgb(208,1,48)"/><text x="513.00" y="718.50"></text></g><g><title>0x7f7a452944ac (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="513" y="724" width="3" height="15" fill="rgb(214,162,32)"/><text x="516.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="513" y="740" width="3" height="15" fill="rgb(234,58,41)"/><text x="516.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.23%)</title><rect x="513" y="756" width="3" height="15" fill="rgb(210,120,41)"/><text x="516.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.23%)</title><rect x="513" y="772" width="3" height="15" fill="rgb(245,197,23)"/><text x="516.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.23%)</title><rect x="513" y="788" width="3" height="15" fill="rgb(237,49,7)"/><text x="516.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.23%)</title><rect x="513" y="804" width="3" height="15" fill="rgb(213,31,27)"/><text x="516.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.23%)</title><rect x="513" y="820" width="3" height="15" fill="rgb(229,47,49)"/><text x="516.00" y="830.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.23%)</title><rect x="513" y="836" width="3" height="15" fill="rgb(229,227,22)"/><text x="516.00" y="846.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.23%)</title><rect x="513" y="852" width="3" height="15" fill="rgb(247,209,53)"/><text x="516.00" y="862.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.23%)</title><rect x="513" y="868" width="3" height="15" fill="rgb(210,90,48)"/><text x="516.00" y="878.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="513" y="884" width="3" height="15" fill="rgb(227,96,53)"/><text x="516.00" y="894.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="513" y="900" width="3" height="15" fill="rgb(206,181,16)"/><text x="516.00" y="910.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.23%)</title><rect x="516" y="852" width="2" height="15" fill="rgb(247,196,53)"/><text x="519.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.23%)</title><rect x="516" y="868" width="2" height="15" fill="rgb(248,32,41)"/><text x="519.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.23%)</title><rect x="516" y="884" width="2" height="15" fill="rgb(247,70,52)"/><text x="519.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.23%)</title><rect x="516" y="900" width="2" height="15" fill="rgb(212,209,47)"/><text x="519.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.23%)</title><rect x="516" y="916" width="2" height="15" fill="rgb(228,227,16)"/><text x="519.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.23%)</title><rect x="516" y="932" width="2" height="15" fill="rgb(253,115,6)"/><text x="519.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="516" y="948" width="2" height="15" fill="rgb(227,3,28)"/><text x="519.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="516" y="964" width="2" height="15" fill="rgb(238,20,6)"/><text x="519.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.23%)</title><rect x="516" y="980" width="2" height="15" fill="rgb(205,146,3)"/><text x="519.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.23%)</title><rect x="516" y="996" width="2" height="15" fill="rgb(253,186,14)"/><text x="519.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.23%)</title><rect x="516" y="1012" width="2" height="15" fill="rgb(229,25,21)"/><text x="519.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.23%)</title><rect x="518" y="964" width="3" height="15" fill="rgb(213,62,5)"/><text x="521.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.23%)</title><rect x="518" y="980" width="3" height="15" fill="rgb(206,57,20)"/><text x="521.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="518" y="996" width="3" height="15" fill="rgb(252,110,38)"/><text x="521.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="518" y="1012" width="3" height="15" fill="rgb(208,49,36)"/><text x="521.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.23%)</title><rect x="521" y="964" width="3" height="15" fill="rgb(239,60,44)"/><text x="524.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.69%)</title><rect x="518" y="852" width="8" height="15" fill="rgb(220,113,35)"/><text x="521.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.69%)</title><rect x="518" y="868" width="8" height="15" fill="rgb(229,131,21)"/><text x="521.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.69%)</title><rect x="518" y="884" width="8" height="15" fill="rgb(216,30,21)"/><text x="521.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.69%)</title><rect x="518" y="900" width="8" height="15" fill="rgb(239,211,41)"/><text x="521.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.69%)</title><rect x="518" y="916" width="8" height="15" fill="rgb(233,76,33)"/><text x="521.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 0.69%)</title><rect x="518" y="932" width="8" height="15" fill="rgb(220,139,53)"/><text x="521.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 0.69%)</title><rect x="518" y="948" width="8" height="15" fill="rgb(248,13,18)"/><text x="521.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.23%)</title><rect x="524" y="964" width="2" height="15" fill="rgb(237,5,45)"/><text x="527.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.23%)</title><rect x="524" y="980" width="2" height="15" fill="rgb(214,89,5)"/><text x="527.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.23%)</title><rect x="524" y="996" width="2" height="15" fill="rgb(233,107,52)"/><text x="527.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.23%)</title><rect x="524" y="1012" width="2" height="15" fill="rgb(214,41,15)"/><text x="527.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="524" y="1028" width="2" height="15" fill="rgb(224,95,2)"/><text x="527.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:2) (7 samples, 1.61%)</title><rect x="510" y="148" width="19" height="15" fill="rgb(224,135,30)"/><text x="513.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.61%)</title><rect x="510" y="164" width="19" height="15" fill="rgb(210,123,31)"/><text x="513.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.61%)</title><rect x="510" y="180" width="19" height="15" fill="rgb(239,114,37)"/><text x="513.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.61%)</title><rect x="510" y="196" width="19" height="15" fill="rgb(233,77,24)"/><text x="513.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.61%)</title><rect x="510" y="212" width="19" height="15" fill="rgb(244,125,20)"/><text x="513.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.61%)</title><rect x="510" y="228" width="19" height="15" fill="rgb(217,33,13)"/><text x="513.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.61%)</title><rect x="510" y="244" width="19" height="15" fill="rgb(238,228,8)"/><text x="513.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.61%)</title><rect x="510" y="260" width="19" height="15" fill="rgb(222,153,22)"/><text x="513.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.61%)</title><rect x="510" y="276" width="19" height="15" fill="rgb(216,118,52)"/><text x="513.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 1.61%)</title><rect x="510" y="292" width="19" height="15" fill="rgb(212,207,48)"/><text x="513.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.61%)</title><rect x="510" y="308" width="19" height="15" fill="rgb(214,18,37)"/><text x="513.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.61%)</title><rect x="510" y="324" width="19" height="15" fill="rgb(228,27,47)"/><text x="513.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.61%)</title><rect x="510" y="340" width="19" height="15" fill="rgb(229,214,52)"/><text x="513.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.61%)</title><rect x="510" y="356" width="19" height="15" fill="rgb(238,39,0)"/><text x="513.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.61%)</title><rect x="510" y="372" width="19" height="15" fill="rgb(214,53,41)"/><text x="513.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 1.61%)</title><rect x="510" y="388" width="19" height="15" fill="rgb(228,5,24)"/><text x="513.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.61%)</title><rect x="510" y="404" width="19" height="15" fill="rgb(236,125,39)"/><text x="513.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.61%)</title><rect x="510" y="420" width="19" height="15" fill="rgb(208,202,51)"/><text x="513.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.61%)</title><rect x="510" y="436" width="19" height="15" fill="rgb(223,45,11)"/><text x="513.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.61%)</title><rect x="510" y="452" width="19" height="15" fill="rgb(249,79,6)"/><text x="513.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.61%)</title><rect x="510" y="468" width="19" height="15" fill="rgb(221,4,3)"/><text x="513.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 1.61%)</title><rect x="510" y="484" width="19" height="15" fill="rgb(248,74,44)"/><text x="513.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.61%)</title><rect x="510" y="500" width="19" height="15" fill="rgb(220,79,15)"/><text x="513.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.61%)</title><rect x="510" y="516" width="19" height="15" fill="rgb(212,56,0)"/><text x="513.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.61%)</title><rect x="510" y="532" width="19" height="15" fill="rgb(249,11,9)"/><text x="513.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.61%)</title><rect x="510" y="548" width="19" height="15" fill="rgb(231,43,10)"/><text x="513.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.61%)</title><rect x="510" y="564" width="19" height="15" fill="rgb(205,19,39)"/><text x="513.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.15%)</title><rect x="516" y="580" width="13" height="15" fill="rgb(208,187,23)"/><text x="519.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.15%)</title><rect x="516" y="596" width="13" height="15" fill="rgb(239,161,53)"/><text x="519.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.15%)</title><rect x="516" y="612" width="13" height="15" fill="rgb(254,113,24)"/><text x="519.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="516" y="628" width="13" height="15" fill="rgb(209,63,9)"/><text x="519.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.15%)</title><rect x="516" y="644" width="13" height="15" fill="rgb(233,208,14)"/><text x="519.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.15%)</title><rect x="516" y="660" width="13" height="15" fill="rgb(236,75,31)"/><text x="519.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.15%)</title><rect x="516" y="676" width="13" height="15" fill="rgb(213,50,21)"/><text x="519.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.15%)</title><rect x="516" y="692" width="13" height="15" fill="rgb(242,3,49)"/><text x="519.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="516" y="708" width="13" height="15" fill="rgb(209,192,23)"/><text x="519.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.15%)</title><rect x="516" y="724" width="13" height="15" fill="rgb(219,203,48)"/><text x="519.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.15%)</title><rect x="516" y="740" width="13" height="15" fill="rgb(227,59,20)"/><text x="519.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.15%)</title><rect x="516" y="756" width="13" height="15" fill="rgb(242,82,18)"/><text x="519.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.15%)</title><rect x="516" y="772" width="13" height="15" fill="rgb(250,40,18)"/><text x="519.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.15%)</title><rect x="516" y="788" width="13" height="15" fill="rgb(215,35,35)"/><text x="519.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="516" y="804" width="13" height="15" fill="rgb(237,84,35)"/><text x="519.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.15%)</title><rect x="516" y="820" width="13" height="15" fill="rgb(223,31,33)"/><text x="519.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.15%)</title><rect x="516" y="836" width="13" height="15" fill="rgb(214,226,7)"/><text x="519.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.23%)</title><rect x="526" y="852" width="3" height="15" fill="rgb(246,60,14)"/><text x="529.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.23%)</title><rect x="526" y="868" width="3" height="15" fill="rgb(249,57,4)"/><text x="529.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.23%)</title><rect x="526" y="884" width="3" height="15" fill="rgb(210,106,24)"/><text x="529.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py:2640) (1 samples, 0.23%)</title><rect x="526" y="900" width="3" height="15" fill="rgb(234,166,38)"/><text x="529.00" y="910.50"></text></g><g><title>0x7f7a56f5ae9d (libc-2.29.so) (1 samples, 0.23%)</title><rect x="526" y="916" width="3" height="15" fill="rgb(244,38,36)"/><text x="529.00" y="926.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.23%)</title><rect x="529" y="484" width="3" height="15" fill="rgb(206,122,38)"/><text x="532.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="500" width="3" height="15" fill="rgb(248,21,6)"/><text x="532.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="516" width="3" height="15" fill="rgb(253,205,47)"/><text x="532.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="532" width="3" height="15" fill="rgb(209,116,1)"/><text x="532.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="548" width="3" height="15" fill="rgb(252,165,47)"/><text x="532.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="564" width="3" height="15" fill="rgb(229,185,30)"/><text x="532.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.23%)</title><rect x="529" y="580" width="3" height="15" fill="rgb(229,149,32)"/><text x="532.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="596" width="3" height="15" fill="rgb(218,196,3)"/><text x="532.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="612" width="3" height="15" fill="rgb(250,24,29)"/><text x="532.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="628" width="3" height="15" fill="rgb(248,20,18)"/><text x="532.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="644" width="3" height="15" fill="rgb(252,80,6)"/><text x="532.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="660" width="3" height="15" fill="rgb(248,95,21)"/><text x="532.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.23%)</title><rect x="529" y="676" width="3" height="15" fill="rgb(218,206,49)"/><text x="532.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="692" width="3" height="15" fill="rgb(208,217,20)"/><text x="532.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="708" width="3" height="15" fill="rgb(241,29,11)"/><text x="532.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="724" width="3" height="15" fill="rgb(250,223,28)"/><text x="532.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="740" width="3" height="15" fill="rgb(244,103,17)"/><text x="532.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="756" width="3" height="15" fill="rgb(213,38,44)"/><text x="532.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.23%)</title><rect x="529" y="772" width="3" height="15" fill="rgb(239,215,20)"/><text x="532.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="529" y="788" width="3" height="15" fill="rgb(212,58,35)"/><text x="532.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="804" width="3" height="15" fill="rgb(232,160,12)"/><text x="532.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="820" width="3" height="15" fill="rgb(217,156,50)"/><text x="532.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="836" width="3" height="15" fill="rgb(218,95,22)"/><text x="532.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="852" width="3" height="15" fill="rgb(240,101,4)"/><text x="532.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="868" width="3" height="15" fill="rgb(239,215,13)"/><text x="532.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="884" width="3" height="15" fill="rgb(252,19,9)"/><text x="532.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.23%)</title><rect x="529" y="900" width="3" height="15" fill="rgb(252,79,23)"/><text x="532.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="916" width="3" height="15" fill="rgb(219,180,16)"/><text x="532.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="529" y="932" width="3" height="15" fill="rgb(236,20,4)"/><text x="532.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="948" width="3" height="15" fill="rgb(242,219,42)"/><text x="532.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="964" width="3" height="15" fill="rgb(209,115,17)"/><text x="532.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="980" width="3" height="15" fill="rgb(231,184,51)"/><text x="532.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="996" width="3" height="15" fill="rgb(251,214,4)"/><text x="532.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="1012" width="3" height="15" fill="rgb(231,87,52)"/><text x="532.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1028" width="3" height="15" fill="rgb(235,3,8)"/><text x="532.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.23%)</title><rect x="529" y="1044" width="3" height="15" fill="rgb(211,218,39)"/><text x="532.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="529" y="1060" width="3" height="15" fill="rgb(233,142,20)"/><text x="532.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1076" width="3" height="15" fill="rgb(243,112,6)"/><text x="532.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="1092" width="3" height="15" fill="rgb(208,205,37)"/><text x="532.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="1108" width="3" height="15" fill="rgb(247,205,5)"/><text x="532.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="1124" width="3" height="15" fill="rgb(252,211,38)"/><text x="532.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="1140" width="3" height="15" fill="rgb(221,102,22)"/><text x="532.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1156" width="3" height="15" fill="rgb(218,132,27)"/><text x="532.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.23%)</title><rect x="529" y="1172" width="3" height="15" fill="rgb(220,22,32)"/><text x="532.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="529" y="1188" width="3" height="15" fill="rgb(214,45,36)"/><text x="532.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1204" width="3" height="15" fill="rgb(221,217,17)"/><text x="532.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="1220" width="3" height="15" fill="rgb(211,171,22)"/><text x="532.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="1236" width="3" height="15" fill="rgb(231,130,19)"/><text x="532.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="1252" width="3" height="15" fill="rgb(206,92,1)"/><text x="532.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="1268" width="3" height="15" fill="rgb(241,14,24)"/><text x="532.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1284" width="3" height="15" fill="rgb(212,53,20)"/><text x="532.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.23%)</title><rect x="529" y="1300" width="3" height="15" fill="rgb(234,106,1)"/><text x="532.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="1316" width="3" height="15" fill="rgb(235,82,12)"/><text x="532.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="1332" width="3" height="15" fill="rgb(234,159,10)"/><text x="532.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="1348" width="3" height="15" fill="rgb(216,150,23)"/><text x="532.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="1364" width="3" height="15" fill="rgb(241,154,9)"/><text x="532.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1380" width="3" height="15" fill="rgb(254,113,31)"/><text x="532.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:18) (1 samples, 0.23%)</title><rect x="529" y="1396" width="3" height="15" fill="rgb(226,23,21)"/><text x="532.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="1412" width="3" height="15" fill="rgb(223,92,45)"/><text x="532.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="1428" width="3" height="15" fill="rgb(230,69,42)"/><text x="532.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="1444" width="3" height="15" fill="rgb(213,129,32)"/><text x="532.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="1460" width="3" height="15" fill="rgb(221,14,1)"/><text x="532.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1476" width="3" height="15" fill="rgb(225,148,45)"/><text x="532.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:20) (1 samples, 0.23%)</title><rect x="529" y="1492" width="3" height="15" fill="rgb(224,149,41)"/><text x="532.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="529" y="1508" width="3" height="15" fill="rgb(224,34,40)"/><text x="532.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1524" width="3" height="15" fill="rgb(213,102,42)"/><text x="532.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="1540" width="3" height="15" fill="rgb(249,142,47)"/><text x="532.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="1556" width="3" height="15" fill="rgb(209,5,7)"/><text x="532.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="529" y="1572" width="3" height="15" fill="rgb(234,183,13)"/><text x="532.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="529" y="1588" width="3" height="15" fill="rgb(244,64,45)"/><text x="532.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1604" width="3" height="15" fill="rgb(223,224,27)"/><text x="532.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/constant_time.py:11) (1 samples, 0.23%)</title><rect x="529" y="1620" width="3" height="15" fill="rgb(253,66,6)"/><text x="532.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="1636" width="3" height="15" fill="rgb(215,55,15)"/><text x="532.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="1652" width="3" height="15" fill="rgb(226,69,2)"/><text x="532.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.23%)</title><rect x="529" y="1668" width="3" height="15" fill="rgb(251,134,35)"/><text x="532.00" y="1678.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.23%)</title><rect x="529" y="1684" width="3" height="15" fill="rgb(241,173,16)"/><text x="532.00" y="1694.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.23%)</title><rect x="529" y="1700" width="3" height="15" fill="rgb(221,121,31)"/><text x="532.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1716" width="3" height="15" fill="rgb(222,196,35)"/><text x="532.00" y="1726.50"></text></g><g><title>0x7f7a2274be6f (?) (1 samples, 0.23%)</title><rect x="529" y="1732" width="3" height="15" fill="rgb(209,5,46)"/><text x="532.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="529" y="1748" width="3" height="15" fill="rgb(254,191,5)"/><text x="532.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="529" y="1764" width="3" height="15" fill="rgb(230,161,32)"/><text x="532.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.23%)</title><rect x="529" y="1780" width="3" height="15" fill="rgb(215,135,49)"/><text x="532.00" y="1790.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.23%)</title><rect x="529" y="1796" width="3" height="15" fill="rgb(211,217,12)"/><text x="532.00" y="1806.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.23%)</title><rect x="529" y="1812" width="3" height="15" fill="rgb(244,71,26)"/><text x="532.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="529" y="1828" width="3" height="15" fill="rgb(245,131,45)"/><text x="532.00" y="1838.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1844" width="3" height="15" fill="rgb(224,30,33)"/><text x="532.00" y="1854.50"></text></g><g><title>0x7f7a571cc995 (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1860" width="3" height="15" fill="rgb(254,201,28)"/><text x="532.00" y="1870.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1876" width="3" height="15" fill="rgb(233,221,2)"/><text x="532.00" y="1886.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1892" width="3" height="15" fill="rgb(215,16,40)"/><text x="532.00" y="1902.50"></text></g><g><title>0x7f7a571cc258 (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1908" width="3" height="15" fill="rgb(216,98,4)"/><text x="532.00" y="1918.50"></text></g><g><title>0x7f7a57219d7a (ld-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1924" width="3" height="15" fill="rgb(236,179,23)"/><text x="532.00" y="1934.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1940" width="3" height="15" fill="rgb(229,42,13)"/><text x="532.00" y="1950.50"></text></g><g><title>0x7f7a5721a1f0 (ld-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1956" width="3" height="15" fill="rgb(226,135,22)"/><text x="532.00" y="1966.50"></text></g><g><title>0x7f7a57214876 (ld-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1972" width="3" height="15" fill="rgb(236,102,20)"/><text x="532.00" y="1982.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="1988" width="3" height="15" fill="rgb(210,67,39)"/><text x="532.00" y="1998.50"></text></g><g><title>0x7f7a57214501 (ld-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="2004" width="3" height="15" fill="rgb(207,206,11)"/><text x="532.00" y="2014.50"></text></g><g><title>0x7f7a5720fc1a (ld-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="2020" width="3" height="15" fill="rgb(214,55,10)"/><text x="532.00" y="2030.50"></text></g><g><title>0x7f7a5720d9fe (ld-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="2036" width="3" height="15" fill="rgb(242,200,43)"/><text x="532.00" y="2046.50"></text></g><g><title>0x7f7a57225f3f (ld-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="2052" width="3" height="15" fill="rgb(244,228,30)"/><text x="532.00" y="2062.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.46%)</title><rect x="529" y="244" width="6" height="15" fill="rgb(214,20,12)"/><text x="532.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="529" y="260" width="6" height="15" fill="rgb(221,79,48)"/><text x="532.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="529" y="276" width="6" height="15" fill="rgb(229,114,53)"/><text x="532.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="529" y="292" width="6" height="15" fill="rgb(230,186,20)"/><text x="532.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="529" y="308" width="6" height="15" fill="rgb(226,153,22)"/><text x="532.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="529" y="324" width="6" height="15" fill="rgb(233,64,30)"/><text x="532.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.46%)</title><rect x="529" y="340" width="6" height="15" fill="rgb(245,30,5)"/><text x="532.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="529" y="356" width="6" height="15" fill="rgb(250,116,40)"/><text x="532.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.46%)</title><rect x="529" y="372" width="6" height="15" fill="rgb(207,114,40)"/><text x="532.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="529" y="388" width="6" height="15" fill="rgb(221,166,3)"/><text x="532.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="529" y="404" width="6" height="15" fill="rgb(214,99,27)"/><text x="532.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="529" y="420" width="6" height="15" fill="rgb(234,81,38)"/><text x="532.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="529" y="436" width="6" height="15" fill="rgb(220,196,41)"/><text x="532.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="529" y="452" width="6" height="15" fill="rgb(243,99,5)"/><text x="532.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="529" y="468" width="6" height="15" fill="rgb(254,7,9)"/><text x="532.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.23%)</title><rect x="532" y="484" width="3" height="15" fill="rgb(241,88,11)"/><text x="535.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="532" y="500" width="3" height="15" fill="rgb(209,37,38)"/><text x="535.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="532" y="516" width="3" height="15" fill="rgb(209,19,21)"/><text x="535.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="532" y="532" width="3" height="15" fill="rgb(230,151,3)"/><text x="535.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="532" y="548" width="3" height="15" fill="rgb(243,198,46)"/><text x="535.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="532" y="564" width="3" height="15" fill="rgb(253,209,48)"/><text x="535.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.23%)</title><rect x="532" y="580" width="3" height="15" fill="rgb(244,15,10)"/><text x="535.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="532" y="596" width="3" height="15" fill="rgb(208,181,48)"/><text x="535.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="532" y="612" width="3" height="15" fill="rgb(223,111,39)"/><text x="535.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="532" y="628" width="3" height="15" fill="rgb(208,122,40)"/><text x="535.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="532" y="644" width="3" height="15" fill="rgb(236,46,47)"/><text x="535.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="532" y="660" width="3" height="15" fill="rgb(227,64,41)"/><text x="535.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.23%)</title><rect x="532" y="676" width="3" height="15" fill="rgb(247,37,15)"/><text x="535.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="532" y="692" width="3" height="15" fill="rgb(245,78,12)"/><text x="535.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="532" y="708" width="3" height="15" fill="rgb(222,11,33)"/><text x="535.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="532" y="724" width="3" height="15" fill="rgb(220,186,29)"/><text x="535.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="532" y="740" width="3" height="15" fill="rgb(226,135,42)"/><text x="535.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="532" y="756" width="3" height="15" fill="rgb(212,51,31)"/><text x="535.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:1642) (1 samples, 0.23%)</title><rect x="532" y="772" width="3" height="15" fill="rgb(236,78,39)"/><text x="535.00" y="782.50"></text></g><g><title>register_check (pycodestyle.py:183) (1 samples, 0.23%)</title><rect x="532" y="788" width="3" height="15" fill="rgb(216,176,11)"/><text x="535.00" y="798.50"></text></g><g><title>_get_parameters (pycodestyle.py:169) (1 samples, 0.23%)</title><rect x="532" y="804" width="3" height="15" fill="rgb(223,137,22)"/><text x="535.00" y="814.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.23%)</title><rect x="532" y="820" width="3" height="15" fill="rgb(206,21,47)"/><text x="535.00" y="830.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.23%)</title><rect x="532" y="836" width="3" height="15" fill="rgb(211,72,19)"/><text x="535.00" y="846.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.23%)</title><rect x="532" y="852" width="3" height="15" fill="rgb(207,191,1)"/><text x="535.00" y="862.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.23%)</title><rect x="532" y="868" width="3" height="15" fill="rgb(226,57,17)"/><text x="535.00" y="878.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.23%)</title><rect x="532" y="884" width="3" height="15" fill="rgb(212,157,1)"/><text x="535.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.23%)</title><rect x="535" y="436" width="2" height="15" fill="rgb(237,117,5)"/><text x="538.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="452" width="2" height="15" fill="rgb(231,116,45)"/><text x="538.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="468" width="2" height="15" fill="rgb(252,150,33)"/><text x="538.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="484" width="2" height="15" fill="rgb(237,208,45)"/><text x="538.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="500" width="2" height="15" fill="rgb(217,169,35)"/><text x="538.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="516" width="2" height="15" fill="rgb(205,183,14)"/><text x="538.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.23%)</title><rect x="535" y="532" width="2" height="15" fill="rgb(227,96,0)"/><text x="538.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="548" width="2" height="15" fill="rgb(237,32,44)"/><text x="538.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="564" width="2" height="15" fill="rgb(226,124,39)"/><text x="538.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="580" width="2" height="15" fill="rgb(219,59,35)"/><text x="538.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="596" width="2" height="15" fill="rgb(215,142,50)"/><text x="538.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="612" width="2" height="15" fill="rgb(245,3,44)"/><text x="538.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.23%)</title><rect x="535" y="628" width="2" height="15" fill="rgb(244,147,28)"/><text x="538.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="644" width="2" height="15" fill="rgb(238,7,16)"/><text x="538.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="660" width="2" height="15" fill="rgb(220,31,47)"/><text x="538.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="676" width="2" height="15" fill="rgb(223,194,15)"/><text x="538.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="692" width="2" height="15" fill="rgb(239,75,5)"/><text x="538.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="708" width="2" height="15" fill="rgb(227,43,19)"/><text x="538.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.23%)</title><rect x="535" y="724" width="2" height="15" fill="rgb(234,158,7)"/><text x="538.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="740" width="2" height="15" fill="rgb(213,215,6)"/><text x="538.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="756" width="2" height="15" fill="rgb(216,4,16)"/><text x="538.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="772" width="2" height="15" fill="rgb(222,50,34)"/><text x="538.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="788" width="2" height="15" fill="rgb(249,180,27)"/><text x="538.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="804" width="2" height="15" fill="rgb(213,205,25)"/><text x="538.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.23%)</title><rect x="535" y="820" width="2" height="15" fill="rgb(240,122,4)"/><text x="538.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="836" width="2" height="15" fill="rgb(215,223,28)"/><text x="538.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="852" width="2" height="15" fill="rgb(223,73,34)"/><text x="538.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="868" width="2" height="15" fill="rgb(236,170,15)"/><text x="538.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="884" width="2" height="15" fill="rgb(211,171,43)"/><text x="538.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="900" width="2" height="15" fill="rgb(211,91,44)"/><text x="538.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.23%)</title><rect x="535" y="916" width="2" height="15" fill="rgb(230,48,45)"/><text x="538.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="932" width="2" height="15" fill="rgb(238,39,14)"/><text x="538.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="948" width="2" height="15" fill="rgb(251,174,51)"/><text x="538.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="964" width="2" height="15" fill="rgb(213,8,53)"/><text x="538.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="980" width="2" height="15" fill="rgb(251,197,15)"/><text x="538.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="996" width="2" height="15" fill="rgb(211,194,17)"/><text x="538.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.23%)</title><rect x="535" y="1012" width="2" height="15" fill="rgb(209,34,3)"/><text x="538.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1028" width="2" height="15" fill="rgb(241,133,37)"/><text x="538.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1044" width="2" height="15" fill="rgb(236,171,6)"/><text x="538.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1060" width="2" height="15" fill="rgb(239,41,13)"/><text x="538.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1076" width="2" height="15" fill="rgb(250,136,27)"/><text x="538.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1092" width="2" height="15" fill="rgb(228,215,48)"/><text x="538.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.23%)</title><rect x="535" y="1108" width="2" height="15" fill="rgb(250,86,36)"/><text x="538.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1124" width="2" height="15" fill="rgb(239,97,23)"/><text x="538.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1140" width="2" height="15" fill="rgb(227,106,24)"/><text x="538.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1156" width="2" height="15" fill="rgb(226,202,36)"/><text x="538.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1172" width="2" height="15" fill="rgb(212,146,10)"/><text x="538.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1188" width="2" height="15" fill="rgb(242,166,29)"/><text x="538.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.23%)</title><rect x="535" y="1204" width="2" height="15" fill="rgb(235,153,22)"/><text x="538.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1220" width="2" height="15" fill="rgb(251,41,23)"/><text x="538.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1236" width="2" height="15" fill="rgb(215,38,52)"/><text x="538.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1252" width="2" height="15" fill="rgb(216,83,34)"/><text x="538.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1268" width="2" height="15" fill="rgb(246,9,50)"/><text x="538.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1284" width="2" height="15" fill="rgb(222,174,44)"/><text x="538.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.23%)</title><rect x="535" y="1300" width="2" height="15" fill="rgb(230,208,40)"/><text x="538.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1316" width="2" height="15" fill="rgb(243,209,28)"/><text x="538.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1332" width="2" height="15" fill="rgb(239,204,9)"/><text x="538.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1348" width="2" height="15" fill="rgb(235,168,15)"/><text x="538.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1364" width="2" height="15" fill="rgb(252,33,8)"/><text x="538.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1380" width="2" height="15" fill="rgb(212,55,12)"/><text x="538.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.23%)</title><rect x="535" y="1396" width="2" height="15" fill="rgb(216,98,27)"/><text x="538.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1412" width="2" height="15" fill="rgb(205,104,50)"/><text x="538.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1428" width="2" height="15" fill="rgb(252,140,19)"/><text x="538.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1444" width="2" height="15" fill="rgb(240,154,31)"/><text x="538.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1460" width="2" height="15" fill="rgb(243,123,53)"/><text x="538.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1476" width="2" height="15" fill="rgb(253,137,39)"/><text x="538.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.23%)</title><rect x="535" y="1492" width="2" height="15" fill="rgb(232,210,26)"/><text x="538.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1508" width="2" height="15" fill="rgb(242,58,39)"/><text x="538.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1524" width="2" height="15" fill="rgb(238,115,27)"/><text x="538.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1540" width="2" height="15" fill="rgb(243,91,47)"/><text x="538.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1556" width="2" height="15" fill="rgb(230,69,37)"/><text x="538.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1572" width="2" height="15" fill="rgb(231,32,15)"/><text x="538.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.23%)</title><rect x="535" y="1588" width="2" height="15" fill="rgb(236,201,45)"/><text x="538.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1604" width="2" height="15" fill="rgb(220,12,44)"/><text x="538.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1620" width="2" height="15" fill="rgb(216,209,5)"/><text x="538.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1636" width="2" height="15" fill="rgb(245,200,51)"/><text x="538.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1652" width="2" height="15" fill="rgb(211,62,35)"/><text x="538.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1668" width="2" height="15" fill="rgb(227,63,40)"/><text x="538.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.23%)</title><rect x="535" y="1684" width="2" height="15" fill="rgb(230,106,22)"/><text x="538.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1700" width="2" height="15" fill="rgb(210,192,14)"/><text x="538.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1716" width="2" height="15" fill="rgb(227,149,45)"/><text x="538.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1732" width="2" height="15" fill="rgb(221,112,26)"/><text x="538.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1748" width="2" height="15" fill="rgb(232,42,20)"/><text x="538.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1764" width="2" height="15" fill="rgb(244,129,26)"/><text x="538.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.23%)</title><rect x="535" y="1780" width="2" height="15" fill="rgb(212,79,42)"/><text x="538.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1796" width="2" height="15" fill="rgb(218,11,45)"/><text x="538.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1812" width="2" height="15" fill="rgb(220,225,1)"/><text x="538.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1828" width="2" height="15" fill="rgb(234,151,36)"/><text x="538.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="535" y="1844" width="2" height="15" fill="rgb(214,137,17)"/><text x="538.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1860" width="2" height="15" fill="rgb(212,206,30)"/><text x="538.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.23%)</title><rect x="535" y="1876" width="2" height="15" fill="rgb(214,157,38)"/><text x="538.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="535" y="1892" width="2" height="15" fill="rgb(207,57,16)"/><text x="538.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="535" y="1908" width="2" height="15" fill="rgb(233,218,47)"/><text x="538.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="535" y="1924" width="2" height="15" fill="rgb(250,210,29)"/><text x="538.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="535" y="1940" width="2" height="15" fill="rgb(232,7,21)"/><text x="538.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="535" y="1956" width="2" height="15" fill="rgb(215,222,34)"/><text x="538.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="535" y="1972" width="2" height="15" fill="rgb(222,203,44)"/><text x="538.00" y="1982.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="535" y="1988" width="2" height="15" fill="rgb(234,113,3)"/><text x="538.00" y="1998.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="535" y="2004" width="2" height="15" fill="rgb(206,96,24)"/><text x="538.00" y="2014.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.23%)</title><rect x="537" y="1108" width="3" height="15" fill="rgb(222,94,50)"/><text x="540.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="537" y="1124" width="3" height="15" fill="rgb(220,35,7)"/><text x="540.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="537" y="1140" width="3" height="15" fill="rgb(231,8,6)"/><text x="540.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="537" y="1156" width="3" height="15" fill="rgb(239,25,20)"/><text x="540.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="537" y="1172" width="3" height="15" fill="rgb(235,167,19)"/><text x="540.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="537" y="1188" width="3" height="15" fill="rgb(248,148,39)"/><text x="540.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.23%)</title><rect x="537" y="1204" width="3" height="15" fill="rgb(231,187,0)"/><text x="540.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="537" y="1220" width="3" height="15" fill="rgb(214,19,2)"/><text x="540.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="537" y="1236" width="3" height="15" fill="rgb(224,175,4)"/><text x="540.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="537" y="1252" width="3" height="15" fill="rgb(254,0,10)"/><text x="540.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="537" y="1268" width="3" height="15" fill="rgb(252,152,26)"/><text x="540.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="537" y="1284" width="3" height="15" fill="rgb(223,37,39)"/><text x="540.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.23%)</title><rect x="537" y="1300" width="3" height="15" fill="rgb(235,103,48)"/><text x="540.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.23%)</title><rect x="537" y="1316" width="3" height="15" fill="rgb(213,199,12)"/><text x="540.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.23%)</title><rect x="537" y="1332" width="3" height="15" fill="rgb(236,109,6)"/><text x="540.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.23%)</title><rect x="537" y="1348" width="3" height="15" fill="rgb(218,23,4)"/><text x="540.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.23%)</title><rect x="537" y="1364" width="3" height="15" fill="rgb(249,70,26)"/><text x="540.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:589) (1 samples, 0.23%)</title><rect x="537" y="1380" width="3" height="15" fill="rgb(205,103,14)"/><text x="540.00" y="1390.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.23%)</title><rect x="537" y="1396" width="3" height="15" fill="rgb(249,170,34)"/><text x="540.00" y="1406.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.23%)</title><rect x="540" y="1556" width="3" height="15" fill="rgb(226,199,51)"/><text x="543.00" y="1566.50"></text></g><g><title>new_context (jinja2/runtime.py:77) (1 samples, 0.23%)</title><rect x="540" y="1572" width="3" height="15" fill="rgb(205,156,22)"/><text x="543.00" y="1582.50"></text></g><g><title>__init__ (jinja2/runtime.py:168) (1 samples, 0.23%)</title><rect x="540" y="1588" width="3" height="15" fill="rgb(213,187,15)"/><text x="543.00" y="1598.50"></text></g><g><title>&lt;lambda&gt; (jinja2/_compat.py:29) (1 samples, 0.23%)</title><rect x="540" y="1604" width="3" height="15" fill="rgb(214,41,51)"/><text x="543.00" y="1614.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.23%)</title><rect x="543" y="1604" width="2" height="15" fill="rgb(236,87,18)"/><text x="546.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="543" y="1620" width="2" height="15" fill="rgb(219,158,50)"/><text x="546.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="543" y="1636" width="2" height="15" fill="rgb(216,213,4)"/><text x="546.00" y="1646.50"></text></g><g><title>pybind11::detail::argument_loader&lt;pybind11::object, pybind11::object&gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; [clone .constprop.1302] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="543" y="1652" width="2" height="15" fill="rgb(252,137,12)"/><text x="546.00" y="1662.50"></text></g><g><title>root (&lt;template&gt;:100) (2 samples, 0.46%)</title><rect x="543" y="1572" width="5" height="15" fill="rgb(251,223,44)"/><text x="546.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.46%)</title><rect x="543" y="1588" width="5" height="15" fill="rgb(226,45,15)"/><text x="546.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.23%)</title><rect x="545" y="1604" width="3" height="15" fill="rgb(235,167,9)"/><text x="548.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="545" y="1620" width="3" height="15" fill="rgb(225,122,11)"/><text x="548.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}, onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter const*, &gt;(pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}&amp;&amp;, onnx::OpSchema::FormalParameterOption (*)(onnx::OpSchema::FormalParameter const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="545" y="1636" width="3" height="15" fill="rgb(210,68,50)"/><text x="548.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="545" y="1652" width="3" height="15" fill="rgb(250,110,54)"/><text x="548.00" y="1662.50"></text></g><g><title>std::_Hashtable&lt;void const*, std::pair&lt;void const* const, pybind11::detail::instance*&gt;, std::allocator&lt;std::pair&lt;void const* const, pybind11::detail::instance*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="545" y="1668" width="3" height="15" fill="rgb(244,55,36)"/><text x="548.00" y="1678.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 0.92%)</title><rect x="540" y="1460" width="11" height="15" fill="rgb(205,94,30)"/><text x="543.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 0.92%)</title><rect x="540" y="1476" width="11" height="15" fill="rgb(249,216,22)"/><text x="543.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (4 samples, 0.92%)</title><rect x="540" y="1492" width="11" height="15" fill="rgb(247,146,49)"/><text x="543.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (4 samples, 0.92%)</title><rect x="540" y="1508" width="11" height="15" fill="rgb(208,51,53)"/><text x="543.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (4 samples, 0.92%)</title><rect x="540" y="1524" width="11" height="15" fill="rgb(227,182,31)"/><text x="543.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (4 samples, 0.92%)</title><rect x="540" y="1540" width="11" height="15" fill="rgb(234,84,6)"/><text x="543.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.69%)</title><rect x="543" y="1556" width="8" height="15" fill="rgb(227,205,50)"/><text x="546.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.23%)</title><rect x="548" y="1572" width="3" height="15" fill="rgb(220,138,51)"/><text x="551.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.23%)</title><rect x="548" y="1588" width="3" height="15" fill="rgb(206,28,8)"/><text x="551.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.23%)</title><rect x="548" y="1604" width="3" height="15" fill="rgb(242,200,22)"/><text x="551.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.23%)</title><rect x="548" y="1620" width="3" height="15" fill="rgb(241,73,48)"/><text x="551.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.23%)</title><rect x="548" y="1636" width="3" height="15" fill="rgb(235,63,23)"/><text x="551.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="548" y="1652" width="3" height="15" fill="rgb(230,63,40)"/><text x="551.00" y="1662.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:4) (16 samples, 3.67%)</title><rect x="510" y="52" width="43" height="15" fill="rgb(220,223,54)"/><text x="513.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 3.67%)</title><rect x="510" y="68" width="43" height="15" fill="rgb(239,22,24)"/><text x="513.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 3.67%)</title><rect x="510" y="84" width="43" height="15" fill="rgb(233,162,52)"/><text x="513.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 3.67%)</title><rect x="510" y="100" width="43" height="15" fill="rgb(207,160,29)"/><text x="513.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 3.67%)</title><rect x="510" y="116" width="43" height="15" fill="rgb(207,21,25)"/><text x="513.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 3.67%)</title><rect x="510" y="132" width="43" height="15" fill="rgb(243,64,46)"/><text x="513.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:7) (9 samples, 2.06%)</title><rect x="529" y="148" width="24" height="15" fill="rgb(239,182,37)"/><text x="532.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.06%)</title><rect x="529" y="164" width="24" height="15" fill="rgb(221,3,44)"/><text x="532.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.06%)</title><rect x="529" y="180" width="24" height="15" fill="rgb(246,119,7)"/><text x="532.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.06%)</title><rect x="529" y="196" width="24" height="15" fill="rgb(246,101,54)"/><text x="532.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.06%)</title><rect x="529" y="212" width="24" height="15" fill="rgb(223,131,52)"/><text x="532.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.06%)</title><rect x="529" y="228" width="24" height="15" fill="rgb(213,38,39)"/><text x="532.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.61%)</title><rect x="535" y="244" width="18" height="15" fill="rgb(233,225,10)"/><text x="538.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.61%)</title><rect x="535" y="260" width="18" height="15" fill="rgb(248,173,45)"/><text x="538.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.61%)</title><rect x="535" y="276" width="18" height="15" fill="rgb(241,107,8)"/><text x="538.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.61%)</title><rect x="535" y="292" width="18" height="15" fill="rgb(205,63,28)"/><text x="538.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.61%)</title><rect x="535" y="308" width="18" height="15" fill="rgb(223,5,38)"/><text x="538.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.61%)</title><rect x="535" y="324" width="18" height="15" fill="rgb(206,9,47)"/><text x="538.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.61%)</title><rect x="535" y="340" width="18" height="15" fill="rgb(248,161,5)"/><text x="538.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.61%)</title><rect x="535" y="356" width="18" height="15" fill="rgb(210,117,3)"/><text x="538.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.61%)</title><rect x="535" y="372" width="18" height="15" fill="rgb(245,83,32)"/><text x="538.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.61%)</title><rect x="535" y="388" width="18" height="15" fill="rgb(231,67,26)"/><text x="538.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.61%)</title><rect x="535" y="404" width="18" height="15" fill="rgb(241,182,44)"/><text x="538.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.61%)</title><rect x="535" y="420" width="18" height="15" fill="rgb(219,2,23)"/><text x="538.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 1.38%)</title><rect x="537" y="436" width="16" height="15" fill="rgb(209,41,12)"/><text x="540.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="452" width="16" height="15" fill="rgb(241,198,54)"/><text x="540.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.38%)</title><rect x="537" y="468" width="16" height="15" fill="rgb(250,21,24)"/><text x="540.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="484" width="16" height="15" fill="rgb(242,28,21)"/><text x="540.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="500" width="16" height="15" fill="rgb(246,130,2)"/><text x="540.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.38%)</title><rect x="537" y="516" width="16" height="15" fill="rgb(245,210,21)"/><text x="540.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.38%)</title><rect x="537" y="532" width="16" height="15" fill="rgb(218,31,51)"/><text x="540.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.38%)</title><rect x="537" y="548" width="16" height="15" fill="rgb(236,228,43)"/><text x="540.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="564" width="16" height="15" fill="rgb(248,5,36)"/><text x="540.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 1.38%)</title><rect x="537" y="580" width="16" height="15" fill="rgb(253,123,22)"/><text x="540.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="596" width="16" height="15" fill="rgb(212,208,29)"/><text x="540.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.38%)</title><rect x="537" y="612" width="16" height="15" fill="rgb(218,184,53)"/><text x="540.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.38%)</title><rect x="537" y="628" width="16" height="15" fill="rgb(238,13,47)"/><text x="540.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.38%)</title><rect x="537" y="644" width="16" height="15" fill="rgb(236,135,35)"/><text x="540.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="660" width="16" height="15" fill="rgb(249,158,54)"/><text x="540.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 1.38%)</title><rect x="537" y="676" width="16" height="15" fill="rgb(248,209,8)"/><text x="540.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="692" width="16" height="15" fill="rgb(207,25,18)"/><text x="540.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.38%)</title><rect x="537" y="708" width="16" height="15" fill="rgb(235,63,22)"/><text x="540.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.38%)</title><rect x="537" y="724" width="16" height="15" fill="rgb(226,228,5)"/><text x="540.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.38%)</title><rect x="537" y="740" width="16" height="15" fill="rgb(248,121,45)"/><text x="540.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="756" width="16" height="15" fill="rgb(212,67,6)"/><text x="540.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 1.38%)</title><rect x="537" y="772" width="16" height="15" fill="rgb(235,80,51)"/><text x="540.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="788" width="16" height="15" fill="rgb(240,37,49)"/><text x="540.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.38%)</title><rect x="537" y="804" width="16" height="15" fill="rgb(234,229,44)"/><text x="540.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.38%)</title><rect x="537" y="820" width="16" height="15" fill="rgb(229,10,35)"/><text x="540.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.38%)</title><rect x="537" y="836" width="16" height="15" fill="rgb(211,142,18)"/><text x="540.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="852" width="16" height="15" fill="rgb(247,59,43)"/><text x="540.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 1.38%)</title><rect x="537" y="868" width="16" height="15" fill="rgb(240,160,15)"/><text x="540.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="884" width="16" height="15" fill="rgb(224,98,0)"/><text x="540.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.38%)</title><rect x="537" y="900" width="16" height="15" fill="rgb(234,183,19)"/><text x="540.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="916" width="16" height="15" fill="rgb(205,150,10)"/><text x="540.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="932" width="16" height="15" fill="rgb(219,179,17)"/><text x="540.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.38%)</title><rect x="537" y="948" width="16" height="15" fill="rgb(240,97,38)"/><text x="540.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.38%)</title><rect x="537" y="964" width="16" height="15" fill="rgb(253,72,26)"/><text x="540.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.38%)</title><rect x="537" y="980" width="16" height="15" fill="rgb(253,76,19)"/><text x="540.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="996" width="16" height="15" fill="rgb(239,122,42)"/><text x="540.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 1.38%)</title><rect x="537" y="1012" width="16" height="15" fill="rgb(245,20,54)"/><text x="540.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.38%)</title><rect x="537" y="1028" width="16" height="15" fill="rgb(248,42,50)"/><text x="540.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.38%)</title><rect x="537" y="1044" width="16" height="15" fill="rgb(205,92,21)"/><text x="540.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.38%)</title><rect x="537" y="1060" width="16" height="15" fill="rgb(253,35,38)"/><text x="540.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.38%)</title><rect x="537" y="1076" width="16" height="15" fill="rgb(250,167,1)"/><text x="540.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.38%)</title><rect x="537" y="1092" width="16" height="15" fill="rgb(229,77,43)"/><text x="540.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 1.15%)</title><rect x="540" y="1108" width="13" height="15" fill="rgb(246,85,0)"/><text x="543.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.15%)</title><rect x="540" y="1124" width="13" height="15" fill="rgb(238,1,19)"/><text x="543.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="540" y="1140" width="13" height="15" fill="rgb(212,109,38)"/><text x="543.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.15%)</title><rect x="540" y="1156" width="13" height="15" fill="rgb(226,159,9)"/><text x="543.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.15%)</title><rect x="540" y="1172" width="13" height="15" fill="rgb(224,148,1)"/><text x="543.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.15%)</title><rect x="540" y="1188" width="13" height="15" fill="rgb(254,95,50)"/><text x="543.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.15%)</title><rect x="540" y="1204" width="13" height="15" fill="rgb(234,227,46)"/><text x="543.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="540" y="1220" width="13" height="15" fill="rgb(226,178,41)"/><text x="543.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (5 samples, 1.15%)</title><rect x="540" y="1236" width="13" height="15" fill="rgb(239,90,39)"/><text x="543.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.15%)</title><rect x="540" y="1252" width="13" height="15" fill="rgb(211,207,34)"/><text x="543.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="540" y="1268" width="13" height="15" fill="rgb(209,36,12)"/><text x="543.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.15%)</title><rect x="540" y="1284" width="13" height="15" fill="rgb(248,81,41)"/><text x="543.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.15%)</title><rect x="540" y="1300" width="13" height="15" fill="rgb(227,96,40)"/><text x="543.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.15%)</title><rect x="540" y="1316" width="13" height="15" fill="rgb(250,206,54)"/><text x="543.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.15%)</title><rect x="540" y="1332" width="13" height="15" fill="rgb(237,210,39)"/><text x="543.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="540" y="1348" width="13" height="15" fill="rgb(208,127,45)"/><text x="543.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (5 samples, 1.15%)</title><rect x="540" y="1364" width="13" height="15" fill="rgb(252,163,42)"/><text x="543.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.15%)</title><rect x="540" y="1380" width="13" height="15" fill="rgb(247,114,29)"/><text x="543.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.15%)</title><rect x="540" y="1396" width="13" height="15" fill="rgb(254,116,9)"/><text x="543.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.15%)</title><rect x="540" y="1412" width="13" height="15" fill="rgb(233,190,30)"/><text x="543.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.15%)</title><rect x="540" y="1428" width="13" height="15" fill="rgb(234,69,4)"/><text x="543.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.15%)</title><rect x="540" y="1444" width="13" height="15" fill="rgb(228,0,4)"/><text x="543.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.23%)</title><rect x="551" y="1460" width="2" height="15" fill="rgb(254,48,15)"/><text x="554.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="551" y="1476" width="2" height="15" fill="rgb(242,59,52)"/><text x="554.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="551" y="1492" width="2" height="15" fill="rgb(228,157,40)"/><text x="554.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="551" y="1508" width="2" height="15" fill="rgb(239,116,20)"/><text x="554.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="551" y="1524" width="2" height="15" fill="rgb(234,211,20)"/><text x="554.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="551" y="1540" width="2" height="15" fill="rgb(249,191,38)"/><text x="554.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.23%)</title><rect x="551" y="1556" width="2" height="15" fill="rgb(217,221,52)"/><text x="554.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.23%)</title><rect x="551" y="1572" width="2" height="15" fill="rgb(249,130,22)"/><text x="554.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="551" y="1588" width="2" height="15" fill="rgb(249,2,32)"/><text x="554.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="551" y="1604" width="2" height="15" fill="rgb(252,99,1)"/><text x="554.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="551" y="1620" width="2" height="15" fill="rgb(215,123,18)"/><text x="554.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="551" y="1636" width="2" height="15" fill="rgb(225,4,25)"/><text x="554.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="551" y="1652" width="2" height="15" fill="rgb(215,209,9)"/><text x="554.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.23%)</title><rect x="551" y="1668" width="2" height="15" fill="rgb(216,123,36)"/><text x="554.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.23%)</title><rect x="551" y="1684" width="2" height="15" fill="rgb(218,60,4)"/><text x="554.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="551" y="1700" width="2" height="15" fill="rgb(228,37,16)"/><text x="554.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="551" y="1716" width="2" height="15" fill="rgb(237,197,1)"/><text x="554.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="551" y="1732" width="2" height="15" fill="rgb(232,44,30)"/><text x="554.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="551" y="1748" width="2" height="15" fill="rgb(241,207,14)"/><text x="554.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="551" y="1764" width="2" height="15" fill="rgb(207,159,35)"/><text x="554.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.23%)</title><rect x="551" y="1780" width="2" height="15" fill="rgb(249,90,45)"/><text x="554.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="551" y="1796" width="2" height="15" fill="rgb(212,13,37)"/><text x="554.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="551" y="1812" width="2" height="15" fill="rgb(209,30,38)"/><text x="554.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="551" y="1828" width="2" height="15" fill="rgb(239,221,5)"/><text x="554.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="551" y="1844" width="2" height="15" fill="rgb(227,75,33)"/><text x="554.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="551" y="1860" width="2" height="15" fill="rgb(218,143,27)"/><text x="554.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.23%)</title><rect x="551" y="1876" width="2" height="15" fill="rgb(227,229,21)"/><text x="554.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="551" y="1892" width="2" height="15" fill="rgb(218,158,29)"/><text x="554.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="551" y="1908" width="2" height="15" fill="rgb(234,80,13)"/><text x="554.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="551" y="1924" width="2" height="15" fill="rgb(250,33,50)"/><text x="554.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="551" y="1940" width="2" height="15" fill="rgb(235,89,34)"/><text x="554.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="551" y="1956" width="2" height="15" fill="rgb(217,181,18)"/><text x="554.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:42) (1 samples, 0.23%)</title><rect x="551" y="1972" width="2" height="15" fill="rgb(237,108,41)"/><text x="554.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="551" y="1988" width="2" height="15" fill="rgb(248,57,35)"/><text x="554.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="551" y="2004" width="2" height="15" fill="rgb(220,105,10)"/><text x="554.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="551" y="2020" width="2" height="15" fill="rgb(217,26,6)"/><text x="554.00" y="2030.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.23%)</title><rect x="551" y="2036" width="2" height="15" fill="rgb(245,49,36)"/><text x="554.00" y="2046.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:111) (1 samples, 0.23%)</title><rect x="551" y="2052" width="2" height="15" fill="rgb(253,60,0)"/><text x="554.00" y="2062.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.23%)</title><rect x="553" y="180" width="3" height="15" fill="rgb(243,52,37)"/><text x="556.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.23%)</title><rect x="553" y="196" width="3" height="15" fill="rgb(212,188,20)"/><text x="556.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.23%)</title><rect x="553" y="212" width="3" height="15" fill="rgb(239,107,47)"/><text x="556.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.23%)</title><rect x="553" y="228" width="3" height="15" fill="rgb(242,226,39)"/><text x="556.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="553" y="244" width="3" height="15" fill="rgb(232,202,27)"/><text x="556.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.23%)</title><rect x="553" y="260" width="3" height="15" fill="rgb(232,29,7)"/><text x="556.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.23%)</title><rect x="553" y="276" width="3" height="15" fill="rgb(210,133,24)"/><text x="556.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:61) (1 samples, 0.23%)</title><rect x="553" y="292" width="3" height="15" fill="rgb(239,36,50)"/><text x="556.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1204) (1 samples, 0.23%)</title><rect x="553" y="308" width="3" height="15" fill="rgb(252,155,39)"/><text x="556.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.23%)</title><rect x="556" y="180" width="3" height="15" fill="rgb(219,81,43)"/><text x="559.00" y="190.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:18) (3 samples, 0.69%)</title><rect x="553" y="100" width="9" height="15" fill="rgb(213,183,7)"/><text x="556.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.69%)</title><rect x="553" y="116" width="9" height="15" fill="rgb(235,213,28)"/><text x="556.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.69%)</title><rect x="553" y="132" width="9" height="15" fill="rgb(208,62,21)"/><text x="556.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.69%)</title><rect x="553" y="148" width="9" height="15" fill="rgb(234,48,35)"/><text x="556.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (3 samples, 0.69%)</title><rect x="553" y="164" width="9" height="15" fill="rgb(234,65,42)"/><text x="556.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.23%)</title><rect x="559" y="180" width="3" height="15" fill="rgb(230,118,49)"/><text x="562.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="562" y="116" width="2" height="15" fill="rgb(229,11,13)"/><text x="565.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="562" y="132" width="2" height="15" fill="rgb(226,76,47)"/><text x="565.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="562" y="148" width="2" height="15" fill="rgb(245,227,17)"/><text x="565.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.23%)</title><rect x="572" y="148" width="3" height="15" fill="rgb(246,60,42)"/><text x="575.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.23%)</title><rect x="575" y="164" width="3" height="15" fill="rgb(243,69,8)"/><text x="578.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.23%)</title><rect x="613" y="180" width="3" height="15" fill="rgb(216,204,46)"/><text x="616.00" y="190.50"></text></g><g><title>0x7f7a56f651ef (libc-2.29.so) (1 samples, 0.23%)</title><rect x="659" y="196" width="3" height="15" fill="rgb(206,33,12)"/><text x="662.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (19 samples, 4.36%)</title><rect x="616" y="180" width="51" height="15" fill="rgb(239,26,28)"/><text x="619.00" y="190.50">run (..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.46%)</title><rect x="662" y="196" width="5" height="15" fill="rgb(239,225,47)"/><text x="665.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:113) (1 samples, 0.23%)</title><rect x="710" y="196" width="3" height="15" fill="rgb(234,148,30)"/><text x="713.00" y="206.50"></text></g><g><title>prepare_index (mapping.c:492) (1 samples, 0.23%)</title><rect x="724" y="244" width="3" height="15" fill="rgb(227,215,14)"/><text x="727.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.46%)</title><rect x="724" y="228" width="5" height="15" fill="rgb(230,29,18)"/><text x="727.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.23%)</title><rect x="727" y="244" width="2" height="15" fill="rgb(225,184,50)"/><text x="730.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.23%)</title><rect x="727" y="260" width="2" height="15" fill="rgb(219,100,41)"/><text x="730.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:571) (1 samples, 0.23%)</title><rect x="727" y="276" width="2" height="15" fill="rgb(242,141,53)"/><text x="730.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.23%)</title><rect x="729" y="244" width="3" height="15" fill="rgb(252,180,14)"/><text x="732.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="729" y="260" width="3" height="15" fill="rgb(218,26,24)"/><text x="732.00" y="270.50"></text></g><g><title>0x7f7a56f45db0 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="729" y="276" width="3" height="15" fill="rgb(229,8,23)"/><text x="732.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2853) (1 samples, 0.23%)</title><rect x="732" y="244" width="3" height="15" fill="rgb(247,225,50)"/><text x="735.00" y="254.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="732" y="260" width="3" height="15" fill="rgb(224,97,45)"/><text x="735.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="732" y="276" width="3" height="15" fill="rgb(224,204,41)"/><text x="735.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.23%)</title><rect x="735" y="244" width="3" height="15" fill="rgb(237,34,53)"/><text x="738.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="735" y="260" width="3" height="15" fill="rgb(218,7,34)"/><text x="738.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.23%)</title><rect x="735" y="276" width="3" height="15" fill="rgb(229,189,53)"/><text x="738.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (4 samples, 0.92%)</title><rect x="729" y="228" width="11" height="15" fill="rgb(253,60,35)"/><text x="732.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.23%)</title><rect x="738" y="244" width="2" height="15" fill="rgb(235,81,36)"/><text x="741.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (7 samples, 1.61%)</title><rect x="724" y="212" width="19" height="15" fill="rgb(240,9,54)"/><text x="727.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.23%)</title><rect x="740" y="228" width="3" height="15" fill="rgb(210,77,12)"/><text x="743.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1611) (1 samples, 0.23%)</title><rect x="740" y="244" width="3" height="15" fill="rgb(240,108,43)"/><text x="743.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.23%)</title><rect x="740" y="260" width="3" height="15" fill="rgb(216,124,35)"/><text x="743.00" y="270.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1969) (1 samples, 0.23%)</title><rect x="740" y="276" width="3" height="15" fill="rgb(245,38,48)"/><text x="743.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.23%)</title><rect x="743" y="212" width="3" height="15" fill="rgb(230,186,20)"/><text x="746.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.23%)</title><rect x="743" y="228" width="3" height="15" fill="rgb(214,139,37)"/><text x="746.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.23%)</title><rect x="743" y="244" width="3" height="15" fill="rgb(217,37,46)"/><text x="746.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.23%)</title><rect x="743" y="260" width="3" height="15" fill="rgb(224,35,20)"/><text x="746.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.23%)</title><rect x="743" y="276" width="3" height="15" fill="rgb(210,76,21)"/><text x="746.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.23%)</title><rect x="743" y="292" width="3" height="15" fill="rgb(253,152,33)"/><text x="746.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.23%)</title><rect x="743" y="308" width="3" height="15" fill="rgb(232,19,5)"/><text x="746.00" y="318.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.23%)</title><rect x="754" y="244" width="2" height="15" fill="rgb(214,59,41)"/><text x="757.00" y="254.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.23%)</title><rect x="756" y="276" width="3" height="15" fill="rgb(235,201,7)"/><text x="759.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:720) (1 samples, 0.23%)</title><rect x="756" y="292" width="3" height="15" fill="rgb(225,145,18)"/><text x="759.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.46%)</title><rect x="759" y="276" width="6" height="15" fill="rgb(254,51,41)"/><text x="762.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="762" y="292" width="3" height="15" fill="rgb(252,207,1)"/><text x="765.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (8 samples, 1.83%)</title><rect x="746" y="212" width="21" height="15" fill="rgb(240,143,47)"/><text x="749.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (7 samples, 1.61%)</title><rect x="748" y="228" width="19" height="15" fill="rgb(208,215,29)"/><text x="751.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (4 samples, 0.92%)</title><rect x="756" y="244" width="11" height="15" fill="rgb(212,186,27)"/><text x="759.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 0.92%)</title><rect x="756" y="260" width="11" height="15" fill="rgb(207,27,25)"/><text x="759.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.23%)</title><rect x="765" y="276" width="2" height="15" fill="rgb(227,90,11)"/><text x="768.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.23%)</title><rect x="765" y="292" width="2" height="15" fill="rgb(209,216,47)"/><text x="768.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.23%)</title><rect x="765" y="308" width="2" height="15" fill="rgb(236,32,13)"/><text x="768.00" y="318.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:141) (1 samples, 0.23%)</title><rect x="767" y="276" width="3" height="15" fill="rgb(253,51,43)"/><text x="770.00" y="286.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.46%)</title><rect x="767" y="228" width="6" height="15" fill="rgb(212,29,37)"/><text x="770.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.46%)</title><rect x="767" y="244" width="6" height="15" fill="rgb(254,155,14)"/><text x="770.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (2 samples, 0.46%)</title><rect x="767" y="260" width="6" height="15" fill="rgb(235,190,17)"/><text x="770.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.23%)</title><rect x="770" y="276" width="3" height="15" fill="rgb(218,90,29)"/><text x="773.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="770" y="292" width="3" height="15" fill="rgb(225,155,40)"/><text x="773.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="770" y="308" width="3" height="15" fill="rgb(227,85,44)"/><text x="773.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.69%)</title><rect x="767" y="212" width="8" height="15" fill="rgb(242,143,25)"/><text x="770.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.23%)</title><rect x="773" y="228" width="2" height="15" fill="rgb(231,38,14)"/><text x="776.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.23%)</title><rect x="773" y="244" width="2" height="15" fill="rgb(230,82,41)"/><text x="776.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:284) (1 samples, 0.23%)</title><rect x="773" y="260" width="2" height="15" fill="rgb(220,11,6)"/><text x="776.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="778" y="260" width="3" height="15" fill="rgb(234,184,2)"/><text x="781.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.23%)</title><rect x="778" y="276" width="3" height="15" fill="rgb(209,73,49)"/><text x="781.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.23%)</title><rect x="778" y="292" width="3" height="15" fill="rgb(217,141,43)"/><text x="781.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="778" y="308" width="3" height="15" fill="rgb(253,54,19)"/><text x="781.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.23%)</title><rect x="778" y="324" width="3" height="15" fill="rgb(213,211,43)"/><text x="781.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="781" y="260" width="3" height="15" fill="rgb(226,30,21)"/><text x="784.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.23%)</title><rect x="781" y="276" width="3" height="15" fill="rgb(234,194,39)"/><text x="784.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.23%)</title><rect x="781" y="292" width="3" height="15" fill="rgb(217,174,14)"/><text x="784.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1711) (1 samples, 0.23%)</title><rect x="781" y="308" width="3" height="15" fill="rgb(241,113,54)"/><text x="784.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.69%)</title><rect x="778" y="244" width="8" height="15" fill="rgb(208,193,44)"/><text x="781.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.23%)</title><rect x="784" y="260" width="2" height="15" fill="rgb(230,86,12)"/><text x="787.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.23%)</title><rect x="784" y="276" width="2" height="15" fill="rgb(220,167,23)"/><text x="787.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.23%)</title><rect x="784" y="292" width="2" height="15" fill="rgb(217,203,26)"/><text x="787.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.23%)</title><rect x="786" y="244" width="3" height="15" fill="rgb(212,42,2)"/><text x="789.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="786" y="260" width="3" height="15" fill="rgb(245,195,24)"/><text x="789.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.23%)</title><rect x="786" y="276" width="3" height="15" fill="rgb(249,17,4)"/><text x="789.00" y="286.50"></text></g><g><title>array_add (number.c:330) (5 samples, 1.15%)</title><rect x="778" y="228" width="14" height="15" fill="rgb(253,52,0)"/><text x="781.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4798) (1 samples, 0.23%)</title><rect x="789" y="244" width="3" height="15" fill="rgb(219,112,51)"/><text x="792.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (7 samples, 1.61%)</title><rect x="775" y="212" width="19" height="15" fill="rgb(239,65,45)"/><text x="778.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="792" y="228" width="2" height="15" fill="rgb(243,85,36)"/><text x="795.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="792" y="244" width="2" height="15" fill="rgb(238,145,8)"/><text x="795.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="792" y="260" width="2" height="15" fill="rgb(245,97,14)"/><text x="795.00" y="270.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.23%)</title><rect x="794" y="228" width="3" height="15" fill="rgb(218,181,53)"/><text x="797.00" y="238.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.23%)</title><rect x="797" y="228" width="3" height="15" fill="rgb(220,6,27)"/><text x="800.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (33 samples, 7.57%)</title><rect x="713" y="196" width="89" height="15" fill="rgb(234,7,48)"/><text x="716.00" y="206.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 0.69%)</title><rect x="794" y="212" width="8" height="15" fill="rgb(224,204,35)"/><text x="797.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:108) (1 samples, 0.23%)</title><rect x="800" y="228" width="2" height="15" fill="rgb(216,197,37)"/><text x="803.00" y="238.50"></text></g><g><title>0x7f7a57022130 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="808" y="324" width="3" height="15" fill="rgb(208,195,44)"/><text x="811.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="811" y="388" width="2" height="15" fill="rgb(245,156,19)"/><text x="814.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="811" y="404" width="2" height="15" fill="rgb(253,52,37)"/><text x="814.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.23%)</title><rect x="813" y="404" width="3" height="15" fill="rgb(233,52,42)"/><text x="816.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.23%)</title><rect x="813" y="420" width="3" height="15" fill="rgb(205,149,37)"/><text x="816.00" y="430.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (5 samples, 1.15%)</title><rect x="805" y="260" width="14" height="15" fill="rgb(211,118,35)"/><text x="808.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 1.15%)</title><rect x="805" y="276" width="14" height="15" fill="rgb(249,3,46)"/><text x="808.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.15%)</title><rect x="805" y="292" width="14" height="15" fill="rgb(231,192,4)"/><text x="808.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 1.15%)</title><rect x="805" y="308" width="14" height="15" fill="rgb(213,84,53)"/><text x="808.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.69%)</title><rect x="811" y="324" width="8" height="15" fill="rgb(246,134,9)"/><text x="814.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 0.69%)</title><rect x="811" y="340" width="8" height="15" fill="rgb(217,77,48)"/><text x="814.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (3 samples, 0.69%)</title><rect x="811" y="356" width="8" height="15" fill="rgb(235,160,43)"/><text x="814.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.69%)</title><rect x="811" y="372" width="8" height="15" fill="rgb(210,122,1)"/><text x="814.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (2 samples, 0.46%)</title><rect x="813" y="388" width="6" height="15" fill="rgb(206,33,31)"/><text x="816.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.23%)</title><rect x="816" y="404" width="3" height="15" fill="rgb(209,208,29)"/><text x="819.00" y="414.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.23%)</title><rect x="816" y="420" width="3" height="15" fill="rgb(249,90,29)"/><text x="819.00" y="430.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.23%)</title><rect x="816" y="436" width="3" height="15" fill="rgb(230,155,41)"/><text x="819.00" y="446.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.23%)</title><rect x="819" y="260" width="2" height="15" fill="rgb(236,26,46)"/><text x="822.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="819" y="276" width="2" height="15" fill="rgb(215,16,5)"/><text x="822.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="819" y="292" width="2" height="15" fill="rgb(206,67,54)"/><text x="822.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.23%)</title><rect x="819" y="308" width="2" height="15" fill="rgb(218,14,13)"/><text x="822.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.23%)</title><rect x="819" y="324" width="2" height="15" fill="rgb(230,45,49)"/><text x="822.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.23%)</title><rect x="819" y="340" width="2" height="15" fill="rgb(209,163,26)"/><text x="822.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.23%)</title><rect x="819" y="356" width="2" height="15" fill="rgb(239,122,8)"/><text x="822.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.23%)</title><rect x="819" y="372" width="2" height="15" fill="rgb(233,182,44)"/><text x="822.00" y="382.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.23%)</title><rect x="821" y="276" width="3" height="15" fill="rgb(211,74,25)"/><text x="824.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.23%)</title><rect x="821" y="292" width="3" height="15" fill="rgb(211,89,33)"/><text x="824.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.23%)</title><rect x="821" y="308" width="3" height="15" fill="rgb(246,74,25)"/><text x="824.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.23%)</title><rect x="821" y="324" width="3" height="15" fill="rgb(212,70,16)"/><text x="824.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.23%)</title><rect x="821" y="340" width="3" height="15" fill="rgb(244,109,8)"/><text x="824.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.23%)</title><rect x="821" y="356" width="3" height="15" fill="rgb(215,89,3)"/><text x="824.00" y="366.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.23%)</title><rect x="821" y="372" width="3" height="15" fill="rgb(243,174,18)"/><text x="824.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.23%)</title><rect x="821" y="388" width="3" height="15" fill="rgb(213,79,42)"/><text x="824.00" y="398.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (2 samples, 0.46%)</title><rect x="821" y="260" width="6" height="15" fill="rgb(232,129,37)"/><text x="824.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.23%)</title><rect x="824" y="276" width="3" height="15" fill="rgb(212,74,38)"/><text x="827.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.23%)</title><rect x="824" y="292" width="3" height="15" fill="rgb(228,74,0)"/><text x="827.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.23%)</title><rect x="824" y="308" width="3" height="15" fill="rgb(243,34,6)"/><text x="827.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.23%)</title><rect x="824" y="324" width="3" height="15" fill="rgb(222,195,39)"/><text x="827.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="824" y="340" width="3" height="15" fill="rgb(211,164,24)"/><text x="827.00" y="350.50"></text></g><g><title>0x7f7a56f64d50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="824" y="356" width="3" height="15" fill="rgb(210,160,39)"/><text x="827.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (10 samples, 2.29%)</title><rect x="802" y="196" width="28" height="15" fill="rgb(240,217,48)"/><text x="805.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (10 samples, 2.29%)</title><rect x="802" y="212" width="28" height="15" fill="rgb(211,97,54)"/><text x="805.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (10 samples, 2.29%)</title><rect x="802" y="228" width="28" height="15" fill="rgb(244,112,49)"/><text x="805.00" y="238.50">_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (10 samples, 2.29%)</title><rect x="802" y="244" width="28" height="15" fill="rgb(227,10,36)"/><text x="805.00" y="254.50">_..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="827" y="260" width="3" height="15" fill="rgb(239,205,54)"/><text x="830.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="827" y="276" width="3" height="15" fill="rgb(241,149,43)"/><text x="830.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="827" y="292" width="3" height="15" fill="rgb(230,207,43)"/><text x="830.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:18) (1 samples, 0.23%)</title><rect x="838" y="228" width="2" height="15" fill="rgb(251,104,38)"/><text x="841.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.23%)</title><rect x="840" y="244" width="3" height="15" fill="rgb(241,69,37)"/><text x="843.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="840" y="260" width="3" height="15" fill="rgb(210,69,26)"/><text x="843.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.23%)</title><rect x="840" y="276" width="3" height="15" fill="rgb(229,66,17)"/><text x="843.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.23%)</title><rect x="840" y="292" width="3" height="15" fill="rgb(228,102,31)"/><text x="843.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="840" y="308" width="3" height="15" fill="rgb(226,15,2)"/><text x="843.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="843" y="260" width="3" height="15" fill="rgb(232,75,34)"/><text x="846.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.23%)</title><rect x="843" y="276" width="3" height="15" fill="rgb(226,8,33)"/><text x="846.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="846" y="260" width="2" height="15" fill="rgb(245,146,34)"/><text x="849.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2049) (1 samples, 0.23%)</title><rect x="846" y="276" width="2" height="15" fill="rgb(227,100,46)"/><text x="849.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (4 samples, 0.92%)</title><rect x="840" y="228" width="11" height="15" fill="rgb(217,44,8)"/><text x="843.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.69%)</title><rect x="843" y="244" width="8" height="15" fill="rgb(227,101,20)"/><text x="846.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.23%)</title><rect x="848" y="260" width="3" height="15" fill="rgb(207,82,20)"/><text x="851.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.23%)</title><rect x="848" y="276" width="3" height="15" fill="rgb(248,43,19)"/><text x="851.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="851" y="260" width="3" height="15" fill="rgb(224,111,43)"/><text x="854.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.23%)</title><rect x="851" y="276" width="3" height="15" fill="rgb(223,7,8)"/><text x="854.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.23%)</title><rect x="851" y="292" width="3" height="15" fill="rgb(239,130,2)"/><text x="854.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.23%)</title><rect x="851" y="308" width="3" height="15" fill="rgb(236,163,48)"/><text x="854.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (2 samples, 0.46%)</title><rect x="851" y="228" width="6" height="15" fill="rgb(232,199,19)"/><text x="854.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.46%)</title><rect x="851" y="244" width="6" height="15" fill="rgb(220,81,52)"/><text x="854.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="854" y="260" width="3" height="15" fill="rgb(245,17,8)"/><text x="857.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.23%)</title><rect x="854" y="276" width="3" height="15" fill="rgb(227,46,34)"/><text x="857.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.23%)</title><rect x="854" y="292" width="3" height="15" fill="rgb(207,5,8)"/><text x="857.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.23%)</title><rect x="854" y="308" width="3" height="15" fill="rgb(216,115,11)"/><text x="857.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.23%)</title><rect x="854" y="324" width="3" height="15" fill="rgb(225,125,26)"/><text x="857.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (1 samples, 0.23%)</title><rect x="857" y="228" width="2" height="15" fill="rgb(235,64,22)"/><text x="860.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="857" y="244" width="2" height="15" fill="rgb(221,193,16)"/><text x="860.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="857" y="260" width="2" height="15" fill="rgb(237,227,39)"/><text x="860.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.23%)</title><rect x="857" y="276" width="2" height="15" fill="rgb(234,179,44)"/><text x="860.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.23%)</title><rect x="857" y="292" width="2" height="15" fill="rgb(214,228,30)"/><text x="860.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:31) (1 samples, 0.23%)</title><rect x="859" y="228" width="3" height="15" fill="rgb(220,18,34)"/><text x="862.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.23%)</title><rect x="865" y="244" width="2" height="15" fill="rgb(214,207,14)"/><text x="868.00" y="254.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py:2042) (1 samples, 0.23%)</title><rect x="865" y="260" width="2" height="15" fill="rgb(245,89,9)"/><text x="868.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.23%)</title><rect x="867" y="260" width="3" height="15" fill="rgb(242,108,54)"/><text x="870.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.23%)</title><rect x="870" y="260" width="3" height="15" fill="rgb(251,78,42)"/><text x="873.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:77) (1 samples, 0.23%)</title><rect x="870" y="276" width="3" height="15" fill="rgb(214,1,43)"/><text x="873.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.23%)</title><rect x="878" y="308" width="3" height="15" fill="rgb(243,212,17)"/><text x="881.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (4 samples, 0.92%)</title><rect x="873" y="292" width="11" height="15" fill="rgb(247,223,13)"/><text x="876.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.23%)</title><rect x="881" y="308" width="3" height="15" fill="rgb(213,18,43)"/><text x="884.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.23%)</title><rect x="884" y="324" width="2" height="15" fill="rgb(248,226,52)"/><text x="887.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.23%)</title><rect x="886" y="324" width="3" height="15" fill="rgb(218,60,18)"/><text x="889.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.23%)</title><rect x="886" y="340" width="3" height="15" fill="rgb(243,146,46)"/><text x="889.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.23%)</title><rect x="886" y="356" width="3" height="15" fill="rgb(210,163,13)"/><text x="889.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.23%)</title><rect x="889" y="356" width="3" height="15" fill="rgb(241,192,47)"/><text x="892.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.23%)</title><rect x="889" y="372" width="3" height="15" fill="rgb(212,137,28)"/><text x="892.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.23%)</title><rect x="889" y="388" width="3" height="15" fill="rgb(236,95,6)"/><text x="892.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="889" y="404" width="3" height="15" fill="rgb(241,72,16)"/><text x="892.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.23%)</title><rect x="889" y="420" width="3" height="15" fill="rgb(250,144,32)"/><text x="892.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.23%)</title><rect x="889" y="436" width="3" height="15" fill="rgb(235,72,46)"/><text x="892.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.23%)</title><rect x="889" y="452" width="3" height="15" fill="rgb(246,212,9)"/><text x="892.00" y="462.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.92%)</title><rect x="884" y="308" width="11" height="15" fill="rgb(222,221,11)"/><text x="887.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.46%)</title><rect x="889" y="324" width="6" height="15" fill="rgb(207,96,14)"/><text x="892.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.46%)</title><rect x="889" y="340" width="6" height="15" fill="rgb(230,59,3)"/><text x="892.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.23%)</title><rect x="892" y="356" width="3" height="15" fill="rgb(214,196,15)"/><text x="895.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.23%)</title><rect x="892" y="372" width="3" height="15" fill="rgb(239,158,46)"/><text x="895.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.23%)</title><rect x="892" y="388" width="3" height="15" fill="rgb(234,108,38)"/><text x="895.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.23%)</title><rect x="892" y="404" width="3" height="15" fill="rgb(206,156,11)"/><text x="895.00" y="414.50"></text></g><g><title>_aligned_cast_longlong_to_float (lowlevel_strided_loops.c.src:872) (1 samples, 0.23%)</title><rect x="892" y="420" width="3" height="15" fill="rgb(234,8,5)"/><text x="895.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (13 samples, 2.98%)</title><rect x="862" y="228" width="35" height="15" fill="rgb(222,117,30)"/><text x="865.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (11 samples, 2.52%)</title><rect x="867" y="244" width="30" height="15" fill="rgb(228,123,15)"/><text x="870.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.06%)</title><rect x="873" y="260" width="24" height="15" fill="rgb(213,120,52)"/><text x="876.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 2.06%)</title><rect x="873" y="276" width="24" height="15" fill="rgb(218,160,50)"/><text x="876.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 1.15%)</title><rect x="884" y="292" width="13" height="15" fill="rgb(252,88,26)"/><text x="887.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5522) (1 samples, 0.23%)</title><rect x="895" y="308" width="2" height="15" fill="rgb(230,6,49)"/><text x="898.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.23%)</title><rect x="900" y="292" width="3" height="15" fill="rgb(242,91,52)"/><text x="903.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5510) (1 samples, 0.23%)</title><rect x="903" y="308" width="2" height="15" fill="rgb(240,221,14)"/><text x="906.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.23%)</title><rect x="905" y="308" width="3" height="15" fill="rgb(227,195,17)"/><text x="908.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="905" y="324" width="3" height="15" fill="rgb(216,169,45)"/><text x="908.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.23%)</title><rect x="905" y="340" width="3" height="15" fill="rgb(205,105,11)"/><text x="908.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.23%)</title><rect x="905" y="356" width="3" height="15" fill="rgb(224,147,17)"/><text x="908.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.23%)</title><rect x="905" y="372" width="3" height="15" fill="rgb(247,179,16)"/><text x="908.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.23%)</title><rect x="905" y="388" width="3" height="15" fill="rgb(226,45,12)"/><text x="908.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.23%)</title><rect x="908" y="324" width="3" height="15" fill="rgb(219,219,23)"/><text x="911.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.23%)</title><rect x="908" y="340" width="3" height="15" fill="rgb(242,144,9)"/><text x="911.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.23%)</title><rect x="908" y="356" width="3" height="15" fill="rgb(225,22,27)"/><text x="911.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.23%)</title><rect x="908" y="372" width="3" height="15" fill="rgb(230,221,6)"/><text x="911.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.23%)</title><rect x="911" y="340" width="2" height="15" fill="rgb(249,42,43)"/><text x="914.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.23%)</title><rect x="911" y="356" width="2" height="15" fill="rgb(240,118,19)"/><text x="914.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.23%)</title><rect x="913" y="356" width="3" height="15" fill="rgb(231,69,38)"/><text x="916.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.23%)</title><rect x="913" y="372" width="3" height="15" fill="rgb(239,73,36)"/><text x="916.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.23%)</title><rect x="913" y="388" width="3" height="15" fill="rgb(247,211,41)"/><text x="916.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="913" y="404" width="3" height="15" fill="rgb(235,62,50)"/><text x="916.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.23%)</title><rect x="913" y="420" width="3" height="15" fill="rgb(244,89,20)"/><text x="916.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.23%)</title><rect x="913" y="436" width="3" height="15" fill="rgb(232,218,7)"/><text x="916.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:142) (1 samples, 0.23%)</title><rect x="913" y="452" width="3" height="15" fill="rgb(213,64,31)"/><text x="916.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.23%)</title><rect x="916" y="372" width="3" height="15" fill="rgb(254,56,29)"/><text x="919.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.23%)</title><rect x="916" y="388" width="3" height="15" fill="rgb(254,164,14)"/><text x="919.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.23%)</title><rect x="916" y="404" width="3" height="15" fill="rgb(221,128,25)"/><text x="919.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.46%)</title><rect x="916" y="356" width="6" height="15" fill="rgb(215,156,47)"/><text x="919.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.23%)</title><rect x="919" y="372" width="3" height="15" fill="rgb(235,224,30)"/><text x="922.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.23%)</title><rect x="922" y="372" width="2" height="15" fill="rgb(206,103,26)"/><text x="925.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 8.26%)</title><rect x="830" y="196" width="97" height="15" fill="rgb(224,187,51)"/><text x="833.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (34 samples, 7.80%)</title><rect x="835" y="212" width="92" height="15" fill="rgb(244,113,52)"/><text x="838.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (11 samples, 2.52%)</title><rect x="897" y="228" width="30" height="15" fill="rgb(246,53,36)"/><text x="900.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (11 samples, 2.52%)</title><rect x="897" y="244" width="30" height="15" fill="rgb(229,130,36)"/><text x="900.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 2.29%)</title><rect x="900" y="260" width="27" height="15" fill="rgb(232,220,29)"/><text x="903.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (10 samples, 2.29%)</title><rect x="900" y="276" width="27" height="15" fill="rgb(222,173,10)"/><text x="903.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (9 samples, 2.06%)</title><rect x="903" y="292" width="24" height="15" fill="rgb(238,216,46)"/><text x="906.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.61%)</title><rect x="908" y="308" width="19" height="15" fill="rgb(246,198,23)"/><text x="911.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.38%)</title><rect x="911" y="324" width="16" height="15" fill="rgb(246,137,35)"/><text x="914.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.15%)</title><rect x="913" y="340" width="14" height="15" fill="rgb(220,66,43)"/><text x="916.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.46%)</title><rect x="922" y="356" width="5" height="15" fill="rgb(218,228,24)"/><text x="925.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.23%)</title><rect x="924" y="372" width="3" height="15" fill="rgb(230,52,16)"/><text x="927.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.23%)</title><rect x="924" y="388" width="3" height="15" fill="rgb(247,220,26)"/><text x="927.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.23%)</title><rect x="927" y="196" width="3" height="15" fill="rgb(230,70,52)"/><text x="930.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.23%)</title><rect x="932" y="244" width="3" height="15" fill="rgb(245,225,36)"/><text x="935.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (3 samples, 0.69%)</title><rect x="930" y="196" width="8" height="15" fill="rgb(212,8,52)"/><text x="933.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (2 samples, 0.46%)</title><rect x="932" y="212" width="6" height="15" fill="rgb(221,82,43)"/><text x="935.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.46%)</title><rect x="932" y="228" width="6" height="15" fill="rgb(214,180,20)"/><text x="935.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="935" y="244" width="3" height="15" fill="rgb(234,118,16)"/><text x="938.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.23%)</title><rect x="935" y="260" width="3" height="15" fill="rgb(254,72,40)"/><text x="938.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.23%)</title><rect x="935" y="276" width="3" height="15" fill="rgb(239,11,51)"/><text x="938.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src:1773) (1 samples, 0.23%)</title><rect x="935" y="292" width="3" height="15" fill="rgb(210,208,35)"/><text x="938.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src:295) (1 samples, 0.23%)</title><rect x="935" y="308" width="3" height="15" fill="rgb(236,70,9)"/><text x="938.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:988) (1 samples, 0.23%)</title><rect x="935" y="324" width="3" height="15" fill="rgb(213,168,51)"/><text x="938.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (2 samples, 0.46%)</title><rect x="946" y="228" width="5" height="15" fill="rgb(222,90,32)"/><text x="949.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:528) (1 samples, 0.23%)</title><rect x="951" y="228" width="3" height="15" fill="rgb(247,3,54)"/><text x="954.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="954" y="260" width="3" height="15" fill="rgb(212,82,24)"/><text x="957.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.23%)</title><rect x="954" y="276" width="3" height="15" fill="rgb(210,172,2)"/><text x="957.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.23%)</title><rect x="954" y="292" width="3" height="15" fill="rgb(226,89,19)"/><text x="957.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.23%)</title><rect x="954" y="308" width="3" height="15" fill="rgb(242,155,7)"/><text x="957.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.23%)</title><rect x="957" y="292" width="2" height="15" fill="rgb(241,0,43)"/><text x="960.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (2 samples, 0.46%)</title><rect x="957" y="276" width="5" height="15" fill="rgb(212,123,4)"/><text x="960.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.23%)</title><rect x="959" y="292" width="3" height="15" fill="rgb(207,201,39)"/><text x="962.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.23%)</title><rect x="962" y="308" width="3" height="15" fill="rgb(245,38,34)"/><text x="965.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:701) (1 samples, 0.23%)</title><rect x="962" y="324" width="3" height="15" fill="rgb(242,125,54)"/><text x="965.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.46%)</title><rect x="962" y="276" width="6" height="15" fill="rgb(249,128,22)"/><text x="965.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.46%)</title><rect x="962" y="292" width="6" height="15" fill="rgb(211,32,30)"/><text x="965.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.23%)</title><rect x="965" y="308" width="3" height="15" fill="rgb(245,197,25)"/><text x="968.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.23%)</title><rect x="965" y="324" width="3" height="15" fill="rgb(224,90,37)"/><text x="968.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.23%)</title><rect x="965" y="340" width="3" height="15" fill="rgb(221,113,53)"/><text x="968.00" y="350.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.23%)</title><rect x="965" y="356" width="3" height="15" fill="rgb(213,27,48)"/><text x="968.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (6 samples, 1.38%)</title><rect x="954" y="228" width="16" height="15" fill="rgb(250,9,4)"/><text x="957.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.38%)</title><rect x="954" y="244" width="16" height="15" fill="rgb(208,92,18)"/><text x="957.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.15%)</title><rect x="957" y="260" width="13" height="15" fill="rgb(244,49,8)"/><text x="960.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.23%)</title><rect x="968" y="276" width="2" height="15" fill="rgb(220,173,32)"/><text x="971.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.23%)</title><rect x="968" y="292" width="2" height="15" fill="rgb(233,225,53)"/><text x="971.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.23%)</title><rect x="968" y="308" width="2" height="15" fill="rgb(221,212,31)"/><text x="971.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.23%)</title><rect x="968" y="324" width="2" height="15" fill="rgb(236,67,32)"/><text x="971.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="970" y="260" width="3" height="15" fill="rgb(223,123,45)"/><text x="973.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:866) (1 samples, 0.23%)</title><rect x="970" y="276" width="3" height="15" fill="rgb(223,200,14)"/><text x="973.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.46%)</title><rect x="970" y="228" width="6" height="15" fill="rgb(223,90,27)"/><text x="973.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.46%)</title><rect x="970" y="244" width="6" height="15" fill="rgb(246,101,43)"/><text x="973.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.23%)</title><rect x="973" y="260" width="3" height="15" fill="rgb(219,8,29)"/><text x="976.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.23%)</title><rect x="973" y="276" width="3" height="15" fill="rgb(242,74,33)"/><text x="976.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:13) (1 samples, 0.23%)</title><rect x="976" y="244" width="2" height="15" fill="rgb(240,163,22)"/><text x="979.00" y="254.50"></text></g><g><title>arrayflags_getitem (flagsobject.c:533) (1 samples, 0.23%)</title><rect x="976" y="260" width="2" height="15" fill="rgb(241,224,31)"/><text x="979.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.23%)</title><rect x="995" y="292" width="2" height="15" fill="rgb(218,160,33)"/><text x="998.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="995" y="308" width="2" height="15" fill="rgb(240,152,14)"/><text x="998.00" y="318.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.23%)</title><rect x="997" y="308" width="3" height="15" fill="rgb(244,79,46)"/><text x="1000.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.23%)</title><rect x="997" y="324" width="3" height="15" fill="rgb(220,1,35)"/><text x="1000.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.23%)</title><rect x="997" y="340" width="3" height="15" fill="rgb(236,76,41)"/><text x="1000.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (24 samples, 5.50%)</title><rect x="938" y="196" width="65" height="15" fill="rgb(245,106,50)"/><text x="941.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (23 samples, 5.28%)</title><rect x="941" y="212" width="62" height="15" fill="rgb(231,175,22)"/><text x="944.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (10 samples, 2.29%)</title><rect x="976" y="228" width="27" height="15" fill="rgb(250,106,52)"/><text x="979.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (9 samples, 2.06%)</title><rect x="978" y="244" width="25" height="15" fill="rgb(205,110,12)"/><text x="981.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 1.15%)</title><rect x="989" y="260" width="14" height="15" fill="rgb(232,227,5)"/><text x="992.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.92%)</title><rect x="992" y="276" width="11" height="15" fill="rgb(242,109,37)"/><text x="995.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.46%)</title><rect x="997" y="292" width="6" height="15" fill="rgb(254,206,28)"/><text x="1000.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.23%)</title><rect x="1000" y="308" width="3" height="15" fill="rgb(226,217,11)"/><text x="1003.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.23%)</title><rect x="1000" y="324" width="3" height="15" fill="rgb(228,26,47)"/><text x="1003.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:880) (1 samples, 0.23%)</title><rect x="1000" y="340" width="3" height="15" fill="rgb(225,42,15)"/><text x="1003.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.23%)</title><rect x="1000" y="356" width="3" height="15" fill="rgb(254,167,53)"/><text x="1003.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (126 samples, 28.90%)</title><rect x="667" y="180" width="341" height="15" fill="rgb(235,67,44)"/><text x="670.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:1..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.46%)</title><rect x="1003" y="196" width="5" height="15" fill="rgb(242,178,17)"/><text x="1006.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.69%)</title><rect x="1008" y="180" width="8" height="15" fill="rgb(244,153,26)"/><text x="1011.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (5 samples, 1.15%)</title><rect x="1016" y="180" width="14" height="15" fill="rgb(233,222,35)"/><text x="1019.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.23%)</title><rect x="1030" y="180" width="3" height="15" fill="rgb(232,185,12)"/><text x="1033.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (11 samples, 2.52%)</title><rect x="1033" y="180" width="29" height="15" fill="rgb(214,52,52)"/><text x="1036.00" y="190.50">ru..</text></g><g><title>0x7f7a56f6512b (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1060" y="196" width="2" height="15" fill="rgb(211,211,16)"/><text x="1063.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (184 samples, 42.20%)</title><rect x="578" y="164" width="498" height="15" fill="rgb(206,121,29)"/><text x="581.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (5 samples, 1.15%)</title><rect x="1062" y="180" width="14" height="15" fill="rgb(226,201,33)"/><text x="1065.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="1076" y="164" width="3" height="15" fill="rgb(215,188,43)"/><text x="1079.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="1076" y="180" width="3" height="15" fill="rgb(228,210,26)"/><text x="1079.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="1076" y="196" width="3" height="15" fill="rgb(209,68,46)"/><text x="1079.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:45) (195 samples, 44.72%)</title><rect x="553" y="52" width="528" height="15" fill="rgb(232,110,26)"/><text x="556.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:44) (195 samples, 44.72%)</title><rect x="553" y="68" width="528" height="15" fill="rgb(237,202,2)"/><text x="556.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:44)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:29) (195 samples, 44.72%)</title><rect x="553" y="84" width="528" height="15" fill="rgb(249,146,18)"/><text x="556.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:23) (192 samples, 44.04%)</title><rect x="562" y="100" width="519" height="15" fill="rgb(214,143,16)"/><text x="565.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (191 samples, 43.81%)</title><rect x="564" y="116" width="517" height="15" fill="rgb(238,207,35)"/><text x="567.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (190 samples, 43.58%)</title><rect x="567" y="132" width="514" height="15" fill="rgb(227,229,26)"/><text x="570.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (187 samples, 42.89%)</title><rect x="575" y="148" width="506" height="15" fill="rgb(242,146,12)"/><text x="578.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.23%)</title><rect x="1079" y="164" width="2" height="15" fill="rgb(225,15,6)"/><text x="1082.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1079" y="180" width="2" height="15" fill="rgb(225,63,30)"/><text x="1082.00" y="190.50"></text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:28) (1 samples, 0.23%)</title><rect x="1081" y="84" width="3" height="15" fill="rgb(242,185,29)"/><text x="1084.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.23%)</title><rect x="1081" y="100" width="3" height="15" fill="rgb(235,206,24)"/><text x="1084.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.23%)</title><rect x="1081" y="116" width="3" height="15" fill="rgb(210,219,53)"/><text x="1084.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.23%)</title><rect x="1081" y="132" width="3" height="15" fill="rgb(230,146,52)"/><text x="1084.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.23%)</title><rect x="1081" y="148" width="3" height="15" fill="rgb(242,39,1)"/><text x="1084.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.23%)</title><rect x="1081" y="164" width="3" height="15" fill="rgb(233,3,32)"/><text x="1084.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="1081" y="180" width="3" height="15" fill="rgb(232,199,54)"/><text x="1084.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="1081" y="196" width="3" height="15" fill="rgb(212,212,3)"/><text x="1084.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="1081" y="212" width="3" height="15" fill="rgb(247,135,29)"/><text x="1084.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="1081" y="228" width="3" height="15" fill="rgb(249,13,32)"/><text x="1084.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="1081" y="244" width="3" height="15" fill="rgb(215,128,12)"/><text x="1084.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.23%)</title><rect x="1081" y="260" width="3" height="15" fill="rgb(235,97,22)"/><text x="1084.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="1081" y="276" width="3" height="15" fill="rgb(217,188,31)"/><text x="1084.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="1081" y="292" width="3" height="15" fill="rgb(236,214,7)"/><text x="1084.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="1081" y="308" width="3" height="15" fill="rgb(245,176,54)"/><text x="1084.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="1081" y="324" width="3" height="15" fill="rgb(243,46,2)"/><text x="1084.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="1081" y="340" width="3" height="15" fill="rgb(244,75,19)"/><text x="1084.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.23%)</title><rect x="1081" y="356" width="3" height="15" fill="rgb(235,32,4)"/><text x="1084.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="1081" y="372" width="3" height="15" fill="rgb(247,201,0)"/><text x="1084.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="1081" y="388" width="3" height="15" fill="rgb(247,61,19)"/><text x="1084.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="1081" y="404" width="3" height="15" fill="rgb(208,68,27)"/><text x="1084.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="1081" y="420" width="3" height="15" fill="rgb(225,1,33)"/><text x="1084.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="1081" y="436" width="3" height="15" fill="rgb(228,45,49)"/><text x="1084.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.23%)</title><rect x="1081" y="452" width="3" height="15" fill="rgb(222,126,26)"/><text x="1084.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="1081" y="468" width="3" height="15" fill="rgb(232,96,8)"/><text x="1084.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="1081" y="484" width="3" height="15" fill="rgb(217,67,13)"/><text x="1084.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.23%)</title><rect x="1081" y="500" width="3" height="15" fill="rgb(240,188,21)"/><text x="1084.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.23%)</title><rect x="1081" y="516" width="3" height="15" fill="rgb(230,24,5)"/><text x="1084.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.23%)</title><rect x="1081" y="532" width="3" height="15" fill="rgb(215,55,8)"/><text x="1084.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="1081" y="548" width="3" height="15" fill="rgb(239,4,35)"/><text x="1084.00" y="558.50"></text></g><g><title>0x7f7a16f8faf0 (?) (1 samples, 0.23%)</title><rect x="1081" y="564" width="3" height="15" fill="rgb(219,108,43)"/><text x="1084.00" y="574.50"></text></g><g><title>0x7f7a16fa21d2 (?) (1 samples, 0.23%)</title><rect x="1081" y="580" width="3" height="15" fill="rgb(206,44,38)"/><text x="1084.00" y="590.50"></text></g><g><title>0x7f7a16fa17b8 (?) (1 samples, 0.23%)</title><rect x="1081" y="596" width="3" height="15" fill="rgb(240,140,36)"/><text x="1084.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="1081" y="612" width="3" height="15" fill="rgb(238,36,13)"/><text x="1084.00" y="622.50"></text></g><g><title>0x7f7a16f9f994 (?) (1 samples, 0.23%)</title><rect x="1081" y="628" width="3" height="15" fill="rgb(223,9,45)"/><text x="1084.00" y="638.50"></text></g><g><title>0x7f7a16f9e963 (?) (1 samples, 0.23%)</title><rect x="1081" y="644" width="3" height="15" fill="rgb(218,204,29)"/><text x="1084.00" y="654.50"></text></g><g><title>0x7f7a1754ef4c (?) (1 samples, 0.23%)</title><rect x="1081" y="660" width="3" height="15" fill="rgb(254,148,1)"/><text x="1084.00" y="670.50"></text></g><g><title>0x7f7a175457f9 (?) (1 samples, 0.23%)</title><rect x="1081" y="676" width="3" height="15" fill="rgb(233,170,34)"/><text x="1084.00" y="686.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.23%)</title><rect x="1087" y="132" width="2" height="15" fill="rgb(211,103,8)"/><text x="1090.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.46%)</title><rect x="1087" y="116" width="5" height="15" fill="rgb(224,44,54)"/><text x="1090.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="1089" y="132" width="3" height="15" fill="rgb(221,108,40)"/><text x="1092.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.23%)</title><rect x="1089" y="148" width="3" height="15" fill="rgb(223,133,39)"/><text x="1092.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.23%)</title><rect x="1097" y="148" width="3" height="15" fill="rgb(253,15,1)"/><text x="1100.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.69%)</title><rect x="1100" y="196" width="8" height="15" fill="rgb(252,58,49)"/><text x="1103.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.46%)</title><rect x="1103" y="212" width="5" height="15" fill="rgb(207,203,33)"/><text x="1106.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1106" y="228" width="2" height="15" fill="rgb(219,143,20)"/><text x="1109.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1106" y="244" width="2" height="15" fill="rgb(236,172,33)"/><text x="1109.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1106" y="260" width="2" height="15" fill="rgb(225,189,13)"/><text x="1109.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1106" y="276" width="2" height="15" fill="rgb(205,167,38)"/><text x="1109.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1106" y="292" width="2" height="15" fill="rgb(244,219,18)"/><text x="1109.00" y="302.50"></text></g><g><title>0x7f7a56f44961 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1111" y="260" width="3" height="15" fill="rgb(225,61,48)"/><text x="1114.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1114" y="292" width="2" height="15" fill="rgb(233,67,6)"/><text x="1117.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1114" y="308" width="2" height="15" fill="rgb(231,62,12)"/><text x="1117.00" y="318.50"></text></g><g><title>0x7f7a56f44971 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1114" y="324" width="2" height="15" fill="rgb(205,149,49)"/><text x="1117.00" y="334.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1119" y="340" width="3" height="15" fill="rgb(251,95,50)"/><text x="1122.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1119" y="356" width="3" height="15" fill="rgb(208,200,53)"/><text x="1122.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1119" y="372" width="3" height="15" fill="rgb(208,40,33)"/><text x="1122.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1122" y="340" width="3" height="15" fill="rgb(227,115,1)"/><text x="1125.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1122" y="356" width="3" height="15" fill="rgb(226,14,19)"/><text x="1125.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1122" y="372" width="3" height="15" fill="rgb(213,54,8)"/><text x="1125.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1125" y="340" width="2" height="15" fill="rgb(243,184,8)"/><text x="1128.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="340" width="3" height="15" fill="rgb(249,219,51)"/><text x="1130.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="356" width="3" height="15" fill="rgb(245,173,17)"/><text x="1130.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="372" width="3" height="15" fill="rgb(213,42,19)"/><text x="1130.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="388" width="3" height="15" fill="rgb(225,200,25)"/><text x="1130.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="404" width="3" height="15" fill="rgb(245,110,22)"/><text x="1130.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="420" width="3" height="15" fill="rgb(254,22,4)"/><text x="1130.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="436" width="3" height="15" fill="rgb(222,141,37)"/><text x="1130.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="452" width="3" height="15" fill="rgb(209,139,20)"/><text x="1130.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="468" width="3" height="15" fill="rgb(232,36,52)"/><text x="1130.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="484" width="3" height="15" fill="rgb(233,24,22)"/><text x="1130.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="500" width="3" height="15" fill="rgb(245,183,2)"/><text x="1130.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1127" y="516" width="3" height="15" fill="rgb(236,45,2)"/><text x="1130.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1127" y="532" width="3" height="15" fill="rgb(219,203,31)"/><text x="1130.00" y="542.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1130" y="340" width="3" height="15" fill="rgb(252,13,30)"/><text x="1133.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1130" y="356" width="3" height="15" fill="rgb(217,186,33)"/><text x="1133.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1130" y="372" width="3" height="15" fill="rgb(214,46,9)"/><text x="1133.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="340" width="5" height="15" fill="rgb(213,91,1)"/><text x="1136.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="356" width="5" height="15" fill="rgb(220,165,54)"/><text x="1136.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="372" width="5" height="15" fill="rgb(241,196,45)"/><text x="1136.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="388" width="5" height="15" fill="rgb(246,47,49)"/><text x="1136.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="404" width="5" height="15" fill="rgb(219,197,53)"/><text x="1136.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="420" width="5" height="15" fill="rgb(243,10,22)"/><text x="1136.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="436" width="5" height="15" fill="rgb(214,199,47)"/><text x="1136.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="452" width="5" height="15" fill="rgb(249,1,7)"/><text x="1136.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="468" width="5" height="15" fill="rgb(244,226,46)"/><text x="1136.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="484" width="5" height="15" fill="rgb(223,48,49)"/><text x="1136.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="500" width="5" height="15" fill="rgb(232,183,10)"/><text x="1136.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="516" width="5" height="15" fill="rgb(221,44,51)"/><text x="1136.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1133" y="532" width="5" height="15" fill="rgb(218,151,12)"/><text x="1136.00" y="542.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.46%)</title><rect x="1133" y="548" width="5" height="15" fill="rgb(254,158,9)"/><text x="1136.00" y="558.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.46%)</title><rect x="1133" y="564" width="5" height="15" fill="rgb(252,110,20)"/><text x="1136.00" y="574.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1138" y="340" width="3" height="15" fill="rgb(210,178,30)"/><text x="1141.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1138" y="356" width="3" height="15" fill="rgb(250,193,49)"/><text x="1141.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1138" y="372" width="3" height="15" fill="rgb(239,54,25)"/><text x="1141.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1138" y="388" width="3" height="15" fill="rgb(246,133,25)"/><text x="1141.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1138" y="404" width="3" height="15" fill="rgb(241,42,52)"/><text x="1141.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1138" y="420" width="3" height="15" fill="rgb(227,78,18)"/><text x="1141.00" y="430.50"></text></g><g><title>0x7f7a56f46028 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1138" y="436" width="3" height="15" fill="rgb(223,202,16)"/><text x="1141.00" y="446.50"></text></g><g><title>0x7f7a56f43bc6 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1138" y="452" width="3" height="15" fill="rgb(241,100,42)"/><text x="1141.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1141" y="340" width="2" height="15" fill="rgb(250,63,47)"/><text x="1144.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1141" y="356" width="2" height="15" fill="rgb(239,86,21)"/><text x="1144.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1141" y="372" width="2" height="15" fill="rgb(212,125,3)"/><text x="1144.00" y="382.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1143" y="340" width="3" height="15" fill="rgb(224,166,25)"/><text x="1146.00" y="350.50"></text></g><g><title>0x7f7a570c3e57 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1143" y="356" width="3" height="15" fill="rgb(210,169,48)"/><text x="1146.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1146" y="372" width="3" height="15" fill="rgb(242,63,35)"/><text x="1149.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1146" y="388" width="3" height="15" fill="rgb(219,75,32)"/><text x="1149.00" y="398.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1146" y="340" width="6" height="15" fill="rgb(216,72,34)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1146" y="356" width="6" height="15" fill="rgb(236,193,41)"/><text x="1149.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="372" width="3" height="15" fill="rgb(243,228,20)"/><text x="1152.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="388" width="3" height="15" fill="rgb(242,45,39)"/><text x="1152.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="404" width="3" height="15" fill="rgb(240,210,15)"/><text x="1152.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="420" width="3" height="15" fill="rgb(248,168,46)"/><text x="1152.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="436" width="3" height="15" fill="rgb(231,219,46)"/><text x="1152.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="452" width="3" height="15" fill="rgb(208,114,3)"/><text x="1152.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="468" width="3" height="15" fill="rgb(221,4,29)"/><text x="1152.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="484" width="3" height="15" fill="rgb(231,166,24)"/><text x="1152.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="500" width="3" height="15" fill="rgb(211,172,3)"/><text x="1152.00" y="510.50"></text></g><g><title>0x7f7a56f44906 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1152" y="388" width="2" height="15" fill="rgb(247,186,45)"/><text x="1155.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1152" y="340" width="5" height="15" fill="rgb(237,200,42)"/><text x="1155.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1152" y="356" width="5" height="15" fill="rgb(234,165,19)"/><text x="1155.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1152" y="372" width="5" height="15" fill="rgb(225,139,35)"/><text x="1155.00" y="382.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1154" y="388" width="3" height="15" fill="rgb(243,38,17)"/><text x="1157.00" y="398.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1157" y="340" width="8" height="15" fill="rgb(223,96,41)"/><text x="1160.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1157" y="356" width="8" height="15" fill="rgb(237,133,9)"/><text x="1160.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.69%)</title><rect x="1157" y="372" width="8" height="15" fill="rgb(208,136,47)"/><text x="1160.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.69%)</title><rect x="1157" y="388" width="8" height="15" fill="rgb(226,207,23)"/><text x="1160.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.69%)</title><rect x="1157" y="404" width="8" height="15" fill="rgb(219,39,47)"/><text x="1160.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.46%)</title><rect x="1160" y="420" width="5" height="15" fill="rgb(237,41,3)"/><text x="1163.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.46%)</title><rect x="1160" y="436" width="5" height="15" fill="rgb(242,83,7)"/><text x="1163.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.46%)</title><rect x="1160" y="452" width="5" height="15" fill="rgb(244,168,51)"/><text x="1163.00" y="462.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1165" y="340" width="3" height="15" fill="rgb(236,56,43)"/><text x="1168.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1165" y="356" width="3" height="15" fill="rgb(212,216,42)"/><text x="1168.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1168" y="372" width="3" height="15" fill="rgb(242,84,37)"/><text x="1171.00" y="382.50"></text></g><g><title>onnxruntime::TensorAllocator&lt;float&gt;::TensorAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1171" y="372" width="2" height="15" fill="rgb(228,64,50)"/><text x="1174.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetTempSpaceAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1171" y="388" width="2" height="15" fill="rgb(217,107,8)"/><text x="1174.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelInfo::GetMemoryInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1171" y="404" width="2" height="15" fill="rgb(243,34,5)"/><text x="1174.00" y="414.50"></text></g><g><title>onnxruntime::OpKernelInfo::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1171" y="420" width="2" height="15" fill="rgb(228,54,34)"/><text x="1174.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1171" y="436" width="2" height="15" fill="rgb(237,93,26)"/><text x="1174.00" y="446.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1168" y="340" width="8" height="15" fill="rgb(248,136,6)"/><text x="1171.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1168" y="356" width="8" height="15" fill="rgb(219,86,13)"/><text x="1171.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1173" y="372" width="3" height="15" fill="rgb(234,155,19)"/><text x="1176.00" y="382.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1176" y="340" width="3" height="15" fill="rgb(222,142,45)"/><text x="1179.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1176" y="356" width="3" height="15" fill="rgb(229,221,36)"/><text x="1179.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1176" y="372" width="3" height="15" fill="rgb(228,143,54)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1176" y="388" width="3" height="15" fill="rgb(231,228,16)"/><text x="1179.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1176" y="404" width="3" height="15" fill="rgb(238,46,22)"/><text x="1179.00" y="414.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 5.50%)</title><rect x="1116" y="308" width="65" height="15" fill="rgb(229,148,19)"/><text x="1119.00" y="318.50">onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 5.50%)</title><rect x="1116" y="324" width="65" height="15" fill="rgb(214,165,40)"/><text x="1119.00" y="334.50">onnxrun..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1179" y="340" width="2" height="15" fill="rgb(251,109,16)"/><text x="1182.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1179" y="356" width="2" height="15" fill="rgb(214,180,54)"/><text x="1182.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1179" y="372" width="2" height="15" fill="rgb(206,199,16)"/><text x="1182.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1179" y="388" width="2" height="15" fill="rgb(215,160,22)"/><text x="1182.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 5.96%)</title><rect x="1114" y="260" width="70" height="15" fill="rgb(248,144,0)"/><text x="1117.00" y="270.50">onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 5.96%)</title><rect x="1114" y="276" width="70" height="15" fill="rgb(247,172,11)"/><text x="1117.00" y="286.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.73%)</title><rect x="1116" y="292" width="68" height="15" fill="rgb(215,139,0)"/><text x="1119.00" y="302.50">onnxrun..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1181" y="308" width="3" height="15" fill="rgb(211,214,24)"/><text x="1184.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1181" y="324" width="3" height="15" fill="rgb(206,38,9)"/><text x="1184.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1181" y="340" width="3" height="15" fill="rgb(211,212,36)"/><text x="1184.00" y="350.50"></text></g><g><title>0x7f7a5702213a (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1181" y="356" width="3" height="15" fill="rgb(236,130,4)"/><text x="1184.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 6.42%)</title><rect x="1111" y="244" width="76" height="15" fill="rgb(225,39,37)"/><text x="1114.00" y="254.50">onnxrunt..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1184" y="260" width="3" height="15" fill="rgb(214,55,2)"/><text x="1187.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1184" y="276" width="3" height="15" fill="rgb(214,188,22)"/><text x="1187.00" y="286.50"></text></g><g><title>all (436 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,107,16)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:52) (40 samples, 9.17%)</title><rect x="1081" y="52" width="109" height="15" fill="rgb(232,45,53)"/><text x="1084.00" y="62.50">&lt;module&gt; (ben..</text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:51) (40 samples, 9.17%)</title><rect x="1081" y="68" width="109" height="15" fill="rgb(233,57,30)"/><text x="1084.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:29) (39 samples, 8.94%)</title><rect x="1084" y="84" width="106" height="15" fill="rgb(249,125,3)"/><text x="1087.00" y="94.50">setup_profil..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py:23) (39 samples, 8.94%)</title><rect x="1084" y="100" width="106" height="15" fill="rgb(216,180,41)"/><text x="1087.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (36 samples, 8.26%)</title><rect x="1092" y="116" width="98" height="15" fill="rgb(212,110,14)"/><text x="1095.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (36 samples, 8.26%)</title><rect x="1092" y="132" width="98" height="15" fill="rgb(243,87,54)"/><text x="1095.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (33 samples, 7.57%)</title><rect x="1100" y="148" width="90" height="15" fill="rgb(248,193,22)"/><text x="1103.00" y="158.50">run (mlpro..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (33 samples, 7.57%)</title><rect x="1100" y="164" width="90" height="15" fill="rgb(236,84,30)"/><text x="1103.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (33 samples, 7.57%)</title><rect x="1100" y="180" width="90" height="15" fill="rgb(250,17,46)"/><text x="1103.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:136) (30 samples, 6.88%)</title><rect x="1108" y="196" width="82" height="15" fill="rgb(235,137,8)"/><text x="1111.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 6.88%)</title><rect x="1108" y="212" width="82" height="15" fill="rgb(225,188,14)"/><text x="1111.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 6.88%)</title><rect x="1108" y="228" width="82" height="15" fill="rgb(218,67,53)"/><text x="1111.00" y="238.50">void pybi..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(220,163,53)"/><text x="1190.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(216,82,43)"/><text x="1190.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(225,65,0)"/><text x="1190.00" y="286.50"></text></g></g></svg>