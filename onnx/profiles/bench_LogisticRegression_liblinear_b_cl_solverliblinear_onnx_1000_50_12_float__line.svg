<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:17) (1 samples, 0.19%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(218,89,30)"/><text x="13.00" y="110.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(238,224,17)"/><text x="15.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(213,170,50)"/><text x="15.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.19%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(209,124,6)"/><text x="15.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(254,7,32)"/><text x="15.00" y="238.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.39%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(224,208,2)"/><text x="17.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.39%)</title><rect x="14" y="212" width="5" height="15" fill="rgb(221,14,41)"/><text x="17.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.39%)</title><rect x="14" y="228" width="5" height="15" fill="rgb(236,6,52)"/><text x="17.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.39%)</title><rect x="14" y="244" width="5" height="15" fill="rgb(212,178,18)"/><text x="17.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.39%)</title><rect x="14" y="260" width="5" height="15" fill="rgb(231,99,44)"/><text x="17.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.39%)</title><rect x="14" y="276" width="5" height="15" fill="rgb(232,60,33)"/><text x="17.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.39%)</title><rect x="14" y="292" width="5" height="15" fill="rgb(221,27,44)"/><text x="17.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.39%)</title><rect x="14" y="308" width="5" height="15" fill="rgb(220,7,25)"/><text x="17.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.39%)</title><rect x="14" y="324" width="5" height="15" fill="rgb(240,60,19)"/><text x="17.00" y="334.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="19" y="212" width="2" height="15" fill="rgb(248,21,27)"/><text x="22.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (5 samples, 0.97%)</title><rect x="12" y="164" width="11" height="15" fill="rgb(206,174,48)"/><text x="15.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (4 samples, 0.77%)</title><rect x="14" y="180" width="9" height="15" fill="rgb(232,112,51)"/><text x="17.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.39%)</title><rect x="19" y="196" width="4" height="15" fill="rgb(212,21,53)"/><text x="22.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="21" y="212" width="2" height="15" fill="rgb(218,39,4)"/><text x="24.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.19%)</title><rect x="21" y="228" width="2" height="15" fill="rgb(220,10,51)"/><text x="24.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.19%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(249,9,19)"/><text x="24.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.19%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(215,161,30)"/><text x="24.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="21" y="276" width="2" height="15" fill="rgb(212,74,38)"/><text x="24.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="21" y="292" width="2" height="15" fill="rgb(233,226,34)"/><text x="24.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="21" y="308" width="2" height="15" fill="rgb(233,163,32)"/><text x="24.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:18) (6 samples, 1.16%)</title><rect x="12" y="100" width="13" height="15" fill="rgb(223,69,45)"/><text x="15.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 1.16%)</title><rect x="12" y="116" width="13" height="15" fill="rgb(230,40,2)"/><text x="15.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (6 samples, 1.16%)</title><rect x="12" y="132" width="13" height="15" fill="rgb(214,62,31)"/><text x="15.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (6 samples, 1.16%)</title><rect x="12" y="148" width="13" height="15" fill="rgb(206,220,40)"/><text x="15.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.19%)</title><rect x="23" y="164" width="2" height="15" fill="rgb(233,139,23)"/><text x="26.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="23" y="180" width="2" height="15" fill="rgb(215,185,18)"/><text x="26.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="23" y="196" width="2" height="15" fill="rgb(240,132,43)"/><text x="26.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="23" y="212" width="2" height="15" fill="rgb(249,211,46)"/><text x="26.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="23" y="228" width="2" height="15" fill="rgb(209,45,12)"/><text x="26.00" y="238.50"></text></g><g><title>0x7f4a489109da (?) (1 samples, 0.19%)</title><rect x="23" y="244" width="2" height="15" fill="rgb(232,223,13)"/><text x="26.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.19%)</title><rect x="28" y="164" width="2" height="15" fill="rgb(241,70,13)"/><text x="31.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.19%)</title><rect x="28" y="180" width="2" height="15" fill="rgb(221,76,7)"/><text x="31.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (5 samples, 0.97%)</title><rect x="28" y="148" width="11" height="15" fill="rgb(217,60,41)"/><text x="31.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.77%)</title><rect x="30" y="164" width="9" height="15" fill="rgb(230,79,9)"/><text x="33.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.58%)</title><rect x="32" y="180" width="7" height="15" fill="rgb(234,113,2)"/><text x="35.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="37" y="196" width="2" height="15" fill="rgb(232,124,15)"/><text x="40.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.97%)</title><rect x="48" y="212" width="12" height="15" fill="rgb(249,79,32)"/><text x="51.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.39%)</title><rect x="55" y="228" width="5" height="15" fill="rgb(216,176,9)"/><text x="58.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (7 samples, 1.35%)</title><rect x="46" y="180" width="16" height="15" fill="rgb(207,96,30)"/><text x="49.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 1.35%)</title><rect x="46" y="196" width="16" height="15" fill="rgb(218,62,46)"/><text x="49.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.19%)</title><rect x="60" y="212" width="2" height="15" fill="rgb(214,88,39)"/><text x="63.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="60" y="228" width="2" height="15" fill="rgb(224,176,0)"/><text x="63.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.19%)</title><rect x="62" y="196" width="2" height="15" fill="rgb(248,29,43)"/><text x="65.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.19%)</title><rect x="62" y="212" width="2" height="15" fill="rgb(235,135,46)"/><text x="65.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.19%)</title><rect x="64" y="196" width="2" height="15" fill="rgb(244,94,43)"/><text x="67.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.19%)</title><rect x="64" y="212" width="2" height="15" fill="rgb(224,145,48)"/><text x="67.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="64" y="228" width="2" height="15" fill="rgb(236,5,43)"/><text x="67.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="66" y="196" width="3" height="15" fill="rgb(237,15,7)"/><text x="69.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="66" y="212" width="3" height="15" fill="rgb(212,221,36)"/><text x="69.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.39%)</title><rect x="69" y="196" width="4" height="15" fill="rgb(207,107,5)"/><text x="72.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.19%)</title><rect x="71" y="212" width="2" height="15" fill="rgb(248,111,47)"/><text x="74.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.19%)</title><rect x="73" y="196" width="3" height="15" fill="rgb(243,65,46)"/><text x="76.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.39%)</title><rect x="76" y="196" width="4" height="15" fill="rgb(210,103,43)"/><text x="79.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.39%)</title><rect x="76" y="212" width="4" height="15" fill="rgb(216,200,11)"/><text x="79.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.39%)</title><rect x="76" y="228" width="4" height="15" fill="rgb(253,89,7)"/><text x="79.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.39%)</title><rect x="80" y="196" width="5" height="15" fill="rgb(227,136,21)"/><text x="83.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.39%)</title><rect x="80" y="212" width="5" height="15" fill="rgb(221,105,54)"/><text x="83.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (2 samples, 0.39%)</title><rect x="80" y="228" width="5" height="15" fill="rgb(212,134,0)"/><text x="83.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="85" y="212" width="2" height="15" fill="rgb(231,93,42)"/><text x="88.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="85" y="228" width="2" height="15" fill="rgb(244,56,27)"/><text x="88.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (12 samples, 2.32%)</title><rect x="62" y="180" width="27" height="15" fill="rgb(219,70,22)"/><text x="65.00" y="190.50">d..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.39%)</title><rect x="85" y="196" width="4" height="15" fill="rgb(254,10,27)"/><text x="88.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.19%)</title><rect x="87" y="212" width="2" height="15" fill="rgb(247,27,22)"/><text x="90.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="87" y="228" width="2" height="15" fill="rgb(220,141,35)"/><text x="90.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.19%)</title><rect x="87" y="244" width="2" height="15" fill="rgb(237,140,51)"/><text x="90.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.19%)</title><rect x="89" y="180" width="3" height="15" fill="rgb(211,86,49)"/><text x="92.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:726) (1 samples, 0.19%)</title><rect x="89" y="196" width="3" height="15" fill="rgb(224,180,16)"/><text x="92.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.19%)</title><rect x="89" y="212" width="3" height="15" fill="rgb(230,191,24)"/><text x="92.00" y="222.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:159) (1 samples, 0.19%)</title><rect x="89" y="228" width="3" height="15" fill="rgb(214,107,30)"/><text x="92.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="92" y="212" width="2" height="15" fill="rgb(214,145,21)"/><text x="95.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="92" y="228" width="2" height="15" fill="rgb(222,109,48)"/><text x="95.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="92" y="244" width="2" height="15" fill="rgb(249,139,53)"/><text x="95.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="92" y="260" width="2" height="15" fill="rgb(247,95,41)"/><text x="95.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="94" y="228" width="2" height="15" fill="rgb(243,16,53)"/><text x="97.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.19%)</title><rect x="94" y="244" width="2" height="15" fill="rgb(233,198,44)"/><text x="97.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.19%)</title><rect x="94" y="260" width="2" height="15" fill="rgb(231,46,50)"/><text x="97.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="96" y="260" width="2" height="15" fill="rgb(222,81,47)"/><text x="99.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="96" y="276" width="2" height="15" fill="rgb(234,223,41)"/><text x="99.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="96" y="292" width="2" height="15" fill="rgb(251,154,48)"/><text x="99.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="96" y="308" width="2" height="15" fill="rgb(223,138,9)"/><text x="99.00" y="318.50"></text></g><g><title>array_add (number.c:330) (4 samples, 0.77%)</title><rect x="92" y="196" width="9" height="15" fill="rgb(234,18,29)"/><text x="95.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.58%)</title><rect x="94" y="212" width="7" height="15" fill="rgb(238,77,3)"/><text x="97.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.39%)</title><rect x="96" y="228" width="5" height="15" fill="rgb(209,86,47)"/><text x="99.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.39%)</title><rect x="96" y="244" width="5" height="15" fill="rgb(229,32,26)"/><text x="99.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="98" y="260" width="3" height="15" fill="rgb(209,49,13)"/><text x="101.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="98" y="276" width="3" height="15" fill="rgb(228,95,38)"/><text x="101.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="98" y="292" width="3" height="15" fill="rgb(234,191,0)"/><text x="101.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.19%)</title><rect x="98" y="308" width="3" height="15" fill="rgb(243,150,23)"/><text x="101.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.19%)</title><rect x="98" y="324" width="3" height="15" fill="rgb(213,153,40)"/><text x="101.00" y="334.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 2.90%)</title><rect x="101" y="212" width="34" height="15" fill="rgb(231,53,17)"/><text x="104.00" y="222.50">dg..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="135" y="260" width="2" height="15" fill="rgb(211,132,12)"/><text x="138.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.19%)</title><rect x="135" y="276" width="2" height="15" fill="rgb(239,87,12)"/><text x="138.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.39%)</title><rect x="135" y="244" width="4" height="15" fill="rgb(214,12,50)"/><text x="138.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="137" y="260" width="2" height="15" fill="rgb(244,114,26)"/><text x="140.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:255) (1 samples, 0.19%)</title><rect x="137" y="276" width="2" height="15" fill="rgb(221,145,11)"/><text x="140.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.19%)</title><rect x="139" y="276" width="3" height="15" fill="rgb(246,189,10)"/><text x="142.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.19%)</title><rect x="139" y="292" width="3" height="15" fill="rgb(238,152,33)"/><text x="142.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="139" y="308" width="3" height="15" fill="rgb(232,123,47)"/><text x="142.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="139" y="324" width="3" height="15" fill="rgb(253,77,16)"/><text x="142.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="139" y="340" width="3" height="15" fill="rgb(248,61,28)"/><text x="142.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="139" y="356" width="3" height="15" fill="rgb(207,156,39)"/><text x="142.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="139" y="372" width="3" height="15" fill="rgb(207,24,54)"/><text x="142.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="139" y="388" width="3" height="15" fill="rgb(226,101,6)"/><text x="142.00" y="398.50"></text></g><g><title>0x7f4a6650c2a3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="139" y="404" width="3" height="15" fill="rgb(253,56,28)"/><text x="142.00" y="414.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (11 samples, 2.12%)</title><rect x="139" y="244" width="25" height="15" fill="rgb(220,45,6)"/><text x="142.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (11 samples, 2.12%)</title><rect x="139" y="260" width="25" height="15" fill="rgb(217,39,1)"/><text x="142.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (10 samples, 1.93%)</title><rect x="142" y="276" width="22" height="15" fill="rgb(211,142,48)"/><text x="145.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (10 samples, 1.93%)</title><rect x="142" y="292" width="22" height="15" fill="rgb(217,42,48)"/><text x="145.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (10 samples, 1.93%)</title><rect x="142" y="308" width="22" height="15" fill="rgb(232,135,15)"/><text x="145.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (10 samples, 1.93%)</title><rect x="142" y="324" width="22" height="15" fill="rgb(241,18,40)"/><text x="145.00" y="334.50">_..</text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="164" y="292" width="3" height="15" fill="rgb(208,0,16)"/><text x="167.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="164" y="308" width="3" height="15" fill="rgb(222,17,24)"/><text x="167.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (8 samples, 1.54%)</title><rect x="164" y="244" width="19" height="15" fill="rgb(254,107,9)"/><text x="167.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (8 samples, 1.54%)</title><rect x="164" y="260" width="19" height="15" fill="rgb(250,212,25)"/><text x="167.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.54%)</title><rect x="164" y="276" width="19" height="15" fill="rgb(234,166,1)"/><text x="167.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.35%)</title><rect x="167" y="292" width="16" height="15" fill="rgb(228,91,20)"/><text x="170.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.16%)</title><rect x="169" y="308" width="14" height="15" fill="rgb(235,16,3)"/><text x="172.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (37 samples, 7.14%)</title><rect x="101" y="196" width="84" height="15" fill="rgb(238,216,8)"/><text x="104.00" y="206.50">safe_spar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 4.25%)</title><rect x="135" y="212" width="50" height="15" fill="rgb(222,130,12)"/><text x="138.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (22 samples, 4.25%)</title><rect x="135" y="228" width="50" height="15" fill="rgb(218,214,12)"/><text x="138.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.19%)</title><rect x="183" y="244" width="2" height="15" fill="rgb(247,0,0)"/><text x="186.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (42 samples, 8.11%)</title><rect x="92" y="180" width="95" height="15" fill="rgb(250,151,3)"/><text x="95.00" y="190.50">decision_fu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.19%)</title><rect x="185" y="196" width="2" height="15" fill="rgb(245,64,53)"/><text x="188.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="185" y="212" width="2" height="15" fill="rgb(208,174,48)"/><text x="188.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (65 samples, 12.55%)</title><rect x="41" y="164" width="148" height="15" fill="rgb(223,2,39)"/><text x="44.00" y="174.50">_predict_proba_lr ..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.19%)</title><rect x="187" y="180" width="2" height="15" fill="rgb(234,162,14)"/><text x="190.00" y="190.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.19%)</title><rect x="187" y="196" width="2" height="15" fill="rgb(236,121,34)"/><text x="190.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="189" y="180" width="3" height="15" fill="rgb(211,70,20)"/><text x="192.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="189" y="196" width="3" height="15" fill="rgb(252,201,21)"/><text x="192.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="189" y="212" width="3" height="15" fill="rgb(209,225,15)"/><text x="192.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="189" y="228" width="3" height="15" fill="rgb(214,96,48)"/><text x="192.00" y="238.50"></text></g><g><title>0x7f4a489109da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="192" y="244" width="4" height="15" fill="rgb(225,142,16)"/><text x="195.00" y="254.50"></text></g><g><title>0x7f4a666dcbb4 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="205" y="292" width="3" height="15" fill="rgb(254,95,9)"/><text x="208.00" y="302.50"></text></g><g><title>0x7f4a666dcbd3 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="208" y="292" width="2" height="15" fill="rgb(234,147,14)"/><text x="211.00" y="302.50"></text></g><g><title>0x7f4a666dcbf9 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(253,29,48)"/><text x="213.00" y="302.50"></text></g><g><title>0x7f4a666dcc07 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="212" y="292" width="3" height="15" fill="rgb(232,60,17)"/><text x="215.00" y="302.50"></text></g><g><title>0x7f4a48931265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.74%)</title><rect x="196" y="260" width="21" height="15" fill="rgb(249,217,13)"/><text x="199.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (7 samples, 1.35%)</title><rect x="201" y="276" width="16" height="15" fill="rgb(234,219,48)"/><text x="204.00" y="286.50"></text></g><g><title>0x7f4a666dcc56 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="215" y="292" width="2" height="15" fill="rgb(249,42,37)"/><text x="218.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.32%)</title><rect x="192" y="180" width="27" height="15" fill="rgb(243,181,9)"/><text x="195.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 2.32%)</title><rect x="192" y="196" width="27" height="15" fill="rgb(231,95,9)"/><text x="195.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 2.32%)</title><rect x="192" y="212" width="27" height="15" fill="rgb(241,74,41)"/><text x="195.00" y="222.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 2.32%)</title><rect x="192" y="228" width="27" height="15" fill="rgb(214,55,1)"/><text x="195.00" y="238.50">t..</text></g><g><title>0x7f4a489109dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.93%)</title><rect x="196" y="244" width="23" height="15" fill="rgb(221,157,32)"/><text x="199.00" y="254.50">0..</text></g><g><title>0x7f4a48931279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="217" y="260" width="2" height="15" fill="rgb(223,227,44)"/><text x="220.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (14 samples, 2.70%)</title><rect x="189" y="164" width="32" height="15" fill="rgb(211,109,47)"/><text x="192.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="219" y="180" width="2" height="15" fill="rgb(246,129,0)"/><text x="222.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.19%)</title><rect x="219" y="196" width="2" height="15" fill="rgb(251,52,52)"/><text x="222.00" y="206.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.19%)</title><rect x="221" y="180" width="3" height="15" fill="rgb(251,143,26)"/><text x="224.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="221" y="196" width="3" height="15" fill="rgb(213,189,14)"/><text x="224.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.19%)</title><rect x="221" y="212" width="3" height="15" fill="rgb(252,30,34)"/><text x="224.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.19%)</title><rect x="221" y="228" width="3" height="15" fill="rgb(207,15,17)"/><text x="224.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:165) (1 samples, 0.19%)</title><rect x="221" y="244" width="3" height="15" fill="rgb(226,166,44)"/><text x="224.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="230" y="228" width="3" height="15" fill="rgb(217,73,51)"/><text x="233.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="230" y="244" width="3" height="15" fill="rgb(233,155,31)"/><text x="233.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="230" y="260" width="3" height="15" fill="rgb(246,57,47)"/><text x="233.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="230" y="276" width="3" height="15" fill="rgb(234,181,12)"/><text x="233.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.19%)</title><rect x="230" y="292" width="3" height="15" fill="rgb(206,23,24)"/><text x="233.00" y="302.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.19%)</title><rect x="230" y="308" width="3" height="15" fill="rgb(249,181,20)"/><text x="233.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.19%)</title><rect x="233" y="308" width="2" height="15" fill="rgb(245,182,46)"/><text x="236.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.19%)</title><rect x="233" y="324" width="2" height="15" fill="rgb(246,156,17)"/><text x="236.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.19%)</title><rect x="233" y="340" width="2" height="15" fill="rgb(223,116,54)"/><text x="236.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.19%)</title><rect x="233" y="356" width="2" height="15" fill="rgb(225,21,21)"/><text x="236.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.19%)</title><rect x="233" y="372" width="2" height="15" fill="rgb(217,168,1)"/><text x="236.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.39%)</title><rect x="233" y="276" width="4" height="15" fill="rgb(252,87,31)"/><text x="236.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.39%)</title><rect x="233" y="292" width="4" height="15" fill="rgb(242,209,52)"/><text x="236.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="235" y="308" width="2" height="15" fill="rgb(238,93,14)"/><text x="238.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.19%)</title><rect x="235" y="324" width="2" height="15" fill="rgb(220,168,11)"/><text x="238.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="235" y="340" width="2" height="15" fill="rgb(225,63,17)"/><text x="238.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.19%)</title><rect x="237" y="292" width="3" height="15" fill="rgb(220,74,30)"/><text x="240.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.58%)</title><rect x="240" y="308" width="6" height="15" fill="rgb(214,103,28)"/><text x="243.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.39%)</title><rect x="242" y="324" width="4" height="15" fill="rgb(232,68,18)"/><text x="245.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 2.12%)</title><rect x="224" y="180" width="25" height="15" fill="rgb(216,78,1)"/><text x="227.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.12%)</title><rect x="224" y="196" width="25" height="15" fill="rgb(225,194,0)"/><text x="227.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.93%)</title><rect x="226" y="212" width="23" height="15" fill="rgb(217,221,54)"/><text x="229.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.35%)</title><rect x="233" y="228" width="16" height="15" fill="rgb(244,43,12)"/><text x="236.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.35%)</title><rect x="233" y="244" width="16" height="15" fill="rgb(242,156,27)"/><text x="236.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.35%)</title><rect x="233" y="260" width="16" height="15" fill="rgb(224,162,26)"/><text x="236.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.97%)</title><rect x="237" y="276" width="12" height="15" fill="rgb(249,16,3)"/><text x="240.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.77%)</title><rect x="240" y="292" width="9" height="15" fill="rgb(250,95,11)"/><text x="243.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.19%)</title><rect x="246" y="308" width="3" height="15" fill="rgb(207,216,43)"/><text x="249.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="249" y="196" width="2" height="15" fill="rgb(238,159,6)"/><text x="252.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.19%)</title><rect x="249" y="212" width="2" height="15" fill="rgb(210,97,12)"/><text x="252.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1525) (2 samples, 0.39%)</title><rect x="251" y="228" width="5" height="15" fill="rgb(237,175,6)"/><text x="254.00" y="238.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="256" y="276" width="2" height="15" fill="rgb(238,120,16)"/><text x="259.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.39%)</title><rect x="256" y="228" width="4" height="15" fill="rgb(233,138,27)"/><text x="259.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.39%)</title><rect x="256" y="244" width="4" height="15" fill="rgb(223,90,5)"/><text x="259.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.39%)</title><rect x="256" y="260" width="4" height="15" fill="rgb(213,46,31)"/><text x="259.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.19%)</title><rect x="258" y="276" width="2" height="15" fill="rgb(250,147,26)"/><text x="261.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:38) (114 samples, 22.01%)</title><rect x="10" y="52" width="259" height="15" fill="rgb(211,196,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:37) (114 samples, 22.01%)</title><rect x="10" y="68" width="259" height="15" fill="rgb(210,135,16)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegress..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:29) (114 samples, 22.01%)</title><rect x="10" y="84" width="259" height="15" fill="rgb(252,206,3)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegre..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:23) (107 samples, 20.66%)</title><rect x="25" y="100" width="244" height="15" fill="rgb(215,71,34)"/><text x="28.00" y="110.50">profile (bench_LogisticRegressio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (107 samples, 20.66%)</title><rect x="25" y="116" width="244" height="15" fill="rgb(237,86,24)"/><text x="28.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (106 samples, 20.46%)</title><rect x="28" y="132" width="241" height="15" fill="rgb(222,177,7)"/><text x="31.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (101 samples, 19.50%)</title><rect x="39" y="148" width="230" height="15" fill="rgb(227,9,51)"/><text x="42.00" y="158.50">predict_proba (sklearn/linear_..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 4.05%)</title><rect x="221" y="164" width="48" height="15" fill="rgb(234,53,44)"/><text x="224.00" y="174.50">_pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.74%)</title><rect x="249" y="180" width="20" height="15" fill="rgb(221,6,39)"/><text x="252.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.54%)</title><rect x="251" y="196" width="18" height="15" fill="rgb(213,15,34)"/><text x="254.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.54%)</title><rect x="251" y="212" width="18" height="15" fill="rgb(210,77,14)"/><text x="254.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.77%)</title><rect x="260" y="228" width="9" height="15" fill="rgb(225,62,29)"/><text x="263.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.77%)</title><rect x="260" y="244" width="9" height="15" fill="rgb(237,105,42)"/><text x="263.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.77%)</title><rect x="260" y="260" width="9" height="15" fill="rgb(229,14,3)"/><text x="263.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.77%)</title><rect x="260" y="276" width="9" height="15" fill="rgb(217,221,32)"/><text x="263.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.77%)</title><rect x="260" y="292" width="9" height="15" fill="rgb(206,113,39)"/><text x="263.00" y="302.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:22) (1 samples, 0.19%)</title><rect x="269" y="372" width="2" height="15" fill="rgb(251,13,24)"/><text x="272.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="269" y="388" width="2" height="15" fill="rgb(210,11,0)"/><text x="272.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="269" y="404" width="2" height="15" fill="rgb(248,95,25)"/><text x="272.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="269" y="420" width="2" height="15" fill="rgb(235,127,18)"/><text x="272.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="269" y="436" width="2" height="15" fill="rgb(242,66,30)"/><text x="272.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.19%)</title><rect x="269" y="452" width="2" height="15" fill="rgb(224,37,14)"/><text x="272.00" y="462.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.19%)</title><rect x="269" y="468" width="2" height="15" fill="rgb(210,160,16)"/><text x="272.00" y="478.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.19%)</title><rect x="269" y="484" width="2" height="15" fill="rgb(231,151,44)"/><text x="272.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (2 samples, 0.39%)</title><rect x="269" y="244" width="5" height="15" fill="rgb(213,168,10)"/><text x="272.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.39%)</title><rect x="269" y="260" width="5" height="15" fill="rgb(253,189,24)"/><text x="272.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="269" y="276" width="5" height="15" fill="rgb(234,181,20)"/><text x="272.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="269" y="292" width="5" height="15" fill="rgb(243,153,10)"/><text x="272.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="269" y="308" width="5" height="15" fill="rgb(206,176,2)"/><text x="272.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="269" y="324" width="5" height="15" fill="rgb(219,98,43)"/><text x="272.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="269" y="340" width="5" height="15" fill="rgb(252,182,37)"/><text x="272.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="269" y="356" width="5" height="15" fill="rgb(246,130,45)"/><text x="272.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:5) (1 samples, 0.19%)</title><rect x="271" y="372" width="3" height="15" fill="rgb(230,173,26)"/><text x="274.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="271" y="388" width="3" height="15" fill="rgb(232,101,2)"/><text x="274.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="271" y="404" width="3" height="15" fill="rgb(254,175,27)"/><text x="274.00" y="414.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="271" y="420" width="3" height="15" fill="rgb(213,39,30)"/><text x="274.00" y="430.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="271" y="436" width="3" height="15" fill="rgb(253,101,19)"/><text x="274.00" y="446.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.19%)</title><rect x="271" y="452" width="3" height="15" fill="rgb(212,99,15)"/><text x="274.00" y="462.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.19%)</title><rect x="271" y="468" width="3" height="15" fill="rgb(240,91,35)"/><text x="274.00" y="478.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1408) (1 samples, 0.19%)</title><rect x="271" y="484" width="3" height="15" fill="rgb(206,204,32)"/><text x="274.00" y="494.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.19%)</title><rect x="271" y="500" width="3" height="15" fill="rgb(249,73,30)"/><text x="274.00" y="510.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.19%)</title><rect x="271" y="516" width="3" height="15" fill="rgb(235,150,30)"/><text x="274.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:1) (3 samples, 0.58%)</title><rect x="269" y="148" width="7" height="15" fill="rgb(234,218,42)"/><text x="272.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="269" y="164" width="7" height="15" fill="rgb(209,120,36)"/><text x="272.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="269" y="180" width="7" height="15" fill="rgb(212,147,25)"/><text x="272.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="269" y="196" width="7" height="15" fill="rgb(210,148,43)"/><text x="272.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="269" y="212" width="7" height="15" fill="rgb(220,154,44)"/><text x="272.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="269" y="228" width="7" height="15" fill="rgb(245,76,30)"/><text x="272.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.19%)</title><rect x="274" y="244" width="2" height="15" fill="rgb(225,227,3)"/><text x="277.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="274" y="260" width="2" height="15" fill="rgb(222,83,38)"/><text x="277.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="274" y="276" width="2" height="15" fill="rgb(242,113,29)"/><text x="277.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="274" y="292" width="2" height="15" fill="rgb(221,17,8)"/><text x="277.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="274" y="308" width="2" height="15" fill="rgb(213,42,40)"/><text x="277.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="274" y="324" width="2" height="15" fill="rgb(227,53,18)"/><text x="277.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.19%)</title><rect x="274" y="340" width="2" height="15" fill="rgb(243,165,17)"/><text x="277.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="274" y="356" width="2" height="15" fill="rgb(228,224,50)"/><text x="277.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="274" y="372" width="2" height="15" fill="rgb(210,22,11)"/><text x="277.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="274" y="388" width="2" height="15" fill="rgb(224,87,44)"/><text x="277.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="274" y="404" width="2" height="15" fill="rgb(238,88,32)"/><text x="277.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="274" y="420" width="2" height="15" fill="rgb(232,127,28)"/><text x="277.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:59) (1 samples, 0.19%)</title><rect x="274" y="436" width="2" height="15" fill="rgb(210,116,4)"/><text x="277.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="274" y="452" width="2" height="15" fill="rgb(242,217,27)"/><text x="277.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="274" y="468" width="2" height="15" fill="rgb(235,196,17)"/><text x="277.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="274" y="484" width="2" height="15" fill="rgb(242,79,5)"/><text x="277.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="274" y="500" width="2" height="15" fill="rgb(219,165,3)"/><text x="277.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="274" y="516" width="2" height="15" fill="rgb(243,212,22)"/><text x="277.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="274" y="532" width="2" height="15" fill="rgb(248,37,37)"/><text x="277.00" y="542.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.19%)</title><rect x="276" y="852" width="2" height="15" fill="rgb(247,12,37)"/><text x="279.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.19%)</title><rect x="276" y="868" width="2" height="15" fill="rgb(205,202,24)"/><text x="279.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.19%)</title><rect x="276" y="884" width="2" height="15" fill="rgb(246,69,35)"/><text x="279.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.19%)</title><rect x="276" y="900" width="2" height="15" fill="rgb(250,137,2)"/><text x="279.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.19%)</title><rect x="276" y="916" width="2" height="15" fill="rgb(237,48,11)"/><text x="279.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="276" y="932" width="2" height="15" fill="rgb(236,153,4)"/><text x="279.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="276" y="948" width="2" height="15" fill="rgb(207,22,6)"/><text x="279.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.19%)</title><rect x="276" y="964" width="2" height="15" fill="rgb(253,129,10)"/><text x="279.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.19%)</title><rect x="276" y="980" width="2" height="15" fill="rgb(228,123,10)"/><text x="279.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.19%)</title><rect x="276" y="996" width="2" height="15" fill="rgb(227,169,13)"/><text x="279.00" y="1006.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.19%)</title><rect x="278" y="884" width="3" height="15" fill="rgb(232,208,31)"/><text x="281.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.19%)</title><rect x="278" y="900" width="3" height="15" fill="rgb(217,160,13)"/><text x="281.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="278" y="916" width="3" height="15" fill="rgb(253,63,19)"/><text x="281.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="278" y="932" width="3" height="15" fill="rgb(245,43,28)"/><text x="281.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.19%)</title><rect x="278" y="948" width="3" height="15" fill="rgb(217,158,5)"/><text x="281.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.19%)</title><rect x="278" y="964" width="3" height="15" fill="rgb(219,20,15)"/><text x="281.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.19%)</title><rect x="278" y="980" width="3" height="15" fill="rgb(205,168,0)"/><text x="281.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:118) (1 samples, 0.19%)</title><rect x="278" y="996" width="3" height="15" fill="rgb(249,200,1)"/><text x="281.00" y="1006.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.19%)</title><rect x="281" y="900" width="2" height="15" fill="rgb(244,106,51)"/><text x="284.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.77%)</title><rect x="276" y="820" width="9" height="15" fill="rgb(253,185,54)"/><text x="279.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.77%)</title><rect x="276" y="836" width="9" height="15" fill="rgb(221,89,26)"/><text x="279.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.58%)</title><rect x="278" y="852" width="7" height="15" fill="rgb(233,98,27)"/><text x="281.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.58%)</title><rect x="278" y="868" width="7" height="15" fill="rgb(210,34,44)"/><text x="281.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.39%)</title><rect x="281" y="884" width="4" height="15" fill="rgb(235,144,45)"/><text x="284.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="283" y="900" width="2" height="15" fill="rgb(245,80,39)"/><text x="286.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="283" y="916" width="2" height="15" fill="rgb(214,118,31)"/><text x="286.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.19%)</title><rect x="283" y="932" width="2" height="15" fill="rgb(210,0,19)"/><text x="286.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py:2772) (1 samples, 0.19%)</title><rect x="283" y="948" width="2" height="15" fill="rgb(242,63,31)"/><text x="286.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py:2556) (1 samples, 0.19%)</title><rect x="283" y="964" width="2" height="15" fill="rgb(206,93,21)"/><text x="286.00" y="974.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.19%)</title><rect x="283" y="980" width="2" height="15" fill="rgb(239,175,30)"/><text x="286.00" y="990.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (1 samples, 0.19%)</title><rect x="283" y="996" width="2" height="15" fill="rgb(246,24,10)"/><text x="286.00" y="1006.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.19%)</title><rect x="283" y="1012" width="2" height="15" fill="rgb(219,15,16)"/><text x="286.00" y="1022.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1487) (1 samples, 0.19%)</title><rect x="283" y="1028" width="2" height="15" fill="rgb(229,61,7)"/><text x="286.00" y="1038.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py:1548) (1 samples, 0.19%)</title><rect x="283" y="1044" width="2" height="15" fill="rgb(218,151,46)"/><text x="286.00" y="1054.50"></text></g><g><title>isabs (ntpath.py:71) (1 samples, 0.19%)</title><rect x="283" y="1060" width="2" height="15" fill="rgb(251,183,19)"/><text x="286.00" y="1070.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.19%)</title><rect x="283" y="1076" width="2" height="15" fill="rgb(210,113,20)"/><text x="286.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:2) (5 samples, 0.97%)</title><rect x="276" y="148" width="11" height="15" fill="rgb(253,101,41)"/><text x="279.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="164" width="11" height="15" fill="rgb(225,138,34)"/><text x="279.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.97%)</title><rect x="276" y="180" width="11" height="15" fill="rgb(241,11,45)"/><text x="279.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="196" width="11" height="15" fill="rgb(245,106,11)"/><text x="279.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="212" width="11" height="15" fill="rgb(235,56,17)"/><text x="279.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="276" y="228" width="11" height="15" fill="rgb(232,108,11)"/><text x="279.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="276" y="244" width="11" height="15" fill="rgb(245,32,42)"/><text x="279.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="276" y="260" width="11" height="15" fill="rgb(243,111,31)"/><text x="279.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="276" width="11" height="15" fill="rgb(219,137,22)"/><text x="279.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.97%)</title><rect x="276" y="292" width="11" height="15" fill="rgb(212,161,17)"/><text x="279.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="308" width="11" height="15" fill="rgb(226,15,35)"/><text x="279.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="276" y="324" width="11" height="15" fill="rgb(252,187,43)"/><text x="279.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="276" y="340" width="11" height="15" fill="rgb(253,100,28)"/><text x="279.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="276" y="356" width="11" height="15" fill="rgb(205,83,38)"/><text x="279.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="372" width="11" height="15" fill="rgb(224,73,43)"/><text x="279.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.97%)</title><rect x="276" y="388" width="11" height="15" fill="rgb(254,153,3)"/><text x="279.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="404" width="11" height="15" fill="rgb(241,112,19)"/><text x="279.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="276" y="420" width="11" height="15" fill="rgb(234,85,46)"/><text x="279.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="276" y="436" width="11" height="15" fill="rgb(235,14,2)"/><text x="279.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="276" y="452" width="11" height="15" fill="rgb(215,24,10)"/><text x="279.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="468" width="11" height="15" fill="rgb(228,35,39)"/><text x="279.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.97%)</title><rect x="276" y="484" width="11" height="15" fill="rgb(234,69,25)"/><text x="279.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="500" width="11" height="15" fill="rgb(243,114,50)"/><text x="279.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="276" y="516" width="11" height="15" fill="rgb(218,193,11)"/><text x="279.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="276" y="532" width="11" height="15" fill="rgb(221,35,3)"/><text x="279.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="276" y="548" width="11" height="15" fill="rgb(213,43,11)"/><text x="279.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="564" width="11" height="15" fill="rgb(233,228,36)"/><text x="279.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.97%)</title><rect x="276" y="580" width="11" height="15" fill="rgb(236,122,20)"/><text x="279.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="596" width="11" height="15" fill="rgb(238,115,3)"/><text x="279.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.97%)</title><rect x="276" y="612" width="11" height="15" fill="rgb(210,214,6)"/><text x="279.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="628" width="11" height="15" fill="rgb(211,42,24)"/><text x="279.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="644" width="11" height="15" fill="rgb(237,125,31)"/><text x="279.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="276" y="660" width="11" height="15" fill="rgb(225,168,17)"/><text x="279.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="276" y="676" width="11" height="15" fill="rgb(223,48,36)"/><text x="279.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="276" y="692" width="11" height="15" fill="rgb(230,147,25)"/><text x="279.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="708" width="11" height="15" fill="rgb(206,189,12)"/><text x="279.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.97%)</title><rect x="276" y="724" width="11" height="15" fill="rgb(244,86,37)"/><text x="279.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="276" y="740" width="11" height="15" fill="rgb(210,147,36)"/><text x="279.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="276" y="756" width="11" height="15" fill="rgb(246,141,47)"/><text x="279.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="276" y="772" width="11" height="15" fill="rgb(244,142,8)"/><text x="279.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="276" y="788" width="11" height="15" fill="rgb(230,99,6)"/><text x="279.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="276" y="804" width="11" height="15" fill="rgb(254,159,4)"/><text x="279.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.19%)</title><rect x="285" y="820" width="2" height="15" fill="rgb(209,93,37)"/><text x="288.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="285" y="836" width="2" height="15" fill="rgb(244,138,3)"/><text x="288.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="285" y="852" width="2" height="15" fill="rgb(211,198,19)"/><text x="288.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="285" y="868" width="2" height="15" fill="rgb(252,114,1)"/><text x="288.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="285" y="884" width="2" height="15" fill="rgb(230,115,49)"/><text x="288.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="285" y="900" width="2" height="15" fill="rgb(212,24,37)"/><text x="288.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.19%)</title><rect x="285" y="916" width="2" height="15" fill="rgb(215,183,42)"/><text x="288.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="285" y="932" width="2" height="15" fill="rgb(211,213,48)"/><text x="288.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="285" y="948" width="2" height="15" fill="rgb(234,181,0)"/><text x="288.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="285" y="964" width="2" height="15" fill="rgb(234,66,50)"/><text x="288.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="285" y="980" width="2" height="15" fill="rgb(232,200,37)"/><text x="288.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="285" y="996" width="2" height="15" fill="rgb(239,88,36)"/><text x="288.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.19%)</title><rect x="285" y="1012" width="2" height="15" fill="rgb(225,84,14)"/><text x="288.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="285" y="1028" width="2" height="15" fill="rgb(226,132,21)"/><text x="288.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="285" y="1044" width="2" height="15" fill="rgb(229,46,33)"/><text x="288.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="285" y="1060" width="2" height="15" fill="rgb(228,51,44)"/><text x="288.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="285" y="1076" width="2" height="15" fill="rgb(221,221,35)"/><text x="288.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="285" y="1092" width="2" height="15" fill="rgb(238,104,38)"/><text x="288.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:9) (1 samples, 0.19%)</title><rect x="285" y="1108" width="2" height="15" fill="rgb(230,146,26)"/><text x="288.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="285" y="1124" width="2" height="15" fill="rgb(254,104,16)"/><text x="288.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="285" y="1140" width="2" height="15" fill="rgb(213,22,51)"/><text x="288.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="285" y="1156" width="2" height="15" fill="rgb(244,73,54)"/><text x="288.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="285" y="1172" width="2" height="15" fill="rgb(233,33,3)"/><text x="288.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.19%)</title><rect x="285" y="1188" width="2" height="15" fill="rgb(250,31,30)"/><text x="288.00" y="1198.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:954) (1 samples, 0.19%)</title><rect x="285" y="1204" width="2" height="15" fill="rgb(232,229,0)"/><text x="288.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.19%)</title><rect x="287" y="292" width="3" height="15" fill="rgb(234,72,46)"/><text x="290.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="308" width="3" height="15" fill="rgb(222,154,16)"/><text x="290.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="324" width="3" height="15" fill="rgb(217,112,51)"/><text x="290.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="340" width="3" height="15" fill="rgb(222,105,1)"/><text x="290.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="356" width="3" height="15" fill="rgb(231,31,54)"/><text x="290.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="372" width="3" height="15" fill="rgb(229,96,6)"/><text x="290.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.19%)</title><rect x="287" y="388" width="3" height="15" fill="rgb(253,107,45)"/><text x="290.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="404" width="3" height="15" fill="rgb(221,57,17)"/><text x="290.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="420" width="3" height="15" fill="rgb(205,53,51)"/><text x="290.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="436" width="3" height="15" fill="rgb(207,29,52)"/><text x="290.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="452" width="3" height="15" fill="rgb(247,18,19)"/><text x="290.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="468" width="3" height="15" fill="rgb(227,77,54)"/><text x="290.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.19%)</title><rect x="287" y="484" width="3" height="15" fill="rgb(254,16,0)"/><text x="290.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="500" width="3" height="15" fill="rgb(207,103,46)"/><text x="290.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="516" width="3" height="15" fill="rgb(218,126,5)"/><text x="290.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="532" width="3" height="15" fill="rgb(215,34,44)"/><text x="290.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="548" width="3" height="15" fill="rgb(242,198,16)"/><text x="290.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="564" width="3" height="15" fill="rgb(228,143,24)"/><text x="290.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.19%)</title><rect x="287" y="580" width="3" height="15" fill="rgb(205,66,14)"/><text x="290.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="596" width="3" height="15" fill="rgb(242,7,37)"/><text x="290.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="612" width="3" height="15" fill="rgb(235,45,16)"/><text x="290.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="628" width="3" height="15" fill="rgb(242,50,16)"/><text x="290.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="644" width="3" height="15" fill="rgb(206,64,32)"/><text x="290.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="660" width="3" height="15" fill="rgb(244,96,28)"/><text x="290.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.19%)</title><rect x="287" y="676" width="3" height="15" fill="rgb(216,225,27)"/><text x="290.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="692" width="3" height="15" fill="rgb(239,167,47)"/><text x="290.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="708" width="3" height="15" fill="rgb(208,102,46)"/><text x="290.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="724" width="3" height="15" fill="rgb(207,67,25)"/><text x="290.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="740" width="3" height="15" fill="rgb(234,183,5)"/><text x="290.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="756" width="3" height="15" fill="rgb(215,14,20)"/><text x="290.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.19%)</title><rect x="287" y="772" width="3" height="15" fill="rgb(224,34,33)"/><text x="290.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="788" width="3" height="15" fill="rgb(238,13,0)"/><text x="290.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="804" width="3" height="15" fill="rgb(248,98,50)"/><text x="290.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="820" width="3" height="15" fill="rgb(239,187,50)"/><text x="290.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="836" width="3" height="15" fill="rgb(232,36,44)"/><text x="290.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="852" width="3" height="15" fill="rgb(215,45,22)"/><text x="290.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.19%)</title><rect x="287" y="868" width="3" height="15" fill="rgb(232,179,52)"/><text x="290.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="884" width="3" height="15" fill="rgb(218,28,42)"/><text x="290.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="900" width="3" height="15" fill="rgb(220,87,49)"/><text x="290.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="916" width="3" height="15" fill="rgb(242,2,25)"/><text x="290.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="932" width="3" height="15" fill="rgb(239,102,22)"/><text x="290.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="948" width="3" height="15" fill="rgb(222,229,13)"/><text x="290.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.19%)</title><rect x="287" y="964" width="3" height="15" fill="rgb(218,13,43)"/><text x="290.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="980" width="3" height="15" fill="rgb(242,79,35)"/><text x="290.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="996" width="3" height="15" fill="rgb(238,135,2)"/><text x="290.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="1012" width="3" height="15" fill="rgb(224,107,5)"/><text x="290.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="1028" width="3" height="15" fill="rgb(219,186,9)"/><text x="290.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="1044" width="3" height="15" fill="rgb(235,36,49)"/><text x="290.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.19%)</title><rect x="287" y="1060" width="3" height="15" fill="rgb(216,218,14)"/><text x="290.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="1076" width="3" height="15" fill="rgb(239,206,0)"/><text x="290.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="1092" width="3" height="15" fill="rgb(230,181,20)"/><text x="290.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="1108" width="3" height="15" fill="rgb(222,143,13)"/><text x="290.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="1124" width="3" height="15" fill="rgb(234,162,40)"/><text x="290.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="1140" width="3" height="15" fill="rgb(249,45,45)"/><text x="290.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.19%)</title><rect x="287" y="1156" width="3" height="15" fill="rgb(243,117,12)"/><text x="290.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="1172" width="3" height="15" fill="rgb(211,227,25)"/><text x="290.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="1188" width="3" height="15" fill="rgb(226,125,2)"/><text x="290.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="1204" width="3" height="15" fill="rgb(246,33,9)"/><text x="290.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="1220" width="3" height="15" fill="rgb(211,202,4)"/><text x="290.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="1236" width="3" height="15" fill="rgb(210,75,35)"/><text x="290.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.19%)</title><rect x="287" y="1252" width="3" height="15" fill="rgb(214,115,32)"/><text x="290.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="1268" width="3" height="15" fill="rgb(254,39,52)"/><text x="290.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="1284" width="3" height="15" fill="rgb(232,9,13)"/><text x="290.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="1300" width="3" height="15" fill="rgb(211,44,5)"/><text x="290.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="1316" width="3" height="15" fill="rgb(224,215,35)"/><text x="290.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="1332" width="3" height="15" fill="rgb(215,139,33)"/><text x="290.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.19%)</title><rect x="287" y="1348" width="3" height="15" fill="rgb(237,50,50)"/><text x="290.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="1364" width="3" height="15" fill="rgb(253,41,14)"/><text x="290.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="1380" width="3" height="15" fill="rgb(207,192,41)"/><text x="290.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="1396" width="3" height="15" fill="rgb(224,128,7)"/><text x="290.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="1412" width="3" height="15" fill="rgb(207,114,24)"/><text x="290.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="1428" width="3" height="15" fill="rgb(251,21,15)"/><text x="290.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.19%)</title><rect x="287" y="1444" width="3" height="15" fill="rgb(251,127,44)"/><text x="290.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="1460" width="3" height="15" fill="rgb(246,128,2)"/><text x="290.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="1476" width="3" height="15" fill="rgb(238,216,2)"/><text x="290.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="1492" width="3" height="15" fill="rgb(206,104,18)"/><text x="290.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="1508" width="3" height="15" fill="rgb(218,10,50)"/><text x="290.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="1524" width="3" height="15" fill="rgb(215,224,54)"/><text x="290.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.19%)</title><rect x="287" y="1540" width="3" height="15" fill="rgb(231,115,14)"/><text x="290.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="287" y="1556" width="3" height="15" fill="rgb(209,121,23)"/><text x="290.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="287" y="1572" width="3" height="15" fill="rgb(244,35,20)"/><text x="290.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="287" y="1588" width="3" height="15" fill="rgb(218,90,36)"/><text x="290.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="287" y="1604" width="3" height="15" fill="rgb(241,89,28)"/><text x="290.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="287" y="1620" width="3" height="15" fill="rgb(246,174,40)"/><text x="290.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:30) (1 samples, 0.19%)</title><rect x="287" y="1636" width="3" height="15" fill="rgb(235,204,12)"/><text x="290.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.19%)</title><rect x="287" y="1652" width="3" height="15" fill="rgb(243,100,11)"/><text x="290.00" y="1662.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.19%)</title><rect x="287" y="1668" width="3" height="15" fill="rgb(221,125,32)"/><text x="290.00" y="1678.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:85) (1 samples, 0.19%)</title><rect x="287" y="1684" width="3" height="15" fill="rgb(235,38,22)"/><text x="290.00" y="1694.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.19%)</title><rect x="290" y="820" width="2" height="15" fill="rgb(215,55,42)"/><text x="293.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="290" y="836" width="2" height="15" fill="rgb(220,157,37)"/><text x="293.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="290" y="852" width="2" height="15" fill="rgb(223,223,17)"/><text x="293.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="290" y="868" width="2" height="15" fill="rgb(215,39,0)"/><text x="293.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="290" y="884" width="2" height="15" fill="rgb(246,96,40)"/><text x="293.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:672) (1 samples, 0.19%)</title><rect x="290" y="900" width="2" height="15" fill="rgb(216,107,7)"/><text x="293.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (2 samples, 0.39%)</title><rect x="290" y="532" width="4" height="15" fill="rgb(233,134,2)"/><text x="293.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="290" y="548" width="4" height="15" fill="rgb(223,79,25)"/><text x="293.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="290" y="564" width="4" height="15" fill="rgb(227,55,10)"/><text x="293.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="290" y="580" width="4" height="15" fill="rgb(215,16,26)"/><text x="293.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="290" y="596" width="4" height="15" fill="rgb(208,176,17)"/><text x="293.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="290" y="612" width="4" height="15" fill="rgb(226,6,46)"/><text x="293.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.39%)</title><rect x="290" y="628" width="4" height="15" fill="rgb(214,77,8)"/><text x="293.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="290" y="644" width="4" height="15" fill="rgb(222,141,19)"/><text x="293.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="290" y="660" width="4" height="15" fill="rgb(232,103,34)"/><text x="293.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="290" y="676" width="4" height="15" fill="rgb(224,115,29)"/><text x="293.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="290" y="692" width="4" height="15" fill="rgb(254,31,40)"/><text x="293.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="290" y="708" width="4" height="15" fill="rgb(230,104,20)"/><text x="293.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.39%)</title><rect x="290" y="724" width="4" height="15" fill="rgb(241,123,5)"/><text x="293.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="290" y="740" width="4" height="15" fill="rgb(232,173,0)"/><text x="293.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="290" y="756" width="4" height="15" fill="rgb(253,100,29)"/><text x="293.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="290" y="772" width="4" height="15" fill="rgb(246,50,39)"/><text x="293.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="290" y="788" width="4" height="15" fill="rgb(230,155,37)"/><text x="293.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="290" y="804" width="4" height="15" fill="rgb(221,142,31)"/><text x="293.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.19%)</title><rect x="292" y="820" width="2" height="15" fill="rgb(236,202,39)"/><text x="295.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="836" width="2" height="15" fill="rgb(238,110,17)"/><text x="295.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="852" width="2" height="15" fill="rgb(236,21,7)"/><text x="295.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="868" width="2" height="15" fill="rgb(205,156,35)"/><text x="295.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="884" width="2" height="15" fill="rgb(222,187,11)"/><text x="295.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="900" width="2" height="15" fill="rgb(233,148,46)"/><text x="295.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.19%)</title><rect x="292" y="916" width="2" height="15" fill="rgb(215,174,5)"/><text x="295.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="932" width="2" height="15" fill="rgb(251,4,17)"/><text x="295.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="948" width="2" height="15" fill="rgb(219,84,32)"/><text x="295.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="964" width="2" height="15" fill="rgb(231,49,13)"/><text x="295.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="980" width="2" height="15" fill="rgb(211,68,32)"/><text x="295.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="996" width="2" height="15" fill="rgb(245,164,13)"/><text x="295.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.19%)</title><rect x="292" y="1012" width="2" height="15" fill="rgb(208,193,44)"/><text x="295.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="1028" width="2" height="15" fill="rgb(244,132,19)"/><text x="295.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="1044" width="2" height="15" fill="rgb(227,121,34)"/><text x="295.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="1060" width="2" height="15" fill="rgb(210,60,13)"/><text x="295.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="1076" width="2" height="15" fill="rgb(215,113,36)"/><text x="295.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1092" width="2" height="15" fill="rgb(205,52,20)"/><text x="295.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.19%)</title><rect x="292" y="1108" width="2" height="15" fill="rgb(227,113,22)"/><text x="295.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="292" y="1124" width="2" height="15" fill="rgb(235,98,41)"/><text x="295.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1140" width="2" height="15" fill="rgb(252,229,36)"/><text x="295.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="1156" width="2" height="15" fill="rgb(206,189,21)"/><text x="295.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="1172" width="2" height="15" fill="rgb(251,186,6)"/><text x="295.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="1188" width="2" height="15" fill="rgb(243,83,10)"/><text x="295.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="1204" width="2" height="15" fill="rgb(206,89,39)"/><text x="295.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1220" width="2" height="15" fill="rgb(209,213,35)"/><text x="295.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.19%)</title><rect x="292" y="1236" width="2" height="15" fill="rgb(213,137,12)"/><text x="295.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="292" y="1252" width="2" height="15" fill="rgb(214,164,26)"/><text x="295.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1268" width="2" height="15" fill="rgb(234,148,45)"/><text x="295.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="1284" width="2" height="15" fill="rgb(220,97,31)"/><text x="295.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="1300" width="2" height="15" fill="rgb(219,84,48)"/><text x="295.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="1316" width="2" height="15" fill="rgb(251,117,43)"/><text x="295.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="1332" width="2" height="15" fill="rgb(236,129,31)"/><text x="295.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1348" width="2" height="15" fill="rgb(252,51,32)"/><text x="295.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.19%)</title><rect x="292" y="1364" width="2" height="15" fill="rgb(245,67,54)"/><text x="295.00" y="1374.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="292" y="1380" width="2" height="15" fill="rgb(227,85,7)"/><text x="295.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1396" width="2" height="15" fill="rgb(250,228,49)"/><text x="295.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="1412" width="2" height="15" fill="rgb(212,4,35)"/><text x="295.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="1428" width="2" height="15" fill="rgb(212,141,23)"/><text x="295.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="1444" width="2" height="15" fill="rgb(253,168,37)"/><text x="295.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="1460" width="2" height="15" fill="rgb(251,62,21)"/><text x="295.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1476" width="2" height="15" fill="rgb(248,65,4)"/><text x="295.00" y="1486.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.19%)</title><rect x="292" y="1492" width="2" height="15" fill="rgb(210,217,49)"/><text x="295.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="1508" width="2" height="15" fill="rgb(215,158,48)"/><text x="295.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="1524" width="2" height="15" fill="rgb(230,94,44)"/><text x="295.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="1540" width="2" height="15" fill="rgb(216,110,39)"/><text x="295.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="1556" width="2" height="15" fill="rgb(248,229,30)"/><text x="295.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1572" width="2" height="15" fill="rgb(253,31,15)"/><text x="295.00" y="1582.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py:20) (1 samples, 0.19%)</title><rect x="292" y="1588" width="2" height="15" fill="rgb(250,73,21)"/><text x="295.00" y="1598.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="292" y="1604" width="2" height="15" fill="rgb(217,131,39)"/><text x="295.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1620" width="2" height="15" fill="rgb(254,161,29)"/><text x="295.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="1636" width="2" height="15" fill="rgb(228,176,37)"/><text x="295.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="1652" width="2" height="15" fill="rgb(231,77,9)"/><text x="295.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="1668" width="2" height="15" fill="rgb(252,138,19)"/><text x="295.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="1684" width="2" height="15" fill="rgb(229,105,36)"/><text x="295.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1700" width="2" height="15" fill="rgb(251,127,14)"/><text x="295.00" y="1710.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/fitpack.py:10) (1 samples, 0.19%)</title><rect x="292" y="1716" width="2" height="15" fill="rgb(225,23,47)"/><text x="295.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="292" y="1732" width="2" height="15" fill="rgb(231,178,32)"/><text x="295.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="292" y="1748" width="2" height="15" fill="rgb(246,204,50)"/><text x="295.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="292" y="1764" width="2" height="15" fill="rgb(234,29,51)"/><text x="295.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="292" y="1780" width="2" height="15" fill="rgb(217,55,16)"/><text x="295.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="292" y="1796" width="2" height="15" fill="rgb(207,83,40)"/><text x="295.00" y="1806.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/_fitpack_impl.py:31) (1 samples, 0.19%)</title><rect x="292" y="1812" width="2" height="15" fill="rgb(237,128,36)"/><text x="295.00" y="1822.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:200) (1 samples, 0.19%)</title><rect x="292" y="1828" width="2" height="15" fill="rgb(254,194,53)"/><text x="295.00" y="1838.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:189) (1 samples, 0.19%)</title><rect x="292" y="1844" width="2" height="15" fill="rgb(235,35,48)"/><text x="295.00" y="1854.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.19%)</title><rect x="294" y="1348" width="3" height="15" fill="rgb(224,107,15)"/><text x="297.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="294" y="1364" width="3" height="15" fill="rgb(235,216,26)"/><text x="297.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="294" y="1380" width="3" height="15" fill="rgb(210,108,33)"/><text x="297.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="294" y="1396" width="3" height="15" fill="rgb(244,8,48)"/><text x="297.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="294" y="1412" width="3" height="15" fill="rgb(220,97,52)"/><text x="297.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="294" y="1428" width="3" height="15" fill="rgb(251,159,18)"/><text x="297.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.19%)</title><rect x="294" y="1444" width="3" height="15" fill="rgb(240,125,4)"/><text x="297.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="294" y="1460" width="3" height="15" fill="rgb(241,134,7)"/><text x="297.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="294" y="1476" width="3" height="15" fill="rgb(211,180,39)"/><text x="297.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="294" y="1492" width="3" height="15" fill="rgb(211,184,9)"/><text x="297.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="294" y="1508" width="3" height="15" fill="rgb(239,151,32)"/><text x="297.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="294" y="1524" width="3" height="15" fill="rgb(216,25,36)"/><text x="297.00" y="1534.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:9) (1 samples, 0.19%)</title><rect x="294" y="1540" width="3" height="15" fill="rgb(227,72,28)"/><text x="297.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="294" y="1556" width="3" height="15" fill="rgb(249,104,33)"/><text x="297.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="294" y="1572" width="3" height="15" fill="rgb(237,1,33)"/><text x="297.00" y="1582.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="294" y="1588" width="3" height="15" fill="rgb(235,127,23)"/><text x="297.00" y="1598.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="294" y="1604" width="3" height="15" fill="rgb(222,226,23)"/><text x="297.00" y="1614.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.19%)</title><rect x="294" y="1620" width="3" height="15" fill="rgb(225,41,24)"/><text x="297.00" y="1630.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.19%)</title><rect x="294" y="1636" width="3" height="15" fill="rgb(210,1,19)"/><text x="297.00" y="1646.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1408) (1 samples, 0.19%)</title><rect x="294" y="1652" width="3" height="15" fill="rgb(221,130,40)"/><text x="297.00" y="1662.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.19%)</title><rect x="294" y="1668" width="3" height="15" fill="rgb(218,38,34)"/><text x="297.00" y="1678.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="294" y="1684" width="3" height="15" fill="rgb(247,185,3)"/><text x="297.00" y="1694.50"></text></g><g><title>0x7f4a6654a237 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="294" y="1700" width="3" height="15" fill="rgb(205,73,22)"/><text x="297.00" y="1710.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:4) (5 samples, 0.97%)</title><rect x="287" y="148" width="12" height="15" fill="rgb(248,130,10)"/><text x="290.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="287" y="164" width="12" height="15" fill="rgb(214,192,28)"/><text x="290.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.97%)</title><rect x="287" y="180" width="12" height="15" fill="rgb(207,146,50)"/><text x="290.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="287" y="196" width="12" height="15" fill="rgb(216,137,22)"/><text x="290.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="287" y="212" width="12" height="15" fill="rgb(213,145,1)"/><text x="290.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="287" y="228" width="12" height="15" fill="rgb(235,61,41)"/><text x="290.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="287" y="244" width="12" height="15" fill="rgb(217,4,37)"/><text x="290.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="287" y="260" width="12" height="15" fill="rgb(216,111,27)"/><text x="290.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="287" y="276" width="12" height="15" fill="rgb(235,163,21)"/><text x="290.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.77%)</title><rect x="290" y="292" width="9" height="15" fill="rgb(228,84,13)"/><text x="293.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="290" y="308" width="9" height="15" fill="rgb(243,131,21)"/><text x="293.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.77%)</title><rect x="290" y="324" width="9" height="15" fill="rgb(236,71,38)"/><text x="293.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="290" y="340" width="9" height="15" fill="rgb(221,53,21)"/><text x="293.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="290" y="356" width="9" height="15" fill="rgb(231,33,50)"/><text x="293.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="290" y="372" width="9" height="15" fill="rgb(216,129,53)"/><text x="293.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="290" y="388" width="9" height="15" fill="rgb(216,100,48)"/><text x="293.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="290" y="404" width="9" height="15" fill="rgb(243,72,51)"/><text x="293.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="290" y="420" width="9" height="15" fill="rgb(237,46,6)"/><text x="293.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.77%)</title><rect x="290" y="436" width="9" height="15" fill="rgb(220,32,39)"/><text x="293.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="290" y="452" width="9" height="15" fill="rgb(210,151,3)"/><text x="293.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="290" y="468" width="9" height="15" fill="rgb(211,204,18)"/><text x="293.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="290" y="484" width="9" height="15" fill="rgb(222,89,31)"/><text x="293.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="290" y="500" width="9" height="15" fill="rgb(227,190,32)"/><text x="293.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="290" y="516" width="9" height="15" fill="rgb(238,65,47)"/><text x="293.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.39%)</title><rect x="294" y="532" width="5" height="15" fill="rgb(247,87,24)"/><text x="297.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="548" width="5" height="15" fill="rgb(247,32,26)"/><text x="297.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="564" width="5" height="15" fill="rgb(223,210,50)"/><text x="297.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="580" width="5" height="15" fill="rgb(206,110,24)"/><text x="297.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="596" width="5" height="15" fill="rgb(247,213,2)"/><text x="297.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="612" width="5" height="15" fill="rgb(236,145,48)"/><text x="297.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.39%)</title><rect x="294" y="628" width="5" height="15" fill="rgb(253,134,10)"/><text x="297.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="644" width="5" height="15" fill="rgb(216,20,41)"/><text x="297.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="660" width="5" height="15" fill="rgb(240,0,1)"/><text x="297.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="676" width="5" height="15" fill="rgb(213,89,9)"/><text x="297.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="692" width="5" height="15" fill="rgb(253,87,47)"/><text x="297.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="708" width="5" height="15" fill="rgb(229,80,22)"/><text x="297.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.39%)</title><rect x="294" y="724" width="5" height="15" fill="rgb(225,177,40)"/><text x="297.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="740" width="5" height="15" fill="rgb(205,10,45)"/><text x="297.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="294" y="756" width="5" height="15" fill="rgb(243,138,12)"/><text x="297.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="772" width="5" height="15" fill="rgb(221,109,28)"/><text x="297.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="788" width="5" height="15" fill="rgb(223,52,44)"/><text x="297.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="804" width="5" height="15" fill="rgb(206,181,54)"/><text x="297.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="820" width="5" height="15" fill="rgb(247,150,25)"/><text x="297.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="836" width="5" height="15" fill="rgb(245,6,38)"/><text x="297.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="852" width="5" height="15" fill="rgb(237,86,17)"/><text x="297.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.39%)</title><rect x="294" y="868" width="5" height="15" fill="rgb(208,53,11)"/><text x="297.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="884" width="5" height="15" fill="rgb(217,0,39)"/><text x="297.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="900" width="5" height="15" fill="rgb(207,17,22)"/><text x="297.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="916" width="5" height="15" fill="rgb(222,39,30)"/><text x="297.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="932" width="5" height="15" fill="rgb(251,156,13)"/><text x="297.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="948" width="5" height="15" fill="rgb(246,201,14)"/><text x="297.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.39%)</title><rect x="294" y="964" width="5" height="15" fill="rgb(232,68,3)"/><text x="297.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="980" width="5" height="15" fill="rgb(216,16,21)"/><text x="297.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="996" width="5" height="15" fill="rgb(253,135,17)"/><text x="297.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="1012" width="5" height="15" fill="rgb(215,15,54)"/><text x="297.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="1028" width="5" height="15" fill="rgb(220,25,52)"/><text x="297.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="1044" width="5" height="15" fill="rgb(244,52,46)"/><text x="297.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (2 samples, 0.39%)</title><rect x="294" y="1060" width="5" height="15" fill="rgb(233,155,31)"/><text x="297.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="1076" width="5" height="15" fill="rgb(214,147,11)"/><text x="297.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="1092" width="5" height="15" fill="rgb(249,134,42)"/><text x="297.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="1108" width="5" height="15" fill="rgb(234,65,32)"/><text x="297.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="1124" width="5" height="15" fill="rgb(251,13,0)"/><text x="297.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="1140" width="5" height="15" fill="rgb(247,63,26)"/><text x="297.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (2 samples, 0.39%)</title><rect x="294" y="1156" width="5" height="15" fill="rgb(222,156,16)"/><text x="297.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="1172" width="5" height="15" fill="rgb(213,126,52)"/><text x="297.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="1188" width="5" height="15" fill="rgb(224,128,23)"/><text x="297.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="1204" width="5" height="15" fill="rgb(228,185,12)"/><text x="297.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="1220" width="5" height="15" fill="rgb(233,109,45)"/><text x="297.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="1236" width="5" height="15" fill="rgb(214,185,4)"/><text x="297.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (2 samples, 0.39%)</title><rect x="294" y="1252" width="5" height="15" fill="rgb(224,186,18)"/><text x="297.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="294" y="1268" width="5" height="15" fill="rgb(229,182,47)"/><text x="297.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="294" y="1284" width="5" height="15" fill="rgb(225,109,18)"/><text x="297.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="294" y="1300" width="5" height="15" fill="rgb(244,102,23)"/><text x="297.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="294" y="1316" width="5" height="15" fill="rgb(234,147,28)"/><text x="297.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="294" y="1332" width="5" height="15" fill="rgb(219,15,42)"/><text x="297.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:17) (1 samples, 0.19%)</title><rect x="297" y="1348" width="2" height="15" fill="rgb(223,117,1)"/><text x="300.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="297" y="1364" width="2" height="15" fill="rgb(235,56,11)"/><text x="300.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="297" y="1380" width="2" height="15" fill="rgb(242,167,54)"/><text x="300.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="297" y="1396" width="2" height="15" fill="rgb(210,169,14)"/><text x="300.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="297" y="1412" width="2" height="15" fill="rgb(249,64,29)"/><text x="300.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="297" y="1428" width="2" height="15" fill="rgb(222,84,31)"/><text x="300.00" y="1438.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="297" y="1444" width="2" height="15" fill="rgb(247,62,30)"/><text x="300.00" y="1454.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="297" y="1460" width="2" height="15" fill="rgb(215,69,29)"/><text x="300.00" y="1470.50"></text></g><g><title>0x7f4a6650c8a4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="297" y="1476" width="2" height="15" fill="rgb(250,131,15)"/><text x="300.00" y="1486.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:4) (15 samples, 2.90%)</title><rect x="269" y="52" width="34" height="15" fill="rgb(216,84,41)"/><text x="272.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 2.90%)</title><rect x="269" y="68" width="34" height="15" fill="rgb(231,14,0)"/><text x="272.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 2.90%)</title><rect x="269" y="84" width="34" height="15" fill="rgb(221,37,32)"/><text x="272.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 2.90%)</title><rect x="269" y="100" width="34" height="15" fill="rgb(212,75,31)"/><text x="272.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 2.90%)</title><rect x="269" y="116" width="34" height="15" fill="rgb(251,191,16)"/><text x="272.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 2.90%)</title><rect x="269" y="132" width="34" height="15" fill="rgb(217,85,47)"/><text x="272.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:8) (2 samples, 0.39%)</title><rect x="299" y="148" width="4" height="15" fill="rgb(254,61,15)"/><text x="302.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="299" y="164" width="4" height="15" fill="rgb(247,204,13)"/><text x="302.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="299" y="180" width="4" height="15" fill="rgb(219,18,3)"/><text x="302.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="299" y="196" width="4" height="15" fill="rgb(226,209,32)"/><text x="302.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="299" y="212" width="4" height="15" fill="rgb(219,130,51)"/><text x="302.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="299" y="228" width="4" height="15" fill="rgb(214,160,35)"/><text x="302.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.39%)</title><rect x="299" y="244" width="4" height="15" fill="rgb(224,17,29)"/><text x="302.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="299" y="260" width="4" height="15" fill="rgb(241,108,11)"/><text x="302.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="299" y="276" width="4" height="15" fill="rgb(211,39,11)"/><text x="302.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="299" y="292" width="4" height="15" fill="rgb(235,122,19)"/><text x="302.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="299" y="308" width="4" height="15" fill="rgb(230,54,15)"/><text x="302.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="299" y="324" width="4" height="15" fill="rgb(211,70,12)"/><text x="302.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.39%)</title><rect x="299" y="340" width="4" height="15" fill="rgb(205,207,1)"/><text x="302.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="299" y="356" width="4" height="15" fill="rgb(231,45,6)"/><text x="302.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="299" y="372" width="4" height="15" fill="rgb(231,82,40)"/><text x="302.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="299" y="388" width="4" height="15" fill="rgb(222,106,45)"/><text x="302.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="299" y="404" width="4" height="15" fill="rgb(252,214,0)"/><text x="302.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="299" y="420" width="4" height="15" fill="rgb(208,70,46)"/><text x="302.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="299" y="436" width="4" height="15" fill="rgb(249,202,33)"/><text x="302.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="299" y="452" width="4" height="15" fill="rgb(226,141,3)"/><text x="302.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="299" y="468" width="4" height="15" fill="rgb(242,45,17)"/><text x="302.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.39%)</title><rect x="299" y="484" width="4" height="15" fill="rgb(212,8,35)"/><text x="302.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="299" y="500" width="4" height="15" fill="rgb(244,166,20)"/><text x="302.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="299" y="516" width="4" height="15" fill="rgb(228,161,12)"/><text x="302.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="299" y="532" width="4" height="15" fill="rgb(214,69,18)"/><text x="302.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="299" y="548" width="4" height="15" fill="rgb(243,146,25)"/><text x="302.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="299" y="564" width="4" height="15" fill="rgb(222,118,9)"/><text x="302.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (2 samples, 0.39%)</title><rect x="299" y="580" width="4" height="15" fill="rgb(219,195,44)"/><text x="302.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="299" y="596" width="4" height="15" fill="rgb(250,65,51)"/><text x="302.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="299" y="612" width="4" height="15" fill="rgb(219,134,22)"/><text x="302.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="299" y="628" width="4" height="15" fill="rgb(244,90,6)"/><text x="302.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="299" y="644" width="4" height="15" fill="rgb(212,204,54)"/><text x="302.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="299" y="660" width="4" height="15" fill="rgb(234,5,22)"/><text x="302.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (2 samples, 0.39%)</title><rect x="299" y="676" width="4" height="15" fill="rgb(221,107,44)"/><text x="302.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="299" y="692" width="4" height="15" fill="rgb(239,89,33)"/><text x="302.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="299" y="708" width="4" height="15" fill="rgb(208,48,11)"/><text x="302.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="299" y="724" width="4" height="15" fill="rgb(249,203,33)"/><text x="302.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="299" y="740" width="4" height="15" fill="rgb(212,46,32)"/><text x="302.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="299" y="756" width="4" height="15" fill="rgb(219,228,33)"/><text x="302.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (2 samples, 0.39%)</title><rect x="299" y="772" width="4" height="15" fill="rgb(251,42,36)"/><text x="302.00" y="782.50"></text></g><g><title>compile (re.py:234) (2 samples, 0.39%)</title><rect x="299" y="788" width="4" height="15" fill="rgb(251,140,37)"/><text x="302.00" y="798.50"></text></g><g><title>_compile (re.py:286) (2 samples, 0.39%)</title><rect x="299" y="804" width="4" height="15" fill="rgb(248,92,1)"/><text x="302.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (2 samples, 0.39%)</title><rect x="299" y="820" width="4" height="15" fill="rgb(205,177,3)"/><text x="302.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (2 samples, 0.39%)</title><rect x="299" y="836" width="4" height="15" fill="rgb(223,23,53)"/><text x="302.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.39%)</title><rect x="299" y="852" width="4" height="15" fill="rgb(209,209,26)"/><text x="302.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (2 samples, 0.39%)</title><rect x="299" y="868" width="4" height="15" fill="rgb(236,73,6)"/><text x="302.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.39%)</title><rect x="299" y="884" width="4" height="15" fill="rgb(236,108,29)"/><text x="302.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:477) (2 samples, 0.39%)</title><rect x="299" y="900" width="4" height="15" fill="rgb(224,184,18)"/><text x="302.00" y="910.50"></text></g><g><title>__init__ (sre_parse.py:112) (2 samples, 0.39%)</title><rect x="299" y="916" width="4" height="15" fill="rgb(221,145,50)"/><text x="302.00" y="926.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.19%)</title><rect x="303" y="196" width="3" height="15" fill="rgb(220,23,28)"/><text x="306.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.19%)</title><rect x="303" y="212" width="3" height="15" fill="rgb(216,79,34)"/><text x="306.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.19%)</title><rect x="303" y="228" width="3" height="15" fill="rgb(242,203,49)"/><text x="306.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.19%)</title><rect x="303" y="244" width="3" height="15" fill="rgb(218,144,32)"/><text x="306.00" y="254.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.19%)</title><rect x="303" y="260" width="3" height="15" fill="rgb(245,49,5)"/><text x="306.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="303" y="276" width="3" height="15" fill="rgb(222,115,49)"/><text x="306.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.19%)</title><rect x="303" y="292" width="3" height="15" fill="rgb(209,74,3)"/><text x="306.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="303" y="308" width="3" height="15" fill="rgb(219,197,40)"/><text x="306.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="303" y="324" width="3" height="15" fill="rgb(227,46,34)"/><text x="306.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="303" y="340" width="3" height="15" fill="rgb(241,174,51)"/><text x="306.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(215,6,40)"/><text x="306.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="303" y="372" width="3" height="15" fill="rgb(216,212,13)"/><text x="306.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.19%)</title><rect x="303" y="388" width="3" height="15" fill="rgb(226,228,31)"/><text x="306.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.19%)</title><rect x="306" y="228" width="2" height="15" fill="rgb(233,143,36)"/><text x="309.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.19%)</title><rect x="306" y="244" width="2" height="15" fill="rgb(226,65,30)"/><text x="309.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="306" y="260" width="2" height="15" fill="rgb(243,150,5)"/><text x="309.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="306" y="276" width="2" height="15" fill="rgb(240,137,35)"/><text x="309.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:18) (3 samples, 0.58%)</title><rect x="303" y="100" width="7" height="15" fill="rgb(234,104,32)"/><text x="306.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.58%)</title><rect x="303" y="116" width="7" height="15" fill="rgb(225,212,50)"/><text x="306.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.58%)</title><rect x="303" y="132" width="7" height="15" fill="rgb(243,118,25)"/><text x="306.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.58%)</title><rect x="303" y="148" width="7" height="15" fill="rgb(214,120,49)"/><text x="306.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (3 samples, 0.58%)</title><rect x="303" y="164" width="7" height="15" fill="rgb(205,159,52)"/><text x="306.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (3 samples, 0.58%)</title><rect x="303" y="180" width="7" height="15" fill="rgb(250,227,10)"/><text x="306.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (2 samples, 0.39%)</title><rect x="306" y="196" width="4" height="15" fill="rgb(252,58,11)"/><text x="309.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.39%)</title><rect x="306" y="212" width="4" height="15" fill="rgb(254,62,43)"/><text x="309.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (1 samples, 0.19%)</title><rect x="308" y="228" width="2" height="15" fill="rgb(205,201,10)"/><text x="311.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.19%)</title><rect x="319" y="180" width="3" height="15" fill="rgb(210,180,36)"/><text x="322.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.19%)</title><rect x="322" y="196" width="2" height="15" fill="rgb(253,204,22)"/><text x="325.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.19%)</title><rect x="322" y="212" width="2" height="15" fill="rgb(253,0,28)"/><text x="325.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.19%)</title><rect x="322" y="228" width="2" height="15" fill="rgb(222,38,6)"/><text x="325.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.19%)</title><rect x="322" y="244" width="2" height="15" fill="rgb(231,15,40)"/><text x="325.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1246) (1 samples, 0.19%)</title><rect x="322" y="260" width="2" height="15" fill="rgb(240,221,51)"/><text x="325.00" y="270.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.19%)</title><rect x="328" y="260" width="3" height="15" fill="rgb(249,140,33)"/><text x="331.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.19%)</title><rect x="328" y="276" width="3" height="15" fill="rgb(206,12,26)"/><text x="331.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.39%)</title><rect x="333" y="308" width="5" height="15" fill="rgb(212,59,41)"/><text x="336.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.39%)</title><rect x="333" y="324" width="5" height="15" fill="rgb(253,34,26)"/><text x="336.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.39%)</title><rect x="333" y="340" width="5" height="15" fill="rgb(238,27,8)"/><text x="336.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.39%)</title><rect x="333" y="356" width="5" height="15" fill="rgb(253,140,49)"/><text x="336.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.39%)</title><rect x="333" y="372" width="5" height="15" fill="rgb(209,102,34)"/><text x="336.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.39%)</title><rect x="333" y="388" width="5" height="15" fill="rgb(221,25,9)"/><text x="336.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="338" y="356" width="2" height="15" fill="rgb(214,51,29)"/><text x="341.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="338" y="372" width="2" height="15" fill="rgb(247,160,53)"/><text x="341.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1612) (1 samples, 0.19%)</title><rect x="338" y="388" width="2" height="15" fill="rgb(229,154,49)"/><text x="341.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.19%)</title><rect x="340" y="372" width="2" height="15" fill="rgb(246,155,5)"/><text x="343.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (6 samples, 1.16%)</title><rect x="331" y="260" width="13" height="15" fill="rgb(245,55,23)"/><text x="334.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 1.16%)</title><rect x="331" y="276" width="13" height="15" fill="rgb(231,13,52)"/><text x="334.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.97%)</title><rect x="333" y="292" width="11" height="15" fill="rgb(244,113,33)"/><text x="336.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.58%)</title><rect x="338" y="308" width="6" height="15" fill="rgb(225,115,0)"/><text x="341.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.58%)</title><rect x="338" y="324" width="6" height="15" fill="rgb(225,219,30)"/><text x="341.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.58%)</title><rect x="338" y="340" width="6" height="15" fill="rgb(244,12,17)"/><text x="341.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.39%)</title><rect x="340" y="356" width="4" height="15" fill="rgb(238,93,19)"/><text x="343.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="342" y="372" width="2" height="15" fill="rgb(233,41,8)"/><text x="345.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="342" y="388" width="2" height="15" fill="rgb(229,217,12)"/><text x="345.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.19%)</title><rect x="342" y="404" width="2" height="15" fill="rgb(240,100,15)"/><text x="345.00" y="414.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (9 samples, 1.74%)</title><rect x="326" y="244" width="21" height="15" fill="rgb(236,71,7)"/><text x="329.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="344" y="260" width="3" height="15" fill="rgb(251,55,9)"/><text x="347.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="344" y="276" width="3" height="15" fill="rgb(248,42,53)"/><text x="347.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="344" y="292" width="3" height="15" fill="rgb(247,104,0)"/><text x="347.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.19%)</title><rect x="344" y="308" width="3" height="15" fill="rgb(219,47,51)"/><text x="347.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="347" y="260" width="2" height="15" fill="rgb(241,50,21)"/><text x="350.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="347" y="276" width="2" height="15" fill="rgb(226,156,9)"/><text x="350.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="347" y="292" width="2" height="15" fill="rgb(240,101,17)"/><text x="350.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="347" y="308" width="2" height="15" fill="rgb(218,220,21)"/><text x="350.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="347" y="324" width="2" height="15" fill="rgb(245,108,26)"/><text x="350.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="349" y="276" width="2" height="15" fill="rgb(240,121,5)"/><text x="352.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.19%)</title><rect x="349" y="292" width="2" height="15" fill="rgb(207,163,21)"/><text x="352.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.19%)</title><rect x="351" y="308" width="2" height="15" fill="rgb(246,22,14)"/><text x="354.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.19%)</title><rect x="351" y="324" width="2" height="15" fill="rgb(242,179,32)"/><text x="354.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.58%)</title><rect x="349" y="260" width="7" height="15" fill="rgb(230,85,40)"/><text x="352.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.39%)</title><rect x="351" y="276" width="5" height="15" fill="rgb(206,214,18)"/><text x="354.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.39%)</title><rect x="351" y="292" width="5" height="15" fill="rgb(224,213,3)"/><text x="354.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="353" y="308" width="3" height="15" fill="rgb(250,90,42)"/><text x="356.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="353" y="324" width="3" height="15" fill="rgb(220,62,52)"/><text x="356.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="353" y="340" width="3" height="15" fill="rgb(241,158,10)"/><text x="356.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (1 samples, 0.19%)</title><rect x="353" y="356" width="3" height="15" fill="rgb(206,197,50)"/><text x="356.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.19%)</title><rect x="353" y="372" width="3" height="15" fill="rgb(221,215,13)"/><text x="356.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="356" y="260" width="2" height="15" fill="rgb(216,157,48)"/><text x="359.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.19%)</title><rect x="356" y="276" width="2" height="15" fill="rgb(237,85,26)"/><text x="359.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.19%)</title><rect x="356" y="292" width="2" height="15" fill="rgb(249,202,14)"/><text x="359.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (16 samples, 3.09%)</title><rect x="324" y="196" width="36" height="15" fill="rgb(228,29,42)"/><text x="327.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (15 samples, 2.90%)</title><rect x="326" y="212" width="34" height="15" fill="rgb(218,33,54)"/><text x="329.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (15 samples, 2.90%)</title><rect x="326" y="228" width="34" height="15" fill="rgb(247,166,54)"/><text x="329.00" y="238.50">_r..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (6 samples, 1.16%)</title><rect x="347" y="244" width="13" height="15" fill="rgb(225,61,15)"/><text x="350.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.19%)</title><rect x="358" y="260" width="2" height="15" fill="rgb(214,48,45)"/><text x="361.00" y="270.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.19%)</title><rect x="360" y="324" width="3" height="15" fill="rgb(209,12,0)"/><text x="363.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.19%)</title><rect x="360" y="340" width="3" height="15" fill="rgb(254,58,33)"/><text x="363.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.19%)</title><rect x="360" y="356" width="3" height="15" fill="rgb(208,197,53)"/><text x="363.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="360" y="372" width="3" height="15" fill="rgb(230,56,16)"/><text x="363.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="360" y="388" width="3" height="15" fill="rgb(254,209,40)"/><text x="363.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="360" y="404" width="3" height="15" fill="rgb(237,77,1)"/><text x="363.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="360" y="420" width="3" height="15" fill="rgb(243,215,37)"/><text x="363.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="360" y="436" width="3" height="15" fill="rgb(240,108,10)"/><text x="363.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 2.32%)</title><rect x="360" y="276" width="28" height="15" fill="rgb(250,108,37)"/><text x="363.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (12 samples, 2.32%)</title><rect x="360" y="292" width="28" height="15" fill="rgb(249,195,40)"/><text x="363.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (12 samples, 2.32%)</title><rect x="360" y="308" width="28" height="15" fill="rgb(222,155,42)"/><text x="363.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (11 samples, 2.12%)</title><rect x="363" y="324" width="25" height="15" fill="rgb(226,27,30)"/><text x="366.00" y="334.50">c..</text></g><g><title>gemm (cblasfuncs.c:40) (11 samples, 2.12%)</title><rect x="363" y="340" width="25" height="15" fill="rgb(239,62,22)"/><text x="366.00" y="350.50">g..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.12%)</title><rect x="363" y="356" width="25" height="15" fill="rgb(246,216,34)"/><text x="366.00" y="366.50">c..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.12%)</title><rect x="363" y="372" width="25" height="15" fill="rgb(241,2,16)"/><text x="366.00" y="382.50">s..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.12%)</title><rect x="363" y="388" width="25" height="15" fill="rgb(247,173,1)"/><text x="366.00" y="398.50">s..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.77%)</title><rect x="388" y="276" width="9" height="15" fill="rgb(220,112,32)"/><text x="391.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (36 samples, 6.95%)</title><rect x="360" y="228" width="82" height="15" fill="rgb(237,39,7)"/><text x="363.00" y="238.50">_run (mlp..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (36 samples, 6.95%)</title><rect x="360" y="244" width="82" height="15" fill="rgb(248,150,48)"/><text x="363.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (36 samples, 6.95%)</title><rect x="360" y="260" width="82" height="15" fill="rgb(236,42,2)"/><text x="363.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 3.86%)</title><rect x="397" y="276" width="45" height="15" fill="rgb(254,170,54)"/><text x="400.00" y="286.50">sgem..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="442" y="308" width="3" height="15" fill="rgb(249,16,44)"/><text x="445.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="442" y="324" width="3" height="15" fill="rgb(225,183,18)"/><text x="445.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1069) (1 samples, 0.19%)</title><rect x="442" y="340" width="3" height="15" fill="rgb(228,161,54)"/><text x="445.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.39%)</title><rect x="442" y="292" width="5" height="15" fill="rgb(240,69,23)"/><text x="445.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.19%)</title><rect x="445" y="308" width="2" height="15" fill="rgb(228,149,6)"/><text x="448.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.19%)</title><rect x="445" y="324" width="2" height="15" fill="rgb(208,54,15)"/><text x="448.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.19%)</title><rect x="445" y="340" width="2" height="15" fill="rgb(236,35,12)"/><text x="448.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="451" y="340" width="3" height="15" fill="rgb(211,164,36)"/><text x="454.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.58%)</title><rect x="449" y="324" width="7" height="15" fill="rgb(217,129,35)"/><text x="452.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="454" y="340" width="2" height="15" fill="rgb(212,227,30)"/><text x="457.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 1.35%)</title><rect x="442" y="228" width="16" height="15" fill="rgb(244,206,24)"/><text x="445.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.35%)</title><rect x="442" y="244" width="16" height="15" fill="rgb(229,229,21)"/><text x="445.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.35%)</title><rect x="442" y="260" width="16" height="15" fill="rgb(234,161,21)"/><text x="445.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.35%)</title><rect x="442" y="276" width="16" height="15" fill="rgb(238,105,11)"/><text x="445.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.97%)</title><rect x="447" y="292" width="11" height="15" fill="rgb(241,80,11)"/><text x="450.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.77%)</title><rect x="449" y="308" width="9" height="15" fill="rgb(217,193,6)"/><text x="452.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.19%)</title><rect x="456" y="324" width="2" height="15" fill="rgb(246,32,48)"/><text x="459.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="461" y="308" width="2" height="15" fill="rgb(212,178,14)"/><text x="464.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.19%)</title><rect x="461" y="324" width="2" height="15" fill="rgb(235,71,7)"/><text x="464.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="461" y="340" width="2" height="15" fill="rgb(206,30,23)"/><text x="464.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.39%)</title><rect x="461" y="276" width="4" height="15" fill="rgb(248,137,51)"/><text x="464.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.39%)</title><rect x="461" y="292" width="4" height="15" fill="rgb(243,103,32)"/><text x="464.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="463" y="308" width="2" height="15" fill="rgb(233,17,18)"/><text x="466.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:561) (1 samples, 0.19%)</title><rect x="463" y="324" width="2" height="15" fill="rgb(207,18,47)"/><text x="466.00" y="334.50"></text></g><g><title>0x7f4a6650a991 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="463" y="340" width="2" height="15" fill="rgb(224,186,28)"/><text x="466.00" y="350.50"></text></g><g><title>0x7f4a4890f33a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="465" y="308" width="2" height="15" fill="rgb(231,113,49)"/><text x="468.00" y="318.50"></text></g><g><title>0x7f4a48931204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="467" y="324" width="3" height="15" fill="rgb(245,162,36)"/><text x="470.00" y="334.50"></text></g><g><title>0x7f4a66689e0e (libm-2.29.so) (2 samples, 0.39%)</title><rect x="476" y="356" width="5" height="15" fill="rgb(222,197,49)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f4a66689e37 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="481" y="356" width="2" height="15" fill="rgb(239,1,54)"/><text x="484.00" y="366.50"></text></g><g><title>0x7f4a66689e7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="483" y="356" width="3" height="15" fill="rgb(251,71,43)"/><text x="486.00" y="366.50"></text></g><g><title>0x7f4a48931214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.54%)</title><rect x="470" y="324" width="18" height="15" fill="rgb(226,20,16)"/><text x="473.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (8 samples, 1.54%)</title><rect x="470" y="340" width="18" height="15" fill="rgb(215,67,18)"/><text x="473.00" y="350.50"></text></g><g><title>0x7f4a66689ea6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="486" y="356" width="2" height="15" fill="rgb(208,184,28)"/><text x="489.00" y="366.50"></text></g><g><title>0x7f4a4890f33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.90%)</title><rect x="467" y="308" width="35" height="15" fill="rgb(233,207,19)"/><text x="470.00" y="318.50">0x..</text></g><g><title>0x7f4a48931228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.16%)</title><rect x="488" y="324" width="14" height="15" fill="rgb(250,216,54)"/><text x="491.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (20 samples, 3.86%)</title><rect x="458" y="228" width="46" height="15" fill="rgb(239,81,12)"/><text x="461.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 3.86%)</title><rect x="458" y="244" width="46" height="15" fill="rgb(226,196,31)"/><text x="461.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 3.86%)</title><rect x="458" y="260" width="46" height="15" fill="rgb(217,188,44)"/><text x="461.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (17 samples, 3.28%)</title><rect x="465" y="276" width="39" height="15" fill="rgb(208,142,26)"/><text x="468.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (17 samples, 3.28%)</title><rect x="465" y="292" width="39" height="15" fill="rgb(235,172,52)"/><text x="468.00" y="302.50">tri..</text></g><g><title>0x7f4a4890f345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="502" y="308" width="2" height="15" fill="rgb(221,95,9)"/><text x="505.00" y="318.50"></text></g><g><title>0x7f4a665e974a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="511" y="292" width="2" height="15" fill="rgb(227,123,35)"/><text x="514.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.19%)</title><rect x="513" y="324" width="2" height="15" fill="rgb(244,51,2)"/><text x="516.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="513" y="340" width="2" height="15" fill="rgb(241,5,25)"/><text x="516.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="513" y="356" width="2" height="15" fill="rgb(246,71,52)"/><text x="516.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1767) (1 samples, 0.19%)</title><rect x="513" y="372" width="2" height="15" fill="rgb(205,165,4)"/><text x="516.00" y="382.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (1 samples, 0.19%)</title><rect x="515" y="340" width="2" height="15" fill="rgb(233,157,43)"/><text x="518.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (70 samples, 13.51%)</title><rect x="360" y="196" width="160" height="15" fill="rgb(254,80,6)"/><text x="363.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (70 samples, 13.51%)</title><rect x="360" y="212" width="160" height="15" fill="rgb(207,8,0)"/><text x="363.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (7 samples, 1.35%)</title><rect x="504" y="228" width="16" height="15" fill="rgb(241,10,17)"/><text x="507.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 0.97%)</title><rect x="508" y="244" width="12" height="15" fill="rgb(241,162,12)"/><text x="511.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.97%)</title><rect x="508" y="260" width="12" height="15" fill="rgb(209,95,38)"/><text x="511.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 0.97%)</title><rect x="508" y="276" width="12" height="15" fill="rgb(215,131,41)"/><text x="511.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.58%)</title><rect x="513" y="292" width="7" height="15" fill="rgb(246,215,21)"/><text x="516.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 0.58%)</title><rect x="513" y="308" width="7" height="15" fill="rgb(216,120,52)"/><text x="516.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.39%)</title><rect x="515" y="324" width="5" height="15" fill="rgb(252,199,50)"/><text x="518.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3129) (1 samples, 0.19%)</title><rect x="517" y="340" width="3" height="15" fill="rgb(237,226,3)"/><text x="520.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (88 samples, 16.99%)</title><rect x="322" y="180" width="200" height="15" fill="rgb(206,174,47)"/><text x="325.00" y="190.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.19%)</title><rect x="520" y="196" width="2" height="15" fill="rgb(230,24,54)"/><text x="523.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.19%)</title><rect x="522" y="180" width="2" height="15" fill="rgb(215,122,32)"/><text x="525.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.19%)</title><rect x="524" y="180" width="3" height="15" fill="rgb(226,134,43)"/><text x="527.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (96 samples, 18.53%)</title><rect x="310" y="164" width="219" height="15" fill="rgb(219,19,28)"/><text x="313.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.19%)</title><rect x="527" y="180" width="2" height="15" fill="rgb(224,107,17)"/><text x="530.00" y="190.50"></text></g><g><title>0x7f4a6652b124 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="529" y="180" width="2" height="15" fill="rgb(243,10,36)"/><text x="532.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.39%)</title><rect x="529" y="164" width="4" height="15" fill="rgb(213,78,50)"/><text x="532.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.19%)</title><rect x="531" y="180" width="2" height="15" fill="rgb(233,172,36)"/><text x="534.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (99 samples, 19.11%)</title><rect x="310" y="132" width="226" height="15" fill="rgb(213,87,2)"/><text x="313.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (99 samples, 19.11%)</title><rect x="310" y="148" width="226" height="15" fill="rgb(212,217,30)"/><text x="313.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.19%)</title><rect x="533" y="164" width="3" height="15" fill="rgb(219,133,24)"/><text x="536.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.19%)</title><rect x="533" y="180" width="3" height="15" fill="rgb(205,33,24)"/><text x="536.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:45) (103 samples, 19.88%)</title><rect x="303" y="52" width="235" height="15" fill="rgb(222,58,14)"/><text x="306.00" y="62.50">&lt;module&gt; (bench_LogisticRegress..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:44) (103 samples, 19.88%)</title><rect x="303" y="68" width="235" height="15" fill="rgb(214,190,33)"/><text x="306.00" y="78.50">profile_pyrt (bench_LogisticReg..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:29) (103 samples, 19.88%)</title><rect x="303" y="84" width="235" height="15" fill="rgb(215,228,42)"/><text x="306.00" y="94.50">setup_profile (bench_LogisticRe..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:23) (100 samples, 19.31%)</title><rect x="310" y="100" width="228" height="15" fill="rgb(219,203,13)"/><text x="313.00" y="110.50">profile (bench_LogisticRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (100 samples, 19.31%)</title><rect x="310" y="116" width="228" height="15" fill="rgb(251,136,49)"/><text x="313.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="536" y="132" width="2" height="15" fill="rgb(213,103,30)"/><text x="539.00" y="142.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:28) (1 samples, 0.19%)</title><rect x="538" y="84" width="2" height="15" fill="rgb(247,171,44)"/><text x="541.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="538" y="100" width="2" height="15" fill="rgb(214,130,38)"/><text x="541.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.19%)</title><rect x="538" y="116" width="2" height="15" fill="rgb(233,81,43)"/><text x="541.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.19%)</title><rect x="538" y="132" width="2" height="15" fill="rgb(247,91,27)"/><text x="541.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.19%)</title><rect x="538" y="148" width="2" height="15" fill="rgb(246,45,38)"/><text x="541.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.19%)</title><rect x="538" y="164" width="2" height="15" fill="rgb(237,195,47)"/><text x="541.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="538" y="180" width="2" height="15" fill="rgb(249,156,51)"/><text x="541.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="538" y="196" width="2" height="15" fill="rgb(208,14,20)"/><text x="541.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="538" y="212" width="2" height="15" fill="rgb(239,68,40)"/><text x="541.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="538" y="228" width="2" height="15" fill="rgb(215,205,13)"/><text x="541.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="538" y="244" width="2" height="15" fill="rgb(205,148,44)"/><text x="541.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.19%)</title><rect x="538" y="260" width="2" height="15" fill="rgb(241,172,31)"/><text x="541.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="538" y="276" width="2" height="15" fill="rgb(244,17,32)"/><text x="541.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="538" y="292" width="2" height="15" fill="rgb(233,228,45)"/><text x="541.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="538" y="308" width="2" height="15" fill="rgb(234,149,11)"/><text x="541.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="538" y="324" width="2" height="15" fill="rgb(252,192,7)"/><text x="541.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="538" y="340" width="2" height="15" fill="rgb(241,19,26)"/><text x="541.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.19%)</title><rect x="538" y="356" width="2" height="15" fill="rgb(251,34,31)"/><text x="541.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="538" y="372" width="2" height="15" fill="rgb(237,143,41)"/><text x="541.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="538" y="388" width="2" height="15" fill="rgb(216,214,27)"/><text x="541.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="538" y="404" width="2" height="15" fill="rgb(232,123,9)"/><text x="541.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="538" y="420" width="2" height="15" fill="rgb(208,75,28)"/><text x="541.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="538" y="436" width="2" height="15" fill="rgb(248,65,41)"/><text x="541.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.19%)</title><rect x="538" y="452" width="2" height="15" fill="rgb(249,188,53)"/><text x="541.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="538" y="468" width="2" height="15" fill="rgb(249,187,31)"/><text x="541.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="538" y="484" width="2" height="15" fill="rgb(226,224,17)"/><text x="541.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="538" y="500" width="2" height="15" fill="rgb(240,45,32)"/><text x="541.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.19%)</title><rect x="538" y="516" width="2" height="15" fill="rgb(243,67,0)"/><text x="541.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.19%)</title><rect x="538" y="532" width="2" height="15" fill="rgb(214,59,23)"/><text x="541.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="538" y="548" width="2" height="15" fill="rgb(231,164,32)"/><text x="541.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="564" width="2" height="15" fill="rgb(253,105,52)"/><text x="541.00" y="574.50"></text></g><g><title>0x7f4a66792995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="580" width="2" height="15" fill="rgb(251,53,51)"/><text x="541.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="596" width="2" height="15" fill="rgb(248,192,42)"/><text x="541.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="612" width="2" height="15" fill="rgb(214,63,52)"/><text x="541.00" y="622.50"></text></g><g><title>0x7f4a66792258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="628" width="2" height="15" fill="rgb(252,169,4)"/><text x="541.00" y="638.50"></text></g><g><title>0x7f4a667dfd7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="644" width="2" height="15" fill="rgb(242,77,16)"/><text x="541.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="660" width="2" height="15" fill="rgb(226,34,36)"/><text x="541.00" y="670.50"></text></g><g><title>0x7f4a667e0345 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="676" width="2" height="15" fill="rgb(241,146,52)"/><text x="541.00" y="686.50"></text></g><g><title>0x7f4a667d8fec (ld-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="692" width="2" height="15" fill="rgb(205,44,31)"/><text x="541.00" y="702.50"></text></g><g><title>0x7f4a667d756b (ld-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="708" width="2" height="15" fill="rgb(207,141,4)"/><text x="541.00" y="718.50"></text></g><g><title>0x7f4a667d6bab (ld-2.29.so) (1 samples, 0.19%)</title><rect x="538" y="724" width="2" height="15" fill="rgb(244,50,9)"/><text x="541.00" y="734.50"></text></g><g><title>0x7f4a26d33ff9 (?) (1 samples, 0.19%)</title><rect x="540" y="212" width="3" height="15" fill="rgb(225,75,9)"/><text x="543.00" y="222.50"></text></g><g><title>0x7f4a26d2eef6 (?) (1 samples, 0.19%)</title><rect x="540" y="228" width="3" height="15" fill="rgb(253,115,53)"/><text x="543.00" y="238.50"></text></g><g><title>0x7f4a26d23c99 (?) (1 samples, 0.19%)</title><rect x="540" y="244" width="3" height="15" fill="rgb(241,220,21)"/><text x="543.00" y="254.50"></text></g><g><title>0x7f4a26d41cb6 (?) (1 samples, 0.19%)</title><rect x="540" y="260" width="3" height="15" fill="rgb(251,85,7)"/><text x="543.00" y="270.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.77%)</title><rect x="543" y="340" width="9" height="15" fill="rgb(212,71,0)"/><text x="546.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="549" y="356" width="3" height="15" fill="rgb(244,188,24)"/><text x="552.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="552" y="356" width="2" height="15" fill="rgb(229,54,46)"/><text x="555.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="552" y="372" width="2" height="15" fill="rgb(208,229,10)"/><text x="555.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:18) (7 samples, 1.35%)</title><rect x="540" y="100" width="16" height="15" fill="rgb(210,207,19)"/><text x="543.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 1.35%)</title><rect x="540" y="116" width="16" height="15" fill="rgb(206,101,13)"/><text x="543.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (7 samples, 1.35%)</title><rect x="540" y="132" width="16" height="15" fill="rgb(251,208,4)"/><text x="543.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (7 samples, 1.35%)</title><rect x="540" y="148" width="16" height="15" fill="rgb(241,39,5)"/><text x="543.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (7 samples, 1.35%)</title><rect x="540" y="164" width="16" height="15" fill="rgb(242,130,3)"/><text x="543.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (7 samples, 1.35%)</title><rect x="540" y="180" width="16" height="15" fill="rgb(246,138,47)"/><text x="543.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (7 samples, 1.35%)</title><rect x="540" y="196" width="16" height="15" fill="rgb(214,122,23)"/><text x="543.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="212" width="13" height="15" fill="rgb(223,146,6)"/><text x="546.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="228" width="13" height="15" fill="rgb(226,88,13)"/><text x="546.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="244" width="13" height="15" fill="rgb(205,148,2)"/><text x="546.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="260" width="13" height="15" fill="rgb(248,68,54)"/><text x="546.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="276" width="13" height="15" fill="rgb(211,127,35)"/><text x="546.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="292" width="13" height="15" fill="rgb(233,192,10)"/><text x="546.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="308" width="13" height="15" fill="rgb(251,76,16)"/><text x="546.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.16%)</title><rect x="543" y="324" width="13" height="15" fill="rgb(248,191,19)"/><text x="546.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="552" y="340" width="4" height="15" fill="rgb(206,178,17)"/><text x="555.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="554" y="356" width="2" height="15" fill="rgb(208,182,9)"/><text x="557.00" y="366.50"></text></g><g><title>0x7f4a66509bc6 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="593" y="132" width="4" height="15" fill="rgb(211,170,23)"/><text x="596.00" y="142.50"></text></g><g><title>0x7f4a66509bd1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="597" y="132" width="3" height="15" fill="rgb(248,202,18)"/><text x="600.00" y="142.50"></text></g><g><title>0x7f4a66509c14 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="600" y="132" width="2" height="15" fill="rgb(244,218,26)"/><text x="603.00" y="142.50"></text></g><g><title>0x7f4a66509c20 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="602" y="132" width="2" height="15" fill="rgb(208,184,25)"/><text x="605.00" y="142.50"></text></g><g><title>0x7f4a66509c49 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="604" y="132" width="2" height="15" fill="rgb(238,147,29)"/><text x="607.00" y="142.50"></text></g><g><title>0x7f4a66509c4d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="606" y="132" width="3" height="15" fill="rgb(245,171,27)"/><text x="609.00" y="142.50"></text></g><g><title>0x7f4a66509c5a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="609" y="132" width="2" height="15" fill="rgb(245,221,36)"/><text x="612.00" y="142.50"></text></g><g><title>0x7f4a66509c6a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="611" y="132" width="2" height="15" fill="rgb(223,126,19)"/><text x="614.00" y="142.50"></text></g><g><title>0x7f4a66509c73 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="613" y="132" width="2" height="15" fill="rgb(247,228,12)"/><text x="616.00" y="142.50"></text></g><g><title>0x7f4a66509b0a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="613" y="148" width="2" height="15" fill="rgb(242,229,31)"/><text x="616.00" y="158.50"></text></g><g><title>0x7f4a6650aeb0 (libc-2.29.so) (11 samples, 2.12%)</title><rect x="593" y="116" width="25" height="15" fill="rgb(242,28,47)"/><text x="596.00" y="126.50">0..</text></g><g><title>0x7f4a66509ca7 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="615" y="132" width="3" height="15" fill="rgb(210,183,25)"/><text x="618.00" y="142.50"></text></g><g><title>0x7f4a66509aa8 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="615" y="148" width="3" height="15" fill="rgb(220,170,15)"/><text x="618.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.19%)</title><rect x="622" y="196" width="3" height="15" fill="rgb(205,169,23)"/><text x="625.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.19%)</title><rect x="622" y="212" width="3" height="15" fill="rgb(247,39,51)"/><text x="625.00" y="222.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="340" width="2" height="15" fill="rgb(206,109,50)"/><text x="632.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="356" width="2" height="15" fill="rgb(219,156,3)"/><text x="632.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="372" width="2" height="15" fill="rgb(243,225,36)"/><text x="632.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="388" width="2" height="15" fill="rgb(253,0,38)"/><text x="632.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="404" width="2" height="15" fill="rgb(254,192,23)"/><text x="632.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="420" width="2" height="15" fill="rgb(254,98,39)"/><text x="632.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="436" width="2" height="15" fill="rgb(252,173,42)"/><text x="632.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="452" width="2" height="15" fill="rgb(211,56,3)"/><text x="632.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="629" y="468" width="2" height="15" fill="rgb(208,32,2)"/><text x="632.00" y="478.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="631" y="340" width="3" height="15" fill="rgb(224,93,45)"/><text x="634.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="631" y="356" width="3" height="15" fill="rgb(215,17,40)"/><text x="634.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="631" y="372" width="3" height="15" fill="rgb(253,38,0)"/><text x="634.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="631" y="388" width="3" height="15" fill="rgb(226,173,31)"/><text x="634.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="634" y="340" width="2" height="15" fill="rgb(233,100,52)"/><text x="637.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="634" y="356" width="2" height="15" fill="rgb(249,84,5)"/><text x="637.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="634" y="372" width="2" height="15" fill="rgb(253,86,43)"/><text x="637.00" y="382.50"></text></g><g><title>0x7f4a6650a961 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="634" y="388" width="2" height="15" fill="rgb(238,98,28)"/><text x="637.00" y="398.50"></text></g><g><title>0x7f4a6650a991 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="823" y="356" width="2" height="15" fill="rgb(224,108,6)"/><text x="826.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="825" y="372" width="2" height="15" fill="rgb(224,37,26)"/><text x="828.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="825" y="356" width="5" height="15" fill="rgb(212,144,17)"/><text x="828.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="827" y="372" width="3" height="15" fill="rgb(233,82,13)"/><text x="830.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="830" y="356" width="2" height="15" fill="rgb(210,44,15)"/><text x="833.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="830" y="372" width="2" height="15" fill="rgb(218,161,34)"/><text x="833.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="830" y="388" width="2" height="15" fill="rgb(223,131,40)"/><text x="833.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="830" y="404" width="2" height="15" fill="rgb(224,223,15)"/><text x="833.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="830" y="420" width="2" height="15" fill="rgb(223,206,46)"/><text x="833.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="830" y="436" width="2" height="15" fill="rgb(239,153,14)"/><text x="833.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="830" y="452" width="2" height="15" fill="rgb(224,112,43)"/><text x="833.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="830" y="468" width="2" height="15" fill="rgb(211,12,24)"/><text x="833.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="830" y="484" width="2" height="15" fill="rgb(223,22,12)"/><text x="833.00" y="494.50"></text></g><g><title>0x7f4a66689e00 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="843" y="372" width="3" height="15" fill="rgb(227,94,49)"/><text x="846.00" y="382.50"></text></g><g><title>0x7f4a66689e4e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="846" y="372" width="2" height="15" fill="rgb(214,159,41)"/><text x="849.00" y="382.50"></text></g><g><title>0x7f4a66689e57 (libm-2.29.so) (2 samples, 0.39%)</title><rect x="848" y="372" width="4" height="15" fill="rgb(213,221,37)"/><text x="851.00" y="382.50"></text></g><g><title>0x7f4a66689e96 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="852" y="372" width="3" height="15" fill="rgb(222,98,40)"/><text x="855.00" y="382.50"></text></g><g><title>0x7f4a66689e9e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="855" y="372" width="2" height="15" fill="rgb(207,147,31)"/><text x="858.00" y="382.50"></text></g><g><title>0x7f4a66689ea2 (libm-2.29.so) (3 samples, 0.58%)</title><rect x="857" y="372" width="7" height="15" fill="rgb(246,42,28)"/><text x="860.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 19.50%)</title><rect x="636" y="340" width="230" height="15" fill="rgb(220,142,1)"/><text x="639.00" y="350.50">onnxruntime::ml::LinearClassif..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.90%)</title><rect x="832" y="356" width="34" height="15" fill="rgb(224,0,34)"/><text x="835.00" y="366.50">on..</text></g><g><title>0x7f4a66689ea6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="864" y="372" width="2" height="15" fill="rgb(206,54,19)"/><text x="867.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="866" y="340" width="5" height="15" fill="rgb(209,41,13)"/><text x="869.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="866" y="356" width="5" height="15" fill="rgb(215,52,34)"/><text x="869.00" y="366.50"></text></g><g><title>0x7f4a26cfbba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="887" y="356" width="2" height="15" fill="rgb(236,168,49)"/><text x="890.00" y="366.50"></text></g><g><title>0x7f4a55fd6d50 (libstdc++.so.6.0.28) (2 samples, 0.39%)</title><rect x="893" y="372" width="5" height="15" fill="rgb(238,123,28)"/><text x="896.00" y="382.50"></text></g><g><title>0x7f4a6650bb39 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="964" y="388" width="2" height="15" fill="rgb(213,1,50)"/><text x="967.00" y="398.50"></text></g><g><title>0x7f4a6650bb49 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="966" y="388" width="3" height="15" fill="rgb(232,225,37)"/><text x="969.00" y="398.50"></text></g><g><title>0x7f4a6650bb61 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="969" y="388" width="2" height="15" fill="rgb(209,209,26)"/><text x="972.00" y="398.50"></text></g><g><title>0x7f4a6650bd27 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="971" y="388" width="2" height="15" fill="rgb(223,70,41)"/><text x="974.00" y="398.50"></text></g><g><title>0x7f4a6650bd48 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="973" y="388" width="2" height="15" fill="rgb(239,201,22)"/><text x="976.00" y="398.50"></text></g><g><title>0x7f4a6650bd54 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="975" y="388" width="3" height="15" fill="rgb(244,68,33)"/><text x="978.00" y="398.50"></text></g><g><title>0x7f4a6650bd8d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="978" y="388" width="2" height="15" fill="rgb(222,145,40)"/><text x="981.00" y="398.50"></text></g><g><title>0x7f4a6650bd9f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="980" y="388" width="2" height="15" fill="rgb(207,85,10)"/><text x="983.00" y="398.50"></text></g><g><title>0x7f4a6650bdb4 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="982" y="388" width="5" height="15" fill="rgb(212,19,19)"/><text x="985.00" y="398.50"></text></g><g><title>0x7f4a6650bfdd (libc-2.29.so) (1 samples, 0.19%)</title><rect x="987" y="388" width="2" height="15" fill="rgb(205,56,24)"/><text x="990.00" y="398.50"></text></g><g><title>0x7f4a6650bfde (libc-2.29.so) (1 samples, 0.19%)</title><rect x="989" y="388" width="2" height="15" fill="rgb(234,139,37)"/><text x="992.00" y="398.50"></text></g><g><title>0x7f4a6650bfe6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="991" y="388" width="3" height="15" fill="rgb(205,22,32)"/><text x="994.00" y="398.50"></text></g><g><title>0x7f4a6650c040 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="994" y="388" width="2" height="15" fill="rgb(236,202,16)"/><text x="997.00" y="398.50"></text></g><g><title>0x7f4a6650c08c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="996" y="388" width="2" height="15" fill="rgb(213,30,24)"/><text x="999.00" y="398.50"></text></g><g><title>0x7f4a6650c0a3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="998" y="388" width="2" height="15" fill="rgb(206,25,53)"/><text x="1001.00" y="398.50"></text></g><g><title>0x7f4a6650c368 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="1000" y="388" width="5" height="15" fill="rgb(245,37,34)"/><text x="1003.00" y="398.50"></text></g><g><title>0x7f4a6650c384 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1005" y="388" width="2" height="15" fill="rgb(248,27,17)"/><text x="1008.00" y="398.50"></text></g><g><title>0x7f4a6650c395 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1007" y="388" width="3" height="15" fill="rgb(230,216,41)"/><text x="1010.00" y="398.50"></text></g><g><title>0x7f4a6650c3ae (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1010" y="388" width="2" height="15" fill="rgb(228,66,31)"/><text x="1013.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (55 samples, 10.62%)</title><rect x="889" y="356" width="125" height="15" fill="rgb(205,98,12)"/><text x="892.00" y="366.50">operator new (l..</text></g><g><title>malloc (libc-2.29.so) (51 samples, 9.85%)</title><rect x="898" y="372" width="116" height="15" fill="rgb(248,118,6)"/><text x="901.00" y="382.50">malloc (libc-2..</text></g><g><title>0x7f4a6650c3c4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1012" y="388" width="2" height="15" fill="rgb(207,188,2)"/><text x="1015.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1014" y="356" width="2" height="15" fill="rgb(214,0,49)"/><text x="1017.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.77%)</title><rect x="1016" y="356" width="9" height="15" fill="rgb(211,204,18)"/><text x="1019.00" y="366.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 34.36%)</title><rect x="629" y="324" width="406" height="15" fill="rgb(223,40,38)"/><text x="632.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/c..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (72 samples, 13.90%)</title><rect x="871" y="340" width="164" height="15" fill="rgb(250,125,9)"/><text x="874.00" y="350.50">onnxruntime::ml::ZipM..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.77%)</title><rect x="1025" y="356" width="10" height="15" fill="rgb(217,12,31)"/><text x="1028.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 34.56%)</title><rect x="629" y="260" width="408" height="15" fill="rgb(239,47,15)"/><text x="632.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 34.56%)</title><rect x="629" y="276" width="408" height="15" fill="rgb(209,16,48)"/><text x="632.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 34.56%)</title><rect x="629" y="292" width="408" height="15" fill="rgb(228,67,1)"/><text x="632.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 34.56%)</title><rect x="629" y="308" width="408" height="15" fill="rgb(254,77,40)"/><text x="632.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1035" y="324" width="2" height="15" fill="rgb(219,30,8)"/><text x="1038.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1035" y="340" width="2" height="15" fill="rgb(219,66,36)"/><text x="1038.00" y="350.50"></text></g><g><title>0x7f4a6650c21f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1035" y="356" width="2" height="15" fill="rgb(233,225,35)"/><text x="1038.00" y="366.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.51%)</title><rect x="1110" y="276" width="29" height="15" fill="rgb(231,226,20)"/><text x="1113.00" y="286.50">py..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (46 samples, 8.88%)</title><rect x="1037" y="260" width="105" height="15" fill="rgb(205,227,1)"/><text x="1040.00" y="270.50">pybind11::de..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1139" y="276" width="3" height="15" fill="rgb(207,182,47)"/><text x="1142.00" y="286.50"></text></g><g><title>0x7f4a26cfb0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(217,75,50)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f4a6650a92c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1146" y="292" width="2" height="15" fill="rgb(238,150,49)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f4a6650a945 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1148" y="292" width="3" height="15" fill="rgb(241,212,18)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f4a6650a961 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1151" y="292" width="2" height="15" fill="rgb(205,189,25)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f4a6650a971 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(250,187,27)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7f4a6650a982 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1155" y="292" width="3" height="15" fill="rgb(243,196,17)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7f4a6650ad07 (libc-2.29.so) (5 samples, 0.97%)</title><rect x="1158" y="292" width="11" height="15" fill="rgb(233,5,15)"/><text x="1161.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.39%)</title><rect x="1169" y="292" width="5" height="15" fill="rgb(214,4,35)"/><text x="1172.00" y="302.50"></text></g><g><title>0x7f4a6650a961 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="1174" y="308" width="4" height="15" fill="rgb(237,128,51)"/><text x="1177.00" y="318.50"></text></g><g><title>0x7f4a6650ad02 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1178" y="308" width="2" height="15" fill="rgb(241,81,13)"/><text x="1181.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (246 samples, 47.49%)</title><rect x="622" y="164" width="561" height="15" fill="rgb(233,19,33)"/><text x="625.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (246 samples, 47.49%)</title><rect x="622" y="180" width="561" height="15" fill="rgb(206,77,24)"/><text x="625.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (245 samples, 47.30%)</title><rect x="625" y="196" width="558" height="15" fill="rgb(239,151,9)"/><text x="628.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (245 samples, 47.30%)</title><rect x="625" y="212" width="558" height="15" fill="rgb(226,83,30)"/><text x="628.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_st..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (245 samples, 47.30%)</title><rect x="625" y="228" width="558" height="15" fill="rgb(240,36,18)"/><text x="628.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethod..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (245 samples, 47.30%)</title><rect x="625" y="244" width="558" height="15" fill="rgb(222,86,24)"/><text x="628.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 3.47%)</title><rect x="1142" y="260" width="41" height="15" fill="rgb(220,158,42)"/><text x="1145.00" y="270.50">std..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 3.47%)</title><rect x="1142" y="276" width="41" height="15" fill="rgb(209,139,33)"/><text x="1145.00" y="286.50">onn..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.77%)</title><rect x="1174" y="292" width="9" height="15" fill="rgb(218,111,14)"/><text x="1177.00" y="302.50"></text></g><g><title>0x7f4a6650ad07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1180" y="308" width="3" height="15" fill="rgb(228,34,38)"/><text x="1183.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (248 samples, 47.88%)</title><rect x="620" y="132" width="565" height="15" fill="rgb(219,150,47)"/><text x="623.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (247 samples, 47.68%)</title><rect x="622" y="148" width="563" height="15" fill="rgb(247,59,31)"/><text x="625.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.19%)</title><rect x="1183" y="164" width="2" height="15" fill="rgb(224,11,44)"/><text x="1186.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:52) (285 samples, 55.02%)</title><rect x="538" y="52" width="649" height="15" fill="rgb(217,143,54)"/><text x="541.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_...</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:51) (285 samples, 55.02%)</title><rect x="538" y="68" width="649" height="15" fill="rgb(229,214,54)"/><text x="541.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_floa..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:29) (284 samples, 54.83%)</title><rect x="540" y="84" width="647" height="15" fill="rgb(233,178,41)"/><text x="543.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_fl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py:23) (277 samples, 53.47%)</title><rect x="556" y="100" width="631" height="15" fill="rgb(206,223,32)"/><text x="559.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (250 samples, 48.26%)</title><rect x="618" y="116" width="569" height="15" fill="rgb(242,116,33)"/><text x="621.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="1185" y="132" width="2" height="15" fill="rgb(214,18,7)"/><text x="1188.00" y="142.50"></text></g><g><title>all (518 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(245,154,16)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(225,86,18)"/><text x="1190.00" y="62.50"></text></g></g></svg>