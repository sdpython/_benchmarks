<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2342" onload="init(evt)" viewBox="0 0 1200 2342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2342" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2325.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2325.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.67%)</title><rect x="29" y="164" width="8" height="15" fill="rgb(248,92,46)"/><text x="32.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.34%)</title><rect x="33" y="180" width="4" height="15" fill="rgb(240,187,41)"/><text x="36.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.67%)</title><rect x="37" y="164" width="8" height="15" fill="rgb(243,130,37)"/><text x="40.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.67%)</title><rect x="49" y="180" width="8" height="15" fill="rgb(253,55,50)"/><text x="52.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 2.35%)</title><rect x="57" y="180" width="28" height="15" fill="rgb(226,189,20)"/><text x="60.00" y="190.50">&lt;..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (16 samples, 5.37%)</title><rect x="29" y="148" width="64" height="15" fill="rgb(252,78,37)"/><text x="32.00" y="158.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 4.03%)</title><rect x="45" y="164" width="48" height="15" fill="rgb(217,76,7)"/><text x="48.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.67%)</title><rect x="85" y="180" width="8" height="15" fill="rgb(236,204,10)"/><text x="88.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.34%)</title><rect x="120" y="196" width="4" height="15" fill="rgb(205,162,27)"/><text x="123.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.34%)</title><rect x="120" y="212" width="4" height="15" fill="rgb(213,164,45)"/><text x="123.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.34%)</title><rect x="128" y="228" width="4" height="15" fill="rgb(211,60,25)"/><text x="131.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.01%)</title><rect x="124" y="212" width="24" height="15" fill="rgb(220,27,51)"/><text x="127.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.34%)</title><rect x="132" y="228" width="16" height="15" fill="rgb(205,128,39)"/><text x="135.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (9 samples, 3.02%)</title><rect x="120" y="180" width="36" height="15" fill="rgb(218,212,27)"/><text x="123.00" y="190.50">dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 2.68%)</title><rect x="124" y="196" width="32" height="15" fill="rgb(207,52,18)"/><text x="127.00" y="206.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.67%)</title><rect x="148" y="212" width="8" height="15" fill="rgb(205,92,13)"/><text x="151.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="152" y="228" width="4" height="15" fill="rgb(247,119,12)"/><text x="155.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.34%)</title><rect x="164" y="196" width="4" height="15" fill="rgb(248,180,7)"/><text x="167.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.34%)</title><rect x="168" y="196" width="4" height="15" fill="rgb(217,106,44)"/><text x="171.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.34%)</title><rect x="172" y="196" width="4" height="15" fill="rgb(226,211,21)"/><text x="175.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.67%)</title><rect x="176" y="196" width="8" height="15" fill="rgb(212,11,48)"/><text x="179.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.34%)</title><rect x="184" y="196" width="4" height="15" fill="rgb(228,59,43)"/><text x="187.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.34%)</title><rect x="184" y="212" width="4" height="15" fill="rgb(233,140,46)"/><text x="187.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.34%)</title><rect x="196" y="212" width="4" height="15" fill="rgb(219,18,48)"/><text x="199.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 2.01%)</title><rect x="188" y="196" width="23" height="15" fill="rgb(245,101,48)"/><text x="191.00" y="206.50">c..</text></g><g><title>__enter__ (warnings.py:479) (3 samples, 1.01%)</title><rect x="200" y="212" width="11" height="15" fill="rgb(233,41,44)"/><text x="203.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 1.68%)</title><rect x="211" y="196" width="20" height="15" fill="rgb(227,37,48)"/><text x="214.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.68%)</title><rect x="211" y="212" width="20" height="15" fill="rgb(216,131,47)"/><text x="214.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.67%)</title><rect x="223" y="228" width="8" height="15" fill="rgb(240,204,50)"/><text x="226.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.34%)</title><rect x="231" y="196" width="4" height="15" fill="rgb(241,91,0)"/><text x="234.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.34%)</title><rect x="235" y="196" width="4" height="15" fill="rgb(206,140,52)"/><text x="238.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.34%)</title><rect x="235" y="212" width="4" height="15" fill="rgb(213,211,9)"/><text x="238.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.34%)</title><rect x="239" y="196" width="4" height="15" fill="rgb(223,51,25)"/><text x="242.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.34%)</title><rect x="239" y="212" width="4" height="15" fill="rgb(243,79,26)"/><text x="242.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.34%)</title><rect x="247" y="212" width="4" height="15" fill="rgb(236,107,32)"/><text x="250.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.68%)</title><rect x="243" y="196" width="20" height="15" fill="rgb(244,119,39)"/><text x="246.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (3 samples, 1.01%)</title><rect x="251" y="212" width="12" height="15" fill="rgb(219,178,28)"/><text x="254.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (2 samples, 0.67%)</title><rect x="263" y="196" width="8" height="15" fill="rgb(250,193,9)"/><text x="266.00" y="206.50"></text></g><g><title>0x7f6bedd4cdc4 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="295" y="228" width="4" height="15" fill="rgb(223,25,32)"/><text x="298.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.67%)</title><rect x="299" y="228" width="7" height="15" fill="rgb(214,213,21)"/><text x="302.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (10 samples, 3.36%)</title><rect x="271" y="196" width="39" height="15" fill="rgb(222,19,44)"/><text x="274.00" y="206.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 2.68%)</title><rect x="279" y="212" width="31" height="15" fill="rgb(213,185,54)"/><text x="282.00" y="222.50">_a..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="306" y="228" width="4" height="15" fill="rgb(223,226,35)"/><text x="309.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (6 samples, 2.01%)</title><rect x="310" y="212" width="24" height="15" fill="rgb(216,149,7)"/><text x="313.00" y="222.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="330" y="228" width="4" height="15" fill="rgb(207,160,12)"/><text x="333.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 3.36%)</title><rect x="310" y="196" width="40" height="15" fill="rgb(218,227,8)"/><text x="313.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.34%)</title><rect x="334" y="212" width="16" height="15" fill="rgb(229,103,34)"/><text x="337.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.01%)</title><rect x="338" y="228" width="12" height="15" fill="rgb(213,61,44)"/><text x="341.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (50 samples, 16.78%)</title><rect x="156" y="180" width="198" height="15" fill="rgb(248,165,44)"/><text x="159.00" y="190.50">decision_function (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.34%)</title><rect x="350" y="196" width="4" height="15" fill="rgb(229,176,45)"/><text x="353.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (2 samples, 0.67%)</title><rect x="354" y="180" width="8" height="15" fill="rgb(245,121,13)"/><text x="357.00" y="190.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.34%)</title><rect x="366" y="196" width="4" height="15" fill="rgb(219,190,8)"/><text x="369.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:338) (1 samples, 0.34%)</title><rect x="366" y="212" width="4" height="15" fill="rgb(231,47,39)"/><text x="369.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.34%)</title><rect x="374" y="228" width="4" height="15" fill="rgb(244,12,9)"/><text x="377.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.34%)</title><rect x="378" y="228" width="4" height="15" fill="rgb(230,55,30)"/><text x="381.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.34%)</title><rect x="378" y="244" width="4" height="15" fill="rgb(220,87,9)"/><text x="381.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.34%)</title><rect x="378" y="260" width="4" height="15" fill="rgb(205,141,31)"/><text x="381.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="382" y="276" width="4" height="15" fill="rgb(236,136,50)"/><text x="385.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.34%)</title><rect x="382" y="292" width="4" height="15" fill="rgb(226,92,26)"/><text x="385.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.67%)</title><rect x="382" y="260" width="8" height="15" fill="rgb(252,220,39)"/><text x="385.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="386" y="276" width="4" height="15" fill="rgb(211,215,43)"/><text x="389.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.34%)</title><rect x="386" y="292" width="4" height="15" fill="rgb(240,159,27)"/><text x="389.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.34%)</title><rect x="386" y="308" width="4" height="15" fill="rgb(224,168,17)"/><text x="389.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="386" y="324" width="4" height="15" fill="rgb(206,64,18)"/><text x="389.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="386" y="340" width="4" height="15" fill="rgb(235,152,7)"/><text x="389.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="386" y="356" width="4" height="15" fill="rgb(232,77,17)"/><text x="389.00" y="366.50"></text></g><g><title>0x7f6bece912c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="386" y="372" width="4" height="15" fill="rgb(252,110,33)"/><text x="389.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.34%)</title><rect x="390" y="260" width="4" height="15" fill="rgb(242,39,25)"/><text x="393.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.34%)</title><rect x="390" y="276" width="4" height="15" fill="rgb(227,226,7)"/><text x="393.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.34%)</title><rect x="390" y="292" width="4" height="15" fill="rgb(248,20,10)"/><text x="393.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.34%)</title><rect x="394" y="276" width="4" height="15" fill="rgb(225,188,21)"/><text x="397.00" y="286.50"></text></g><g><title>array_add (number.c:330) (8 samples, 2.68%)</title><rect x="370" y="196" width="32" height="15" fill="rgb(218,187,54)"/><text x="373.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.35%)</title><rect x="374" y="212" width="28" height="15" fill="rgb(221,16,26)"/><text x="377.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.68%)</title><rect x="382" y="228" width="20" height="15" fill="rgb(205,102,12)"/><text x="385.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.68%)</title><rect x="382" y="244" width="20" height="15" fill="rgb(253,27,28)"/><text x="385.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.67%)</title><rect x="394" y="260" width="8" height="15" fill="rgb(228,151,41)"/><text x="397.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.34%)</title><rect x="398" y="276" width="4" height="15" fill="rgb(217,85,18)"/><text x="401.00" y="286.50"></text></g><g><title>0x7f6bece90e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="398" y="292" width="4" height="15" fill="rgb(209,201,26)"/><text x="401.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (2 samples, 0.67%)</title><rect x="402" y="196" width="7" height="15" fill="rgb(216,198,45)"/><text x="405.00" y="206.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.34%)</title><rect x="405" y="212" width="4" height="15" fill="rgb(240,28,39)"/><text x="408.00" y="222.50"></text></g><g><title>array_matrix_multiply (number.c:389) (1 samples, 0.34%)</title><rect x="413" y="212" width="4" height="15" fill="rgb(222,133,6)"/><text x="416.00" y="222.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="417" y="212" width="4" height="15" fill="rgb(221,164,24)"/><text x="420.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2811) (1 samples, 0.34%)</title><rect x="421" y="244" width="4" height="15" fill="rgb(217,55,4)"/><text x="424.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.34%)</title><rect x="421" y="260" width="4" height="15" fill="rgb(248,175,41)"/><text x="424.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.34%)</title><rect x="425" y="244" width="4" height="15" fill="rgb(231,189,6)"/><text x="428.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.34%)</title><rect x="425" y="260" width="4" height="15" fill="rgb(249,175,40)"/><text x="428.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.34%)</title><rect x="425" y="276" width="4" height="15" fill="rgb(251,65,17)"/><text x="428.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.34%)</title><rect x="429" y="276" width="4" height="15" fill="rgb(245,112,43)"/><text x="432.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.34%)</title><rect x="429" y="292" width="4" height="15" fill="rgb(223,180,21)"/><text x="432.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="429" y="308" width="4" height="15" fill="rgb(216,26,15)"/><text x="432.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.34%)</title><rect x="429" y="324" width="4" height="15" fill="rgb(205,129,31)"/><text x="432.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.34%)</title><rect x="429" y="340" width="4" height="15" fill="rgb(231,79,40)"/><text x="432.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.34%)</title><rect x="429" y="356" width="4" height="15" fill="rgb(227,219,40)"/><text x="432.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="429" y="372" width="4" height="15" fill="rgb(235,153,4)"/><text x="432.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.34%)</title><rect x="433" y="292" width="4" height="15" fill="rgb(246,209,22)"/><text x="436.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.34%)</title><rect x="433" y="308" width="4" height="15" fill="rgb(247,38,22)"/><text x="436.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.34%)</title><rect x="433" y="324" width="4" height="15" fill="rgb(217,62,42)"/><text x="436.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:701) (1 samples, 0.34%)</title><rect x="433" y="340" width="4" height="15" fill="rgb(228,31,51)"/><text x="436.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.34%)</title><rect x="437" y="292" width="4" height="15" fill="rgb(221,68,33)"/><text x="440.00" y="302.50"></text></g><g><title>broadcast_strides (array_assign.c:34) (1 samples, 0.34%)</title><rect x="437" y="308" width="4" height="15" fill="rgb(235,229,19)"/><text x="440.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.34%)</title><rect x="441" y="308" width="4" height="15" fill="rgb(210,170,36)"/><text x="444.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.34%)</title><rect x="441" y="324" width="4" height="15" fill="rgb(205,21,37)"/><text x="444.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 1.68%)</title><rect x="429" y="244" width="20" height="15" fill="rgb(209,110,24)"/><text x="432.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (5 samples, 1.68%)</title><rect x="429" y="260" width="20" height="15" fill="rgb(221,222,11)"/><text x="432.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 1.34%)</title><rect x="433" y="276" width="16" height="15" fill="rgb(216,107,47)"/><text x="436.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.67%)</title><rect x="441" y="292" width="8" height="15" fill="rgb(252,167,51)"/><text x="444.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.34%)</title><rect x="445" y="308" width="4" height="15" fill="rgb(211,215,49)"/><text x="448.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.34%)</title><rect x="445" y="324" width="4" height="15" fill="rgb(252,136,35)"/><text x="448.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="445" y="340" width="4" height="15" fill="rgb(245,154,42)"/><text x="448.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.34%)</title><rect x="449" y="244" width="4" height="15" fill="rgb(225,222,30)"/><text x="452.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.34%)</title><rect x="449" y="260" width="4" height="15" fill="rgb(205,209,42)"/><text x="452.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="449" y="276" width="4" height="15" fill="rgb(243,213,2)"/><text x="452.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="449" y="292" width="4" height="15" fill="rgb(251,196,20)"/><text x="452.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.02%)</title><rect x="421" y="212" width="36" height="15" fill="rgb(216,32,6)"/><text x="424.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (9 samples, 3.02%)</title><rect x="421" y="228" width="36" height="15" fill="rgb(238,209,49)"/><text x="424.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.34%)</title><rect x="453" y="244" width="4" height="15" fill="rgb(228,228,44)"/><text x="456.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.34%)</title><rect x="453" y="260" width="4" height="15" fill="rgb(244,209,47)"/><text x="456.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="453" y="276" width="4" height="15" fill="rgb(242,215,5)"/><text x="456.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="453" y="292" width="4" height="15" fill="rgb(211,176,33)"/><text x="456.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="453" y="308" width="4" height="15" fill="rgb(227,99,40)"/><text x="456.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (13 samples, 4.36%)</title><rect x="409" y="196" width="52" height="15" fill="rgb(254,163,5)"/><text x="412.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="457" y="212" width="4" height="15" fill="rgb(240,34,14)"/><text x="460.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.34%)</title><rect x="457" y="228" width="4" height="15" fill="rgb(232,194,8)"/><text x="460.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (89 samples, 29.87%)</title><rect x="112" y="164" width="353" height="15" fill="rgb(241,9,37)"/><text x="115.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.p..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (26 samples, 8.72%)</title><rect x="362" y="180" width="103" height="15" fill="rgb(233,125,15)"/><text x="365.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.34%)</title><rect x="461" y="196" width="4" height="15" fill="rgb(228,116,15)"/><text x="464.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="465" y="180" width="4" height="15" fill="rgb(236,176,38)"/><text x="468.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="465" y="196" width="4" height="15" fill="rgb(237,165,33)"/><text x="468.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="465" y="212" width="4" height="15" fill="rgb(216,203,18)"/><text x="468.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.34%)</title><rect x="465" y="228" width="4" height="15" fill="rgb(220,9,36)"/><text x="468.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="469" y="196" width="4" height="15" fill="rgb(219,54,27)"/><text x="472.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.34%)</title><rect x="469" y="212" width="4" height="15" fill="rgb(243,176,45)"/><text x="472.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1701) (1 samples, 0.34%)</title><rect x="469" y="228" width="4" height="15" fill="rgb(252,177,27)"/><text x="472.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.34%)</title><rect x="473" y="212" width="4" height="15" fill="rgb(251,158,3)"/><text x="476.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.34%)</title><rect x="473" y="228" width="4" height="15" fill="rgb(238,200,20)"/><text x="476.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.34%)</title><rect x="473" y="244" width="4" height="15" fill="rgb(238,138,22)"/><text x="476.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.34%)</title><rect x="473" y="260" width="4" height="15" fill="rgb(231,24,49)"/><text x="476.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="473" y="276" width="4" height="15" fill="rgb(221,229,1)"/><text x="476.00" y="286.50"></text></g><g><title>0x7f6bedc26aae (libc-2.29.so) (1 samples, 0.34%)</title><rect x="473" y="292" width="4" height="15" fill="rgb(205,8,12)"/><text x="476.00" y="302.50"></text></g><g><title>0x7f6bd00749a2 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="477" y="244" width="4" height="15" fill="rgb(245,178,12)"/><text x="480.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (5 samples, 1.68%)</title><rect x="465" y="164" width="20" height="15" fill="rgb(226,144,43)"/><text x="468.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.34%)</title><rect x="469" y="180" width="16" height="15" fill="rgb(209,144,51)"/><text x="472.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.01%)</title><rect x="473" y="196" width="12" height="15" fill="rgb(237,131,6)"/><text x="476.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.67%)</title><rect x="477" y="212" width="8" height="15" fill="rgb(249,115,27)"/><text x="480.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.67%)</title><rect x="477" y="228" width="8" height="15" fill="rgb(209,204,26)"/><text x="480.00" y="238.50"></text></g><g><title>0x7f6bd009513e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="481" y="244" width="4" height="15" fill="rgb(249,196,49)"/><text x="484.00" y="254.50"></text></g><g><title>PyUFunc_getfperr (ufunc_object.c:104) (1 samples, 0.34%)</title><rect x="481" y="260" width="4" height="15" fill="rgb(208,67,38)"/><text x="484.00" y="270.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.34%)</title><rect x="497" y="180" width="4" height="15" fill="rgb(244,133,21)"/><text x="500.00" y="190.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 1.01%)</title><rect x="508" y="228" width="12" height="15" fill="rgb(226,49,34)"/><text x="511.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.01%)</title><rect x="508" y="244" width="12" height="15" fill="rgb(212,180,40)"/><text x="511.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.01%)</title><rect x="508" y="260" width="12" height="15" fill="rgb(232,143,20)"/><text x="511.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.01%)</title><rect x="508" y="276" width="12" height="15" fill="rgb(220,52,39)"/><text x="511.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.01%)</title><rect x="508" y="292" width="12" height="15" fill="rgb(250,34,15)"/><text x="511.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.01%)</title><rect x="508" y="308" width="12" height="15" fill="rgb(210,145,43)"/><text x="511.00" y="318.50"></text></g><g><title>0x7f6bedc84e7a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="516" y="324" width="4" height="15" fill="rgb(244,112,33)"/><text x="519.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2065) (1 samples, 0.34%)</title><rect x="520" y="308" width="4" height="15" fill="rgb(225,0,43)"/><text x="523.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.67%)</title><rect x="520" y="260" width="8" height="15" fill="rgb(221,216,28)"/><text x="523.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.67%)</title><rect x="520" y="276" width="8" height="15" fill="rgb(233,90,7)"/><text x="523.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.67%)</title><rect x="520" y="292" width="8" height="15" fill="rgb(205,73,22)"/><text x="523.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.34%)</title><rect x="524" y="308" width="4" height="15" fill="rgb(217,208,6)"/><text x="527.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="528" y="292" width="4" height="15" fill="rgb(210,30,54)"/><text x="531.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1218) (1 samples, 0.34%)</title><rect x="528" y="308" width="4" height="15" fill="rgb(205,177,41)"/><text x="531.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (9 samples, 3.02%)</title><rect x="501" y="180" width="35" height="15" fill="rgb(229,170,0)"/><text x="504.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 3.02%)</title><rect x="501" y="196" width="35" height="15" fill="rgb(213,29,36)"/><text x="504.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 2.68%)</title><rect x="504" y="212" width="32" height="15" fill="rgb(244,149,45)"/><text x="507.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 1.34%)</title><rect x="520" y="228" width="16" height="15" fill="rgb(248,193,35)"/><text x="523.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.34%)</title><rect x="520" y="244" width="16" height="15" fill="rgb(236,59,25)"/><text x="523.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.67%)</title><rect x="528" y="260" width="8" height="15" fill="rgb(248,145,24)"/><text x="531.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.67%)</title><rect x="528" y="276" width="8" height="15" fill="rgb(230,9,9)"/><text x="531.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="532" y="292" width="4" height="15" fill="rgb(213,83,29)"/><text x="535.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2825) (1 samples, 0.34%)</title><rect x="532" y="308" width="4" height="15" fill="rgb(219,99,29)"/><text x="535.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.34%)</title><rect x="536" y="180" width="4" height="15" fill="rgb(213,82,23)"/><text x="539.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="540" y="180" width="4" height="15" fill="rgb(251,162,8)"/><text x="543.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="540" y="196" width="4" height="15" fill="rgb(218,40,36)"/><text x="543.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="540" y="212" width="4" height="15" fill="rgb(232,110,4)"/><text x="543.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.34%)</title><rect x="540" y="228" width="4" height="15" fill="rgb(229,158,17)"/><text x="543.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.34%)</title><rect x="544" y="196" width="4" height="15" fill="rgb(213,213,46)"/><text x="547.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.34%)</title><rect x="544" y="212" width="4" height="15" fill="rgb(210,38,21)"/><text x="547.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.34%)</title><rect x="544" y="228" width="4" height="15" fill="rgb(222,177,15)"/><text x="547.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.67%)</title><rect x="548" y="212" width="8" height="15" fill="rgb(220,225,54)"/><text x="551.00" y="222.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1742) (1 samples, 0.34%)</title><rect x="556" y="244" width="4" height="15" fill="rgb(211,101,39)"/><text x="559.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.34%)</title><rect x="548" y="196" width="16" height="15" fill="rgb(245,187,54)"/><text x="551.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.67%)</title><rect x="556" y="212" width="8" height="15" fill="rgb(208,181,3)"/><text x="559.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.67%)</title><rect x="556" y="228" width="8" height="15" fill="rgb(228,164,53)"/><text x="559.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.34%)</title><rect x="560" y="244" width="4" height="15" fill="rgb(230,66,27)"/><text x="563.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1850) (1 samples, 0.34%)</title><rect x="560" y="260" width="4" height="15" fill="rgb(217,171,16)"/><text x="563.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:38) (141 samples, 47.32%)</title><rect x="10" y="52" width="558" height="15" fill="rgb(229,199,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:37) (141 samples, 47.32%)</title><rect x="10" y="68" width="558" height="15" fill="rgb(227,200,22)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:29) (141 samples, 47.32%)</title><rect x="10" y="84" width="558" height="15" fill="rgb(214,181,53)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:23) (141 samples, 47.32%)</title><rect x="10" y="100" width="558" height="15" fill="rgb(239,167,38)"/><text x="13.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (140 samples, 46.98%)</title><rect x="13" y="116" width="555" height="15" fill="rgb(207,136,2)"/><text x="16.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (136 samples, 45.64%)</title><rect x="29" y="132" width="539" height="15" fill="rgb(205,224,4)"/><text x="32.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (120 samples, 40.27%)</title><rect x="93" y="148" width="475" height="15" fill="rgb(229,179,51)"/><text x="96.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 7.05%)</title><rect x="485" y="164" width="83" height="15" fill="rgb(244,62,41)"/><text x="488.00" y="174.50">_predict_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.01%)</title><rect x="544" y="180" width="24" height="15" fill="rgb(229,38,33)"/><text x="547.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.34%)</title><rect x="564" y="196" width="4" height="15" fill="rgb(233,117,27)"/><text x="567.00" y="206.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.34%)</title><rect x="564" y="212" width="4" height="15" fill="rgb(245,212,46)"/><text x="567.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="564" y="228" width="4" height="15" fill="rgb(226,139,21)"/><text x="567.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="564" y="244" width="4" height="15" fill="rgb(238,161,0)"/><text x="567.00" y="254.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.34%)</title><rect x="568" y="980" width="4" height="15" fill="rgb(233,178,8)"/><text x="571.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.34%)</title><rect x="568" y="996" width="4" height="15" fill="rgb(234,209,50)"/><text x="571.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.34%)</title><rect x="568" y="1012" width="4" height="15" fill="rgb(207,40,41)"/><text x="571.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.34%)</title><rect x="568" y="1028" width="4" height="15" fill="rgb(223,178,1)"/><text x="571.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="568" y="1044" width="4" height="15" fill="rgb(236,71,45)"/><text x="571.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.67%)</title><rect x="568" y="852" width="8" height="15" fill="rgb(251,129,38)"/><text x="571.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.67%)</title><rect x="568" y="868" width="8" height="15" fill="rgb(242,164,8)"/><text x="571.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.67%)</title><rect x="568" y="884" width="8" height="15" fill="rgb(216,173,14)"/><text x="571.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.67%)</title><rect x="568" y="900" width="8" height="15" fill="rgb(223,135,3)"/><text x="571.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.67%)</title><rect x="568" y="916" width="8" height="15" fill="rgb(241,0,17)"/><text x="571.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.67%)</title><rect x="568" y="932" width="8" height="15" fill="rgb(231,82,31)"/><text x="571.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.67%)</title><rect x="568" y="948" width="8" height="15" fill="rgb(248,52,13)"/><text x="571.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.67%)</title><rect x="568" y="964" width="8" height="15" fill="rgb(251,218,35)"/><text x="571.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.34%)</title><rect x="572" y="980" width="4" height="15" fill="rgb(224,51,27)"/><text x="575.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.34%)</title><rect x="572" y="996" width="4" height="15" fill="rgb(235,15,28)"/><text x="575.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.34%)</title><rect x="572" y="1012" width="4" height="15" fill="rgb(207,211,42)"/><text x="575.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.34%)</title><rect x="572" y="1028" width="4" height="15" fill="rgb(226,188,46)"/><text x="575.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.34%)</title><rect x="572" y="1044" width="4" height="15" fill="rgb(253,119,34)"/><text x="575.00" y="1054.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="572" y="1060" width="4" height="15" fill="rgb(224,32,2)"/><text x="575.00" y="1070.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.34%)</title><rect x="576" y="932" width="4" height="15" fill="rgb(248,143,7)"/><text x="579.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.34%)</title><rect x="576" y="948" width="4" height="15" fill="rgb(213,217,52)"/><text x="579.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.34%)</title><rect x="576" y="964" width="4" height="15" fill="rgb(247,202,26)"/><text x="579.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.34%)</title><rect x="576" y="980" width="4" height="15" fill="rgb(249,174,5)"/><text x="579.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.34%)</title><rect x="576" y="996" width="4" height="15" fill="rgb(206,105,9)"/><text x="579.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.67%)</title><rect x="576" y="852" width="8" height="15" fill="rgb(210,142,34)"/><text x="579.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.67%)</title><rect x="576" y="868" width="8" height="15" fill="rgb(250,169,47)"/><text x="579.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.67%)</title><rect x="576" y="884" width="8" height="15" fill="rgb(240,216,26)"/><text x="579.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.67%)</title><rect x="576" y="900" width="8" height="15" fill="rgb(216,15,41)"/><text x="579.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.67%)</title><rect x="576" y="916" width="8" height="15" fill="rgb(214,92,6)"/><text x="579.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:432) (1 samples, 0.34%)</title><rect x="580" y="932" width="4" height="15" fill="rgb(240,220,46)"/><text x="583.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.34%)</title><rect x="584" y="884" width="4" height="15" fill="rgb(208,217,36)"/><text x="587.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.34%)</title><rect x="584" y="900" width="4" height="15" fill="rgb(207,142,17)"/><text x="587.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="584" y="916" width="4" height="15" fill="rgb(225,27,23)"/><text x="587.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="584" y="932" width="4" height="15" fill="rgb(235,188,2)"/><text x="587.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.34%)</title><rect x="584" y="948" width="4" height="15" fill="rgb(209,128,40)"/><text x="587.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.34%)</title><rect x="584" y="964" width="4" height="15" fill="rgb(221,198,52)"/><text x="587.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:371) (1 samples, 0.34%)</title><rect x="584" y="980" width="4" height="15" fill="rgb(225,168,15)"/><text x="587.00" y="990.50"></text></g><g><title>__neg__ (pkg_resources/_vendor/packaging/_structures.py:34) (1 samples, 0.34%)</title><rect x="584" y="996" width="4" height="15" fill="rgb(225,9,1)"/><text x="587.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 2.01%)</title><rect x="568" y="820" width="24" height="15" fill="rgb(209,153,24)"/><text x="571.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 2.01%)</title><rect x="568" y="836" width="24" height="15" fill="rgb(247,157,5)"/><text x="571.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.67%)</title><rect x="584" y="852" width="8" height="15" fill="rgb(235,34,10)"/><text x="587.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.67%)</title><rect x="584" y="868" width="8" height="15" fill="rgb(206,81,30)"/><text x="587.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.34%)</title><rect x="588" y="884" width="4" height="15" fill="rgb(211,208,0)"/><text x="591.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.34%)</title><rect x="588" y="900" width="4" height="15" fill="rgb(236,208,35)"/><text x="591.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.34%)</title><rect x="588" y="916" width="4" height="15" fill="rgb(251,4,1)"/><text x="591.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.34%)</title><rect x="588" y="932" width="4" height="15" fill="rgb(228,133,6)"/><text x="591.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.34%)</title><rect x="588" y="948" width="4" height="15" fill="rgb(216,149,3)"/><text x="591.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.34%)</title><rect x="588" y="964" width="4" height="15" fill="rgb(214,73,11)"/><text x="591.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:255) (1 samples, 0.34%)</title><rect x="588" y="980" width="4" height="15" fill="rgb(232,147,7)"/><text x="591.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (7 samples, 2.35%)</title><rect x="568" y="148" width="28" height="15" fill="rgb(220,141,3)"/><text x="571.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="164" width="28" height="15" fill="rgb(245,82,13)"/><text x="571.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.35%)</title><rect x="568" y="180" width="28" height="15" fill="rgb(238,0,41)"/><text x="571.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="196" width="28" height="15" fill="rgb(249,24,8)"/><text x="571.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="212" width="28" height="15" fill="rgb(229,62,27)"/><text x="571.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="568" y="228" width="28" height="15" fill="rgb(238,110,48)"/><text x="571.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="568" y="244" width="28" height="15" fill="rgb(247,197,35)"/><text x="571.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="568" y="260" width="28" height="15" fill="rgb(223,102,13)"/><text x="571.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="276" width="28" height="15" fill="rgb(224,23,42)"/><text x="571.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 2.35%)</title><rect x="568" y="292" width="28" height="15" fill="rgb(225,219,5)"/><text x="571.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="308" width="28" height="15" fill="rgb(240,27,51)"/><text x="571.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="568" y="324" width="28" height="15" fill="rgb(225,101,47)"/><text x="571.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="568" y="340" width="28" height="15" fill="rgb(226,184,48)"/><text x="571.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="568" y="356" width="28" height="15" fill="rgb(223,48,32)"/><text x="571.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="372" width="28" height="15" fill="rgb(244,126,3)"/><text x="571.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 2.35%)</title><rect x="568" y="388" width="28" height="15" fill="rgb(220,48,5)"/><text x="571.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="404" width="28" height="15" fill="rgb(249,80,8)"/><text x="571.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="568" y="420" width="28" height="15" fill="rgb(223,102,53)"/><text x="571.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="568" y="436" width="28" height="15" fill="rgb(223,136,1)"/><text x="571.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="568" y="452" width="28" height="15" fill="rgb(224,53,38)"/><text x="571.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="468" width="28" height="15" fill="rgb(230,127,53)"/><text x="571.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 2.35%)</title><rect x="568" y="484" width="28" height="15" fill="rgb(242,208,35)"/><text x="571.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="500" width="28" height="15" fill="rgb(218,54,38)"/><text x="571.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="568" y="516" width="28" height="15" fill="rgb(217,158,4)"/><text x="571.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="568" y="532" width="28" height="15" fill="rgb(246,171,50)"/><text x="571.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="568" y="548" width="28" height="15" fill="rgb(210,181,40)"/><text x="571.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="564" width="28" height="15" fill="rgb(236,182,53)"/><text x="571.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.35%)</title><rect x="568" y="580" width="28" height="15" fill="rgb(225,207,23)"/><text x="571.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="596" width="28" height="15" fill="rgb(228,13,29)"/><text x="571.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.35%)</title><rect x="568" y="612" width="28" height="15" fill="rgb(244,32,19)"/><text x="571.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="628" width="28" height="15" fill="rgb(241,23,46)"/><text x="571.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="644" width="28" height="15" fill="rgb(207,136,12)"/><text x="571.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="568" y="660" width="28" height="15" fill="rgb(246,74,41)"/><text x="571.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="568" y="676" width="28" height="15" fill="rgb(232,152,48)"/><text x="571.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="568" y="692" width="28" height="15" fill="rgb(247,153,8)"/><text x="571.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="708" width="28" height="15" fill="rgb(208,141,19)"/><text x="571.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 2.35%)</title><rect x="568" y="724" width="28" height="15" fill="rgb(252,32,15)"/><text x="571.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="568" y="740" width="28" height="15" fill="rgb(219,127,26)"/><text x="571.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="568" y="756" width="28" height="15" fill="rgb(230,129,13)"/><text x="571.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="568" y="772" width="28" height="15" fill="rgb(214,35,27)"/><text x="571.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="568" y="788" width="28" height="15" fill="rgb(235,7,0)"/><text x="571.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="568" y="804" width="28" height="15" fill="rgb(206,100,9)"/><text x="571.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:41) (1 samples, 0.34%)</title><rect x="592" y="820" width="4" height="15" fill="rgb(210,55,14)"/><text x="595.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="592" y="836" width="4" height="15" fill="rgb(218,23,54)"/><text x="595.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="592" y="852" width="4" height="15" fill="rgb(250,67,47)"/><text x="595.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="592" y="868" width="4" height="15" fill="rgb(210,211,45)"/><text x="595.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="592" y="884" width="4" height="15" fill="rgb(216,5,2)"/><text x="595.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="592" y="900" width="4" height="15" fill="rgb(211,149,39)"/><text x="595.00" y="910.50"></text></g><g><title>&lt;module&gt; (inspect.py:35) (1 samples, 0.34%)</title><rect x="592" y="916" width="4" height="15" fill="rgb(248,67,34)"/><text x="595.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="592" y="932" width="4" height="15" fill="rgb(252,165,48)"/><text x="595.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="592" y="948" width="4" height="15" fill="rgb(215,162,47)"/><text x="595.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="592" y="964" width="4" height="15" fill="rgb(251,69,48)"/><text x="595.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="592" y="980" width="4" height="15" fill="rgb(213,201,48)"/><text x="595.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="592" y="996" width="4" height="15" fill="rgb(225,89,8)"/><text x="595.00" y="1006.50"></text></g><g><title>&lt;module&gt; (dis.py:8) (1 samples, 0.34%)</title><rect x="592" y="1012" width="4" height="15" fill="rgb(248,28,41)"/><text x="595.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="592" y="1028" width="4" height="15" fill="rgb(240,129,34)"/><text x="595.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="592" y="1044" width="4" height="15" fill="rgb(207,131,25)"/><text x="595.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="592" y="1060" width="4" height="15" fill="rgb(246,228,50)"/><text x="595.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.34%)</title><rect x="592" y="1076" width="4" height="15" fill="rgb(215,214,4)"/><text x="595.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.34%)</title><rect x="592" y="1092" width="4" height="15" fill="rgb(228,45,51)"/><text x="595.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.34%)</title><rect x="592" y="1108" width="4" height="15" fill="rgb(239,42,46)"/><text x="595.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.34%)</title><rect x="596" y="292" width="4" height="15" fill="rgb(235,191,35)"/><text x="599.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="596" y="308" width="4" height="15" fill="rgb(238,227,35)"/><text x="599.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="596" y="324" width="4" height="15" fill="rgb(224,98,54)"/><text x="599.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="596" y="340" width="4" height="15" fill="rgb(235,85,34)"/><text x="599.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(211,27,38)"/><text x="599.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="596" y="372" width="4" height="15" fill="rgb(226,77,53)"/><text x="599.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.34%)</title><rect x="596" y="388" width="4" height="15" fill="rgb(245,204,8)"/><text x="599.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="596" y="404" width="4" height="15" fill="rgb(225,123,41)"/><text x="599.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="596" y="420" width="4" height="15" fill="rgb(216,15,2)"/><text x="599.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="596" y="436" width="4" height="15" fill="rgb(246,175,9)"/><text x="599.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="596" y="452" width="4" height="15" fill="rgb(209,213,44)"/><text x="599.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="596" y="468" width="4" height="15" fill="rgb(246,124,46)"/><text x="599.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.34%)</title><rect x="596" y="484" width="4" height="15" fill="rgb(254,2,32)"/><text x="599.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="596" y="500" width="4" height="15" fill="rgb(228,9,26)"/><text x="599.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="596" y="516" width="4" height="15" fill="rgb(222,167,7)"/><text x="599.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="596" y="532" width="4" height="15" fill="rgb(227,69,38)"/><text x="599.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="596" y="548" width="4" height="15" fill="rgb(239,49,22)"/><text x="599.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="596" y="564" width="4" height="15" fill="rgb(238,49,41)"/><text x="599.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.34%)</title><rect x="596" y="580" width="4" height="15" fill="rgb(226,78,36)"/><text x="599.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="596" y="596" width="4" height="15" fill="rgb(224,26,18)"/><text x="599.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="596" y="612" width="4" height="15" fill="rgb(238,99,18)"/><text x="599.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="596" y="628" width="4" height="15" fill="rgb(239,193,52)"/><text x="599.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="596" y="644" width="4" height="15" fill="rgb(245,49,3)"/><text x="599.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="596" y="660" width="4" height="15" fill="rgb(232,156,6)"/><text x="599.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.34%)</title><rect x="596" y="676" width="4" height="15" fill="rgb(225,218,49)"/><text x="599.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="596" y="692" width="4" height="15" fill="rgb(249,37,24)"/><text x="599.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="596" y="708" width="4" height="15" fill="rgb(218,111,45)"/><text x="599.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="596" y="724" width="4" height="15" fill="rgb(206,153,24)"/><text x="599.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="596" y="740" width="4" height="15" fill="rgb(214,91,45)"/><text x="599.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="596" y="756" width="4" height="15" fill="rgb(211,87,50)"/><text x="599.00" y="766.50"></text></g><g><title>0x7f6bda4b440e (?) (1 samples, 0.34%)</title><rect x="596" y="772" width="4" height="15" fill="rgb(227,206,31)"/><text x="599.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="596" y="788" width="4" height="15" fill="rgb(254,217,51)"/><text x="599.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="596" y="804" width="4" height="15" fill="rgb(232,228,10)"/><text x="599.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="596" y="820" width="4" height="15" fill="rgb(226,95,17)"/><text x="599.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="596" y="836" width="4" height="15" fill="rgb(211,42,32)"/><text x="599.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="596" y="852" width="4" height="15" fill="rgb(253,183,24)"/><text x="599.00" y="862.50"></text></g><g><title>0x7f6bda26dcd2 (?) (1 samples, 0.34%)</title><rect x="596" y="868" width="4" height="15" fill="rgb(227,53,45)"/><text x="599.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="596" y="884" width="4" height="15" fill="rgb(247,139,15)"/><text x="599.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="596" y="900" width="4" height="15" fill="rgb(218,18,53)"/><text x="599.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="596" y="916" width="4" height="15" fill="rgb(228,147,50)"/><text x="599.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="596" y="932" width="4" height="15" fill="rgb(230,95,2)"/><text x="599.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="596" y="948" width="4" height="15" fill="rgb(219,213,35)"/><text x="599.00" y="958.50"></text></g><g><title>0x7f6bd9961f30 (?) (1 samples, 0.34%)</title><rect x="596" y="964" width="4" height="15" fill="rgb(221,48,35)"/><text x="599.00" y="974.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.34%)</title><rect x="600" y="1236" width="3" height="15" fill="rgb(239,176,0)"/><text x="603.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1252" width="3" height="15" fill="rgb(210,104,2)"/><text x="603.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1268" width="3" height="15" fill="rgb(253,22,13)"/><text x="603.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1284" width="3" height="15" fill="rgb(219,176,28)"/><text x="603.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="1300" width="3" height="15" fill="rgb(210,45,46)"/><text x="603.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1316" width="3" height="15" fill="rgb(212,174,8)"/><text x="603.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.34%)</title><rect x="600" y="1332" width="3" height="15" fill="rgb(247,14,9)"/><text x="603.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="600" y="1348" width="3" height="15" fill="rgb(242,151,35)"/><text x="603.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1364" width="3" height="15" fill="rgb(217,210,0)"/><text x="603.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1380" width="3" height="15" fill="rgb(230,81,10)"/><text x="603.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1396" width="3" height="15" fill="rgb(209,79,52)"/><text x="603.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1412" width="3" height="15" fill="rgb(232,41,34)"/><text x="603.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="1428" width="3" height="15" fill="rgb(252,84,27)"/><text x="603.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1444" width="3" height="15" fill="rgb(229,71,21)"/><text x="603.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.34%)</title><rect x="600" y="1460" width="3" height="15" fill="rgb(224,22,40)"/><text x="603.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1476" width="3" height="15" fill="rgb(228,215,27)"/><text x="603.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1492" width="3" height="15" fill="rgb(235,175,4)"/><text x="603.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1508" width="3" height="15" fill="rgb(253,62,5)"/><text x="603.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="1524" width="3" height="15" fill="rgb(250,133,53)"/><text x="603.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1540" width="3" height="15" fill="rgb(234,169,31)"/><text x="603.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.34%)</title><rect x="600" y="1556" width="3" height="15" fill="rgb(241,36,7)"/><text x="603.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1572" width="3" height="15" fill="rgb(205,67,50)"/><text x="603.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1588" width="3" height="15" fill="rgb(248,78,23)"/><text x="603.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1604" width="3" height="15" fill="rgb(205,94,36)"/><text x="603.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="1620" width="3" height="15" fill="rgb(214,141,9)"/><text x="603.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1636" width="3" height="15" fill="rgb(224,209,1)"/><text x="603.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.34%)</title><rect x="600" y="1652" width="3" height="15" fill="rgb(209,69,15)"/><text x="603.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1668" width="3" height="15" fill="rgb(209,60,35)"/><text x="603.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1684" width="3" height="15" fill="rgb(213,96,10)"/><text x="603.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1700" width="3" height="15" fill="rgb(231,36,50)"/><text x="603.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="1716" width="3" height="15" fill="rgb(228,113,23)"/><text x="603.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1732" width="3" height="15" fill="rgb(239,212,13)"/><text x="603.00" y="1742.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.34%)</title><rect x="600" y="1748" width="3" height="15" fill="rgb(232,214,52)"/><text x="603.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1764" width="3" height="15" fill="rgb(227,127,44)"/><text x="603.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1780" width="3" height="15" fill="rgb(231,207,25)"/><text x="603.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1796" width="3" height="15" fill="rgb(253,115,26)"/><text x="603.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="1812" width="3" height="15" fill="rgb(238,218,39)"/><text x="603.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1828" width="3" height="15" fill="rgb(215,121,22)"/><text x="603.00" y="1838.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:113) (1 samples, 0.34%)</title><rect x="600" y="1844" width="3" height="15" fill="rgb(245,144,2)"/><text x="603.00" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1860" width="3" height="15" fill="rgb(254,168,17)"/><text x="603.00" y="1870.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1876" width="3" height="15" fill="rgb(206,84,19)"/><text x="603.00" y="1886.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1892" width="3" height="15" fill="rgb(254,123,12)"/><text x="603.00" y="1902.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="1908" width="3" height="15" fill="rgb(208,128,13)"/><text x="603.00" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="1924" width="3" height="15" fill="rgb(210,33,18)"/><text x="603.00" y="1934.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py:6) (1 samples, 0.34%)</title><rect x="600" y="1940" width="3" height="15" fill="rgb(227,168,39)"/><text x="603.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="1956" width="3" height="15" fill="rgb(211,65,52)"/><text x="603.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="1972" width="3" height="15" fill="rgb(219,20,39)"/><text x="603.00" y="1982.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="1988" width="3" height="15" fill="rgb(231,57,16)"/><text x="603.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="2004" width="3" height="15" fill="rgb(206,72,44)"/><text x="603.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="2020" width="3" height="15" fill="rgb(213,4,2)"/><text x="603.00" y="2030.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py:15) (1 samples, 0.34%)</title><rect x="600" y="2036" width="3" height="15" fill="rgb(240,70,53)"/><text x="603.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="2052" width="3" height="15" fill="rgb(236,57,15)"/><text x="603.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="2068" width="3" height="15" fill="rgb(237,95,48)"/><text x="603.00" y="2078.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="2084" width="3" height="15" fill="rgb(207,226,43)"/><text x="603.00" y="2094.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="2100" width="3" height="15" fill="rgb(225,210,28)"/><text x="603.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="2116" width="3" height="15" fill="rgb(246,130,50)"/><text x="603.00" y="2126.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_threadsafety.py:5) (1 samples, 0.34%)</title><rect x="600" y="2132" width="3" height="15" fill="rgb(207,170,45)"/><text x="603.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="600" y="2148" width="3" height="15" fill="rgb(229,54,1)"/><text x="603.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="600" y="2164" width="3" height="15" fill="rgb(221,8,25)"/><text x="603.00" y="2174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="600" y="2180" width="3" height="15" fill="rgb(246,157,22)"/><text x="603.00" y="2190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="600" y="2196" width="3" height="15" fill="rgb(215,28,18)"/><text x="603.00" y="2206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="600" y="2212" width="3" height="15" fill="rgb(233,68,1)"/><text x="603.00" y="2222.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/decorator.py:81) (1 samples, 0.34%)</title><rect x="600" y="2228" width="3" height="15" fill="rgb(217,66,34)"/><text x="603.00" y="2238.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.34%)</title><rect x="600" y="2244" width="3" height="15" fill="rgb(232,145,22)"/><text x="603.00" y="2254.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.34%)</title><rect x="600" y="2260" width="3" height="15" fill="rgb(253,157,13)"/><text x="603.00" y="2270.50"></text></g><g><title>compile (sre_compile.py:783) (1 samples, 0.34%)</title><rect x="600" y="2276" width="3" height="15" fill="rgb(230,87,40)"/><text x="603.00" y="2286.50"></text></g><g><title>_sre_compile (python3.7) (1 samples, 0.34%)</title><rect x="600" y="2292" width="3" height="15" fill="rgb(232,163,25)"/><text x="603.00" y="2302.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1533) (1 samples, 0.34%)</title><rect x="603" y="1364" width="4" height="15" fill="rgb(237,17,1)"/><text x="606.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.34%)</title><rect x="603" y="1380" width="4" height="15" fill="rgb(236,78,15)"/><text x="606.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:710) (1 samples, 0.34%)</title><rect x="603" y="1396" width="4" height="15" fill="rgb(250,54,41)"/><text x="606.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="603" y="1412" width="4" height="15" fill="rgb(234,174,12)"/><text x="606.00" y="1422.50"></text></g><g><title>&lt;genexpr&gt; (scipy/stats/_distn_infrastructure.py:710) (1 samples, 0.34%)</title><rect x="603" y="1428" width="4" height="15" fill="rgb(217,203,12)"/><text x="606.00" y="1438.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.67%)</title><rect x="603" y="1236" width="8" height="15" fill="rgb(247,114,32)"/><text x="606.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.67%)</title><rect x="603" y="1252" width="8" height="15" fill="rgb(242,88,51)"/><text x="606.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="603" y="1268" width="8" height="15" fill="rgb(238,171,36)"/><text x="606.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="603" y="1284" width="8" height="15" fill="rgb(214,112,22)"/><text x="606.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="603" y="1300" width="8" height="15" fill="rgb(214,100,19)"/><text x="606.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="603" y="1316" width="8" height="15" fill="rgb(215,103,46)"/><text x="606.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="603" y="1332" width="8" height="15" fill="rgb(241,227,50)"/><text x="606.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="603" y="1348" width="8" height="15" fill="rgb(234,149,48)"/><text x="606.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4943) (1 samples, 0.34%)</title><rect x="607" y="1364" width="4" height="15" fill="rgb(226,106,17)"/><text x="610.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.34%)</title><rect x="607" y="1380" width="4" height="15" fill="rgb(209,188,19)"/><text x="610.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.34%)</title><rect x="607" y="1396" width="4" height="15" fill="rgb(222,95,13)"/><text x="610.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.34%)</title><rect x="607" y="1412" width="4" height="15" fill="rgb(254,117,41)"/><text x="610.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (4 samples, 1.34%)</title><rect x="600" y="532" width="15" height="15" fill="rgb(246,104,53)"/><text x="603.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.34%)</title><rect x="600" y="548" width="15" height="15" fill="rgb(247,126,19)"/><text x="603.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.34%)</title><rect x="600" y="564" width="15" height="15" fill="rgb(238,75,26)"/><text x="603.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.34%)</title><rect x="600" y="580" width="15" height="15" fill="rgb(218,208,27)"/><text x="603.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.34%)</title><rect x="600" y="596" width="15" height="15" fill="rgb(226,27,44)"/><text x="603.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="612" width="15" height="15" fill="rgb(234,211,32)"/><text x="603.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.34%)</title><rect x="600" y="628" width="15" height="15" fill="rgb(234,157,19)"/><text x="603.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.34%)</title><rect x="600" y="644" width="15" height="15" fill="rgb(206,182,39)"/><text x="603.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.34%)</title><rect x="600" y="660" width="15" height="15" fill="rgb(237,105,42)"/><text x="603.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.34%)</title><rect x="600" y="676" width="15" height="15" fill="rgb(250,4,7)"/><text x="603.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.34%)</title><rect x="600" y="692" width="15" height="15" fill="rgb(226,116,36)"/><text x="603.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="708" width="15" height="15" fill="rgb(211,188,37)"/><text x="603.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.34%)</title><rect x="600" y="724" width="15" height="15" fill="rgb(232,19,36)"/><text x="603.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.34%)</title><rect x="600" y="740" width="15" height="15" fill="rgb(230,109,8)"/><text x="603.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.34%)</title><rect x="600" y="756" width="15" height="15" fill="rgb(219,39,20)"/><text x="603.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.34%)</title><rect x="600" y="772" width="15" height="15" fill="rgb(253,122,10)"/><text x="603.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.34%)</title><rect x="600" y="788" width="15" height="15" fill="rgb(241,190,33)"/><text x="603.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="804" width="15" height="15" fill="rgb(239,17,15)"/><text x="603.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (4 samples, 1.34%)</title><rect x="600" y="820" width="15" height="15" fill="rgb(208,95,11)"/><text x="603.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.34%)</title><rect x="600" y="836" width="15" height="15" fill="rgb(228,215,25)"/><text x="603.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.34%)</title><rect x="600" y="852" width="15" height="15" fill="rgb(222,98,24)"/><text x="603.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.34%)</title><rect x="600" y="868" width="15" height="15" fill="rgb(220,24,11)"/><text x="603.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.34%)</title><rect x="600" y="884" width="15" height="15" fill="rgb(232,164,44)"/><text x="603.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="900" width="15" height="15" fill="rgb(254,1,13)"/><text x="603.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (4 samples, 1.34%)</title><rect x="600" y="916" width="15" height="15" fill="rgb(214,99,36)"/><text x="603.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.34%)</title><rect x="600" y="932" width="15" height="15" fill="rgb(240,32,23)"/><text x="603.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.34%)</title><rect x="600" y="948" width="15" height="15" fill="rgb(222,118,12)"/><text x="603.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.34%)</title><rect x="600" y="964" width="15" height="15" fill="rgb(218,119,34)"/><text x="603.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.34%)</title><rect x="600" y="980" width="15" height="15" fill="rgb(219,66,14)"/><text x="603.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="996" width="15" height="15" fill="rgb(221,145,23)"/><text x="603.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (4 samples, 1.34%)</title><rect x="600" y="1012" width="15" height="15" fill="rgb(219,68,15)"/><text x="603.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.34%)</title><rect x="600" y="1028" width="15" height="15" fill="rgb(231,6,11)"/><text x="603.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.34%)</title><rect x="600" y="1044" width="15" height="15" fill="rgb(244,32,50)"/><text x="603.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.34%)</title><rect x="600" y="1060" width="15" height="15" fill="rgb(223,152,38)"/><text x="603.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.34%)</title><rect x="600" y="1076" width="15" height="15" fill="rgb(240,102,38)"/><text x="603.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="1092" width="15" height="15" fill="rgb(254,201,1)"/><text x="603.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (4 samples, 1.34%)</title><rect x="600" y="1108" width="15" height="15" fill="rgb(237,17,17)"/><text x="603.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.34%)</title><rect x="600" y="1124" width="15" height="15" fill="rgb(218,27,52)"/><text x="603.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="1140" width="15" height="15" fill="rgb(231,104,3)"/><text x="603.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.34%)</title><rect x="600" y="1156" width="15" height="15" fill="rgb(250,226,0)"/><text x="603.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.34%)</title><rect x="600" y="1172" width="15" height="15" fill="rgb(253,132,37)"/><text x="603.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.34%)</title><rect x="600" y="1188" width="15" height="15" fill="rgb(213,72,35)"/><text x="603.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.34%)</title><rect x="600" y="1204" width="15" height="15" fill="rgb(235,11,9)"/><text x="603.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.34%)</title><rect x="600" y="1220" width="15" height="15" fill="rgb(231,119,16)"/><text x="603.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.34%)</title><rect x="611" y="1236" width="4" height="15" fill="rgb(241,111,44)"/><text x="614.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="611" y="1252" width="4" height="15" fill="rgb(254,104,25)"/><text x="614.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="611" y="1268" width="4" height="15" fill="rgb(206,45,51)"/><text x="614.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="611" y="1284" width="4" height="15" fill="rgb(248,118,19)"/><text x="614.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="611" y="1300" width="4" height="15" fill="rgb(221,104,20)"/><text x="614.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="611" y="1316" width="4" height="15" fill="rgb(222,122,54)"/><text x="614.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="611" y="1332" width="4" height="15" fill="rgb(231,103,10)"/><text x="614.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="611" y="1348" width="4" height="15" fill="rgb(206,1,27)"/><text x="614.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:858) (1 samples, 0.34%)</title><rect x="611" y="1364" width="4" height="15" fill="rgb(206,2,20)"/><text x="614.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2806) (1 samples, 0.34%)</title><rect x="611" y="1380" width="4" height="15" fill="rgb(230,208,46)"/><text x="614.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.34%)</title><rect x="611" y="1396" width="4" height="15" fill="rgb(245,228,31)"/><text x="614.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.34%)</title><rect x="615" y="964" width="4" height="15" fill="rgb(224,12,51)"/><text x="618.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="615" y="980" width="4" height="15" fill="rgb(223,90,0)"/><text x="618.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="615" y="996" width="4" height="15" fill="rgb(234,207,12)"/><text x="618.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="615" y="1012" width="4" height="15" fill="rgb(213,106,1)"/><text x="618.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="615" y="1028" width="4" height="15" fill="rgb(246,200,45)"/><text x="618.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="615" y="1044" width="4" height="15" fill="rgb(233,55,17)"/><text x="618.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.34%)</title><rect x="615" y="1060" width="4" height="15" fill="rgb(217,182,39)"/><text x="618.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="615" y="1076" width="4" height="15" fill="rgb(241,137,29)"/><text x="618.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="615" y="1092" width="4" height="15" fill="rgb(253,115,33)"/><text x="618.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="615" y="1108" width="4" height="15" fill="rgb(216,147,21)"/><text x="618.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="615" y="1124" width="4" height="15" fill="rgb(248,24,51)"/><text x="618.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="615" y="1140" width="4" height="15" fill="rgb(233,12,40)"/><text x="618.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:53) (1 samples, 0.34%)</title><rect x="615" y="1156" width="4" height="15" fill="rgb(253,175,5)"/><text x="618.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="615" y="1172" width="4" height="15" fill="rgb(209,103,30)"/><text x="618.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="615" y="1188" width="4" height="15" fill="rgb(241,209,26)"/><text x="618.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="615" y="1204" width="4" height="15" fill="rgb(219,43,11)"/><text x="618.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="615" y="1220" width="4" height="15" fill="rgb(220,187,12)"/><text x="618.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="615" y="1236" width="4" height="15" fill="rgb(241,104,42)"/><text x="618.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:17) (1 samples, 0.34%)</title><rect x="615" y="1252" width="4" height="15" fill="rgb(210,193,25)"/><text x="618.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="615" y="1268" width="4" height="15" fill="rgb(230,10,48)"/><text x="618.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="615" y="1284" width="4" height="15" fill="rgb(216,93,2)"/><text x="618.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="615" y="1300" width="4" height="15" fill="rgb(225,164,41)"/><text x="618.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="615" y="1316" width="4" height="15" fill="rgb(216,147,25)"/><text x="618.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="615" y="1332" width="4" height="15" fill="rgb(243,176,44)"/><text x="618.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py:460) (1 samples, 0.34%)</title><rect x="615" y="1348" width="4" height="15" fill="rgb(246,172,51)"/><text x="618.00" y="1358.50"></text></g><g><title>LeastSquaresError (sklearn/ensemble/_gb.py:538) (1 samples, 0.34%)</title><rect x="615" y="1364" width="4" height="15" fill="rgb(238,132,34)"/><text x="618.00" y="1374.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.67%)</title><rect x="615" y="532" width="8" height="15" fill="rgb(247,52,0)"/><text x="618.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="615" y="548" width="8" height="15" fill="rgb(243,143,54)"/><text x="618.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="615" y="564" width="8" height="15" fill="rgb(216,176,49)"/><text x="618.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="615" y="580" width="8" height="15" fill="rgb(238,32,6)"/><text x="618.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="615" y="596" width="8" height="15" fill="rgb(227,105,25)"/><text x="618.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="615" y="612" width="8" height="15" fill="rgb(239,66,22)"/><text x="618.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.67%)</title><rect x="615" y="628" width="8" height="15" fill="rgb(242,96,8)"/><text x="618.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="615" y="644" width="8" height="15" fill="rgb(206,97,10)"/><text x="618.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="615" y="660" width="8" height="15" fill="rgb(251,102,46)"/><text x="618.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="615" y="676" width="8" height="15" fill="rgb(223,57,22)"/><text x="618.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="615" y="692" width="8" height="15" fill="rgb(212,224,10)"/><text x="618.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="615" y="708" width="8" height="15" fill="rgb(207,2,50)"/><text x="618.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.67%)</title><rect x="615" y="724" width="8" height="15" fill="rgb(227,24,45)"/><text x="618.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="615" y="740" width="8" height="15" fill="rgb(240,197,22)"/><text x="618.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.67%)</title><rect x="615" y="756" width="8" height="15" fill="rgb(240,148,24)"/><text x="618.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="615" y="772" width="8" height="15" fill="rgb(243,218,5)"/><text x="618.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="615" y="788" width="8" height="15" fill="rgb(234,96,35)"/><text x="618.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="615" y="804" width="8" height="15" fill="rgb(232,175,17)"/><text x="618.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="615" y="820" width="8" height="15" fill="rgb(248,204,30)"/><text x="618.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="615" y="836" width="8" height="15" fill="rgb(243,7,41)"/><text x="618.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="615" y="852" width="8" height="15" fill="rgb(216,54,42)"/><text x="618.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.67%)</title><rect x="615" y="868" width="8" height="15" fill="rgb(240,26,7)"/><text x="618.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="615" y="884" width="8" height="15" fill="rgb(206,97,2)"/><text x="618.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="615" y="900" width="8" height="15" fill="rgb(210,222,23)"/><text x="618.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="615" y="916" width="8" height="15" fill="rgb(234,198,40)"/><text x="618.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="615" y="932" width="8" height="15" fill="rgb(253,171,22)"/><text x="618.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="615" y="948" width="8" height="15" fill="rgb(226,134,18)"/><text x="618.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.34%)</title><rect x="619" y="964" width="4" height="15" fill="rgb(214,130,4)"/><text x="622.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="619" y="980" width="4" height="15" fill="rgb(225,24,48)"/><text x="622.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="619" y="996" width="4" height="15" fill="rgb(222,188,8)"/><text x="622.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="619" y="1012" width="4" height="15" fill="rgb(248,179,31)"/><text x="622.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="619" y="1028" width="4" height="15" fill="rgb(221,13,14)"/><text x="622.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="619" y="1044" width="4" height="15" fill="rgb(206,7,12)"/><text x="622.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="619" y="1060" width="4" height="15" fill="rgb(215,30,53)"/><text x="622.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="619" y="1076" width="4" height="15" fill="rgb(237,18,0)"/><text x="622.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.34%)</title><rect x="619" y="1092" width="4" height="15" fill="rgb(243,55,11)"/><text x="622.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="619" y="1108" width="4" height="15" fill="rgb(227,70,5)"/><text x="622.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="619" y="1124" width="4" height="15" fill="rgb(235,89,53)"/><text x="622.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="619" y="1140" width="4" height="15" fill="rgb(214,54,54)"/><text x="622.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="619" y="1156" width="4" height="15" fill="rgb(250,184,46)"/><text x="622.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="619" y="1172" width="4" height="15" fill="rgb(239,127,15)"/><text x="622.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="619" y="1188" width="4" height="15" fill="rgb(242,115,16)"/><text x="622.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="619" y="1204" width="4" height="15" fill="rgb(232,228,15)"/><text x="622.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.34%)</title><rect x="619" y="1220" width="4" height="15" fill="rgb(243,160,1)"/><text x="622.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="619" y="1236" width="4" height="15" fill="rgb(254,98,16)"/><text x="622.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="619" y="1252" width="4" height="15" fill="rgb(235,61,47)"/><text x="622.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="619" y="1268" width="4" height="15" fill="rgb(208,95,22)"/><text x="622.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="619" y="1284" width="4" height="15" fill="rgb(209,92,28)"/><text x="622.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="619" y="1300" width="4" height="15" fill="rgb(248,183,32)"/><text x="622.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.34%)</title><rect x="619" y="1316" width="4" height="15" fill="rgb(245,118,42)"/><text x="622.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.34%)</title><rect x="619" y="1332" width="4" height="15" fill="rgb(243,4,33)"/><text x="622.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.34%)</title><rect x="619" y="1348" width="4" height="15" fill="rgb(221,150,32)"/><text x="622.00" y="1358.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="619" y="1364" width="4" height="15" fill="rgb(214,165,37)"/><text x="622.00" y="1374.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="619" y="1380" width="4" height="15" fill="rgb(248,57,41)"/><text x="622.00" y="1390.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="619" y="1396" width="4" height="15" fill="rgb(221,69,42)"/><text x="622.00" y="1406.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="619" y="1412" width="4" height="15" fill="rgb(242,56,8)"/><text x="622.00" y="1422.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="619" y="1428" width="4" height="15" fill="rgb(209,163,42)"/><text x="622.00" y="1438.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (8 samples, 2.68%)</title><rect x="596" y="148" width="31" height="15" fill="rgb(232,103,3)"/><text x="599.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.68%)</title><rect x="596" y="164" width="31" height="15" fill="rgb(252,43,47)"/><text x="599.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.68%)</title><rect x="596" y="180" width="31" height="15" fill="rgb(245,206,51)"/><text x="599.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.68%)</title><rect x="596" y="196" width="31" height="15" fill="rgb(233,24,40)"/><text x="599.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.68%)</title><rect x="596" y="212" width="31" height="15" fill="rgb(214,83,43)"/><text x="599.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.68%)</title><rect x="596" y="228" width="31" height="15" fill="rgb(220,140,37)"/><text x="599.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.68%)</title><rect x="596" y="244" width="31" height="15" fill="rgb(250,191,36)"/><text x="599.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.68%)</title><rect x="596" y="260" width="31" height="15" fill="rgb(254,73,48)"/><text x="599.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.68%)</title><rect x="596" y="276" width="31" height="15" fill="rgb(225,84,11)"/><text x="599.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 2.35%)</title><rect x="600" y="292" width="27" height="15" fill="rgb(217,159,0)"/><text x="603.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="600" y="308" width="27" height="15" fill="rgb(233,14,40)"/><text x="603.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.35%)</title><rect x="600" y="324" width="27" height="15" fill="rgb(228,106,0)"/><text x="603.00" y="334.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="600" y="340" width="27" height="15" fill="rgb(250,67,19)"/><text x="603.00" y="350.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="600" y="356" width="27" height="15" fill="rgb(211,60,4)"/><text x="603.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="600" y="372" width="27" height="15" fill="rgb(230,13,17)"/><text x="603.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="600" y="388" width="27" height="15" fill="rgb(238,183,51)"/><text x="603.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="600" y="404" width="27" height="15" fill="rgb(218,39,46)"/><text x="603.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="600" y="420" width="27" height="15" fill="rgb(235,101,34)"/><text x="603.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 2.35%)</title><rect x="600" y="436" width="27" height="15" fill="rgb(214,17,1)"/><text x="603.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.35%)</title><rect x="600" y="452" width="27" height="15" fill="rgb(205,96,41)"/><text x="603.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.35%)</title><rect x="600" y="468" width="27" height="15" fill="rgb(246,58,34)"/><text x="603.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.35%)</title><rect x="600" y="484" width="27" height="15" fill="rgb(239,208,47)"/><text x="603.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.35%)</title><rect x="600" y="500" width="27" height="15" fill="rgb(233,157,27)"/><text x="603.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.35%)</title><rect x="600" y="516" width="27" height="15" fill="rgb(235,19,30)"/><text x="603.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:20) (1 samples, 0.34%)</title><rect x="623" y="532" width="4" height="15" fill="rgb(214,134,2)"/><text x="626.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="623" y="548" width="4" height="15" fill="rgb(254,2,50)"/><text x="626.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="623" y="564" width="4" height="15" fill="rgb(216,91,34)"/><text x="626.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="623" y="580" width="4" height="15" fill="rgb(246,108,27)"/><text x="626.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="623" y="596" width="4" height="15" fill="rgb(229,6,3)"/><text x="626.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="623" y="612" width="4" height="15" fill="rgb(247,116,3)"/><text x="626.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py:12) (1 samples, 0.34%)</title><rect x="623" y="628" width="4" height="15" fill="rgb(225,62,19)"/><text x="626.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="623" y="644" width="4" height="15" fill="rgb(220,4,52)"/><text x="626.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="623" y="660" width="4" height="15" fill="rgb(233,4,19)"/><text x="626.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="623" y="676" width="4" height="15" fill="rgb(227,183,26)"/><text x="626.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="623" y="692" width="4" height="15" fill="rgb(253,24,39)"/><text x="626.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="623" y="708" width="4" height="15" fill="rgb(205,119,28)"/><text x="626.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:45) (1 samples, 0.34%)</title><rect x="623" y="724" width="4" height="15" fill="rgb(210,186,6)"/><text x="626.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="623" y="740" width="4" height="15" fill="rgb(252,197,40)"/><text x="626.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="623" y="756" width="4" height="15" fill="rgb(243,203,5)"/><text x="626.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="623" y="772" width="4" height="15" fill="rgb(235,80,13)"/><text x="626.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.34%)</title><rect x="623" y="788" width="4" height="15" fill="rgb(212,106,46)"/><text x="626.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.34%)</title><rect x="623" y="804" width="4" height="15" fill="rgb(237,49,32)"/><text x="626.00" y="814.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.34%)</title><rect x="623" y="820" width="4" height="15" fill="rgb(214,89,23)"/><text x="626.00" y="830.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.34%)</title><rect x="623" y="836" width="4" height="15" fill="rgb(244,129,45)"/><text x="626.00" y="846.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.34%)</title><rect x="623" y="852" width="4" height="15" fill="rgb(218,229,51)"/><text x="626.00" y="862.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.34%)</title><rect x="627" y="772" width="4" height="15" fill="rgb(247,170,46)"/><text x="630.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="627" y="788" width="4" height="15" fill="rgb(227,202,50)"/><text x="630.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="627" y="804" width="4" height="15" fill="rgb(252,127,27)"/><text x="630.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="627" y="820" width="4" height="15" fill="rgb(211,28,11)"/><text x="630.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="627" y="836" width="4" height="15" fill="rgb(207,167,43)"/><text x="630.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="627" y="852" width="4" height="15" fill="rgb(248,121,50)"/><text x="630.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.34%)</title><rect x="627" y="868" width="4" height="15" fill="rgb(223,90,16)"/><text x="630.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="627" y="884" width="4" height="15" fill="rgb(206,142,15)"/><text x="630.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="627" y="900" width="4" height="15" fill="rgb(231,218,35)"/><text x="630.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="627" y="916" width="4" height="15" fill="rgb(223,24,21)"/><text x="630.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="627" y="932" width="4" height="15" fill="rgb(218,139,17)"/><text x="630.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="627" y="948" width="4" height="15" fill="rgb(219,226,8)"/><text x="630.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.34%)</title><rect x="627" y="964" width="4" height="15" fill="rgb(250,152,28)"/><text x="630.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="627" y="980" width="4" height="15" fill="rgb(219,177,26)"/><text x="630.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="627" y="996" width="4" height="15" fill="rgb(209,30,21)"/><text x="630.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="627" y="1012" width="4" height="15" fill="rgb(239,163,20)"/><text x="630.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="627" y="1028" width="4" height="15" fill="rgb(239,208,6)"/><text x="630.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="627" y="1044" width="4" height="15" fill="rgb(241,85,36)"/><text x="630.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.34%)</title><rect x="627" y="1060" width="4" height="15" fill="rgb(245,18,11)"/><text x="630.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="627" y="1076" width="4" height="15" fill="rgb(240,92,45)"/><text x="630.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.34%)</title><rect x="627" y="1092" width="4" height="15" fill="rgb(248,194,31)"/><text x="630.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="627" y="1108" width="4" height="15" fill="rgb(212,157,5)"/><text x="630.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="627" y="1124" width="4" height="15" fill="rgb(208,180,3)"/><text x="630.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="627" y="1140" width="4" height="15" fill="rgb(244,80,0)"/><text x="630.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="627" y="1156" width="4" height="15" fill="rgb(222,26,3)"/><text x="630.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="627" y="1172" width="4" height="15" fill="rgb(223,129,36)"/><text x="630.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="627" y="1188" width="4" height="15" fill="rgb(219,150,5)"/><text x="630.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.34%)</title><rect x="627" y="1204" width="4" height="15" fill="rgb(246,162,47)"/><text x="630.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="627" y="1220" width="4" height="15" fill="rgb(244,118,47)"/><text x="630.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="627" y="1236" width="4" height="15" fill="rgb(221,27,52)"/><text x="630.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="627" y="1252" width="4" height="15" fill="rgb(217,11,38)"/><text x="630.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="627" y="1268" width="4" height="15" fill="rgb(236,2,54)"/><text x="630.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="627" y="1284" width="4" height="15" fill="rgb(244,17,10)"/><text x="630.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.34%)</title><rect x="627" y="1300" width="4" height="15" fill="rgb(210,28,1)"/><text x="630.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="627" y="1316" width="4" height="15" fill="rgb(240,112,0)"/><text x="630.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="627" y="1332" width="4" height="15" fill="rgb(238,144,4)"/><text x="630.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="627" y="1348" width="4" height="15" fill="rgb(249,13,47)"/><text x="630.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="627" y="1364" width="4" height="15" fill="rgb(240,58,21)"/><text x="630.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="627" y="1380" width="4" height="15" fill="rgb(212,111,32)"/><text x="630.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:63) (1 samples, 0.34%)</title><rect x="627" y="1396" width="4" height="15" fill="rgb(217,217,2)"/><text x="630.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.34%)</title><rect x="627" y="1412" width="4" height="15" fill="rgb(250,137,25)"/><text x="630.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.34%)</title><rect x="627" y="1428" width="4" height="15" fill="rgb(212,136,10)"/><text x="630.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.34%)</title><rect x="627" y="1444" width="4" height="15" fill="rgb(247,141,47)"/><text x="630.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.34%)</title><rect x="627" y="1460" width="4" height="15" fill="rgb(246,20,26)"/><text x="630.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.34%)</title><rect x="627" y="1476" width="4" height="15" fill="rgb(207,226,0)"/><text x="630.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.34%)</title><rect x="627" y="1492" width="4" height="15" fill="rgb(230,206,18)"/><text x="630.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.34%)</title><rect x="627" y="1508" width="4" height="15" fill="rgb(232,10,52)"/><text x="630.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.34%)</title><rect x="627" y="1524" width="4" height="15" fill="rgb(205,52,3)"/><text x="630.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.34%)</title><rect x="627" y="1540" width="4" height="15" fill="rgb(211,111,38)"/><text x="630.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:621) (1 samples, 0.34%)</title><rect x="627" y="1556" width="4" height="15" fill="rgb(205,9,27)"/><text x="630.00" y="1566.50"></text></g><g><title>match (sre_parse.py:250) (1 samples, 0.34%)</title><rect x="627" y="1572" width="4" height="15" fill="rgb(221,78,4)"/><text x="630.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.67%)</title><rect x="627" y="484" width="8" height="15" fill="rgb(207,39,47)"/><text x="630.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="627" y="500" width="8" height="15" fill="rgb(208,172,46)"/><text x="630.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="627" y="516" width="8" height="15" fill="rgb(210,207,41)"/><text x="630.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="627" y="532" width="8" height="15" fill="rgb(235,223,14)"/><text x="630.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="627" y="548" width="8" height="15" fill="rgb(217,49,25)"/><text x="630.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="627" y="564" width="8" height="15" fill="rgb(242,2,41)"/><text x="630.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.67%)</title><rect x="627" y="580" width="8" height="15" fill="rgb(230,148,37)"/><text x="630.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="627" y="596" width="8" height="15" fill="rgb(208,97,41)"/><text x="630.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="627" y="612" width="8" height="15" fill="rgb(243,122,49)"/><text x="630.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="627" y="628" width="8" height="15" fill="rgb(246,166,33)"/><text x="630.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="627" y="644" width="8" height="15" fill="rgb(240,195,31)"/><text x="630.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="627" y="660" width="8" height="15" fill="rgb(213,66,32)"/><text x="630.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.67%)</title><rect x="627" y="676" width="8" height="15" fill="rgb(222,87,42)"/><text x="630.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="627" y="692" width="8" height="15" fill="rgb(216,52,3)"/><text x="630.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="627" y="708" width="8" height="15" fill="rgb(248,38,21)"/><text x="630.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="627" y="724" width="8" height="15" fill="rgb(216,54,9)"/><text x="630.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="627" y="740" width="8" height="15" fill="rgb(250,142,29)"/><text x="630.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="627" y="756" width="8" height="15" fill="rgb(212,198,34)"/><text x="630.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.34%)</title><rect x="631" y="772" width="4" height="15" fill="rgb(214,193,27)"/><text x="634.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="631" y="788" width="4" height="15" fill="rgb(235,131,19)"/><text x="634.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="631" y="804" width="4" height="15" fill="rgb(221,194,13)"/><text x="634.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="631" y="820" width="4" height="15" fill="rgb(227,129,46)"/><text x="634.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="631" y="836" width="4" height="15" fill="rgb(246,213,51)"/><text x="634.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="631" y="852" width="4" height="15" fill="rgb(218,84,54)"/><text x="634.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="631" y="868" width="4" height="15" fill="rgb(237,171,25)"/><text x="634.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="631" y="884" width="4" height="15" fill="rgb(223,28,36)"/><text x="634.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.34%)</title><rect x="631" y="900" width="4" height="15" fill="rgb(214,184,40)"/><text x="634.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="631" y="916" width="4" height="15" fill="rgb(231,76,51)"/><text x="634.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="631" y="932" width="4" height="15" fill="rgb(215,166,53)"/><text x="634.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="631" y="948" width="4" height="15" fill="rgb(242,125,5)"/><text x="634.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="631" y="964" width="4" height="15" fill="rgb(247,36,33)"/><text x="634.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="631" y="980" width="4" height="15" fill="rgb(209,218,14)"/><text x="634.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.34%)</title><rect x="631" y="996" width="4" height="15" fill="rgb(229,175,27)"/><text x="634.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="631" y="1012" width="4" height="15" fill="rgb(220,160,19)"/><text x="634.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="631" y="1028" width="4" height="15" fill="rgb(218,185,30)"/><text x="634.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="631" y="1044" width="4" height="15" fill="rgb(254,163,52)"/><text x="634.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="631" y="1060" width="4" height="15" fill="rgb(209,192,29)"/><text x="634.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="631" y="1076" width="4" height="15" fill="rgb(222,80,45)"/><text x="634.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:62) (1 samples, 0.34%)</title><rect x="631" y="1092" width="4" height="15" fill="rgb(206,11,31)"/><text x="634.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="631" y="1108" width="4" height="15" fill="rgb(253,59,43)"/><text x="634.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="631" y="1124" width="4" height="15" fill="rgb(221,5,4)"/><text x="634.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="631" y="1140" width="4" height="15" fill="rgb(217,176,23)"/><text x="634.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="631" y="1156" width="4" height="15" fill="rgb(215,133,5)"/><text x="634.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="631" y="1172" width="4" height="15" fill="rgb(226,71,0)"/><text x="634.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py:276) (1 samples, 0.34%)</title><rect x="631" y="1188" width="4" height="15" fill="rgb(237,139,46)"/><text x="634.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.34%)</title><rect x="631" y="1204" width="4" height="15" fill="rgb(214,156,9)"/><text x="634.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py:106) (1 samples, 0.34%)</title><rect x="631" y="1220" width="4" height="15" fill="rgb(231,203,31)"/><text x="634.00" y="1230.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.34%)</title><rect x="631" y="1236" width="4" height="15" fill="rgb(227,66,31)"/><text x="634.00" y="1246.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.34%)</title><rect x="631" y="1252" width="4" height="15" fill="rgb(249,2,23)"/><text x="634.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.34%)</title><rect x="631" y="1268" width="4" height="15" fill="rgb(234,148,7)"/><text x="634.00" y="1278.50"></text></g><g><title>_signature_from_function (inspect.py:2133) (1 samples, 0.34%)</title><rect x="631" y="1284" width="4" height="15" fill="rgb(209,214,48)"/><text x="634.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:4) (18 samples, 6.04%)</title><rect x="568" y="52" width="71" height="15" fill="rgb(212,221,20)"/><text x="571.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 6.04%)</title><rect x="568" y="68" width="71" height="15" fill="rgb(206,103,21)"/><text x="571.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 6.04%)</title><rect x="568" y="84" width="71" height="15" fill="rgb(212,79,7)"/><text x="571.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 6.04%)</title><rect x="568" y="100" width="71" height="15" fill="rgb(248,83,39)"/><text x="571.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 6.04%)</title><rect x="568" y="116" width="71" height="15" fill="rgb(240,147,27)"/><text x="571.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 6.04%)</title><rect x="568" y="132" width="71" height="15" fill="rgb(233,60,49)"/><text x="571.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:8) (3 samples, 1.01%)</title><rect x="627" y="148" width="12" height="15" fill="rgb(245,21,26)"/><text x="630.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.01%)</title><rect x="627" y="164" width="12" height="15" fill="rgb(214,158,22)"/><text x="630.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.01%)</title><rect x="627" y="180" width="12" height="15" fill="rgb(208,204,34)"/><text x="630.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.01%)</title><rect x="627" y="196" width="12" height="15" fill="rgb(233,34,37)"/><text x="630.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.01%)</title><rect x="627" y="212" width="12" height="15" fill="rgb(206,85,19)"/><text x="630.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.01%)</title><rect x="627" y="228" width="12" height="15" fill="rgb(210,210,22)"/><text x="630.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 1.01%)</title><rect x="627" y="244" width="12" height="15" fill="rgb(222,77,12)"/><text x="630.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.01%)</title><rect x="627" y="260" width="12" height="15" fill="rgb(206,125,22)"/><text x="630.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.01%)</title><rect x="627" y="276" width="12" height="15" fill="rgb(251,0,8)"/><text x="630.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.01%)</title><rect x="627" y="292" width="12" height="15" fill="rgb(235,109,53)"/><text x="630.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.01%)</title><rect x="627" y="308" width="12" height="15" fill="rgb(221,206,14)"/><text x="630.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.01%)</title><rect x="627" y="324" width="12" height="15" fill="rgb(236,195,29)"/><text x="630.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 1.01%)</title><rect x="627" y="340" width="12" height="15" fill="rgb(211,155,47)"/><text x="630.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.01%)</title><rect x="627" y="356" width="12" height="15" fill="rgb(242,27,39)"/><text x="630.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.01%)</title><rect x="627" y="372" width="12" height="15" fill="rgb(217,171,42)"/><text x="630.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.01%)</title><rect x="627" y="388" width="12" height="15" fill="rgb(212,201,43)"/><text x="630.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.01%)</title><rect x="627" y="404" width="12" height="15" fill="rgb(233,162,49)"/><text x="630.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.01%)</title><rect x="627" y="420" width="12" height="15" fill="rgb(242,173,6)"/><text x="630.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.01%)</title><rect x="627" y="436" width="12" height="15" fill="rgb(245,197,45)"/><text x="630.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.01%)</title><rect x="627" y="452" width="12" height="15" fill="rgb(226,162,31)"/><text x="630.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.01%)</title><rect x="627" y="468" width="12" height="15" fill="rgb(206,11,47)"/><text x="630.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.34%)</title><rect x="635" y="484" width="4" height="15" fill="rgb(208,8,28)"/><text x="638.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="635" y="500" width="4" height="15" fill="rgb(254,64,24)"/><text x="638.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="635" y="516" width="4" height="15" fill="rgb(246,77,0)"/><text x="638.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="635" y="532" width="4" height="15" fill="rgb(225,30,8)"/><text x="638.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="635" y="548" width="4" height="15" fill="rgb(210,134,51)"/><text x="638.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="635" y="564" width="4" height="15" fill="rgb(250,83,3)"/><text x="638.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.34%)</title><rect x="635" y="580" width="4" height="15" fill="rgb(228,21,53)"/><text x="638.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="635" y="596" width="4" height="15" fill="rgb(215,9,51)"/><text x="638.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="635" y="612" width="4" height="15" fill="rgb(235,192,31)"/><text x="638.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="635" y="628" width="4" height="15" fill="rgb(243,179,11)"/><text x="638.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="635" y="644" width="4" height="15" fill="rgb(231,101,24)"/><text x="638.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="635" y="660" width="4" height="15" fill="rgb(205,94,11)"/><text x="638.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.34%)</title><rect x="635" y="676" width="4" height="15" fill="rgb(212,175,16)"/><text x="638.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="635" y="692" width="4" height="15" fill="rgb(234,65,1)"/><text x="638.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="635" y="708" width="4" height="15" fill="rgb(228,30,44)"/><text x="638.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="635" y="724" width="4" height="15" fill="rgb(207,96,11)"/><text x="638.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="635" y="740" width="4" height="15" fill="rgb(248,92,29)"/><text x="638.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="635" y="756" width="4" height="15" fill="rgb(213,95,53)"/><text x="638.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.34%)</title><rect x="635" y="772" width="4" height="15" fill="rgb(217,116,41)"/><text x="638.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.34%)</title><rect x="635" y="788" width="4" height="15" fill="rgb(220,119,36)"/><text x="638.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.34%)</title><rect x="635" y="804" width="4" height="15" fill="rgb(213,11,30)"/><text x="638.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.34%)</title><rect x="635" y="820" width="4" height="15" fill="rgb(248,104,6)"/><text x="638.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.34%)</title><rect x="635" y="836" width="4" height="15" fill="rgb(218,33,12)"/><text x="638.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.34%)</title><rect x="635" y="852" width="4" height="15" fill="rgb(245,29,44)"/><text x="638.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.34%)</title><rect x="635" y="868" width="4" height="15" fill="rgb(241,44,22)"/><text x="638.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.34%)</title><rect x="635" y="884" width="4" height="15" fill="rgb(239,120,27)"/><text x="638.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:511) (1 samples, 0.34%)</title><rect x="635" y="900" width="4" height="15" fill="rgb(245,53,49)"/><text x="638.00" y="910.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:28) (1 samples, 0.34%)</title><rect x="639" y="84" width="4" height="15" fill="rgb(228,216,47)"/><text x="642.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.34%)</title><rect x="639" y="100" width="4" height="15" fill="rgb(241,119,15)"/><text x="642.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.34%)</title><rect x="639" y="116" width="4" height="15" fill="rgb(206,185,47)"/><text x="642.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.34%)</title><rect x="639" y="132" width="4" height="15" fill="rgb(212,207,28)"/><text x="642.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.34%)</title><rect x="639" y="148" width="4" height="15" fill="rgb(213,90,12)"/><text x="642.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.34%)</title><rect x="639" y="164" width="4" height="15" fill="rgb(233,32,50)"/><text x="642.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.34%)</title><rect x="639" y="180" width="4" height="15" fill="rgb(244,135,1)"/><text x="642.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.34%)</title><rect x="639" y="196" width="4" height="15" fill="rgb(208,211,16)"/><text x="642.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="639" y="212" width="4" height="15" fill="rgb(205,212,32)"/><text x="642.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="639" y="228" width="4" height="15" fill="rgb(239,50,12)"/><text x="642.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="639" y="244" width="4" height="15" fill="rgb(239,43,47)"/><text x="642.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="639" y="260" width="4" height="15" fill="rgb(228,214,39)"/><text x="642.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="639" y="276" width="4" height="15" fill="rgb(234,127,24)"/><text x="642.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.34%)</title><rect x="639" y="292" width="4" height="15" fill="rgb(215,220,22)"/><text x="642.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="639" y="308" width="4" height="15" fill="rgb(218,129,16)"/><text x="642.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="639" y="324" width="4" height="15" fill="rgb(248,75,1)"/><text x="642.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="639" y="340" width="4" height="15" fill="rgb(237,101,28)"/><text x="642.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="639" y="356" width="4" height="15" fill="rgb(212,221,39)"/><text x="642.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="639" y="372" width="4" height="15" fill="rgb(230,134,54)"/><text x="642.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.34%)</title><rect x="639" y="388" width="4" height="15" fill="rgb(244,13,0)"/><text x="642.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="639" y="404" width="4" height="15" fill="rgb(239,185,14)"/><text x="642.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="639" y="420" width="4" height="15" fill="rgb(210,13,23)"/><text x="642.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="639" y="436" width="4" height="15" fill="rgb(207,28,52)"/><text x="642.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="639" y="452" width="4" height="15" fill="rgb(217,199,20)"/><text x="642.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="639" y="468" width="4" height="15" fill="rgb(228,129,15)"/><text x="642.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.34%)</title><rect x="639" y="484" width="4" height="15" fill="rgb(220,137,26)"/><text x="642.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.34%)</title><rect x="639" y="500" width="4" height="15" fill="rgb(245,9,26)"/><text x="642.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.34%)</title><rect x="639" y="516" width="4" height="15" fill="rgb(249,211,12)"/><text x="642.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.34%)</title><rect x="639" y="532" width="4" height="15" fill="rgb(225,150,14)"/><text x="642.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.34%)</title><rect x="639" y="548" width="4" height="15" fill="rgb(248,163,22)"/><text x="642.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.34%)</title><rect x="639" y="564" width="4" height="15" fill="rgb(234,176,33)"/><text x="642.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.34%)</title><rect x="639" y="580" width="4" height="15" fill="rgb(243,165,4)"/><text x="642.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.34%)</title><rect x="639" y="596" width="4" height="15" fill="rgb(211,45,52)"/><text x="642.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.34%)</title><rect x="639" y="612" width="4" height="15" fill="rgb(214,174,29)"/><text x="642.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.34%)</title><rect x="639" y="628" width="4" height="15" fill="rgb(227,53,25)"/><text x="642.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.34%)</title><rect x="639" y="644" width="4" height="15" fill="rgb(254,140,42)"/><text x="642.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.34%)</title><rect x="639" y="660" width="4" height="15" fill="rgb(227,77,53)"/><text x="642.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.34%)</title><rect x="639" y="676" width="4" height="15" fill="rgb(215,23,18)"/><text x="642.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:223) (1 samples, 0.34%)</title><rect x="639" y="692" width="4" height="15" fill="rgb(209,89,19)"/><text x="642.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.34%)</title><rect x="639" y="708" width="4" height="15" fill="rgb(254,143,37)"/><text x="642.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.34%)</title><rect x="639" y="724" width="4" height="15" fill="rgb(220,204,13)"/><text x="642.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.34%)</title><rect x="639" y="740" width="4" height="15" fill="rgb(233,15,3)"/><text x="642.00" y="750.50"></text></g><g><title>parse_if (jinja2/parser.py:211) (1 samples, 0.34%)</title><rect x="639" y="756" width="4" height="15" fill="rgb(220,132,36)"/><text x="642.00" y="766.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.34%)</title><rect x="639" y="772" width="4" height="15" fill="rgb(221,65,9)"/><text x="642.00" y="782.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py:612) (1 samples, 0.34%)</title><rect x="639" y="788" width="4" height="15" fill="rgb(246,195,0)"/><text x="642.00" y="798.50"></text></g><g><title>parse_expression (jinja2/parser.py:433) (1 samples, 0.34%)</title><rect x="639" y="804" width="4" height="15" fill="rgb(239,84,47)"/><text x="642.00" y="814.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.34%)</title><rect x="639" y="820" width="4" height="15" fill="rgb(228,11,32)"/><text x="642.00" y="830.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.34%)</title><rect x="639" y="836" width="4" height="15" fill="rgb(216,93,23)"/><text x="642.00" y="846.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.34%)</title><rect x="639" y="852" width="4" height="15" fill="rgb(224,14,50)"/><text x="642.00" y="862.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.34%)</title><rect x="639" y="868" width="4" height="15" fill="rgb(217,173,1)"/><text x="642.00" y="878.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.34%)</title><rect x="639" y="884" width="4" height="15" fill="rgb(206,40,43)"/><text x="642.00" y="894.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.34%)</title><rect x="639" y="900" width="4" height="15" fill="rgb(227,139,20)"/><text x="642.00" y="910.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.34%)</title><rect x="639" y="916" width="4" height="15" fill="rgb(229,122,21)"/><text x="642.00" y="926.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.34%)</title><rect x="639" y="932" width="4" height="15" fill="rgb(230,200,50)"/><text x="642.00" y="942.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.34%)</title><rect x="639" y="948" width="4" height="15" fill="rgb(205,77,45)"/><text x="642.00" y="958.50"></text></g><g><title>parse_postfix (jinja2/parser.py:672) (1 samples, 0.34%)</title><rect x="639" y="964" width="4" height="15" fill="rgb(251,156,9)"/><text x="642.00" y="974.50"></text></g><g><title>parse_subscript (jinja2/parser.py:700) (1 samples, 0.34%)</title><rect x="639" y="980" width="4" height="15" fill="rgb(239,224,15)"/><text x="642.00" y="990.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.34%)</title><rect x="639" y="996" width="4" height="15" fill="rgb(225,203,32)"/><text x="642.00" y="1006.50"></text></g><g><title>wrap (jinja2/lexer.py:597) (1 samples, 0.34%)</title><rect x="639" y="1012" width="4" height="15" fill="rgb(249,182,20)"/><text x="642.00" y="1022.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:22) (1 samples, 0.34%)</title><rect x="643" y="100" width="4" height="15" fill="rgb(233,95,26)"/><text x="646.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="651" y="116" width="4" height="15" fill="rgb(218,26,46)"/><text x="654.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="651" y="132" width="4" height="15" fill="rgb(235,147,20)"/><text x="654.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="651" y="148" width="4" height="15" fill="rgb(229,124,29)"/><text x="654.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.34%)</title><rect x="655" y="116" width="4" height="15" fill="rgb(214,71,51)"/><text x="658.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.34%)</title><rect x="655" y="132" width="4" height="15" fill="rgb(240,111,9)"/><text x="658.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:106) (1 samples, 0.34%)</title><rect x="655" y="148" width="4" height="15" fill="rgb(210,32,35)"/><text x="658.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.34%)</title><rect x="671" y="148" width="4" height="15" fill="rgb(219,153,21)"/><text x="674.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.34%)</title><rect x="675" y="164" width="4" height="15" fill="rgb(253,188,22)"/><text x="678.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.67%)</title><rect x="679" y="164" width="8" height="15" fill="rgb(239,122,28)"/><text x="682.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.34%)</title><rect x="687" y="180" width="4" height="15" fill="rgb(224,153,48)"/><text x="690.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 2.01%)</title><rect x="691" y="180" width="23" height="15" fill="rgb(227,14,49)"/><text x="694.00" y="190.50">r..</text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.34%)</title><rect x="750" y="260" width="4" height="15" fill="rgb(213,95,35)"/><text x="753.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.34%)</title><rect x="750" y="276" width="4" height="15" fill="rgb(225,85,26)"/><text x="753.00" y="286.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.34%)</title><rect x="754" y="260" width="4" height="15" fill="rgb(221,133,10)"/><text x="757.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.34%)</title><rect x="754" y="276" width="4" height="15" fill="rgb(253,221,49)"/><text x="757.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:213) (1 samples, 0.34%)</title><rect x="754" y="292" width="4" height="15" fill="rgb(246,67,2)"/><text x="757.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.34%)</title><rect x="762" y="340" width="4" height="15" fill="rgb(254,155,5)"/><text x="765.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 1.01%)</title><rect x="762" y="308" width="12" height="15" fill="rgb(222,46,4)"/><text x="765.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.01%)</title><rect x="762" y="324" width="12" height="15" fill="rgb(239,126,11)"/><text x="765.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.67%)</title><rect x="766" y="340" width="8" height="15" fill="rgb(251,209,38)"/><text x="769.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.67%)</title><rect x="766" y="356" width="8" height="15" fill="rgb(212,157,28)"/><text x="769.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.67%)</title><rect x="766" y="372" width="8" height="15" fill="rgb(231,24,4)"/><text x="769.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.67%)</title><rect x="766" y="388" width="8" height="15" fill="rgb(234,52,49)"/><text x="769.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.34%)</title><rect x="774" y="324" width="4" height="15" fill="rgb(222,25,47)"/><text x="777.00" y="334.50"></text></g><g><title>0x7f6bedc84757 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="774" y="340" width="4" height="15" fill="rgb(247,81,23)"/><text x="777.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.34%)</title><rect x="778" y="340" width="4" height="15" fill="rgb(210,211,44)"/><text x="781.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.34%)</title><rect x="778" y="356" width="4" height="15" fill="rgb(209,173,14)"/><text x="781.00" y="366.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (1 samples, 0.34%)</title><rect x="782" y="388" width="4" height="15" fill="rgb(208,29,2)"/><text x="785.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.67%)</title><rect x="782" y="340" width="8" height="15" fill="rgb(253,199,9)"/><text x="785.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.67%)</title><rect x="782" y="356" width="8" height="15" fill="rgb(207,124,43)"/><text x="785.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.67%)</title><rect x="782" y="372" width="8" height="15" fill="rgb(251,22,29)"/><text x="785.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.34%)</title><rect x="786" y="388" width="4" height="15" fill="rgb(217,19,44)"/><text x="789.00" y="398.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.34%)</title><rect x="790" y="420" width="4" height="15" fill="rgb(241,94,23)"/><text x="793.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.67%)</title><rect x="790" y="356" width="7" height="15" fill="rgb(253,84,26)"/><text x="793.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.67%)</title><rect x="790" y="372" width="7" height="15" fill="rgb(235,18,54)"/><text x="793.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.67%)</title><rect x="790" y="388" width="7" height="15" fill="rgb(235,94,14)"/><text x="793.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (2 samples, 0.67%)</title><rect x="790" y="404" width="7" height="15" fill="rgb(243,179,42)"/><text x="793.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.34%)</title><rect x="794" y="420" width="3" height="15" fill="rgb(221,143,40)"/><text x="797.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="794" y="436" width="3" height="15" fill="rgb(208,133,12)"/><text x="797.00" y="446.50"></text></g><g><title>0x7f6bedc8ed62 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="794" y="452" width="3" height="15" fill="rgb(254,127,49)"/><text x="797.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.67%)</title><rect x="797" y="356" width="8" height="15" fill="rgb(212,155,27)"/><text x="800.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (2 samples, 0.67%)</title><rect x="797" y="372" width="8" height="15" fill="rgb(219,28,4)"/><text x="800.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.34%)</title><rect x="805" y="356" width="4" height="15" fill="rgb(234,228,49)"/><text x="808.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.34%)</title><rect x="805" y="372" width="4" height="15" fill="rgb(220,1,31)"/><text x="808.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="805" y="388" width="4" height="15" fill="rgb(236,85,54)"/><text x="808.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="805" y="404" width="4" height="15" fill="rgb(236,37,7)"/><text x="808.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.67%)</title><rect x="809" y="372" width="8" height="15" fill="rgb(221,157,32)"/><text x="812.00" y="382.50"></text></g><g><title>0x7f6bece90e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="813" y="388" width="4" height="15" fill="rgb(253,95,18)"/><text x="816.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 3.69%)</title><rect x="778" y="324" width="43" height="15" fill="rgb(219,213,22)"/><text x="781.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 2.68%)</title><rect x="790" y="340" width="31" height="15" fill="rgb(205,98,9)"/><text x="793.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (3 samples, 1.01%)</title><rect x="809" y="356" width="12" height="15" fill="rgb(221,206,4)"/><text x="812.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.34%)</title><rect x="817" y="372" width="4" height="15" fill="rgb(217,130,45)"/><text x="820.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (17 samples, 5.70%)</title><rect x="758" y="260" width="67" height="15" fill="rgb(241,115,9)"/><text x="761.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 5.70%)</title><rect x="758" y="276" width="67" height="15" fill="rgb(231,150,10)"/><text x="761.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 5.70%)</title><rect x="758" y="292" width="67" height="15" fill="rgb(239,168,10)"/><text x="761.00" y="302.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 4.36%)</title><rect x="774" y="308" width="51" height="15" fill="rgb(249,3,34)"/><text x="777.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4681) (1 samples, 0.34%)</title><rect x="821" y="324" width="4" height="15" fill="rgb(208,209,8)"/><text x="824.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.34%)</title><rect x="825" y="276" width="4" height="15" fill="rgb(250,62,15)"/><text x="828.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.34%)</title><rect x="825" y="292" width="4" height="15" fill="rgb(249,146,21)"/><text x="828.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1628) (1 samples, 0.34%)</title><rect x="829" y="292" width="4" height="15" fill="rgb(237,34,14)"/><text x="832.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (27 samples, 9.06%)</title><rect x="730" y="244" width="107" height="15" fill="rgb(238,224,18)"/><text x="733.00" y="254.50">norm_l1 (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.01%)</title><rect x="825" y="260" width="12" height="15" fill="rgb(213,82,44)"/><text x="828.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.67%)</title><rect x="829" y="276" width="8" height="15" fill="rgb(233,57,26)"/><text x="832.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.34%)</title><rect x="833" y="292" width="4" height="15" fill="rgb(217,54,42)"/><text x="836.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="833" y="308" width="4" height="15" fill="rgb(233,162,23)"/><text x="836.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="833" y="324" width="4" height="15" fill="rgb(250,104,2)"/><text x="836.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="841" y="260" width="4" height="15" fill="rgb(246,32,53)"/><text x="844.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="841" y="276" width="4" height="15" fill="rgb(242,50,41)"/><text x="844.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.34%)</title><rect x="841" y="292" width="4" height="15" fill="rgb(206,2,33)"/><text x="844.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="845" y="276" width="4" height="15" fill="rgb(225,65,6)"/><text x="848.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.34%)</title><rect x="845" y="292" width="4" height="15" fill="rgb(250,115,50)"/><text x="848.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="849" y="276" width="4" height="15" fill="rgb(234,81,29)"/><text x="852.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.34%)</title><rect x="849" y="292" width="4" height="15" fill="rgb(206,214,36)"/><text x="852.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.34%)</title><rect x="853" y="324" width="4" height="15" fill="rgb(222,21,47)"/><text x="856.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2277) (1 samples, 0.34%)</title><rect x="853" y="340" width="4" height="15" fill="rgb(238,147,45)"/><text x="856.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.34%)</title><rect x="845" y="260" width="16" height="15" fill="rgb(239,140,37)"/><text x="848.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.67%)</title><rect x="853" y="276" width="8" height="15" fill="rgb(239,82,28)"/><text x="856.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.67%)</title><rect x="853" y="292" width="8" height="15" fill="rgb(238,89,45)"/><text x="856.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.67%)</title><rect x="853" y="308" width="8" height="15" fill="rgb(234,211,41)"/><text x="856.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="857" y="324" width="4" height="15" fill="rgb(247,224,52)"/><text x="860.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2757) (1 samples, 0.34%)</title><rect x="857" y="340" width="4" height="15" fill="rgb(223,177,8)"/><text x="860.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 12.08%)</title><rect x="722" y="196" width="143" height="15" fill="rgb(217,63,19)"/><text x="725.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 12.08%)</title><rect x="722" y="212" width="143" height="15" fill="rgb(241,225,52)"/><text x="725.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (34 samples, 11.41%)</title><rect x="730" y="228" width="135" height="15" fill="rgb(248,154,18)"/><text x="733.00" y="238.50">_run (mlprodict/o..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 2.35%)</title><rect x="837" y="244" width="28" height="15" fill="rgb(218,126,2)"/><text x="840.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.34%)</title><rect x="861" y="260" width="4" height="15" fill="rgb(238,153,3)"/><text x="864.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.34%)</title><rect x="861" y="276" width="4" height="15" fill="rgb(217,15,12)"/><text x="864.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.34%)</title><rect x="865" y="196" width="4" height="15" fill="rgb(226,164,49)"/><text x="868.00" y="206.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (2 samples, 0.67%)</title><rect x="873" y="260" width="8" height="15" fill="rgb(237,116,7)"/><text x="876.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:792) (1 samples, 0.34%)</title><rect x="877" y="276" width="4" height="15" fill="rgb(205,160,54)"/><text x="880.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.34%)</title><rect x="881" y="276" width="4" height="15" fill="rgb(220,160,32)"/><text x="884.00" y="286.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.34%)</title><rect x="885" y="324" width="4" height="15" fill="rgb(240,155,27)"/><text x="888.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.34%)</title><rect x="885" y="340" width="4" height="15" fill="rgb(214,115,19)"/><text x="888.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.34%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(246,47,44)"/><text x="888.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="885" y="372" width="4" height="15" fill="rgb(237,43,4)"/><text x="888.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="885" y="388" width="4" height="15" fill="rgb(242,171,10)"/><text x="888.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (2 samples, 0.67%)</title><rect x="889" y="324" width="7" height="15" fill="rgb(242,93,34)"/><text x="892.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="893" y="340" width="3" height="15" fill="rgb(253,166,37)"/><text x="896.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="896" y="340" width="4" height="15" fill="rgb(217,210,30)"/><text x="899.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (9 samples, 3.02%)</title><rect x="869" y="228" width="35" height="15" fill="rgb(236,93,20)"/><text x="872.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (9 samples, 3.02%)</title><rect x="869" y="244" width="35" height="15" fill="rgb(224,116,2)"/><text x="872.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 2.01%)</title><rect x="881" y="260" width="23" height="15" fill="rgb(232,129,8)"/><text x="884.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.68%)</title><rect x="885" y="276" width="19" height="15" fill="rgb(254,161,20)"/><text x="888.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.68%)</title><rect x="885" y="292" width="19" height="15" fill="rgb(244,46,40)"/><text x="888.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.68%)</title><rect x="885" y="308" width="19" height="15" fill="rgb(252,221,36)"/><text x="888.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.67%)</title><rect x="896" y="324" width="8" height="15" fill="rgb(248,90,14)"/><text x="899.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.34%)</title><rect x="900" y="340" width="4" height="15" fill="rgb(245,213,44)"/><text x="903.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="900" y="356" width="4" height="15" fill="rgb(211,143,24)"/><text x="903.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.34%)</title><rect x="904" y="260" width="4" height="15" fill="rgb(233,189,47)"/><text x="907.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.34%)</title><rect x="904" y="276" width="4" height="15" fill="rgb(211,102,54)"/><text x="907.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.34%)</title><rect x="904" y="292" width="4" height="15" fill="rgb(215,160,36)"/><text x="907.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.34%)</title><rect x="912" y="292" width="4" height="15" fill="rgb(216,116,32)"/><text x="915.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.01%)</title><rect x="908" y="260" width="12" height="15" fill="rgb(221,38,46)"/><text x="911.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.01%)</title><rect x="908" y="276" width="12" height="15" fill="rgb(220,147,52)"/><text x="911.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.34%)</title><rect x="916" y="292" width="4" height="15" fill="rgb(213,44,43)"/><text x="919.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.34%)</title><rect x="916" y="308" width="4" height="15" fill="rgb(219,186,43)"/><text x="919.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.68%)</title><rect x="904" y="244" width="20" height="15" fill="rgb(218,37,42)"/><text x="907.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.34%)</title><rect x="920" y="260" width="4" height="15" fill="rgb(239,146,27)"/><text x="923.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:282) (1 samples, 0.34%)</title><rect x="920" y="276" width="4" height="15" fill="rgb(226,108,36)"/><text x="923.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 2.01%)</title><rect x="904" y="228" width="24" height="15" fill="rgb(234,143,31)"/><text x="907.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.34%)</title><rect x="924" y="244" width="4" height="15" fill="rgb(213,11,6)"/><text x="927.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="952" y="260" width="4" height="15" fill="rgb(209,138,25)"/><text x="955.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.34%)</title><rect x="952" y="276" width="4" height="15" fill="rgb(234,45,25)"/><text x="955.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.34%)</title><rect x="952" y="292" width="4" height="15" fill="rgb(246,68,39)"/><text x="955.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.34%)</title><rect x="956" y="276" width="4" height="15" fill="rgb(216,126,10)"/><text x="959.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.34%)</title><rect x="956" y="292" width="4" height="15" fill="rgb(210,66,31)"/><text x="959.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.34%)</title><rect x="956" y="308" width="4" height="15" fill="rgb(250,119,24)"/><text x="959.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.34%)</title><rect x="956" y="324" width="4" height="15" fill="rgb(217,24,6)"/><text x="959.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="956" y="340" width="4" height="15" fill="rgb(210,76,0)"/><text x="959.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (9 samples, 3.02%)</title><rect x="928" y="228" width="36" height="15" fill="rgb(226,99,18)"/><text x="931.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.01%)</title><rect x="952" y="244" width="12" height="15" fill="rgb(231,68,42)"/><text x="955.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.67%)</title><rect x="956" y="260" width="8" height="15" fill="rgb(254,190,52)"/><text x="959.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.34%)</title><rect x="960" y="276" width="4" height="15" fill="rgb(218,125,12)"/><text x="963.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.34%)</title><rect x="960" y="292" width="4" height="15" fill="rgb(217,39,22)"/><text x="963.00" y="302.50"></text></g><g><title>0x7f6bd007333d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="960" y="308" width="4" height="15" fill="rgb(226,221,49)"/><text x="963.00" y="318.50"></text></g><g><title>0x7f6bd0095214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="960" y="324" width="4" height="15" fill="rgb(214,208,46)"/><text x="963.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.34%)</title><rect x="960" y="340" width="4" height="15" fill="rgb(246,100,34)"/><text x="963.00" y="350.50"></text></g><g><title>0x7f6beddede71 (libm-2.29.so) (1 samples, 0.34%)</title><rect x="960" y="356" width="4" height="15" fill="rgb(227,182,10)"/><text x="963.00" y="366.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.34%)</title><rect x="972" y="292" width="4" height="15" fill="rgb(237,107,14)"/><text x="975.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (28 samples, 9.40%)</title><rect x="869" y="196" width="111" height="15" fill="rgb(227,185,7)"/><text x="872.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (28 samples, 9.40%)</title><rect x="869" y="212" width="111" height="15" fill="rgb(251,214,54)"/><text x="872.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (4 samples, 1.34%)</title><rect x="964" y="228" width="16" height="15" fill="rgb(246,158,14)"/><text x="967.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 1.01%)</title><rect x="968" y="244" width="12" height="15" fill="rgb(205,208,45)"/><text x="971.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.01%)</title><rect x="968" y="260" width="12" height="15" fill="rgb(240,71,34)"/><text x="971.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 1.01%)</title><rect x="968" y="276" width="12" height="15" fill="rgb(228,35,33)"/><text x="971.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.34%)</title><rect x="976" y="292" width="4" height="15" fill="rgb(223,111,4)"/><text x="979.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.34%)</title><rect x="976" y="308" width="4" height="15" fill="rgb(221,64,13)"/><text x="979.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="976" y="324" width="4" height="15" fill="rgb(226,33,19)"/><text x="979.00" y="334.50"></text></g><g><title>0x7f6bedd4c13a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="976" y="340" width="4" height="15" fill="rgb(252,187,20)"/><text x="979.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (69 samples, 23.15%)</title><rect x="714" y="180" width="274" height="15" fill="rgb(209,115,35)"/><text x="717.00" y="190.50">run (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.67%)</title><rect x="980" y="196" width="8" height="15" fill="rgb(227,151,23)"/><text x="983.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.34%)</title><rect x="988" y="180" width="4" height="15" fill="rgb(247,224,24)"/><text x="991.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.34%)</title><rect x="992" y="180" width="3" height="15" fill="rgb(243,175,26)"/><text x="995.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.34%)</title><rect x="995" y="180" width="4" height="15" fill="rgb(217,193,53)"/><text x="998.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 2.01%)</title><rect x="999" y="180" width="24" height="15" fill="rgb(220,35,12)"/><text x="1002.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (86 samples, 28.86%)</title><rect x="687" y="164" width="340" height="15" fill="rgb(247,9,37)"/><text x="690.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.34%)</title><rect x="1023" y="180" width="4" height="15" fill="rgb(225,132,52)"/><text x="1026.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:540) (1 samples, 0.34%)</title><rect x="1027" y="164" width="4" height="15" fill="rgb(221,39,52)"/><text x="1030.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:45) (101 samples, 33.89%)</title><rect x="639" y="52" width="400" height="15" fill="rgb(248,114,19)"/><text x="642.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:44) (101 samples, 33.89%)</title><rect x="639" y="68" width="400" height="15" fill="rgb(229,194,16)"/><text x="642.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:29) (100 samples, 33.56%)</title><rect x="643" y="84" width="396" height="15" fill="rgb(251,104,37)"/><text x="646.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:23) (99 samples, 33.22%)</title><rect x="647" y="100" width="392" height="15" fill="rgb(210,40,40)"/><text x="650.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (96 samples, 32.21%)</title><rect x="659" y="116" width="380" height="15" fill="rgb(230,216,10)"/><text x="662.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (94 samples, 31.54%)</title><rect x="667" y="132" width="372" height="15" fill="rgb(233,60,4)"/><text x="670.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (92 samples, 30.87%)</title><rect x="675" y="148" width="364" height="15" fill="rgb(226,27,41)"/><text x="678.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.67%)</title><rect x="1031" y="164" width="8" height="15" fill="rgb(220,89,26)"/><text x="1034.00" y="174.50"></text></g><g><title>0x7f6bae517ff9 (?) (1 samples, 0.34%)</title><rect x="1043" y="212" width="4" height="15" fill="rgb(247,222,20)"/><text x="1046.00" y="222.50"></text></g><g><title>0x7f6bae512ef6 (?) (1 samples, 0.34%)</title><rect x="1043" y="228" width="4" height="15" fill="rgb(251,84,10)"/><text x="1046.00" y="238.50"></text></g><g><title>0x7f6bae507962 (?) (1 samples, 0.34%)</title><rect x="1043" y="244" width="4" height="15" fill="rgb(250,34,19)"/><text x="1046.00" y="254.50"></text></g><g><title>0x7f6bae53b7a7 (?) (1 samples, 0.34%)</title><rect x="1043" y="260" width="4" height="15" fill="rgb(243,64,54)"/><text x="1046.00" y="270.50"></text></g><g><title>0x7f6bae53b379 (?) (1 samples, 0.34%)</title><rect x="1043" y="276" width="4" height="15" fill="rgb(233,165,20)"/><text x="1046.00" y="286.50"></text></g><g><title>0x7f6bae9998b8 (?) (1 samples, 0.34%)</title><rect x="1043" y="292" width="4" height="15" fill="rgb(228,88,49)"/><text x="1046.00" y="302.50"></text></g><g><title>0x7f6bae997c7f (?) (1 samples, 0.34%)</title><rect x="1043" y="308" width="4" height="15" fill="rgb(236,42,9)"/><text x="1046.00" y="318.50"></text></g><g><title>0x7f6bae9abfd3 (?) (1 samples, 0.34%)</title><rect x="1043" y="324" width="4" height="15" fill="rgb(215,223,38)"/><text x="1046.00" y="334.50"></text></g><g><title>0x7f6bae94cb16 (?) (1 samples, 0.34%)</title><rect x="1043" y="340" width="4" height="15" fill="rgb(250,176,0)"/><text x="1046.00" y="350.50"></text></g><g><title>0x7f6bae8979b9 (?) (1 samples, 0.34%)</title><rect x="1043" y="356" width="4" height="15" fill="rgb(235,2,43)"/><text x="1046.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:18) (3 samples, 1.01%)</title><rect x="1039" y="100" width="12" height="15" fill="rgb(218,130,43)"/><text x="1042.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 1.01%)</title><rect x="1039" y="116" width="12" height="15" fill="rgb(224,167,45)"/><text x="1042.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 1.01%)</title><rect x="1039" y="132" width="12" height="15" fill="rgb(251,9,4)"/><text x="1042.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 1.01%)</title><rect x="1039" y="148" width="12" height="15" fill="rgb(216,34,28)"/><text x="1042.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.67%)</title><rect x="1043" y="164" width="8" height="15" fill="rgb(250,90,48)"/><text x="1046.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.67%)</title><rect x="1043" y="180" width="8" height="15" fill="rgb(252,162,2)"/><text x="1046.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.67%)</title><rect x="1043" y="196" width="8" height="15" fill="rgb(243,111,31)"/><text x="1046.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="212" width="4" height="15" fill="rgb(241,65,36)"/><text x="1050.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="228" width="4" height="15" fill="rgb(232,206,24)"/><text x="1050.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="244" width="4" height="15" fill="rgb(249,122,52)"/><text x="1050.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="260" width="4" height="15" fill="rgb(220,50,30)"/><text x="1050.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="276" width="4" height="15" fill="rgb(240,6,42)"/><text x="1050.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="292" width="4" height="15" fill="rgb(215,209,15)"/><text x="1050.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="308" width="4" height="15" fill="rgb(215,105,45)"/><text x="1050.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="324" width="4" height="15" fill="rgb(249,224,43)"/><text x="1050.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1047" y="340" width="4" height="15" fill="rgb(225,142,34)"/><text x="1050.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:22) (1 samples, 0.34%)</title><rect x="1051" y="100" width="4" height="15" fill="rgb(236,83,1)"/><text x="1054.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.34%)</title><rect x="1055" y="116" width="4" height="15" fill="rgb(251,167,0)"/><text x="1058.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.34%)</title><rect x="1079" y="148" width="4" height="15" fill="rgb(230,184,3)"/><text x="1082.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.34%)</title><rect x="1083" y="164" width="4" height="15" fill="rgb(253,29,49)"/><text x="1086.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.34%)</title><rect x="1091" y="196" width="3" height="15" fill="rgb(205,145,20)"/><text x="1094.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.34%)</title><rect x="1091" y="212" width="3" height="15" fill="rgb(236,88,7)"/><text x="1094.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1091" y="228" width="3" height="15" fill="rgb(221,11,20)"/><text x="1094.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="1091" y="244" width="3" height="15" fill="rgb(250,70,24)"/><text x="1094.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1091" y="260" width="3" height="15" fill="rgb(220,124,33)"/><text x="1094.00" y="270.50"></text></g><g><title>0x7f6bae4dfa40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1106" y="260" width="4" height="15" fill="rgb(253,194,20)"/><text x="1109.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1110" y="292" width="4" height="15" fill="rgb(230,183,21)"/><text x="1113.00" y="302.50"></text></g><g><title>0x7f6bdd73b7a0 (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="1110" y="308" width="4" height="15" fill="rgb(233,63,19)"/><text x="1113.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1114" y="292" width="4" height="15" fill="rgb(234,216,42)"/><text x="1117.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1114" y="308" width="4" height="15" fill="rgb(251,203,35)"/><text x="1117.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="1114" y="324" width="4" height="15" fill="rgb(249,92,44)"/><text x="1117.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1114" y="340" width="4" height="15" fill="rgb(244,72,39)"/><text x="1117.00" y="350.50"></text></g><g><title>0x7f6bedc7000a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1114" y="356" width="4" height="15" fill="rgb(244,183,25)"/><text x="1117.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1118" y="292" width="4" height="15" fill="rgb(222,170,4)"/><text x="1121.00" y="302.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1126" y="356" width="4" height="15" fill="rgb(211,117,13)"/><text x="1129.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="1126" y="372" width="4" height="15" fill="rgb(236,41,41)"/><text x="1129.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="1122" y="340" width="12" height="15" fill="rgb(224,210,37)"/><text x="1125.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1130" y="356" width="4" height="15" fill="rgb(223,227,22)"/><text x="1133.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1134" y="340" width="4" height="15" fill="rgb(219,92,46)"/><text x="1137.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1134" y="356" width="4" height="15" fill="rgb(244,191,23)"/><text x="1137.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1134" y="372" width="4" height="15" fill="rgb(222,61,17)"/><text x="1137.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1134" y="388" width="4" height="15" fill="rgb(231,178,54)"/><text x="1137.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1134" y="404" width="4" height="15" fill="rgb(221,22,44)"/><text x="1137.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1138" y="340" width="4" height="15" fill="rgb(208,102,1)"/><text x="1141.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1138" y="356" width="4" height="15" fill="rgb(234,229,13)"/><text x="1141.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1142" y="340" width="4" height="15" fill="rgb(211,105,38)"/><text x="1145.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.69%)</title><rect x="1110" y="260" width="44" height="15" fill="rgb(240,185,6)"/><text x="1113.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.69%)</title><rect x="1110" y="276" width="44" height="15" fill="rgb(213,202,42)"/><text x="1113.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.68%)</title><rect x="1122" y="292" width="32" height="15" fill="rgb(219,99,37)"/><text x="1125.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.68%)</title><rect x="1122" y="308" width="32" height="15" fill="rgb(205,227,16)"/><text x="1125.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.68%)</title><rect x="1122" y="324" width="32" height="15" fill="rgb(238,143,35)"/><text x="1125.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="1146" y="340" width="8" height="15" fill="rgb(207,33,51)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1150" y="356" width="4" height="15" fill="rgb(226,89,41)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1150" y="372" width="4" height="15" fill="rgb(244,81,28)"/><text x="1153.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1150" y="388" width="4" height="15" fill="rgb(223,22,35)"/><text x="1153.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1150" y="404" width="4" height="15" fill="rgb(246,2,11)"/><text x="1153.00" y="414.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1154" y="260" width="4" height="15" fill="rgb(212,10,41)"/><text x="1157.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;void, (__gnu_cxx::_Lock_policy)2&gt;::reset&lt;void, void (*)(void*)&gt; [clone .localalias.62] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1154" y="276" width="4" height="15" fill="rgb(239,118,18)"/><text x="1157.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="1154" y="292" width="4" height="15" fill="rgb(249,103,17)"/><text x="1157.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1154" y="308" width="4" height="15" fill="rgb(206,183,21)"/><text x="1157.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="1158" y="292" width="4" height="15" fill="rgb(232,57,42)"/><text x="1161.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="1158" y="308" width="4" height="15" fill="rgb(210,94,20)"/><text x="1161.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="1158" y="260" width="8" height="15" fill="rgb(216,203,18)"/><text x="1161.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.67%)</title><rect x="1158" y="276" width="8" height="15" fill="rgb(239,213,43)"/><text x="1161.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1077) (1 samples, 0.34%)</title><rect x="1162" y="292" width="4" height="15" fill="rgb(249,27,6)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7f6bae4df0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1166" y="276" width="4" height="15" fill="rgb(230,101,35)"/><text x="1169.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (22 samples, 7.38%)</title><rect x="1087" y="164" width="87" height="15" fill="rgb(223,117,15)"/><text x="1090.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (22 samples, 7.38%)</title><rect x="1087" y="180" width="87" height="15" fill="rgb(240,27,11)"/><text x="1090.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:136) (20 samples, 6.71%)</title><rect x="1094" y="196" width="80" height="15" fill="rgb(250,205,26)"/><text x="1097.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 6.38%)</title><rect x="1098" y="212" width="76" height="15" fill="rgb(249,187,4)"/><text x="1101.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 6.38%)</title><rect x="1098" y="228" width="76" height="15" fill="rgb(205,71,38)"/><text x="1101.00" y="238.50">void pyb..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 6.38%)</title><rect x="1098" y="244" width="76" height="15" fill="rgb(246,9,25)"/><text x="1101.00" y="254.50">onnxrunt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="1166" y="260" width="8" height="15" fill="rgb(211,66,14)"/><text x="1169.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="276" width="4" height="15" fill="rgb(227,63,39)"/><text x="1173.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="292" width="4" height="15" fill="rgb(214,144,15)"/><text x="1173.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="308" width="4" height="15" fill="rgb(239,11,41)"/><text x="1173.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="324" width="4" height="15" fill="rgb(220,5,34)"/><text x="1173.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="340" width="4" height="15" fill="rgb(226,226,45)"/><text x="1173.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="356" width="4" height="15" fill="rgb(215,219,6)"/><text x="1173.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="372" width="4" height="15" fill="rgb(251,108,3)"/><text x="1173.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1170" y="388" width="4" height="15" fill="rgb(253,46,38)"/><text x="1173.00" y="398.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (30 samples, 10.07%)</title><rect x="1067" y="132" width="119" height="15" fill="rgb(253,129,13)"/><text x="1070.00" y="142.50">&lt;lambda&gt; (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (26 samples, 8.72%)</title><rect x="1083" y="148" width="103" height="15" fill="rgb(254,137,14)"/><text x="1086.00" y="158.50">run (mlprodi..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.01%)</title><rect x="1174" y="164" width="12" height="15" fill="rgb(217,213,45)"/><text x="1177.00" y="174.50"></text></g><g><title>all (298 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,221,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:52) (38 samples, 12.75%)</title><rect x="1039" y="52" width="151" height="15" fill="rgb(247,89,12)"/><text x="1042.00" y="62.50">&lt;module&gt; (bench_Log..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:51) (38 samples, 12.75%)</title><rect x="1039" y="68" width="151" height="15" fill="rgb(206,10,29)"/><text x="1042.00" y="78.50">profile_ort (bench_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:29) (38 samples, 12.75%)</title><rect x="1039" y="84" width="151" height="15" fill="rgb(220,36,34)"/><text x="1042.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:23) (34 samples, 11.41%)</title><rect x="1055" y="100" width="135" height="15" fill="rgb(229,121,3)"/><text x="1058.00" y="110.50">profile (bench_Lo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (33 samples, 11.07%)</title><rect x="1059" y="116" width="131" height="15" fill="rgb(220,44,0)"/><text x="1062.00" y="126.50">time_predict (ml..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(215,204,49)"/><text x="1189.00" y="142.50"></text></g></g></svg>