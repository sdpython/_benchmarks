<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5601) (1 samples, 0.19%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(218,165,16)"/><text x="13.00" y="398.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.19%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(224,110,12)"/><text x="13.00" y="414.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:2909) (1 samples, 0.19%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(212,122,2)"/><text x="13.00" y="430.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3201) (1 samples, 0.19%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(206,209,21)"/><text x="13.00" y="446.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.19%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(211,62,51)"/><text x="13.00" y="462.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c:2612) (1 samples, 0.19%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(249,36,47)"/><text x="13.00" y="478.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c:2862) (1 samples, 0.19%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(218,223,18)"/><text x="13.00" y="494.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.39%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(217,116,11)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.39%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(229,127,3)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.39%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(227,192,23)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.39%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(219,76,16)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (2 samples, 0.39%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(220,148,6)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.39%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(248,90,35)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (2 samples, 0.39%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(244,49,52)"/><text x="13.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (2 samples, 0.39%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(220,91,39)"/><text x="13.00" y="222.50"></text></g><g><title>__init__ (mtrand.c:3210) (2 samples, 0.39%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(227,80,49)"/><text x="13.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (2 samples, 0.39%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(240,57,12)"/><text x="13.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (2 samples, 0.39%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(206,226,8)"/><text x="13.00" y="270.50"></text></g><g><title>__init__ (mt19937.c:2381) (2 samples, 0.39%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(205,127,13)"/><text x="13.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c:2455) (2 samples, 0.39%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(241,49,39)"/><text x="13.00" y="302.50"></text></g><g><title>__init__ (bit_generator.c:6998) (2 samples, 0.39%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(234,15,22)"/><text x="13.00" y="318.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c:7160) (2 samples, 0.39%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(228,89,26)"/><text x="13.00" y="334.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c:14242) (2 samples, 0.39%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(218,126,48)"/><text x="13.00" y="350.50"></text></g><g><title>__init__ (bit_generator.c:4349) (2 samples, 0.39%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(223,152,0)"/><text x="13.00" y="366.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c:4691) (2 samples, 0.39%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(206,26,27)"/><text x="13.00" y="382.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5628) (1 samples, 0.19%)</title><rect x="12" y="388" width="2" height="15" fill="rgb(215,77,12)"/><text x="15.00" y="398.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.19%)</title><rect x="12" y="404" width="2" height="15" fill="rgb(239,98,42)"/><text x="15.00" y="414.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:2909) (1 samples, 0.19%)</title><rect x="12" y="420" width="2" height="15" fill="rgb(223,41,27)"/><text x="15.00" y="430.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3309) (1 samples, 0.19%)</title><rect x="12" y="436" width="2" height="15" fill="rgb(228,211,7)"/><text x="15.00" y="446.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.19%)</title><rect x="12" y="452" width="2" height="15" fill="rgb(252,138,49)"/><text x="15.00" y="462.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.19%)</title><rect x="12" y="468" width="2" height="15" fill="rgb(239,98,39)"/><text x="15.00" y="478.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="12" y="484" width="2" height="15" fill="rgb(217,192,43)"/><text x="15.00" y="494.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.19%)</title><rect x="12" y="500" width="2" height="15" fill="rgb(222,74,44)"/><text x="15.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:31) (3 samples, 0.58%)</title><rect x="10" y="52" width="6" height="15" fill="rgb(240,45,38)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:11) (3 samples, 0.58%)</title><rect x="10" y="68" width="6" height="15" fill="rgb(214,221,29)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (3 samples, 0.58%)</title><rect x="10" y="84" width="6" height="15" fill="rgb(226,149,43)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.19%)</title><rect x="14" y="100" width="2" height="15" fill="rgb(205,94,37)"/><text x="17.00" y="110.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.19%)</title><rect x="14" y="116" width="2" height="15" fill="rgb(240,163,18)"/><text x="17.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="14" y="132" width="2" height="15" fill="rgb(235,109,25)"/><text x="17.00" y="142.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="19" y="244" width="2" height="15" fill="rgb(213,213,39)"/><text x="22.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="23" y="260" width="3" height="15" fill="rgb(245,193,49)"/><text x="26.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (5 samples, 0.97%)</title><rect x="16" y="212" width="12" height="15" fill="rgb(214,159,39)"/><text x="19.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.97%)</title><rect x="16" y="228" width="12" height="15" fill="rgb(226,111,0)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.58%)</title><rect x="21" y="244" width="7" height="15" fill="rgb(254,143,41)"/><text x="24.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="26" y="260" width="2" height="15" fill="rgb(252,26,26)"/><text x="29.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.19%)</title><rect x="28" y="244" width="2" height="15" fill="rgb(247,111,3)"/><text x="31.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.19%)</title><rect x="28" y="260" width="2" height="15" fill="rgb(206,168,0)"/><text x="31.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.19%)</title><rect x="30" y="276" width="3" height="15" fill="rgb(215,21,10)"/><text x="33.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.39%)</title><rect x="30" y="244" width="5" height="15" fill="rgb(210,176,45)"/><text x="33.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (2 samples, 0.39%)</title><rect x="30" y="260" width="5" height="15" fill="rgb(244,226,30)"/><text x="33.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.19%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(253,156,7)"/><text x="36.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(225,136,14)"/><text x="38.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(236,225,36)"/><text x="38.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="35" y="276" width="2" height="15" fill="rgb(208,117,32)"/><text x="38.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="35" y="292" width="2" height="15" fill="rgb(212,64,50)"/><text x="38.00" y="302.50"></text></g><g><title>0x7fedc03f0df3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="35" y="308" width="2" height="15" fill="rgb(232,97,20)"/><text x="38.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.19%)</title><rect x="37" y="244" width="2" height="15" fill="rgb(249,185,4)"/><text x="40.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.39%)</title><rect x="39" y="244" width="5" height="15" fill="rgb(250,1,33)"/><text x="42.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.39%)</title><rect x="39" y="260" width="5" height="15" fill="rgb(242,95,20)"/><text x="42.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="42" y="276" width="2" height="15" fill="rgb(232,197,50)"/><text x="45.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (10 samples, 1.95%)</title><rect x="28" y="212" width="23" height="15" fill="rgb(234,61,0)"/><text x="31.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (10 samples, 1.95%)</title><rect x="28" y="228" width="23" height="15" fill="rgb(235,87,34)"/><text x="31.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.58%)</title><rect x="44" y="244" width="7" height="15" fill="rgb(224,99,9)"/><text x="47.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.39%)</title><rect x="46" y="260" width="5" height="15" fill="rgb(220,38,41)"/><text x="49.00" y="270.50"></text></g><g><title>0x7fed99d642df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="51" y="276" width="2" height="15" fill="rgb(254,191,26)"/><text x="54.00" y="286.50"></text></g><g><title>0x7fed99d48d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="51" y="292" width="2" height="15" fill="rgb(215,178,2)"/><text x="54.00" y="302.50"></text></g><g><title>0x7fed99d48666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="51" y="308" width="2" height="15" fill="rgb(238,33,13)"/><text x="54.00" y="318.50"></text></g><g><title>0x7fed99d3e10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="51" y="324" width="2" height="15" fill="rgb(215,135,1)"/><text x="54.00" y="334.50"></text></g><g><title>0x7fed99d55fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="51" y="244" width="5" height="15" fill="rgb(235,56,9)"/><text x="54.00" y="254.50"></text></g><g><title>0x7fed99d65405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="51" y="260" width="5" height="15" fill="rgb(244,126,48)"/><text x="54.00" y="270.50"></text></g><g><title>0x7fed99d64456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="53" y="276" width="3" height="15" fill="rgb(248,110,6)"/><text x="56.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (3 samples, 0.58%)</title><rect x="51" y="212" width="7" height="15" fill="rgb(240,103,17)"/><text x="54.00" y="222.50"></text></g><g><title>0x7fed99d56d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.58%)</title><rect x="51" y="228" width="7" height="15" fill="rgb(246,48,48)"/><text x="54.00" y="238.50"></text></g><g><title>0x7fed99d5618f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(242,77,46)"/><text x="59.00" y="254.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.19%)</title><rect x="58" y="228" width="2" height="15" fill="rgb(217,163,26)"/><text x="61.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.19%)</title><rect x="62" y="292" width="3" height="15" fill="rgb(237,16,20)"/><text x="65.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="62" y="308" width="3" height="15" fill="rgb(211,105,10)"/><text x="65.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="65" y="324" width="2" height="15" fill="rgb(211,212,4)"/><text x="68.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="65" y="340" width="2" height="15" fill="rgb(205,187,35)"/><text x="68.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="65" y="356" width="2" height="15" fill="rgb(212,180,30)"/><text x="68.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="65" y="372" width="2" height="15" fill="rgb(247,177,50)"/><text x="68.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3502) (1 samples, 0.19%)</title><rect x="65" y="388" width="2" height="15" fill="rgb(245,105,52)"/><text x="68.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (5 samples, 0.97%)</title><rect x="58" y="212" width="11" height="15" fill="rgb(251,66,7)"/><text x="61.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (4 samples, 0.78%)</title><rect x="60" y="228" width="9" height="15" fill="rgb(219,75,2)"/><text x="63.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (4 samples, 0.78%)</title><rect x="60" y="244" width="9" height="15" fill="rgb(241,121,35)"/><text x="63.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 0.58%)</title><rect x="62" y="260" width="7" height="15" fill="rgb(238,1,8)"/><text x="65.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.58%)</title><rect x="62" y="276" width="7" height="15" fill="rgb(224,158,26)"/><text x="65.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.39%)</title><rect x="65" y="292" width="4" height="15" fill="rgb(223,201,43)"/><text x="68.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.39%)</title><rect x="65" y="308" width="4" height="15" fill="rgb(248,95,23)"/><text x="68.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(252,184,37)"/><text x="70.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="67" y="340" width="2" height="15" fill="rgb(215,120,31)"/><text x="70.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1629) (1 samples, 0.19%)</title><rect x="67" y="356" width="2" height="15" fill="rgb(229,217,22)"/><text x="70.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:2065) (1 samples, 0.19%)</title><rect x="69" y="228" width="3" height="15" fill="rgb(247,119,41)"/><text x="72.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="69" y="244" width="3" height="15" fill="rgb(238,129,36)"/><text x="72.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="69" y="260" width="3" height="15" fill="rgb(240,24,41)"/><text x="72.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="69" y="276" width="3" height="15" fill="rgb(252,160,4)"/><text x="72.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="72" y="244" width="2" height="15" fill="rgb(210,154,5)"/><text x="75.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="72" y="260" width="2" height="15" fill="rgb(252,148,9)"/><text x="75.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.19%)</title><rect x="72" y="276" width="2" height="15" fill="rgb(223,124,40)"/><text x="75.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.19%)</title><rect x="72" y="292" width="2" height="15" fill="rgb(236,187,10)"/><text x="75.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1823) (1 samples, 0.19%)</title><rect x="72" y="308" width="2" height="15" fill="rgb(236,110,7)"/><text x="75.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.58%)</title><rect x="69" y="212" width="7" height="15" fill="rgb(232,41,17)"/><text x="72.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.39%)</title><rect x="72" y="228" width="4" height="15" fill="rgb(224,87,10)"/><text x="75.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="74" y="244" width="2" height="15" fill="rgb(225,12,21)"/><text x="77.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="74" y="260" width="2" height="15" fill="rgb(234,14,36)"/><text x="77.00" y="270.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (27 samples, 5.26%)</title><rect x="16" y="196" width="63" height="15" fill="rgb(210,110,47)"/><text x="19.00" y="206.50">_samme..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (1 samples, 0.19%)</title><rect x="76" y="212" width="3" height="15" fill="rgb(242,75,2)"/><text x="79.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="76" y="228" width="3" height="15" fill="rgb(206,131,30)"/><text x="79.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="76" y="244" width="3" height="15" fill="rgb(240,2,18)"/><text x="79.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.19%)</title><rect x="76" y="260" width="3" height="15" fill="rgb(218,151,35)"/><text x="79.00" y="270.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="83" y="212" width="2" height="15" fill="rgb(242,214,47)"/><text x="86.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.19%)</title><rect x="90" y="308" width="2" height="15" fill="rgb(241,201,18)"/><text x="93.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.19%)</title><rect x="90" y="324" width="2" height="15" fill="rgb(249,80,37)"/><text x="93.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="92" y="324" width="3" height="15" fill="rgb(238,15,31)"/><text x="95.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (2 samples, 0.39%)</title><rect x="92" y="308" width="5" height="15" fill="rgb(248,63,37)"/><text x="95.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.19%)</title><rect x="95" y="324" width="2" height="15" fill="rgb(226,109,1)"/><text x="98.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="95" y="340" width="2" height="15" fill="rgb(216,145,22)"/><text x="98.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="95" y="356" width="2" height="15" fill="rgb(214,178,0)"/><text x="98.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="95" y="372" width="2" height="15" fill="rgb(227,48,1)"/><text x="98.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.19%)</title><rect x="95" y="388" width="2" height="15" fill="rgb(212,108,13)"/><text x="98.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.19%)</title><rect x="95" y="404" width="2" height="15" fill="rgb(241,132,11)"/><text x="98.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.39%)</title><rect x="97" y="324" width="5" height="15" fill="rgb(237,2,4)"/><text x="100.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.39%)</title><rect x="97" y="340" width="5" height="15" fill="rgb(247,66,53)"/><text x="100.00" y="350.50"></text></g><g><title>0x7fedc0328e7e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="99" y="356" width="3" height="15" fill="rgb(251,31,40)"/><text x="102.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (3 samples, 0.58%)</title><rect x="97" y="308" width="7" height="15" fill="rgb(221,56,44)"/><text x="100.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.19%)</title><rect x="102" y="324" width="2" height="15" fill="rgb(245,90,51)"/><text x="105.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="102" y="340" width="2" height="15" fill="rgb(239,103,45)"/><text x="105.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="102" y="356" width="2" height="15" fill="rgb(231,56,14)"/><text x="105.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="102" y="372" width="2" height="15" fill="rgb(242,227,10)"/><text x="105.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.19%)</title><rect x="102" y="388" width="2" height="15" fill="rgb(252,134,49)"/><text x="105.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (13 samples, 2.53%)</title><rect x="79" y="196" width="29" height="15" fill="rgb(248,115,49)"/><text x="82.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (10 samples, 1.95%)</title><rect x="85" y="212" width="23" height="15" fill="rgb(231,173,21)"/><text x="88.00" y="222.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.95%)</title><rect x="85" y="228" width="23" height="15" fill="rgb(206,204,33)"/><text x="88.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (10 samples, 1.95%)</title><rect x="85" y="244" width="23" height="15" fill="rgb(243,2,50)"/><text x="88.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (9 samples, 1.75%)</title><rect x="88" y="260" width="20" height="15" fill="rgb(230,9,2)"/><text x="91.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (9 samples, 1.75%)</title><rect x="88" y="276" width="20" height="15" fill="rgb(239,188,33)"/><text x="91.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 1.75%)</title><rect x="88" y="292" width="20" height="15" fill="rgb(214,106,39)"/><text x="91.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (2 samples, 0.39%)</title><rect x="104" y="308" width="4" height="15" fill="rgb(210,49,33)"/><text x="107.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.19%)</title><rect x="106" y="324" width="2" height="15" fill="rgb(231,177,7)"/><text x="109.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="106" y="340" width="2" height="15" fill="rgb(234,38,46)"/><text x="109.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="106" y="356" width="2" height="15" fill="rgb(230,19,30)"/><text x="109.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.19%)</title><rect x="106" y="372" width="2" height="15" fill="rgb(254,152,28)"/><text x="109.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="111" y="212" width="2" height="15" fill="rgb(216,56,0)"/><text x="114.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="111" y="228" width="2" height="15" fill="rgb(208,196,34)"/><text x="114.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="111" y="244" width="2" height="15" fill="rgb(236,74,50)"/><text x="114.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="113" y="228" width="2" height="15" fill="rgb(251,142,10)"/><text x="116.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="113" y="244" width="2" height="15" fill="rgb(222,165,25)"/><text x="116.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:34) (1 samples, 0.19%)</title><rect x="113" y="260" width="2" height="15" fill="rgb(217,60,4)"/><text x="116.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.39%)</title><rect x="113" y="212" width="5" height="15" fill="rgb(249,131,18)"/><text x="116.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="115" y="228" width="3" height="15" fill="rgb(207,17,42)"/><text x="118.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="115" y="244" width="3" height="15" fill="rgb(245,223,28)"/><text x="118.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.19%)</title><rect x="115" y="260" width="3" height="15" fill="rgb(218,20,16)"/><text x="118.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.19%)</title><rect x="115" y="276" width="3" height="15" fill="rgb(237,109,50)"/><text x="118.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.19%)</title><rect x="115" y="292" width="3" height="15" fill="rgb(248,173,20)"/><text x="118.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="115" y="308" width="3" height="15" fill="rgb(213,44,16)"/><text x="118.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="115" y="324" width="3" height="15" fill="rgb(205,20,28)"/><text x="118.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.19%)</title><rect x="115" y="340" width="3" height="15" fill="rgb(239,221,20)"/><text x="118.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.19%)</title><rect x="118" y="212" width="2" height="15" fill="rgb(209,92,13)"/><text x="121.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="118" y="228" width="2" height="15" fill="rgb(209,163,54)"/><text x="121.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="118" y="244" width="2" height="15" fill="rgb(251,194,26)"/><text x="121.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="118" y="260" width="2" height="15" fill="rgb(245,59,32)"/><text x="121.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="118" y="276" width="2" height="15" fill="rgb(215,136,38)"/><text x="121.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="118" y="292" width="2" height="15" fill="rgb(213,49,13)"/><text x="121.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.19%)</title><rect x="118" y="308" width="2" height="15" fill="rgb(220,175,32)"/><text x="121.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="122" y="260" width="3" height="15" fill="rgb(212,23,50)"/><text x="125.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="122" y="276" width="3" height="15" fill="rgb(208,97,9)"/><text x="125.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="122" y="292" width="3" height="15" fill="rgb(231,206,26)"/><text x="125.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="122" y="308" width="3" height="15" fill="rgb(222,131,20)"/><text x="125.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="122" y="324" width="3" height="15" fill="rgb(252,185,21)"/><text x="125.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="122" y="340" width="3" height="15" fill="rgb(254,3,11)"/><text x="125.00" y="350.50"></text></g><g><title>0x7fedc0328e50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="122" y="356" width="3" height="15" fill="rgb(220,188,29)"/><text x="125.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (48 samples, 9.36%)</title><rect x="16" y="180" width="111" height="15" fill="rgb(228,82,40)"/><text x="19.00" y="190.50">&lt;genexpr&gt; (sk..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (8 samples, 1.56%)</title><rect x="108" y="196" width="19" height="15" fill="rgb(206,122,52)"/><text x="111.00" y="206.50"></text></g><g><title>array_sum (methods.c:2215) (3 samples, 0.58%)</title><rect x="120" y="212" width="7" height="15" fill="rgb(234,87,47)"/><text x="123.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (3 samples, 0.58%)</title><rect x="120" y="228" width="7" height="15" fill="rgb(214,133,11)"/><text x="123.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.39%)</title><rect x="122" y="244" width="5" height="15" fill="rgb(216,56,26)"/><text x="125.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="125" y="260" width="2" height="15" fill="rgb(205,168,18)"/><text x="128.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4698) (1 samples, 0.19%)</title><rect x="125" y="276" width="2" height="15" fill="rgb(237,114,27)"/><text x="128.00" y="286.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.19%)</title><rect x="127" y="180" width="2" height="15" fill="rgb(220,126,24)"/><text x="130.00" y="190.50"></text></g><g><title>try_binary_elide (temp_elide.c:341) (1 samples, 0.19%)</title><rect x="127" y="196" width="2" height="15" fill="rgb(213,95,51)"/><text x="130.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c:293) (1 samples, 0.19%)</title><rect x="127" y="212" width="2" height="15" fill="rgb(233,186,0)"/><text x="130.00" y="222.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.19%)</title><rect x="127" y="228" width="2" height="15" fill="rgb(214,210,43)"/><text x="130.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="129" y="212" width="2" height="15" fill="rgb(248,24,49)"/><text x="132.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="129" y="228" width="2" height="15" fill="rgb(250,186,51)"/><text x="132.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.19%)</title><rect x="129" y="244" width="2" height="15" fill="rgb(241,174,42)"/><text x="132.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.39%)</title><rect x="129" y="196" width="5" height="15" fill="rgb(250,113,33)"/><text x="132.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="131" y="212" width="3" height="15" fill="rgb(224,138,45)"/><text x="134.00" y="222.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.19%)</title><rect x="131" y="228" width="3" height="15" fill="rgb(213,46,3)"/><text x="134.00" y="238.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:18) (52 samples, 10.14%)</title><rect x="16" y="100" width="120" height="15" fill="rgb(245,93,50)"/><text x="19.00" y="110.50">profile (bench..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (52 samples, 10.14%)</title><rect x="16" y="116" width="120" height="15" fill="rgb(212,218,1)"/><text x="19.00" y="126.50">time_predict (..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (52 samples, 10.14%)</title><rect x="16" y="132" width="120" height="15" fill="rgb(227,209,41)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlpr..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (52 samples, 10.14%)</title><rect x="16" y="148" width="120" height="15" fill="rgb(208,52,50)"/><text x="19.00" y="158.50">predict_proba ..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (52 samples, 10.14%)</title><rect x="16" y="164" width="120" height="15" fill="rgb(215,200,46)"/><text x="19.00" y="174.50">decision_funct..</text></g><g><title>array_add (number.c:330) (3 samples, 0.58%)</title><rect x="129" y="180" width="7" height="15" fill="rgb(246,13,25)"/><text x="132.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4758) (1 samples, 0.19%)</title><rect x="134" y="196" width="2" height="15" fill="rgb(209,118,36)"/><text x="137.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="136" y="180" width="2" height="15" fill="rgb(210,97,50)"/><text x="139.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:800) (2 samples, 0.39%)</title><rect x="136" y="148" width="5" height="15" fill="rgb(247,177,16)"/><text x="139.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.39%)</title><rect x="136" y="164" width="5" height="15" fill="rgb(205,221,5)"/><text x="139.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.19%)</title><rect x="138" y="180" width="3" height="15" fill="rgb(243,120,48)"/><text x="141.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="138" y="196" width="3" height="15" fill="rgb(222,207,5)"/><text x="141.00" y="206.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.19%)</title><rect x="141" y="164" width="2" height="15" fill="rgb(247,221,27)"/><text x="144.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.19%)</title><rect x="141" y="180" width="2" height="15" fill="rgb(247,197,3)"/><text x="144.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="141" y="196" width="2" height="15" fill="rgb(218,19,1)"/><text x="144.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="141" y="212" width="2" height="15" fill="rgb(223,218,53)"/><text x="144.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1623) (1 samples, 0.19%)</title><rect x="141" y="228" width="2" height="15" fill="rgb(219,16,35)"/><text x="144.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.39%)</title><rect x="148" y="228" width="4" height="15" fill="rgb(224,125,14)"/><text x="151.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.39%)</title><rect x="148" y="244" width="4" height="15" fill="rgb(236,77,1)"/><text x="151.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.39%)</title><rect x="152" y="228" width="5" height="15" fill="rgb(245,175,30)"/><text x="155.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.39%)</title><rect x="161" y="244" width="5" height="15" fill="rgb(205,101,11)"/><text x="164.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="175" y="260" width="2" height="15" fill="rgb(247,215,17)"/><text x="178.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (15 samples, 2.92%)</title><rect x="145" y="212" width="35" height="15" fill="rgb(210,60,29)"/><text x="148.00" y="222.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 1.95%)</title><rect x="157" y="228" width="23" height="15" fill="rgb(228,38,22)"/><text x="160.00" y="238.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.17%)</title><rect x="166" y="244" width="14" height="15" fill="rgb(233,81,2)"/><text x="169.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="177" y="260" width="3" height="15" fill="rgb(222,217,53)"/><text x="180.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.19%)</title><rect x="180" y="244" width="2" height="15" fill="rgb(249,149,28)"/><text x="183.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.39%)</title><rect x="182" y="244" width="5" height="15" fill="rgb(243,111,7)"/><text x="185.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="184" y="260" width="3" height="15" fill="rgb(241,212,50)"/><text x="187.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.19%)</title><rect x="191" y="260" width="3" height="15" fill="rgb(212,221,20)"/><text x="194.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 0.58%)</title><rect x="194" y="260" width="6" height="15" fill="rgb(254,38,1)"/><text x="197.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 1.36%)</title><rect x="187" y="244" width="16" height="15" fill="rgb(213,215,31)"/><text x="190.00" y="254.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.19%)</title><rect x="200" y="260" width="3" height="15" fill="rgb(223,131,44)"/><text x="203.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.19%)</title><rect x="203" y="260" width="2" height="15" fill="rgb(254,183,10)"/><text x="206.00" y="270.50"></text></g><g><title>0x7fedc033315e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="207" y="276" width="3" height="15" fill="rgb(209,44,45)"/><text x="210.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 1.36%)</title><rect x="203" y="244" width="16" height="15" fill="rgb(247,183,22)"/><text x="206.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (6 samples, 1.17%)</title><rect x="205" y="260" width="14" height="15" fill="rgb(216,70,10)"/><text x="208.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 0.78%)</title><rect x="210" y="276" width="9" height="15" fill="rgb(212,221,49)"/><text x="213.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.19%)</title><rect x="219" y="244" width="2" height="15" fill="rgb(238,76,16)"/><text x="222.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="221" y="244" width="2" height="15" fill="rgb(205,223,42)"/><text x="224.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="221" y="260" width="2" height="15" fill="rgb(223,140,9)"/><text x="224.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="221" y="276" width="2" height="15" fill="rgb(233,20,49)"/><text x="224.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.19%)</title><rect x="223" y="244" width="3" height="15" fill="rgb(231,225,49)"/><text x="226.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.19%)</title><rect x="223" y="260" width="3" height="15" fill="rgb(242,211,24)"/><text x="226.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.19%)</title><rect x="226" y="260" width="2" height="15" fill="rgb(244,224,15)"/><text x="229.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.39%)</title><rect x="226" y="244" width="4" height="15" fill="rgb(239,147,20)"/><text x="229.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.19%)</title><rect x="228" y="260" width="2" height="15" fill="rgb(237,96,6)"/><text x="231.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.19%)</title><rect x="230" y="244" width="3" height="15" fill="rgb(219,204,10)"/><text x="233.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.19%)</title><rect x="233" y="244" width="2" height="15" fill="rgb(218,151,39)"/><text x="236.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (9 samples, 1.75%)</title><rect x="235" y="260" width="21" height="15" fill="rgb(234,165,50)"/><text x="238.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.78%)</title><rect x="246" y="276" width="10" height="15" fill="rgb(214,58,8)"/><text x="249.00" y="286.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="253" y="292" width="3" height="15" fill="rgb(247,7,45)"/><text x="256.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (11 samples, 2.14%)</title><rect x="235" y="244" width="25" height="15" fill="rgb(208,205,24)"/><text x="238.00" y="254.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.39%)</title><rect x="256" y="260" width="4" height="15" fill="rgb(213,135,52)"/><text x="259.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py:26) (2 samples, 0.39%)</title><rect x="256" y="276" width="4" height="15" fill="rgb(253,179,19)"/><text x="259.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.19%)</title><rect x="260" y="244" width="3" height="15" fill="rgb(240,75,40)"/><text x="263.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.58%)</title><rect x="265" y="260" width="7" height="15" fill="rgb(225,11,18)"/><text x="268.00" y="270.50"></text></g><g><title>0x7fedc0328b60 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="269" y="276" width="3" height="15" fill="rgb(222,199,5)"/><text x="272.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.19%)</title><rect x="272" y="260" width="2" height="15" fill="rgb(248,134,39)"/><text x="275.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.19%)</title><rect x="272" y="276" width="2" height="15" fill="rgb(245,45,53)"/><text x="275.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.39%)</title><rect x="274" y="260" width="5" height="15" fill="rgb(244,99,51)"/><text x="277.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.39%)</title><rect x="274" y="276" width="5" height="15" fill="rgb(250,197,41)"/><text x="277.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (8 samples, 1.56%)</title><rect x="263" y="244" width="18" height="15" fill="rgb(221,71,8)"/><text x="266.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.19%)</title><rect x="279" y="260" width="2" height="15" fill="rgb(228,224,20)"/><text x="282.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.19%)</title><rect x="279" y="276" width="2" height="15" fill="rgb(235,203,23)"/><text x="282.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (45 samples, 8.77%)</title><rect x="180" y="228" width="103" height="15" fill="rgb(220,198,15)"/><text x="183.00" y="238.50">_validate_X_..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.19%)</title><rect x="281" y="244" width="2" height="15" fill="rgb(211,57,27)"/><text x="284.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.19%)</title><rect x="283" y="228" width="3" height="15" fill="rgb(216,197,49)"/><text x="286.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="283" y="244" width="3" height="15" fill="rgb(221,78,49)"/><text x="286.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (47 samples, 9.16%)</title><rect x="180" y="212" width="108" height="15" fill="rgb(223,161,1)"/><text x="183.00" y="222.50">predict_proba..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.19%)</title><rect x="286" y="228" width="2" height="15" fill="rgb(224,98,44)"/><text x="289.00" y="238.50"></text></g><g><title>0x7fed99d65390 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="288" y="260" width="2" height="15" fill="rgb(211,98,33)"/><text x="291.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:645) (1 samples, 0.19%)</title><rect x="290" y="356" width="2" height="15" fill="rgb(219,204,27)"/><text x="293.00" y="366.50"></text></g><g><title>0x7fed99d48d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="290" y="292" width="5" height="15" fill="rgb(253,85,54)"/><text x="293.00" y="302.50"></text></g><g><title>0x7fed99d48666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="290" y="308" width="5" height="15" fill="rgb(249,168,21)"/><text x="293.00" y="318.50"></text></g><g><title>0x7fed99d3e2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="290" y="324" width="5" height="15" fill="rgb(213,89,23)"/><text x="293.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.39%)</title><rect x="290" y="340" width="5" height="15" fill="rgb(213,41,43)"/><text x="293.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.19%)</title><rect x="292" y="356" width="3" height="15" fill="rgb(241,10,20)"/><text x="295.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.19%)</title><rect x="292" y="372" width="3" height="15" fill="rgb(254,175,44)"/><text x="295.00" y="382.50"></text></g><g><title>0x7fed99d642df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.58%)</title><rect x="290" y="276" width="7" height="15" fill="rgb(217,69,26)"/><text x="293.00" y="286.50"></text></g><g><title>0x7fed99d48efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="295" y="292" width="2" height="15" fill="rgb(212,12,19)"/><text x="298.00" y="302.50"></text></g><g><title>0x7fed99d392a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="295" y="308" width="2" height="15" fill="rgb(233,123,41)"/><text x="298.00" y="318.50"></text></g><g><title>0x7fed99d64511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="297" y="276" width="2" height="15" fill="rgb(226,69,28)"/><text x="300.00" y="286.50"></text></g><g><title>0x7fedc0328757 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="299" y="308" width="3" height="15" fill="rgb(233,4,3)"/><text x="302.00" y="318.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.39%)</title><rect x="299" y="292" width="5" height="15" fill="rgb(226,30,23)"/><text x="302.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.19%)</title><rect x="302" y="308" width="2" height="15" fill="rgb(216,106,23)"/><text x="305.00" y="318.50"></text></g><g><title>0x7fed99d64592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.58%)</title><rect x="299" y="276" width="7" height="15" fill="rgb(242,206,6)"/><text x="302.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.19%)</title><rect x="304" y="292" width="2" height="15" fill="rgb(225,33,1)"/><text x="307.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="304" y="308" width="2" height="15" fill="rgb(247,202,7)"/><text x="307.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.19%)</title><rect x="304" y="324" width="2" height="15" fill="rgb(231,99,6)"/><text x="307.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.19%)</title><rect x="304" y="340" width="2" height="15" fill="rgb(211,60,10)"/><text x="307.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:132) (1 samples, 0.19%)</title><rect x="304" y="356" width="2" height="15" fill="rgb(225,205,29)"/><text x="307.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.19%)</title><rect x="304" y="372" width="2" height="15" fill="rgb(252,96,30)"/><text x="307.00" y="382.50"></text></g><g><title>0x7fed99d64644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="306" y="276" width="3" height="15" fill="rgb(219,45,40)"/><text x="309.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="306" y="292" width="3" height="15" fill="rgb(235,15,23)"/><text x="309.00" y="302.50"></text></g><g><title>0x7fed99d65405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.75%)</title><rect x="290" y="260" width="21" height="15" fill="rgb(211,223,13)"/><text x="293.00" y="270.50"></text></g><g><title>0x7fed99d64c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="309" y="276" width="2" height="15" fill="rgb(217,38,15)"/><text x="312.00" y="286.50"></text></g><g><title>0x7fed99d3c529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="309" y="292" width="2" height="15" fill="rgb(241,189,53)"/><text x="312.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.19%)</title><rect x="309" y="308" width="2" height="15" fill="rgb(238,26,30)"/><text x="312.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:690) (1 samples, 0.19%)</title><rect x="309" y="324" width="2" height="15" fill="rgb(210,168,19)"/><text x="312.00" y="334.50"></text></g><g><title>0x7fed99d55fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.14%)</title><rect x="288" y="244" width="25" height="15" fill="rgb(208,171,35)"/><text x="291.00" y="254.50">0..</text></g><g><title>0x7fed99d65540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="311" y="260" width="2" height="15" fill="rgb(221,138,45)"/><text x="314.00" y="270.50"></text></g><g><title>0x7fed99d3a2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="311" y="276" width="2" height="15" fill="rgb(254,221,16)"/><text x="314.00" y="286.50"></text></g><g><title>0x7fed99d394dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="311" y="292" width="2" height="15" fill="rgb(238,83,16)"/><text x="314.00" y="302.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.19%)</title><rect x="313" y="276" width="2" height="15" fill="rgb(218,113,31)"/><text x="316.00" y="286.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.39%)</title><rect x="313" y="260" width="5" height="15" fill="rgb(214,48,32)"/><text x="316.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="315" y="276" width="3" height="15" fill="rgb(211,213,37)"/><text x="318.00" y="286.50"></text></g><g><title>0x7fedc03f0d2f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="315" y="292" width="3" height="15" fill="rgb(212,97,21)"/><text x="318.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.19%)</title><rect x="318" y="276" width="2" height="15" fill="rgb(253,96,12)"/><text x="321.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.19%)</title><rect x="318" y="292" width="2" height="15" fill="rgb(212,209,31)"/><text x="321.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.19%)</title><rect x="318" y="308" width="2" height="15" fill="rgb(216,82,0)"/><text x="321.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.19%)</title><rect x="318" y="324" width="2" height="15" fill="rgb(254,54,21)"/><text x="321.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.19%)</title><rect x="318" y="340" width="2" height="15" fill="rgb(240,187,36)"/><text x="321.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:975) (1 samples, 0.19%)</title><rect x="318" y="356" width="2" height="15" fill="rgb(227,193,46)"/><text x="321.00" y="366.50"></text></g><g><title>0x7fed99d5605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.78%)</title><rect x="313" y="244" width="9" height="15" fill="rgb(222,68,32)"/><text x="316.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.39%)</title><rect x="318" y="260" width="4" height="15" fill="rgb(226,51,3)"/><text x="321.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:80) (1 samples, 0.19%)</title><rect x="320" y="276" width="2" height="15" fill="rgb(226,144,33)"/><text x="323.00" y="286.50"></text></g><g><title>0x7fed99d5618f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="322" y="244" width="3" height="15" fill="rgb(212,148,42)"/><text x="325.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (17 samples, 3.31%)</title><rect x="288" y="212" width="39" height="15" fill="rgb(226,23,45)"/><text x="291.00" y="222.50">pre..</text></g><g><title>0x7fed99d56d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.31%)</title><rect x="288" y="228" width="39" height="15" fill="rgb(243,49,52)"/><text x="291.00" y="238.50">0x7..</text></g><g><title>0x7fed99d56328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="325" y="244" width="2" height="15" fill="rgb(223,219,35)"/><text x="328.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.19%)</title><rect x="325" y="260" width="2" height="15" fill="rgb(248,27,16)"/><text x="328.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="325" y="276" width="2" height="15" fill="rgb(218,63,21)"/><text x="328.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:284) (1 samples, 0.19%)</title><rect x="325" y="292" width="2" height="15" fill="rgb(234,26,53)"/><text x="328.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.19%)</title><rect x="332" y="228" width="2" height="15" fill="rgb(212,126,35)"/><text x="335.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:834) (1 samples, 0.19%)</title><rect x="332" y="244" width="2" height="15" fill="rgb(218,55,12)"/><text x="335.00" y="254.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.19%)</title><rect x="334" y="228" width="2" height="15" fill="rgb(249,71,5)"/><text x="337.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="338" y="356" width="3" height="15" fill="rgb(230,90,35)"/><text x="341.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (5 samples, 0.97%)</title><rect x="338" y="276" width="12" height="15" fill="rgb(253,73,19)"/><text x="341.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (5 samples, 0.97%)</title><rect x="338" y="292" width="12" height="15" fill="rgb(208,216,18)"/><text x="341.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (5 samples, 0.97%)</title><rect x="338" y="308" width="12" height="15" fill="rgb(227,39,9)"/><text x="341.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (5 samples, 0.97%)</title><rect x="338" y="324" width="12" height="15" fill="rgb(247,125,47)"/><text x="341.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (5 samples, 0.97%)</title><rect x="338" y="340" width="12" height="15" fill="rgb(226,152,25)"/><text x="341.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (4 samples, 0.78%)</title><rect x="341" y="356" width="9" height="15" fill="rgb(234,112,28)"/><text x="344.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.19%)</title><rect x="350" y="292" width="2" height="15" fill="rgb(233,154,10)"/><text x="353.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="352" y="324" width="3" height="15" fill="rgb(248,25,20)"/><text x="355.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="352" y="340" width="3" height="15" fill="rgb(238,119,43)"/><text x="355.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="355" y="324" width="2" height="15" fill="rgb(250,222,44)"/><text x="358.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.19%)</title><rect x="355" y="340" width="2" height="15" fill="rgb(226,201,36)"/><text x="358.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="357" y="340" width="2" height="15" fill="rgb(207,45,30)"/><text x="360.00" y="350.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.19%)</title><rect x="357" y="356" width="2" height="15" fill="rgb(242,206,31)"/><text x="360.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="359" y="340" width="2" height="15" fill="rgb(218,88,24)"/><text x="362.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.19%)</title><rect x="359" y="356" width="2" height="15" fill="rgb(247,214,46)"/><text x="362.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.19%)</title><rect x="361" y="340" width="3" height="15" fill="rgb(217,125,26)"/><text x="364.00" y="350.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2035) (1 samples, 0.19%)</title><rect x="361" y="356" width="3" height="15" fill="rgb(236,200,42)"/><text x="364.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 0.78%)</title><rect x="357" y="324" width="9" height="15" fill="rgb(248,16,15)"/><text x="360.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="364" y="340" width="2" height="15" fill="rgb(251,191,32)"/><text x="367.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2143) (1 samples, 0.19%)</title><rect x="364" y="356" width="2" height="15" fill="rgb(251,86,39)"/><text x="367.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.19%)</title><rect x="366" y="324" width="2" height="15" fill="rgb(239,127,21)"/><text x="369.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.19%)</title><rect x="366" y="340" width="2" height="15" fill="rgb(227,222,32)"/><text x="369.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.19%)</title><rect x="368" y="340" width="3" height="15" fill="rgb(217,163,3)"/><text x="371.00" y="350.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.19%)</title><rect x="368" y="356" width="3" height="15" fill="rgb(254,35,33)"/><text x="371.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.39%)</title><rect x="368" y="324" width="5" height="15" fill="rgb(221,126,18)"/><text x="371.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="371" y="340" width="2" height="15" fill="rgb(242,15,14)"/><text x="374.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.19%)</title><rect x="371" y="356" width="2" height="15" fill="rgb(229,92,7)"/><text x="374.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1969) (1 samples, 0.19%)</title><rect x="371" y="372" width="2" height="15" fill="rgb(228,221,12)"/><text x="374.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (21 samples, 4.09%)</title><rect x="327" y="212" width="48" height="15" fill="rgb(206,123,9)"/><text x="330.00" y="222.50">pred..</text></g><g><title>array_sum (methods.c:2215) (17 samples, 3.31%)</title><rect x="336" y="228" width="39" height="15" fill="rgb(214,64,29)"/><text x="339.00" y="238.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 3.31%)</title><rect x="336" y="244" width="39" height="15" fill="rgb(208,94,1)"/><text x="339.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (16 samples, 3.12%)</title><rect x="338" y="260" width="37" height="15" fill="rgb(249,191,2)"/><text x="341.00" y="270.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.14%)</title><rect x="350" y="276" width="25" height="15" fill="rgb(238,49,2)"/><text x="353.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.95%)</title><rect x="352" y="292" width="23" height="15" fill="rgb(248,157,43)"/><text x="355.00" y="302.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.95%)</title><rect x="352" y="308" width="23" height="15" fill="rgb(222,51,29)"/><text x="355.00" y="318.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.19%)</title><rect x="373" y="324" width="2" height="15" fill="rgb(244,158,21)"/><text x="376.00" y="334.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c:1054) (1 samples, 0.19%)</title><rect x="373" y="340" width="2" height="15" fill="rgb(210,14,17)"/><text x="376.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.19%)</title><rect x="375" y="228" width="3" height="15" fill="rgb(222,75,48)"/><text x="378.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.19%)</title><rect x="375" y="244" width="3" height="15" fill="rgb(211,208,30)"/><text x="378.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.19%)</title><rect x="378" y="244" width="2" height="15" fill="rgb(251,64,29)"/><text x="381.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.19%)</title><rect x="378" y="260" width="2" height="15" fill="rgb(238,182,52)"/><text x="381.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.19%)</title><rect x="378" y="276" width="2" height="15" fill="rgb(213,180,31)"/><text x="381.00" y="286.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="378" y="292" width="2" height="15" fill="rgb(209,42,26)"/><text x="381.00" y="302.50"></text></g><g><title>0x7fedc02ca9f1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="378" y="308" width="2" height="15" fill="rgb(240,143,9)"/><text x="381.00" y="318.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.39%)</title><rect x="378" y="228" width="4" height="15" fill="rgb(249,153,49)"/><text x="381.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1209) (1 samples, 0.19%)</title><rect x="380" y="244" width="2" height="15" fill="rgb(220,163,4)"/><text x="383.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.19%)</title><rect x="382" y="276" width="2" height="15" fill="rgb(205,47,51)"/><text x="385.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.19%)</title><rect x="382" y="292" width="2" height="15" fill="rgb(248,195,15)"/><text x="385.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.19%)</title><rect x="382" y="308" width="2" height="15" fill="rgb(247,21,36)"/><text x="385.00" y="318.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src:1924) (1 samples, 0.19%)</title><rect x="382" y="324" width="2" height="15" fill="rgb(229,88,6)"/><text x="385.00" y="334.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.19%)</title><rect x="382" y="340" width="2" height="15" fill="rgb(205,142,15)"/><text x="385.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.39%)</title><rect x="382" y="244" width="5" height="15" fill="rgb(250,25,37)"/><text x="385.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.39%)</title><rect x="382" y="260" width="5" height="15" fill="rgb(248,40,7)"/><text x="385.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.19%)</title><rect x="384" y="276" width="3" height="15" fill="rgb(227,200,47)"/><text x="387.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="384" y="292" width="3" height="15" fill="rgb(233,58,31)"/><text x="387.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.19%)</title><rect x="384" y="308" width="3" height="15" fill="rgb(218,177,5)"/><text x="387.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="387" y="292" width="2" height="15" fill="rgb(253,31,45)"/><text x="390.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.39%)</title><rect x="387" y="260" width="4" height="15" fill="rgb(233,143,1)"/><text x="390.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.39%)</title><rect x="387" y="276" width="4" height="15" fill="rgb(208,103,23)"/><text x="390.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="389" y="292" width="2" height="15" fill="rgb(220,115,14)"/><text x="392.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 1.56%)</title><rect x="375" y="212" width="19" height="15" fill="rgb(229,164,37)"/><text x="378.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 0.97%)</title><rect x="382" y="228" width="12" height="15" fill="rgb(235,134,15)"/><text x="385.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (3 samples, 0.58%)</title><rect x="387" y="244" width="7" height="15" fill="rgb(235,5,54)"/><text x="390.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="391" y="260" width="3" height="15" fill="rgb(220,38,13)"/><text x="394.00" y="270.50"></text></g><g><title>array_inplace_true_divide (number.c:842) (1 samples, 0.19%)</title><rect x="396" y="228" width="2" height="15" fill="rgb(239,43,40)"/><text x="399.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.19%)</title><rect x="398" y="228" width="3" height="15" fill="rgb(230,60,10)"/><text x="401.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="401" y="228" width="2" height="15" fill="rgb(207,135,32)"/><text x="404.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="401" y="244" width="2" height="15" fill="rgb(251,85,8)"/><text x="404.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="401" y="260" width="2" height="15" fill="rgb(230,101,7)"/><text x="404.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.19%)</title><rect x="401" y="276" width="2" height="15" fill="rgb(214,204,50)"/><text x="404.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="403" y="244" width="2" height="15" fill="rgb(212,229,36)"/><text x="406.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="403" y="260" width="2" height="15" fill="rgb(235,47,45)"/><text x="406.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.19%)</title><rect x="403" y="276" width="2" height="15" fill="rgb(242,17,9)"/><text x="406.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.19%)</title><rect x="403" y="292" width="2" height="15" fill="rgb(245,44,43)"/><text x="406.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="403" y="308" width="2" height="15" fill="rgb(228,28,1)"/><text x="406.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.19%)</title><rect x="403" y="324" width="2" height="15" fill="rgb(237,56,33)"/><text x="406.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="405" y="292" width="2" height="15" fill="rgb(216,85,18)"/><text x="408.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="405" y="308" width="2" height="15" fill="rgb(237,216,17)"/><text x="408.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="407" y="292" width="3" height="15" fill="rgb(223,173,43)"/><text x="410.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1177) (1 samples, 0.19%)</title><rect x="407" y="308" width="3" height="15" fill="rgb(215,229,31)"/><text x="410.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.58%)</title><rect x="405" y="244" width="7" height="15" fill="rgb(230,104,39)"/><text x="408.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.58%)</title><rect x="405" y="260" width="7" height="15" fill="rgb(224,136,7)"/><text x="408.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.58%)</title><rect x="405" y="276" width="7" height="15" fill="rgb(248,105,24)"/><text x="408.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.19%)</title><rect x="410" y="292" width="2" height="15" fill="rgb(248,9,33)"/><text x="413.00" y="302.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2160) (1 samples, 0.19%)</title><rect x="410" y="308" width="2" height="15" fill="rgb(251,188,10)"/><text x="413.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (117 samples, 22.81%)</title><rect x="145" y="196" width="269" height="15" fill="rgb(225,162,39)"/><text x="148.00" y="206.50">_samme_proba (sklearn/ensemble/_wei..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (9 samples, 1.75%)</title><rect x="394" y="212" width="20" height="15" fill="rgb(247,54,49)"/><text x="397.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.97%)</title><rect x="403" y="228" width="11" height="15" fill="rgb(248,221,31)"/><text x="406.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.19%)</title><rect x="412" y="244" width="2" height="15" fill="rgb(246,119,10)"/><text x="415.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.19%)</title><rect x="426" y="212" width="2" height="15" fill="rgb(235,53,35)"/><text x="429.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.19%)</title><rect x="426" y="228" width="2" height="15" fill="rgb(212,138,23)"/><text x="429.00" y="238.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.19%)</title><rect x="428" y="212" width="2" height="15" fill="rgb(214,128,51)"/><text x="431.00" y="222.50"></text></g><g><title>PyArray_DescrHash (hashdescr.c:303) (1 samples, 0.19%)</title><rect x="428" y="228" width="2" height="15" fill="rgb(213,173,17)"/><text x="431.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="430" y="228" width="3" height="15" fill="rgb(252,181,37)"/><text x="433.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="430" y="244" width="3" height="15" fill="rgb(235,147,17)"/><text x="433.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="430" y="260" width="3" height="15" fill="rgb(246,184,39)"/><text x="433.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="430" y="276" width="3" height="15" fill="rgb(210,160,22)"/><text x="433.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="430" y="292" width="3" height="15" fill="rgb(208,50,26)"/><text x="433.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (2 samples, 0.39%)</title><rect x="433" y="260" width="4" height="15" fill="rgb(232,155,53)"/><text x="436.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.39%)</title><rect x="442" y="324" width="5" height="15" fill="rgb(222,182,9)"/><text x="445.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.39%)</title><rect x="442" y="340" width="5" height="15" fill="rgb(253,84,53)"/><text x="445.00" y="350.50"></text></g><g><title>0x7fedc0328e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="444" y="356" width="3" height="15" fill="rgb(243,134,2)"/><text x="447.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.58%)</title><rect x="447" y="324" width="6" height="15" fill="rgb(242,214,24)"/><text x="450.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.39%)</title><rect x="449" y="340" width="4" height="15" fill="rgb(244,138,31)"/><text x="452.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="451" y="356" width="2" height="15" fill="rgb(227,184,50)"/><text x="454.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="451" y="372" width="2" height="15" fill="rgb(218,116,14)"/><text x="454.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="451" y="388" width="2" height="15" fill="rgb(229,191,29)"/><text x="454.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="451" y="404" width="2" height="15" fill="rgb(229,191,50)"/><text x="454.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="451" y="420" width="2" height="15" fill="rgb(248,143,44)"/><text x="454.00" y="430.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="453" y="388" width="3" height="15" fill="rgb(251,186,53)"/><text x="456.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.39%)</title><rect x="453" y="340" width="5" height="15" fill="rgb(247,60,40)"/><text x="456.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.39%)</title><rect x="453" y="356" width="5" height="15" fill="rgb(238,128,51)"/><text x="456.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.39%)</title><rect x="453" y="372" width="5" height="15" fill="rgb(242,127,30)"/><text x="456.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="456" y="388" width="2" height="15" fill="rgb(208,200,34)"/><text x="459.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="456" y="404" width="2" height="15" fill="rgb(251,23,28)"/><text x="459.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="456" y="420" width="2" height="15" fill="rgb(217,78,1)"/><text x="459.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="458" y="388" width="2" height="15" fill="rgb(252,100,34)"/><text x="461.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.19%)</title><rect x="458" y="404" width="2" height="15" fill="rgb(212,99,12)"/><text x="461.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.19%)</title><rect x="458" y="420" width="2" height="15" fill="rgb(245,27,40)"/><text x="461.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.39%)</title><rect x="458" y="356" width="5" height="15" fill="rgb(216,154,29)"/><text x="461.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.39%)</title><rect x="458" y="372" width="5" height="15" fill="rgb(209,154,31)"/><text x="461.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.19%)</title><rect x="460" y="388" width="3" height="15" fill="rgb(252,41,35)"/><text x="463.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.19%)</title><rect x="463" y="356" width="2" height="15" fill="rgb(230,179,54)"/><text x="466.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.19%)</title><rect x="463" y="372" width="2" height="15" fill="rgb(231,174,19)"/><text x="466.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="465" y="356" width="2" height="15" fill="rgb(234,89,14)"/><text x="468.00" y="366.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.19%)</title><rect x="465" y="372" width="2" height="15" fill="rgb(231,227,50)"/><text x="468.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.97%)</title><rect x="458" y="340" width="12" height="15" fill="rgb(224,138,6)"/><text x="461.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="467" y="356" width="3" height="15" fill="rgb(223,117,33)"/><text x="470.00" y="366.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.19%)</title><rect x="467" y="372" width="3" height="15" fill="rgb(244,166,26)"/><text x="470.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (13 samples, 2.53%)</title><rect x="442" y="308" width="30" height="15" fill="rgb(221,37,8)"/><text x="445.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (8 samples, 1.56%)</title><rect x="453" y="324" width="19" height="15" fill="rgb(221,83,7)"/><text x="456.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="470" y="340" width="2" height="15" fill="rgb(225,36,16)"/><text x="473.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="470" y="356" width="2" height="15" fill="rgb(245,116,15)"/><text x="473.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="470" y="372" width="2" height="15" fill="rgb(239,110,50)"/><text x="473.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.39%)</title><rect x="472" y="324" width="4" height="15" fill="rgb(231,149,53)"/><text x="475.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.39%)</title><rect x="472" y="340" width="4" height="15" fill="rgb(215,18,47)"/><text x="475.00" y="350.50"></text></g><g><title>0x7fedc0328e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="474" y="356" width="2" height="15" fill="rgb(236,25,42)"/><text x="477.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.39%)</title><rect x="481" y="372" width="5" height="15" fill="rgb(224,46,31)"/><text x="484.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.19%)</title><rect x="486" y="372" width="2" height="15" fill="rgb(241,146,10)"/><text x="489.00" y="382.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="490" y="404" width="3" height="15" fill="rgb(230,87,47)"/><text x="493.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="490" y="420" width="3" height="15" fill="rgb(218,131,44)"/><text x="493.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 1.56%)</title><rect x="476" y="324" width="19" height="15" fill="rgb(244,19,7)"/><text x="479.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 1.17%)</title><rect x="481" y="340" width="14" height="15" fill="rgb(247,133,35)"/><text x="484.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.17%)</title><rect x="481" y="356" width="14" height="15" fill="rgb(210,46,0)"/><text x="484.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.58%)</title><rect x="488" y="372" width="7" height="15" fill="rgb(205,226,21)"/><text x="491.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.58%)</title><rect x="488" y="388" width="7" height="15" fill="rgb(216,69,15)"/><text x="491.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.19%)</title><rect x="493" y="404" width="2" height="15" fill="rgb(254,9,17)"/><text x="496.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.19%)</title><rect x="493" y="420" width="2" height="15" fill="rgb(232,213,13)"/><text x="496.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="493" y="436" width="2" height="15" fill="rgb(211,220,0)"/><text x="496.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.19%)</title><rect x="493" y="452" width="2" height="15" fill="rgb(215,124,42)"/><text x="496.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="495" y="356" width="2" height="15" fill="rgb(209,226,41)"/><text x="498.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="495" y="372" width="2" height="15" fill="rgb(250,158,34)"/><text x="498.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.39%)</title><rect x="495" y="324" width="4" height="15" fill="rgb(251,51,21)"/><text x="498.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.39%)</title><rect x="495" y="340" width="4" height="15" fill="rgb(251,27,17)"/><text x="498.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="497" y="356" width="2" height="15" fill="rgb(248,193,12)"/><text x="500.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="497" y="372" width="2" height="15" fill="rgb(210,12,43)"/><text x="500.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="497" y="388" width="2" height="15" fill="rgb(220,63,19)"/><text x="500.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="497" y="404" width="2" height="15" fill="rgb(224,25,20)"/><text x="500.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="497" y="420" width="2" height="15" fill="rgb(211,162,11)"/><text x="500.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.19%)</title><rect x="497" y="436" width="2" height="15" fill="rgb(225,166,42)"/><text x="500.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.19%)</title><rect x="497" y="452" width="2" height="15" fill="rgb(227,58,31)"/><text x="500.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (13 samples, 2.53%)</title><rect x="472" y="308" width="30" height="15" fill="rgb(250,36,42)"/><text x="475.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:70) (1 samples, 0.19%)</title><rect x="499" y="324" width="3" height="15" fill="rgb(226,120,10)"/><text x="502.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.19%)</title><rect x="509" y="372" width="2" height="15" fill="rgb(244,90,5)"/><text x="512.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.39%)</title><rect x="509" y="340" width="4" height="15" fill="rgb(240,143,9)"/><text x="512.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.39%)</title><rect x="509" y="356" width="4" height="15" fill="rgb(231,101,4)"/><text x="512.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="511" y="372" width="2" height="15" fill="rgb(229,108,11)"/><text x="514.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="511" y="388" width="2" height="15" fill="rgb(223,109,10)"/><text x="514.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="511" y="404" width="2" height="15" fill="rgb(242,89,35)"/><text x="514.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="511" y="420" width="2" height="15" fill="rgb(216,205,22)"/><text x="514.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (6 samples, 1.17%)</title><rect x="502" y="308" width="14" height="15" fill="rgb(213,202,4)"/><text x="505.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (5 samples, 0.97%)</title><rect x="504" y="324" width="12" height="15" fill="rgb(225,32,2)"/><text x="507.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="513" y="340" width="3" height="15" fill="rgb(242,205,30)"/><text x="516.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="513" y="356" width="3" height="15" fill="rgb(231,35,46)"/><text x="516.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:503) (1 samples, 0.19%)</title><rect x="513" y="372" width="3" height="15" fill="rgb(234,40,44)"/><text x="516.00" y="382.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (45 samples, 8.77%)</title><rect x="414" y="196" width="104" height="15" fill="rgb(225,17,25)"/><text x="417.00" y="206.50">_samme_proba..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (38 samples, 7.41%)</title><rect x="430" y="212" width="88" height="15" fill="rgb(235,8,27)"/><text x="433.00" y="222.50">clip (&lt;__a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (37 samples, 7.21%)</title><rect x="433" y="228" width="85" height="15" fill="rgb(213,175,36)"/><text x="436.00" y="238.50">array_impl..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (37 samples, 7.21%)</title><rect x="433" y="244" width="85" height="15" fill="rgb(220,226,50)"/><text x="436.00" y="254.50">clip (nump..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (35 samples, 6.82%)</title><rect x="437" y="260" width="81" height="15" fill="rgb(240,2,9)"/><text x="440.00" y="270.50">_wrapfunc..</text></g><g><title>array_clip (methods.c:2381) (34 samples, 6.63%)</title><rect x="440" y="276" width="78" height="15" fill="rgb(244,197,22)"/><text x="443.00" y="286.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c:108) (34 samples, 6.63%)</title><rect x="440" y="292" width="78" height="15" fill="rgb(244,205,0)"/><text x="443.00" y="302.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py:98) (1 samples, 0.19%)</title><rect x="516" y="308" width="2" height="15" fill="rgb(239,173,43)"/><text x="519.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="518" y="244" width="2" height="15" fill="rgb(247,77,9)"/><text x="521.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="518" y="260" width="2" height="15" fill="rgb(247,17,37)"/><text x="521.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="518" y="276" width="2" height="15" fill="rgb(247,106,49)"/><text x="521.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:123) (1 samples, 0.19%)</title><rect x="518" y="292" width="2" height="15" fill="rgb(224,2,18)"/><text x="521.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (2 samples, 0.39%)</title><rect x="518" y="196" width="4" height="15" fill="rgb(216,25,46)"/><text x="521.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.39%)</title><rect x="518" y="212" width="4" height="15" fill="rgb(205,10,49)"/><text x="521.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.39%)</title><rect x="518" y="228" width="4" height="15" fill="rgb(213,201,1)"/><text x="521.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="520" y="244" width="2" height="15" fill="rgb(219,85,44)"/><text x="523.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.19%)</title><rect x="520" y="260" width="2" height="15" fill="rgb(225,126,32)"/><text x="523.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.19%)</title><rect x="520" y="276" width="2" height="15" fill="rgb(206,22,23)"/><text x="523.00" y="286.50"></text></g><g><title>0x7fedc04e4dd0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="520" y="292" width="2" height="15" fill="rgb(240,2,25)"/><text x="523.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.19%)</title><rect x="522" y="196" width="3" height="15" fill="rgb(235,7,22)"/><text x="525.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="536" y="212" width="3" height="15" fill="rgb(232,28,2)"/><text x="539.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="539" y="276" width="2" height="15" fill="rgb(236,68,19)"/><text x="542.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.19%)</title><rect x="539" y="292" width="2" height="15" fill="rgb(236,175,25)"/><text x="542.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.19%)</title><rect x="539" y="308" width="2" height="15" fill="rgb(212,176,31)"/><text x="542.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="539" y="324" width="2" height="15" fill="rgb(250,121,0)"/><text x="542.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="541" y="292" width="2" height="15" fill="rgb(227,125,26)"/><text x="544.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="541" y="308" width="2" height="15" fill="rgb(220,88,1)"/><text x="544.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.19%)</title><rect x="541" y="324" width="2" height="15" fill="rgb(223,20,24)"/><text x="544.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.58%)</title><rect x="539" y="244" width="6" height="15" fill="rgb(228,139,29)"/><text x="542.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.58%)</title><rect x="539" y="260" width="6" height="15" fill="rgb(252,214,53)"/><text x="542.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (2 samples, 0.39%)</title><rect x="541" y="276" width="4" height="15" fill="rgb(245,219,18)"/><text x="544.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1134) (1 samples, 0.19%)</title><rect x="543" y="292" width="2" height="15" fill="rgb(241,6,17)"/><text x="546.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.19%)</title><rect x="545" y="244" width="3" height="15" fill="rgb(212,145,46)"/><text x="548.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.19%)</title><rect x="545" y="260" width="3" height="15" fill="rgb(206,16,41)"/><text x="548.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="548" y="244" width="2" height="15" fill="rgb(235,188,40)"/><text x="551.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.19%)</title><rect x="548" y="260" width="2" height="15" fill="rgb(225,166,44)"/><text x="551.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:46) (1 samples, 0.19%)</title><rect x="550" y="276" width="2" height="15" fill="rgb(232,30,21)"/><text x="553.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.39%)</title><rect x="550" y="244" width="5" height="15" fill="rgb(223,127,9)"/><text x="553.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.39%)</title><rect x="550" y="260" width="5" height="15" fill="rgb(236,205,47)"/><text x="553.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.19%)</title><rect x="552" y="276" width="3" height="15" fill="rgb(231,38,25)"/><text x="555.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.19%)</title><rect x="552" y="292" width="3" height="15" fill="rgb(253,59,16)"/><text x="555.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.56%)</title><rect x="539" y="228" width="18" height="15" fill="rgb(243,124,1)"/><text x="542.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="555" y="244" width="2" height="15" fill="rgb(222,196,25)"/><text x="558.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.19%)</title><rect x="555" y="260" width="2" height="15" fill="rgb(249,101,40)"/><text x="558.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="555" y="276" width="2" height="15" fill="rgb(206,171,13)"/><text x="558.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="555" y="292" width="2" height="15" fill="rgb(223,122,11)"/><text x="558.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.19%)</title><rect x="555" y="308" width="2" height="15" fill="rgb(249,34,48)"/><text x="558.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.19%)</title><rect x="555" y="324" width="2" height="15" fill="rgb(229,158,42)"/><text x="558.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:117) (1 samples, 0.19%)</title><rect x="555" y="340" width="2" height="15" fill="rgb(207,12,10)"/><text x="558.00" y="350.50"></text></g><g><title>array_multiply (number.c:354) (10 samples, 1.95%)</title><rect x="539" y="212" width="23" height="15" fill="rgb(208,11,3)"/><text x="542.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.39%)</title><rect x="557" y="228" width="5" height="15" fill="rgb(216,189,50)"/><text x="560.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="559" y="244" width="3" height="15" fill="rgb(238,111,13)"/><text x="562.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="559" y="260" width="3" height="15" fill="rgb(254,3,21)"/><text x="562.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="559" y="276" width="3" height="15" fill="rgb(251,33,49)"/><text x="562.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="564" y="228" width="2" height="15" fill="rgb(209,56,47)"/><text x="567.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="564" y="244" width="2" height="15" fill="rgb(248,159,50)"/><text x="567.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="564" y="260" width="2" height="15" fill="rgb(217,106,48)"/><text x="567.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.19%)</title><rect x="564" y="276" width="2" height="15" fill="rgb(228,182,12)"/><text x="567.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="566" y="244" width="2" height="15" fill="rgb(237,89,11)"/><text x="569.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="566" y="260" width="2" height="15" fill="rgb(209,60,51)"/><text x="569.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="568" y="308" width="3" height="15" fill="rgb(233,82,41)"/><text x="571.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2519) (1 samples, 0.19%)</title><rect x="568" y="324" width="3" height="15" fill="rgb(245,40,8)"/><text x="571.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.58%)</title><rect x="566" y="228" width="7" height="15" fill="rgb(234,209,31)"/><text x="569.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.39%)</title><rect x="568" y="244" width="5" height="15" fill="rgb(211,3,17)"/><text x="571.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.39%)</title><rect x="568" y="260" width="5" height="15" fill="rgb(232,132,51)"/><text x="571.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.39%)</title><rect x="568" y="276" width="5" height="15" fill="rgb(225,209,41)"/><text x="571.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.39%)</title><rect x="568" y="292" width="5" height="15" fill="rgb(244,94,44)"/><text x="571.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.19%)</title><rect x="571" y="308" width="2" height="15" fill="rgb(241,82,37)"/><text x="574.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1937) (1 samples, 0.19%)</title><rect x="571" y="324" width="2" height="15" fill="rgb(220,219,33)"/><text x="574.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (6 samples, 1.17%)</title><rect x="562" y="212" width="13" height="15" fill="rgb(226,192,13)"/><text x="565.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.19%)</title><rect x="573" y="228" width="2" height="15" fill="rgb(254,67,25)"/><text x="576.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="575" y="260" width="3" height="15" fill="rgb(232,1,20)"/><text x="578.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="575" y="276" width="3" height="15" fill="rgb(228,151,47)"/><text x="578.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="575" y="292" width="3" height="15" fill="rgb(223,194,4)"/><text x="578.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="575" y="308" width="3" height="15" fill="rgb(246,28,25)"/><text x="578.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="578" y="276" width="2" height="15" fill="rgb(207,26,33)"/><text x="581.00" y="286.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:65) (1 samples, 0.19%)</title><rect x="578" y="292" width="2" height="15" fill="rgb(206,198,35)"/><text x="581.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="580" y="292" width="2" height="15" fill="rgb(228,1,35)"/><text x="583.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.19%)</title><rect x="580" y="308" width="2" height="15" fill="rgb(243,204,18)"/><text x="583.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="582" y="308" width="3" height="15" fill="rgb(223,86,2)"/><text x="585.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="582" y="324" width="3" height="15" fill="rgb(217,63,22)"/><text x="585.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.19%)</title><rect x="582" y="340" width="3" height="15" fill="rgb(251,91,51)"/><text x="585.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="582" y="356" width="3" height="15" fill="rgb(236,71,21)"/><text x="585.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="582" y="372" width="3" height="15" fill="rgb(223,43,15)"/><text x="585.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="582" y="388" width="3" height="15" fill="rgb(239,177,44)"/><text x="585.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.19%)</title><rect x="582" y="404" width="3" height="15" fill="rgb(243,185,46)"/><text x="585.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="585" y="324" width="2" height="15" fill="rgb(238,171,6)"/><text x="588.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="585" y="340" width="2" height="15" fill="rgb(207,207,47)"/><text x="588.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.19%)</title><rect x="585" y="356" width="2" height="15" fill="rgb(231,50,25)"/><text x="588.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.19%)</title><rect x="587" y="324" width="2" height="15" fill="rgb(232,153,45)"/><text x="590.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2277) (1 samples, 0.19%)</title><rect x="587" y="340" width="2" height="15" fill="rgb(223,68,15)"/><text x="590.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="589" y="324" width="2" height="15" fill="rgb(228,226,16)"/><text x="592.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3002) (1 samples, 0.19%)</title><rect x="589" y="340" width="2" height="15" fill="rgb(220,214,23)"/><text x="592.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="591" y="324" width="3" height="15" fill="rgb(231,92,30)"/><text x="594.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.19%)</title><rect x="591" y="340" width="3" height="15" fill="rgb(205,59,54)"/><text x="594.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (5 samples, 0.97%)</title><rect x="585" y="308" width="11" height="15" fill="rgb(230,90,18)"/><text x="588.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.19%)</title><rect x="594" y="324" width="2" height="15" fill="rgb(250,194,41)"/><text x="597.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.19%)</title><rect x="594" y="340" width="2" height="15" fill="rgb(226,1,52)"/><text x="597.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.19%)</title><rect x="596" y="324" width="2" height="15" fill="rgb(205,113,50)"/><text x="599.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.19%)</title><rect x="596" y="340" width="2" height="15" fill="rgb(247,108,50)"/><text x="599.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (33 samples, 6.43%)</title><rect x="525" y="196" width="76" height="15" fill="rgb(231,51,7)"/><text x="528.00" y="206.50">_samme_p..</text></g><g><title>array_sum (methods.c:2215) (11 samples, 2.14%)</title><rect x="575" y="212" width="26" height="15" fill="rgb(225,209,38)"/><text x="578.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.14%)</title><rect x="575" y="228" width="26" height="15" fill="rgb(220,174,54)"/><text x="578.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 2.14%)</title><rect x="575" y="244" width="26" height="15" fill="rgb(214,92,7)"/><text x="578.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.95%)</title><rect x="578" y="260" width="23" height="15" fill="rgb(236,56,6)"/><text x="581.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.75%)</title><rect x="580" y="276" width="21" height="15" fill="rgb(247,104,6)"/><text x="583.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 1.56%)</title><rect x="582" y="292" width="19" height="15" fill="rgb(217,69,18)"/><text x="585.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.39%)</title><rect x="596" y="308" width="5" height="15" fill="rgb(210,46,23)"/><text x="599.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="598" y="324" width="3" height="15" fill="rgb(213,1,6)"/><text x="601.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.19%)</title><rect x="598" y="340" width="3" height="15" fill="rgb(250,226,5)"/><text x="601.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1968) (1 samples, 0.19%)</title><rect x="598" y="356" width="3" height="15" fill="rgb(227,189,13)"/><text x="601.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (199 samples, 38.79%)</title><rect x="145" y="180" width="458" height="15" fill="rgb(233,17,49)"/><text x="148.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="601" y="196" width="2" height="15" fill="rgb(243,169,29)"/><text x="604.00" y="206.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.19%)</title><rect x="603" y="180" width="2" height="15" fill="rgb(241,36,50)"/><text x="606.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (203 samples, 39.57%)</title><rect x="141" y="148" width="467" height="15" fill="rgb(233,102,46)"/><text x="144.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (202 samples, 39.38%)</title><rect x="143" y="164" width="465" height="15" fill="rgb(228,12,42)"/><text x="146.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="605" y="180" width="3" height="15" fill="rgb(212,76,43)"/><text x="608.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="605" y="196" width="3" height="15" fill="rgb(233,57,5)"/><text x="608.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="605" y="212" width="3" height="15" fill="rgb(248,65,16)"/><text x="608.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:503) (1 samples, 0.19%)</title><rect x="605" y="228" width="3" height="15" fill="rgb(211,17,29)"/><text x="608.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="608" y="244" width="2" height="15" fill="rgb(205,88,29)"/><text x="611.00" y="254.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (2 samples, 0.39%)</title><rect x="608" y="180" width="4" height="15" fill="rgb(242,76,27)"/><text x="611.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.39%)</title><rect x="608" y="196" width="4" height="15" fill="rgb(244,73,3)"/><text x="611.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.39%)</title><rect x="608" y="212" width="4" height="15" fill="rgb(235,97,49)"/><text x="611.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (2 samples, 0.39%)</title><rect x="608" y="228" width="4" height="15" fill="rgb(207,177,14)"/><text x="611.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.19%)</title><rect x="610" y="244" width="2" height="15" fill="rgb(226,152,11)"/><text x="613.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="610" y="260" width="2" height="15" fill="rgb(235,134,4)"/><text x="613.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="610" y="276" width="2" height="15" fill="rgb(219,19,23)"/><text x="613.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="610" y="292" width="2" height="15" fill="rgb(252,224,27)"/><text x="613.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.19%)</title><rect x="610" y="308" width="2" height="15" fill="rgb(250,172,54)"/><text x="613.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.19%)</title><rect x="610" y="324" width="2" height="15" fill="rgb(219,12,21)"/><text x="613.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="610" y="340" width="2" height="15" fill="rgb(207,38,53)"/><text x="613.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.19%)</title><rect x="610" y="356" width="2" height="15" fill="rgb(232,52,27)"/><text x="613.00" y="366.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.19%)</title><rect x="612" y="180" width="2" height="15" fill="rgb(230,13,49)"/><text x="615.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="612" y="196" width="2" height="15" fill="rgb(240,66,34)"/><text x="615.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="612" y="212" width="2" height="15" fill="rgb(235,220,29)"/><text x="615.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="612" y="228" width="2" height="15" fill="rgb(247,219,27)"/><text x="615.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="612" y="244" width="2" height="15" fill="rgb(253,134,37)"/><text x="615.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:295) (1 samples, 0.19%)</title><rect x="612" y="260" width="2" height="15" fill="rgb(226,146,53)"/><text x="615.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:38) (261 samples, 50.88%)</title><rect x="16" y="52" width="601" height="15" fill="rgb(225,74,15)"/><text x="19.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:37) (261 samples, 50.88%)</title><rect x="16" y="68" width="601" height="15" fill="rgb(217,210,21)"/><text x="19.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29) (261 samples, 50.88%)</title><rect x="16" y="84" width="601" height="15" fill="rgb(217,172,31)"/><text x="19.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:23) (209 samples, 40.74%)</title><rect x="136" y="100" width="481" height="15" fill="rgb(220,216,15)"/><text x="139.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (209 samples, 40.74%)</title><rect x="136" y="116" width="481" height="15" fill="rgb(206,21,0)"/><text x="139.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (209 samples, 40.74%)</title><rect x="136" y="132" width="481" height="15" fill="rgb(205,10,33)"/><text x="139.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (4 samples, 0.78%)</title><rect x="608" y="148" width="9" height="15" fill="rgb(247,135,35)"/><text x="611.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (4 samples, 0.78%)</title><rect x="608" y="164" width="9" height="15" fill="rgb(212,139,22)"/><text x="611.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.19%)</title><rect x="614" y="180" width="3" height="15" fill="rgb(246,168,40)"/><text x="617.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="614" y="196" width="3" height="15" fill="rgb(251,149,46)"/><text x="617.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.19%)</title><rect x="614" y="212" width="3" height="15" fill="rgb(248,13,36)"/><text x="617.00" y="222.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.39%)</title><rect x="617" y="852" width="4" height="15" fill="rgb(205,39,22)"/><text x="620.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.39%)</title><rect x="617" y="868" width="4" height="15" fill="rgb(240,162,21)"/><text x="620.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.39%)</title><rect x="617" y="884" width="4" height="15" fill="rgb(249,163,48)"/><text x="620.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.39%)</title><rect x="617" y="900" width="4" height="15" fill="rgb(252,59,35)"/><text x="620.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.39%)</title><rect x="617" y="916" width="4" height="15" fill="rgb(211,217,31)"/><text x="620.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.39%)</title><rect x="617" y="932" width="4" height="15" fill="rgb(210,11,29)"/><text x="620.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="619" y="948" width="2" height="15" fill="rgb(240,47,21)"/><text x="622.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="619" y="964" width="2" height="15" fill="rgb(247,107,7)"/><text x="622.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.19%)</title><rect x="619" y="980" width="2" height="15" fill="rgb(230,181,44)"/><text x="622.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.19%)</title><rect x="619" y="996" width="2" height="15" fill="rgb(233,0,4)"/><text x="622.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.19%)</title><rect x="619" y="1012" width="2" height="15" fill="rgb(207,61,28)"/><text x="622.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.19%)</title><rect x="619" y="1028" width="2" height="15" fill="rgb(225,171,6)"/><text x="622.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.19%)</title><rect x="621" y="852" width="3" height="15" fill="rgb(213,147,18)"/><text x="624.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.19%)</title><rect x="621" y="868" width="3" height="15" fill="rgb(244,105,6)"/><text x="624.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.19%)</title><rect x="621" y="884" width="3" height="15" fill="rgb(206,166,46)"/><text x="624.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.19%)</title><rect x="621" y="900" width="3" height="15" fill="rgb(216,103,31)"/><text x="624.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.19%)</title><rect x="621" y="916" width="3" height="15" fill="rgb(246,13,19)"/><text x="624.00" y="926.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.19%)</title><rect x="621" y="932" width="3" height="15" fill="rgb(227,114,36)"/><text x="624.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (1 samples, 0.19%)</title><rect x="624" y="916" width="2" height="15" fill="rgb(217,90,47)"/><text x="627.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.19%)</title><rect x="624" y="932" width="2" height="15" fill="rgb(243,113,35)"/><text x="627.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (5 samples, 0.97%)</title><rect x="617" y="148" width="11" height="15" fill="rgb(241,82,36)"/><text x="620.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="164" width="11" height="15" fill="rgb(245,23,47)"/><text x="620.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.97%)</title><rect x="617" y="180" width="11" height="15" fill="rgb(218,1,42)"/><text x="620.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="196" width="11" height="15" fill="rgb(208,152,16)"/><text x="620.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="212" width="11" height="15" fill="rgb(218,183,45)"/><text x="620.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="617" y="228" width="11" height="15" fill="rgb(236,42,49)"/><text x="620.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="617" y="244" width="11" height="15" fill="rgb(216,146,23)"/><text x="620.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="617" y="260" width="11" height="15" fill="rgb(229,207,50)"/><text x="620.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="276" width="11" height="15" fill="rgb(233,174,22)"/><text x="620.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.97%)</title><rect x="617" y="292" width="11" height="15" fill="rgb(246,201,4)"/><text x="620.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="308" width="11" height="15" fill="rgb(235,76,27)"/><text x="620.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="617" y="324" width="11" height="15" fill="rgb(218,113,10)"/><text x="620.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="617" y="340" width="11" height="15" fill="rgb(248,202,46)"/><text x="620.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="617" y="356" width="11" height="15" fill="rgb(216,94,42)"/><text x="620.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="372" width="11" height="15" fill="rgb(215,127,29)"/><text x="620.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.97%)</title><rect x="617" y="388" width="11" height="15" fill="rgb(243,212,7)"/><text x="620.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="404" width="11" height="15" fill="rgb(216,156,21)"/><text x="620.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="617" y="420" width="11" height="15" fill="rgb(229,2,29)"/><text x="620.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="617" y="436" width="11" height="15" fill="rgb(252,11,47)"/><text x="620.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="617" y="452" width="11" height="15" fill="rgb(205,118,11)"/><text x="620.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="468" width="11" height="15" fill="rgb(233,90,40)"/><text x="620.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.97%)</title><rect x="617" y="484" width="11" height="15" fill="rgb(251,2,35)"/><text x="620.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="500" width="11" height="15" fill="rgb(243,136,1)"/><text x="620.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="617" y="516" width="11" height="15" fill="rgb(220,63,30)"/><text x="620.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="617" y="532" width="11" height="15" fill="rgb(232,172,25)"/><text x="620.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="617" y="548" width="11" height="15" fill="rgb(233,199,34)"/><text x="620.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="564" width="11" height="15" fill="rgb(227,132,18)"/><text x="620.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.97%)</title><rect x="617" y="580" width="11" height="15" fill="rgb(235,78,19)"/><text x="620.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="596" width="11" height="15" fill="rgb(208,12,34)"/><text x="620.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.97%)</title><rect x="617" y="612" width="11" height="15" fill="rgb(206,209,5)"/><text x="620.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="628" width="11" height="15" fill="rgb(236,22,36)"/><text x="620.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="644" width="11" height="15" fill="rgb(238,28,35)"/><text x="620.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="617" y="660" width="11" height="15" fill="rgb(239,128,19)"/><text x="620.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="617" y="676" width="11" height="15" fill="rgb(246,50,19)"/><text x="620.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="617" y="692" width="11" height="15" fill="rgb(231,54,43)"/><text x="620.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="708" width="11" height="15" fill="rgb(213,18,12)"/><text x="620.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.97%)</title><rect x="617" y="724" width="11" height="15" fill="rgb(244,30,29)"/><text x="620.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="617" y="740" width="11" height="15" fill="rgb(230,154,24)"/><text x="620.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="617" y="756" width="11" height="15" fill="rgb(205,93,19)"/><text x="620.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="617" y="772" width="11" height="15" fill="rgb(211,186,1)"/><text x="620.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="617" y="788" width="11" height="15" fill="rgb(223,33,0)"/><text x="620.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="617" y="804" width="11" height="15" fill="rgb(247,157,11)"/><text x="620.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.97%)</title><rect x="617" y="820" width="11" height="15" fill="rgb(240,168,1)"/><text x="620.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.97%)</title><rect x="617" y="836" width="11" height="15" fill="rgb(212,48,20)"/><text x="620.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.39%)</title><rect x="624" y="852" width="4" height="15" fill="rgb(254,145,43)"/><text x="627.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.39%)</title><rect x="624" y="868" width="4" height="15" fill="rgb(246,26,20)"/><text x="627.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.39%)</title><rect x="624" y="884" width="4" height="15" fill="rgb(243,47,13)"/><text x="627.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.39%)</title><rect x="624" y="900" width="4" height="15" fill="rgb(225,65,25)"/><text x="627.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2582) (1 samples, 0.19%)</title><rect x="626" y="916" width="2" height="15" fill="rgb(219,116,9)"/><text x="629.00" y="926.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="626" y="932" width="2" height="15" fill="rgb(216,213,13)"/><text x="629.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.19%)</title><rect x="628" y="484" width="3" height="15" fill="rgb(230,23,35)"/><text x="631.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="628" y="500" width="3" height="15" fill="rgb(249,115,54)"/><text x="631.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="516" width="3" height="15" fill="rgb(248,81,41)"/><text x="631.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="532" width="3" height="15" fill="rgb(216,70,18)"/><text x="631.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="548" width="3" height="15" fill="rgb(207,94,19)"/><text x="631.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="564" width="3" height="15" fill="rgb(214,85,1)"/><text x="631.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="580" width="3" height="15" fill="rgb(207,190,26)"/><text x="631.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="596" width="3" height="15" fill="rgb(207,220,7)"/><text x="631.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.19%)</title><rect x="628" y="612" width="3" height="15" fill="rgb(206,110,24)"/><text x="631.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="628" width="3" height="15" fill="rgb(211,93,52)"/><text x="631.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="644" width="3" height="15" fill="rgb(212,193,47)"/><text x="631.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="660" width="3" height="15" fill="rgb(240,16,10)"/><text x="631.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="676" width="3" height="15" fill="rgb(206,45,11)"/><text x="631.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="692" width="3" height="15" fill="rgb(218,76,6)"/><text x="631.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.19%)</title><rect x="628" y="708" width="3" height="15" fill="rgb(220,119,15)"/><text x="631.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="724" width="3" height="15" fill="rgb(213,86,5)"/><text x="631.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="740" width="3" height="15" fill="rgb(235,160,52)"/><text x="631.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="756" width="3" height="15" fill="rgb(217,158,42)"/><text x="631.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="772" width="3" height="15" fill="rgb(230,79,11)"/><text x="631.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="788" width="3" height="15" fill="rgb(211,57,24)"/><text x="631.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.19%)</title><rect x="628" y="804" width="3" height="15" fill="rgb(247,182,39)"/><text x="631.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="820" width="3" height="15" fill="rgb(250,206,40)"/><text x="631.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="836" width="3" height="15" fill="rgb(230,156,4)"/><text x="631.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="852" width="3" height="15" fill="rgb(220,228,10)"/><text x="631.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="868" width="3" height="15" fill="rgb(230,116,37)"/><text x="631.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="884" width="3" height="15" fill="rgb(224,29,22)"/><text x="631.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.19%)</title><rect x="628" y="900" width="3" height="15" fill="rgb(222,192,43)"/><text x="631.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="916" width="3" height="15" fill="rgb(206,91,49)"/><text x="631.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="932" width="3" height="15" fill="rgb(214,44,46)"/><text x="631.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="948" width="3" height="15" fill="rgb(244,78,51)"/><text x="631.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="964" width="3" height="15" fill="rgb(223,69,51)"/><text x="631.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="980" width="3" height="15" fill="rgb(228,178,27)"/><text x="631.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.19%)</title><rect x="628" y="996" width="3" height="15" fill="rgb(253,173,35)"/><text x="631.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="1012" width="3" height="15" fill="rgb(229,62,11)"/><text x="631.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="628" y="1028" width="3" height="15" fill="rgb(235,203,29)"/><text x="631.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1044" width="3" height="15" fill="rgb(229,188,36)"/><text x="631.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="1060" width="3" height="15" fill="rgb(229,197,28)"/><text x="631.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="1076" width="3" height="15" fill="rgb(233,135,19)"/><text x="631.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="1092" width="3" height="15" fill="rgb(250,173,53)"/><text x="631.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="1108" width="3" height="15" fill="rgb(240,114,53)"/><text x="631.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1124" width="3" height="15" fill="rgb(231,97,46)"/><text x="631.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.19%)</title><rect x="628" y="1140" width="3" height="15" fill="rgb(243,2,42)"/><text x="631.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="1156" width="3" height="15" fill="rgb(231,141,15)"/><text x="631.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="1172" width="3" height="15" fill="rgb(235,69,43)"/><text x="631.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="1188" width="3" height="15" fill="rgb(250,22,2)"/><text x="631.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="1204" width="3" height="15" fill="rgb(209,144,31)"/><text x="631.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1220" width="3" height="15" fill="rgb(248,3,0)"/><text x="631.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.19%)</title><rect x="628" y="1236" width="3" height="15" fill="rgb(231,52,13)"/><text x="631.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="1252" width="3" height="15" fill="rgb(231,39,12)"/><text x="631.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="1268" width="3" height="15" fill="rgb(212,6,9)"/><text x="631.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="1284" width="3" height="15" fill="rgb(227,76,54)"/><text x="631.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="1300" width="3" height="15" fill="rgb(208,111,49)"/><text x="631.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1316" width="3" height="15" fill="rgb(238,133,0)"/><text x="631.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.19%)</title><rect x="628" y="1332" width="3" height="15" fill="rgb(223,0,32)"/><text x="631.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="1348" width="3" height="15" fill="rgb(218,39,0)"/><text x="631.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="1364" width="3" height="15" fill="rgb(238,225,0)"/><text x="631.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="1380" width="3" height="15" fill="rgb(246,57,6)"/><text x="631.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="1396" width="3" height="15" fill="rgb(245,89,7)"/><text x="631.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1412" width="3" height="15" fill="rgb(207,43,34)"/><text x="631.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.19%)</title><rect x="628" y="1428" width="3" height="15" fill="rgb(214,44,46)"/><text x="631.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="1444" width="3" height="15" fill="rgb(223,214,43)"/><text x="631.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="1460" width="3" height="15" fill="rgb(209,154,21)"/><text x="631.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="1476" width="3" height="15" fill="rgb(213,170,48)"/><text x="631.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="1492" width="3" height="15" fill="rgb(216,48,31)"/><text x="631.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1508" width="3" height="15" fill="rgb(227,133,23)"/><text x="631.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:40) (1 samples, 0.19%)</title><rect x="628" y="1524" width="3" height="15" fill="rgb(218,164,21)"/><text x="631.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="628" y="1540" width="3" height="15" fill="rgb(240,135,16)"/><text x="631.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1556" width="3" height="15" fill="rgb(232,80,49)"/><text x="631.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="1572" width="3" height="15" fill="rgb(217,200,42)"/><text x="631.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="1588" width="3" height="15" fill="rgb(216,150,41)"/><text x="631.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="1604" width="3" height="15" fill="rgb(215,157,11)"/><text x="631.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="1620" width="3" height="15" fill="rgb(240,152,9)"/><text x="631.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="1636" width="3" height="15" fill="rgb(238,224,28)"/><text x="631.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_common.py:222) (1 samples, 0.19%)</title><rect x="628" y="1652" width="3" height="15" fill="rgb(240,19,51)"/><text x="631.00" y="1662.50"></text></g><g><title>namedtuple (collections/__init__.py:387) (1 samples, 0.19%)</title><rect x="628" y="1668" width="3" height="15" fill="rgb(218,75,38)"/><text x="631.00" y="1678.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.19%)</title><rect x="631" y="900" width="2" height="15" fill="rgb(209,210,42)"/><text x="634.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="631" y="916" width="2" height="15" fill="rgb(229,212,0)"/><text x="634.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="631" y="932" width="2" height="15" fill="rgb(220,148,47)"/><text x="634.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="631" y="948" width="2" height="15" fill="rgb(245,191,26)"/><text x="634.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="631" y="964" width="2" height="15" fill="rgb(206,64,51)"/><text x="634.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="631" y="980" width="2" height="15" fill="rgb(252,67,16)"/><text x="634.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.19%)</title><rect x="631" y="996" width="2" height="15" fill="rgb(250,52,0)"/><text x="634.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="631" y="1012" width="2" height="15" fill="rgb(217,206,24)"/><text x="634.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="631" y="1028" width="2" height="15" fill="rgb(240,65,35)"/><text x="634.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="631" y="1044" width="2" height="15" fill="rgb(241,66,50)"/><text x="634.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="631" y="1060" width="2" height="15" fill="rgb(218,25,47)"/><text x="634.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="631" y="1076" width="2" height="15" fill="rgb(213,87,34)"/><text x="634.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="631" y="1092" width="2" height="15" fill="rgb(238,88,6)"/><text x="634.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="631" y="1108" width="2" height="15" fill="rgb(221,102,34)"/><text x="634.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:411) (1 samples, 0.19%)</title><rect x="631" y="1124" width="2" height="15" fill="rgb(232,161,32)"/><text x="634.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="631" y="1140" width="2" height="15" fill="rgb(229,133,29)"/><text x="634.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="631" y="1156" width="2" height="15" fill="rgb(244,84,45)"/><text x="634.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="631" y="1172" width="2" height="15" fill="rgb(232,15,46)"/><text x="634.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="631" y="1188" width="2" height="15" fill="rgb(221,37,31)"/><text x="634.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="631" y="1204" width="2" height="15" fill="rgb(217,111,26)"/><text x="634.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py:11) (1 samples, 0.19%)</title><rect x="631" y="1220" width="2" height="15" fill="rgb(210,19,43)"/><text x="634.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="631" y="1236" width="2" height="15" fill="rgb(245,169,38)"/><text x="634.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="631" y="1252" width="2" height="15" fill="rgb(208,14,8)"/><text x="634.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="631" y="1268" width="2" height="15" fill="rgb(225,229,26)"/><text x="634.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="631" y="1284" width="2" height="15" fill="rgb(210,76,53)"/><text x="634.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="631" y="1300" width="2" height="15" fill="rgb(213,82,10)"/><text x="634.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="631" y="1316" width="2" height="15" fill="rgb(230,177,33)"/><text x="634.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="631" y="1332" width="2" height="15" fill="rgb(212,86,32)"/><text x="634.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:99) (1 samples, 0.19%)</title><rect x="631" y="1348" width="2" height="15" fill="rgb(211,70,36)"/><text x="634.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="631" y="1364" width="2" height="15" fill="rgb(208,161,12)"/><text x="634.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="631" y="1380" width="2" height="15" fill="rgb(247,52,42)"/><text x="634.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="631" y="1396" width="2" height="15" fill="rgb(229,87,45)"/><text x="634.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="631" y="1412" width="2" height="15" fill="rgb(247,79,17)"/><text x="634.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.19%)</title><rect x="631" y="1428" width="2" height="15" fill="rgb(230,136,33)"/><text x="634.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.19%)</title><rect x="631" y="1444" width="2" height="15" fill="rgb(216,22,34)"/><text x="634.00" y="1454.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1408) (1 samples, 0.19%)</title><rect x="631" y="1460" width="2" height="15" fill="rgb(217,207,0)"/><text x="634.00" y="1470.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.19%)</title><rect x="631" y="1476" width="2" height="15" fill="rgb(208,18,28)"/><text x="634.00" y="1486.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="631" y="1492" width="2" height="15" fill="rgb(231,139,12)"/><text x="634.00" y="1502.50"></text></g><g><title>0x7fedc0352237 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="631" y="1508" width="2" height="15" fill="rgb(214,174,31)"/><text x="634.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.58%)</title><rect x="628" y="180" width="7" height="15" fill="rgb(229,0,13)"/><text x="631.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="628" y="196" width="7" height="15" fill="rgb(231,109,6)"/><text x="631.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="628" y="212" width="7" height="15" fill="rgb(243,115,30)"/><text x="631.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="628" y="228" width="7" height="15" fill="rgb(240,148,41)"/><text x="631.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="628" y="244" width="7" height="15" fill="rgb(226,94,31)"/><text x="631.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="628" y="260" width="7" height="15" fill="rgb(205,161,50)"/><text x="631.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="628" y="276" width="7" height="15" fill="rgb(228,206,5)"/><text x="631.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.58%)</title><rect x="628" y="292" width="7" height="15" fill="rgb(253,192,34)"/><text x="631.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="628" y="308" width="7" height="15" fill="rgb(252,104,29)"/><text x="631.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="628" y="324" width="7" height="15" fill="rgb(249,141,0)"/><text x="631.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="628" y="340" width="7" height="15" fill="rgb(225,62,39)"/><text x="631.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="628" y="356" width="7" height="15" fill="rgb(226,119,29)"/><text x="631.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="628" y="372" width="7" height="15" fill="rgb(205,120,4)"/><text x="631.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.58%)</title><rect x="628" y="388" width="7" height="15" fill="rgb(233,38,2)"/><text x="631.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="628" y="404" width="7" height="15" fill="rgb(242,206,15)"/><text x="631.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="628" y="420" width="7" height="15" fill="rgb(222,169,17)"/><text x="631.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="628" y="436" width="7" height="15" fill="rgb(244,226,16)"/><text x="631.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="628" y="452" width="7" height="15" fill="rgb(214,42,20)"/><text x="631.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="628" y="468" width="7" height="15" fill="rgb(221,145,37)"/><text x="631.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.39%)</title><rect x="631" y="484" width="4" height="15" fill="rgb(244,46,3)"/><text x="634.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="631" y="500" width="4" height="15" fill="rgb(219,79,40)"/><text x="634.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="631" y="516" width="4" height="15" fill="rgb(216,11,30)"/><text x="634.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="631" y="532" width="4" height="15" fill="rgb(207,164,43)"/><text x="634.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="631" y="548" width="4" height="15" fill="rgb(217,4,29)"/><text x="634.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="631" y="564" width="4" height="15" fill="rgb(209,43,20)"/><text x="634.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.39%)</title><rect x="631" y="580" width="4" height="15" fill="rgb(218,139,10)"/><text x="634.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="631" y="596" width="4" height="15" fill="rgb(212,121,25)"/><text x="634.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="631" y="612" width="4" height="15" fill="rgb(212,48,47)"/><text x="634.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="631" y="628" width="4" height="15" fill="rgb(254,70,46)"/><text x="634.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="631" y="644" width="4" height="15" fill="rgb(209,194,50)"/><text x="634.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="631" y="660" width="4" height="15" fill="rgb(210,226,27)"/><text x="634.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.39%)</title><rect x="631" y="676" width="4" height="15" fill="rgb(229,218,3)"/><text x="634.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="631" y="692" width="4" height="15" fill="rgb(240,44,6)"/><text x="634.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="631" y="708" width="4" height="15" fill="rgb(246,200,27)"/><text x="634.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="631" y="724" width="4" height="15" fill="rgb(206,146,32)"/><text x="634.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="631" y="740" width="4" height="15" fill="rgb(218,167,54)"/><text x="634.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="631" y="756" width="4" height="15" fill="rgb(207,229,35)"/><text x="634.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.39%)</title><rect x="631" y="772" width="4" height="15" fill="rgb(248,60,38)"/><text x="634.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.39%)</title><rect x="631" y="788" width="4" height="15" fill="rgb(236,118,10)"/><text x="634.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="631" y="804" width="4" height="15" fill="rgb(242,10,42)"/><text x="634.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="631" y="820" width="4" height="15" fill="rgb(239,8,34)"/><text x="634.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="631" y="836" width="4" height="15" fill="rgb(238,225,29)"/><text x="634.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="631" y="852" width="4" height="15" fill="rgb(220,53,13)"/><text x="634.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="631" y="868" width="4" height="15" fill="rgb(213,11,48)"/><text x="634.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="631" y="884" width="4" height="15" fill="rgb(234,210,2)"/><text x="634.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.19%)</title><rect x="633" y="900" width="2" height="15" fill="rgb(218,175,24)"/><text x="636.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="633" y="916" width="2" height="15" fill="rgb(223,23,30)"/><text x="636.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="633" y="932" width="2" height="15" fill="rgb(249,63,12)"/><text x="636.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="633" y="948" width="2" height="15" fill="rgb(205,196,46)"/><text x="636.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="633" y="964" width="2" height="15" fill="rgb(220,185,20)"/><text x="636.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="633" y="980" width="2" height="15" fill="rgb(235,189,25)"/><text x="636.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="633" y="996" width="2" height="15" fill="rgb(211,4,38)"/><text x="636.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="633" y="1012" width="2" height="15" fill="rgb(254,14,12)"/><text x="636.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:741) (1 samples, 0.19%)</title><rect x="633" y="1028" width="2" height="15" fill="rgb(207,116,21)"/><text x="636.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.19%)</title><rect x="633" y="1044" width="2" height="15" fill="rgb(242,9,13)"/><text x="636.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.19%)</title><rect x="633" y="1060" width="2" height="15" fill="rgb(253,61,48)"/><text x="636.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:68) (1 samples, 0.19%)</title><rect x="633" y="1076" width="2" height="15" fill="rgb(213,224,50)"/><text x="636.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (4 samples, 0.78%)</title><rect x="628" y="148" width="9" height="15" fill="rgb(207,48,8)"/><text x="631.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="628" y="164" width="9" height="15" fill="rgb(222,134,17)"/><text x="631.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="635" y="180" width="2" height="15" fill="rgb(250,161,9)"/><text x="638.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="635" y="196" width="2" height="15" fill="rgb(226,19,7)"/><text x="638.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="635" y="212" width="2" height="15" fill="rgb(232,58,46)"/><text x="638.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="635" y="228" width="2" height="15" fill="rgb(246,105,16)"/><text x="638.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.19%)</title><rect x="635" y="244" width="2" height="15" fill="rgb(207,163,23)"/><text x="638.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="635" y="260" width="2" height="15" fill="rgb(208,32,17)"/><text x="638.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="635" y="276" width="2" height="15" fill="rgb(219,136,14)"/><text x="638.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="635" y="292" width="2" height="15" fill="rgb(209,136,5)"/><text x="638.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="635" y="308" width="2" height="15" fill="rgb(216,139,43)"/><text x="638.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="635" y="324" width="2" height="15" fill="rgb(219,99,12)"/><text x="638.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:54) (1 samples, 0.19%)</title><rect x="635" y="340" width="2" height="15" fill="rgb(224,181,44)"/><text x="638.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="635" y="356" width="2" height="15" fill="rgb(209,159,9)"/><text x="638.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="635" y="372" width="2" height="15" fill="rgb(221,9,40)"/><text x="638.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="635" y="388" width="2" height="15" fill="rgb(209,176,11)"/><text x="638.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="635" y="404" width="2" height="15" fill="rgb(227,228,54)"/><text x="638.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="635" y="420" width="2" height="15" fill="rgb(206,168,21)"/><text x="638.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:7) (1 samples, 0.19%)</title><rect x="635" y="436" width="2" height="15" fill="rgb(225,101,43)"/><text x="638.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="635" y="452" width="2" height="15" fill="rgb(241,84,52)"/><text x="638.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="635" y="468" width="2" height="15" fill="rgb(251,143,42)"/><text x="638.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="635" y="484" width="2" height="15" fill="rgb(231,187,4)"/><text x="638.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="635" y="500" width="2" height="15" fill="rgb(232,147,36)"/><text x="638.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="635" y="516" width="2" height="15" fill="rgb(251,186,47)"/><text x="638.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/_ranking.py:35) (1 samples, 0.19%)</title><rect x="635" y="532" width="2" height="15" fill="rgb(206,52,8)"/><text x="638.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="635" y="548" width="2" height="15" fill="rgb(222,51,28)"/><text x="638.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="635" y="564" width="2" height="15" fill="rgb(224,176,3)"/><text x="638.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="635" y="580" width="2" height="15" fill="rgb(235,132,6)"/><text x="638.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="635" y="596" width="2" height="15" fill="rgb(220,137,14)"/><text x="638.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="635" y="612" width="2" height="15" fill="rgb(209,82,8)"/><text x="638.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py:8) (1 samples, 0.19%)</title><rect x="635" y="628" width="2" height="15" fill="rgb(235,170,10)"/><text x="638.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="635" y="644" width="2" height="15" fill="rgb(211,204,0)"/><text x="638.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="635" y="660" width="2" height="15" fill="rgb(221,183,16)"/><text x="638.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="635" y="676" width="2" height="15" fill="rgb(230,55,18)"/><text x="638.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="635" y="692" width="2" height="15" fill="rgb(211,200,42)"/><text x="638.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="635" y="708" width="2" height="15" fill="rgb(225,204,19)"/><text x="638.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_data.py:34) (1 samples, 0.19%)</title><rect x="635" y="724" width="2" height="15" fill="rgb(235,121,19)"/><text x="638.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="635" y="740" width="2" height="15" fill="rgb(252,3,40)"/><text x="638.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="635" y="756" width="2" height="15" fill="rgb(254,20,54)"/><text x="638.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="635" y="772" width="2" height="15" fill="rgb(221,49,17)"/><text x="638.00" y="782.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.19%)</title><rect x="635" y="788" width="2" height="15" fill="rgb(223,44,40)"/><text x="638.00" y="798.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.19%)</title><rect x="635" y="804" width="2" height="15" fill="rgb(236,149,14)"/><text x="638.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="635" y="820" width="2" height="15" fill="rgb(209,12,40)"/><text x="638.00" y="830.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="836" width="2" height="15" fill="rgb(234,28,44)"/><text x="638.00" y="846.50"></text></g><g><title>0x7fedc059a995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="852" width="2" height="15" fill="rgb(224,15,37)"/><text x="638.00" y="862.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="868" width="2" height="15" fill="rgb(231,22,46)"/><text x="638.00" y="878.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="884" width="2" height="15" fill="rgb(220,192,53)"/><text x="638.00" y="894.50"></text></g><g><title>0x7fedc059a258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="900" width="2" height="15" fill="rgb(251,138,11)"/><text x="638.00" y="910.50"></text></g><g><title>0x7fedc05e7d7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="916" width="2" height="15" fill="rgb(237,73,19)"/><text x="638.00" y="926.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="932" width="2" height="15" fill="rgb(226,31,22)"/><text x="638.00" y="942.50"></text></g><g><title>0x7fedc05e818b (ld-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="948" width="2" height="15" fill="rgb(212,10,15)"/><text x="638.00" y="958.50"></text></g><g><title>0x7fedc05ddc1a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="964" width="2" height="15" fill="rgb(222,87,25)"/><text x="638.00" y="974.50"></text></g><g><title>0x7fedc05db2ee (ld-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="980" width="2" height="15" fill="rgb(243,65,28)"/><text x="638.00" y="990.50"></text></g><g><title>0x7fedc05efc77 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="635" y="996" width="2" height="15" fill="rgb(241,214,31)"/><text x="638.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.19%)</title><rect x="637" y="244" width="3" height="15" fill="rgb(213,138,22)"/><text x="640.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="260" width="3" height="15" fill="rgb(247,43,46)"/><text x="640.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="276" width="3" height="15" fill="rgb(212,78,6)"/><text x="640.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="292" width="3" height="15" fill="rgb(225,13,48)"/><text x="640.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="308" width="3" height="15" fill="rgb(239,102,43)"/><text x="640.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="324" width="3" height="15" fill="rgb(234,126,39)"/><text x="640.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.19%)</title><rect x="637" y="340" width="3" height="15" fill="rgb(231,135,10)"/><text x="640.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="356" width="3" height="15" fill="rgb(226,133,12)"/><text x="640.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="637" y="372" width="3" height="15" fill="rgb(249,96,39)"/><text x="640.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="388" width="3" height="15" fill="rgb(247,209,54)"/><text x="640.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="404" width="3" height="15" fill="rgb(237,68,28)"/><text x="640.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="420" width="3" height="15" fill="rgb(212,14,22)"/><text x="640.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="436" width="3" height="15" fill="rgb(216,214,42)"/><text x="640.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="452" width="3" height="15" fill="rgb(232,1,2)"/><text x="640.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="468" width="3" height="15" fill="rgb(206,40,46)"/><text x="640.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.19%)</title><rect x="637" y="484" width="3" height="15" fill="rgb(234,149,48)"/><text x="640.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="500" width="3" height="15" fill="rgb(246,122,48)"/><text x="640.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="516" width="3" height="15" fill="rgb(252,10,29)"/><text x="640.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="532" width="3" height="15" fill="rgb(210,122,28)"/><text x="640.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="548" width="3" height="15" fill="rgb(224,112,44)"/><text x="640.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="564" width="3" height="15" fill="rgb(252,186,4)"/><text x="640.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.19%)</title><rect x="637" y="580" width="3" height="15" fill="rgb(235,44,37)"/><text x="640.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="596" width="3" height="15" fill="rgb(208,10,3)"/><text x="640.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="612" width="3" height="15" fill="rgb(235,37,46)"/><text x="640.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="628" width="3" height="15" fill="rgb(245,35,31)"/><text x="640.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="644" width="3" height="15" fill="rgb(211,131,20)"/><text x="640.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="660" width="3" height="15" fill="rgb(223,40,2)"/><text x="640.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.19%)</title><rect x="637" y="676" width="3" height="15" fill="rgb(240,132,26)"/><text x="640.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="692" width="3" height="15" fill="rgb(247,141,1)"/><text x="640.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="708" width="3" height="15" fill="rgb(221,188,1)"/><text x="640.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="724" width="3" height="15" fill="rgb(210,219,29)"/><text x="640.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="740" width="3" height="15" fill="rgb(218,117,10)"/><text x="640.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="756" width="3" height="15" fill="rgb(213,183,22)"/><text x="640.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.19%)</title><rect x="637" y="772" width="3" height="15" fill="rgb(243,124,38)"/><text x="640.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="637" y="788" width="3" height="15" fill="rgb(219,73,16)"/><text x="640.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="804" width="3" height="15" fill="rgb(251,136,20)"/><text x="640.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="820" width="3" height="15" fill="rgb(220,161,49)"/><text x="640.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="836" width="3" height="15" fill="rgb(224,19,43)"/><text x="640.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="852" width="3" height="15" fill="rgb(250,15,50)"/><text x="640.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="868" width="3" height="15" fill="rgb(220,58,24)"/><text x="640.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="884" width="3" height="15" fill="rgb(210,34,11)"/><text x="640.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.19%)</title><rect x="637" y="900" width="3" height="15" fill="rgb(220,190,1)"/><text x="640.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="916" width="3" height="15" fill="rgb(227,151,48)"/><text x="640.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="637" y="932" width="3" height="15" fill="rgb(241,100,23)"/><text x="640.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="948" width="3" height="15" fill="rgb(254,95,21)"/><text x="640.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="964" width="3" height="15" fill="rgb(234,14,10)"/><text x="640.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="980" width="3" height="15" fill="rgb(238,47,6)"/><text x="640.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="996" width="3" height="15" fill="rgb(208,83,26)"/><text x="640.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="1012" width="3" height="15" fill="rgb(241,13,30)"/><text x="640.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="1028" width="3" height="15" fill="rgb(233,187,6)"/><text x="640.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.19%)</title><rect x="637" y="1044" width="3" height="15" fill="rgb(231,46,2)"/><text x="640.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="637" y="1060" width="3" height="15" fill="rgb(212,117,51)"/><text x="640.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="1076" width="3" height="15" fill="rgb(213,123,7)"/><text x="640.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="1092" width="3" height="15" fill="rgb(209,22,30)"/><text x="640.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="1108" width="3" height="15" fill="rgb(221,18,48)"/><text x="640.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="1124" width="3" height="15" fill="rgb(219,26,35)"/><text x="640.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="1140" width="3" height="15" fill="rgb(223,76,48)"/><text x="640.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="1156" width="3" height="15" fill="rgb(228,160,24)"/><text x="640.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.19%)</title><rect x="637" y="1172" width="3" height="15" fill="rgb(234,41,1)"/><text x="640.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="637" y="1188" width="3" height="15" fill="rgb(230,35,42)"/><text x="640.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="1204" width="3" height="15" fill="rgb(231,155,37)"/><text x="640.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="1220" width="3" height="15" fill="rgb(253,132,41)"/><text x="640.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="1236" width="3" height="15" fill="rgb(237,58,30)"/><text x="640.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="1252" width="3" height="15" fill="rgb(247,94,12)"/><text x="640.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="1268" width="3" height="15" fill="rgb(215,35,27)"/><text x="640.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="1284" width="3" height="15" fill="rgb(220,144,43)"/><text x="640.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.19%)</title><rect x="637" y="1300" width="3" height="15" fill="rgb(209,111,47)"/><text x="640.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="1316" width="3" height="15" fill="rgb(246,32,34)"/><text x="640.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="637" y="1332" width="3" height="15" fill="rgb(235,187,29)"/><text x="640.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="637" y="1348" width="3" height="15" fill="rgb(237,26,37)"/><text x="640.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="637" y="1364" width="3" height="15" fill="rgb(207,94,8)"/><text x="640.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="1380" width="3" height="15" fill="rgb(236,102,20)"/><text x="640.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:15) (1 samples, 0.19%)</title><rect x="637" y="1396" width="3" height="15" fill="rgb(215,144,31)"/><text x="640.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="637" y="1412" width="3" height="15" fill="rgb(250,65,25)"/><text x="640.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="637" y="1428" width="3" height="15" fill="rgb(253,11,12)"/><text x="640.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="637" y="1444" width="3" height="15" fill="rgb(243,29,35)"/><text x="640.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="637" y="1460" width="3" height="15" fill="rgb(221,210,35)"/><text x="640.00" y="1470.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="637" y="1476" width="3" height="15" fill="rgb(231,44,15)"/><text x="640.00" y="1486.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="637" y="1492" width="3" height="15" fill="rgb(237,172,7)"/><text x="640.00" y="1502.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.19%)</title><rect x="637" y="1508" width="3" height="15" fill="rgb(212,160,25)"/><text x="640.00" y="1518.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.19%)</title><rect x="637" y="1524" width="3" height="15" fill="rgb(244,192,16)"/><text x="640.00" y="1534.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1432) (1 samples, 0.19%)</title><rect x="637" y="1540" width="3" height="15" fill="rgb(224,181,28)"/><text x="640.00" y="1550.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="637" y="1556" width="3" height="15" fill="rgb(207,1,24)"/><text x="640.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.19%)</title><rect x="640" y="340" width="2" height="15" fill="rgb(214,61,14)"/><text x="643.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="640" y="356" width="2" height="15" fill="rgb(236,101,34)"/><text x="643.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="640" y="372" width="2" height="15" fill="rgb(231,98,39)"/><text x="643.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="640" y="388" width="2" height="15" fill="rgb(239,16,29)"/><text x="643.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="640" y="404" width="2" height="15" fill="rgb(221,46,45)"/><text x="643.00" y="414.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="640" y="420" width="2" height="15" fill="rgb(219,151,29)"/><text x="643.00" y="430.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="640" y="436" width="2" height="15" fill="rgb(226,110,52)"/><text x="643.00" y="446.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.19%)</title><rect x="642" y="628" width="2" height="15" fill="rgb(225,14,10)"/><text x="645.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="644" width="2" height="15" fill="rgb(215,137,9)"/><text x="645.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="660" width="2" height="15" fill="rgb(238,99,0)"/><text x="645.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="676" width="2" height="15" fill="rgb(217,54,37)"/><text x="645.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="642" y="692" width="2" height="15" fill="rgb(232,81,49)"/><text x="645.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="708" width="2" height="15" fill="rgb(207,81,35)"/><text x="645.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.19%)</title><rect x="642" y="724" width="2" height="15" fill="rgb(216,9,28)"/><text x="645.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="740" width="2" height="15" fill="rgb(244,212,24)"/><text x="645.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="756" width="2" height="15" fill="rgb(214,213,28)"/><text x="645.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="772" width="2" height="15" fill="rgb(212,168,28)"/><text x="645.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="642" y="788" width="2" height="15" fill="rgb(247,29,1)"/><text x="645.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="804" width="2" height="15" fill="rgb(209,25,18)"/><text x="645.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.19%)</title><rect x="642" y="820" width="2" height="15" fill="rgb(207,189,39)"/><text x="645.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="836" width="2" height="15" fill="rgb(223,149,45)"/><text x="645.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="852" width="2" height="15" fill="rgb(254,92,1)"/><text x="645.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="868" width="2" height="15" fill="rgb(240,215,6)"/><text x="645.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="642" y="884" width="2" height="15" fill="rgb(237,28,37)"/><text x="645.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="900" width="2" height="15" fill="rgb(241,6,54)"/><text x="645.00" y="910.50"></text></g><g><title>0x7fed9584340e (?) (1 samples, 0.19%)</title><rect x="642" y="916" width="2" height="15" fill="rgb(236,102,44)"/><text x="645.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="932" width="2" height="15" fill="rgb(224,147,35)"/><text x="645.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="948" width="2" height="15" fill="rgb(213,169,16)"/><text x="645.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="964" width="2" height="15" fill="rgb(212,42,2)"/><text x="645.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="642" y="980" width="2" height="15" fill="rgb(250,16,4)"/><text x="645.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="996" width="2" height="15" fill="rgb(213,58,30)"/><text x="645.00" y="1006.50"></text></g><g><title>0x7fed955fccd2 (?) (1 samples, 0.19%)</title><rect x="642" y="1012" width="2" height="15" fill="rgb(209,146,19)"/><text x="645.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="1028" width="2" height="15" fill="rgb(209,45,15)"/><text x="645.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="1044" width="2" height="15" fill="rgb(228,191,35)"/><text x="645.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="1060" width="2" height="15" fill="rgb(238,229,34)"/><text x="645.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="642" y="1076" width="2" height="15" fill="rgb(207,30,31)"/><text x="645.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="1092" width="2" height="15" fill="rgb(252,169,54)"/><text x="645.00" y="1102.50"></text></g><g><title>0x7fed94cf20e5 (?) (1 samples, 0.19%)</title><rect x="642" y="1108" width="2" height="15" fill="rgb(206,79,35)"/><text x="645.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="1124" width="2" height="15" fill="rgb(226,197,12)"/><text x="645.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="1140" width="2" height="15" fill="rgb(216,1,28)"/><text x="645.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="1156" width="2" height="15" fill="rgb(254,21,16)"/><text x="645.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="642" y="1172" width="2" height="15" fill="rgb(231,141,16)"/><text x="645.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="1188" width="2" height="15" fill="rgb(233,173,13)"/><text x="645.00" y="1198.50"></text></g><g><title>0x7fed94a76e68 (?) (1 samples, 0.19%)</title><rect x="642" y="1204" width="2" height="15" fill="rgb(220,62,31)"/><text x="645.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="1220" width="2" height="15" fill="rgb(236,121,2)"/><text x="645.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="1236" width="2" height="15" fill="rgb(209,178,21)"/><text x="645.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="1252" width="2" height="15" fill="rgb(223,204,46)"/><text x="645.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="642" y="1268" width="2" height="15" fill="rgb(238,111,5)"/><text x="645.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="1284" width="2" height="15" fill="rgb(250,134,9)"/><text x="645.00" y="1294.50"></text></g><g><title>0x7fed948072fb (?) (1 samples, 0.19%)</title><rect x="642" y="1300" width="2" height="15" fill="rgb(253,83,49)"/><text x="645.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="1316" width="2" height="15" fill="rgb(237,196,26)"/><text x="645.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="1332" width="2" height="15" fill="rgb(232,205,36)"/><text x="645.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="1348" width="2" height="15" fill="rgb(227,133,4)"/><text x="645.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="642" y="1364" width="2" height="15" fill="rgb(233,129,50)"/><text x="645.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="1380" width="2" height="15" fill="rgb(245,183,44)"/><text x="645.00" y="1390.50"></text></g><g><title>0x7fed945eb153 (?) (1 samples, 0.19%)</title><rect x="642" y="1396" width="2" height="15" fill="rgb(236,175,19)"/><text x="645.00" y="1406.50"></text></g><g><title>0x7fed945e9c13 (?) (1 samples, 0.19%)</title><rect x="642" y="1412" width="2" height="15" fill="rgb(243,212,16)"/><text x="645.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="642" y="1428" width="2" height="15" fill="rgb(242,11,8)"/><text x="645.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="642" y="1444" width="2" height="15" fill="rgb(226,119,25)"/><text x="645.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="642" y="1460" width="2" height="15" fill="rgb(209,120,1)"/><text x="645.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="642" y="1476" width="2" height="15" fill="rgb(224,226,3)"/><text x="645.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="642" y="1492" width="2" height="15" fill="rgb(237,86,0)"/><text x="645.00" y="1502.50"></text></g><g><title>0x7fed94386181 (?) (1 samples, 0.19%)</title><rect x="642" y="1508" width="2" height="15" fill="rgb(225,196,41)"/><text x="645.00" y="1518.50"></text></g><g><title>0x7fed943891c9 (?) (1 samples, 0.19%)</title><rect x="642" y="1524" width="2" height="15" fill="rgb(206,108,19)"/><text x="645.00" y="1534.50"></text></g><g><title>0x7fed943b5167 (?) (1 samples, 0.19%)</title><rect x="642" y="1540" width="2" height="15" fill="rgb(235,168,16)"/><text x="645.00" y="1550.50"></text></g><g><title>0x7fed943b0b64 (?) (1 samples, 0.19%)</title><rect x="642" y="1556" width="2" height="15" fill="rgb(211,59,38)"/><text x="645.00" y="1566.50"></text></g><g><title>0x7fed94394b18 (?) (1 samples, 0.19%)</title><rect x="642" y="1572" width="2" height="15" fill="rgb(234,137,10)"/><text x="645.00" y="1582.50"></text></g><g><title>0x7fed94388ce5 (?) (1 samples, 0.19%)</title><rect x="642" y="1588" width="2" height="15" fill="rgb(231,124,14)"/><text x="645.00" y="1598.50"></text></g><g><title>0x7fed943b5667 (?) (1 samples, 0.19%)</title><rect x="642" y="1604" width="2" height="15" fill="rgb(206,206,22)"/><text x="645.00" y="1614.50"></text></g><g><title>0x7fed94395535 (?) (1 samples, 0.19%)</title><rect x="642" y="1620" width="2" height="15" fill="rgb(243,168,26)"/><text x="645.00" y="1630.50"></text></g><g><title>escape (re.py:257) (1 samples, 0.19%)</title><rect x="642" y="1636" width="2" height="15" fill="rgb(254,167,44)"/><text x="645.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.19%)</title><rect x="644" y="820" width="3" height="15" fill="rgb(207,27,39)"/><text x="647.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="644" y="836" width="3" height="15" fill="rgb(216,90,47)"/><text x="647.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="644" y="852" width="3" height="15" fill="rgb(233,99,26)"/><text x="647.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="644" y="868" width="3" height="15" fill="rgb(246,34,14)"/><text x="647.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="644" y="884" width="3" height="15" fill="rgb(212,90,0)"/><text x="647.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="644" y="900" width="3" height="15" fill="rgb(208,101,17)"/><text x="647.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.19%)</title><rect x="644" y="916" width="3" height="15" fill="rgb(213,28,48)"/><text x="647.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="644" y="932" width="3" height="15" fill="rgb(243,162,40)"/><text x="647.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="644" y="948" width="3" height="15" fill="rgb(253,57,10)"/><text x="647.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="644" y="964" width="3" height="15" fill="rgb(219,102,18)"/><text x="647.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="644" y="980" width="3" height="15" fill="rgb(220,158,16)"/><text x="647.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="644" y="996" width="3" height="15" fill="rgb(230,68,54)"/><text x="647.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.19%)</title><rect x="644" y="1012" width="3" height="15" fill="rgb(214,2,22)"/><text x="647.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="644" y="1028" width="3" height="15" fill="rgb(221,69,24)"/><text x="647.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="644" y="1044" width="3" height="15" fill="rgb(236,101,23)"/><text x="647.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="644" y="1060" width="3" height="15" fill="rgb(242,220,20)"/><text x="647.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="644" y="1076" width="3" height="15" fill="rgb(252,91,0)"/><text x="647.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="644" y="1092" width="3" height="15" fill="rgb(228,117,7)"/><text x="647.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.19%)</title><rect x="644" y="1108" width="3" height="15" fill="rgb(217,203,26)"/><text x="647.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="644" y="1124" width="3" height="15" fill="rgb(224,210,19)"/><text x="647.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="644" y="1140" width="3" height="15" fill="rgb(207,226,34)"/><text x="647.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="644" y="1156" width="3" height="15" fill="rgb(225,86,51)"/><text x="647.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="644" y="1172" width="3" height="15" fill="rgb(221,19,32)"/><text x="647.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="644" y="1188" width="3" height="15" fill="rgb(227,24,4)"/><text x="647.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.19%)</title><rect x="644" y="1204" width="3" height="15" fill="rgb(224,49,6)"/><text x="647.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="644" y="1220" width="3" height="15" fill="rgb(221,48,52)"/><text x="647.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="644" y="1236" width="3" height="15" fill="rgb(206,105,18)"/><text x="647.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="644" y="1252" width="3" height="15" fill="rgb(238,168,52)"/><text x="647.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="644" y="1268" width="3" height="15" fill="rgb(235,160,30)"/><text x="647.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="644" y="1284" width="3" height="15" fill="rgb(232,6,40)"/><text x="647.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.19%)</title><rect x="644" y="1300" width="3" height="15" fill="rgb(246,154,1)"/><text x="647.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="644" y="1316" width="3" height="15" fill="rgb(224,178,3)"/><text x="647.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="644" y="1332" width="3" height="15" fill="rgb(248,31,22)"/><text x="647.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="644" y="1348" width="3" height="15" fill="rgb(206,10,2)"/><text x="647.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="644" y="1364" width="3" height="15" fill="rgb(229,215,40)"/><text x="647.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="644" y="1380" width="3" height="15" fill="rgb(244,81,41)"/><text x="647.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.19%)</title><rect x="644" y="1396" width="3" height="15" fill="rgb(239,73,31)"/><text x="647.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="644" y="1412" width="3" height="15" fill="rgb(252,181,41)"/><text x="647.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="644" y="1428" width="3" height="15" fill="rgb(216,194,41)"/><text x="647.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="644" y="1444" width="3" height="15" fill="rgb(244,170,6)"/><text x="647.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="644" y="1460" width="3" height="15" fill="rgb(224,91,38)"/><text x="647.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="644" y="1476" width="3" height="15" fill="rgb(212,137,37)"/><text x="647.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="644" y="1492" width="3" height="15" fill="rgb(243,117,9)"/><text x="647.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.39%)</title><rect x="644" y="724" width="5" height="15" fill="rgb(248,41,33)"/><text x="647.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="644" y="740" width="5" height="15" fill="rgb(210,146,28)"/><text x="647.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="644" y="756" width="5" height="15" fill="rgb(233,229,45)"/><text x="647.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="644" y="772" width="5" height="15" fill="rgb(252,32,13)"/><text x="647.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="644" y="788" width="5" height="15" fill="rgb(249,68,50)"/><text x="647.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="644" y="804" width="5" height="15" fill="rgb(225,170,29)"/><text x="647.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:7) (1 samples, 0.19%)</title><rect x="647" y="820" width="2" height="15" fill="rgb(252,76,16)"/><text x="650.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="647" y="836" width="2" height="15" fill="rgb(239,127,14)"/><text x="650.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="647" y="852" width="2" height="15" fill="rgb(208,223,51)"/><text x="650.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="647" y="868" width="2" height="15" fill="rgb(246,138,13)"/><text x="650.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="647" y="884" width="2" height="15" fill="rgb(248,208,24)"/><text x="650.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="647" y="900" width="2" height="15" fill="rgb(219,40,43)"/><text x="650.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="647" y="916" width="2" height="15" fill="rgb(205,4,24)"/><text x="650.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="649" y="1268" width="2" height="15" fill="rgb(225,201,3)"/><text x="652.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="649" y="1284" width="2" height="15" fill="rgb(234,198,8)"/><text x="652.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="649" y="1300" width="2" height="15" fill="rgb(243,124,24)"/><text x="652.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="649" y="1316" width="2" height="15" fill="rgb(227,40,5)"/><text x="652.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="649" y="1332" width="2" height="15" fill="rgb(236,19,42)"/><text x="652.00" y="1342.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.19%)</title><rect x="649" y="1348" width="2" height="15" fill="rgb(210,185,1)"/><text x="652.00" y="1358.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.19%)</title><rect x="649" y="1364" width="2" height="15" fill="rgb(241,188,40)"/><text x="652.00" y="1374.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.19%)</title><rect x="649" y="1380" width="2" height="15" fill="rgb(213,89,31)"/><text x="652.00" y="1390.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.19%)</title><rect x="649" y="1396" width="2" height="15" fill="rgb(209,48,33)"/><text x="652.00" y="1406.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.19%)</title><rect x="649" y="1412" width="2" height="15" fill="rgb(243,61,31)"/><text x="652.00" y="1422.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.19%)</title><rect x="649" y="1428" width="2" height="15" fill="rgb(236,183,23)"/><text x="652.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 0.97%)</title><rect x="642" y="436" width="12" height="15" fill="rgb(213,140,45)"/><text x="645.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="642" y="452" width="12" height="15" fill="rgb(247,215,39)"/><text x="645.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="642" y="468" width="12" height="15" fill="rgb(253,131,6)"/><text x="645.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="642" y="484" width="12" height="15" fill="rgb(216,67,9)"/><text x="645.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="642" y="500" width="12" height="15" fill="rgb(221,116,52)"/><text x="645.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="642" y="516" width="12" height="15" fill="rgb(223,191,31)"/><text x="645.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 0.97%)</title><rect x="642" y="532" width="12" height="15" fill="rgb(225,198,34)"/><text x="645.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="642" y="548" width="12" height="15" fill="rgb(206,24,13)"/><text x="645.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="642" y="564" width="12" height="15" fill="rgb(245,121,52)"/><text x="645.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="642" y="580" width="12" height="15" fill="rgb(235,211,40)"/><text x="645.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="642" y="596" width="12" height="15" fill="rgb(235,71,27)"/><text x="645.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="642" y="612" width="12" height="15" fill="rgb(223,182,52)"/><text x="645.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 0.78%)</title><rect x="644" y="628" width="10" height="15" fill="rgb(224,44,23)"/><text x="647.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="644" y="644" width="10" height="15" fill="rgb(249,73,25)"/><text x="647.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="644" y="660" width="10" height="15" fill="rgb(248,215,49)"/><text x="647.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="644" y="676" width="10" height="15" fill="rgb(253,220,44)"/><text x="647.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.78%)</title><rect x="644" y="692" width="10" height="15" fill="rgb(227,104,54)"/><text x="647.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="644" y="708" width="10" height="15" fill="rgb(228,98,34)"/><text x="647.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (2 samples, 0.39%)</title><rect x="649" y="724" width="5" height="15" fill="rgb(234,81,14)"/><text x="652.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="649" y="740" width="5" height="15" fill="rgb(218,99,26)"/><text x="652.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="649" y="756" width="5" height="15" fill="rgb(247,208,21)"/><text x="652.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="649" y="772" width="5" height="15" fill="rgb(222,153,16)"/><text x="652.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="649" y="788" width="5" height="15" fill="rgb(232,78,29)"/><text x="652.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="649" y="804" width="5" height="15" fill="rgb(239,51,8)"/><text x="652.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="649" y="820" width="5" height="15" fill="rgb(242,193,12)"/><text x="652.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="649" y="836" width="5" height="15" fill="rgb(236,110,42)"/><text x="652.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="649" y="852" width="5" height="15" fill="rgb(218,54,46)"/><text x="652.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (2 samples, 0.39%)</title><rect x="649" y="868" width="5" height="15" fill="rgb(227,124,12)"/><text x="652.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="649" y="884" width="5" height="15" fill="rgb(244,129,43)"/><text x="652.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="649" y="900" width="5" height="15" fill="rgb(214,131,37)"/><text x="652.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="649" y="916" width="5" height="15" fill="rgb(208,3,53)"/><text x="652.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="649" y="932" width="5" height="15" fill="rgb(228,142,49)"/><text x="652.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="649" y="948" width="5" height="15" fill="rgb(250,36,8)"/><text x="652.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:14) (2 samples, 0.39%)</title><rect x="649" y="964" width="5" height="15" fill="rgb(223,136,5)"/><text x="652.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.39%)</title><rect x="649" y="980" width="5" height="15" fill="rgb(243,76,11)"/><text x="652.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="649" y="996" width="5" height="15" fill="rgb(232,92,38)"/><text x="652.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="649" y="1012" width="5" height="15" fill="rgb(229,49,32)"/><text x="652.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="649" y="1028" width="5" height="15" fill="rgb(252,141,6)"/><text x="652.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="649" y="1044" width="5" height="15" fill="rgb(220,135,46)"/><text x="652.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="649" y="1060" width="5" height="15" fill="rgb(241,8,35)"/><text x="652.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="649" y="1076" width="5" height="15" fill="rgb(230,79,21)"/><text x="652.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py:28) (2 samples, 0.39%)</title><rect x="649" y="1092" width="5" height="15" fill="rgb(223,180,32)"/><text x="652.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="649" y="1108" width="5" height="15" fill="rgb(216,129,17)"/><text x="652.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="649" y="1124" width="5" height="15" fill="rgb(212,75,40)"/><text x="652.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="649" y="1140" width="5" height="15" fill="rgb(210,215,2)"/><text x="652.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="649" y="1156" width="5" height="15" fill="rgb(248,89,29)"/><text x="652.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="649" y="1172" width="5" height="15" fill="rgb(234,79,54)"/><text x="652.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="649" y="1188" width="5" height="15" fill="rgb(248,136,50)"/><text x="652.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="649" y="1204" width="5" height="15" fill="rgb(221,120,16)"/><text x="652.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="649" y="1220" width="5" height="15" fill="rgb(241,176,35)"/><text x="652.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py:3) (2 samples, 0.39%)</title><rect x="649" y="1236" width="5" height="15" fill="rgb(216,21,23)"/><text x="652.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="649" y="1252" width="5" height="15" fill="rgb(231,136,32)"/><text x="652.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="651" y="1268" width="3" height="15" fill="rgb(207,9,38)"/><text x="654.00" y="1278.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="651" y="1284" width="3" height="15" fill="rgb(243,178,54)"/><text x="654.00" y="1294.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap&gt;:794) (1 samples, 0.19%)</title><rect x="651" y="1300" width="3" height="15" fill="rgb(243,198,53)"/><text x="654.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:21) (1 samples, 0.19%)</title><rect x="654" y="1204" width="2" height="15" fill="rgb(210,19,34)"/><text x="657.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="654" y="1220" width="2" height="15" fill="rgb(252,53,44)"/><text x="657.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="654" y="1236" width="2" height="15" fill="rgb(212,213,48)"/><text x="657.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="654" y="1252" width="2" height="15" fill="rgb(254,0,7)"/><text x="657.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="654" y="1268" width="2" height="15" fill="rgb(226,129,50)"/><text x="657.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="654" y="1284" width="2" height="15" fill="rgb(228,225,15)"/><text x="657.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="654" y="1300" width="2" height="15" fill="rgb(211,188,33)"/><text x="657.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.39%)</title><rect x="654" y="1108" width="4" height="15" fill="rgb(249,143,1)"/><text x="657.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="654" y="1124" width="4" height="15" fill="rgb(209,191,38)"/><text x="657.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="654" y="1140" width="4" height="15" fill="rgb(221,178,2)"/><text x="657.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="654" y="1156" width="4" height="15" fill="rgb(253,147,27)"/><text x="657.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="654" y="1172" width="4" height="15" fill="rgb(240,193,42)"/><text x="657.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="654" y="1188" width="4" height="15" fill="rgb(228,211,19)"/><text x="657.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.19%)</title><rect x="656" y="1204" width="2" height="15" fill="rgb(247,84,2)"/><text x="659.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="656" y="1220" width="2" height="15" fill="rgb(235,172,2)"/><text x="659.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="656" y="1236" width="2" height="15" fill="rgb(242,198,43)"/><text x="659.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="656" y="1252" width="2" height="15" fill="rgb(231,126,24)"/><text x="659.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="656" y="1268" width="2" height="15" fill="rgb(230,198,22)"/><text x="659.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="656" y="1284" width="2" height="15" fill="rgb(229,185,46)"/><text x="659.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.19%)</title><rect x="656" y="1300" width="2" height="15" fill="rgb(226,120,7)"/><text x="659.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.19%)</title><rect x="656" y="1316" width="2" height="15" fill="rgb(213,146,16)"/><text x="659.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.19%)</title><rect x="656" y="1332" width="2" height="15" fill="rgb(227,173,25)"/><text x="659.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.19%)</title><rect x="656" y="1348" width="2" height="15" fill="rgb(228,167,8)"/><text x="659.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.19%)</title><rect x="656" y="1364" width="2" height="15" fill="rgb(241,210,11)"/><text x="659.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:648) (1 samples, 0.19%)</title><rect x="656" y="1380" width="2" height="15" fill="rgb(230,194,52)"/><text x="659.00" y="1390.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.19%)</title><rect x="658" y="1492" width="2" height="15" fill="rgb(240,219,13)"/><text x="661.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.19%)</title><rect x="658" y="1508" width="2" height="15" fill="rgb(226,198,38)"/><text x="661.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.19%)</title><rect x="658" y="1524" width="2" height="15" fill="rgb(244,125,39)"/><text x="661.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.19%)</title><rect x="658" y="1540" width="2" height="15" fill="rgb(209,176,43)"/><text x="661.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="658" y="1556" width="2" height="15" fill="rgb(214,4,8)"/><text x="661.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:137) (1 samples, 0.19%)</title><rect x="658" y="1572" width="2" height="15" fill="rgb(249,198,13)"/><text x="661.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.19%)</title><rect x="658" y="1588" width="2" height="15" fill="rgb(214,69,29)"/><text x="661.00" y="1598.50"></text></g><g><title>getconstraint (skl2onnx/algebra/automation.py:169) (1 samples, 0.19%)</title><rect x="658" y="1604" width="2" height="15" fill="rgb(244,2,29)"/><text x="661.00" y="1614.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.19%)</title><rect x="660" y="1492" width="3" height="15" fill="rgb(248,190,54)"/><text x="663.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.19%)</title><rect x="660" y="1508" width="3" height="15" fill="rgb(235,118,12)"/><text x="663.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:4) (21 samples, 4.09%)</title><rect x="617" y="52" width="48" height="15" fill="rgb(213,109,40)"/><text x="620.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 4.09%)</title><rect x="617" y="68" width="48" height="15" fill="rgb(224,101,36)"/><text x="620.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 4.09%)</title><rect x="617" y="84" width="48" height="15" fill="rgb(216,195,7)"/><text x="620.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 4.09%)</title><rect x="617" y="100" width="48" height="15" fill="rgb(217,75,38)"/><text x="620.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 4.09%)</title><rect x="617" y="116" width="48" height="15" fill="rgb(206,226,5)"/><text x="620.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 4.09%)</title><rect x="617" y="132" width="48" height="15" fill="rgb(216,164,33)"/><text x="620.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (12 samples, 2.34%)</title><rect x="637" y="148" width="28" height="15" fill="rgb(238,100,21)"/><text x="640.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 2.34%)</title><rect x="637" y="164" width="28" height="15" fill="rgb(219,173,29)"/><text x="640.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 2.34%)</title><rect x="637" y="180" width="28" height="15" fill="rgb(249,52,53)"/><text x="640.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 2.34%)</title><rect x="637" y="196" width="28" height="15" fill="rgb(214,30,44)"/><text x="640.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 2.34%)</title><rect x="637" y="212" width="28" height="15" fill="rgb(223,38,0)"/><text x="640.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 2.34%)</title><rect x="637" y="228" width="28" height="15" fill="rgb(227,193,8)"/><text x="640.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (11 samples, 2.14%)</title><rect x="640" y="244" width="25" height="15" fill="rgb(250,220,7)"/><text x="643.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.14%)</title><rect x="640" y="260" width="25" height="15" fill="rgb(230,66,18)"/><text x="643.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.14%)</title><rect x="640" y="276" width="25" height="15" fill="rgb(237,136,6)"/><text x="643.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.14%)</title><rect x="640" y="292" width="25" height="15" fill="rgb(242,106,46)"/><text x="643.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.14%)</title><rect x="640" y="308" width="25" height="15" fill="rgb(213,131,21)"/><text x="643.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.14%)</title><rect x="640" y="324" width="25" height="15" fill="rgb(247,106,47)"/><text x="643.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (10 samples, 1.95%)</title><rect x="642" y="340" width="23" height="15" fill="rgb(206,179,13)"/><text x="645.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.95%)</title><rect x="642" y="356" width="23" height="15" fill="rgb(208,78,12)"/><text x="645.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.95%)</title><rect x="642" y="372" width="23" height="15" fill="rgb(223,118,48)"/><text x="645.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.95%)</title><rect x="642" y="388" width="23" height="15" fill="rgb(217,120,28)"/><text x="645.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.95%)</title><rect x="642" y="404" width="23" height="15" fill="rgb(248,54,42)"/><text x="645.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.95%)</title><rect x="642" y="420" width="23" height="15" fill="rgb(249,171,1)"/><text x="645.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 0.97%)</title><rect x="654" y="436" width="11" height="15" fill="rgb(225,77,33)"/><text x="657.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="452" width="11" height="15" fill="rgb(233,35,30)"/><text x="657.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.97%)</title><rect x="654" y="468" width="11" height="15" fill="rgb(237,123,30)"/><text x="657.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="484" width="11" height="15" fill="rgb(244,222,45)"/><text x="657.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="500" width="11" height="15" fill="rgb(253,116,5)"/><text x="657.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="654" y="516" width="11" height="15" fill="rgb(240,76,26)"/><text x="657.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="654" y="532" width="11" height="15" fill="rgb(227,200,23)"/><text x="657.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="654" y="548" width="11" height="15" fill="rgb(245,203,8)"/><text x="657.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="564" width="11" height="15" fill="rgb(224,180,23)"/><text x="657.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 0.97%)</title><rect x="654" y="580" width="11" height="15" fill="rgb(249,132,44)"/><text x="657.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="596" width="11" height="15" fill="rgb(246,122,31)"/><text x="657.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="654" y="612" width="11" height="15" fill="rgb(242,120,54)"/><text x="657.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="654" y="628" width="11" height="15" fill="rgb(252,23,28)"/><text x="657.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="654" y="644" width="11" height="15" fill="rgb(215,132,29)"/><text x="657.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="660" width="11" height="15" fill="rgb(254,224,30)"/><text x="657.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 0.97%)</title><rect x="654" y="676" width="11" height="15" fill="rgb(219,211,7)"/><text x="657.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="692" width="11" height="15" fill="rgb(217,61,25)"/><text x="657.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="654" y="708" width="11" height="15" fill="rgb(243,207,54)"/><text x="657.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="654" y="724" width="11" height="15" fill="rgb(235,213,34)"/><text x="657.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="654" y="740" width="11" height="15" fill="rgb(212,6,8)"/><text x="657.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="756" width="11" height="15" fill="rgb(249,8,31)"/><text x="657.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.97%)</title><rect x="654" y="772" width="11" height="15" fill="rgb(250,135,27)"/><text x="657.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="788" width="11" height="15" fill="rgb(213,213,3)"/><text x="657.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="654" y="804" width="11" height="15" fill="rgb(240,194,45)"/><text x="657.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="654" y="820" width="11" height="15" fill="rgb(210,37,4)"/><text x="657.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="654" y="836" width="11" height="15" fill="rgb(225,57,11)"/><text x="657.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="852" width="11" height="15" fill="rgb(232,137,24)"/><text x="657.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.97%)</title><rect x="654" y="868" width="11" height="15" fill="rgb(219,219,11)"/><text x="657.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="884" width="11" height="15" fill="rgb(227,66,14)"/><text x="657.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.97%)</title><rect x="654" y="900" width="11" height="15" fill="rgb(205,88,50)"/><text x="657.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="916" width="11" height="15" fill="rgb(238,39,46)"/><text x="657.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="932" width="11" height="15" fill="rgb(243,79,22)"/><text x="657.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="654" y="948" width="11" height="15" fill="rgb(210,214,1)"/><text x="657.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="654" y="964" width="11" height="15" fill="rgb(244,27,44)"/><text x="657.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="654" y="980" width="11" height="15" fill="rgb(206,17,23)"/><text x="657.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="996" width="11" height="15" fill="rgb(247,1,44)"/><text x="657.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.97%)</title><rect x="654" y="1012" width="11" height="15" fill="rgb(213,148,43)"/><text x="657.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.97%)</title><rect x="654" y="1028" width="11" height="15" fill="rgb(225,29,24)"/><text x="657.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.97%)</title><rect x="654" y="1044" width="11" height="15" fill="rgb(252,220,21)"/><text x="657.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.97%)</title><rect x="654" y="1060" width="11" height="15" fill="rgb(229,77,13)"/><text x="657.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.97%)</title><rect x="654" y="1076" width="11" height="15" fill="rgb(247,161,3)"/><text x="657.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.97%)</title><rect x="654" y="1092" width="11" height="15" fill="rgb(252,69,6)"/><text x="657.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.58%)</title><rect x="658" y="1108" width="7" height="15" fill="rgb(215,32,32)"/><text x="661.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.58%)</title><rect x="658" y="1124" width="7" height="15" fill="rgb(210,156,43)"/><text x="661.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="658" y="1140" width="7" height="15" fill="rgb(217,7,25)"/><text x="661.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="658" y="1156" width="7" height="15" fill="rgb(236,71,35)"/><text x="661.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="658" y="1172" width="7" height="15" fill="rgb(224,92,13)"/><text x="661.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="658" y="1188" width="7" height="15" fill="rgb(231,214,18)"/><text x="661.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="658" y="1204" width="7" height="15" fill="rgb(209,180,37)"/><text x="661.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="658" y="1220" width="7" height="15" fill="rgb(216,84,41)"/><text x="661.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.58%)</title><rect x="658" y="1236" width="7" height="15" fill="rgb(236,41,9)"/><text x="661.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.58%)</title><rect x="658" y="1252" width="7" height="15" fill="rgb(242,199,33)"/><text x="661.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="658" y="1268" width="7" height="15" fill="rgb(205,74,17)"/><text x="661.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="658" y="1284" width="7" height="15" fill="rgb(225,206,39)"/><text x="661.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="658" y="1300" width="7" height="15" fill="rgb(243,98,28)"/><text x="661.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="658" y="1316" width="7" height="15" fill="rgb(236,14,39)"/><text x="661.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="658" y="1332" width="7" height="15" fill="rgb(215,208,5)"/><text x="661.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="658" y="1348" width="7" height="15" fill="rgb(253,60,10)"/><text x="661.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.58%)</title><rect x="658" y="1364" width="7" height="15" fill="rgb(221,156,2)"/><text x="661.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="658" y="1380" width="7" height="15" fill="rgb(235,209,25)"/><text x="661.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="658" y="1396" width="7" height="15" fill="rgb(244,33,25)"/><text x="661.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="658" y="1412" width="7" height="15" fill="rgb(216,118,18)"/><text x="661.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="658" y="1428" width="7" height="15" fill="rgb(218,47,50)"/><text x="661.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="658" y="1444" width="7" height="15" fill="rgb(223,101,33)"/><text x="661.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.58%)</title><rect x="658" y="1460" width="7" height="15" fill="rgb(209,158,33)"/><text x="661.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.58%)</title><rect x="658" y="1476" width="7" height="15" fill="rgb(234,189,35)"/><text x="661.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.19%)</title><rect x="663" y="1492" width="2" height="15" fill="rgb(241,105,7)"/><text x="666.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1508" width="2" height="15" fill="rgb(207,103,19)"/><text x="666.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1524" width="2" height="15" fill="rgb(220,47,26)"/><text x="666.00" y="1534.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1540" width="2" height="15" fill="rgb(237,195,46)"/><text x="666.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver8::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1556" width="2" height="15" fill="rgb(252,16,1)"/><text x="666.00" y="1566.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::Expand_Onnx_ver8&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1572" width="2" height="15" fill="rgb(212,26,23)"/><text x="666.00" y="1582.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1588" width="2" height="15" fill="rgb(252,218,31)"/><text x="666.00" y="1598.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, true&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1604" width="2" height="15" fill="rgb(220,73,11)"/><text x="666.00" y="1614.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="663" y="1620" width="2" height="15" fill="rgb(222,188,7)"/><text x="666.00" y="1630.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="663" y="1636" width="2" height="15" fill="rgb(207,146,17)"/><text x="666.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="663" y="1652" width="2" height="15" fill="rgb(222,87,9)"/><text x="666.00" y="1662.50"></text></g><g><title>0x7fedc031400a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="663" y="1668" width="2" height="15" fill="rgb(236,225,41)"/><text x="666.00" y="1678.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="665" y="180" width="2" height="15" fill="rgb(252,147,27)"/><text x="668.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.78%)</title><rect x="667" y="180" width="10" height="15" fill="rgb(248,53,21)"/><text x="670.00" y="190.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.19%)</title><rect x="688" y="276" width="2" height="15" fill="rgb(217,133,52)"/><text x="691.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="690" y="292" width="3" height="15" fill="rgb(243,91,37)"/><text x="693.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (5 samples, 0.97%)</title><rect x="683" y="196" width="12" height="15" fill="rgb(250,59,53)"/><text x="686.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (5 samples, 0.97%)</title><rect x="683" y="212" width="12" height="15" fill="rgb(218,15,54)"/><text x="686.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (5 samples, 0.97%)</title><rect x="683" y="228" width="12" height="15" fill="rgb(210,79,40)"/><text x="686.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (4 samples, 0.78%)</title><rect x="686" y="244" width="9" height="15" fill="rgb(253,36,10)"/><text x="689.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.78%)</title><rect x="686" y="260" width="9" height="15" fill="rgb(246,95,27)"/><text x="689.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.39%)</title><rect x="690" y="276" width="5" height="15" fill="rgb(213,72,15)"/><text x="693.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.19%)</title><rect x="693" y="292" width="2" height="15" fill="rgb(252,16,34)"/><text x="696.00" y="302.50"></text></g><g><title>0x7fed80e70422 (?) (1 samples, 0.19%)</title><rect x="695" y="244" width="2" height="15" fill="rgb(247,55,7)"/><text x="698.00" y="254.50"></text></g><g><title>0x7fed80e7689e (?) (1 samples, 0.19%)</title><rect x="695" y="260" width="2" height="15" fill="rgb(234,82,1)"/><text x="698.00" y="270.50"></text></g><g><title>0x7fed80e7674f (?) (1 samples, 0.19%)</title><rect x="695" y="276" width="2" height="15" fill="rgb(230,91,27)"/><text x="698.00" y="286.50"></text></g><g><title>0x7fed80e7ca3a (?) (1 samples, 0.19%)</title><rect x="695" y="292" width="2" height="15" fill="rgb(215,171,25)"/><text x="698.00" y="302.50"></text></g><g><title>0x7fed8a2d8ab9 (?) (1 samples, 0.19%)</title><rect x="695" y="308" width="2" height="15" fill="rgb(222,69,11)"/><text x="698.00" y="318.50"></text></g><g><title>0x7fed8a2d9eab (?) (1 samples, 0.19%)</title><rect x="695" y="324" width="2" height="15" fill="rgb(238,124,7)"/><text x="698.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.19%)</title><rect x="697" y="276" width="3" height="15" fill="rgb(222,120,32)"/><text x="700.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.19%)</title><rect x="697" y="292" width="3" height="15" fill="rgb(234,1,22)"/><text x="700.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.19%)</title><rect x="697" y="308" width="3" height="15" fill="rgb(213,47,31)"/><text x="700.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.19%)</title><rect x="697" y="324" width="3" height="15" fill="rgb(242,224,15)"/><text x="700.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.19%)</title><rect x="697" y="340" width="3" height="15" fill="rgb(209,19,33)"/><text x="700.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.19%)</title><rect x="697" y="356" width="3" height="15" fill="rgb(221,10,18)"/><text x="700.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.19%)</title><rect x="697" y="372" width="3" height="15" fill="rgb(248,43,51)"/><text x="700.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.19%)</title><rect x="697" y="388" width="3" height="15" fill="rgb(221,181,31)"/><text x="700.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.19%)</title><rect x="697" y="404" width="3" height="15" fill="rgb(225,225,18)"/><text x="700.00" y="414.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.19%)</title><rect x="697" y="420" width="3" height="15" fill="rgb(251,143,1)"/><text x="700.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.19%)</title><rect x="697" y="436" width="3" height="15" fill="rgb(251,12,26)"/><text x="700.00" y="446.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (1 samples, 0.19%)</title><rect x="697" y="452" width="3" height="15" fill="rgb(249,152,46)"/><text x="700.00" y="462.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.19%)</title><rect x="697" y="468" width="3" height="15" fill="rgb(206,62,31)"/><text x="700.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.19%)</title><rect x="697" y="484" width="3" height="15" fill="rgb(245,80,5)"/><text x="700.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="697" y="500" width="3" height="15" fill="rgb(209,22,10)"/><text x="700.00" y="510.50"></text></g><g><title>0x7fed8a2d9ea9 (libgomp.so.1.0.0) (2 samples, 0.39%)</title><rect x="700" y="468" width="4" height="15" fill="rgb(249,133,39)"/><text x="703.00" y="478.50"></text></g><g><title>0x7fed8a2d9eab (libgomp.so.1.0.0) (2 samples, 0.39%)</title><rect x="704" y="468" width="5" height="15" fill="rgb(225,88,20)"/><text x="707.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (8 samples, 1.56%)</title><rect x="695" y="196" width="18" height="15" fill="rgb(244,90,44)"/><text x="698.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 1.56%)</title><rect x="695" y="212" width="18" height="15" fill="rgb(210,8,25)"/><text x="698.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (8 samples, 1.56%)</title><rect x="695" y="228" width="18" height="15" fill="rgb(232,85,8)"/><text x="698.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (7 samples, 1.36%)</title><rect x="697" y="244" width="16" height="15" fill="rgb(213,113,8)"/><text x="700.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (7 samples, 1.36%)</title><rect x="697" y="260" width="16" height="15" fill="rgb(222,210,46)"/><text x="700.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (6 samples, 1.17%)</title><rect x="700" y="276" width="13" height="15" fill="rgb(250,224,23)"/><text x="703.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (6 samples, 1.17%)</title><rect x="700" y="292" width="13" height="15" fill="rgb(227,29,42)"/><text x="703.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (6 samples, 1.17%)</title><rect x="700" y="308" width="13" height="15" fill="rgb(205,213,53)"/><text x="703.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (6 samples, 1.17%)</title><rect x="700" y="324" width="13" height="15" fill="rgb(232,96,46)"/><text x="703.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (6 samples, 1.17%)</title><rect x="700" y="340" width="13" height="15" fill="rgb(219,69,19)"/><text x="703.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (6 samples, 1.17%)</title><rect x="700" y="356" width="13" height="15" fill="rgb(238,39,33)"/><text x="703.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (6 samples, 1.17%)</title><rect x="700" y="372" width="13" height="15" fill="rgb(240,100,33)"/><text x="703.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (6 samples, 1.17%)</title><rect x="700" y="388" width="13" height="15" fill="rgb(224,21,2)"/><text x="703.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (6 samples, 1.17%)</title><rect x="700" y="404" width="13" height="15" fill="rgb(241,14,41)"/><text x="703.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (6 samples, 1.17%)</title><rect x="700" y="420" width="13" height="15" fill="rgb(215,135,4)"/><text x="703.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (6 samples, 1.17%)</title><rect x="700" y="436" width="13" height="15" fill="rgb(228,76,9)"/><text x="703.00" y="446.50"></text></g><g><title>0x7fed8a2d8ab9 (libgomp.so.1.0.0) (6 samples, 1.17%)</title><rect x="700" y="452" width="13" height="15" fill="rgb(236,150,16)"/><text x="703.00" y="462.50"></text></g><g><title>0x7fed8a2d9ead (libgomp.so.1.0.0) (2 samples, 0.39%)</title><rect x="709" y="468" width="4" height="15" fill="rgb(205,208,17)"/><text x="712.00" y="478.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.19%)</title><rect x="713" y="228" width="3" height="15" fill="rgb(254,106,33)"/><text x="716.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="716" y="244" width="2" height="15" fill="rgb(216,161,53)"/><text x="719.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="716" y="260" width="2" height="15" fill="rgb(210,132,37)"/><text x="719.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="716" y="276" width="2" height="15" fill="rgb(252,173,31)"/><text x="719.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="716" y="292" width="2" height="15" fill="rgb(205,171,25)"/><text x="719.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="716" y="308" width="2" height="15" fill="rgb(224,16,20)"/><text x="719.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1614) (1 samples, 0.19%)</title><rect x="718" y="276" width="2" height="15" fill="rgb(224,28,7)"/><text x="721.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="720" y="308" width="3" height="15" fill="rgb(249,178,41)"/><text x="723.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.19%)</title><rect x="720" y="324" width="3" height="15" fill="rgb(205,183,29)"/><text x="723.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.39%)</title><rect x="720" y="292" width="5" height="15" fill="rgb(230,144,8)"/><text x="723.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="723" y="308" width="2" height="15" fill="rgb(252,125,37)"/><text x="726.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.19%)</title><rect x="723" y="324" width="2" height="15" fill="rgb(247,11,48)"/><text x="726.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.19%)</title><rect x="723" y="340" width="2" height="15" fill="rgb(218,49,14)"/><text x="726.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.19%)</title><rect x="725" y="292" width="2" height="15" fill="rgb(227,99,19)"/><text x="728.00" y="302.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.19%)</title><rect x="725" y="308" width="2" height="15" fill="rgb(247,85,44)"/><text x="728.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (6 samples, 1.17%)</title><rect x="716" y="228" width="13" height="15" fill="rgb(211,143,50)"/><text x="719.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.97%)</title><rect x="718" y="244" width="11" height="15" fill="rgb(218,67,11)"/><text x="721.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.97%)</title><rect x="718" y="260" width="11" height="15" fill="rgb(242,36,26)"/><text x="721.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.78%)</title><rect x="720" y="276" width="9" height="15" fill="rgb(221,44,54)"/><text x="723.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="727" y="292" width="2" height="15" fill="rgb(223,115,45)"/><text x="730.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.19%)</title><rect x="727" y="308" width="2" height="15" fill="rgb(214,226,54)"/><text x="730.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (8 samples, 1.56%)</title><rect x="713" y="196" width="19" height="15" fill="rgb(254,103,42)"/><text x="716.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 1.56%)</title><rect x="713" y="212" width="19" height="15" fill="rgb(250,11,34)"/><text x="716.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.19%)</title><rect x="729" y="228" width="3" height="15" fill="rgb(224,212,28)"/><text x="732.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="729" y="244" width="3" height="15" fill="rgb(229,157,9)"/><text x="732.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="729" y="260" width="3" height="15" fill="rgb(253,120,24)"/><text x="732.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="729" y="276" width="3" height="15" fill="rgb(223,205,2)"/><text x="732.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="729" y="292" width="3" height="15" fill="rgb(236,34,9)"/><text x="732.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="729" y="308" width="3" height="15" fill="rgb(249,186,14)"/><text x="732.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:246) (1 samples, 0.19%)</title><rect x="729" y="324" width="3" height="15" fill="rgb(249,182,32)"/><text x="732.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_subtract_FLOAT (simd.inc.src:777) (1 samples, 0.19%)</title><rect x="729" y="340" width="3" height="15" fill="rgb(210,191,15)"/><text x="732.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:61) (1 samples, 0.19%)</title><rect x="732" y="212" width="2" height="15" fill="rgb(248,99,21)"/><text x="735.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="739" y="228" width="2" height="15" fill="rgb(229,91,29)"/><text x="742.00" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.19%)</title><rect x="741" y="324" width="2" height="15" fill="rgb(217,196,0)"/><text x="744.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.19%)</title><rect x="741" y="340" width="2" height="15" fill="rgb(211,114,47)"/><text x="744.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.19%)</title><rect x="743" y="324" width="3" height="15" fill="rgb(212,219,29)"/><text x="746.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="743" y="340" width="3" height="15" fill="rgb(251,183,29)"/><text x="746.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="743" y="356" width="3" height="15" fill="rgb(250,177,2)"/><text x="746.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="743" y="372" width="3" height="15" fill="rgb(252,75,17)"/><text x="746.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.19%)</title><rect x="743" y="388" width="3" height="15" fill="rgb(214,110,29)"/><text x="746.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="743" y="404" width="3" height="15" fill="rgb(244,207,50)"/><text x="746.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="743" y="420" width="3" height="15" fill="rgb(213,109,1)"/><text x="746.00" y="430.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="743" y="436" width="3" height="15" fill="rgb(236,105,39)"/><text x="746.00" y="446.50"></text></g><g><title>0x7fedc03f0154 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="743" y="452" width="3" height="15" fill="rgb(211,90,38)"/><text x="746.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="750" y="372" width="2" height="15" fill="rgb(222,174,28)"/><text x="753.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="750" y="388" width="2" height="15" fill="rgb(250,127,12)"/><text x="753.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.19%)</title><rect x="750" y="404" width="2" height="15" fill="rgb(251,193,54)"/><text x="753.00" y="414.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.19%)</title><rect x="750" y="420" width="2" height="15" fill="rgb(213,49,33)"/><text x="753.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="752" y="420" width="3" height="15" fill="rgb(212,36,24)"/><text x="755.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="752" y="436" width="3" height="15" fill="rgb(246,44,27)"/><text x="755.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="755" y="420" width="2" height="15" fill="rgb(222,209,12)"/><text x="758.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1910) (1 samples, 0.19%)</title><rect x="755" y="436" width="2" height="15" fill="rgb(248,122,17)"/><text x="758.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.19%)</title><rect x="757" y="452" width="2" height="15" fill="rgb(220,85,24)"/><text x="760.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (37 samples, 7.21%)</title><rect x="677" y="180" width="85" height="15" fill="rgb(207,161,38)"/><text x="680.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (13 samples, 2.53%)</title><rect x="732" y="196" width="30" height="15" fill="rgb(238,111,6)"/><text x="735.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (12 samples, 2.34%)</title><rect x="734" y="212" width="28" height="15" fill="rgb(233,43,8)"/><text x="737.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (9 samples, 1.75%)</title><rect x="741" y="228" width="21" height="15" fill="rgb(248,89,21)"/><text x="744.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.75%)</title><rect x="741" y="244" width="21" height="15" fill="rgb(207,171,31)"/><text x="744.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (9 samples, 1.75%)</title><rect x="741" y="260" width="21" height="15" fill="rgb(246,174,31)"/><text x="744.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (9 samples, 1.75%)</title><rect x="741" y="276" width="21" height="15" fill="rgb(227,47,20)"/><text x="744.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (9 samples, 1.75%)</title><rect x="741" y="292" width="21" height="15" fill="rgb(237,211,34)"/><text x="744.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 1.75%)</title><rect x="741" y="308" width="21" height="15" fill="rgb(252,23,50)"/><text x="744.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (7 samples, 1.36%)</title><rect x="746" y="324" width="16" height="15" fill="rgb(222,169,48)"/><text x="749.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (6 samples, 1.17%)</title><rect x="748" y="340" width="14" height="15" fill="rgb(209,76,50)"/><text x="751.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.97%)</title><rect x="750" y="356" width="12" height="15" fill="rgb(225,195,27)"/><text x="753.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.78%)</title><rect x="752" y="372" width="10" height="15" fill="rgb(232,123,28)"/><text x="755.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.78%)</title><rect x="752" y="388" width="10" height="15" fill="rgb(233,109,37)"/><text x="755.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.78%)</title><rect x="752" y="404" width="10" height="15" fill="rgb(220,60,51)"/><text x="755.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.39%)</title><rect x="757" y="420" width="5" height="15" fill="rgb(213,140,40)"/><text x="760.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (2 samples, 0.39%)</title><rect x="757" y="436" width="5" height="15" fill="rgb(205,156,4)"/><text x="760.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.19%)</title><rect x="759" y="452" width="3" height="15" fill="rgb(248,163,14)"/><text x="762.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.19%)</title><rect x="759" y="468" width="3" height="15" fill="rgb(244,79,43)"/><text x="762.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.19%)</title><rect x="762" y="180" width="2" height="15" fill="rgb(237,110,14)"/><text x="765.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.39%)</title><rect x="764" y="180" width="5" height="15" fill="rgb(246,27,34)"/><text x="767.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.19%)</title><rect x="769" y="180" width="2" height="15" fill="rgb(237,223,33)"/><text x="772.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (47 samples, 9.16%)</title><rect x="665" y="164" width="108" height="15" fill="rgb(230,13,36)"/><text x="668.00" y="174.50">_run_sequence..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.19%)</title><rect x="771" y="180" width="2" height="15" fill="rgb(238,42,3)"/><text x="774.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="773" y="164" width="2" height="15" fill="rgb(206,90,24)"/><text x="776.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="773" y="180" width="2" height="15" fill="rgb(250,169,41)"/><text x="776.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="773" y="196" width="2" height="15" fill="rgb(231,0,54)"/><text x="776.00" y="206.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:18) (49 samples, 9.55%)</title><rect x="665" y="100" width="113" height="15" fill="rgb(217,96,5)"/><text x="668.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (49 samples, 9.55%)</title><rect x="665" y="116" width="113" height="15" fill="rgb(251,130,10)"/><text x="668.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (49 samples, 9.55%)</title><rect x="665" y="132" width="113" height="15" fill="rgb(233,205,25)"/><text x="668.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (49 samples, 9.55%)</title><rect x="665" y="148" width="113" height="15" fill="rgb(245,56,20)"/><text x="668.00" y="158.50">run (mlprodic..</text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="775" y="164" width="3" height="15" fill="rgb(232,127,37)"/><text x="778.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.19%)</title><rect x="778" y="164" width="2" height="15" fill="rgb(207,148,25)"/><text x="781.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.19%)</title><rect x="780" y="164" width="2" height="15" fill="rgb(220,126,12)"/><text x="783.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="792" y="180" width="2" height="15" fill="rgb(246,205,41)"/><text x="795.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (15 samples, 2.92%)</title><rect x="794" y="180" width="34" height="15" fill="rgb(206,88,28)"/><text x="797.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.19%)</title><rect x="826" y="196" width="2" height="15" fill="rgb(211,114,5)"/><text x="829.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.19%)</title><rect x="847" y="212" width="2" height="15" fill="rgb(235,121,17)"/><text x="850.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.19%)</title><rect x="847" y="228" width="2" height="15" fill="rgb(221,54,33)"/><text x="850.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.19%)</title><rect x="847" y="244" width="2" height="15" fill="rgb(219,129,0)"/><text x="850.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.19%)</title><rect x="847" y="260" width="2" height="15" fill="rgb(235,71,34)"/><text x="850.00" y="270.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3265) (1 samples, 0.19%)</title><rect x="847" y="276" width="2" height="15" fill="rgb(228,192,13)"/><text x="850.00" y="286.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.19%)</title><rect x="849" y="228" width="2" height="15" fill="rgb(213,160,30)"/><text x="852.00" y="238.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.19%)</title><rect x="851" y="228" width="3" height="15" fill="rgb(229,99,35)"/><text x="854.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.19%)</title><rect x="851" y="244" width="3" height="15" fill="rgb(235,214,16)"/><text x="854.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.19%)</title><rect x="858" y="260" width="3" height="15" fill="rgb(242,98,30)"/><text x="861.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="858" y="276" width="3" height="15" fill="rgb(253,217,9)"/><text x="861.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.19%)</title><rect x="858" y="292" width="3" height="15" fill="rgb(242,194,18)"/><text x="861.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (6 samples, 1.17%)</title><rect x="849" y="212" width="14" height="15" fill="rgb(234,103,13)"/><text x="852.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (4 samples, 0.78%)</title><rect x="854" y="228" width="9" height="15" fill="rgb(221,18,1)"/><text x="857.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.39%)</title><rect x="858" y="244" width="5" height="15" fill="rgb(246,206,23)"/><text x="861.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.19%)</title><rect x="861" y="260" width="2" height="15" fill="rgb(215,36,1)"/><text x="864.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.19%)</title><rect x="861" y="276" width="2" height="15" fill="rgb(238,35,9)"/><text x="864.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="861" y="292" width="2" height="15" fill="rgb(213,104,26)"/><text x="864.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="861" y="308" width="2" height="15" fill="rgb(212,145,50)"/><text x="864.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (10 samples, 1.95%)</title><rect x="842" y="196" width="23" height="15" fill="rgb(218,68,50)"/><text x="845.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.19%)</title><rect x="863" y="212" width="2" height="15" fill="rgb(223,7,16)"/><text x="866.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="863" y="228" width="2" height="15" fill="rgb(235,81,21)"/><text x="866.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="863" y="244" width="2" height="15" fill="rgb(215,221,54)"/><text x="866.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="863" y="260" width="2" height="15" fill="rgb(220,86,12)"/><text x="866.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="863" y="276" width="2" height="15" fill="rgb(216,31,31)"/><text x="866.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:96) (1 samples, 0.19%)</title><rect x="863" y="292" width="2" height="15" fill="rgb(233,145,1)"/><text x="866.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="867" y="260" width="3" height="15" fill="rgb(248,151,45)"/><text x="870.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.19%)</title><rect x="867" y="276" width="3" height="15" fill="rgb(250,32,19)"/><text x="870.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (2 samples, 0.39%)</title><rect x="867" y="228" width="5" height="15" fill="rgb(253,57,7)"/><text x="870.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.39%)</title><rect x="867" y="244" width="5" height="15" fill="rgb(217,146,39)"/><text x="870.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="870" y="260" width="2" height="15" fill="rgb(206,7,6)"/><text x="873.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="870" y="276" width="2" height="15" fill="rgb(220,138,30)"/><text x="873.00" y="286.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="872" y="244" width="2" height="15" fill="rgb(236,176,54)"/><text x="875.00" y="254.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (2 samples, 0.39%)</title><rect x="874" y="276" width="5" height="15" fill="rgb(244,34,44)"/><text x="877.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.39%)</title><rect x="884" y="292" width="4" height="15" fill="rgb(228,0,7)"/><text x="887.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.19%)</title><rect x="886" y="308" width="2" height="15" fill="rgb(227,179,45)"/><text x="889.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.19%)</title><rect x="888" y="292" width="2" height="15" fill="rgb(254,70,13)"/><text x="891.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.58%)</title><rect x="890" y="308" width="7" height="15" fill="rgb(247,112,30)"/><text x="893.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.58%)</title><rect x="890" y="324" width="7" height="15" fill="rgb(239,187,9)"/><text x="893.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.58%)</title><rect x="890" y="340" width="7" height="15" fill="rgb(246,90,11)"/><text x="893.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.58%)</title><rect x="890" y="356" width="7" height="15" fill="rgb(250,222,44)"/><text x="893.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.58%)</title><rect x="890" y="372" width="7" height="15" fill="rgb(225,136,3)"/><text x="893.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (3 samples, 0.58%)</title><rect x="890" y="388" width="7" height="15" fill="rgb(248,217,37)"/><text x="893.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="897" y="420" width="3" height="15" fill="rgb(213,58,12)"/><text x="900.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.19%)</title><rect x="897" y="436" width="3" height="15" fill="rgb(231,215,46)"/><text x="900.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.19%)</title><rect x="897" y="452" width="3" height="15" fill="rgb(231,209,17)"/><text x="900.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="897" y="468" width="3" height="15" fill="rgb(241,227,40)"/><text x="900.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.39%)</title><rect x="897" y="356" width="5" height="15" fill="rgb(242,62,11)"/><text x="900.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.39%)</title><rect x="897" y="372" width="5" height="15" fill="rgb(217,41,7)"/><text x="900.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.39%)</title><rect x="897" y="388" width="5" height="15" fill="rgb(227,89,8)"/><text x="900.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.39%)</title><rect x="897" y="404" width="5" height="15" fill="rgb(225,195,26)"/><text x="900.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="900" y="420" width="2" height="15" fill="rgb(224,167,13)"/><text x="903.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="900" y="436" width="2" height="15" fill="rgb(240,211,24)"/><text x="903.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.19%)</title><rect x="900" y="452" width="2" height="15" fill="rgb(224,196,1)"/><text x="903.00" y="462.50"></text></g><g><title>0x7fedbf5355b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="900" y="468" width="2" height="15" fill="rgb(243,176,47)"/><text x="903.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="902" y="356" width="2" height="15" fill="rgb(238,215,1)"/><text x="905.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="902" y="372" width="2" height="15" fill="rgb(235,164,22)"/><text x="905.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="902" y="388" width="2" height="15" fill="rgb(217,114,51)"/><text x="905.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.19%)</title><rect x="902" y="404" width="2" height="15" fill="rgb(237,4,10)"/><text x="905.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.19%)</title><rect x="902" y="420" width="2" height="15" fill="rgb(249,217,7)"/><text x="905.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="902" y="436" width="2" height="15" fill="rgb(247,61,38)"/><text x="905.00" y="446.50"></text></g><g><title>0x7fedc02caa90 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="902" y="452" width="2" height="15" fill="rgb(246,179,21)"/><text x="905.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (18 samples, 3.51%)</title><rect x="865" y="196" width="42" height="15" fill="rgb(249,210,8)"/><text x="868.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 3.31%)</title><rect x="867" y="212" width="40" height="15" fill="rgb(245,4,49)"/><text x="870.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (15 samples, 2.92%)</title><rect x="872" y="228" width="35" height="15" fill="rgb(244,228,28)"/><text x="875.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (14 samples, 2.73%)</title><rect x="874" y="244" width="33" height="15" fill="rgb(238,26,6)"/><text x="877.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 2.73%)</title><rect x="874" y="260" width="33" height="15" fill="rgb(231,132,20)"/><text x="877.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (12 samples, 2.34%)</title><rect x="879" y="276" width="28" height="15" fill="rgb(238,32,38)"/><text x="882.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (7 samples, 1.36%)</title><rect x="890" y="292" width="17" height="15" fill="rgb(219,44,39)"/><text x="893.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.78%)</title><rect x="897" y="308" width="10" height="15" fill="rgb(216,172,3)"/><text x="900.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.78%)</title><rect x="897" y="324" width="10" height="15" fill="rgb(210,21,10)"/><text x="900.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.78%)</title><rect x="897" y="340" width="10" height="15" fill="rgb(217,108,16)"/><text x="900.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="904" y="356" width="3" height="15" fill="rgb(253,46,51)"/><text x="907.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.19%)</title><rect x="904" y="372" width="3" height="15" fill="rgb(251,201,12)"/><text x="907.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.19%)</title><rect x="907" y="196" width="2" height="15" fill="rgb(224,49,46)"/><text x="910.00" y="206.50"></text></g><g><title>0x7fed8a2d9ea0 (libgomp.so.1.0.0) (3 samples, 0.58%)</title><rect x="911" y="468" width="7" height="15" fill="rgb(231,63,31)"/><text x="914.00" y="478.50"></text></g><g><title>0x7fed8a2d9ea9 (libgomp.so.1.0.0) (3 samples, 0.58%)</title><rect x="918" y="468" width="7" height="15" fill="rgb(239,118,18)"/><text x="921.00" y="478.50"></text></g><g><title>0x7fed8a2d9eab (libgomp.so.1.0.0) (9 samples, 1.75%)</title><rect x="925" y="468" width="21" height="15" fill="rgb(251,228,24)"/><text x="928.00" y="478.50"></text></g><g><title>0x7fed8a2d9ead (libgomp.so.1.0.0) (5 samples, 0.97%)</title><rect x="946" y="468" width="11" height="15" fill="rgb(236,173,38)"/><text x="949.00" y="478.50"></text></g><g><title>0x7fed8a2d8ab9 (libgomp.so.1.0.0) (21 samples, 4.09%)</title><rect x="911" y="452" width="48" height="15" fill="rgb(233,111,8)"/><text x="914.00" y="462.50">0x7f..</text></g><g><title>0x7fed8a2d9ee1 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="957" y="468" width="2" height="15" fill="rgb(225,192,21)"/><text x="960.00" y="478.50"></text></g><g><title>0x7fed8a2d7a5c (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="959" y="468" width="3" height="15" fill="rgb(232,148,46)"/><text x="962.00" y="478.50"></text></g><g><title>0x7fed8a2d05b0 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="959" y="484" width="3" height="15" fill="rgb(243,142,39)"/><text x="962.00" y="494.50"></text></g><g><title>0x7fed8a2d9cfb (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="962" y="484" width="2" height="15" fill="rgb(240,15,38)"/><text x="965.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (25 samples, 4.87%)</title><rect x="909" y="196" width="57" height="15" fill="rgb(245,0,3)"/><text x="912.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 4.87%)</title><rect x="909" y="212" width="57" height="15" fill="rgb(247,21,0)"/><text x="912.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (24 samples, 4.68%)</title><rect x="911" y="228" width="55" height="15" fill="rgb(224,195,26)"/><text x="914.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (24 samples, 4.68%)</title><rect x="911" y="244" width="55" height="15" fill="rgb(231,167,2)"/><text x="914.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (24 samples, 4.68%)</title><rect x="911" y="260" width="55" height="15" fill="rgb(216,81,4)"/><text x="914.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (24 samples, 4.68%)</title><rect x="911" y="276" width="55" height="15" fill="rgb(242,53,47)"/><text x="914.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (24 samples, 4.68%)</title><rect x="911" y="292" width="55" height="15" fill="rgb(254,183,16)"/><text x="914.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (24 samples, 4.68%)</title><rect x="911" y="308" width="55" height="15" fill="rgb(220,44,23)"/><text x="914.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (24 samples, 4.68%)</title><rect x="911" y="324" width="55" height="15" fill="rgb(254,137,51)"/><text x="914.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (24 samples, 4.68%)</title><rect x="911" y="340" width="55" height="15" fill="rgb(238,134,48)"/><text x="914.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (24 samples, 4.68%)</title><rect x="911" y="356" width="55" height="15" fill="rgb(247,35,39)"/><text x="914.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (24 samples, 4.68%)</title><rect x="911" y="372" width="55" height="15" fill="rgb(213,53,17)"/><text x="914.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (24 samples, 4.68%)</title><rect x="911" y="388" width="55" height="15" fill="rgb(226,189,27)"/><text x="914.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (24 samples, 4.68%)</title><rect x="911" y="404" width="55" height="15" fill="rgb(218,64,27)"/><text x="914.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (24 samples, 4.68%)</title><rect x="911" y="420" width="55" height="15" fill="rgb(243,22,9)"/><text x="914.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (24 samples, 4.68%)</title><rect x="911" y="436" width="55" height="15" fill="rgb(243,119,46)"/><text x="914.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.58%)</title><rect x="959" y="452" width="7" height="15" fill="rgb(228,1,7)"/><text x="962.00" y="462.50"></text></g><g><title>0x7fed8a2d7daa (libgomp.so.1.0.0) (2 samples, 0.39%)</title><rect x="962" y="468" width="4" height="15" fill="rgb(205,23,15)"/><text x="965.00" y="478.50"></text></g><g><title>0x7fed8a2d9cfd (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="964" y="484" width="2" height="15" fill="rgb(237,118,28)"/><text x="967.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.19%)</title><rect x="966" y="196" width="3" height="15" fill="rgb(244,38,33)"/><text x="969.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3240) (1 samples, 0.19%)</title><rect x="966" y="212" width="3" height="15" fill="rgb(248,115,16)"/><text x="969.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1506) (1 samples, 0.19%)</title><rect x="966" y="228" width="3" height="15" fill="rgb(222,21,28)"/><text x="969.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.19%)</title><rect x="971" y="212" width="2" height="15" fill="rgb(224,176,6)"/><text x="974.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:431) (1 samples, 0.19%)</title><rect x="973" y="212" width="3" height="15" fill="rgb(252,137,25)"/><text x="976.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.39%)</title><rect x="978" y="244" width="4" height="15" fill="rgb(227,16,44)"/><text x="981.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.39%)</title><rect x="978" y="260" width="4" height="15" fill="rgb(249,103,19)"/><text x="981.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.39%)</title><rect x="978" y="276" width="4" height="15" fill="rgb(213,66,30)"/><text x="981.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.39%)</title><rect x="978" y="292" width="4" height="15" fill="rgb(211,49,50)"/><text x="981.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="982" y="260" width="3" height="15" fill="rgb(226,56,33)"/><text x="985.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="982" y="276" width="3" height="15" fill="rgb(246,190,41)"/><text x="985.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.19%)</title><rect x="982" y="292" width="3" height="15" fill="rgb(249,30,42)"/><text x="985.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="985" y="276" width="2" height="15" fill="rgb(233,211,21)"/><text x="988.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.19%)</title><rect x="985" y="292" width="2" height="15" fill="rgb(214,72,18)"/><text x="988.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.19%)</title><rect x="985" y="308" width="2" height="15" fill="rgb(243,18,31)"/><text x="988.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.39%)</title><rect x="985" y="260" width="4" height="15" fill="rgb(241,225,3)"/><text x="988.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="987" y="276" width="2" height="15" fill="rgb(247,205,29)"/><text x="990.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="987" y="292" width="2" height="15" fill="rgb(207,42,49)"/><text x="990.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:975) (1 samples, 0.19%)</title><rect x="987" y="308" width="2" height="15" fill="rgb(245,73,11)"/><text x="990.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="989" y="260" width="3" height="15" fill="rgb(212,34,29)"/><text x="992.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.19%)</title><rect x="989" y="276" width="3" height="15" fill="rgb(221,18,42)"/><text x="992.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="992" y="308" width="2" height="15" fill="rgb(247,90,32)"/><text x="995.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.19%)</title><rect x="992" y="324" width="2" height="15" fill="rgb(248,25,31)"/><text x="995.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.39%)</title><rect x="992" y="292" width="4" height="15" fill="rgb(249,20,0)"/><text x="995.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="994" y="308" width="2" height="15" fill="rgb(213,149,50)"/><text x="997.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2757) (1 samples, 0.19%)</title><rect x="994" y="324" width="2" height="15" fill="rgb(222,197,52)"/><text x="997.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="996" y="292" width="3" height="15" fill="rgb(245,52,11)"/><text x="999.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.19%)</title><rect x="996" y="308" width="3" height="15" fill="rgb(249,30,46)"/><text x="999.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.19%)</title><rect x="996" y="324" width="3" height="15" fill="rgb(238,88,9)"/><text x="999.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="996" y="340" width="3" height="15" fill="rgb(244,124,5)"/><text x="999.00" y="350.50"></text></g><g><title>0x7fedc0314040 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="996" y="356" width="3" height="15" fill="rgb(237,21,49)"/><text x="999.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.19%)</title><rect x="999" y="292" width="2" height="15" fill="rgb(252,141,7)"/><text x="1002.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="1001" y="292" width="2" height="15" fill="rgb(250,88,12)"/><text x="1004.00" y="302.50"></text></g><g><title>FLOAT_multiply (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="1001" y="308" width="2" height="15" fill="rgb(221,150,49)"/><text x="1004.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.95%)</title><rect x="982" y="244" width="23" height="15" fill="rgb(238,131,5)"/><text x="985.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.17%)</title><rect x="992" y="260" width="13" height="15" fill="rgb(237,95,8)"/><text x="995.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.17%)</title><rect x="992" y="276" width="13" height="15" fill="rgb(218,60,23)"/><text x="995.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="1003" y="292" width="2" height="15" fill="rgb(217,79,3)"/><text x="1006.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:668) (1 samples, 0.19%)</title><rect x="1003" y="308" width="2" height="15" fill="rgb(211,151,0)"/><text x="1006.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (13 samples, 2.53%)</title><rect x="978" y="228" width="30" height="15" fill="rgb(254,41,45)"/><text x="981.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="1005" y="244" width="3" height="15" fill="rgb(249,44,36)"/><text x="1008.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (3 samples, 0.58%)</title><rect x="1008" y="228" width="7" height="15" fill="rgb(215,18,10)"/><text x="1011.00" y="238.50"></text></g><g><title>0x7fedbf535800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1012" y="244" width="3" height="15" fill="rgb(207,159,54)"/><text x="1015.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.19%)</title><rect x="1015" y="244" width="2" height="15" fill="rgb(232,18,47)"/><text x="1018.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.19%)</title><rect x="1017" y="308" width="2" height="15" fill="rgb(210,45,14)"/><text x="1020.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2288) (1 samples, 0.19%)</title><rect x="1017" y="324" width="2" height="15" fill="rgb(229,5,39)"/><text x="1020.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1767) (1 samples, 0.19%)</title><rect x="1019" y="388" width="3" height="15" fill="rgb(210,83,12)"/><text x="1022.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.39%)</title><rect x="1019" y="308" width="5" height="15" fill="rgb(233,95,53)"/><text x="1022.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.39%)</title><rect x="1019" y="324" width="5" height="15" fill="rgb(251,42,0)"/><text x="1022.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.39%)</title><rect x="1019" y="340" width="5" height="15" fill="rgb(210,95,49)"/><text x="1022.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.39%)</title><rect x="1019" y="356" width="5" height="15" fill="rgb(217,153,8)"/><text x="1022.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (2 samples, 0.39%)</title><rect x="1019" y="372" width="5" height="15" fill="rgb(246,108,41)"/><text x="1022.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="1022" y="388" width="2" height="15" fill="rgb(223,37,53)"/><text x="1025.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (25 samples, 4.87%)</title><rect x="969" y="196" width="57" height="15" fill="rgb(222,1,36)"/><text x="972.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (22 samples, 4.29%)</title><rect x="976" y="212" width="50" height="15" fill="rgb(216,100,11)"/><text x="979.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.97%)</title><rect x="1015" y="228" width="11" height="15" fill="rgb(252,4,53)"/><text x="1018.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.78%)</title><rect x="1017" y="244" width="9" height="15" fill="rgb(222,132,20)"/><text x="1020.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.78%)</title><rect x="1017" y="260" width="9" height="15" fill="rgb(249,72,44)"/><text x="1020.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.78%)</title><rect x="1017" y="276" width="9" height="15" fill="rgb(238,180,27)"/><text x="1020.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.78%)</title><rect x="1017" y="292" width="9" height="15" fill="rgb(210,11,33)"/><text x="1020.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="1024" y="308" width="2" height="15" fill="rgb(250,189,3)"/><text x="1027.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.19%)</title><rect x="1024" y="324" width="2" height="15" fill="rgb(222,214,16)"/><text x="1027.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (4 samples, 0.78%)</title><rect x="1026" y="196" width="9" height="15" fill="rgb(209,194,21)"/><text x="1029.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.19%)</title><rect x="1033" y="212" width="2" height="15" fill="rgb(209,199,50)"/><text x="1036.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:52) (1 samples, 0.19%)</title><rect x="1035" y="196" width="3" height="15" fill="rgb(245,83,52)"/><text x="1038.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.19%)</title><rect x="1038" y="212" width="2" height="15" fill="rgb(210,101,31)"/><text x="1041.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="1042" y="228" width="3" height="15" fill="rgb(247,126,45)"/><text x="1045.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:5) (1 samples, 0.19%)</title><rect x="1045" y="228" width="2" height="15" fill="rgb(228,228,24)"/><text x="1048.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.19%)</title><rect x="1049" y="244" width="2" height="15" fill="rgb(248,86,29)"/><text x="1052.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.19%)</title><rect x="1054" y="276" width="2" height="15" fill="rgb(249,80,1)"/><text x="1057.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.19%)</title><rect x="1056" y="324" width="2" height="15" fill="rgb(211,0,10)"/><text x="1059.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.19%)</title><rect x="1056" y="340" width="2" height="15" fill="rgb(245,194,39)"/><text x="1059.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.39%)</title><rect x="1058" y="340" width="5" height="15" fill="rgb(212,217,3)"/><text x="1061.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.39%)</title><rect x="1058" y="356" width="5" height="15" fill="rgb(209,82,19)"/><text x="1061.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.58%)</title><rect x="1058" y="324" width="7" height="15" fill="rgb(227,95,21)"/><text x="1061.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="1063" y="340" width="2" height="15" fill="rgb(228,135,52)"/><text x="1066.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="1065" y="340" width="3" height="15" fill="rgb(252,73,7)"/><text x="1068.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="1065" y="356" width="3" height="15" fill="rgb(238,110,24)"/><text x="1068.00" y="366.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="1065" y="372" width="3" height="15" fill="rgb(225,39,28)"/><text x="1068.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (3 samples, 0.58%)</title><rect x="1068" y="388" width="6" height="15" fill="rgb(242,89,49)"/><text x="1071.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.19%)</title><rect x="1074" y="388" width="3" height="15" fill="rgb(219,61,47)"/><text x="1077.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="1077" y="404" width="2" height="15" fill="rgb(228,213,31)"/><text x="1080.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="1077" y="420" width="2" height="15" fill="rgb(246,104,8)"/><text x="1080.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="1077" y="436" width="2" height="15" fill="rgb(227,161,8)"/><text x="1080.00" y="446.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="1081" y="420" width="3" height="15" fill="rgb(250,0,36)"/><text x="1084.00" y="430.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:320) (1 samples, 0.19%)</title><rect x="1081" y="436" width="3" height="15" fill="rgb(223,37,34)"/><text x="1084.00" y="446.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1716) (1 samples, 0.19%)</title><rect x="1084" y="420" width="2" height="15" fill="rgb(226,182,38)"/><text x="1087.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="1086" y="452" width="2" height="15" fill="rgb(253,105,32)"/><text x="1089.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (10 samples, 1.95%)</title><rect x="1068" y="340" width="23" height="15" fill="rgb(244,209,36)"/><text x="1071.00" y="350.50">_..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (10 samples, 1.95%)</title><rect x="1068" y="356" width="23" height="15" fill="rgb(245,142,2)"/><text x="1071.00" y="366.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.95%)</title><rect x="1068" y="372" width="23" height="15" fill="rgb(206,122,6)"/><text x="1071.00" y="382.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (6 samples, 1.17%)</title><rect x="1077" y="388" width="14" height="15" fill="rgb(230,84,44)"/><text x="1080.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 0.97%)</title><rect x="1079" y="404" width="12" height="15" fill="rgb(231,53,6)"/><text x="1082.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.39%)</title><rect x="1086" y="420" width="5" height="15" fill="rgb(251,171,15)"/><text x="1089.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.39%)</title><rect x="1086" y="436" width="5" height="15" fill="rgb(215,203,15)"/><text x="1089.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="1088" y="452" width="3" height="15" fill="rgb(240,188,40)"/><text x="1091.00" y="462.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.19%)</title><rect x="1088" y="468" width="3" height="15" fill="rgb(242,91,20)"/><text x="1091.00" y="478.50"></text></g><g><title>_array_find_python_scalar_type (common.c:40) (1 samples, 0.19%)</title><rect x="1088" y="484" width="3" height="15" fill="rgb(246,158,9)"/><text x="1091.00" y="494.50"></text></g><g><title>0x7fedc033312b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1091" y="356" width="2" height="15" fill="rgb(214,31,49)"/><text x="1094.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.19%)</title><rect x="1093" y="372" width="2" height="15" fill="rgb(209,44,7)"/><text x="1096.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.19%)</title><rect x="1095" y="388" width="2" height="15" fill="rgb(232,11,36)"/><text x="1098.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (15 samples, 2.92%)</title><rect x="1065" y="324" width="35" height="15" fill="rgb(248,131,8)"/><text x="1068.00" y="334.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.78%)</title><rect x="1091" y="340" width="9" height="15" fill="rgb(235,145,54)"/><text x="1094.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.58%)</title><rect x="1093" y="356" width="7" height="15" fill="rgb(206,228,49)"/><text x="1096.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.39%)</title><rect x="1095" y="372" width="5" height="15" fill="rgb(241,211,40)"/><text x="1098.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.19%)</title><rect x="1097" y="388" width="3" height="15" fill="rgb(232,57,0)"/><text x="1100.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:131) (1 samples, 0.19%)</title><rect x="1100" y="324" width="2" height="15" fill="rgb(212,225,42)"/><text x="1103.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="1104" y="372" width="3" height="15" fill="rgb(250,68,9)"/><text x="1107.00" y="382.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.19%)</title><rect x="1104" y="388" width="3" height="15" fill="rgb(225,14,54)"/><text x="1107.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="1107" y="372" width="2" height="15" fill="rgb(227,105,0)"/><text x="1110.00" y="382.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.19%)</title><rect x="1107" y="388" width="2" height="15" fill="rgb(211,222,43)"/><text x="1110.00" y="398.50"></text></g><g><title>0x7fedc0333120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1107" y="404" width="2" height="15" fill="rgb(224,9,8)"/><text x="1110.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="1109" y="420" width="2" height="15" fill="rgb(234,5,54)"/><text x="1112.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1177) (1 samples, 0.19%)</title><rect x="1109" y="436" width="2" height="15" fill="rgb(205,188,4)"/><text x="1112.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.39%)</title><rect x="1109" y="404" width="5" height="15" fill="rgb(211,157,51)"/><text x="1112.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="1111" y="420" width="3" height="15" fill="rgb(206,134,49)"/><text x="1114.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3002) (1 samples, 0.19%)</title><rect x="1111" y="436" width="3" height="15" fill="rgb(240,119,48)"/><text x="1114.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.97%)</title><rect x="1104" y="356" width="12" height="15" fill="rgb(231,120,18)"/><text x="1107.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.58%)</title><rect x="1109" y="372" width="7" height="15" fill="rgb(216,51,15)"/><text x="1112.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.58%)</title><rect x="1109" y="388" width="7" height="15" fill="rgb(253,3,11)"/><text x="1112.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="1114" y="404" width="2" height="15" fill="rgb(240,33,0)"/><text x="1117.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="1114" y="420" width="2" height="15" fill="rgb(208,182,22)"/><text x="1117.00" y="430.50"></text></g><g><title>0x7fedc0312d07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1114" y="436" width="2" height="15" fill="rgb(219,112,22)"/><text x="1117.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (126 samples, 24.56%)</title><rect x="828" y="180" width="290" height="15" fill="rgb(254,29,5)"/><text x="831.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (35 samples, 6.82%)</title><rect x="1038" y="196" width="80" height="15" fill="rgb(215,142,5)"/><text x="1041.00" y="206.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (34 samples, 6.63%)</title><rect x="1040" y="212" width="78" height="15" fill="rgb(254,191,5)"/><text x="1043.00" y="222.50">_run (mlp..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (31 samples, 6.04%)</title><rect x="1047" y="228" width="71" height="15" fill="rgb(209,114,20)"/><text x="1050.00" y="238.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (29 samples, 5.65%)</title><rect x="1051" y="244" width="67" height="15" fill="rgb(206,193,51)"/><text x="1054.00" y="254.50">array_i..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (29 samples, 5.65%)</title><rect x="1051" y="260" width="67" height="15" fill="rgb(243,43,13)"/><text x="1054.00" y="270.50">clip (n..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (27 samples, 5.26%)</title><rect x="1056" y="276" width="62" height="15" fill="rgb(252,197,44)"/><text x="1059.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c:2381) (27 samples, 5.26%)</title><rect x="1056" y="292" width="62" height="15" fill="rgb(226,131,46)"/><text x="1059.00" y="302.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (27 samples, 5.26%)</title><rect x="1056" y="308" width="62" height="15" fill="rgb(213,25,21)"/><text x="1059.00" y="318.50">forwar..</text></g><g><title>_clip (numpy/core/_methods.py:132) (7 samples, 1.36%)</title><rect x="1102" y="324" width="16" height="15" fill="rgb(236,174,28)"/><text x="1105.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (6 samples, 1.17%)</title><rect x="1104" y="340" width="14" height="15" fill="rgb(241,121,25)"/><text x="1107.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.19%)</title><rect x="1116" y="356" width="2" height="15" fill="rgb(226,66,23)"/><text x="1119.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.19%)</title><rect x="1116" y="372" width="2" height="15" fill="rgb(250,24,5)"/><text x="1119.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.19%)</title><rect x="1118" y="180" width="2" height="15" fill="rgb(230,225,4)"/><text x="1121.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.39%)</title><rect x="1120" y="180" width="5" height="15" fill="rgb(225,216,16)"/><text x="1123.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.19%)</title><rect x="1125" y="180" width="2" height="15" fill="rgb(252,71,21)"/><text x="1128.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 1.17%)</title><rect x="1127" y="180" width="14" height="15" fill="rgb(208,88,2)"/><text x="1130.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:45) (208 samples, 40.55%)</title><rect x="665" y="52" width="478" height="15" fill="rgb(237,10,38)"/><text x="668.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:44) (208 samples, 40.55%)</title><rect x="665" y="68" width="478" height="15" fill="rgb(205,189,2)"/><text x="668.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_50_12_float..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29) (208 samples, 40.55%)</title><rect x="665" y="84" width="478" height="15" fill="rgb(252,166,10)"/><text x="668.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_floa..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:23) (159 samples, 30.99%)</title><rect x="778" y="100" width="365" height="15" fill="rgb(209,8,27)"/><text x="781.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (159 samples, 30.99%)</title><rect x="778" y="116" width="365" height="15" fill="rgb(240,157,0)"/><text x="781.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (159 samples, 30.99%)</title><rect x="778" y="132" width="365" height="15" fill="rgb(218,202,43)"/><text x="781.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (159 samples, 30.99%)</title><rect x="778" y="148" width="365" height="15" fill="rgb(213,11,23)"/><text x="781.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (157 samples, 30.60%)</title><rect x="782" y="164" width="361" height="15" fill="rgb(218,124,36)"/><text x="785.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.19%)</title><rect x="1141" y="180" width="2" height="15" fill="rgb(239,185,39)"/><text x="1144.00" y="190.50"></text></g><g><title>0x7fed7ffd0ff9 (?) (1 samples, 0.19%)</title><rect x="1143" y="212" width="3" height="15" fill="rgb(249,187,38)"/><text x="1146.00" y="222.50"></text></g><g><title>0x7fed7ffcbef6 (?) (1 samples, 0.19%)</title><rect x="1143" y="228" width="3" height="15" fill="rgb(236,131,35)"/><text x="1146.00" y="238.50"></text></g><g><title>0x7fed7ffc0962 (?) (1 samples, 0.19%)</title><rect x="1143" y="244" width="3" height="15" fill="rgb(211,157,38)"/><text x="1146.00" y="254.50"></text></g><g><title>0x7fed7fff47a7 (?) (1 samples, 0.19%)</title><rect x="1143" y="260" width="3" height="15" fill="rgb(243,66,15)"/><text x="1146.00" y="270.50"></text></g><g><title>0x7fed7fff4379 (?) (1 samples, 0.19%)</title><rect x="1143" y="276" width="3" height="15" fill="rgb(234,37,37)"/><text x="1146.00" y="286.50"></text></g><g><title>0x7fed804528b8 (?) (1 samples, 0.19%)</title><rect x="1143" y="292" width="3" height="15" fill="rgb(234,129,16)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7fed80450c7f (?) (1 samples, 0.19%)</title><rect x="1143" y="308" width="3" height="15" fill="rgb(212,12,29)"/><text x="1146.00" y="318.50"></text></g><g><title>0x7fed8046399c (?) (1 samples, 0.19%)</title><rect x="1143" y="324" width="3" height="15" fill="rgb(232,216,29)"/><text x="1146.00" y="334.50"></text></g><g><title>0x7fed800ab3d2 (?) (1 samples, 0.19%)</title><rect x="1143" y="340" width="3" height="15" fill="rgb(209,74,11)"/><text x="1146.00" y="350.50"></text></g><g><title>0x7fed8041f5e6 (?) (1 samples, 0.19%)</title><rect x="1143" y="356" width="3" height="15" fill="rgb(251,157,17)"/><text x="1146.00" y="366.50"></text></g><g><title>0x7fed8041f486 (?) (1 samples, 0.19%)</title><rect x="1143" y="372" width="3" height="15" fill="rgb(221,53,10)"/><text x="1146.00" y="382.50"></text></g><g><title>0x7fed80409c8d (?) (1 samples, 0.19%)</title><rect x="1143" y="388" width="3" height="15" fill="rgb(216,125,10)"/><text x="1146.00" y="398.50"></text></g><g><title>0x7fed80408b69 (?) (1 samples, 0.19%)</title><rect x="1143" y="404" width="3" height="15" fill="rgb(228,201,54)"/><text x="1146.00" y="414.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1146" y="340" width="2" height="15" fill="rgb(241,167,9)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1146" y="356" width="2" height="15" fill="rgb(238,185,44)"/><text x="1149.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1146" y="372" width="2" height="15" fill="rgb(237,183,10)"/><text x="1149.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1146" y="388" width="2" height="15" fill="rgb(252,198,43)"/><text x="1149.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="340" width="2" height="15" fill="rgb(244,63,34)"/><text x="1151.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="356" width="2" height="15" fill="rgb(240,71,8)"/><text x="1151.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="372" width="2" height="15" fill="rgb(245,6,33)"/><text x="1151.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="388" width="2" height="15" fill="rgb(221,144,27)"/><text x="1151.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="404" width="2" height="15" fill="rgb(243,40,44)"/><text x="1151.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="420" width="2" height="15" fill="rgb(248,52,48)"/><text x="1151.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="436" width="2" height="15" fill="rgb(245,35,51)"/><text x="1151.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="452" width="2" height="15" fill="rgb(218,17,36)"/><text x="1151.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="468" width="2" height="15" fill="rgb(238,188,6)"/><text x="1151.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="484" width="2" height="15" fill="rgb(242,228,34)"/><text x="1151.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="500" width="2" height="15" fill="rgb(209,209,39)"/><text x="1151.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="516" width="2" height="15" fill="rgb(232,49,17)"/><text x="1151.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1148" y="532" width="2" height="15" fill="rgb(246,10,15)"/><text x="1151.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1148" y="548" width="2" height="15" fill="rgb(210,147,52)"/><text x="1151.00" y="558.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:18) (4 samples, 0.78%)</title><rect x="1143" y="100" width="10" height="15" fill="rgb(252,134,32)"/><text x="1146.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.78%)</title><rect x="1143" y="116" width="10" height="15" fill="rgb(221,53,18)"/><text x="1146.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.78%)</title><rect x="1143" y="132" width="10" height="15" fill="rgb(216,55,44)"/><text x="1146.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.78%)</title><rect x="1143" y="148" width="10" height="15" fill="rgb(235,66,0)"/><text x="1146.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.78%)</title><rect x="1143" y="164" width="10" height="15" fill="rgb(219,214,8)"/><text x="1146.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.78%)</title><rect x="1143" y="180" width="10" height="15" fill="rgb(226,12,28)"/><text x="1146.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.78%)</title><rect x="1143" y="196" width="10" height="15" fill="rgb(222,175,27)"/><text x="1146.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="212" width="7" height="15" fill="rgb(241,51,25)"/><text x="1149.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="228" width="7" height="15" fill="rgb(207,18,47)"/><text x="1149.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="244" width="7" height="15" fill="rgb(213,52,0)"/><text x="1149.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="260" width="7" height="15" fill="rgb(218,165,26)"/><text x="1149.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="276" width="7" height="15" fill="rgb(233,169,3)"/><text x="1149.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="292" width="7" height="15" fill="rgb(217,202,3)"/><text x="1149.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="308" width="7" height="15" fill="rgb(241,115,18)"/><text x="1149.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="1146" y="324" width="7" height="15" fill="rgb(226,165,40)"/><text x="1149.00" y="334.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1150" y="340" width="3" height="15" fill="rgb(230,104,49)"/><text x="1153.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1150" y="356" width="3" height="15" fill="rgb(234,59,7)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1150" y="372" width="3" height="15" fill="rgb(228,126,13)"/><text x="1153.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1150" y="388" width="3" height="15" fill="rgb(242,79,42)"/><text x="1153.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1150" y="404" width="3" height="15" fill="rgb(222,42,9)"/><text x="1153.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1150" y="420" width="3" height="15" fill="rgb(251,51,52)"/><text x="1153.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1150" y="436" width="3" height="15" fill="rgb(250,106,14)"/><text x="1153.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1150" y="452" width="3" height="15" fill="rgb(230,72,28)"/><text x="1153.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1150" y="468" width="3" height="15" fill="rgb(222,84,49)"/><text x="1153.00" y="478.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1153" y="340" width="2" height="15" fill="rgb(224,111,39)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1153" y="356" width="2" height="15" fill="rgb(205,107,14)"/><text x="1156.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1153" y="372" width="2" height="15" fill="rgb(242,166,36)"/><text x="1156.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1155" y="340" width="2" height="15" fill="rgb(235,197,9)"/><text x="1158.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1155" y="356" width="2" height="15" fill="rgb(216,79,7)"/><text x="1158.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1157" y="340" width="3" height="15" fill="rgb(229,204,35)"/><text x="1160.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1160" y="340" width="4" height="15" fill="rgb(219,74,5)"/><text x="1163.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1160" y="356" width="4" height="15" fill="rgb(238,105,35)"/><text x="1163.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1160" y="372" width="4" height="15" fill="rgb(229,170,45)"/><text x="1163.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1162" y="388" width="2" height="15" fill="rgb(215,177,40)"/><text x="1165.00" y="398.50"></text></g><g><title>0x7fedc0312998 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1164" y="372" width="2" height="15" fill="rgb(247,160,38)"/><text x="1167.00" y="382.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1164" y="340" width="5" height="15" fill="rgb(248,40,14)"/><text x="1167.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1164" y="356" width="5" height="15" fill="rgb(218,174,16)"/><text x="1167.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="372" width="3" height="15" fill="rgb(245,44,2)"/><text x="1169.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="388" width="3" height="15" fill="rgb(232,170,11)"/><text x="1169.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="404" width="3" height="15" fill="rgb(250,65,52)"/><text x="1169.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="420" width="3" height="15" fill="rgb(211,167,6)"/><text x="1169.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="436" width="3" height="15" fill="rgb(224,202,7)"/><text x="1169.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="452" width="3" height="15" fill="rgb(254,73,4)"/><text x="1169.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="468" width="3" height="15" fill="rgb(213,225,54)"/><text x="1169.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="484" width="3" height="15" fill="rgb(251,150,15)"/><text x="1169.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1166" y="500" width="3" height="15" fill="rgb(248,145,48)"/><text x="1169.00" y="510.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1169" y="340" width="4" height="15" fill="rgb(253,225,42)"/><text x="1172.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1169" y="356" width="4" height="15" fill="rgb(224,214,12)"/><text x="1172.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1169" y="372" width="4" height="15" fill="rgb(212,134,35)"/><text x="1172.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1169" y="388" width="4" height="15" fill="rgb(234,108,10)"/><text x="1172.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1169" y="404" width="4" height="15" fill="rgb(217,35,50)"/><text x="1172.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1169" y="420" width="4" height="15" fill="rgb(247,45,22)"/><text x="1172.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1171" y="436" width="2" height="15" fill="rgb(209,159,33)"/><text x="1174.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1171" y="452" width="2" height="15" fill="rgb(209,227,17)"/><text x="1174.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1171" y="468" width="2" height="15" fill="rgb(246,100,38)"/><text x="1174.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1171" y="484" width="2" height="15" fill="rgb(240,159,44)"/><text x="1174.00" y="494.50"></text></g><g><title>0x7fed7ff97930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1171" y="500" width="2" height="15" fill="rgb(212,92,31)"/><text x="1174.00" y="510.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1173" y="340" width="3" height="15" fill="rgb(210,76,47)"/><text x="1176.00" y="350.50"></text></g><g><title>0x7fedc0312991 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1176" y="372" width="2" height="15" fill="rgb(226,84,7)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1178" y="372" width="2" height="15" fill="rgb(229,162,33)"/><text x="1181.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="420" width="3" height="15" fill="rgb(228,137,22)"/><text x="1183.00" y="430.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1180" y="436" width="3" height="15" fill="rgb(254,90,49)"/><text x="1183.00" y="446.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="1176" y="340" width="9" height="15" fill="rgb(244,25,23)"/><text x="1179.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="1176" y="356" width="9" height="15" fill="rgb(207,2,31)"/><text x="1179.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1180" y="372" width="5" height="15" fill="rgb(246,30,12)"/><text x="1183.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1180" y="388" width="5" height="15" fill="rgb(243,26,22)"/><text x="1183.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1180" y="404" width="5" height="15" fill="rgb(235,18,49)"/><text x="1183.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="420" width="2" height="15" fill="rgb(221,219,46)"/><text x="1186.00" y="430.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="436" width="2" height="15" fill="rgb(206,194,6)"/><text x="1186.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1185" y="388" width="2" height="15" fill="rgb(252,10,15)"/><text x="1188.00" y="398.50"></text></g><g><title>all (513 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,157,0)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:52) (20 samples, 3.90%)</title><rect x="1143" y="52" width="47" height="15" fill="rgb(224,13,15)"/><text x="1146.00" y="62.50">&lt;mod..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:51) (20 samples, 3.90%)</title><rect x="1143" y="68" width="47" height="15" fill="rgb(237,63,25)"/><text x="1146.00" y="78.50">prof..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29) (20 samples, 3.90%)</title><rect x="1143" y="84" width="47" height="15" fill="rgb(254,48,27)"/><text x="1146.00" y="94.50">setu..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:23) (16 samples, 3.12%)</title><rect x="1153" y="100" width="37" height="15" fill="rgb(232,142,47)"/><text x="1156.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (16 samples, 3.12%)</title><rect x="1153" y="116" width="37" height="15" fill="rgb(223,50,47)"/><text x="1156.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (16 samples, 3.12%)</title><rect x="1153" y="132" width="37" height="15" fill="rgb(213,99,52)"/><text x="1156.00" y="142.50">&lt;la..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (16 samples, 3.12%)</title><rect x="1153" y="148" width="37" height="15" fill="rgb(253,73,11)"/><text x="1156.00" y="158.50">run..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (16 samples, 3.12%)</title><rect x="1153" y="164" width="37" height="15" fill="rgb(207,143,26)"/><text x="1156.00" y="174.50">_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (16 samples, 3.12%)</title><rect x="1153" y="180" width="37" height="15" fill="rgb(246,68,54)"/><text x="1156.00" y="190.50">run..</text></g><g><title>run (onnxruntime/capi/session.py:136) (16 samples, 3.12%)</title><rect x="1153" y="196" width="37" height="15" fill="rgb(245,11,22)"/><text x="1156.00" y="206.50">run..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="212" width="37" height="15" fill="rgb(254,21,11)"/><text x="1156.00" y="222.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="228" width="37" height="15" fill="rgb(208,160,43)"/><text x="1156.00" y="238.50">voi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="244" width="37" height="15" fill="rgb(225,153,7)"/><text x="1156.00" y="254.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="260" width="37" height="15" fill="rgb(235,20,10)"/><text x="1156.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="276" width="37" height="15" fill="rgb(220,187,1)"/><text x="1156.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="292" width="37" height="15" fill="rgb(228,36,43)"/><text x="1156.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="308" width="37" height="15" fill="rgb(240,55,23)"/><text x="1156.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.12%)</title><rect x="1153" y="324" width="37" height="15" fill="rgb(231,91,49)"/><text x="1156.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(231,26,9)"/><text x="1188.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(245,147,12)"/><text x="1188.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1185" y="372" width="5" height="15" fill="rgb(253,122,49)"/><text x="1188.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(218,71,10)"/><text x="1190.00" y="398.50"></text></g></g></svg>