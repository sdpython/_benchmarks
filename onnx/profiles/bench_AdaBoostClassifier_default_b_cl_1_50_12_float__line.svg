<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1654" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1637.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1637.00"> </text><g id="frames"><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.18%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(252,95,1)"/><text x="13.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.18%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(230,212,51)"/><text x="13.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:160) (1 samples, 0.18%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(251,217,20)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/base.py:161) (1 samples, 0.18%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(243,192,38)"/><text x="13.00" y="254.50"></text></g><g><title>kind (inspect.py:2531) (1 samples, 0.18%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(227,121,23)"/><text x="13.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:31) (2 samples, 0.36%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(243,69,16)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:11) (2 samples, 0.36%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(208,145,14)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (2 samples, 0.36%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(240,71,32)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.36%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(224,42,25)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.36%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(244,206,14)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.36%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(226,196,9)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.36%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(206,219,35)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (2 samples, 0.36%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(248,34,26)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (2 samples, 0.36%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(220,34,5)"/><text x="13.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:74) (1 samples, 0.18%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(238,11,27)"/><text x="15.00" y="206.50"></text></g><g><title>randint (mtrand.c:6007) (1 samples, 0.18%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(229,27,25)"/><text x="15.00" y="222.50"></text></g><g><title>randint (mtrand.c:6086) (1 samples, 0.18%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(241,97,3)"/><text x="15.00" y="238.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c:25435) (1 samples, 0.18%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(254,191,18)"/><text x="15.00" y="254.50"></text></g><g><title>arraydescr_name_get (descriptor.c:1928) (1 samples, 0.18%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(235,4,18)"/><text x="15.00" y="270.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (1 samples, 0.18%)</title><rect x="12" y="276" width="2" height="15" fill="rgb(208,101,44)"/><text x="15.00" y="286.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.18%)</title><rect x="12" y="292" width="2" height="15" fill="rgb(230,169,38)"/><text x="15.00" y="302.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.18%)</title><rect x="12" y="308" width="2" height="15" fill="rgb(207,159,48)"/><text x="15.00" y="318.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.18%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(237,29,25)"/><text x="17.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.18%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(205,166,49)"/><text x="17.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:246) (1 samples, 0.18%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(236,50,22)"/><text x="17.00" y="238.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:28) (2 samples, 0.36%)</title><rect x="14" y="84" width="4" height="15" fill="rgb(243,82,48)"/><text x="17.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.36%)</title><rect x="14" y="100" width="4" height="15" fill="rgb(229,191,36)"/><text x="17.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.36%)</title><rect x="14" y="116" width="4" height="15" fill="rgb(251,227,12)"/><text x="17.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.36%)</title><rect x="14" y="132" width="4" height="15" fill="rgb(251,133,41)"/><text x="17.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.36%)</title><rect x="14" y="148" width="4" height="15" fill="rgb(215,188,27)"/><text x="17.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.36%)</title><rect x="14" y="164" width="4" height="15" fill="rgb(219,97,18)"/><text x="17.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.36%)</title><rect x="14" y="180" width="4" height="15" fill="rgb(233,90,47)"/><text x="17.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (1 samples, 0.18%)</title><rect x="16" y="196" width="2" height="15" fill="rgb(209,0,27)"/><text x="19.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.18%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(212,119,50)"/><text x="19.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.18%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(234,16,35)"/><text x="19.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:94) (1 samples, 0.18%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(231,17,37)"/><text x="19.00" y="254.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.18%)</title><rect x="18" y="148" width="2" height="15" fill="rgb(250,5,53)"/><text x="21.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.18%)</title><rect x="18" y="164" width="2" height="15" fill="rgb(208,204,22)"/><text x="21.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.18%)</title><rect x="18" y="180" width="2" height="15" fill="rgb(221,221,37)"/><text x="21.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.18%)</title><rect x="18" y="196" width="2" height="15" fill="rgb(205,41,49)"/><text x="21.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.18%)</title><rect x="22" y="228" width="3" height="15" fill="rgb(223,65,29)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.18%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(222,94,17)"/><text x="28.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.18%)</title><rect x="25" y="260" width="2" height="15" fill="rgb(247,206,46)"/><text x="28.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 0.73%)</title><rect x="20" y="212" width="9" height="15" fill="rgb(232,225,51)"/><text x="23.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.36%)</title><rect x="25" y="228" width="4" height="15" fill="rgb(231,194,8)"/><text x="28.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.18%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(234,137,12)"/><text x="30.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.18%)</title><rect x="27" y="260" width="2" height="15" fill="rgb(247,170,38)"/><text x="30.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.18%)</title><rect x="29" y="244" width="2" height="15" fill="rgb(241,105,15)"/><text x="32.00" y="254.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.18%)</title><rect x="29" y="260" width="2" height="15" fill="rgb(213,153,27)"/><text x="32.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.18%)</title><rect x="31" y="244" width="2" height="15" fill="rgb(246,116,8)"/><text x="34.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.18%)</title><rect x="31" y="260" width="2" height="15" fill="rgb(221,64,41)"/><text x="34.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.18%)</title><rect x="33" y="244" width="2" height="15" fill="rgb(219,186,37)"/><text x="36.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.18%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(229,165,36)"/><text x="38.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.18%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(235,150,23)"/><text x="38.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1674) (1 samples, 0.18%)</title><rect x="35" y="276" width="2" height="15" fill="rgb(231,67,22)"/><text x="38.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.18%)</title><rect x="37" y="244" width="3" height="15" fill="rgb(218,205,7)"/><text x="40.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.18%)</title><rect x="37" y="260" width="3" height="15" fill="rgb(214,226,25)"/><text x="40.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.18%)</title><rect x="40" y="244" width="2" height="15" fill="rgb(247,218,35)"/><text x="43.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.18%)</title><rect x="40" y="260" width="2" height="15" fill="rgb(232,109,26)"/><text x="43.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.18%)</title><rect x="42" y="260" width="2" height="15" fill="rgb(248,181,21)"/><text x="45.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.18%)</title><rect x="42" y="276" width="2" height="15" fill="rgb(241,148,12)"/><text x="45.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.36%)</title><rect x="42" y="244" width="4" height="15" fill="rgb(243,88,47)"/><text x="45.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.18%)</title><rect x="44" y="260" width="2" height="15" fill="rgb(231,32,29)"/><text x="47.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.18%)</title><rect x="44" y="276" width="2" height="15" fill="rgb(215,159,51)"/><text x="47.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.18%)</title><rect x="46" y="260" width="2" height="15" fill="rgb(253,97,25)"/><text x="49.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.55%)</title><rect x="48" y="260" width="7" height="15" fill="rgb(213,1,27)"/><text x="51.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.36%)</title><rect x="50" y="276" width="5" height="15" fill="rgb(249,215,23)"/><text x="53.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.91%)</title><rect x="46" y="244" width="11" height="15" fill="rgb(214,27,6)"/><text x="49.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.18%)</title><rect x="55" y="260" width="2" height="15" fill="rgb(223,59,8)"/><text x="58.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.18%)</title><rect x="55" y="276" width="2" height="15" fill="rgb(239,83,21)"/><text x="58.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (14 samples, 2.55%)</title><rect x="29" y="212" width="30" height="15" fill="rgb(234,126,53)"/><text x="32.00" y="222.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (14 samples, 2.55%)</title><rect x="29" y="228" width="30" height="15" fill="rgb(238,227,34)"/><text x="32.00" y="238.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.18%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(234,145,51)"/><text x="60.00" y="254.50"></text></g><g><title>0x7f14a50d9f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="59" y="244" width="2" height="15" fill="rgb(231,70,7)"/><text x="62.00" y="254.50"></text></g><g><title>0x7f14a50c9d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="59" y="260" width="2" height="15" fill="rgb(238,166,42)"/><text x="62.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.18%)</title><rect x="59" y="276" width="2" height="15" fill="rgb(208,66,6)"/><text x="62.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="59" y="292" width="2" height="15" fill="rgb(234,3,27)"/><text x="62.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.18%)</title><rect x="59" y="308" width="2" height="15" fill="rgb(222,11,3)"/><text x="62.00" y="318.50"></text></g><g><title>0x7f14a50cc604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="61" y="308" width="2" height="15" fill="rgb(221,54,11)"/><text x="64.00" y="318.50"></text></g><g><title>0x7f14a50e82df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="61" y="276" width="4" height="15" fill="rgb(230,28,0)"/><text x="64.00" y="286.50"></text></g><g><title>0x7f14a50ccd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="61" y="292" width="4" height="15" fill="rgb(249,74,22)"/><text x="64.00" y="302.50"></text></g><g><title>0x7f14a50cc666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="63" y="308" width="2" height="15" fill="rgb(221,222,2)"/><text x="66.00" y="318.50"></text></g><g><title>0x7f14a50c22fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="63" y="324" width="2" height="15" fill="rgb(240,215,27)"/><text x="66.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.18%)</title><rect x="63" y="340" width="2" height="15" fill="rgb(229,82,11)"/><text x="66.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.18%)</title><rect x="63" y="356" width="2" height="15" fill="rgb(225,170,49)"/><text x="66.00" y="366.50"></text></g><g><title>0x7f14a50e8592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(209,165,41)"/><text x="68.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.18%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(212,9,25)"/><text x="68.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="65" y="308" width="2" height="15" fill="rgb(253,90,3)"/><text x="68.00" y="318.50"></text></g><g><title>0x7f14a50e8644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="67" y="276" width="3" height="15" fill="rgb(229,137,7)"/><text x="70.00" y="286.50"></text></g><g><title>0x7f14a50d9fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.91%)</title><rect x="61" y="244" width="11" height="15" fill="rgb(248,177,14)"/><text x="64.00" y="254.50"></text></g><g><title>0x7f14a50e9405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.91%)</title><rect x="61" y="260" width="11" height="15" fill="rgb(210,82,24)"/><text x="64.00" y="270.50"></text></g><g><title>0x7f14a50e8c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="70" y="276" width="2" height="15" fill="rgb(227,51,41)"/><text x="73.00" y="286.50"></text></g><g><title>0x7f14a50c05f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="70" y="292" width="2" height="15" fill="rgb(216,7,31)"/><text x="73.00" y="302.50"></text></g><g><title>0x7f14a50bff22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="70" y="308" width="2" height="15" fill="rgb(217,143,30)"/><text x="73.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (7 samples, 1.27%)</title><rect x="59" y="212" width="15" height="15" fill="rgb(244,6,27)"/><text x="62.00" y="222.50"></text></g><g><title>0x7f14a50dad2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.27%)</title><rect x="59" y="228" width="15" height="15" fill="rgb(207,164,41)"/><text x="62.00" y="238.50"></text></g><g><title>0x7f14a50da05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="72" y="244" width="2" height="15" fill="rgb(242,181,3)"/><text x="75.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.18%)</title><rect x="72" y="260" width="2" height="15" fill="rgb(235,12,54)"/><text x="75.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.18%)</title><rect x="74" y="212" width="2" height="15" fill="rgb(236,18,2)"/><text x="77.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.18%)</title><rect x="76" y="276" width="2" height="15" fill="rgb(235,95,14)"/><text x="79.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="76" y="292" width="2" height="15" fill="rgb(247,50,43)"/><text x="79.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="76" y="308" width="2" height="15" fill="rgb(239,187,42)"/><text x="79.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.18%)</title><rect x="76" y="324" width="2" height="15" fill="rgb(230,102,46)"/><text x="79.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.18%)</title><rect x="78" y="340" width="2" height="15" fill="rgb(227,110,16)"/><text x="81.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="80" y="340" width="2" height="15" fill="rgb(236,2,26)"/><text x="83.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.18%)</title><rect x="80" y="356" width="2" height="15" fill="rgb(218,42,12)"/><text x="83.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.18%)</title><rect x="80" y="372" width="2" height="15" fill="rgb(232,132,48)"/><text x="83.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.55%)</title><rect x="78" y="324" width="7" height="15" fill="rgb(244,227,34)"/><text x="81.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.18%)</title><rect x="82" y="340" width="3" height="15" fill="rgb(212,106,19)"/><text x="85.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2152) (1 samples, 0.18%)</title><rect x="82" y="356" width="3" height="15" fill="rgb(217,30,43)"/><text x="85.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (5 samples, 0.91%)</title><rect x="76" y="212" width="11" height="15" fill="rgb(205,182,37)"/><text x="79.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 0.91%)</title><rect x="76" y="228" width="11" height="15" fill="rgb(210,191,33)"/><text x="79.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.91%)</title><rect x="76" y="244" width="11" height="15" fill="rgb(211,34,48)"/><text x="79.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.91%)</title><rect x="76" y="260" width="11" height="15" fill="rgb(247,40,1)"/><text x="79.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.73%)</title><rect x="78" y="276" width="9" height="15" fill="rgb(224,86,13)"/><text x="81.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.73%)</title><rect x="78" y="292" width="9" height="15" fill="rgb(236,164,43)"/><text x="81.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.73%)</title><rect x="78" y="308" width="9" height="15" fill="rgb(251,219,7)"/><text x="81.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.18%)</title><rect x="85" y="324" width="2" height="15" fill="rgb(207,111,49)"/><text x="88.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.18%)</title><rect x="85" y="340" width="2" height="15" fill="rgb(227,227,5)"/><text x="88.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.18%)</title><rect x="87" y="212" width="2" height="15" fill="rgb(219,88,36)"/><text x="90.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.18%)</title><rect x="87" y="228" width="2" height="15" fill="rgb(247,113,24)"/><text x="90.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.18%)</title><rect x="87" y="244" width="2" height="15" fill="rgb(214,1,46)"/><text x="90.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1981) (1 samples, 0.18%)</title><rect x="87" y="260" width="2" height="15" fill="rgb(221,180,7)"/><text x="90.00" y="270.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (33 samples, 6.00%)</title><rect x="20" y="196" width="71" height="15" fill="rgb(206,101,38)"/><text x="23.00" y="206.50">_samme_p..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (1 samples, 0.18%)</title><rect x="89" y="212" width="2" height="15" fill="rgb(227,149,41)"/><text x="92.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (2 samples, 0.36%)</title><rect x="95" y="212" width="5" height="15" fill="rgb(213,188,12)"/><text x="98.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.18%)</title><rect x="100" y="212" width="2" height="15" fill="rgb(247,167,38)"/><text x="103.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.18%)</title><rect x="102" y="228" width="2" height="15" fill="rgb(233,130,52)"/><text x="105.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.18%)</title><rect x="102" y="244" width="2" height="15" fill="rgb(251,228,5)"/><text x="105.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.18%)</title><rect x="102" y="260" width="2" height="15" fill="rgb(213,87,32)"/><text x="105.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="102" y="276" width="2" height="15" fill="rgb(246,213,33)"/><text x="105.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="102" y="292" width="2" height="15" fill="rgb(218,150,33)"/><text x="105.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.18%)</title><rect x="104" y="260" width="2" height="15" fill="rgb(212,198,36)"/><text x="107.00" y="270.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.18%)</title><rect x="106" y="324" width="2" height="15" fill="rgb(218,67,44)"/><text x="109.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.36%)</title><rect x="106" y="308" width="4" height="15" fill="rgb(234,116,9)"/><text x="109.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.18%)</title><rect x="108" y="324" width="2" height="15" fill="rgb(224,2,9)"/><text x="111.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2062) (1 samples, 0.18%)</title><rect x="108" y="340" width="2" height="15" fill="rgb(210,97,53)"/><text x="111.00" y="350.50"></text></g><g><title>_arraydescr_isnative (descriptor.c:2047) (1 samples, 0.18%)</title><rect x="108" y="356" width="2" height="15" fill="rgb(216,69,3)"/><text x="111.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.18%)</title><rect x="110" y="324" width="2" height="15" fill="rgb(250,215,30)"/><text x="113.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(223,48,20)"/><text x="113.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.18%)</title><rect x="110" y="356" width="2" height="15" fill="rgb(232,58,16)"/><text x="113.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.18%)</title><rect x="110" y="372" width="2" height="15" fill="rgb(241,189,24)"/><text x="113.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.18%)</title><rect x="110" y="388" width="2" height="15" fill="rgb(220,116,9)"/><text x="113.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="110" y="404" width="2" height="15" fill="rgb(231,190,41)"/><text x="113.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="110" y="420" width="2" height="15" fill="rgb(209,123,30)"/><text x="113.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="115" y="340" width="2" height="15" fill="rgb(221,43,51)"/><text x="118.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="115" y="356" width="2" height="15" fill="rgb(211,75,30)"/><text x="118.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.18%)</title><rect x="115" y="372" width="2" height="15" fill="rgb(254,136,53)"/><text x="118.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.73%)</title><rect x="110" y="308" width="9" height="15" fill="rgb(222,26,18)"/><text x="113.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.55%)</title><rect x="112" y="324" width="7" height="15" fill="rgb(213,76,18)"/><text x="115.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.18%)</title><rect x="117" y="340" width="2" height="15" fill="rgb(216,144,47)"/><text x="120.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="117" y="356" width="2" height="15" fill="rgb(206,46,42)"/><text x="120.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="117" y="372" width="2" height="15" fill="rgb(226,80,19)"/><text x="120.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.36%)</title><rect x="119" y="324" width="4" height="15" fill="rgb(236,52,20)"/><text x="122.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="119" y="340" width="4" height="15" fill="rgb(221,198,51)"/><text x="122.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="119" y="356" width="4" height="15" fill="rgb(211,185,8)"/><text x="122.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.36%)</title><rect x="119" y="372" width="4" height="15" fill="rgb(212,168,49)"/><text x="122.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.36%)</title><rect x="119" y="388" width="4" height="15" fill="rgb(226,145,44)"/><text x="122.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.18%)</title><rect x="121" y="404" width="2" height="15" fill="rgb(244,220,48)"/><text x="124.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.18%)</title><rect x="121" y="420" width="2" height="15" fill="rgb(227,121,2)"/><text x="124.00" y="430.50"></text></g><g><title>0x7f14cb774134 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="121" y="436" width="2" height="15" fill="rgb(226,140,23)"/><text x="124.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (3 samples, 0.55%)</title><rect x="119" y="308" width="6" height="15" fill="rgb(234,104,35)"/><text x="122.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.18%)</title><rect x="123" y="324" width="2" height="15" fill="rgb(229,161,47)"/><text x="126.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="123" y="340" width="2" height="15" fill="rgb(250,134,41)"/><text x="126.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="123" y="356" width="2" height="15" fill="rgb(245,48,54)"/><text x="126.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="123" y="372" width="2" height="15" fill="rgb(215,99,5)"/><text x="126.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.18%)</title><rect x="123" y="388" width="2" height="15" fill="rgb(240,135,38)"/><text x="126.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.18%)</title><rect x="123" y="404" width="2" height="15" fill="rgb(207,60,47)"/><text x="126.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.18%)</title><rect x="123" y="420" width="2" height="15" fill="rgb(240,153,51)"/><text x="126.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1488) (1 samples, 0.18%)</title><rect x="123" y="436" width="2" height="15" fill="rgb(244,69,8)"/><text x="126.00" y="446.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (18 samples, 3.27%)</title><rect x="91" y="196" width="39" height="15" fill="rgb(234,61,24)"/><text x="94.00" y="206.50">_sa..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (13 samples, 2.36%)</title><rect x="102" y="212" width="28" height="15" fill="rgb(232,67,16)"/><text x="105.00" y="222.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 2.18%)</title><rect x="104" y="228" width="26" height="15" fill="rgb(237,179,27)"/><text x="107.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (12 samples, 2.18%)</title><rect x="104" y="244" width="26" height="15" fill="rgb(224,136,14)"/><text x="107.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 2.00%)</title><rect x="106" y="260" width="24" height="15" fill="rgb(253,227,34)"/><text x="109.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (11 samples, 2.00%)</title><rect x="106" y="276" width="24" height="15" fill="rgb(206,106,27)"/><text x="109.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.00%)</title><rect x="106" y="292" width="24" height="15" fill="rgb(221,55,19)"/><text x="109.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (2 samples, 0.36%)</title><rect x="125" y="308" width="5" height="15" fill="rgb(241,200,34)"/><text x="128.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (2 samples, 0.36%)</title><rect x="125" y="324" width="5" height="15" fill="rgb(213,188,19)"/><text x="128.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="128" y="340" width="2" height="15" fill="rgb(242,88,20)"/><text x="131.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.18%)</title><rect x="128" y="356" width="2" height="15" fill="rgb(229,84,48)"/><text x="131.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.18%)</title><rect x="132" y="244" width="2" height="15" fill="rgb(224,105,8)"/><text x="135.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.36%)</title><rect x="132" y="228" width="4" height="15" fill="rgb(210,22,48)"/><text x="135.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="134" y="244" width="2" height="15" fill="rgb(231,163,42)"/><text x="137.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1721) (1 samples, 0.18%)</title><rect x="134" y="260" width="2" height="15" fill="rgb(227,196,6)"/><text x="137.00" y="270.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (4 samples, 0.73%)</title><rect x="130" y="196" width="8" height="15" fill="rgb(231,154,27)"/><text x="133.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="132" y="212" width="6" height="15" fill="rgb(250,224,8)"/><text x="135.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="136" y="228" width="2" height="15" fill="rgb(207,102,11)"/><text x="139.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.18%)</title><rect x="136" y="244" width="2" height="15" fill="rgb(213,162,22)"/><text x="139.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="136" y="260" width="2" height="15" fill="rgb(236,174,44)"/><text x="139.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1023) (1 samples, 0.18%)</title><rect x="136" y="276" width="2" height="15" fill="rgb(209,208,22)"/><text x="139.00" y="286.50"></text></g><g><title>array_multiply (number.c:350) (1 samples, 0.18%)</title><rect x="140" y="212" width="3" height="15" fill="rgb(229,30,25)"/><text x="143.00" y="222.50"></text></g><g><title>try_binary_elide (temp_elide.c:338) (1 samples, 0.18%)</title><rect x="140" y="228" width="3" height="15" fill="rgb(226,56,52)"/><text x="143.00" y="238.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.18%)</title><rect x="143" y="292" width="2" height="15" fill="rgb(218,140,9)"/><text x="146.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.36%)</title><rect x="143" y="276" width="4" height="15" fill="rgb(208,56,38)"/><text x="146.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.18%)</title><rect x="145" y="292" width="2" height="15" fill="rgb(233,75,36)"/><text x="148.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.18%)</title><rect x="145" y="308" width="2" height="15" fill="rgb(235,73,37)"/><text x="148.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.18%)</title><rect x="145" y="324" width="2" height="15" fill="rgb(221,211,44)"/><text x="148.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.55%)</title><rect x="143" y="244" width="6" height="15" fill="rgb(244,149,48)"/><text x="146.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.55%)</title><rect x="143" y="260" width="6" height="15" fill="rgb(218,188,54)"/><text x="146.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.18%)</title><rect x="147" y="276" width="2" height="15" fill="rgb(227,140,0)"/><text x="150.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.18%)</title><rect x="147" y="292" width="2" height="15" fill="rgb(205,157,45)"/><text x="150.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.18%)</title><rect x="147" y="308" width="2" height="15" fill="rgb(224,219,14)"/><text x="150.00" y="318.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.18%)</title><rect x="147" y="324" width="2" height="15" fill="rgb(239,33,25)"/><text x="150.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="149" y="244" width="2" height="15" fill="rgb(233,113,7)"/><text x="152.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.18%)</title><rect x="149" y="260" width="2" height="15" fill="rgb(225,228,27)"/><text x="152.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.18%)</title><rect x="149" y="276" width="2" height="15" fill="rgb(218,122,26)"/><text x="152.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (5 samples, 0.91%)</title><rect x="143" y="212" width="10" height="15" fill="rgb(245,168,18)"/><text x="146.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.91%)</title><rect x="143" y="228" width="10" height="15" fill="rgb(234,171,23)"/><text x="146.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="151" y="244" width="2" height="15" fill="rgb(234,207,22)"/><text x="154.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.18%)</title><rect x="151" y="260" width="2" height="15" fill="rgb(215,21,39)"/><text x="154.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.18%)</title><rect x="151" y="276" width="2" height="15" fill="rgb(242,21,45)"/><text x="154.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.18%)</title><rect x="153" y="212" width="2" height="15" fill="rgb(229,69,2)"/><text x="156.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.18%)</title><rect x="153" y="228" width="2" height="15" fill="rgb(228,181,21)"/><text x="156.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.18%)</title><rect x="153" y="244" width="2" height="15" fill="rgb(228,53,50)"/><text x="156.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.18%)</title><rect x="153" y="260" width="2" height="15" fill="rgb(205,125,19)"/><text x="156.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.18%)</title><rect x="153" y="276" width="2" height="15" fill="rgb(230,168,52)"/><text x="156.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.18%)</title><rect x="153" y="292" width="2" height="15" fill="rgb(225,118,17)"/><text x="156.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.18%)</title><rect x="155" y="212" width="3" height="15" fill="rgb(226,58,13)"/><text x="158.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="155" y="228" width="3" height="15" fill="rgb(237,207,24)"/><text x="158.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="155" y="244" width="3" height="15" fill="rgb(242,179,41)"/><text x="158.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="155" y="260" width="3" height="15" fill="rgb(242,134,45)"/><text x="158.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="155" y="276" width="3" height="15" fill="rgb(218,85,1)"/><text x="158.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.18%)</title><rect x="155" y="292" width="3" height="15" fill="rgb(232,60,17)"/><text x="158.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.18%)</title><rect x="155" y="308" width="3" height="15" fill="rgb(248,156,15)"/><text x="158.00" y="318.50"></text></g><g><title>0x7f14ca8b91c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="155" y="324" width="3" height="15" fill="rgb(211,51,46)"/><text x="158.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.18%)</title><rect x="160" y="260" width="2" height="15" fill="rgb(222,142,19)"/><text x="163.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="160" y="276" width="2" height="15" fill="rgb(222,31,14)"/><text x="163.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="160" y="292" width="2" height="15" fill="rgb(218,67,36)"/><text x="163.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="160" y="308" width="2" height="15" fill="rgb(249,89,37)"/><text x="163.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="160" y="324" width="2" height="15" fill="rgb(235,68,23)"/><text x="163.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="160" y="340" width="2" height="15" fill="rgb(210,106,41)"/><text x="163.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="160" y="356" width="2" height="15" fill="rgb(253,145,10)"/><text x="163.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.18%)</title><rect x="162" y="276" width="2" height="15" fill="rgb(234,198,9)"/><text x="165.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3626) (1 samples, 0.18%)</title><rect x="164" y="292" width="2" height="15" fill="rgb(250,179,42)"/><text x="167.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="166" y="308" width="2" height="15" fill="rgb(247,121,43)"/><text x="169.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.18%)</title><rect x="166" y="324" width="2" height="15" fill="rgb(226,56,0)"/><text x="169.00" y="334.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:801) (1 samples, 0.18%)</title><rect x="166" y="340" width="2" height="15" fill="rgb(248,187,27)"/><text x="169.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:562) (1 samples, 0.18%)</title><rect x="168" y="308" width="2" height="15" fill="rgb(232,20,10)"/><text x="171.00" y="318.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1037) (1 samples, 0.18%)</title><rect x="168" y="324" width="2" height="15" fill="rgb(236,18,50)"/><text x="171.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.18%)</title><rect x="170" y="308" width="3" height="15" fill="rgb(224,59,37)"/><text x="173.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.18%)</title><rect x="170" y="324" width="3" height="15" fill="rgb(232,115,31)"/><text x="173.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.18%)</title><rect x="170" y="340" width="3" height="15" fill="rgb(235,159,22)"/><text x="173.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (72 samples, 13.09%)</title><rect x="20" y="180" width="155" height="15" fill="rgb(205,56,54)"/><text x="23.00" y="190.50">&lt;genexpr&gt; (sklearn/..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (17 samples, 3.09%)</title><rect x="138" y="196" width="37" height="15" fill="rgb(218,138,7)"/><text x="141.00" y="206.50">_sa..</text></g><g><title>array_sum (methods.c:2215) (8 samples, 1.45%)</title><rect x="158" y="212" width="17" height="15" fill="rgb(239,201,2)"/><text x="161.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 1.45%)</title><rect x="158" y="228" width="17" height="15" fill="rgb(241,128,14)"/><text x="161.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 1.45%)</title><rect x="158" y="244" width="17" height="15" fill="rgb(253,129,6)"/><text x="161.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.09%)</title><rect x="162" y="260" width="13" height="15" fill="rgb(250,108,11)"/><text x="165.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.91%)</title><rect x="164" y="276" width="11" height="15" fill="rgb(207,48,23)"/><text x="167.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.73%)</title><rect x="166" y="292" width="9" height="15" fill="rgb(226,202,14)"/><text x="169.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.18%)</title><rect x="173" y="308" width="2" height="15" fill="rgb(254,9,19)"/><text x="176.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.18%)</title><rect x="173" y="324" width="2" height="15" fill="rgb(254,109,7)"/><text x="176.00" y="334.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.18%)</title><rect x="175" y="180" width="2" height="15" fill="rgb(229,212,23)"/><text x="178.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="175" y="196" width="2" height="15" fill="rgb(222,84,9)"/><text x="178.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.18%)</title><rect x="175" y="212" width="2" height="15" fill="rgb(227,56,53)"/><text x="178.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (74 samples, 13.45%)</title><rect x="20" y="148" width="159" height="15" fill="rgb(208,163,51)"/><text x="23.00" y="158.50">predict_proba (sklea..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (74 samples, 13.45%)</title><rect x="20" y="164" width="159" height="15" fill="rgb(236,94,38)"/><text x="23.00" y="174.50">decision_function (s..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="177" y="180" width="2" height="15" fill="rgb(213,213,7)"/><text x="180.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="177" y="196" width="2" height="15" fill="rgb(245,155,29)"/><text x="180.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="177" y="212" width="2" height="15" fill="rgb(213,1,43)"/><text x="180.00" y="222.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:18) (76 samples, 13.82%)</title><rect x="18" y="100" width="163" height="15" fill="rgb(237,132,15)"/><text x="21.00" y="110.50">profile (bench_AdaBoo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (76 samples, 13.82%)</title><rect x="18" y="116" width="163" height="15" fill="rgb(245,134,22)"/><text x="21.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (76 samples, 13.82%)</title><rect x="18" y="132" width="163" height="15" fill="rgb(253,17,42)"/><text x="21.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.18%)</title><rect x="179" y="148" width="2" height="15" fill="rgb(221,42,42)"/><text x="182.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.18%)</title><rect x="179" y="164" width="2" height="15" fill="rgb(249,203,40)"/><text x="182.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.18%)</title><rect x="179" y="180" width="2" height="15" fill="rgb(243,8,33)"/><text x="182.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="179" y="196" width="2" height="15" fill="rgb(246,153,47)"/><text x="182.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="179" y="212" width="2" height="15" fill="rgb(227,204,5)"/><text x="182.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.18%)</title><rect x="179" y="228" width="2" height="15" fill="rgb(208,106,5)"/><text x="182.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.18%)</title><rect x="179" y="244" width="2" height="15" fill="rgb(245,207,27)"/><text x="182.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.18%)</title><rect x="179" y="260" width="2" height="15" fill="rgb(219,181,44)"/><text x="182.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.18%)</title><rect x="179" y="276" width="2" height="15" fill="rgb(220,178,1)"/><text x="182.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.18%)</title><rect x="179" y="292" width="2" height="15" fill="rgb(252,74,23)"/><text x="182.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="179" y="308" width="2" height="15" fill="rgb(227,150,27)"/><text x="182.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.18%)</title><rect x="179" y="324" width="2" height="15" fill="rgb(253,214,8)"/><text x="182.00" y="334.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.18%)</title><rect x="179" y="340" width="2" height="15" fill="rgb(212,161,37)"/><text x="182.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.18%)</title><rect x="179" y="356" width="2" height="15" fill="rgb(247,10,31)"/><text x="182.00" y="366.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.18%)</title><rect x="183" y="148" width="2" height="15" fill="rgb(227,160,43)"/><text x="186.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.18%)</title><rect x="183" y="164" width="2" height="15" fill="rgb(220,89,38)"/><text x="186.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.18%)</title><rect x="183" y="180" width="2" height="15" fill="rgb(226,115,21)"/><text x="186.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.18%)</title><rect x="183" y="196" width="2" height="15" fill="rgb(207,14,26)"/><text x="186.00" y="206.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.18%)</title><rect x="185" y="164" width="3" height="15" fill="rgb(231,73,42)"/><text x="188.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.18%)</title><rect x="185" y="180" width="3" height="15" fill="rgb(245,184,8)"/><text x="188.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.18%)</title><rect x="185" y="196" width="3" height="15" fill="rgb(220,208,17)"/><text x="188.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.18%)</title><rect x="185" y="212" width="3" height="15" fill="rgb(227,151,45)"/><text x="188.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="198" y="212" width="2" height="15" fill="rgb(209,111,24)"/><text x="201.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="198" y="228" width="2" height="15" fill="rgb(222,73,29)"/><text x="201.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="198" y="244" width="2" height="15" fill="rgb(232,29,14)"/><text x="201.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.36%)</title><rect x="203" y="228" width="4" height="15" fill="rgb(212,196,10)"/><text x="206.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.18%)</title><rect x="205" y="244" width="2" height="15" fill="rgb(216,25,12)"/><text x="208.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.18%)</title><rect x="207" y="228" width="2" height="15" fill="rgb(213,2,7)"/><text x="210.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.36%)</title><rect x="209" y="228" width="4" height="15" fill="rgb(207,202,42)"/><text x="212.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.36%)</title><rect x="215" y="244" width="5" height="15" fill="rgb(233,179,28)"/><text x="218.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 0.91%)</title><rect x="226" y="260" width="11" height="15" fill="rgb(224,31,34)"/><text x="229.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 1.64%)</title><rect x="220" y="244" width="19" height="15" fill="rgb(222,101,39)"/><text x="223.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.18%)</title><rect x="237" y="260" width="2" height="15" fill="rgb(242,108,28)"/><text x="240.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (20 samples, 3.64%)</title><rect x="200" y="212" width="43" height="15" fill="rgb(254,132,10)"/><text x="203.00" y="222.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 2.55%)</title><rect x="213" y="228" width="30" height="15" fill="rgb(219,28,34)"/><text x="216.00" y="238.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.36%)</title><rect x="239" y="244" width="4" height="15" fill="rgb(253,138,31)"/><text x="242.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.18%)</title><rect x="241" y="260" width="2" height="15" fill="rgb(223,202,19)"/><text x="244.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.18%)</title><rect x="246" y="244" width="2" height="15" fill="rgb(238,50,39)"/><text x="249.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.18%)</title><rect x="248" y="244" width="2" height="15" fill="rgb(205,36,17)"/><text x="251.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:461) (1 samples, 0.18%)</title><rect x="250" y="244" width="2" height="15" fill="rgb(211,197,37)"/><text x="253.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.18%)</title><rect x="252" y="244" width="2" height="15" fill="rgb(231,102,42)"/><text x="255.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.18%)</title><rect x="258" y="260" width="3" height="15" fill="rgb(239,115,43)"/><text x="261.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.36%)</title><rect x="261" y="260" width="4" height="15" fill="rgb(248,123,10)"/><text x="264.00" y="270.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.18%)</title><rect x="265" y="260" width="2" height="15" fill="rgb(254,210,48)"/><text x="268.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 1.45%)</title><rect x="254" y="244" width="17" height="15" fill="rgb(242,25,51)"/><text x="257.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.36%)</title><rect x="267" y="260" width="4" height="15" fill="rgb(224,169,11)"/><text x="270.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.18%)</title><rect x="271" y="260" width="2" height="15" fill="rgb(252,227,45)"/><text x="274.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.55%)</title><rect x="273" y="276" width="7" height="15" fill="rgb(247,59,52)"/><text x="276.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.09%)</title><rect x="271" y="244" width="13" height="15" fill="rgb(229,193,3)"/><text x="274.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 0.91%)</title><rect x="273" y="260" width="11" height="15" fill="rgb(249,111,29)"/><text x="276.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:187) (2 samples, 0.36%)</title><rect x="280" y="276" width="4" height="15" fill="rgb(231,5,54)"/><text x="283.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.36%)</title><rect x="284" y="244" width="4" height="15" fill="rgb(220,87,47)"/><text x="287.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.18%)</title><rect x="286" y="260" width="2" height="15" fill="rgb(231,115,31)"/><text x="289.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1366) (1 samples, 0.18%)</title><rect x="291" y="292" width="2" height="15" fill="rgb(233,189,24)"/><text x="294.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.55%)</title><rect x="288" y="244" width="7" height="15" fill="rgb(207,208,5)"/><text x="291.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.36%)</title><rect x="291" y="260" width="4" height="15" fill="rgb(246,37,12)"/><text x="294.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.36%)</title><rect x="291" y="276" width="4" height="15" fill="rgb(247,174,46)"/><text x="294.00" y="286.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:543) (1 samples, 0.18%)</title><rect x="293" y="292" width="2" height="15" fill="rgb(241,201,37)"/><text x="296.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.18%)</title><rect x="295" y="244" width="2" height="15" fill="rgb(227,149,33)"/><text x="298.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.18%)</title><rect x="297" y="260" width="2" height="15" fill="rgb(218,224,41)"/><text x="300.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.55%)</title><rect x="297" y="244" width="6" height="15" fill="rgb(207,217,39)"/><text x="300.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.36%)</title><rect x="299" y="260" width="4" height="15" fill="rgb(238,87,22)"/><text x="302.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 0.91%)</title><rect x="303" y="260" width="11" height="15" fill="rgb(232,83,1)"/><text x="306.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.18%)</title><rect x="312" y="276" width="2" height="15" fill="rgb(237,182,42)"/><text x="315.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 1.27%)</title><rect x="303" y="244" width="15" height="15" fill="rgb(223,161,51)"/><text x="306.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.36%)</title><rect x="314" y="260" width="4" height="15" fill="rgb(239,194,12)"/><text x="317.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.18%)</title><rect x="318" y="260" width="3" height="15" fill="rgb(249,146,42)"/><text x="321.00" y="270.50"></text></g><g><title>0x7f14cb774df3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="318" y="276" width="3" height="15" fill="rgb(248,37,4)"/><text x="321.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.18%)</title><rect x="321" y="260" width="2" height="15" fill="rgb(222,22,8)"/><text x="324.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (39 samples, 7.09%)</title><rect x="243" y="212" width="84" height="15" fill="rgb(227,126,9)"/><text x="246.00" y="222.50">predict_p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (39 samples, 7.09%)</title><rect x="243" y="228" width="84" height="15" fill="rgb(226,120,8)"/><text x="246.00" y="238.50">_validate..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.73%)</title><rect x="318" y="244" width="9" height="15" fill="rgb(227,174,15)"/><text x="321.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.36%)</title><rect x="323" y="260" width="4" height="15" fill="rgb(247,52,45)"/><text x="326.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.18%)</title><rect x="325" y="276" width="2" height="15" fill="rgb(216,129,27)"/><text x="328.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.18%)</title><rect x="325" y="292" width="2" height="15" fill="rgb(213,122,21)"/><text x="328.00" y="302.50"></text></g><g><title>0x7f14a50e8225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="331" y="276" width="2" height="15" fill="rgb(241,135,35)"/><text x="334.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.18%)</title><rect x="331" y="292" width="2" height="15" fill="rgb(253,101,29)"/><text x="334.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.18%)</title><rect x="331" y="308" width="2" height="15" fill="rgb(205,106,32)"/><text x="334.00" y="318.50"></text></g><g><title>0x7f14a50c222d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="333" y="324" width="3" height="15" fill="rgb(230,218,7)"/><text x="336.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.18%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(227,32,40)"/><text x="339.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.18%)</title><rect x="336" y="372" width="2" height="15" fill="rgb(218,127,4)"/><text x="339.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:300) (1 samples, 0.18%)</title><rect x="336" y="388" width="2" height="15" fill="rgb(243,177,40)"/><text x="339.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.18%)</title><rect x="338" y="356" width="2" height="15" fill="rgb(207,95,20)"/><text x="341.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.18%)</title><rect x="338" y="372" width="2" height="15" fill="rgb(216,84,37)"/><text x="341.00" y="382.50"></text></g><g><title>0x7f14cb6a56a2 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="338" y="388" width="2" height="15" fill="rgb(235,2,50)"/><text x="341.00" y="398.50"></text></g><g><title>0x7f14a50e82df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.73%)</title><rect x="333" y="276" width="9" height="15" fill="rgb(218,110,6)"/><text x="336.00" y="286.50"></text></g><g><title>0x7f14a50ccd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.73%)</title><rect x="333" y="292" width="9" height="15" fill="rgb(233,149,45)"/><text x="336.00" y="302.50"></text></g><g><title>0x7f14a50cc666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.73%)</title><rect x="333" y="308" width="9" height="15" fill="rgb(251,5,1)"/><text x="336.00" y="318.50"></text></g><g><title>0x7f14a50c22fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.55%)</title><rect x="336" y="324" width="6" height="15" fill="rgb(243,138,39)"/><text x="339.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.55%)</title><rect x="336" y="340" width="6" height="15" fill="rgb(209,221,45)"/><text x="339.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.18%)</title><rect x="340" y="356" width="2" height="15" fill="rgb(217,228,3)"/><text x="343.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.18%)</title><rect x="340" y="372" width="2" height="15" fill="rgb(244,12,5)"/><text x="343.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="340" y="388" width="2" height="15" fill="rgb(207,101,12)"/><text x="343.00" y="398.50"></text></g><g><title>0x7f14a50e8364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="342" y="276" width="2" height="15" fill="rgb(226,36,27)"/><text x="345.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.18%)</title><rect x="348" y="308" width="3" height="15" fill="rgb(233,146,35)"/><text x="351.00" y="318.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 0.55%)</title><rect x="346" y="292" width="7" height="15" fill="rgb(254,100,13)"/><text x="349.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.18%)</title><rect x="351" y="308" width="2" height="15" fill="rgb(227,158,46)"/><text x="354.00" y="318.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.18%)</title><rect x="353" y="292" width="2" height="15" fill="rgb(209,114,52)"/><text x="356.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.18%)</title><rect x="353" y="308" width="2" height="15" fill="rgb(209,204,34)"/><text x="356.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.18%)</title><rect x="353" y="324" width="2" height="15" fill="rgb(226,76,44)"/><text x="356.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.18%)</title><rect x="353" y="340" width="2" height="15" fill="rgb(251,125,9)"/><text x="356.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:132) (1 samples, 0.18%)</title><rect x="353" y="356" width="2" height="15" fill="rgb(208,94,5)"/><text x="356.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:73) (1 samples, 0.18%)</title><rect x="353" y="372" width="2" height="15" fill="rgb(232,161,48)"/><text x="356.00" y="382.50"></text></g><g><title>0x7f14a50e8592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.09%)</title><rect x="344" y="276" width="13" height="15" fill="rgb(230,9,33)"/><text x="347.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:2003) (1 samples, 0.18%)</title><rect x="355" y="292" width="2" height="15" fill="rgb(219,9,38)"/><text x="358.00" y="302.50"></text></g><g><title>npy_free_cache_dim (alloc.c:172) (1 samples, 0.18%)</title><rect x="355" y="308" width="2" height="15" fill="rgb(225,20,25)"/><text x="358.00" y="318.50"></text></g><g><title>0x7f14a50e8644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="357" y="276" width="2" height="15" fill="rgb(249,74,9)"/><text x="360.00" y="286.50"></text></g><g><title>0x7f14a50e9405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.55%)</title><rect x="331" y="260" width="30" height="15" fill="rgb(237,157,10)"/><text x="334.00" y="270.50">0x..</text></g><g><title>0x7f14a50e8731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="359" y="276" width="2" height="15" fill="rgb(238,160,8)"/><text x="362.00" y="286.50"></text></g><g><title>0x7f14a50d9fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.73%)</title><rect x="331" y="244" width="33" height="15" fill="rgb(244,109,21)"/><text x="334.00" y="254.50">0x..</text></g><g><title>0x7f14a50e9540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="361" y="260" width="3" height="15" fill="rgb(247,118,5)"/><text x="364.00" y="270.50"></text></g><g><title>0x7f14a50be22b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="361" y="276" width="3" height="15" fill="rgb(220,58,25)"/><text x="364.00" y="286.50"></text></g><g><title>array_take (methods.c:131) (1 samples, 0.18%)</title><rect x="364" y="260" width="2" height="15" fill="rgb(228,136,52)"/><text x="367.00" y="270.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.36%)</title><rect x="366" y="260" width="4" height="15" fill="rgb(205,71,23)"/><text x="369.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.18%)</title><rect x="368" y="276" width="2" height="15" fill="rgb(230,15,5)"/><text x="371.00" y="286.50"></text></g><g><title>0x7f14a50da05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.73%)</title><rect x="364" y="244" width="8" height="15" fill="rgb(217,159,49)"/><text x="367.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.18%)</title><rect x="370" y="260" width="2" height="15" fill="rgb(205,45,13)"/><text x="373.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.18%)</title><rect x="370" y="276" width="2" height="15" fill="rgb(219,4,28)"/><text x="373.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3890) (1 samples, 0.18%)</title><rect x="370" y="292" width="2" height="15" fill="rgb(253,146,52)"/><text x="373.00" y="302.50"></text></g><g><title>0x7f14a50da13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="372" y="244" width="4" height="15" fill="rgb(212,29,50)"/><text x="375.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.36%)</title><rect x="372" y="260" width="4" height="15" fill="rgb(213,184,11)"/><text x="375.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.36%)</title><rect x="372" y="276" width="4" height="15" fill="rgb(249,186,50)"/><text x="375.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.36%)</title><rect x="372" y="292" width="4" height="15" fill="rgb(252,139,25)"/><text x="375.00" y="302.50"></text></g><g><title>0x7f14a50da14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="376" y="244" width="5" height="15" fill="rgb(214,21,7)"/><text x="379.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="379" y="260" width="2" height="15" fill="rgb(218,88,3)"/><text x="382.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="379" y="276" width="2" height="15" fill="rgb(248,97,29)"/><text x="382.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="379" y="292" width="2" height="15" fill="rgb(207,10,36)"/><text x="382.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (26 samples, 4.73%)</title><rect x="327" y="212" width="56" height="15" fill="rgb(238,167,35)"/><text x="330.00" y="222.50">predi..</text></g><g><title>0x7f14a50dad2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 4.36%)</title><rect x="331" y="228" width="52" height="15" fill="rgb(244,52,48)"/><text x="334.00" y="238.50">0x7f1..</text></g><g><title>0x7f14a50da554 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="381" y="244" width="2" height="15" fill="rgb(211,143,43)"/><text x="384.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="383" y="228" width="2" height="15" fill="rgb(223,95,36)"/><text x="386.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="383" y="244" width="2" height="15" fill="rgb(247,61,16)"/><text x="386.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.18%)</title><rect x="383" y="260" width="2" height="15" fill="rgb(220,43,49)"/><text x="386.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.36%)</title><rect x="383" y="212" width="4" height="15" fill="rgb(209,15,4)"/><text x="386.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.18%)</title><rect x="385" y="228" width="2" height="15" fill="rgb(232,183,14)"/><text x="388.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:462) (1 samples, 0.18%)</title><rect x="385" y="244" width="2" height="15" fill="rgb(238,129,23)"/><text x="388.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="389" y="356" width="2" height="15" fill="rgb(237,179,37)"/><text x="392.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 0.73%)</title><rect x="389" y="276" width="9" height="15" fill="rgb(246,142,4)"/><text x="392.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.73%)</title><rect x="389" y="292" width="9" height="15" fill="rgb(227,33,52)"/><text x="392.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 0.73%)</title><rect x="389" y="308" width="9" height="15" fill="rgb(244,79,44)"/><text x="392.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 0.73%)</title><rect x="389" y="324" width="9" height="15" fill="rgb(239,61,42)"/><text x="392.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 0.73%)</title><rect x="389" y="340" width="9" height="15" fill="rgb(241,106,15)"/><text x="392.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.55%)</title><rect x="391" y="356" width="7" height="15" fill="rgb(217,46,2)"/><text x="394.00" y="366.50"></text></g><g><title>0x7f14cb6ace7a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="396" y="372" width="2" height="15" fill="rgb(243,82,41)"/><text x="399.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.18%)</title><rect x="398" y="308" width="2" height="15" fill="rgb(211,214,34)"/><text x="401.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.18%)</title><rect x="398" y="324" width="2" height="15" fill="rgb(230,27,44)"/><text x="401.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.18%)</title><rect x="398" y="340" width="2" height="15" fill="rgb(243,76,34)"/><text x="401.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2200) (1 samples, 0.18%)</title><rect x="398" y="356" width="2" height="15" fill="rgb(240,14,49)"/><text x="401.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.18%)</title><rect x="400" y="340" width="2" height="15" fill="rgb(228,12,8)"/><text x="403.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.36%)</title><rect x="400" y="324" width="4" height="15" fill="rgb(222,81,53)"/><text x="403.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.18%)</title><rect x="402" y="340" width="2" height="15" fill="rgb(215,110,22)"/><text x="405.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.18%)</title><rect x="402" y="356" width="2" height="15" fill="rgb(209,184,17)"/><text x="405.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.18%)</title><rect x="402" y="372" width="2" height="15" fill="rgb(253,222,43)"/><text x="405.00" y="382.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.18%)</title><rect x="402" y="388" width="2" height="15" fill="rgb(214,188,2)"/><text x="405.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.18%)</title><rect x="404" y="340" width="2" height="15" fill="rgb(232,131,34)"/><text x="407.00" y="350.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:725) (1 samples, 0.18%)</title><rect x="404" y="356" width="2" height="15" fill="rgb(227,133,13)"/><text x="407.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.36%)</title><rect x="404" y="324" width="5" height="15" fill="rgb(226,42,53)"/><text x="407.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.18%)</title><rect x="406" y="340" width="3" height="15" fill="rgb(221,166,11)"/><text x="409.00" y="350.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.18%)</title><rect x="406" y="356" width="3" height="15" fill="rgb(213,114,26)"/><text x="409.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.18%)</title><rect x="409" y="324" width="2" height="15" fill="rgb(244,175,51)"/><text x="412.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.18%)</title><rect x="409" y="340" width="2" height="15" fill="rgb(247,168,30)"/><text x="412.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.18%)</title><rect x="409" y="356" width="2" height="15" fill="rgb(240,148,54)"/><text x="412.00" y="366.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="409" y="372" width="2" height="15" fill="rgb(253,170,5)"/><text x="412.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (12 samples, 2.18%)</title><rect x="387" y="212" width="26" height="15" fill="rgb(227,49,53)"/><text x="390.00" y="222.50">p..</text></g><g><title>array_sum (methods.c:2215) (12 samples, 2.18%)</title><rect x="387" y="228" width="26" height="15" fill="rgb(238,89,16)"/><text x="390.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 2.18%)</title><rect x="387" y="244" width="26" height="15" fill="rgb(236,124,11)"/><text x="390.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 2.18%)</title><rect x="387" y="260" width="26" height="15" fill="rgb(215,46,52)"/><text x="390.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.27%)</title><rect x="398" y="276" width="15" height="15" fill="rgb(245,14,54)"/><text x="401.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.27%)</title><rect x="398" y="292" width="15" height="15" fill="rgb(248,85,31)"/><text x="401.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.09%)</title><rect x="400" y="308" width="13" height="15" fill="rgb(210,150,49)"/><text x="403.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.18%)</title><rect x="411" y="324" width="2" height="15" fill="rgb(209,49,5)"/><text x="414.00" y="334.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.18%)</title><rect x="413" y="228" width="2" height="15" fill="rgb(227,130,37)"/><text x="416.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.18%)</title><rect x="413" y="244" width="2" height="15" fill="rgb(220,79,11)"/><text x="416.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.36%)</title><rect x="419" y="276" width="5" height="15" fill="rgb(237,45,20)"/><text x="422.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1901) (2 samples, 0.36%)</title><rect x="419" y="292" width="5" height="15" fill="rgb(242,168,41)"/><text x="422.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.55%)</title><rect x="419" y="260" width="7" height="15" fill="rgb(207,23,51)"/><text x="422.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.18%)</title><rect x="424" y="276" width="2" height="15" fill="rgb(234,31,54)"/><text x="427.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.18%)</title><rect x="424" y="292" width="2" height="15" fill="rgb(226,122,16)"/><text x="427.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.73%)</title><rect x="419" y="244" width="9" height="15" fill="rgb(249,124,5)"/><text x="422.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="426" y="260" width="2" height="15" fill="rgb(228,95,27)"/><text x="429.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.18%)</title><rect x="426" y="276" width="2" height="15" fill="rgb(247,52,48)"/><text x="429.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.18%)</title><rect x="426" y="292" width="2" height="15" fill="rgb(230,108,10)"/><text x="429.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.18%)</title><rect x="426" y="308" width="2" height="15" fill="rgb(210,107,11)"/><text x="429.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1427) (1 samples, 0.18%)</title><rect x="426" y="324" width="2" height="15" fill="rgb(245,30,38)"/><text x="429.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 1.45%)</title><rect x="413" y="212" width="17" height="15" fill="rgb(237,54,20)"/><text x="416.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (7 samples, 1.27%)</title><rect x="415" y="228" width="15" height="15" fill="rgb(210,197,23)"/><text x="418.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.18%)</title><rect x="428" y="244" width="2" height="15" fill="rgb(216,65,4)"/><text x="431.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.18%)</title><rect x="428" y="260" width="2" height="15" fill="rgb(217,94,8)"/><text x="431.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="434" y="244" width="2" height="15" fill="rgb(211,191,44)"/><text x="437.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.18%)</title><rect x="434" y="260" width="2" height="15" fill="rgb(254,188,21)"/><text x="437.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.18%)</title><rect x="436" y="260" width="3" height="15" fill="rgb(205,158,29)"/><text x="439.00" y="270.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:203) (1 samples, 0.18%)</title><rect x="436" y="276" width="3" height="15" fill="rgb(226,30,32)"/><text x="439.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.18%)</title><rect x="439" y="276" width="2" height="15" fill="rgb(242,187,33)"/><text x="442.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="441" y="276" width="2" height="15" fill="rgb(229,183,39)"/><text x="444.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="441" y="292" width="2" height="15" fill="rgb(205,209,29)"/><text x="444.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.18%)</title><rect x="441" y="308" width="2" height="15" fill="rgb(249,167,8)"/><text x="444.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.18%)</title><rect x="441" y="324" width="2" height="15" fill="rgb(222,103,30)"/><text x="444.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:699) (1 samples, 0.18%)</title><rect x="441" y="340" width="2" height="15" fill="rgb(218,161,20)"/><text x="444.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.18%)</title><rect x="441" y="356" width="2" height="15" fill="rgb(211,12,18)"/><text x="444.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.18%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(224,194,12)"/><text x="446.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.18%)</title><rect x="443" y="292" width="2" height="15" fill="rgb(210,82,52)"/><text x="446.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.18%)</title><rect x="443" y="308" width="2" height="15" fill="rgb(244,64,24)"/><text x="446.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (117 samples, 21.27%)</title><rect x="196" y="196" width="251" height="15" fill="rgb(224,2,15)"/><text x="199.00" y="206.50">_samme_proba (sklearn/ensemble/_w..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 1.45%)</title><rect x="430" y="212" width="17" height="15" fill="rgb(221,127,16)"/><text x="433.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.09%)</title><rect x="434" y="228" width="13" height="15" fill="rgb(212,116,12)"/><text x="437.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.91%)</title><rect x="436" y="244" width="11" height="15" fill="rgb(249,219,17)"/><text x="439.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.73%)</title><rect x="439" y="260" width="8" height="15" fill="rgb(241,165,34)"/><text x="442.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="445" y="276" width="2" height="15" fill="rgb(252,164,35)"/><text x="448.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.18%)</title><rect x="445" y="292" width="2" height="15" fill="rgb(231,136,1)"/><text x="448.00" y="302.50"></text></g><g><title>0x7f14cb696902 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="445" y="308" width="2" height="15" fill="rgb(235,198,48)"/><text x="448.00" y="318.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (2 samples, 0.36%)</title><rect x="451" y="212" width="5" height="15" fill="rgb(250,72,27)"/><text x="454.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:5) (1 samples, 0.18%)</title><rect x="456" y="212" width="2" height="15" fill="rgb(207,95,12)"/><text x="459.00" y="222.50"></text></g><g><title>get_array_function (arrayfunction_override.c:30) (1 samples, 0.18%)</title><rect x="460" y="260" width="2" height="15" fill="rgb(235,156,16)"/><text x="463.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.55%)</title><rect x="460" y="228" width="6" height="15" fill="rgb(212,39,48)"/><text x="463.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.55%)</title><rect x="460" y="244" width="6" height="15" fill="rgb(236,97,33)"/><text x="463.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.36%)</title><rect x="462" y="260" width="4" height="15" fill="rgb(238,59,8)"/><text x="465.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.36%)</title><rect x="462" y="276" width="4" height="15" fill="rgb(218,159,36)"/><text x="465.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.36%)</title><rect x="462" y="292" width="4" height="15" fill="rgb(241,169,1)"/><text x="465.00" y="302.50"></text></g><g><title>0x7f14cb77574e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="469" y="260" width="2" height="15" fill="rgb(248,175,13)"/><text x="472.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.36%)</title><rect x="473" y="308" width="4" height="15" fill="rgb(249,165,11)"/><text x="476.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.18%)</title><rect x="475" y="324" width="2" height="15" fill="rgb(209,191,20)"/><text x="478.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:105) (1 samples, 0.18%)</title><rect x="477" y="308" width="2" height="15" fill="rgb(233,42,36)"/><text x="480.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.73%)</title><rect x="482" y="324" width="8" height="15" fill="rgb(216,190,41)"/><text x="485.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.73%)</title><rect x="482" y="340" width="8" height="15" fill="rgb(214,176,54)"/><text x="485.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.18%)</title><rect x="492" y="340" width="2" height="15" fill="rgb(225,59,32)"/><text x="495.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.55%)</title><rect x="490" y="324" width="7" height="15" fill="rgb(218,5,27)"/><text x="493.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="494" y="340" width="3" height="15" fill="rgb(233,140,16)"/><text x="497.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="497" y="340" width="2" height="15" fill="rgb(216,214,14)"/><text x="500.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="497" y="356" width="2" height="15" fill="rgb(219,175,17)"/><text x="500.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="497" y="372" width="2" height="15" fill="rgb(207,188,15)"/><text x="500.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="497" y="388" width="2" height="15" fill="rgb(217,0,54)"/><text x="500.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="497" y="404" width="2" height="15" fill="rgb(218,220,21)"/><text x="500.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="497" y="420" width="2" height="15" fill="rgb(232,38,10)"/><text x="500.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="497" y="436" width="2" height="15" fill="rgb(240,213,28)"/><text x="500.00" y="446.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.18%)</title><rect x="499" y="372" width="2" height="15" fill="rgb(225,153,46)"/><text x="502.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.18%)</title><rect x="501" y="388" width="2" height="15" fill="rgb(220,164,36)"/><text x="504.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="499" y="340" width="6" height="15" fill="rgb(220,1,37)"/><text x="502.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.55%)</title><rect x="499" y="356" width="6" height="15" fill="rgb(206,212,38)"/><text x="502.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.36%)</title><rect x="501" y="372" width="4" height="15" fill="rgb(246,27,41)"/><text x="504.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.18%)</title><rect x="503" y="388" width="2" height="15" fill="rgb(218,89,22)"/><text x="506.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.18%)</title><rect x="503" y="404" width="2" height="15" fill="rgb(249,153,48)"/><text x="506.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:457) (1 samples, 0.18%)</title><rect x="503" y="420" width="2" height="15" fill="rgb(224,139,27)"/><text x="506.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="505" y="356" width="2" height="15" fill="rgb(227,130,2)"/><text x="508.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="505" y="372" width="2" height="15" fill="rgb(208,14,31)"/><text x="508.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="505" y="388" width="2" height="15" fill="rgb(217,186,9)"/><text x="508.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.36%)</title><rect x="505" y="340" width="4" height="15" fill="rgb(232,193,9)"/><text x="508.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="507" y="356" width="2" height="15" fill="rgb(245,118,43)"/><text x="510.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="507" y="372" width="2" height="15" fill="rgb(241,110,42)"/><text x="510.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.18%)</title><rect x="509" y="340" width="3" height="15" fill="rgb(234,87,45)"/><text x="512.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.18%)</title><rect x="509" y="356" width="3" height="15" fill="rgb(212,95,8)"/><text x="512.00" y="366.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.18%)</title><rect x="509" y="372" width="3" height="15" fill="rgb(234,164,37)"/><text x="512.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (16 samples, 2.91%)</title><rect x="479" y="308" width="35" height="15" fill="rgb(231,72,6)"/><text x="482.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (8 samples, 1.45%)</title><rect x="497" y="324" width="17" height="15" fill="rgb(248,68,48)"/><text x="500.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.18%)</title><rect x="512" y="340" width="2" height="15" fill="rgb(234,68,1)"/><text x="515.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.18%)</title><rect x="512" y="356" width="2" height="15" fill="rgb(233,21,27)"/><text x="515.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="512" y="372" width="2" height="15" fill="rgb(252,160,29)"/><text x="515.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="512" y="388" width="2" height="15" fill="rgb(212,63,13)"/><text x="515.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="512" y="404" width="2" height="15" fill="rgb(219,60,44)"/><text x="515.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.18%)</title><rect x="514" y="324" width="2" height="15" fill="rgb(253,106,51)"/><text x="517.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="514" y="340" width="2" height="15" fill="rgb(217,50,40)"/><text x="517.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.18%)</title><rect x="518" y="340" width="2" height="15" fill="rgb(252,148,24)"/><text x="521.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (4 samples, 0.73%)</title><rect x="520" y="372" width="9" height="15" fill="rgb(228,90,6)"/><text x="523.00" y="382.50"></text></g><g><title>0x7f14cb6aced2 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="527" y="388" width="2" height="15" fill="rgb(251,201,39)"/><text x="530.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="531" y="388" width="2" height="15" fill="rgb(236,124,6)"/><text x="534.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.18%)</title><rect x="531" y="404" width="2" height="15" fill="rgb(228,86,31)"/><text x="534.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="533" y="388" width="2" height="15" fill="rgb(243,103,18)"/><text x="536.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="533" y="404" width="2" height="15" fill="rgb(242,187,15)"/><text x="536.00" y="414.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.18%)</title><rect x="535" y="388" width="2" height="15" fill="rgb(239,21,23)"/><text x="538.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.36%)</title><rect x="537" y="404" width="5" height="15" fill="rgb(207,79,33)"/><text x="540.00" y="414.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:319) (1 samples, 0.18%)</title><rect x="539" y="420" width="3" height="15" fill="rgb(243,66,54)"/><text x="542.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (13 samples, 2.36%)</title><rect x="516" y="324" width="28" height="15" fill="rgb(232,178,33)"/><text x="519.00" y="334.50">_..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (11 samples, 2.00%)</title><rect x="520" y="340" width="24" height="15" fill="rgb(224,204,51)"/><text x="523.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.00%)</title><rect x="520" y="356" width="24" height="15" fill="rgb(220,198,3)"/><text x="523.00" y="366.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (7 samples, 1.27%)</title><rect x="529" y="372" width="15" height="15" fill="rgb(232,156,31)"/><text x="532.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.55%)</title><rect x="537" y="388" width="7" height="15" fill="rgb(217,100,39)"/><text x="540.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.18%)</title><rect x="542" y="404" width="2" height="15" fill="rgb(236,120,12)"/><text x="545.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.18%)</title><rect x="542" y="420" width="2" height="15" fill="rgb(211,14,47)"/><text x="545.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.18%)</title><rect x="542" y="436" width="2" height="15" fill="rgb(254,146,47)"/><text x="545.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.18%)</title><rect x="542" y="452" width="2" height="15" fill="rgb(244,84,31)"/><text x="545.00" y="462.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="544" y="340" width="2" height="15" fill="rgb(253,161,13)"/><text x="547.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="544" y="356" width="2" height="15" fill="rgb(210,191,53)"/><text x="547.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="544" y="372" width="2" height="15" fill="rgb(231,180,0)"/><text x="547.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.18%)</title><rect x="544" y="388" width="2" height="15" fill="rgb(213,159,30)"/><text x="547.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="546" y="356" width="2" height="15" fill="rgb(243,155,38)"/><text x="549.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.18%)</title><rect x="546" y="372" width="2" height="15" fill="rgb(219,154,19)"/><text x="549.00" y="382.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:292) (1 samples, 0.18%)</title><rect x="548" y="372" width="2" height="15" fill="rgb(218,118,10)"/><text x="551.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.36%)</title><rect x="548" y="356" width="4" height="15" fill="rgb(234,54,43)"/><text x="551.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="550" y="372" width="2" height="15" fill="rgb(207,137,51)"/><text x="553.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.18%)</title><rect x="550" y="388" width="2" height="15" fill="rgb(237,99,39)"/><text x="553.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (19 samples, 3.45%)</title><rect x="514" y="308" width="40" height="15" fill="rgb(242,127,16)"/><text x="517.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.91%)</title><rect x="544" y="324" width="10" height="15" fill="rgb(241,95,16)"/><text x="547.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.73%)</title><rect x="546" y="340" width="8" height="15" fill="rgb(254,169,24)"/><text x="549.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.18%)</title><rect x="552" y="356" width="2" height="15" fill="rgb(221,170,4)"/><text x="555.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.18%)</title><rect x="552" y="372" width="2" height="15" fill="rgb(248,166,10)"/><text x="555.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="557" y="372" width="2" height="15" fill="rgb(228,99,7)"/><text x="560.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="557" y="388" width="2" height="15" fill="rgb(230,78,7)"/><text x="560.00" y="398.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="559" y="420" width="2" height="15" fill="rgb(244,8,32)"/><text x="562.00" y="430.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.18%)</title><rect x="559" y="436" width="2" height="15" fill="rgb(206,183,41)"/><text x="562.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.55%)</title><rect x="557" y="340" width="6" height="15" fill="rgb(219,122,24)"/><text x="560.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.55%)</title><rect x="557" y="356" width="6" height="15" fill="rgb(230,212,3)"/><text x="560.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.36%)</title><rect x="559" y="372" width="4" height="15" fill="rgb(246,8,11)"/><text x="562.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.36%)</title><rect x="559" y="388" width="4" height="15" fill="rgb(239,52,36)"/><text x="562.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.36%)</title><rect x="559" y="404" width="4" height="15" fill="rgb(239,7,53)"/><text x="562.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="561" y="420" width="2" height="15" fill="rgb(216,4,50)"/><text x="564.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.18%)</title><rect x="563" y="356" width="2" height="15" fill="rgb(222,39,48)"/><text x="566.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="565" y="356" width="2" height="15" fill="rgb(217,180,1)"/><text x="568.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.18%)</title><rect x="565" y="372" width="2" height="15" fill="rgb(222,33,38)"/><text x="568.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.18%)</title><rect x="565" y="388" width="2" height="15" fill="rgb(208,215,7)"/><text x="568.00" y="398.50"></text></g><g><title>0x7f14ca8b85b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="565" y="404" width="2" height="15" fill="rgb(217,31,39)"/><text x="568.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(236,70,43)"/><text x="570.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.18%)</title><rect x="567" y="372" width="2" height="15" fill="rgb(233,0,25)"/><text x="570.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.18%)</title><rect x="567" y="388" width="2" height="15" fill="rgb(211,108,3)"/><text x="570.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.73%)</title><rect x="563" y="340" width="9" height="15" fill="rgb(253,173,42)"/><text x="566.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="569" y="356" width="3" height="15" fill="rgb(215,30,18)"/><text x="572.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.18%)</title><rect x="569" y="372" width="3" height="15" fill="rgb(252,126,32)"/><text x="572.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.18%)</title><rect x="569" y="388" width="3" height="15" fill="rgb(254,220,37)"/><text x="572.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.18%)</title><rect x="569" y="404" width="3" height="15" fill="rgb(206,53,20)"/><text x="572.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.18%)</title><rect x="569" y="420" width="3" height="15" fill="rgb(245,201,6)"/><text x="572.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="569" y="436" width="3" height="15" fill="rgb(236,21,22)"/><text x="572.00" y="446.50"></text></g><g><title>0x7f14cb64e7a5 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="569" y="452" width="3" height="15" fill="rgb(239,107,1)"/><text x="572.00" y="462.50"></text></g><g><title>0x7f14cb64ea14 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="569" y="468" width="3" height="15" fill="rgb(221,80,54)"/><text x="572.00" y="478.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (59 samples, 10.73%)</title><rect x="447" y="196" width="127" height="15" fill="rgb(228,205,37)"/><text x="450.00" y="206.50">_samme_proba (s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (54 samples, 9.82%)</title><rect x="458" y="212" width="116" height="15" fill="rgb(216,132,2)"/><text x="461.00" y="222.50">clip (&lt;__array..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (50 samples, 9.09%)</title><rect x="466" y="228" width="108" height="15" fill="rgb(208,133,37)"/><text x="469.00" y="238.50">array_impleme..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (50 samples, 9.09%)</title><rect x="466" y="244" width="108" height="15" fill="rgb(245,36,15)"/><text x="469.00" y="254.50">clip (numpy/c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (48 samples, 8.73%)</title><rect x="471" y="260" width="103" height="15" fill="rgb(246,70,53)"/><text x="474.00" y="270.50">_wrapfunc (n..</text></g><g><title>array_clip (methods.c:2381) (48 samples, 8.73%)</title><rect x="471" y="276" width="103" height="15" fill="rgb(248,111,26)"/><text x="474.00" y="286.50">array_clip (..</text></g><g><title>forward_ndarray_method (methods.c:108) (48 samples, 8.73%)</title><rect x="471" y="292" width="103" height="15" fill="rgb(234,142,30)"/><text x="474.00" y="302.50">forward_ndar..</text></g><g><title>_clip (numpy/core/_methods.py:129) (9 samples, 1.64%)</title><rect x="554" y="308" width="20" height="15" fill="rgb(254,68,26)"/><text x="557.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 1.64%)</title><rect x="554" y="324" width="20" height="15" fill="rgb(217,138,53)"/><text x="557.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.18%)</title><rect x="572" y="340" width="2" height="15" fill="rgb(247,213,6)"/><text x="575.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="572" y="356" width="2" height="15" fill="rgb(229,151,38)"/><text x="575.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="572" y="372" width="2" height="15" fill="rgb(248,159,14)"/><text x="575.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.18%)</title><rect x="572" y="388" width="2" height="15" fill="rgb(224,164,50)"/><text x="575.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (2 samples, 0.36%)</title><rect x="574" y="196" width="4" height="15" fill="rgb(217,25,2)"/><text x="577.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="576" y="212" width="2" height="15" fill="rgb(242,14,4)"/><text x="579.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.18%)</title><rect x="576" y="228" width="2" height="15" fill="rgb(223,161,17)"/><text x="579.00" y="238.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (2 samples, 0.36%)</title><rect x="578" y="196" width="4" height="15" fill="rgb(240,63,14)"/><text x="581.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="587" y="212" width="2" height="15" fill="rgb(215,72,18)"/><text x="590.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="587" y="228" width="2" height="15" fill="rgb(215,229,10)"/><text x="590.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.18%)</title><rect x="587" y="244" width="2" height="15" fill="rgb(239,110,8)"/><text x="590.00" y="254.50"></text></g><g><title>0x7f14cb6b7120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="591" y="228" width="2" height="15" fill="rgb(208,156,8)"/><text x="594.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="593" y="228" width="2" height="15" fill="rgb(239,101,27)"/><text x="596.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="593" y="244" width="2" height="15" fill="rgb(207,184,31)"/><text x="596.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="593" y="260" width="2" height="15" fill="rgb(233,164,26)"/><text x="596.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.18%)</title><rect x="593" y="276" width="2" height="15" fill="rgb(211,218,35)"/><text x="596.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="595" y="244" width="2" height="15" fill="rgb(215,31,5)"/><text x="598.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.18%)</title><rect x="595" y="260" width="2" height="15" fill="rgb(232,156,0)"/><text x="598.00" y="270.50"></text></g><g><title>0x7f14cb6b714e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="595" y="276" width="2" height="15" fill="rgb(205,13,48)"/><text x="598.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="597" y="244" width="3" height="15" fill="rgb(243,28,7)"/><text x="600.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.18%)</title><rect x="597" y="260" width="3" height="15" fill="rgb(237,34,4)"/><text x="600.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1852) (1 samples, 0.18%)</title><rect x="597" y="276" width="3" height="15" fill="rgb(206,74,11)"/><text x="600.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.18%)</title><rect x="600" y="244" width="2" height="15" fill="rgb(232,149,12)"/><text x="603.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.18%)</title><rect x="600" y="260" width="2" height="15" fill="rgb(211,177,51)"/><text x="603.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.18%)</title><rect x="602" y="260" width="2" height="15" fill="rgb(248,128,21)"/><text x="605.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1486) (1 samples, 0.18%)</title><rect x="602" y="276" width="2" height="15" fill="rgb(220,57,24)"/><text x="605.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.36%)</title><rect x="602" y="244" width="4" height="15" fill="rgb(219,157,2)"/><text x="605.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.18%)</title><rect x="604" y="260" width="2" height="15" fill="rgb(212,88,33)"/><text x="607.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.18%)</title><rect x="604" y="276" width="2" height="15" fill="rgb(205,76,36)"/><text x="607.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.18%)</title><rect x="604" y="292" width="2" height="15" fill="rgb(227,119,41)"/><text x="607.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.18%)</title><rect x="604" y="308" width="2" height="15" fill="rgb(225,119,10)"/><text x="607.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.18%)</title><rect x="604" y="324" width="2" height="15" fill="rgb(249,72,35)"/><text x="607.00" y="334.50"></text></g><g><title>array_multiply (number.c:354) (9 samples, 1.64%)</title><rect x="589" y="212" width="19" height="15" fill="rgb(236,74,29)"/><text x="592.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.09%)</title><rect x="595" y="228" width="13" height="15" fill="rgb(246,211,3)"/><text x="598.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="606" y="244" width="2" height="15" fill="rgb(214,37,31)"/><text x="609.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.18%)</title><rect x="606" y="260" width="2" height="15" fill="rgb(247,121,43)"/><text x="609.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.18%)</title><rect x="606" y="276" width="2" height="15" fill="rgb(214,173,29)"/><text x="609.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:693) (1 samples, 0.18%)</title><rect x="606" y="292" width="2" height="15" fill="rgb(212,167,29)"/><text x="609.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.18%)</title><rect x="608" y="212" width="2" height="15" fill="rgb(213,80,50)"/><text x="611.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:742) (1 samples, 0.18%)</title><rect x="608" y="228" width="2" height="15" fill="rgb(238,206,21)"/><text x="611.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="610" y="292" width="2" height="15" fill="rgb(219,11,14)"/><text x="613.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1178) (1 samples, 0.18%)</title><rect x="610" y="308" width="2" height="15" fill="rgb(241,25,2)"/><text x="613.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.36%)</title><rect x="610" y="276" width="5" height="15" fill="rgb(241,28,43)"/><text x="613.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="612" y="292" width="3" height="15" fill="rgb(254,50,1)"/><text x="615.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2851) (1 samples, 0.18%)</title><rect x="612" y="308" width="3" height="15" fill="rgb(239,193,17)"/><text x="615.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.55%)</title><rect x="610" y="212" width="7" height="15" fill="rgb(245,113,26)"/><text x="613.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="610" y="228" width="7" height="15" fill="rgb(250,185,38)"/><text x="613.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.55%)</title><rect x="610" y="244" width="7" height="15" fill="rgb(240,186,7)"/><text x="613.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.55%)</title><rect x="610" y="260" width="7" height="15" fill="rgb(208,10,3)"/><text x="613.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="615" y="276" width="2" height="15" fill="rgb(238,177,32)"/><text x="618.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.18%)</title><rect x="615" y="292" width="2" height="15" fill="rgb(252,29,13)"/><text x="618.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.18%)</title><rect x="619" y="260" width="2" height="15" fill="rgb(237,129,42)"/><text x="622.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="619" y="276" width="2" height="15" fill="rgb(233,180,15)"/><text x="622.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:51) (1 samples, 0.18%)</title><rect x="619" y="292" width="2" height="15" fill="rgb(250,212,26)"/><text x="622.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.18%)</title><rect x="621" y="292" width="2" height="15" fill="rgb(217,72,6)"/><text x="624.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.18%)</title><rect x="621" y="308" width="2" height="15" fill="rgb(242,14,40)"/><text x="624.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.18%)</title><rect x="621" y="324" width="2" height="15" fill="rgb(234,172,25)"/><text x="624.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.18%)</title><rect x="621" y="340" width="2" height="15" fill="rgb(215,141,24)"/><text x="624.00" y="350.50"></text></g><g><title>0x7f14cb64eaae (libc-2.29.so) (1 samples, 0.18%)</title><rect x="623" y="372" width="2" height="15" fill="rgb(231,205,37)"/><text x="626.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (2 samples, 0.36%)</title><rect x="623" y="340" width="4" height="15" fill="rgb(238,65,49)"/><text x="626.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.36%)</title><rect x="623" y="356" width="4" height="15" fill="rgb(250,4,12)"/><text x="626.00" y="366.50"></text></g><g><title>0x7f14cb6b6d50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="625" y="372" width="2" height="15" fill="rgb(237,205,53)"/><text x="628.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (3 samples, 0.55%)</title><rect x="623" y="308" width="7" height="15" fill="rgb(211,117,20)"/><text x="626.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (3 samples, 0.55%)</title><rect x="623" y="324" width="7" height="15" fill="rgb(248,199,33)"/><text x="626.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.18%)</title><rect x="627" y="340" width="3" height="15" fill="rgb(216,124,20)"/><text x="630.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="627" y="356" width="3" height="15" fill="rgb(238,32,7)"/><text x="630.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="627" y="372" width="3" height="15" fill="rgb(250,62,37)"/><text x="630.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.18%)</title><rect x="627" y="388" width="3" height="15" fill="rgb(230,59,36)"/><text x="630.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:515) (1 samples, 0.18%)</title><rect x="630" y="308" width="2" height="15" fill="rgb(209,102,42)"/><text x="633.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (24 samples, 4.36%)</title><rect x="582" y="196" width="52" height="15" fill="rgb(248,136,10)"/><text x="585.00" y="206.50">_samm..</text></g><g><title>array_sum (methods.c:2215) (8 samples, 1.45%)</title><rect x="617" y="212" width="17" height="15" fill="rgb(214,126,44)"/><text x="620.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 1.45%)</title><rect x="617" y="228" width="17" height="15" fill="rgb(232,155,42)"/><text x="620.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 1.27%)</title><rect x="619" y="244" width="15" height="15" fill="rgb(213,136,39)"/><text x="622.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.09%)</title><rect x="621" y="260" width="13" height="15" fill="rgb(246,191,8)"/><text x="624.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.09%)</title><rect x="621" y="276" width="13" height="15" fill="rgb(254,88,35)"/><text x="624.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.91%)</title><rect x="623" y="292" width="11" height="15" fill="rgb(218,151,53)"/><text x="626.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="632" y="308" width="2" height="15" fill="rgb(226,136,42)"/><text x="635.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.18%)</title><rect x="632" y="324" width="2" height="15" fill="rgb(225,32,2)"/><text x="635.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.18%)</title><rect x="632" y="340" width="2" height="15" fill="rgb(230,31,10)"/><text x="635.00" y="350.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (210 samples, 38.18%)</title><rect x="185" y="148" width="451" height="15" fill="rgb(229,55,0)"/><text x="188.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (209 samples, 38.00%)</title><rect x="188" y="164" width="448" height="15" fill="rgb(227,223,12)"/><text x="191.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (208 samples, 37.82%)</title><rect x="190" y="180" width="446" height="15" fill="rgb(251,8,36)"/><text x="193.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="634" y="196" width="2" height="15" fill="rgb(252,56,52)"/><text x="637.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="634" y="212" width="2" height="15" fill="rgb(233,82,52)"/><text x="637.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="634" y="228" width="2" height="15" fill="rgb(210,40,21)"/><text x="637.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.18%)</title><rect x="636" y="244" width="2" height="15" fill="rgb(241,95,34)"/><text x="639.00" y="254.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (2 samples, 0.36%)</title><rect x="636" y="180" width="4" height="15" fill="rgb(222,5,14)"/><text x="639.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="636" y="196" width="4" height="15" fill="rgb(216,206,24)"/><text x="639.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="636" y="212" width="4" height="15" fill="rgb(245,10,12)"/><text x="639.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (2 samples, 0.36%)</title><rect x="636" y="228" width="4" height="15" fill="rgb(221,48,44)"/><text x="639.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.18%)</title><rect x="638" y="244" width="2" height="15" fill="rgb(225,197,34)"/><text x="641.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.18%)</title><rect x="638" y="260" width="2" height="15" fill="rgb(254,195,3)"/><text x="641.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.18%)</title><rect x="638" y="276" width="2" height="15" fill="rgb(248,154,43)"/><text x="641.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.18%)</title><rect x="638" y="292" width="2" height="15" fill="rgb(235,82,16)"/><text x="641.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="638" y="308" width="2" height="15" fill="rgb(213,141,33)"/><text x="641.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="638" y="324" width="2" height="15" fill="rgb(213,49,5)"/><text x="641.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3071) (1 samples, 0.18%)</title><rect x="638" y="340" width="2" height="15" fill="rgb(220,51,36)"/><text x="641.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:38) (293 samples, 53.27%)</title><rect x="14" y="52" width="628" height="15" fill="rgb(240,205,4)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:37) (293 samples, 53.27%)</title><rect x="14" y="68" width="628" height="15" fill="rgb(253,90,2)"/><text x="17.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29) (291 samples, 52.91%)</title><rect x="18" y="84" width="624" height="15" fill="rgb(211,90,50)"/><text x="21.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:23) (215 samples, 39.09%)</title><rect x="181" y="100" width="461" height="15" fill="rgb(210,185,29)"/><text x="184.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (215 samples, 39.09%)</title><rect x="181" y="116" width="461" height="15" fill="rgb(228,215,1)"/><text x="184.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (215 samples, 39.09%)</title><rect x="181" y="132" width="461" height="15" fill="rgb(205,90,35)"/><text x="184.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (3 samples, 0.55%)</title><rect x="636" y="148" width="6" height="15" fill="rgb(234,99,37)"/><text x="639.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (3 samples, 0.55%)</title><rect x="636" y="164" width="6" height="15" fill="rgb(216,45,7)"/><text x="639.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.18%)</title><rect x="640" y="180" width="2" height="15" fill="rgb(214,198,3)"/><text x="643.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="640" y="196" width="2" height="15" fill="rgb(222,42,38)"/><text x="643.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="640" y="212" width="2" height="15" fill="rgb(241,25,26)"/><text x="643.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.18%)</title><rect x="640" y="228" width="2" height="15" fill="rgb(205,195,31)"/><text x="643.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.18%)</title><rect x="640" y="244" width="2" height="15" fill="rgb(239,10,9)"/><text x="643.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.18%)</title><rect x="640" y="260" width="2" height="15" fill="rgb(228,146,14)"/><text x="643.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.18%)</title><rect x="640" y="276" width="2" height="15" fill="rgb(243,54,42)"/><text x="643.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.18%)</title><rect x="640" y="292" width="2" height="15" fill="rgb(251,133,15)"/><text x="643.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.18%)</title><rect x="640" y="308" width="2" height="15" fill="rgb(254,11,44)"/><text x="643.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.18%)</title><rect x="640" y="324" width="2" height="15" fill="rgb(239,195,49)"/><text x="643.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.18%)</title><rect x="640" y="340" width="2" height="15" fill="rgb(214,79,27)"/><text x="643.00" y="350.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.18%)</title><rect x="642" y="964" width="3" height="15" fill="rgb(235,110,18)"/><text x="645.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.18%)</title><rect x="642" y="980" width="3" height="15" fill="rgb(248,194,1)"/><text x="645.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="642" y="996" width="3" height="15" fill="rgb(245,50,1)"/><text x="645.00" y="1006.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.36%)</title><rect x="642" y="932" width="5" height="15" fill="rgb(235,222,1)"/><text x="645.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.36%)</title><rect x="642" y="948" width="5" height="15" fill="rgb(228,64,44)"/><text x="645.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.18%)</title><rect x="645" y="964" width="2" height="15" fill="rgb(230,18,17)"/><text x="648.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.18%)</title><rect x="645" y="980" width="2" height="15" fill="rgb(233,25,24)"/><text x="648.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.18%)</title><rect x="645" y="996" width="2" height="15" fill="rgb(237,183,45)"/><text x="648.00" y="1006.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.18%)</title><rect x="645" y="1012" width="2" height="15" fill="rgb(237,217,17)"/><text x="648.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (3 samples, 0.55%)</title><rect x="642" y="148" width="7" height="15" fill="rgb(211,32,52)"/><text x="645.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="164" width="7" height="15" fill="rgb(224,223,6)"/><text x="645.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.55%)</title><rect x="642" y="180" width="7" height="15" fill="rgb(220,70,9)"/><text x="645.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="196" width="7" height="15" fill="rgb(230,200,11)"/><text x="645.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="212" width="7" height="15" fill="rgb(225,11,1)"/><text x="645.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="642" y="228" width="7" height="15" fill="rgb(231,159,47)"/><text x="645.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="642" y="244" width="7" height="15" fill="rgb(207,55,3)"/><text x="645.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="642" y="260" width="7" height="15" fill="rgb(239,218,25)"/><text x="645.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="276" width="7" height="15" fill="rgb(237,101,33)"/><text x="645.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.55%)</title><rect x="642" y="292" width="7" height="15" fill="rgb(214,211,33)"/><text x="645.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="308" width="7" height="15" fill="rgb(253,55,41)"/><text x="645.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="642" y="324" width="7" height="15" fill="rgb(212,151,32)"/><text x="645.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="642" y="340" width="7" height="15" fill="rgb(235,101,16)"/><text x="645.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="642" y="356" width="7" height="15" fill="rgb(209,102,42)"/><text x="645.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="372" width="7" height="15" fill="rgb(220,116,28)"/><text x="645.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.55%)</title><rect x="642" y="388" width="7" height="15" fill="rgb(231,167,22)"/><text x="645.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="404" width="7" height="15" fill="rgb(246,197,32)"/><text x="645.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="642" y="420" width="7" height="15" fill="rgb(206,51,27)"/><text x="645.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="642" y="436" width="7" height="15" fill="rgb(217,175,29)"/><text x="645.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="642" y="452" width="7" height="15" fill="rgb(226,88,36)"/><text x="645.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="468" width="7" height="15" fill="rgb(218,115,16)"/><text x="645.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.55%)</title><rect x="642" y="484" width="7" height="15" fill="rgb(221,94,16)"/><text x="645.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="500" width="7" height="15" fill="rgb(243,64,29)"/><text x="645.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="642" y="516" width="7" height="15" fill="rgb(232,11,42)"/><text x="645.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="642" y="532" width="7" height="15" fill="rgb(207,91,14)"/><text x="645.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="642" y="548" width="7" height="15" fill="rgb(207,128,21)"/><text x="645.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="564" width="7" height="15" fill="rgb(248,154,45)"/><text x="645.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.55%)</title><rect x="642" y="580" width="7" height="15" fill="rgb(229,146,9)"/><text x="645.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="596" width="7" height="15" fill="rgb(250,17,16)"/><text x="645.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.55%)</title><rect x="642" y="612" width="7" height="15" fill="rgb(229,116,45)"/><text x="645.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="628" width="7" height="15" fill="rgb(206,2,47)"/><text x="645.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="644" width="7" height="15" fill="rgb(251,42,15)"/><text x="645.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="642" y="660" width="7" height="15" fill="rgb(252,15,51)"/><text x="645.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="642" y="676" width="7" height="15" fill="rgb(214,193,7)"/><text x="645.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="642" y="692" width="7" height="15" fill="rgb(205,2,37)"/><text x="645.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="708" width="7" height="15" fill="rgb(205,41,22)"/><text x="645.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.55%)</title><rect x="642" y="724" width="7" height="15" fill="rgb(247,159,19)"/><text x="645.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="642" y="740" width="7" height="15" fill="rgb(227,80,9)"/><text x="645.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="642" y="756" width="7" height="15" fill="rgb(240,6,43)"/><text x="645.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="642" y="772" width="7" height="15" fill="rgb(217,116,16)"/><text x="645.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="642" y="788" width="7" height="15" fill="rgb(230,161,7)"/><text x="645.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="642" y="804" width="7" height="15" fill="rgb(224,40,39)"/><text x="645.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.55%)</title><rect x="642" y="820" width="7" height="15" fill="rgb(235,19,18)"/><text x="645.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.55%)</title><rect x="642" y="836" width="7" height="15" fill="rgb(249,4,9)"/><text x="645.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.55%)</title><rect x="642" y="852" width="7" height="15" fill="rgb(249,216,21)"/><text x="645.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.55%)</title><rect x="642" y="868" width="7" height="15" fill="rgb(241,63,1)"/><text x="645.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.55%)</title><rect x="642" y="884" width="7" height="15" fill="rgb(243,132,19)"/><text x="645.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.55%)</title><rect x="642" y="900" width="7" height="15" fill="rgb(237,204,25)"/><text x="645.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.55%)</title><rect x="642" y="916" width="7" height="15" fill="rgb(208,175,34)"/><text x="645.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.18%)</title><rect x="647" y="932" width="2" height="15" fill="rgb(214,99,39)"/><text x="650.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.18%)</title><rect x="649" y="324" width="2" height="15" fill="rgb(240,48,44)"/><text x="652.00" y="334.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.18%)</title><rect x="649" y="340" width="2" height="15" fill="rgb(211,30,25)"/><text x="652.00" y="350.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.18%)</title><rect x="649" y="356" width="2" height="15" fill="rgb(236,48,27)"/><text x="652.00" y="366.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.18%)</title><rect x="649" y="372" width="2" height="15" fill="rgb(240,68,30)"/><text x="652.00" y="382.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1367) (1 samples, 0.18%)</title><rect x="649" y="388" width="2" height="15" fill="rgb(223,112,47)"/><text x="652.00" y="398.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (2 samples, 0.36%)</title><rect x="649" y="148" width="4" height="15" fill="rgb(213,91,41)"/><text x="652.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="649" y="164" width="4" height="15" fill="rgb(240,88,34)"/><text x="652.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.36%)</title><rect x="649" y="180" width="4" height="15" fill="rgb(236,7,7)"/><text x="652.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="649" y="196" width="4" height="15" fill="rgb(208,29,35)"/><text x="652.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="649" y="212" width="4" height="15" fill="rgb(236,174,5)"/><text x="652.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="649" y="228" width="4" height="15" fill="rgb(235,14,10)"/><text x="652.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="649" y="244" width="4" height="15" fill="rgb(208,47,47)"/><text x="652.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="649" y="260" width="4" height="15" fill="rgb(222,81,22)"/><text x="652.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="649" y="276" width="4" height="15" fill="rgb(243,7,26)"/><text x="652.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.36%)</title><rect x="649" y="292" width="4" height="15" fill="rgb(225,90,41)"/><text x="652.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="649" y="308" width="4" height="15" fill="rgb(243,72,4)"/><text x="652.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="324" width="2" height="15" fill="rgb(228,190,0)"/><text x="654.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="340" width="2" height="15" fill="rgb(240,82,22)"/><text x="654.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="356" width="2" height="15" fill="rgb(233,86,42)"/><text x="654.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="372" width="2" height="15" fill="rgb(239,65,5)"/><text x="654.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.18%)</title><rect x="651" y="388" width="2" height="15" fill="rgb(206,197,3)"/><text x="654.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="404" width="2" height="15" fill="rgb(243,194,24)"/><text x="654.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="420" width="2" height="15" fill="rgb(247,23,21)"/><text x="654.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="436" width="2" height="15" fill="rgb(220,140,14)"/><text x="654.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="452" width="2" height="15" fill="rgb(229,205,29)"/><text x="654.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="468" width="2" height="15" fill="rgb(221,109,52)"/><text x="654.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.18%)</title><rect x="651" y="484" width="2" height="15" fill="rgb(253,6,36)"/><text x="654.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="500" width="2" height="15" fill="rgb(238,141,6)"/><text x="654.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="516" width="2" height="15" fill="rgb(242,74,8)"/><text x="654.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="532" width="2" height="15" fill="rgb(238,182,11)"/><text x="654.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="548" width="2" height="15" fill="rgb(209,21,32)"/><text x="654.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="564" width="2" height="15" fill="rgb(246,18,8)"/><text x="654.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.18%)</title><rect x="651" y="580" width="2" height="15" fill="rgb(213,24,16)"/><text x="654.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="596" width="2" height="15" fill="rgb(208,13,8)"/><text x="654.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="612" width="2" height="15" fill="rgb(245,95,15)"/><text x="654.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="628" width="2" height="15" fill="rgb(218,70,3)"/><text x="654.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="644" width="2" height="15" fill="rgb(234,213,23)"/><text x="654.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="660" width="2" height="15" fill="rgb(234,193,18)"/><text x="654.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.18%)</title><rect x="651" y="676" width="2" height="15" fill="rgb(220,125,36)"/><text x="654.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="692" width="2" height="15" fill="rgb(209,9,42)"/><text x="654.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="708" width="2" height="15" fill="rgb(248,166,11)"/><text x="654.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="724" width="2" height="15" fill="rgb(219,124,14)"/><text x="654.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="740" width="2" height="15" fill="rgb(213,181,46)"/><text x="654.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="756" width="2" height="15" fill="rgb(223,207,12)"/><text x="654.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.18%)</title><rect x="651" y="772" width="2" height="15" fill="rgb(239,166,10)"/><text x="654.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="651" y="788" width="2" height="15" fill="rgb(214,136,18)"/><text x="654.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="804" width="2" height="15" fill="rgb(241,36,6)"/><text x="654.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="820" width="2" height="15" fill="rgb(221,119,26)"/><text x="654.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="836" width="2" height="15" fill="rgb(227,31,51)"/><text x="654.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="852" width="2" height="15" fill="rgb(208,156,6)"/><text x="654.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="868" width="2" height="15" fill="rgb(253,17,21)"/><text x="654.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="884" width="2" height="15" fill="rgb(219,218,41)"/><text x="654.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.18%)</title><rect x="651" y="900" width="2" height="15" fill="rgb(247,112,42)"/><text x="654.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="916" width="2" height="15" fill="rgb(244,21,33)"/><text x="654.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="932" width="2" height="15" fill="rgb(209,44,32)"/><text x="654.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="948" width="2" height="15" fill="rgb(205,203,13)"/><text x="654.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="964" width="2" height="15" fill="rgb(220,11,12)"/><text x="654.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="980" width="2" height="15" fill="rgb(218,83,2)"/><text x="654.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.18%)</title><rect x="651" y="996" width="2" height="15" fill="rgb(209,192,18)"/><text x="654.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="651" y="1012" width="2" height="15" fill="rgb(207,51,10)"/><text x="654.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="1028" width="2" height="15" fill="rgb(219,122,40)"/><text x="654.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="1044" width="2" height="15" fill="rgb(242,39,7)"/><text x="654.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="1060" width="2" height="15" fill="rgb(220,109,32)"/><text x="654.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="1076" width="2" height="15" fill="rgb(227,3,53)"/><text x="654.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="1092" width="2" height="15" fill="rgb(213,211,29)"/><text x="654.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="1108" width="2" height="15" fill="rgb(217,63,22)"/><text x="654.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:411) (1 samples, 0.18%)</title><rect x="651" y="1124" width="2" height="15" fill="rgb(231,173,27)"/><text x="654.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="1140" width="2" height="15" fill="rgb(213,105,48)"/><text x="654.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="1156" width="2" height="15" fill="rgb(227,68,17)"/><text x="654.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="1172" width="2" height="15" fill="rgb(253,199,4)"/><text x="654.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="1188" width="2" height="15" fill="rgb(228,111,35)"/><text x="654.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="1204" width="2" height="15" fill="rgb(251,182,26)"/><text x="654.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py:11) (1 samples, 0.18%)</title><rect x="651" y="1220" width="2" height="15" fill="rgb(230,87,26)"/><text x="654.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="651" y="1236" width="2" height="15" fill="rgb(228,122,29)"/><text x="654.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="1252" width="2" height="15" fill="rgb(212,214,43)"/><text x="654.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="1268" width="2" height="15" fill="rgb(205,123,13)"/><text x="654.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="1284" width="2" height="15" fill="rgb(221,36,0)"/><text x="654.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="1300" width="2" height="15" fill="rgb(212,198,27)"/><text x="654.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="1316" width="2" height="15" fill="rgb(220,122,47)"/><text x="654.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="1332" width="2" height="15" fill="rgb(228,148,22)"/><text x="654.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:103) (1 samples, 0.18%)</title><rect x="651" y="1348" width="2" height="15" fill="rgb(254,9,1)"/><text x="654.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="651" y="1364" width="2" height="15" fill="rgb(224,228,33)"/><text x="654.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="651" y="1380" width="2" height="15" fill="rgb(205,19,32)"/><text x="654.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="651" y="1396" width="2" height="15" fill="rgb(221,187,2)"/><text x="654.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="651" y="1412" width="2" height="15" fill="rgb(230,192,26)"/><text x="654.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="651" y="1428" width="2" height="15" fill="rgb(222,100,5)"/><text x="654.00" y="1438.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/_plotutils.py:10) (1 samples, 0.18%)</title><rect x="651" y="1444" width="2" height="15" fill="rgb(213,125,27)"/><text x="654.00" y="1454.50"></text></g><g><title>decorator (scipy/_lib/decorator.py:268) (1 samples, 0.18%)</title><rect x="651" y="1460" width="2" height="15" fill="rgb(250,177,53)"/><text x="654.00" y="1470.50"></text></g><g><title>create (scipy/_lib/decorator.py:222) (1 samples, 0.18%)</title><rect x="651" y="1476" width="2" height="15" fill="rgb(254,153,45)"/><text x="654.00" y="1486.50"></text></g><g><title>make (scipy/_lib/decorator.py:178) (1 samples, 0.18%)</title><rect x="651" y="1492" width="2" height="15" fill="rgb(236,95,47)"/><text x="654.00" y="1502.50"></text></g><g><title>&lt;listcomp&gt; (scipy/_lib/decorator.py:177) (1 samples, 0.18%)</title><rect x="651" y="1508" width="2" height="15" fill="rgb(213,28,49)"/><text x="654.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.18%)</title><rect x="653" y="244" width="2" height="15" fill="rgb(211,52,8)"/><text x="656.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="653" y="260" width="2" height="15" fill="rgb(210,193,3)"/><text x="656.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="653" y="276" width="2" height="15" fill="rgb(253,163,25)"/><text x="656.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="653" y="292" width="2" height="15" fill="rgb(234,93,15)"/><text x="656.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="653" y="308" width="2" height="15" fill="rgb(224,189,32)"/><text x="656.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="653" y="324" width="2" height="15" fill="rgb(216,127,17)"/><text x="656.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.18%)</title><rect x="653" y="340" width="2" height="15" fill="rgb(221,157,23)"/><text x="656.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="653" y="356" width="2" height="15" fill="rgb(223,116,3)"/><text x="656.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="653" y="372" width="2" height="15" fill="rgb(235,59,30)"/><text x="656.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="653" y="388" width="2" height="15" fill="rgb(221,138,12)"/><text x="656.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="653" y="404" width="2" height="15" fill="rgb(247,161,48)"/><text x="656.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="653" y="420" width="2" height="15" fill="rgb(224,207,11)"/><text x="656.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="653" y="436" width="2" height="15" fill="rgb(216,89,28)"/><text x="656.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="653" y="452" width="2" height="15" fill="rgb(221,134,20)"/><text x="656.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="653" y="468" width="2" height="15" fill="rgb(233,203,32)"/><text x="656.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.18%)</title><rect x="653" y="484" width="2" height="15" fill="rgb(224,134,9)"/><text x="656.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="653" y="500" width="2" height="15" fill="rgb(240,120,5)"/><text x="656.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="653" y="516" width="2" height="15" fill="rgb(219,64,32)"/><text x="656.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="653" y="532" width="2" height="15" fill="rgb(245,15,5)"/><text x="656.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="653" y="548" width="2" height="15" fill="rgb(226,152,52)"/><text x="656.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="653" y="564" width="2" height="15" fill="rgb(233,199,47)"/><text x="656.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:17) (1 samples, 0.18%)</title><rect x="653" y="580" width="2" height="15" fill="rgb(209,154,11)"/><text x="656.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="653" y="596" width="2" height="15" fill="rgb(252,33,41)"/><text x="656.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="653" y="612" width="2" height="15" fill="rgb(235,27,26)"/><text x="656.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="653" y="628" width="2" height="15" fill="rgb(214,119,47)"/><text x="656.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="653" y="644" width="2" height="15" fill="rgb(220,82,50)"/><text x="656.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="653" y="660" width="2" height="15" fill="rgb(209,51,22)"/><text x="656.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py:57) (1 samples, 0.18%)</title><rect x="653" y="676" width="2" height="15" fill="rgb(237,53,51)"/><text x="656.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py:35) (1 samples, 0.18%)</title><rect x="653" y="692" width="2" height="15" fill="rgb(239,95,20)"/><text x="656.00" y="702.50"></text></g><g><title>&lt;listcomp&gt; (pyquickhelper/pycode/build_helper.py:35) (1 samples, 0.18%)</title><rect x="653" y="708" width="2" height="15" fill="rgb(209,60,9)"/><text x="656.00" y="718.50"></text></g><g><title>join (posixpath.py:92) (1 samples, 0.18%)</title><rect x="653" y="724" width="2" height="15" fill="rgb(210,162,43)"/><text x="656.00" y="734.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.18%)</title><rect x="653" y="740" width="2" height="15" fill="rgb(219,201,9)"/><text x="656.00" y="750.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.18%)</title><rect x="655" y="724" width="2" height="15" fill="rgb(243,44,49)"/><text x="658.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="655" y="740" width="2" height="15" fill="rgb(228,118,8)"/><text x="658.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="655" y="756" width="2" height="15" fill="rgb(230,80,9)"/><text x="658.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="655" y="772" width="2" height="15" fill="rgb(216,166,53)"/><text x="658.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="655" y="788" width="2" height="15" fill="rgb(221,182,28)"/><text x="658.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="655" y="804" width="2" height="15" fill="rgb(219,28,24)"/><text x="658.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.18%)</title><rect x="655" y="820" width="2" height="15" fill="rgb(245,108,46)"/><text x="658.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="655" y="836" width="2" height="15" fill="rgb(216,187,8)"/><text x="658.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="655" y="852" width="2" height="15" fill="rgb(225,19,49)"/><text x="658.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="655" y="868" width="2" height="15" fill="rgb(211,117,43)"/><text x="658.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="655" y="884" width="2" height="15" fill="rgb(214,11,25)"/><text x="658.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="655" y="900" width="2" height="15" fill="rgb(233,88,18)"/><text x="658.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.18%)</title><rect x="655" y="916" width="2" height="15" fill="rgb(233,136,28)"/><text x="658.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="655" y="932" width="2" height="15" fill="rgb(232,199,7)"/><text x="658.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="655" y="948" width="2" height="15" fill="rgb(218,10,28)"/><text x="658.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="655" y="964" width="2" height="15" fill="rgb(243,162,45)"/><text x="658.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="655" y="980" width="2" height="15" fill="rgb(217,144,28)"/><text x="658.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="655" y="996" width="2" height="15" fill="rgb(246,6,21)"/><text x="658.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:8490) (1 samples, 0.18%)</title><rect x="655" y="1012" width="2" height="15" fill="rgb(219,201,45)"/><text x="658.00" y="1022.50"></text></g><g><title>_add_numeric_operations (pandas/core/generic.py:10553) (1 samples, 0.18%)</title><rect x="655" y="1028" width="2" height="15" fill="rgb(228,183,35)"/><text x="658.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.18%)</title><rect x="655" y="1044" width="2" height="15" fill="rgb(229,115,11)"/><text x="658.00" y="1054.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.18%)</title><rect x="655" y="1060" width="2" height="15" fill="rgb(219,14,44)"/><text x="658.00" y="1070.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.18%)</title><rect x="655" y="1076" width="2" height="15" fill="rgb(229,178,32)"/><text x="658.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="655" y="1092" width="2" height="15" fill="rgb(205,36,9)"/><text x="658.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.36%)</title><rect x="655" y="436" width="5" height="15" fill="rgb(237,143,34)"/><text x="658.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="655" y="452" width="5" height="15" fill="rgb(223,72,25)"/><text x="658.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="655" y="468" width="5" height="15" fill="rgb(241,64,24)"/><text x="658.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="655" y="484" width="5" height="15" fill="rgb(223,215,39)"/><text x="658.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="655" y="500" width="5" height="15" fill="rgb(208,39,34)"/><text x="658.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="655" y="516" width="5" height="15" fill="rgb(207,26,33)"/><text x="658.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.36%)</title><rect x="655" y="532" width="5" height="15" fill="rgb(227,110,24)"/><text x="658.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="655" y="548" width="5" height="15" fill="rgb(206,17,30)"/><text x="658.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="655" y="564" width="5" height="15" fill="rgb(207,199,54)"/><text x="658.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="655" y="580" width="5" height="15" fill="rgb(227,21,7)"/><text x="658.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="655" y="596" width="5" height="15" fill="rgb(248,60,4)"/><text x="658.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="655" y="612" width="5" height="15" fill="rgb(214,209,34)"/><text x="658.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.36%)</title><rect x="655" y="628" width="5" height="15" fill="rgb(213,155,38)"/><text x="658.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="655" y="644" width="5" height="15" fill="rgb(240,55,5)"/><text x="658.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="655" y="660" width="5" height="15" fill="rgb(246,121,33)"/><text x="658.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="655" y="676" width="5" height="15" fill="rgb(247,154,27)"/><text x="658.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="655" y="692" width="5" height="15" fill="rgb(235,142,7)"/><text x="658.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="655" y="708" width="5" height="15" fill="rgb(228,18,49)"/><text x="658.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.18%)</title><rect x="657" y="724" width="3" height="15" fill="rgb(218,104,1)"/><text x="660.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="657" y="740" width="3" height="15" fill="rgb(215,83,49)"/><text x="660.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="657" y="756" width="3" height="15" fill="rgb(205,22,16)"/><text x="660.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="657" y="772" width="3" height="15" fill="rgb(240,27,24)"/><text x="660.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="657" y="788" width="3" height="15" fill="rgb(225,0,8)"/><text x="660.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="657" y="804" width="3" height="15" fill="rgb(209,215,7)"/><text x="660.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="657" y="820" width="3" height="15" fill="rgb(235,16,16)"/><text x="660.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="657" y="836" width="3" height="15" fill="rgb(217,131,9)"/><text x="660.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="657" y="852" width="3" height="15" fill="rgb(232,191,36)"/><text x="660.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.18%)</title><rect x="657" y="868" width="3" height="15" fill="rgb(247,86,50)"/><text x="660.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="657" y="884" width="3" height="15" fill="rgb(232,179,6)"/><text x="660.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="657" y="900" width="3" height="15" fill="rgb(231,42,31)"/><text x="660.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="657" y="916" width="3" height="15" fill="rgb(242,23,14)"/><text x="660.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="657" y="932" width="3" height="15" fill="rgb(245,10,34)"/><text x="660.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="657" y="948" width="3" height="15" fill="rgb(226,40,38)"/><text x="660.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:38) (1 samples, 0.18%)</title><rect x="657" y="964" width="3" height="15" fill="rgb(223,156,2)"/><text x="660.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="657" y="980" width="3" height="15" fill="rgb(247,178,2)"/><text x="660.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="657" y="996" width="3" height="15" fill="rgb(223,219,32)"/><text x="660.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="657" y="1012" width="3" height="15" fill="rgb(207,216,8)"/><text x="660.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="657" y="1028" width="3" height="15" fill="rgb(220,181,52)"/><text x="660.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="657" y="1044" width="3" height="15" fill="rgb(211,186,2)"/><text x="660.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py:48) (1 samples, 0.18%)</title><rect x="657" y="1060" width="3" height="15" fill="rgb(221,132,46)"/><text x="660.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="657" y="1076" width="3" height="15" fill="rgb(205,168,21)"/><text x="660.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.18%)</title><rect x="657" y="1092" width="3" height="15" fill="rgb(218,57,51)"/><text x="660.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.18%)</title><rect x="657" y="1108" width="3" height="15" fill="rgb(217,199,38)"/><text x="660.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.18%)</title><rect x="657" y="1124" width="3" height="15" fill="rgb(252,57,1)"/><text x="660.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.18%)</title><rect x="657" y="1140" width="3" height="15" fill="rgb(231,152,27)"/><text x="660.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.18%)</title><rect x="657" y="1156" width="3" height="15" fill="rgb(218,151,27)"/><text x="660.00" y="1166.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.18%)</title><rect x="657" y="1172" width="3" height="15" fill="rgb(217,63,46)"/><text x="660.00" y="1182.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.18%)</title><rect x="657" y="1188" width="3" height="15" fill="rgb(243,225,24)"/><text x="660.00" y="1198.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.18%)</title><rect x="657" y="1204" width="3" height="15" fill="rgb(244,222,1)"/><text x="660.00" y="1214.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="657" y="1220" width="3" height="15" fill="rgb(250,208,2)"/><text x="660.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.18%)</title><rect x="660" y="676" width="2" height="15" fill="rgb(243,17,37)"/><text x="663.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="692" width="2" height="15" fill="rgb(245,190,28)"/><text x="663.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="660" y="708" width="2" height="15" fill="rgb(248,80,51)"/><text x="663.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="660" y="724" width="2" height="15" fill="rgb(210,29,54)"/><text x="663.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="660" y="740" width="2" height="15" fill="rgb(216,213,33)"/><text x="663.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="756" width="2" height="15" fill="rgb(254,210,21)"/><text x="663.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.18%)</title><rect x="660" y="772" width="2" height="15" fill="rgb(226,42,28)"/><text x="663.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="788" width="2" height="15" fill="rgb(217,199,3)"/><text x="663.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="660" y="804" width="2" height="15" fill="rgb(208,122,24)"/><text x="663.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="660" y="820" width="2" height="15" fill="rgb(223,59,26)"/><text x="663.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="660" y="836" width="2" height="15" fill="rgb(219,110,8)"/><text x="663.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="852" width="2" height="15" fill="rgb(212,54,18)"/><text x="663.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.18%)</title><rect x="660" y="868" width="2" height="15" fill="rgb(225,70,28)"/><text x="663.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="884" width="2" height="15" fill="rgb(233,19,14)"/><text x="663.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="660" y="900" width="2" height="15" fill="rgb(240,52,18)"/><text x="663.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="916" width="2" height="15" fill="rgb(242,187,50)"/><text x="663.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="932" width="2" height="15" fill="rgb(240,143,13)"/><text x="663.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="660" y="948" width="2" height="15" fill="rgb(236,161,29)"/><text x="663.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="660" y="964" width="2" height="15" fill="rgb(223,205,23)"/><text x="663.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="660" y="980" width="2" height="15" fill="rgb(229,73,22)"/><text x="663.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="996" width="2" height="15" fill="rgb(225,220,19)"/><text x="663.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.18%)</title><rect x="660" y="1012" width="2" height="15" fill="rgb(209,225,31)"/><text x="663.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="1028" width="2" height="15" fill="rgb(212,158,28)"/><text x="663.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="660" y="1044" width="2" height="15" fill="rgb(252,159,47)"/><text x="663.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="660" y="1060" width="2" height="15" fill="rgb(222,21,35)"/><text x="663.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="660" y="1076" width="2" height="15" fill="rgb(249,167,11)"/><text x="663.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="1092" width="2" height="15" fill="rgb(224,38,48)"/><text x="663.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.18%)</title><rect x="660" y="1108" width="2" height="15" fill="rgb(211,214,1)"/><text x="663.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="660" y="1124" width="2" height="15" fill="rgb(252,214,54)"/><text x="663.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="1140" width="2" height="15" fill="rgb(247,58,2)"/><text x="663.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="1156" width="2" height="15" fill="rgb(219,179,21)"/><text x="663.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="660" y="1172" width="2" height="15" fill="rgb(237,71,31)"/><text x="663.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="660" y="1188" width="2" height="15" fill="rgb(217,175,46)"/><text x="663.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="660" y="1204" width="2" height="15" fill="rgb(236,184,39)"/><text x="663.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="1220" width="2" height="15" fill="rgb(205,76,43)"/><text x="663.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.18%)</title><rect x="660" y="1236" width="2" height="15" fill="rgb(246,138,51)"/><text x="663.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="660" y="1252" width="2" height="15" fill="rgb(227,43,43)"/><text x="663.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="1268" width="2" height="15" fill="rgb(230,151,35)"/><text x="663.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="1284" width="2" height="15" fill="rgb(241,211,18)"/><text x="663.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="660" y="1300" width="2" height="15" fill="rgb(230,115,25)"/><text x="663.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="660" y="1316" width="2" height="15" fill="rgb(244,11,14)"/><text x="663.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="660" y="1332" width="2" height="15" fill="rgb(216,63,52)"/><text x="663.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="1348" width="2" height="15" fill="rgb(209,198,12)"/><text x="663.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.18%)</title><rect x="660" y="1364" width="2" height="15" fill="rgb(236,123,12)"/><text x="663.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="660" y="1380" width="2" height="15" fill="rgb(214,183,40)"/><text x="663.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="660" y="1396" width="2" height="15" fill="rgb(226,59,1)"/><text x="663.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="660" y="1412" width="2" height="15" fill="rgb(251,227,34)"/><text x="663.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="660" y="1428" width="2" height="15" fill="rgb(239,120,22)"/><text x="663.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="660" y="1444" width="2" height="15" fill="rgb(251,155,47)"/><text x="663.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.18%)</title><rect x="660" y="1460" width="2" height="15" fill="rgb(218,101,27)"/><text x="663.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.18%)</title><rect x="660" y="1476" width="2" height="15" fill="rgb(227,52,54)"/><text x="663.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.18%)</title><rect x="660" y="1492" width="2" height="15" fill="rgb(249,87,23)"/><text x="663.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.18%)</title><rect x="660" y="1508" width="2" height="15" fill="rgb(222,143,6)"/><text x="663.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.18%)</title><rect x="660" y="1524" width="2" height="15" fill="rgb(241,212,3)"/><text x="663.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.18%)</title><rect x="660" y="1540" width="2" height="15" fill="rgb(224,141,17)"/><text x="663.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.18%)</title><rect x="660" y="1556" width="2" height="15" fill="rgb(218,120,30)"/><text x="663.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:81) (1 samples, 0.18%)</title><rect x="660" y="1572" width="2" height="15" fill="rgb(230,119,25)"/><text x="663.00" y="1582.50"></text></g><g><title>0x7f14bb75707e (?) (1 samples, 0.18%)</title><rect x="660" y="1588" width="2" height="15" fill="rgb(215,94,36)"/><text x="663.00" y="1598.50"></text></g><g><title>0x7f14bb7567c2 (?) (1 samples, 0.18%)</title><rect x="660" y="1604" width="2" height="15" fill="rgb(223,214,49)"/><text x="663.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:4) (10 samples, 1.82%)</title><rect x="642" y="52" width="22" height="15" fill="rgb(222,95,46)"/><text x="645.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.82%)</title><rect x="642" y="68" width="22" height="15" fill="rgb(243,204,28)"/><text x="645.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.82%)</title><rect x="642" y="84" width="22" height="15" fill="rgb(250,16,44)"/><text x="645.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.82%)</title><rect x="642" y="100" width="22" height="15" fill="rgb(236,138,25)"/><text x="645.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.82%)</title><rect x="642" y="116" width="22" height="15" fill="rgb(229,168,30)"/><text x="645.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.82%)</title><rect x="642" y="132" width="22" height="15" fill="rgb(212,109,46)"/><text x="645.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (5 samples, 0.91%)</title><rect x="653" y="148" width="11" height="15" fill="rgb(240,84,12)"/><text x="656.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.91%)</title><rect x="653" y="164" width="11" height="15" fill="rgb(233,48,31)"/><text x="656.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.91%)</title><rect x="653" y="180" width="11" height="15" fill="rgb(238,149,31)"/><text x="656.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.91%)</title><rect x="653" y="196" width="11" height="15" fill="rgb(217,78,24)"/><text x="656.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.91%)</title><rect x="653" y="212" width="11" height="15" fill="rgb(230,32,4)"/><text x="656.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.91%)</title><rect x="653" y="228" width="11" height="15" fill="rgb(214,143,10)"/><text x="656.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.73%)</title><rect x="655" y="244" width="9" height="15" fill="rgb(209,118,35)"/><text x="658.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.73%)</title><rect x="655" y="260" width="9" height="15" fill="rgb(224,169,38)"/><text x="658.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.73%)</title><rect x="655" y="276" width="9" height="15" fill="rgb(250,96,31)"/><text x="658.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.73%)</title><rect x="655" y="292" width="9" height="15" fill="rgb(234,182,13)"/><text x="658.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.73%)</title><rect x="655" y="308" width="9" height="15" fill="rgb(233,219,48)"/><text x="658.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.73%)</title><rect x="655" y="324" width="9" height="15" fill="rgb(229,176,21)"/><text x="658.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.73%)</title><rect x="655" y="340" width="9" height="15" fill="rgb(214,131,12)"/><text x="658.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.73%)</title><rect x="655" y="356" width="9" height="15" fill="rgb(246,200,10)"/><text x="658.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.73%)</title><rect x="655" y="372" width="9" height="15" fill="rgb(233,31,42)"/><text x="658.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.73%)</title><rect x="655" y="388" width="9" height="15" fill="rgb(217,83,29)"/><text x="658.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.73%)</title><rect x="655" y="404" width="9" height="15" fill="rgb(250,69,2)"/><text x="658.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.73%)</title><rect x="655" y="420" width="9" height="15" fill="rgb(225,182,14)"/><text x="658.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.36%)</title><rect x="660" y="436" width="4" height="15" fill="rgb(242,229,41)"/><text x="663.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="660" y="452" width="4" height="15" fill="rgb(242,6,12)"/><text x="663.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.36%)</title><rect x="660" y="468" width="4" height="15" fill="rgb(217,45,33)"/><text x="663.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="660" y="484" width="4" height="15" fill="rgb(206,30,9)"/><text x="663.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="660" y="500" width="4" height="15" fill="rgb(252,20,26)"/><text x="663.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="660" y="516" width="4" height="15" fill="rgb(224,167,26)"/><text x="663.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="660" y="532" width="4" height="15" fill="rgb(209,151,2)"/><text x="663.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="660" y="548" width="4" height="15" fill="rgb(214,78,17)"/><text x="663.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="660" y="564" width="4" height="15" fill="rgb(240,14,51)"/><text x="663.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.36%)</title><rect x="660" y="580" width="4" height="15" fill="rgb(229,197,5)"/><text x="663.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="660" y="596" width="4" height="15" fill="rgb(253,60,9)"/><text x="663.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="660" y="612" width="4" height="15" fill="rgb(209,181,35)"/><text x="663.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="660" y="628" width="4" height="15" fill="rgb(221,23,45)"/><text x="663.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="660" y="644" width="4" height="15" fill="rgb(231,132,39)"/><text x="663.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="660" y="660" width="4" height="15" fill="rgb(246,34,38)"/><text x="663.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:17) (1 samples, 0.18%)</title><rect x="662" y="676" width="2" height="15" fill="rgb(238,109,5)"/><text x="665.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="662" y="692" width="2" height="15" fill="rgb(222,109,50)"/><text x="665.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="662" y="708" width="2" height="15" fill="rgb(236,184,39)"/><text x="665.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="662" y="724" width="2" height="15" fill="rgb(222,56,32)"/><text x="665.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="662" y="740" width="2" height="15" fill="rgb(232,59,1)"/><text x="665.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="662" y="756" width="2" height="15" fill="rgb(214,13,25)"/><text x="665.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="662" y="772" width="2" height="15" fill="rgb(206,222,43)"/><text x="665.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="662" y="788" width="2" height="15" fill="rgb(238,190,31)"/><text x="665.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="662" y="804" width="2" height="15" fill="rgb(246,179,8)"/><text x="665.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/__init__.py:9) (1 samples, 0.18%)</title><rect x="662" y="820" width="2" height="15" fill="rgb(227,110,45)"/><text x="665.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="662" y="836" width="2" height="15" fill="rgb(224,49,28)"/><text x="665.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="662" y="852" width="2" height="15" fill="rgb(228,156,30)"/><text x="665.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="662" y="868" width="2" height="15" fill="rgb(254,135,29)"/><text x="665.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="662" y="884" width="2" height="15" fill="rgb(246,222,25)"/><text x="665.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.18%)</title><rect x="662" y="900" width="2" height="15" fill="rgb(215,199,13)"/><text x="665.00" y="910.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.18%)</title><rect x="662" y="916" width="2" height="15" fill="rgb(207,61,8)"/><text x="665.00" y="926.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.18%)</title><rect x="662" y="932" width="2" height="15" fill="rgb(223,143,0)"/><text x="665.00" y="942.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.18%)</title><rect x="662" y="948" width="2" height="15" fill="rgb(239,161,42)"/><text x="665.00" y="958.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.18%)</title><rect x="664" y="196" width="2" height="15" fill="rgb(240,162,47)"/><text x="667.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.18%)</title><rect x="664" y="212" width="2" height="15" fill="rgb(229,15,23)"/><text x="667.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:211) (1 samples, 0.18%)</title><rect x="664" y="228" width="2" height="15" fill="rgb(240,26,4)"/><text x="667.00" y="238.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.18%)</title><rect x="664" y="244" width="2" height="15" fill="rgb(224,60,54)"/><text x="667.00" y="254.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:28) (2 samples, 0.36%)</title><rect x="664" y="84" width="4" height="15" fill="rgb(245,162,7)"/><text x="667.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.36%)</title><rect x="664" y="100" width="4" height="15" fill="rgb(234,61,38)"/><text x="667.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.36%)</title><rect x="664" y="116" width="4" height="15" fill="rgb(212,90,3)"/><text x="667.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.36%)</title><rect x="664" y="132" width="4" height="15" fill="rgb(237,171,47)"/><text x="667.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.36%)</title><rect x="664" y="148" width="4" height="15" fill="rgb(226,90,25)"/><text x="667.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.36%)</title><rect x="664" y="164" width="4" height="15" fill="rgb(217,83,22)"/><text x="667.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.36%)</title><rect x="664" y="180" width="4" height="15" fill="rgb(208,117,9)"/><text x="667.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.18%)</title><rect x="666" y="196" width="2" height="15" fill="rgb(233,31,50)"/><text x="669.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.18%)</title><rect x="666" y="212" width="2" height="15" fill="rgb(237,162,27)"/><text x="669.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.18%)</title><rect x="666" y="228" width="2" height="15" fill="rgb(238,163,51)"/><text x="669.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="666" y="244" width="2" height="15" fill="rgb(208,61,12)"/><text x="669.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="666" y="260" width="2" height="15" fill="rgb(224,197,10)"/><text x="669.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="666" y="276" width="2" height="15" fill="rgb(235,92,50)"/><text x="669.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="666" y="292" width="2" height="15" fill="rgb(221,188,14)"/><text x="669.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="666" y="308" width="2" height="15" fill="rgb(210,139,24)"/><text x="669.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;long&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(235,65,33)"/><text x="669.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.73%)</title><rect x="670" y="180" width="9" height="15" fill="rgb(238,107,28)"/><text x="673.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.18%)</title><rect x="677" y="196" width="2" height="15" fill="rgb(216,107,15)"/><text x="680.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.18%)</title><rect x="685" y="212" width="2" height="15" fill="rgb(228,37,29)"/><text x="688.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.18%)</title><rect x="685" y="228" width="2" height="15" fill="rgb(243,141,53)"/><text x="688.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.18%)</title><rect x="685" y="244" width="2" height="15" fill="rgb(245,33,15)"/><text x="688.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="685" y="260" width="2" height="15" fill="rgb(248,105,34)"/><text x="688.00" y="270.50"></text></g><g><title>0x7f14cb698028 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="685" y="276" width="2" height="15" fill="rgb(207,184,29)"/><text x="688.00" y="286.50"></text></g><g><title>0x7f14cb695b72 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="685" y="292" width="2" height="15" fill="rgb(254,129,54)"/><text x="688.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.55%)</title><rect x="683" y="196" width="7" height="15" fill="rgb(222,66,30)"/><text x="686.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.18%)</title><rect x="687" y="212" width="3" height="15" fill="rgb(243,97,6)"/><text x="690.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.18%)</title><rect x="687" y="228" width="3" height="15" fill="rgb(218,150,3)"/><text x="690.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.18%)</title><rect x="687" y="244" width="3" height="15" fill="rgb(216,175,40)"/><text x="690.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.18%)</title><rect x="687" y="260" width="3" height="15" fill="rgb(226,68,45)"/><text x="690.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.18%)</title><rect x="687" y="276" width="3" height="15" fill="rgb(219,9,9)"/><text x="690.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.18%)</title><rect x="687" y="292" width="3" height="15" fill="rgb(206,126,31)"/><text x="690.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.18%)</title><rect x="687" y="308" width="3" height="15" fill="rgb(207,198,9)"/><text x="690.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.18%)</title><rect x="690" y="196" width="2" height="15" fill="rgb(238,70,18)"/><text x="693.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.18%)</title><rect x="690" y="212" width="2" height="15" fill="rgb(254,48,38)"/><text x="693.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.18%)</title><rect x="690" y="228" width="2" height="15" fill="rgb(237,163,13)"/><text x="693.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.18%)</title><rect x="690" y="244" width="2" height="15" fill="rgb(206,167,25)"/><text x="693.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.18%)</title><rect x="690" y="260" width="2" height="15" fill="rgb(216,201,44)"/><text x="693.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="690" y="276" width="2" height="15" fill="rgb(253,207,6)"/><text x="693.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="690" y="292" width="2" height="15" fill="rgb(219,141,4)"/><text x="693.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.18%)</title><rect x="690" y="308" width="2" height="15" fill="rgb(251,34,9)"/><text x="693.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.18%)</title><rect x="690" y="324" width="2" height="15" fill="rgb(249,127,8)"/><text x="693.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="696" y="244" width="2" height="15" fill="rgb(230,33,19)"/><text x="699.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="696" y="260" width="2" height="15" fill="rgb(229,208,25)"/><text x="699.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.18%)</title><rect x="696" y="276" width="2" height="15" fill="rgb(254,41,18)"/><text x="699.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.18%)</title><rect x="696" y="292" width="2" height="15" fill="rgb(233,124,15)"/><text x="699.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.18%)</title><rect x="696" y="308" width="2" height="15" fill="rgb(244,129,43)"/><text x="699.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:513) (1 samples, 0.18%)</title><rect x="696" y="324" width="2" height="15" fill="rgb(205,203,6)"/><text x="699.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (3 samples, 0.55%)</title><rect x="694" y="228" width="6" height="15" fill="rgb(205,137,25)"/><text x="697.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.18%)</title><rect x="698" y="244" width="2" height="15" fill="rgb(236,178,13)"/><text x="701.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.18%)</title><rect x="698" y="260" width="2" height="15" fill="rgb(239,165,37)"/><text x="701.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3621) (1 samples, 0.18%)</title><rect x="700" y="340" width="2" height="15" fill="rgb(225,11,24)"/><text x="703.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.18%)</title><rect x="702" y="356" width="3" height="15" fill="rgb(253,173,3)"/><text x="705.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.18%)</title><rect x="702" y="372" width="3" height="15" fill="rgb(218,182,21)"/><text x="705.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:228) (1 samples, 0.18%)</title><rect x="702" y="388" width="3" height="15" fill="rgb(245,139,34)"/><text x="705.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.18%)</title><rect x="702" y="404" width="3" height="15" fill="rgb(217,60,7)"/><text x="705.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.18%)</title><rect x="705" y="372" width="2" height="15" fill="rgb(226,137,8)"/><text x="708.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.36%)</title><rect x="705" y="356" width="4" height="15" fill="rgb(239,169,4)"/><text x="708.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="707" y="372" width="2" height="15" fill="rgb(219,82,46)"/><text x="710.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3003) (1 samples, 0.18%)</title><rect x="707" y="388" width="2" height="15" fill="rgb(236,21,24)"/><text x="710.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (9 samples, 1.64%)</title><rect x="692" y="196" width="19" height="15" fill="rgb(246,221,26)"/><text x="695.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 1.45%)</title><rect x="694" y="212" width="17" height="15" fill="rgb(229,107,33)"/><text x="697.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (5 samples, 0.91%)</title><rect x="700" y="228" width="11" height="15" fill="rgb(218,224,48)"/><text x="703.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.91%)</title><rect x="700" y="244" width="11" height="15" fill="rgb(251,150,4)"/><text x="703.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.91%)</title><rect x="700" y="260" width="11" height="15" fill="rgb(223,219,18)"/><text x="703.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (5 samples, 0.91%)</title><rect x="700" y="276" width="11" height="15" fill="rgb(242,34,14)"/><text x="703.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 0.91%)</title><rect x="700" y="292" width="11" height="15" fill="rgb(247,15,28)"/><text x="703.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.91%)</title><rect x="700" y="308" width="11" height="15" fill="rgb(210,189,38)"/><text x="703.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.91%)</title><rect x="700" y="324" width="11" height="15" fill="rgb(248,120,47)"/><text x="703.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.73%)</title><rect x="702" y="340" width="9" height="15" fill="rgb(249,224,38)"/><text x="705.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.18%)</title><rect x="709" y="356" width="2" height="15" fill="rgb(226,18,44)"/><text x="712.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.18%)</title><rect x="709" y="372" width="2" height="15" fill="rgb(217,31,16)"/><text x="712.00" y="382.50"></text></g><g><title>0x7f148c1f4422 (?) (1 samples, 0.18%)</title><rect x="711" y="244" width="2" height="15" fill="rgb(209,22,42)"/><text x="714.00" y="254.50"></text></g><g><title>0x7f148c1fa89e (?) (1 samples, 0.18%)</title><rect x="711" y="260" width="2" height="15" fill="rgb(220,110,24)"/><text x="714.00" y="270.50"></text></g><g><title>0x7f148c1fa74f (?) (1 samples, 0.18%)</title><rect x="711" y="276" width="2" height="15" fill="rgb(215,82,7)"/><text x="714.00" y="286.50"></text></g><g><title>0x7f148c200a3a (?) (1 samples, 0.18%)</title><rect x="711" y="292" width="2" height="15" fill="rgb(247,211,29)"/><text x="714.00" y="302.50"></text></g><g><title>0x7f149565cab9 (?) (1 samples, 0.18%)</title><rect x="711" y="308" width="2" height="15" fill="rgb(242,172,18)"/><text x="714.00" y="318.50"></text></g><g><title>0x7f149565dea9 (?) (1 samples, 0.18%)</title><rect x="711" y="324" width="2" height="15" fill="rgb(210,192,44)"/><text x="714.00" y="334.50"></text></g><g><title>0x7f149565dea9 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="713" y="468" width="2" height="15" fill="rgb(236,96,17)"/><text x="716.00" y="478.50"></text></g><g><title>0x7f149565deab (libgomp.so.1.0.0) (3 samples, 0.55%)</title><rect x="715" y="468" width="7" height="15" fill="rgb(220,159,15)"/><text x="718.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (6 samples, 1.09%)</title><rect x="711" y="196" width="13" height="15" fill="rgb(222,72,48)"/><text x="714.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (6 samples, 1.09%)</title><rect x="711" y="212" width="13" height="15" fill="rgb(217,47,36)"/><text x="714.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (6 samples, 1.09%)</title><rect x="711" y="228" width="13" height="15" fill="rgb(238,25,16)"/><text x="714.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (5 samples, 0.91%)</title><rect x="713" y="244" width="11" height="15" fill="rgb(248,186,15)"/><text x="716.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (5 samples, 0.91%)</title><rect x="713" y="260" width="11" height="15" fill="rgb(224,177,50)"/><text x="716.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (5 samples, 0.91%)</title><rect x="713" y="276" width="11" height="15" fill="rgb(229,60,15)"/><text x="716.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (5 samples, 0.91%)</title><rect x="713" y="292" width="11" height="15" fill="rgb(213,210,26)"/><text x="716.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (5 samples, 0.91%)</title><rect x="713" y="308" width="11" height="15" fill="rgb(226,91,42)"/><text x="716.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (5 samples, 0.91%)</title><rect x="713" y="324" width="11" height="15" fill="rgb(210,81,24)"/><text x="716.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (5 samples, 0.91%)</title><rect x="713" y="340" width="11" height="15" fill="rgb(215,72,37)"/><text x="716.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (5 samples, 0.91%)</title><rect x="713" y="356" width="11" height="15" fill="rgb(235,74,45)"/><text x="716.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (5 samples, 0.91%)</title><rect x="713" y="372" width="11" height="15" fill="rgb(252,104,38)"/><text x="716.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (5 samples, 0.91%)</title><rect x="713" y="388" width="11" height="15" fill="rgb(210,178,48)"/><text x="716.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (5 samples, 0.91%)</title><rect x="713" y="404" width="11" height="15" fill="rgb(223,9,49)"/><text x="716.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (5 samples, 0.91%)</title><rect x="713" y="420" width="11" height="15" fill="rgb(248,33,22)"/><text x="716.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (5 samples, 0.91%)</title><rect x="713" y="436" width="11" height="15" fill="rgb(218,196,49)"/><text x="716.00" y="446.50"></text></g><g><title>0x7f149565cab9 (libgomp.so.1.0.0) (5 samples, 0.91%)</title><rect x="713" y="452" width="11" height="15" fill="rgb(254,170,34)"/><text x="716.00" y="462.50"></text></g><g><title>0x7f149565dead (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="722" y="468" width="2" height="15" fill="rgb(222,85,29)"/><text x="725.00" y="478.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.36%)</title><rect x="724" y="228" width="4" height="15" fill="rgb(212,42,19)"/><text x="727.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (2 samples, 0.36%)</title><rect x="730" y="308" width="5" height="15" fill="rgb(239,136,29)"/><text x="733.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="730" y="324" width="5" height="15" fill="rgb(253,150,49)"/><text x="733.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (4 samples, 0.73%)</title><rect x="728" y="228" width="9" height="15" fill="rgb(240,57,38)"/><text x="731.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="730" y="244" width="7" height="15" fill="rgb(221,16,4)"/><text x="733.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.55%)</title><rect x="730" y="260" width="7" height="15" fill="rgb(223,70,17)"/><text x="733.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.55%)</title><rect x="730" y="276" width="7" height="15" fill="rgb(207,9,16)"/><text x="733.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.55%)</title><rect x="730" y="292" width="7" height="15" fill="rgb(250,112,37)"/><text x="733.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.18%)</title><rect x="735" y="308" width="2" height="15" fill="rgb(206,109,7)"/><text x="738.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.18%)</title><rect x="735" y="324" width="2" height="15" fill="rgb(215,64,2)"/><text x="738.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.18%)</title><rect x="735" y="340" width="2" height="15" fill="rgb(245,12,22)"/><text x="738.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="737" y="292" width="2" height="15" fill="rgb(212,131,54)"/><text x="740.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.18%)</title><rect x="737" y="308" width="2" height="15" fill="rgb(213,216,30)"/><text x="740.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="737" y="324" width="2" height="15" fill="rgb(212,17,43)"/><text x="740.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (8 samples, 1.45%)</title><rect x="724" y="196" width="17" height="15" fill="rgb(236,84,18)"/><text x="727.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 1.45%)</title><rect x="724" y="212" width="17" height="15" fill="rgb(219,88,29)"/><text x="727.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.36%)</title><rect x="737" y="228" width="4" height="15" fill="rgb(209,119,28)"/><text x="740.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="737" y="244" width="4" height="15" fill="rgb(224,93,27)"/><text x="740.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="737" y="260" width="4" height="15" fill="rgb(224,2,17)"/><text x="740.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.36%)</title><rect x="737" y="276" width="4" height="15" fill="rgb(219,75,15)"/><text x="740.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="739" y="292" width="2" height="15" fill="rgb(225,185,47)"/><text x="742.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.18%)</title><rect x="739" y="308" width="2" height="15" fill="rgb(214,228,2)"/><text x="742.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.55%)</title><rect x="741" y="324" width="7" height="15" fill="rgb(234,122,2)"/><text x="744.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.55%)</title><rect x="741" y="340" width="7" height="15" fill="rgb(208,183,10)"/><text x="744.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="745" y="356" width="3" height="15" fill="rgb(246,160,12)"/><text x="748.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.36%)</title><rect x="748" y="340" width="4" height="15" fill="rgb(212,151,37)"/><text x="751.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.18%)</title><rect x="752" y="388" width="2" height="15" fill="rgb(220,196,1)"/><text x="755.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.36%)</title><rect x="752" y="340" width="4" height="15" fill="rgb(224,28,54)"/><text x="755.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="752" y="356" width="4" height="15" fill="rgb(225,198,52)"/><text x="755.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="752" y="372" width="4" height="15" fill="rgb(246,76,35)"/><text x="755.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.18%)</title><rect x="754" y="388" width="2" height="15" fill="rgb(230,160,1)"/><text x="757.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="756" y="356" width="2" height="15" fill="rgb(211,158,28)"/><text x="759.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="756" y="372" width="2" height="15" fill="rgb(219,136,44)"/><text x="759.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="756" y="388" width="2" height="15" fill="rgb(212,114,22)"/><text x="759.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.18%)</title><rect x="756" y="404" width="2" height="15" fill="rgb(211,175,19)"/><text x="759.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.18%)</title><rect x="758" y="372" width="2" height="15" fill="rgb(240,1,21)"/><text x="761.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.18%)</title><rect x="758" y="388" width="2" height="15" fill="rgb(237,68,2)"/><text x="761.00" y="398.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.18%)</title><rect x="758" y="404" width="2" height="15" fill="rgb(219,83,4)"/><text x="761.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="758" y="356" width="5" height="15" fill="rgb(209,15,27)"/><text x="761.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="760" y="372" width="3" height="15" fill="rgb(210,80,42)"/><text x="763.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.18%)</title><rect x="760" y="388" width="3" height="15" fill="rgb(211,61,10)"/><text x="763.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="760" y="404" width="3" height="15" fill="rgb(253,184,35)"/><text x="763.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="760" y="420" width="3" height="15" fill="rgb(209,56,25)"/><text x="763.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="760" y="436" width="3" height="15" fill="rgb(252,46,36)"/><text x="763.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.18%)</title><rect x="760" y="452" width="3" height="15" fill="rgb(225,15,50)"/><text x="763.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (8 samples, 1.45%)</title><rect x="748" y="324" width="17" height="15" fill="rgb(214,42,18)"/><text x="751.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.73%)</title><rect x="756" y="340" width="9" height="15" fill="rgb(230,23,9)"/><text x="759.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.18%)</title><rect x="763" y="356" width="2" height="15" fill="rgb(221,180,14)"/><text x="766.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="763" y="372" width="2" height="15" fill="rgb(205,20,43)"/><text x="766.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="763" y="388" width="2" height="15" fill="rgb(212,46,27)"/><text x="766.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:124) (1 samples, 0.18%)</title><rect x="765" y="324" width="2" height="15" fill="rgb(254,43,48)"/><text x="768.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="771" y="372" width="2" height="15" fill="rgb(239,164,41)"/><text x="774.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.18%)</title><rect x="771" y="388" width="2" height="15" fill="rgb(243,38,46)"/><text x="774.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.18%)</title><rect x="771" y="404" width="2" height="15" fill="rgb(233,157,51)"/><text x="774.00" y="414.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.18%)</title><rect x="771" y="420" width="2" height="15" fill="rgb(223,122,50)"/><text x="774.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.18%)</title><rect x="773" y="420" width="2" height="15" fill="rgb(243,156,23)"/><text x="776.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1430) (1 samples, 0.18%)</title><rect x="773" y="436" width="2" height="15" fill="rgb(212,164,27)"/><text x="776.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.36%)</title><rect x="773" y="404" width="5" height="15" fill="rgb(243,211,7)"/><text x="776.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="775" y="420" width="3" height="15" fill="rgb(208,148,21)"/><text x="778.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.18%)</title><rect x="775" y="436" width="3" height="15" fill="rgb(226,136,9)"/><text x="778.00" y="446.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:855) (1 samples, 0.18%)</title><rect x="775" y="452" width="3" height="15" fill="rgb(220,61,1)"/><text x="778.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (47 samples, 8.55%)</title><rect x="679" y="180" width="101" height="15" fill="rgb(221,187,31)"/><text x="682.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (18 samples, 3.27%)</title><rect x="741" y="196" width="39" height="15" fill="rgb(239,210,8)"/><text x="744.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (18 samples, 3.27%)</title><rect x="741" y="212" width="39" height="15" fill="rgb(234,42,24)"/><text x="744.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (18 samples, 3.27%)</title><rect x="741" y="228" width="39" height="15" fill="rgb(226,41,33)"/><text x="744.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 3.27%)</title><rect x="741" y="244" width="39" height="15" fill="rgb(234,202,3)"/><text x="744.00" y="254.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (18 samples, 3.27%)</title><rect x="741" y="260" width="39" height="15" fill="rgb(215,215,21)"/><text x="744.00" y="270.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (18 samples, 3.27%)</title><rect x="741" y="276" width="39" height="15" fill="rgb(242,146,13)"/><text x="744.00" y="286.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (18 samples, 3.27%)</title><rect x="741" y="292" width="39" height="15" fill="rgb(247,49,5)"/><text x="744.00" y="302.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 3.27%)</title><rect x="741" y="308" width="39" height="15" fill="rgb(240,228,15)"/><text x="744.00" y="318.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:132) (6 samples, 1.09%)</title><rect x="767" y="324" width="13" height="15" fill="rgb(251,51,35)"/><text x="770.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (5 samples, 0.91%)</title><rect x="769" y="340" width="11" height="15" fill="rgb(239,49,12)"/><text x="772.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.73%)</title><rect x="771" y="356" width="9" height="15" fill="rgb(233,107,45)"/><text x="774.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.55%)</title><rect x="773" y="372" width="7" height="15" fill="rgb(219,68,10)"/><text x="776.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.55%)</title><rect x="773" y="388" width="7" height="15" fill="rgb(225,197,24)"/><text x="776.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.18%)</title><rect x="778" y="404" width="2" height="15" fill="rgb(228,95,50)"/><text x="781.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.18%)</title><rect x="778" y="420" width="2" height="15" fill="rgb(213,115,19)"/><text x="781.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2157) (1 samples, 0.18%)</title><rect x="778" y="436" width="2" height="15" fill="rgb(240,197,53)"/><text x="781.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.18%)</title><rect x="780" y="180" width="2" height="15" fill="rgb(220,113,37)"/><text x="783.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 0.91%)</title><rect x="782" y="180" width="11" height="15" fill="rgb(242,100,7)"/><text x="785.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:18) (60 samples, 10.91%)</title><rect x="668" y="100" width="129" height="15" fill="rgb(234,82,7)"/><text x="671.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (60 samples, 10.91%)</title><rect x="668" y="116" width="129" height="15" fill="rgb(230,205,30)"/><text x="671.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (60 samples, 10.91%)</title><rect x="668" y="132" width="129" height="15" fill="rgb(205,117,15)"/><text x="671.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (60 samples, 10.91%)</title><rect x="668" y="148" width="129" height="15" fill="rgb(207,66,39)"/><text x="671.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (60 samples, 10.91%)</title><rect x="668" y="164" width="129" height="15" fill="rgb(254,188,46)"/><text x="671.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.36%)</title><rect x="793" y="180" width="4" height="15" fill="rgb(213,113,40)"/><text x="796.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.18%)</title><rect x="797" y="164" width="2" height="15" fill="rgb(251,8,3)"/><text x="800.00" y="174.50"></text></g><g><title>0x7f14cb6b7120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="827" y="196" width="2" height="15" fill="rgb(222,50,8)"/><text x="830.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (14 samples, 2.55%)</title><rect x="805" y="180" width="31" height="15" fill="rgb(219,93,26)"/><text x="808.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.55%)</title><rect x="829" y="196" width="7" height="15" fill="rgb(219,39,53)"/><text x="832.00" y="206.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.18%)</title><rect x="857" y="244" width="2" height="15" fill="rgb(253,86,50)"/><text x="860.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="857" y="260" width="2" height="15" fill="rgb(239,103,38)"/><text x="860.00" y="270.50"></text></g><g><title>0x7f14cb698028 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="857" y="276" width="2" height="15" fill="rgb(209,58,14)"/><text x="860.00" y="286.50"></text></g><g><title>0x7f14cb695bc6 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="857" y="292" width="2" height="15" fill="rgb(246,1,32)"/><text x="860.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.18%)</title><rect x="859" y="244" width="2" height="15" fill="rgb(251,81,49)"/><text x="862.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.18%)</title><rect x="859" y="260" width="2" height="15" fill="rgb(220,108,48)"/><text x="862.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="859" y="276" width="2" height="15" fill="rgb(244,176,30)"/><text x="862.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1218) (1 samples, 0.18%)</title><rect x="859" y="292" width="2" height="15" fill="rgb(208,109,46)"/><text x="862.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (3 samples, 0.55%)</title><rect x="857" y="212" width="6" height="15" fill="rgb(253,58,42)"/><text x="860.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.55%)</title><rect x="857" y="228" width="6" height="15" fill="rgb(239,173,52)"/><text x="860.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.18%)</title><rect x="861" y="244" width="2" height="15" fill="rgb(237,177,52)"/><text x="864.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.18%)</title><rect x="861" y="260" width="2" height="15" fill="rgb(239,143,0)"/><text x="864.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.18%)</title><rect x="863" y="212" width="3" height="15" fill="rgb(230,22,22)"/><text x="866.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.18%)</title><rect x="863" y="228" width="3" height="15" fill="rgb(224,180,25)"/><text x="866.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.18%)</title><rect x="863" y="244" width="3" height="15" fill="rgb(235,177,30)"/><text x="866.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.18%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(229,125,22)"/><text x="866.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.18%)</title><rect x="863" y="276" width="3" height="15" fill="rgb(226,222,33)"/><text x="866.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.18%)</title><rect x="863" y="292" width="3" height="15" fill="rgb(237,172,0)"/><text x="866.00" y="302.50"></text></g><g><title>long_index (scalartypes.c.src:3032) (1 samples, 0.18%)</title><rect x="863" y="308" width="3" height="15" fill="rgb(205,137,50)"/><text x="866.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="866" y="244" width="2" height="15" fill="rgb(216,36,43)"/><text x="869.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="866" y="260" width="2" height="15" fill="rgb(252,19,47)"/><text x="869.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="866" y="276" width="2" height="15" fill="rgb(216,49,16)"/><text x="869.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.18%)</title><rect x="866" y="292" width="2" height="15" fill="rgb(252,157,42)"/><text x="869.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 1.09%)</title><rect x="857" y="196" width="13" height="15" fill="rgb(217,183,25)"/><text x="860.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (2 samples, 0.36%)</title><rect x="866" y="212" width="4" height="15" fill="rgb(206,198,47)"/><text x="869.00" y="222.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.36%)</title><rect x="866" y="228" width="4" height="15" fill="rgb(247,173,24)"/><text x="869.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="868" y="244" width="2" height="15" fill="rgb(222,159,40)"/><text x="871.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="868" y="260" width="2" height="15" fill="rgb(251,140,23)"/><text x="871.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1676) (1 samples, 0.18%)</title><rect x="868" y="276" width="2" height="15" fill="rgb(225,35,26)"/><text x="871.00" y="286.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.18%)</title><rect x="868" y="292" width="2" height="15" fill="rgb(207,151,1)"/><text x="871.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:18) (1 samples, 0.18%)</title><rect x="874" y="228" width="2" height="15" fill="rgb(214,75,10)"/><text x="877.00" y="238.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.18%)</title><rect x="876" y="324" width="2" height="15" fill="rgb(241,147,9)"/><text x="879.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.18%)</title><rect x="876" y="340" width="2" height="15" fill="rgb(207,166,24)"/><text x="879.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.18%)</title><rect x="876" y="356" width="2" height="15" fill="rgb(205,154,36)"/><text x="879.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.18%)</title><rect x="876" y="372" width="2" height="15" fill="rgb(212,51,7)"/><text x="879.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (2 samples, 0.36%)</title><rect x="876" y="228" width="5" height="15" fill="rgb(213,39,53)"/><text x="879.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="876" y="244" width="5" height="15" fill="rgb(231,130,44)"/><text x="879.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="876" y="260" width="5" height="15" fill="rgb(254,186,7)"/><text x="879.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.36%)</title><rect x="876" y="276" width="5" height="15" fill="rgb(236,111,29)"/><text x="879.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.36%)</title><rect x="876" y="292" width="5" height="15" fill="rgb(220,210,5)"/><text x="879.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.36%)</title><rect x="876" y="308" width="5" height="15" fill="rgb(246,19,15)"/><text x="879.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.18%)</title><rect x="878" y="324" width="3" height="15" fill="rgb(228,32,27)"/><text x="881.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="878" y="340" width="3" height="15" fill="rgb(248,48,46)"/><text x="881.00" y="350.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (2 samples, 0.36%)</title><rect x="885" y="244" width="4" height="15" fill="rgb(239,212,37)"/><text x="888.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (1 samples, 0.18%)</title><rect x="889" y="244" width="2" height="15" fill="rgb(253,169,50)"/><text x="892.00" y="254.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (2 samples, 0.36%)</title><rect x="893" y="276" width="5" height="15" fill="rgb(228,136,44)"/><text x="896.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.18%)</title><rect x="904" y="308" width="2" height="15" fill="rgb(210,58,21)"/><text x="907.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (4 samples, 0.73%)</title><rect x="902" y="292" width="9" height="15" fill="rgb(230,79,50)"/><text x="905.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (2 samples, 0.36%)</title><rect x="906" y="308" width="5" height="15" fill="rgb(248,108,15)"/><text x="909.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.18%)</title><rect x="911" y="292" width="2" height="15" fill="rgb(216,124,47)"/><text x="914.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.18%)</title><rect x="917" y="308" width="2" height="15" fill="rgb(253,215,14)"/><text x="920.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="917" y="324" width="2" height="15" fill="rgb(236,119,39)"/><text x="920.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="917" y="340" width="2" height="15" fill="rgb(233,140,7)"/><text x="920.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="917" y="356" width="2" height="15" fill="rgb(223,191,46)"/><text x="920.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="917" y="372" width="2" height="15" fill="rgb(251,0,34)"/><text x="920.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="917" y="388" width="2" height="15" fill="rgb(219,96,15)"/><text x="920.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.18%)</title><rect x="919" y="324" width="2" height="15" fill="rgb(225,131,39)"/><text x="922.00" y="334.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.18%)</title><rect x="919" y="340" width="2" height="15" fill="rgb(222,217,41)"/><text x="922.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.18%)</title><rect x="921" y="324" width="2" height="15" fill="rgb(245,210,26)"/><text x="924.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.18%)</title><rect x="921" y="340" width="2" height="15" fill="rgb(229,47,50)"/><text x="924.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.18%)</title><rect x="921" y="356" width="2" height="15" fill="rgb(238,213,18)"/><text x="924.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.18%)</title><rect x="921" y="372" width="2" height="15" fill="rgb(206,105,53)"/><text x="924.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.18%)</title><rect x="923" y="420" width="3" height="15" fill="rgb(240,202,12)"/><text x="926.00" y="430.50"></text></g><g><title>0x7f14cb69803c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="926" y="500" width="2" height="15" fill="rgb(228,52,22)"/><text x="929.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (3 samples, 0.55%)</title><rect x="923" y="356" width="7" height="15" fill="rgb(236,29,23)"/><text x="926.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (3 samples, 0.55%)</title><rect x="923" y="372" width="7" height="15" fill="rgb(248,123,26)"/><text x="926.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (3 samples, 0.55%)</title><rect x="923" y="388" width="7" height="15" fill="rgb(248,226,16)"/><text x="926.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.55%)</title><rect x="923" y="404" width="7" height="15" fill="rgb(221,114,25)"/><text x="926.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.36%)</title><rect x="926" y="420" width="4" height="15" fill="rgb(240,43,54)"/><text x="929.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.36%)</title><rect x="926" y="436" width="4" height="15" fill="rgb(211,97,2)"/><text x="929.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.36%)</title><rect x="926" y="452" width="4" height="15" fill="rgb(208,36,20)"/><text x="929.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.36%)</title><rect x="926" y="468" width="4" height="15" fill="rgb(238,96,37)"/><text x="929.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="926" y="484" width="4" height="15" fill="rgb(208,75,46)"/><text x="929.00" y="494.50"></text></g><g><title>0x7f14cb698700 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="928" y="500" width="2" height="15" fill="rgb(237,162,47)"/><text x="931.00" y="510.50"></text></g><g><title>0x7f14cb695acd (libc-2.29.so) (1 samples, 0.18%)</title><rect x="928" y="516" width="2" height="15" fill="rgb(229,130,45)"/><text x="931.00" y="526.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="930" y="372" width="2" height="15" fill="rgb(227,121,10)"/><text x="933.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.18%)</title><rect x="930" y="388" width="2" height="15" fill="rgb(251,8,48)"/><text x="933.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.18%)</title><rect x="930" y="404" width="2" height="15" fill="rgb(243,104,36)"/><text x="933.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.36%)</title><rect x="930" y="356" width="4" height="15" fill="rgb(214,95,32)"/><text x="933.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.18%)</title><rect x="932" y="372" width="2" height="15" fill="rgb(238,95,51)"/><text x="935.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.18%)</title><rect x="932" y="388" width="2" height="15" fill="rgb(242,138,6)"/><text x="935.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.09%)</title><rect x="923" y="324" width="13" height="15" fill="rgb(241,82,39)"/><text x="926.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.09%)</title><rect x="923" y="340" width="13" height="15" fill="rgb(229,94,19)"/><text x="926.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.18%)</title><rect x="934" y="356" width="2" height="15" fill="rgb(245,1,41)"/><text x="937.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.18%)</title><rect x="934" y="372" width="2" height="15" fill="rgb(248,0,19)"/><text x="937.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.18%)</title><rect x="934" y="388" width="2" height="15" fill="rgb(228,132,54)"/><text x="937.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="934" y="404" width="2" height="15" fill="rgb(232,225,31)"/><text x="937.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (32 samples, 5.82%)</title><rect x="870" y="196" width="68" height="15" fill="rgb(220,87,30)"/><text x="873.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (31 samples, 5.64%)</title><rect x="872" y="212" width="66" height="15" fill="rgb(233,66,52)"/><text x="875.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (27 samples, 4.91%)</title><rect x="881" y="228" width="57" height="15" fill="rgb(237,76,1)"/><text x="884.00" y="238.50">_run (..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (22 samples, 4.00%)</title><rect x="891" y="244" width="47" height="15" fill="rgb(254,133,17)"/><text x="894.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 4.00%)</title><rect x="891" y="260" width="47" height="15" fill="rgb(219,17,48)"/><text x="894.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (19 samples, 3.45%)</title><rect x="898" y="276" width="40" height="15" fill="rgb(229,22,47)"/><text x="901.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (12 samples, 2.18%)</title><rect x="913" y="292" width="25" height="15" fill="rgb(211,95,50)"/><text x="916.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.64%)</title><rect x="919" y="308" width="19" height="15" fill="rgb(230,149,48)"/><text x="922.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.18%)</title><rect x="936" y="324" width="2" height="15" fill="rgb(234,52,43)"/><text x="939.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.18%)</title><rect x="936" y="340" width="2" height="15" fill="rgb(239,92,33)"/><text x="939.00" y="350.50"></text></g><g><title>0x7f14ca8b87c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="936" y="356" width="2" height="15" fill="rgb(209,50,15)"/><text x="939.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.18%)</title><rect x="938" y="196" width="3" height="15" fill="rgb(223,16,30)"/><text x="941.00" y="206.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.18%)</title><rect x="941" y="276" width="2" height="15" fill="rgb(239,2,49)"/><text x="944.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.18%)</title><rect x="941" y="292" width="2" height="15" fill="rgb(214,49,45)"/><text x="944.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.18%)</title><rect x="941" y="308" width="2" height="15" fill="rgb(215,224,38)"/><text x="944.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.18%)</title><rect x="941" y="324" width="2" height="15" fill="rgb(234,191,37)"/><text x="944.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.18%)</title><rect x="941" y="340" width="2" height="15" fill="rgb(243,54,39)"/><text x="944.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.18%)</title><rect x="941" y="356" width="2" height="15" fill="rgb(209,223,49)"/><text x="944.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.18%)</title><rect x="941" y="372" width="2" height="15" fill="rgb(227,210,3)"/><text x="944.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.18%)</title><rect x="941" y="388" width="2" height="15" fill="rgb(234,140,28)"/><text x="944.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.18%)</title><rect x="941" y="404" width="2" height="15" fill="rgb(221,27,38)"/><text x="944.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="941" y="420" width="2" height="15" fill="rgb(225,196,26)"/><text x="944.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="941" y="436" width="2" height="15" fill="rgb(239,43,51)"/><text x="944.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.18%)</title><rect x="941" y="452" width="2" height="15" fill="rgb(212,119,9)"/><text x="944.00" y="462.50"></text></g><g><title>0x7f149565dea0 (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="943" y="468" width="4" height="15" fill="rgb(254,184,28)"/><text x="946.00" y="478.50"></text></g><g><title>0x7f149565dea9 (libgomp.so.1.0.0) (3 samples, 0.55%)</title><rect x="947" y="468" width="7" height="15" fill="rgb(249,81,0)"/><text x="950.00" y="478.50"></text></g><g><title>0x7f149565deab (libgomp.so.1.0.0) (8 samples, 1.45%)</title><rect x="954" y="468" width="17" height="15" fill="rgb(212,77,45)"/><text x="957.00" y="478.50"></text></g><g><title>0x7f149565cab9 (libgomp.so.1.0.0) (17 samples, 3.09%)</title><rect x="943" y="452" width="36" height="15" fill="rgb(209,96,32)"/><text x="946.00" y="462.50">0x7..</text></g><g><title>0x7f149565dead (libgomp.so.1.0.0) (4 samples, 0.73%)</title><rect x="971" y="468" width="8" height="15" fill="rgb(252,214,19)"/><text x="974.00" y="478.50"></text></g><g><title>0x7f149565ba07 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="979" y="468" width="2" height="15" fill="rgb(229,92,43)"/><text x="982.00" y="478.50"></text></g><g><title>0x7f149565dcf9 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="981" y="484" width="3" height="15" fill="rgb(211,104,43)"/><text x="984.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (21 samples, 3.82%)</title><rect x="941" y="196" width="45" height="15" fill="rgb(207,171,3)"/><text x="944.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 3.82%)</title><rect x="941" y="212" width="45" height="15" fill="rgb(250,26,48)"/><text x="944.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (21 samples, 3.82%)</title><rect x="941" y="228" width="45" height="15" fill="rgb(221,220,3)"/><text x="944.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (21 samples, 3.82%)</title><rect x="941" y="244" width="45" height="15" fill="rgb(252,212,3)"/><text x="944.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (21 samples, 3.82%)</title><rect x="941" y="260" width="45" height="15" fill="rgb(213,28,20)"/><text x="944.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (20 samples, 3.64%)</title><rect x="943" y="276" width="43" height="15" fill="rgb(208,151,46)"/><text x="946.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (20 samples, 3.64%)</title><rect x="943" y="292" width="43" height="15" fill="rgb(214,48,8)"/><text x="946.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (20 samples, 3.64%)</title><rect x="943" y="308" width="43" height="15" fill="rgb(221,69,29)"/><text x="946.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (20 samples, 3.64%)</title><rect x="943" y="324" width="43" height="15" fill="rgb(205,199,26)"/><text x="946.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (20 samples, 3.64%)</title><rect x="943" y="340" width="43" height="15" fill="rgb(246,57,54)"/><text x="946.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (20 samples, 3.64%)</title><rect x="943" y="356" width="43" height="15" fill="rgb(207,68,27)"/><text x="946.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (20 samples, 3.64%)</title><rect x="943" y="372" width="43" height="15" fill="rgb(226,74,33)"/><text x="946.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (20 samples, 3.64%)</title><rect x="943" y="388" width="43" height="15" fill="rgb(236,160,38)"/><text x="946.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (20 samples, 3.64%)</title><rect x="943" y="404" width="43" height="15" fill="rgb(251,148,24)"/><text x="946.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (20 samples, 3.64%)</title><rect x="943" y="420" width="43" height="15" fill="rgb(213,40,44)"/><text x="946.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (20 samples, 3.64%)</title><rect x="943" y="436" width="43" height="15" fill="rgb(234,192,51)"/><text x="946.00" y="446.50">pybi..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.55%)</title><rect x="979" y="452" width="7" height="15" fill="rgb(245,78,39)"/><text x="982.00" y="462.50"></text></g><g><title>0x7f149565bdaa (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="981" y="468" width="5" height="15" fill="rgb(212,86,18)"/><text x="984.00" y="478.50"></text></g><g><title>0x7f149565dcfd (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="984" y="484" width="2" height="15" fill="rgb(240,113,27)"/><text x="987.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.36%)</title><rect x="992" y="228" width="4" height="15" fill="rgb(222,27,5)"/><text x="995.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.18%)</title><rect x="996" y="228" width="3" height="15" fill="rgb(252,94,52)"/><text x="999.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="999" y="244" width="2" height="15" fill="rgb(225,81,6)"/><text x="1002.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="999" y="260" width="2" height="15" fill="rgb(210,61,44)"/><text x="1002.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.18%)</title><rect x="999" y="276" width="2" height="15" fill="rgb(247,93,28)"/><text x="1002.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.18%)</title><rect x="1001" y="276" width="2" height="15" fill="rgb(215,211,52)"/><text x="1004.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.36%)</title><rect x="1001" y="260" width="4" height="15" fill="rgb(241,219,0)"/><text x="1004.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.18%)</title><rect x="1003" y="276" width="2" height="15" fill="rgb(242,212,13)"/><text x="1006.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="1005" y="260" width="2" height="15" fill="rgb(226,199,7)"/><text x="1008.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.18%)</title><rect x="1005" y="276" width="2" height="15" fill="rgb(227,191,28)"/><text x="1008.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.18%)</title><rect x="1005" y="292" width="2" height="15" fill="rgb(207,48,43)"/><text x="1008.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.18%)</title><rect x="1005" y="308" width="2" height="15" fill="rgb(211,7,39)"/><text x="1008.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.18%)</title><rect x="1005" y="324" width="2" height="15" fill="rgb(242,206,21)"/><text x="1008.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.18%)</title><rect x="1007" y="260" width="2" height="15" fill="rgb(239,53,4)"/><text x="1010.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.18%)</title><rect x="1007" y="276" width="2" height="15" fill="rgb(239,22,11)"/><text x="1010.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="1009" y="260" width="2" height="15" fill="rgb(236,33,16)"/><text x="1012.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="1011" y="308" width="3" height="15" fill="rgb(224,54,17)"/><text x="1014.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2787) (1 samples, 0.18%)</title><rect x="1011" y="324" width="3" height="15" fill="rgb(236,65,52)"/><text x="1014.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.36%)</title><rect x="1011" y="292" width="5" height="15" fill="rgb(248,1,32)"/><text x="1014.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.18%)</title><rect x="1014" y="308" width="2" height="15" fill="rgb(211,126,13)"/><text x="1017.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3260) (1 samples, 0.18%)</title><rect x="1014" y="324" width="2" height="15" fill="rgb(220,185,1)"/><text x="1017.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.36%)</title><rect x="1016" y="292" width="4" height="15" fill="rgb(220,216,53)"/><text x="1019.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (2 samples, 0.36%)</title><rect x="1016" y="308" width="4" height="15" fill="rgb(237,227,3)"/><text x="1019.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (2 samples, 0.36%)</title><rect x="1016" y="324" width="4" height="15" fill="rgb(243,219,11)"/><text x="1019.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="1020" y="292" width="2" height="15" fill="rgb(235,33,50)"/><text x="1023.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.18%)</title><rect x="1020" y="308" width="2" height="15" fill="rgb(212,19,26)"/><text x="1023.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.18%)</title><rect x="1020" y="324" width="2" height="15" fill="rgb(234,197,29)"/><text x="1023.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.18%)</title><rect x="1022" y="308" width="2" height="15" fill="rgb(205,152,47)"/><text x="1025.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.18%)</title><rect x="1024" y="308" width="2" height="15" fill="rgb(243,213,1)"/><text x="1027.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (14 samples, 2.55%)</title><rect x="999" y="228" width="30" height="15" fill="rgb(224,2,45)"/><text x="1002.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.36%)</title><rect x="1001" y="244" width="28" height="15" fill="rgb(235,100,54)"/><text x="1004.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.45%)</title><rect x="1011" y="260" width="18" height="15" fill="rgb(239,227,47)"/><text x="1014.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.45%)</title><rect x="1011" y="276" width="18" height="15" fill="rgb(244,172,22)"/><text x="1014.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (3 samples, 0.55%)</title><rect x="1022" y="292" width="7" height="15" fill="rgb(208,136,5)"/><text x="1025.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:698) (1 samples, 0.18%)</title><rect x="1026" y="308" width="3" height="15" fill="rgb(209,7,33)"/><text x="1029.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.18%)</title><rect x="1029" y="228" width="2" height="15" fill="rgb(240,127,4)"/><text x="1032.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.18%)</title><rect x="1031" y="308" width="2" height="15" fill="rgb(216,62,6)"/><text x="1034.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2355) (1 samples, 0.18%)</title><rect x="1031" y="324" width="2" height="15" fill="rgb(238,84,48)"/><text x="1034.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.36%)</title><rect x="1031" y="292" width="4" height="15" fill="rgb(210,24,32)"/><text x="1034.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="1033" y="308" width="2" height="15" fill="rgb(232,17,45)"/><text x="1036.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.18%)</title><rect x="1033" y="324" width="2" height="15" fill="rgb(252,173,15)"/><text x="1036.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.18%)</title><rect x="1033" y="340" width="2" height="15" fill="rgb(207,77,5)"/><text x="1036.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="1033" y="356" width="2" height="15" fill="rgb(215,184,7)"/><text x="1036.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.18%)</title><rect x="1033" y="372" width="2" height="15" fill="rgb(238,64,6)"/><text x="1036.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.18%)</title><rect x="1033" y="388" width="2" height="15" fill="rgb(226,124,38)"/><text x="1036.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.18%)</title><rect x="1033" y="404" width="2" height="15" fill="rgb(238,176,30)"/><text x="1036.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1033" y="420" width="2" height="15" fill="rgb(233,70,51)"/><text x="1036.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (24 samples, 4.36%)</title><rect x="986" y="196" width="51" height="15" fill="rgb(217,100,29)"/><text x="989.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (23 samples, 4.18%)</title><rect x="988" y="212" width="49" height="15" fill="rgb(233,224,42)"/><text x="991.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.55%)</title><rect x="1031" y="228" width="6" height="15" fill="rgb(250,206,5)"/><text x="1034.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="1031" y="244" width="6" height="15" fill="rgb(230,96,38)"/><text x="1034.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.55%)</title><rect x="1031" y="260" width="6" height="15" fill="rgb(207,201,52)"/><text x="1034.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.55%)</title><rect x="1031" y="276" width="6" height="15" fill="rgb(229,72,49)"/><text x="1034.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="1035" y="292" width="2" height="15" fill="rgb(239,191,15)"/><text x="1038.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.18%)</title><rect x="1035" y="308" width="2" height="15" fill="rgb(250,217,6)"/><text x="1038.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1035" y="324" width="2" height="15" fill="rgb(231,125,5)"/><text x="1038.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.18%)</title><rect x="1037" y="196" width="2" height="15" fill="rgb(223,43,9)"/><text x="1040.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3213) (1 samples, 0.18%)</title><rect x="1037" y="212" width="2" height="15" fill="rgb(244,211,34)"/><text x="1040.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:52) (1 samples, 0.18%)</title><rect x="1039" y="196" width="2" height="15" fill="rgb(217,140,54)"/><text x="1042.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.18%)</title><rect x="1044" y="244" width="2" height="15" fill="rgb(219,51,21)"/><text x="1047.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.18%)</title><rect x="1048" y="276" width="2" height="15" fill="rgb(252,93,52)"/><text x="1051.00" y="286.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (2 samples, 0.36%)</title><rect x="1050" y="340" width="4" height="15" fill="rgb(223,152,50)"/><text x="1053.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (4 samples, 0.73%)</title><rect x="1050" y="324" width="9" height="15" fill="rgb(246,123,14)"/><text x="1053.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (2 samples, 0.36%)</title><rect x="1054" y="340" width="5" height="15" fill="rgb(219,189,2)"/><text x="1057.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.18%)</title><rect x="1063" y="340" width="2" height="15" fill="rgb(233,61,37)"/><text x="1066.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="1063" y="356" width="2" height="15" fill="rgb(205,149,23)"/><text x="1066.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (7 samples, 1.27%)</title><rect x="1059" y="324" width="15" height="15" fill="rgb(242,121,52)"/><text x="1062.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.73%)</title><rect x="1065" y="340" width="9" height="15" fill="rgb(249,157,17)"/><text x="1068.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="1069" y="356" width="5" height="15" fill="rgb(221,89,46)"/><text x="1072.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="1069" y="372" width="5" height="15" fill="rgb(217,6,21)"/><text x="1072.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.36%)</title><rect x="1069" y="388" width="5" height="15" fill="rgb(213,6,14)"/><text x="1072.00" y="398.50"></text></g><g><title>0x7f14ca8b9800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1072" y="404" width="2" height="15" fill="rgb(238,14,16)"/><text x="1075.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.36%)</title><rect x="1074" y="340" width="4" height="15" fill="rgb(216,0,6)"/><text x="1077.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.36%)</title><rect x="1074" y="356" width="4" height="15" fill="rgb(224,53,53)"/><text x="1077.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.18%)</title><rect x="1078" y="388" width="2" height="15" fill="rgb(245,45,42)"/><text x="1081.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.18%)</title><rect x="1080" y="388" width="2" height="15" fill="rgb(237,161,11)"/><text x="1083.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="1082" y="404" width="2" height="15" fill="rgb(246,38,26)"/><text x="1085.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="1082" y="420" width="2" height="15" fill="rgb(234,161,1)"/><text x="1085.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="1082" y="436" width="2" height="15" fill="rgb(222,25,34)"/><text x="1085.00" y="446.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.18%)</title><rect x="1084" y="420" width="3" height="15" fill="rgb(238,67,25)"/><text x="1087.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="1087" y="468" width="2" height="15" fill="rgb(243,76,32)"/><text x="1090.00" y="478.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.18%)</title><rect x="1087" y="484" width="2" height="15" fill="rgb(216,95,0)"/><text x="1090.00" y="494.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 1.09%)</title><rect x="1078" y="340" width="13" height="15" fill="rgb(247,1,10)"/><text x="1081.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 1.09%)</title><rect x="1078" y="356" width="13" height="15" fill="rgb(215,76,22)"/><text x="1081.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.09%)</title><rect x="1078" y="372" width="13" height="15" fill="rgb(253,76,22)"/><text x="1081.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (4 samples, 0.73%)</title><rect x="1082" y="388" width="9" height="15" fill="rgb(254,129,6)"/><text x="1085.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.55%)</title><rect x="1084" y="404" width="7" height="15" fill="rgb(245,153,43)"/><text x="1087.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.36%)</title><rect x="1087" y="420" width="4" height="15" fill="rgb(207,200,35)"/><text x="1090.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.36%)</title><rect x="1087" y="436" width="4" height="15" fill="rgb(227,135,36)"/><text x="1090.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (2 samples, 0.36%)</title><rect x="1087" y="452" width="4" height="15" fill="rgb(236,148,48)"/><text x="1090.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.18%)</title><rect x="1089" y="468" width="2" height="15" fill="rgb(245,149,34)"/><text x="1092.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="1093" y="356" width="2" height="15" fill="rgb(243,73,8)"/><text x="1096.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="1093" y="372" width="2" height="15" fill="rgb(249,165,38)"/><text x="1096.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="1093" y="388" width="2" height="15" fill="rgb(246,167,44)"/><text x="1096.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.18%)</title><rect x="1093" y="404" width="2" height="15" fill="rgb(243,3,33)"/><text x="1096.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.18%)</title><rect x="1095" y="372" width="2" height="15" fill="rgb(247,173,6)"/><text x="1098.00" y="382.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.18%)</title><rect x="1095" y="388" width="2" height="15" fill="rgb(252,110,31)"/><text x="1098.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="1095" y="356" width="4" height="15" fill="rgb(251,221,31)"/><text x="1098.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="1097" y="372" width="2" height="15" fill="rgb(216,66,5)"/><text x="1100.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.18%)</title><rect x="1097" y="388" width="2" height="15" fill="rgb(251,189,2)"/><text x="1100.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.18%)</title><rect x="1097" y="404" width="2" height="15" fill="rgb(207,136,45)"/><text x="1100.00" y="414.50"></text></g><g><title>DOUBLE_isnan (loops.c.src:1809) (1 samples, 0.18%)</title><rect x="1097" y="420" width="2" height="15" fill="rgb(210,78,20)"/><text x="1100.00" y="430.50"></text></g><g><title>run_isnan_simd_DOUBLE (simd.inc.src:323) (1 samples, 0.18%)</title><rect x="1097" y="436" width="2" height="15" fill="rgb(246,2,20)"/><text x="1100.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (13 samples, 2.36%)</title><rect x="1074" y="324" width="28" height="15" fill="rgb(214,23,35)"/><text x="1077.00" y="334.50">_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.91%)</title><rect x="1091" y="340" width="11" height="15" fill="rgb(220,187,17)"/><text x="1094.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.18%)</title><rect x="1099" y="356" width="3" height="15" fill="rgb(219,71,4)"/><text x="1102.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="1099" y="372" width="3" height="15" fill="rgb(239,116,44)"/><text x="1102.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="1099" y="388" width="3" height="15" fill="rgb(246,189,24)"/><text x="1102.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.18%)</title><rect x="1099" y="404" width="3" height="15" fill="rgb(217,204,33)"/><text x="1102.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="1108" y="356" width="2" height="15" fill="rgb(245,156,36)"/><text x="1111.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="1108" y="372" width="2" height="15" fill="rgb(208,16,18)"/><text x="1111.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="1108" y="388" width="2" height="15" fill="rgb(230,140,39)"/><text x="1111.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="1108" y="404" width="2" height="15" fill="rgb(236,38,30)"/><text x="1111.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.18%)</title><rect x="1108" y="420" width="2" height="15" fill="rgb(230,81,54)"/><text x="1111.00" y="430.50"></text></g><g><title>0x7f14cb774151 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1108" y="436" width="2" height="15" fill="rgb(207,152,25)"/><text x="1111.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.18%)</title><rect x="1110" y="404" width="2" height="15" fill="rgb(220,132,31)"/><text x="1113.00" y="414.50"></text></g><g><title>0x7f14ca8b90a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1110" y="420" width="2" height="15" fill="rgb(232,119,29)"/><text x="1113.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.36%)</title><rect x="1110" y="388" width="4" height="15" fill="rgb(250,136,28)"/><text x="1113.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.18%)</title><rect x="1112" y="404" width="2" height="15" fill="rgb(243,173,20)"/><text x="1115.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.18%)</title><rect x="1112" y="420" width="2" height="15" fill="rgb(226,203,39)"/><text x="1115.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.18%)</title><rect x="1112" y="436" width="2" height="15" fill="rgb(216,82,21)"/><text x="1115.00" y="446.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.18%)</title><rect x="1112" y="452" width="2" height="15" fill="rgb(205,132,44)"/><text x="1115.00" y="462.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.18%)</title><rect x="1112" y="468" width="2" height="15" fill="rgb(226,194,19)"/><text x="1115.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="1110" y="356" width="7" height="15" fill="rgb(227,158,52)"/><text x="1113.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.55%)</title><rect x="1110" y="372" width="7" height="15" fill="rgb(251,36,53)"/><text x="1113.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.18%)</title><rect x="1114" y="388" width="3" height="15" fill="rgb(241,99,5)"/><text x="1117.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (132 samples, 24.00%)</title><rect x="836" y="180" width="283" height="15" fill="rgb(214,44,14)"/><text x="839.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (36 samples, 6.55%)</title><rect x="1041" y="196" width="78" height="15" fill="rgb(205,64,42)"/><text x="1044.00" y="206.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (35 samples, 6.36%)</title><rect x="1044" y="212" width="75" height="15" fill="rgb(206,134,31)"/><text x="1047.00" y="222.50">_run (ml..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (35 samples, 6.36%)</title><rect x="1044" y="228" width="75" height="15" fill="rgb(254,226,39)"/><text x="1047.00" y="238.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (34 samples, 6.18%)</title><rect x="1046" y="244" width="73" height="15" fill="rgb(225,118,40)"/><text x="1049.00" y="254.50">array_im..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (34 samples, 6.18%)</title><rect x="1046" y="260" width="73" height="15" fill="rgb(216,17,48)"/><text x="1049.00" y="270.50">clip (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (32 samples, 5.82%)</title><rect x="1050" y="276" width="69" height="15" fill="rgb(205,140,44)"/><text x="1053.00" y="286.50">_wrapfu..</text></g><g><title>array_clip (methods.c:2381) (32 samples, 5.82%)</title><rect x="1050" y="292" width="69" height="15" fill="rgb(224,37,31)"/><text x="1053.00" y="302.50">array_c..</text></g><g><title>forward_ndarray_method (methods.c:108) (32 samples, 5.82%)</title><rect x="1050" y="308" width="69" height="15" fill="rgb(209,184,1)"/><text x="1053.00" y="318.50">forward..</text></g><g><title>_clip (numpy/core/_methods.py:132) (8 samples, 1.45%)</title><rect x="1102" y="324" width="17" height="15" fill="rgb(248,51,36)"/><text x="1105.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (5 samples, 0.91%)</title><rect x="1108" y="340" width="11" height="15" fill="rgb(254,93,29)"/><text x="1111.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.18%)</title><rect x="1117" y="356" width="2" height="15" fill="rgb(239,176,48)"/><text x="1120.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.18%)</title><rect x="1117" y="372" width="2" height="15" fill="rgb(234,219,27)"/><text x="1120.00" y="382.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.18%)</title><rect x="1117" y="388" width="2" height="15" fill="rgb(235,212,51)"/><text x="1120.00" y="398.50"></text></g><g><title>_npy_free_cache (alloc.c:108) (1 samples, 0.18%)</title><rect x="1117" y="404" width="2" height="15" fill="rgb(253,40,46)"/><text x="1120.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.36%)</title><rect x="1119" y="180" width="4" height="15" fill="rgb(243,157,22)"/><text x="1122.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (8 samples, 1.45%)</title><rect x="1123" y="180" width="17" height="15" fill="rgb(235,66,50)"/><text x="1126.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.36%)</title><rect x="1140" y="180" width="4" height="15" fill="rgb(239,211,25)"/><text x="1143.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.36%)</title><rect x="1144" y="180" width="5" height="15" fill="rgb(252,213,43)"/><text x="1147.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (167 samples, 30.36%)</title><rect x="799" y="164" width="358" height="15" fill="rgb(223,52,35)"/><text x="802.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (4 samples, 0.73%)</title><rect x="1149" y="180" width="8" height="15" fill="rgb(241,165,35)"/><text x="1152.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:45) (231 samples, 42.00%)</title><rect x="664" y="52" width="495" height="15" fill="rgb(223,174,32)"/><text x="667.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:4..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:44) (231 samples, 42.00%)</title><rect x="664" y="68" width="495" height="15" fill="rgb(226,96,2)"/><text x="667.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_...</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29) (229 samples, 41.64%)</title><rect x="668" y="84" width="491" height="15" fill="rgb(219,99,17)"/><text x="671.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:23) (169 samples, 30.73%)</title><rect x="797" y="100" width="362" height="15" fill="rgb(241,178,43)"/><text x="800.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (169 samples, 30.73%)</title><rect x="797" y="116" width="362" height="15" fill="rgb(208,10,15)"/><text x="800.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (169 samples, 30.73%)</title><rect x="797" y="132" width="362" height="15" fill="rgb(225,70,3)"/><text x="800.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (169 samples, 30.73%)</title><rect x="797" y="148" width="362" height="15" fill="rgb(233,129,50)"/><text x="800.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="1157" y="164" width="2" height="15" fill="rgb(252,174,40)"/><text x="1160.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="1157" y="180" width="2" height="15" fill="rgb(245,25,54)"/><text x="1160.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="1157" y="196" width="2" height="15" fill="rgb(249,148,39)"/><text x="1160.00" y="206.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.18%)</title><rect x="1159" y="196" width="3" height="15" fill="rgb(251,179,20)"/><text x="1162.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:83) (1 samples, 0.18%)</title><rect x="1159" y="212" width="3" height="15" fill="rgb(254,109,36)"/><text x="1162.00" y="222.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py:569) (1 samples, 0.18%)</title><rect x="1159" y="228" width="3" height="15" fill="rgb(234,89,25)"/><text x="1162.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.18%)</title><rect x="1159" y="244" width="3" height="15" fill="rgb(247,51,25)"/><text x="1162.00" y="254.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.36%)</title><rect x="1159" y="116" width="5" height="15" fill="rgb(240,162,12)"/><text x="1162.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.36%)</title><rect x="1159" y="132" width="5" height="15" fill="rgb(232,224,34)"/><text x="1162.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.36%)</title><rect x="1159" y="148" width="5" height="15" fill="rgb(246,141,9)"/><text x="1162.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.36%)</title><rect x="1159" y="164" width="5" height="15" fill="rgb(241,195,2)"/><text x="1162.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.36%)</title><rect x="1159" y="180" width="5" height="15" fill="rgb(241,45,27)"/><text x="1162.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:46) (1 samples, 0.18%)</title><rect x="1162" y="196" width="2" height="15" fill="rgb(206,61,39)"/><text x="1165.00" y="206.50"></text></g><g><title>full_name (skl2onnx/common/_topology.py:84) (1 samples, 0.18%)</title><rect x="1162" y="212" width="2" height="15" fill="rgb(229,163,4)"/><text x="1165.00" y="222.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:28) (3 samples, 0.55%)</title><rect x="1159" y="84" width="7" height="15" fill="rgb(236,53,29)"/><text x="1162.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.55%)</title><rect x="1159" y="100" width="7" height="15" fill="rgb(236,70,3)"/><text x="1162.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.18%)</title><rect x="1164" y="116" width="2" height="15" fill="rgb(236,197,42)"/><text x="1167.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.18%)</title><rect x="1164" y="132" width="2" height="15" fill="rgb(250,28,13)"/><text x="1167.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.18%)</title><rect x="1164" y="148" width="2" height="15" fill="rgb(221,119,32)"/><text x="1167.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.18%)</title><rect x="1164" y="164" width="2" height="15" fill="rgb(205,213,32)"/><text x="1167.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:263) (1 samples, 0.18%)</title><rect x="1164" y="180" width="2" height="15" fill="rgb(241,163,48)"/><text x="1167.00" y="190.50"></text></g><g><title>0x7f14b99ff5f4 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1164" y="196" width="2" height="15" fill="rgb(254,160,45)"/><text x="1167.00" y="206.50"></text></g><g><title>google::protobuf::python::CMessage::BuildSubMessageFromPointer (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1164" y="212" width="2" height="15" fill="rgb(211,53,6)"/><text x="1167.00" y="222.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:18) (1 samples, 0.18%)</title><rect x="1166" y="100" width="2" height="15" fill="rgb(237,196,7)"/><text x="1169.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.18%)</title><rect x="1166" y="116" width="2" height="15" fill="rgb(212,10,53)"/><text x="1169.00" y="126.50"></text></g><g><title>0x7f148b354ff9 (?) (1 samples, 0.18%)</title><rect x="1168" y="212" width="2" height="15" fill="rgb(238,13,1)"/><text x="1171.00" y="222.50"></text></g><g><title>0x7f148b34fef6 (?) (1 samples, 0.18%)</title><rect x="1168" y="228" width="2" height="15" fill="rgb(238,41,52)"/><text x="1171.00" y="238.50"></text></g><g><title>0x7f148b344962 (?) (1 samples, 0.18%)</title><rect x="1168" y="244" width="2" height="15" fill="rgb(239,217,21)"/><text x="1171.00" y="254.50"></text></g><g><title>0x7f148b3787a7 (?) (1 samples, 0.18%)</title><rect x="1168" y="260" width="2" height="15" fill="rgb(244,20,11)"/><text x="1171.00" y="270.50"></text></g><g><title>0x7f148b378379 (?) (1 samples, 0.18%)</title><rect x="1168" y="276" width="2" height="15" fill="rgb(248,157,31)"/><text x="1171.00" y="286.50"></text></g><g><title>0x7f148b7d68b8 (?) (1 samples, 0.18%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(228,6,8)"/><text x="1171.00" y="302.50"></text></g><g><title>0x7f148b7d4c7f (?) (1 samples, 0.18%)</title><rect x="1168" y="308" width="2" height="15" fill="rgb(246,53,14)"/><text x="1171.00" y="318.50"></text></g><g><title>0x7f148b7e799c (?) (1 samples, 0.18%)</title><rect x="1168" y="324" width="2" height="15" fill="rgb(234,29,12)"/><text x="1171.00" y="334.50"></text></g><g><title>0x7f148b582dd6 (?) (1 samples, 0.18%)</title><rect x="1168" y="340" width="2" height="15" fill="rgb(231,10,38)"/><text x="1171.00" y="350.50"></text></g><g><title>0x7f148b5816eb (?) (1 samples, 0.18%)</title><rect x="1168" y="356" width="2" height="15" fill="rgb(245,221,21)"/><text x="1171.00" y="366.50"></text></g><g><title>0x7f148b386ce8 (?) (1 samples, 0.18%)</title><rect x="1168" y="372" width="2" height="15" fill="rgb(208,149,24)"/><text x="1171.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="1168" y="388" width="2" height="15" fill="rgb(238,31,40)"/><text x="1171.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1168" y="404" width="2" height="15" fill="rgb(249,17,40)"/><text x="1171.00" y="414.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="340" width="2" height="15" fill="rgb(219,220,8)"/><text x="1173.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="356" width="2" height="15" fill="rgb(223,224,17)"/><text x="1173.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="372" width="2" height="15" fill="rgb(237,55,23)"/><text x="1173.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="388" width="2" height="15" fill="rgb(243,2,54)"/><text x="1173.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="404" width="2" height="15" fill="rgb(228,180,27)"/><text x="1173.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="420" width="2" height="15" fill="rgb(218,148,20)"/><text x="1173.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="436" width="2" height="15" fill="rgb(249,121,11)"/><text x="1173.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="452" width="2" height="15" fill="rgb(253,4,29)"/><text x="1173.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="468" width="2" height="15" fill="rgb(220,82,1)"/><text x="1173.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1170" y="484" width="2" height="15" fill="rgb(206,0,25)"/><text x="1173.00" y="494.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="340" width="2" height="15" fill="rgb(237,137,51)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="356" width="2" height="15" fill="rgb(254,80,26)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="372" width="2" height="15" fill="rgb(253,48,46)"/><text x="1175.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="388" width="2" height="15" fill="rgb(226,8,21)"/><text x="1175.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="404" width="2" height="15" fill="rgb(232,211,33)"/><text x="1175.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="1172" y="420" width="2" height="15" fill="rgb(241,15,51)"/><text x="1175.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1174" y="340" width="3" height="15" fill="rgb(235,32,45)"/><text x="1177.00" y="350.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1177" y="340" width="2" height="15" fill="rgb(212,8,49)"/><text x="1180.00" y="350.50"></text></g><g><title>onnxruntime::ReshapeHelper::ReshapeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1177" y="356" width="2" height="15" fill="rgb(236,170,10)"/><text x="1180.00" y="366.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1179" y="340" width="2" height="15" fill="rgb(216,13,18)"/><text x="1182.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1179" y="356" width="2" height="15" fill="rgb(224,141,50)"/><text x="1182.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1179" y="372" width="2" height="15" fill="rgb(215,28,50)"/><text x="1182.00" y="382.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1179" y="388" width="2" height="15" fill="rgb(233,13,46)"/><text x="1182.00" y="398.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.09%)</title><rect x="1170" y="244" width="13" height="15" fill="rgb(240,50,5)"/><text x="1173.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.09%)</title><rect x="1170" y="260" width="13" height="15" fill="rgb(240,220,35)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.09%)</title><rect x="1170" y="276" width="13" height="15" fill="rgb(209,157,25)"/><text x="1173.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.09%)</title><rect x="1170" y="292" width="13" height="15" fill="rgb(245,160,23)"/><text x="1173.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.09%)</title><rect x="1170" y="308" width="13" height="15" fill="rgb(221,193,23)"/><text x="1173.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.09%)</title><rect x="1170" y="324" width="13" height="15" fill="rgb(238,48,19)"/><text x="1173.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1181" y="340" width="2" height="15" fill="rgb(239,152,0)"/><text x="1184.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1181" y="356" width="2" height="15" fill="rgb(220,135,11)"/><text x="1184.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1181" y="372" width="2" height="15" fill="rgb(243,73,6)"/><text x="1184.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1181" y="388" width="2" height="15" fill="rgb(216,60,42)"/><text x="1184.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1181" y="404" width="2" height="15" fill="rgb(215,193,35)"/><text x="1184.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1181" y="420" width="2" height="15" fill="rgb(210,51,53)"/><text x="1184.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1181" y="436" width="2" height="15" fill="rgb(249,44,47)"/><text x="1184.00" y="446.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:52) (12 samples, 2.18%)</title><rect x="1159" y="52" width="26" height="15" fill="rgb(216,218,23)"/><text x="1162.00" y="62.50">&lt;..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:51) (12 samples, 2.18%)</title><rect x="1159" y="68" width="26" height="15" fill="rgb(245,39,32)"/><text x="1162.00" y="78.50">p..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:29) (9 samples, 1.64%)</title><rect x="1166" y="84" width="19" height="15" fill="rgb(251,91,27)"/><text x="1169.00" y="94.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py:23) (8 samples, 1.45%)</title><rect x="1168" y="100" width="17" height="15" fill="rgb(253,53,53)"/><text x="1171.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 1.45%)</title><rect x="1168" y="116" width="17" height="15" fill="rgb(225,189,8)"/><text x="1171.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (8 samples, 1.45%)</title><rect x="1168" y="132" width="17" height="15" fill="rgb(247,211,19)"/><text x="1171.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (8 samples, 1.45%)</title><rect x="1168" y="148" width="17" height="15" fill="rgb(229,78,16)"/><text x="1171.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (8 samples, 1.45%)</title><rect x="1168" y="164" width="17" height="15" fill="rgb(215,99,53)"/><text x="1171.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (8 samples, 1.45%)</title><rect x="1168" y="180" width="17" height="15" fill="rgb(248,30,47)"/><text x="1171.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (8 samples, 1.45%)</title><rect x="1168" y="196" width="17" height="15" fill="rgb(250,154,43)"/><text x="1171.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.27%)</title><rect x="1170" y="212" width="15" height="15" fill="rgb(212,186,28)"/><text x="1173.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.27%)</title><rect x="1170" y="228" width="15" height="15" fill="rgb(237,194,34)"/><text x="1173.00" y="238.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(232,106,12)"/><text x="1186.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(235,76,15)"/><text x="1186.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(226,140,33)"/><text x="1186.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.18%)</title><rect x="1185" y="52" width="2" height="15" fill="rgb(216,66,0)"/><text x="1188.00" y="62.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.18%)</title><rect x="1185" y="68" width="2" height="15" fill="rgb(239,120,4)"/><text x="1188.00" y="78.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.18%)</title><rect x="1185" y="84" width="2" height="15" fill="rgb(254,138,17)"/><text x="1188.00" y="94.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.18%)</title><rect x="1185" y="100" width="2" height="15" fill="rgb(218,92,34)"/><text x="1188.00" y="110.50"></text></g><g><title>0x7f14cb696cf0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1185" y="116" width="2" height="15" fill="rgb(227,229,20)"/><text x="1188.00" y="126.50"></text></g><g><title>all (550 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(241,183,8)"/><text x="13.00" y="46.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(247,205,46)"/><text x="1190.00" y="62.50"></text></g><g><title>0x7f14cb696cf0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(232,141,20)"/><text x="1190.00" y="78.50"></text></g></g></svg>