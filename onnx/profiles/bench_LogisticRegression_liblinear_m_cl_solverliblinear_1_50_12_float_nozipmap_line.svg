<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.57%)</title><rect x="13" y="164" width="7" height="15" fill="rgb(214,209,45)"/><text x="16.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.29%)</title><rect x="16" y="180" width="4" height="15" fill="rgb(220,97,46)"/><text x="19.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="23" y="180" width="3" height="15" fill="rgb(209,181,54)"/><text x="26.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.86%)</title><rect x="37" y="196" width="10" height="15" fill="rgb(239,136,12)"/><text x="40.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 3.16%)</title><rect x="26" y="180" width="38" height="15" fill="rgb(220,136,41)"/><text x="29.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.44%)</title><rect x="47" y="196" width="17" height="15" fill="rgb(251,132,22)"/><text x="50.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (18 samples, 5.17%)</title><rect x="13" y="148" width="61" height="15" fill="rgb(226,47,40)"/><text x="16.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 4.60%)</title><rect x="20" y="164" width="54" height="15" fill="rgb(219,168,6)"/><text x="23.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.86%)</title><rect x="64" y="180" width="10" height="15" fill="rgb(227,109,6)"/><text x="67.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.29%)</title><rect x="74" y="148" width="3" height="15" fill="rgb(211,38,17)"/><text x="77.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:934) (1 samples, 0.29%)</title><rect x="87" y="196" width="4" height="15" fill="rgb(229,128,21)"/><text x="90.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="94" y="212" width="4" height="15" fill="rgb(205,150,29)"/><text x="97.00" y="222.50"></text></g><g><title>0x7f736bd1412b (libc-2.29.so) (1 samples, 0.29%)</title><rect x="108" y="228" width="3" height="15" fill="rgb(241,118,0)"/><text x="111.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.57%)</title><rect x="111" y="228" width="7" height="15" fill="rgb(215,161,31)"/><text x="114.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 2.01%)</title><rect x="98" y="212" width="23" height="15" fill="rgb(234,213,21)"/><text x="101.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="118" y="228" width="3" height="15" fill="rgb(237,65,51)"/><text x="121.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (13 samples, 3.74%)</title><rect x="84" y="180" width="44" height="15" fill="rgb(214,9,6)"/><text x="87.00" y="190.50">deci..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.16%)</title><rect x="91" y="196" width="37" height="15" fill="rgb(231,215,9)"/><text x="94.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.57%)</title><rect x="121" y="212" width="7" height="15" fill="rgb(242,173,38)"/><text x="124.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="125" y="228" width="3" height="15" fill="rgb(206,208,13)"/><text x="128.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.29%)</title><rect x="135" y="196" width="3" height="15" fill="rgb(210,211,34)"/><text x="138.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.29%)</title><rect x="138" y="196" width="4" height="15" fill="rgb(228,113,41)"/><text x="141.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.57%)</title><rect x="142" y="196" width="7" height="15" fill="rgb(216,92,8)"/><text x="145.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:474) (1 samples, 0.29%)</title><rect x="162" y="212" width="3" height="15" fill="rgb(213,104,12)"/><text x="165.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 0.86%)</title><rect x="165" y="212" width="11" height="15" fill="rgb(235,39,15)"/><text x="168.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.29%)</title><rect x="176" y="212" width="3" height="15" fill="rgb(209,186,24)"/><text x="179.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.29%)</title><rect x="179" y="212" width="3" height="15" fill="rgb(250,166,43)"/><text x="182.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (12 samples, 3.45%)</title><rect x="149" y="196" width="40" height="15" fill="rgb(250,119,9)"/><text x="152.00" y="206.50">che..</text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.57%)</title><rect x="182" y="212" width="7" height="15" fill="rgb(253,161,18)"/><text x="185.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.29%)</title><rect x="189" y="212" width="4" height="15" fill="rgb(218,153,43)"/><text x="192.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 1.15%)</title><rect x="199" y="228" width="14" height="15" fill="rgb(232,62,39)"/><text x="202.00" y="238.50"></text></g><g><title>0x7f736bd09e9d (libc-2.29.so) (1 samples, 0.29%)</title><rect x="210" y="244" width="3" height="15" fill="rgb(232,174,26)"/><text x="213.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.29%)</title><rect x="213" y="228" width="3" height="15" fill="rgb(226,27,43)"/><text x="216.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (2 samples, 0.57%)</title><rect x="216" y="228" width="7" height="15" fill="rgb(228,92,23)"/><text x="219.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (11 samples, 3.16%)</title><rect x="189" y="196" width="38" height="15" fill="rgb(254,15,6)"/><text x="192.00" y="206.50">che..</text></g><g><title>simplefilter (warnings.py:179) (10 samples, 2.87%)</title><rect x="193" y="212" width="34" height="15" fill="rgb(235,67,29)"/><text x="196.00" y="222.50">si..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.29%)</title><rect x="223" y="228" width="4" height="15" fill="rgb(214,216,25)"/><text x="226.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.29%)</title><rect x="227" y="196" width="3" height="15" fill="rgb(216,141,14)"/><text x="230.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.29%)</title><rect x="227" y="212" width="3" height="15" fill="rgb(213,218,8)"/><text x="230.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1743) (1 samples, 0.29%)</title><rect x="227" y="228" width="3" height="15" fill="rgb(218,55,5)"/><text x="230.00" y="238.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.29%)</title><rect x="227" y="244" width="3" height="15" fill="rgb(221,0,8)"/><text x="230.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.86%)</title><rect x="230" y="196" width="10" height="15" fill="rgb(213,189,22)"/><text x="233.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.29%)</title><rect x="240" y="196" width="3" height="15" fill="rgb(238,110,44)"/><text x="243.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.29%)</title><rect x="243" y="196" width="4" height="15" fill="rgb(229,110,34)"/><text x="246.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.57%)</title><rect x="247" y="212" width="7" height="15" fill="rgb(205,124,53)"/><text x="250.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.29%)</title><rect x="250" y="228" width="4" height="15" fill="rgb(233,34,7)"/><text x="253.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 0.86%)</title><rect x="247" y="196" width="10" height="15" fill="rgb(252,76,43)"/><text x="250.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.29%)</title><rect x="254" y="212" width="3" height="15" fill="rgb(242,228,21)"/><text x="257.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.29%)</title><rect x="267" y="228" width="4" height="15" fill="rgb(209,41,0)"/><text x="270.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.44%)</title><rect x="257" y="196" width="17" height="15" fill="rgb(225,115,29)"/><text x="260.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.44%)</title><rect x="257" y="212" width="17" height="15" fill="rgb(219,50,37)"/><text x="260.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="271" y="228" width="3" height="15" fill="rgb(253,185,44)"/><text x="274.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 1.15%)</title><rect x="274" y="212" width="14" height="15" fill="rgb(236,202,30)"/><text x="277.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.57%)</title><rect x="288" y="212" width="6" height="15" fill="rgb(252,220,6)"/><text x="291.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.29%)</title><rect x="294" y="212" width="4" height="15" fill="rgb(237,16,53)"/><text x="297.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (13 samples, 3.74%)</title><rect x="274" y="196" width="44" height="15" fill="rgb(230,129,20)"/><text x="277.00" y="206.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 1.72%)</title><rect x="298" y="212" width="20" height="15" fill="rgb(232,118,2)"/><text x="301.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.44%)</title><rect x="301" y="228" width="17" height="15" fill="rgb(224,145,30)"/><text x="304.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.57%)</title><rect x="311" y="244" width="7" height="15" fill="rgb(208,144,26)"/><text x="314.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.29%)</title><rect x="318" y="196" width="3" height="15" fill="rgb(232,91,32)"/><text x="321.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (58 samples, 16.67%)</title><rect x="128" y="180" width="197" height="15" fill="rgb(224,32,22)"/><text x="131.00" y="190.50">decision_function (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:588) (1 samples, 0.29%)</title><rect x="321" y="196" width="4" height="15" fill="rgb(220,227,20)"/><text x="324.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.29%)</title><rect x="325" y="180" width="3" height="15" fill="rgb(227,16,11)"/><text x="328.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.29%)</title><rect x="325" y="196" width="3" height="15" fill="rgb(207,93,21)"/><text x="328.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.29%)</title><rect x="325" y="212" width="3" height="15" fill="rgb(240,124,40)"/><text x="328.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="325" y="228" width="3" height="15" fill="rgb(208,94,23)"/><text x="328.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.29%)</title><rect x="325" y="244" width="3" height="15" fill="rgb(235,47,13)"/><text x="328.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="338" y="212" width="4" height="15" fill="rgb(225,19,19)"/><text x="341.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:712) (1 samples, 0.29%)</title><rect x="338" y="228" width="4" height="15" fill="rgb(211,72,45)"/><text x="341.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.29%)</title><rect x="342" y="228" width="3" height="15" fill="rgb(252,8,35)"/><text x="345.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.29%)</title><rect x="342" y="244" width="3" height="15" fill="rgb(222,204,21)"/><text x="345.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.29%)</title><rect x="342" y="260" width="3" height="15" fill="rgb(230,43,47)"/><text x="345.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1443) (1 samples, 0.29%)</title><rect x="345" y="292" width="4" height="15" fill="rgb(206,107,16)"/><text x="348.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.57%)</title><rect x="345" y="260" width="7" height="15" fill="rgb(243,191,40)"/><text x="348.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.57%)</title><rect x="345" y="276" width="7" height="15" fill="rgb(229,76,14)"/><text x="348.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1474) (1 samples, 0.29%)</title><rect x="349" y="292" width="3" height="15" fill="rgb(232,21,1)"/><text x="352.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.29%)</title><rect x="352" y="276" width="3" height="15" fill="rgb(244,22,5)"/><text x="355.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.57%)</title><rect x="352" y="260" width="7" height="15" fill="rgb(253,70,54)"/><text x="355.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.29%)</title><rect x="355" y="276" width="4" height="15" fill="rgb(216,56,37)"/><text x="358.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2169) (1 samples, 0.29%)</title><rect x="355" y="292" width="4" height="15" fill="rgb(254,4,27)"/><text x="358.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.29%)</title><rect x="359" y="260" width="3" height="15" fill="rgb(227,48,12)"/><text x="362.00" y="270.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1221) (1 samples, 0.29%)</title><rect x="359" y="276" width="3" height="15" fill="rgb(225,209,23)"/><text x="362.00" y="286.50"></text></g><g><title>array_add (number.c:330) (10 samples, 2.87%)</title><rect x="332" y="196" width="34" height="15" fill="rgb(212,170,11)"/><text x="335.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.01%)</title><rect x="342" y="212" width="24" height="15" fill="rgb(213,48,31)"/><text x="345.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.72%)</title><rect x="345" y="228" width="21" height="15" fill="rgb(216,61,38)"/><text x="348.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.72%)</title><rect x="345" y="244" width="21" height="15" fill="rgb(218,32,54)"/><text x="348.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.29%)</title><rect x="362" y="260" width="4" height="15" fill="rgb(231,206,19)"/><text x="365.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.29%)</title><rect x="362" y="276" width="4" height="15" fill="rgb(247,130,7)"/><text x="365.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2578) (1 samples, 0.29%)</title><rect x="369" y="244" width="3" height="15" fill="rgb(242,157,26)"/><text x="372.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.29%)</title><rect x="372" y="244" width="4" height="15" fill="rgb(240,164,30)"/><text x="375.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.29%)</title><rect x="372" y="260" width="4" height="15" fill="rgb(243,145,12)"/><text x="375.00" y="270.50"></text></g><g><title>0x7f736bd1414a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="372" y="276" width="4" height="15" fill="rgb(235,57,36)"/><text x="375.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.29%)</title><rect x="376" y="276" width="3" height="15" fill="rgb(225,118,11)"/><text x="379.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.29%)</title><rect x="376" y="292" width="3" height="15" fill="rgb(227,99,54)"/><text x="379.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="376" y="308" width="3" height="15" fill="rgb(224,24,33)"/><text x="379.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="376" y="324" width="3" height="15" fill="rgb(238,131,47)"/><text x="379.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.29%)</title><rect x="376" y="340" width="3" height="15" fill="rgb(214,36,3)"/><text x="379.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.29%)</title><rect x="379" y="308" width="3" height="15" fill="rgb(254,143,32)"/><text x="382.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.29%)</title><rect x="379" y="324" width="3" height="15" fill="rgb(223,11,22)"/><text x="382.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.29%)</title><rect x="382" y="308" width="4" height="15" fill="rgb(233,12,43)"/><text x="385.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.29%)</title><rect x="386" y="308" width="3" height="15" fill="rgb(212,111,46)"/><text x="389.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.29%)</title><rect x="386" y="324" width="3" height="15" fill="rgb(244,223,22)"/><text x="389.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 1.44%)</title><rect x="376" y="244" width="17" height="15" fill="rgb(221,28,10)"/><text x="379.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (5 samples, 1.44%)</title><rect x="376" y="260" width="17" height="15" fill="rgb(224,39,21)"/><text x="379.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 1.15%)</title><rect x="379" y="276" width="14" height="15" fill="rgb(237,103,40)"/><text x="382.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 1.15%)</title><rect x="379" y="292" width="14" height="15" fill="rgb(209,66,8)"/><text x="382.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.29%)</title><rect x="389" y="308" width="4" height="15" fill="rgb(207,7,6)"/><text x="392.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4057) (1 samples, 0.29%)</title><rect x="389" y="324" width="4" height="15" fill="rgb(230,148,20)"/><text x="392.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.29%)</title><rect x="393" y="244" width="3" height="15" fill="rgb(237,225,7)"/><text x="396.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.29%)</title><rect x="393" y="260" width="3" height="15" fill="rgb(241,124,31)"/><text x="396.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1688) (1 samples, 0.29%)</title><rect x="393" y="276" width="3" height="15" fill="rgb(230,202,39)"/><text x="396.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2971) (1 samples, 0.29%)</title><rect x="396" y="244" width="3" height="15" fill="rgb(216,68,26)"/><text x="399.00" y="254.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.29%)</title><rect x="396" y="260" width="3" height="15" fill="rgb(236,8,13)"/><text x="399.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2982) (1 samples, 0.29%)</title><rect x="399" y="244" width="4" height="15" fill="rgb(240,21,34)"/><text x="402.00" y="254.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.29%)</title><rect x="399" y="260" width="4" height="15" fill="rgb(241,162,23)"/><text x="402.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.29%)</title><rect x="403" y="244" width="3" height="15" fill="rgb(218,1,28)"/><text x="406.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.29%)</title><rect x="403" y="260" width="3" height="15" fill="rgb(245,75,29)"/><text x="406.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.29%)</title><rect x="403" y="276" width="3" height="15" fill="rgb(221,82,9)"/><text x="406.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="403" y="292" width="3" height="15" fill="rgb(248,59,38)"/><text x="406.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3010) (1 samples, 0.29%)</title><rect x="406" y="244" width="4" height="15" fill="rgb(205,203,49)"/><text x="409.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (14 samples, 4.02%)</title><rect x="366" y="196" width="47" height="15" fill="rgb(241,6,2)"/><text x="369.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 3.74%)</title><rect x="369" y="212" width="44" height="15" fill="rgb(254,188,3)"/><text x="372.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (13 samples, 3.74%)</title><rect x="369" y="228" width="44" height="15" fill="rgb(215,143,4)"/><text x="372.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.29%)</title><rect x="410" y="244" width="3" height="15" fill="rgb(233,166,10)"/><text x="413.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.29%)</title><rect x="410" y="260" width="3" height="15" fill="rgb(245,184,31)"/><text x="413.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.29%)</title><rect x="410" y="276" width="3" height="15" fill="rgb(209,140,37)"/><text x="413.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.29%)</title><rect x="410" y="292" width="3" height="15" fill="rgb(231,186,1)"/><text x="413.00" y="302.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (27 samples, 7.76%)</title><rect x="328" y="180" width="92" height="15" fill="rgb(243,78,20)"/><text x="331.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.57%)</title><rect x="413" y="196" width="7" height="15" fill="rgb(246,90,8)"/><text x="416.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.29%)</title><rect x="416" y="212" width="4" height="15" fill="rgb(220,33,0)"/><text x="419.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (101 samples, 29.02%)</title><rect x="84" y="164" width="343" height="15" fill="rgb(222,180,9)"/><text x="87.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base...</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.57%)</title><rect x="420" y="180" width="7" height="15" fill="rgb(205,34,36)"/><text x="423.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.29%)</title><rect x="423" y="196" width="4" height="15" fill="rgb(242,208,6)"/><text x="426.00" y="206.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:333) (1 samples, 0.29%)</title><rect x="427" y="276" width="3" height="15" fill="rgb(216,95,50)"/><text x="430.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.57%)</title><rect x="427" y="212" width="6" height="15" fill="rgb(249,140,43)"/><text x="430.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.57%)</title><rect x="427" y="228" width="6" height="15" fill="rgb(253,61,42)"/><text x="430.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.57%)</title><rect x="427" y="244" width="6" height="15" fill="rgb(248,144,25)"/><text x="430.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.57%)</title><rect x="427" y="260" width="6" height="15" fill="rgb(250,52,46)"/><text x="430.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.29%)</title><rect x="430" y="276" width="3" height="15" fill="rgb(238,180,4)"/><text x="433.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h:100) (1 samples, 0.29%)</title><rect x="430" y="292" width="3" height="15" fill="rgb(239,5,6)"/><text x="433.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (3 samples, 0.86%)</title><rect x="427" y="164" width="10" height="15" fill="rgb(238,219,20)"/><text x="430.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.86%)</title><rect x="427" y="180" width="10" height="15" fill="rgb(229,96,50)"/><text x="430.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.86%)</title><rect x="427" y="196" width="10" height="15" fill="rgb(209,115,36)"/><text x="430.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.29%)</title><rect x="433" y="212" width="4" height="15" fill="rgb(252,90,7)"/><text x="436.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.29%)</title><rect x="433" y="228" width="4" height="15" fill="rgb(209,163,45)"/><text x="436.00" y="238.50"></text></g><g><title>0x7f7356fdc9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="433" y="244" width="4" height="15" fill="rgb(209,189,18)"/><text x="436.00" y="254.50"></text></g><g><title>0x7f7356ffd25c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="433" y="260" width="4" height="15" fill="rgb(206,162,14)"/><text x="436.00" y="270.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.57%)</title><rect x="457" y="180" width="7" height="15" fill="rgb(221,137,7)"/><text x="460.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.29%)</title><rect x="460" y="196" width="4" height="15" fill="rgb(205,191,51)"/><text x="463.00" y="206.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.29%)</title><rect x="464" y="180" width="3" height="15" fill="rgb(229,7,38)"/><text x="467.00" y="190.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:63) (1 samples, 0.29%)</title><rect x="467" y="308" width="4" height="15" fill="rgb(205,176,19)"/><text x="470.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.29%)</title><rect x="471" y="308" width="3" height="15" fill="rgb(240,229,31)"/><text x="474.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.29%)</title><rect x="474" y="308" width="3" height="15" fill="rgb(219,116,27)"/><text x="477.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="474" y="324" width="3" height="15" fill="rgb(220,22,5)"/><text x="477.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (8 samples, 2.30%)</title><rect x="467" y="228" width="27" height="15" fill="rgb(220,110,45)"/><text x="470.00" y="238.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (8 samples, 2.30%)</title><rect x="467" y="244" width="27" height="15" fill="rgb(242,214,5)"/><text x="470.00" y="254.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (8 samples, 2.30%)</title><rect x="467" y="260" width="27" height="15" fill="rgb(217,44,12)"/><text x="470.00" y="270.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (8 samples, 2.30%)</title><rect x="467" y="276" width="27" height="15" fill="rgb(246,5,17)"/><text x="470.00" y="286.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (8 samples, 2.30%)</title><rect x="467" y="292" width="27" height="15" fill="rgb(215,156,11)"/><text x="470.00" y="302.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h:80) (5 samples, 1.44%)</title><rect x="477" y="308" width="17" height="15" fill="rgb(227,188,6)"/><text x="480.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.29%)</title><rect x="494" y="260" width="4" height="15" fill="rgb(242,119,51)"/><text x="497.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.29%)</title><rect x="494" y="276" width="4" height="15" fill="rgb(249,65,10)"/><text x="497.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.29%)</title><rect x="494" y="292" width="4" height="15" fill="rgb(249,37,47)"/><text x="497.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.29%)</title><rect x="494" y="308" width="4" height="15" fill="rgb(207,157,22)"/><text x="497.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.29%)</title><rect x="498" y="292" width="3" height="15" fill="rgb(232,205,18)"/><text x="501.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:237) (1 samples, 0.29%)</title><rect x="501" y="292" width="4" height="15" fill="rgb(254,50,41)"/><text x="504.00" y="302.50"></text></g><g><title>0x7f736bd1414a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="501" y="308" width="4" height="15" fill="rgb(217,172,39)"/><text x="504.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.86%)</title><rect x="498" y="276" width="10" height="15" fill="rgb(228,173,43)"/><text x="501.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.29%)</title><rect x="505" y="292" width="3" height="15" fill="rgb(245,18,0)"/><text x="508.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.29%)</title><rect x="505" y="308" width="3" height="15" fill="rgb(251,151,18)"/><text x="508.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:568) (1 samples, 0.29%)</title><rect x="508" y="276" width="3" height="15" fill="rgb(216,0,7)"/><text x="511.00" y="286.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.29%)</title><rect x="508" y="292" width="3" height="15" fill="rgb(249,87,53)"/><text x="511.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 4.02%)</title><rect x="467" y="180" width="48" height="15" fill="rgb(229,39,26)"/><text x="470.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 4.02%)</title><rect x="467" y="196" width="48" height="15" fill="rgb(231,53,40)"/><text x="470.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.02%)</title><rect x="467" y="212" width="48" height="15" fill="rgb(226,27,29)"/><text x="470.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.72%)</title><rect x="494" y="228" width="21" height="15" fill="rgb(252,118,2)"/><text x="497.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.72%)</title><rect x="494" y="244" width="21" height="15" fill="rgb(229,46,27)"/><text x="497.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.44%)</title><rect x="498" y="260" width="17" height="15" fill="rgb(241,130,44)"/><text x="501.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.29%)</title><rect x="511" y="276" width="4" height="15" fill="rgb(230,197,14)"/><text x="514.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.29%)</title><rect x="511" y="292" width="4" height="15" fill="rgb(254,211,31)"/><text x="514.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="515" y="180" width="3" height="15" fill="rgb(218,201,24)"/><text x="518.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="515" y="196" width="3" height="15" fill="rgb(208,133,7)"/><text x="518.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="515" y="212" width="3" height="15" fill="rgb(206,3,26)"/><text x="518.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.29%)</title><rect x="515" y="228" width="3" height="15" fill="rgb(244,154,31)"/><text x="518.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2002) (1 samples, 0.29%)</title><rect x="518" y="212" width="4" height="15" fill="rgb(221,149,50)"/><text x="521.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.57%)</title><rect x="518" y="196" width="7" height="15" fill="rgb(205,212,46)"/><text x="521.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.29%)</title><rect x="522" y="212" width="3" height="15" fill="rgb(240,137,39)"/><text x="525.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1706) (1 samples, 0.29%)</title><rect x="522" y="228" width="3" height="15" fill="rgb(240,65,19)"/><text x="525.00" y="238.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:681) (1 samples, 0.29%)</title><rect x="522" y="244" width="3" height="15" fill="rgb(233,50,35)"/><text x="525.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.29%)</title><rect x="525" y="212" width="3" height="15" fill="rgb(208,186,47)"/><text x="528.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.29%)</title><rect x="528" y="244" width="4" height="15" fill="rgb(250,113,4)"/><text x="531.00" y="254.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2158) (1 samples, 0.29%)</title><rect x="528" y="260" width="4" height="15" fill="rgb(223,110,1)"/><text x="531.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.57%)</title><rect x="528" y="228" width="7" height="15" fill="rgb(243,64,2)"/><text x="531.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.29%)</title><rect x="532" y="244" width="3" height="15" fill="rgb(252,115,47)"/><text x="535.00" y="254.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.29%)</title><rect x="532" y="260" width="3" height="15" fill="rgb(242,31,38)"/><text x="535.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.29%)</title><rect x="532" y="276" width="3" height="15" fill="rgb(213,142,11)"/><text x="535.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.29%)</title><rect x="535" y="244" width="3" height="15" fill="rgb(207,224,39)"/><text x="538.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.57%)</title><rect x="535" y="228" width="7" height="15" fill="rgb(251,54,46)"/><text x="538.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.29%)</title><rect x="538" y="244" width="4" height="15" fill="rgb(215,15,54)"/><text x="541.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.29%)</title><rect x="538" y="260" width="4" height="15" fill="rgb(208,96,20)"/><text x="541.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:38) (158 samples, 45.40%)</title><rect x="10" y="52" width="535" height="15" fill="rgb(211,135,47)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:37) (158 samples, 45.40%)</title><rect x="10" y="68" width="535" height="15" fill="rgb(237,200,36)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:29) (158 samples, 45.40%)</title><rect x="10" y="84" width="535" height="15" fill="rgb(211,42,1)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:23) (158 samples, 45.40%)</title><rect x="10" y="100" width="535" height="15" fill="rgb(214,79,34)"/><text x="13.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (157 samples, 45.11%)</title><rect x="13" y="116" width="532" height="15" fill="rgb(225,4,41)"/><text x="16.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (157 samples, 45.11%)</title><rect x="13" y="132" width="532" height="15" fill="rgb(207,42,35)"/><text x="16.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (138 samples, 39.66%)</title><rect x="77" y="148" width="468" height="15" fill="rgb(219,65,35)"/><text x="80.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (32 samples, 9.20%)</title><rect x="437" y="164" width="108" height="15" fill="rgb(237,228,50)"/><text x="440.00" y="174.50">_predict_prob..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.30%)</title><rect x="518" y="180" width="27" height="15" fill="rgb(205,139,8)"/><text x="521.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.72%)</title><rect x="525" y="196" width="20" height="15" fill="rgb(254,115,38)"/><text x="528.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.44%)</title><rect x="528" y="212" width="17" height="15" fill="rgb(240,131,40)"/><text x="531.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.29%)</title><rect x="542" y="228" width="3" height="15" fill="rgb(231,6,23)"/><text x="545.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.29%)</title><rect x="542" y="244" width="3" height="15" fill="rgb(235,88,34)"/><text x="545.00" y="254.50"></text></g><g><title>0x7f736bcf3902 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="542" y="260" width="3" height="15" fill="rgb(247,155,42)"/><text x="545.00" y="270.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:1) (1 samples, 0.29%)</title><rect x="545" y="148" width="4" height="15" fill="rgb(228,208,31)"/><text x="548.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="545" y="164" width="4" height="15" fill="rgb(247,152,48)"/><text x="548.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="545" y="180" width="4" height="15" fill="rgb(231,206,39)"/><text x="548.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="545" y="196" width="4" height="15" fill="rgb(239,210,19)"/><text x="548.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="545" y="212" width="4" height="15" fill="rgb(246,48,18)"/><text x="548.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="545" y="228" width="4" height="15" fill="rgb(207,40,1)"/><text x="548.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.29%)</title><rect x="545" y="244" width="4" height="15" fill="rgb(220,19,22)"/><text x="548.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="545" y="260" width="4" height="15" fill="rgb(224,88,9)"/><text x="548.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="545" y="276" width="4" height="15" fill="rgb(234,136,43)"/><text x="548.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="545" y="292" width="4" height="15" fill="rgb(217,48,30)"/><text x="548.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="545" y="308" width="4" height="15" fill="rgb(244,10,54)"/><text x="548.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="545" y="324" width="4" height="15" fill="rgb(215,151,52)"/><text x="548.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="545" y="340" width="4" height="15" fill="rgb(251,179,24)"/><text x="548.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="545" y="356" width="4" height="15" fill="rgb(217,89,0)"/><text x="548.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.29%)</title><rect x="545" y="372" width="4" height="15" fill="rgb(206,126,6)"/><text x="548.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="545" y="388" width="4" height="15" fill="rgb(207,163,53)"/><text x="548.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="545" y="404" width="4" height="15" fill="rgb(241,113,28)"/><text x="548.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="545" y="420" width="4" height="15" fill="rgb(234,193,16)"/><text x="548.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="545" y="436" width="4" height="15" fill="rgb(245,138,54)"/><text x="548.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="545" y="452" width="4" height="15" fill="rgb(210,191,41)"/><text x="548.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="545" y="468" width="4" height="15" fill="rgb(224,47,14)"/><text x="548.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="545" y="484" width="4" height="15" fill="rgb(217,14,42)"/><text x="548.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:1418) (1 samples, 0.29%)</title><rect x="545" y="500" width="4" height="15" fill="rgb(246,202,32)"/><text x="548.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.29%)</title><rect x="545" y="516" width="4" height="15" fill="rgb(249,121,46)"/><text x="548.00" y="526.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.29%)</title><rect x="549" y="980" width="3" height="15" fill="rgb(247,151,10)"/><text x="552.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.29%)</title><rect x="549" y="996" width="3" height="15" fill="rgb(230,14,1)"/><text x="552.00" y="1006.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.57%)</title><rect x="549" y="900" width="6" height="15" fill="rgb(223,186,44)"/><text x="552.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.57%)</title><rect x="549" y="916" width="6" height="15" fill="rgb(216,83,3)"/><text x="552.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.57%)</title><rect x="549" y="932" width="6" height="15" fill="rgb(246,198,3)"/><text x="552.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.57%)</title><rect x="549" y="948" width="6" height="15" fill="rgb(236,227,53)"/><text x="552.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.57%)</title><rect x="549" y="964" width="6" height="15" fill="rgb(237,192,23)"/><text x="552.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.29%)</title><rect x="552" y="980" width="3" height="15" fill="rgb(228,178,21)"/><text x="555.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.29%)</title><rect x="552" y="996" width="3" height="15" fill="rgb(217,40,42)"/><text x="555.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:152) (1 samples, 0.29%)</title><rect x="552" y="1012" width="3" height="15" fill="rgb(241,22,50)"/><text x="555.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.86%)</title><rect x="549" y="852" width="10" height="15" fill="rgb(237,162,40)"/><text x="552.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.86%)</title><rect x="549" y="868" width="10" height="15" fill="rgb(206,45,43)"/><text x="552.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.86%)</title><rect x="549" y="884" width="10" height="15" fill="rgb(235,154,50)"/><text x="552.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.29%)</title><rect x="555" y="900" width="4" height="15" fill="rgb(229,66,40)"/><text x="558.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:709) (1 samples, 0.29%)</title><rect x="555" y="916" width="4" height="15" fill="rgb(238,184,40)"/><text x="558.00" y="926.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="559" y="852" width="3" height="15" fill="rgb(244,10,16)"/><text x="562.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="559" y="868" width="3" height="15" fill="rgb(241,24,13)"/><text x="562.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.29%)</title><rect x="559" y="884" width="3" height="15" fill="rgb(251,109,3)"/><text x="562.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.29%)</title><rect x="559" y="900" width="3" height="15" fill="rgb(254,38,2)"/><text x="562.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.29%)</title><rect x="559" y="916" width="3" height="15" fill="rgb(205,29,32)"/><text x="562.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.29%)</title><rect x="559" y="932" width="3" height="15" fill="rgb(253,58,20)"/><text x="562.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.29%)</title><rect x="559" y="948" width="3" height="15" fill="rgb(217,192,43)"/><text x="562.00" y="958.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.29%)</title><rect x="562" y="884" width="4" height="15" fill="rgb(247,123,8)"/><text x="565.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.29%)</title><rect x="562" y="900" width="4" height="15" fill="rgb(235,147,3)"/><text x="565.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="562" y="916" width="4" height="15" fill="rgb(220,227,28)"/><text x="565.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="562" y="932" width="4" height="15" fill="rgb(240,43,39)"/><text x="565.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.29%)</title><rect x="562" y="948" width="4" height="15" fill="rgb(223,136,25)"/><text x="565.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.29%)</title><rect x="562" y="964" width="4" height="15" fill="rgb(225,227,4)"/><text x="565.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.29%)</title><rect x="562" y="980" width="4" height="15" fill="rgb(251,33,11)"/><text x="565.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="562" y="996" width="4" height="15" fill="rgb(218,40,45)"/><text x="565.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="562" y="1012" width="4" height="15" fill="rgb(251,16,49)"/><text x="565.00" y="1022.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="562" y="1028" width="4" height="15" fill="rgb(238,129,22)"/><text x="565.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="549" y="596" width="20" height="15" fill="rgb(245,118,39)"/><text x="552.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.72%)</title><rect x="549" y="612" width="20" height="15" fill="rgb(219,178,7)"/><text x="552.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="549" y="628" width="20" height="15" fill="rgb(210,144,24)"/><text x="552.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="549" y="644" width="20" height="15" fill="rgb(207,179,11)"/><text x="552.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.72%)</title><rect x="549" y="660" width="20" height="15" fill="rgb(238,104,20)"/><text x="552.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.72%)</title><rect x="549" y="676" width="20" height="15" fill="rgb(206,136,13)"/><text x="552.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.72%)</title><rect x="549" y="692" width="20" height="15" fill="rgb(253,167,23)"/><text x="552.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="549" y="708" width="20" height="15" fill="rgb(229,24,10)"/><text x="552.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.72%)</title><rect x="549" y="724" width="20" height="15" fill="rgb(245,95,5)"/><text x="552.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="549" y="740" width="20" height="15" fill="rgb(250,90,6)"/><text x="552.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.72%)</title><rect x="549" y="756" width="20" height="15" fill="rgb(222,54,28)"/><text x="552.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.72%)</title><rect x="549" y="772" width="20" height="15" fill="rgb(210,133,25)"/><text x="552.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.72%)</title><rect x="549" y="788" width="20" height="15" fill="rgb(227,56,37)"/><text x="552.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="549" y="804" width="20" height="15" fill="rgb(220,26,1)"/><text x="552.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.72%)</title><rect x="549" y="820" width="20" height="15" fill="rgb(214,30,0)"/><text x="552.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.72%)</title><rect x="549" y="836" width="20" height="15" fill="rgb(232,163,33)"/><text x="552.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.57%)</title><rect x="562" y="852" width="7" height="15" fill="rgb(231,179,47)"/><text x="565.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.57%)</title><rect x="562" y="868" width="7" height="15" fill="rgb(243,217,11)"/><text x="565.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.29%)</title><rect x="566" y="884" width="3" height="15" fill="rgb(205,67,43)"/><text x="569.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.29%)</title><rect x="566" y="900" width="3" height="15" fill="rgb(249,173,20)"/><text x="569.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (7 samples, 2.01%)</title><rect x="549" y="148" width="23" height="15" fill="rgb(253,84,39)"/><text x="552.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="549" y="164" width="23" height="15" fill="rgb(237,83,38)"/><text x="552.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.01%)</title><rect x="549" y="180" width="23" height="15" fill="rgb(244,167,22)"/><text x="552.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="549" y="196" width="23" height="15" fill="rgb(228,162,21)"/><text x="552.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="549" y="212" width="23" height="15" fill="rgb(222,33,51)"/><text x="552.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.01%)</title><rect x="549" y="228" width="23" height="15" fill="rgb(208,73,13)"/><text x="552.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.01%)</title><rect x="549" y="244" width="23" height="15" fill="rgb(221,71,37)"/><text x="552.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.01%)</title><rect x="549" y="260" width="23" height="15" fill="rgb(250,205,20)"/><text x="552.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="549" y="276" width="23" height="15" fill="rgb(252,77,30)"/><text x="552.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 2.01%)</title><rect x="549" y="292" width="23" height="15" fill="rgb(227,169,47)"/><text x="552.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="549" y="308" width="23" height="15" fill="rgb(249,221,16)"/><text x="552.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.01%)</title><rect x="549" y="324" width="23" height="15" fill="rgb(206,37,38)"/><text x="552.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.01%)</title><rect x="549" y="340" width="23" height="15" fill="rgb(251,221,5)"/><text x="552.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.01%)</title><rect x="549" y="356" width="23" height="15" fill="rgb(207,0,29)"/><text x="552.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="549" y="372" width="23" height="15" fill="rgb(219,50,25)"/><text x="552.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 2.01%)</title><rect x="549" y="388" width="23" height="15" fill="rgb(233,165,32)"/><text x="552.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="549" y="404" width="23" height="15" fill="rgb(237,215,40)"/><text x="552.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.01%)</title><rect x="549" y="420" width="23" height="15" fill="rgb(232,63,10)"/><text x="552.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.01%)</title><rect x="549" y="436" width="23" height="15" fill="rgb(223,210,37)"/><text x="552.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.01%)</title><rect x="549" y="452" width="23" height="15" fill="rgb(221,15,39)"/><text x="552.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="549" y="468" width="23" height="15" fill="rgb(225,78,30)"/><text x="552.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 2.01%)</title><rect x="549" y="484" width="23" height="15" fill="rgb(247,114,37)"/><text x="552.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="549" y="500" width="23" height="15" fill="rgb(223,24,46)"/><text x="552.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.01%)</title><rect x="549" y="516" width="23" height="15" fill="rgb(252,72,40)"/><text x="552.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.01%)</title><rect x="549" y="532" width="23" height="15" fill="rgb(243,109,14)"/><text x="552.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.01%)</title><rect x="549" y="548" width="23" height="15" fill="rgb(211,76,1)"/><text x="552.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="549" y="564" width="23" height="15" fill="rgb(250,156,28)"/><text x="552.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.01%)</title><rect x="549" y="580" width="23" height="15" fill="rgb(213,101,48)"/><text x="552.00" y="590.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="569" y="596" width="3" height="15" fill="rgb(225,133,5)"/><text x="572.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="569" y="612" width="3" height="15" fill="rgb(208,149,25)"/><text x="572.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="569" y="628" width="3" height="15" fill="rgb(232,165,33)"/><text x="572.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="569" y="644" width="3" height="15" fill="rgb(234,165,46)"/><text x="572.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.29%)</title><rect x="569" y="660" width="3" height="15" fill="rgb(233,136,51)"/><text x="572.00" y="670.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.29%)</title><rect x="569" y="676" width="3" height="15" fill="rgb(248,168,28)"/><text x="572.00" y="686.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.29%)</title><rect x="569" y="692" width="3" height="15" fill="rgb(225,33,42)"/><text x="572.00" y="702.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.29%)</title><rect x="569" y="708" width="3" height="15" fill="rgb(221,118,18)"/><text x="572.00" y="718.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.29%)</title><rect x="569" y="724" width="3" height="15" fill="rgb(233,100,31)"/><text x="572.00" y="734.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:297) (1 samples, 0.29%)</title><rect x="569" y="740" width="3" height="15" fill="rgb(249,30,5)"/><text x="572.00" y="750.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;:64) (1 samples, 0.29%)</title><rect x="569" y="756" width="3" height="15" fill="rgb(226,88,50)"/><text x="572.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.29%)</title><rect x="572" y="484" width="4" height="15" fill="rgb(220,45,51)"/><text x="575.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="572" y="500" width="4" height="15" fill="rgb(214,188,11)"/><text x="575.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="572" y="516" width="4" height="15" fill="rgb(246,120,16)"/><text x="575.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="572" y="532" width="4" height="15" fill="rgb(219,212,27)"/><text x="575.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="572" y="548" width="4" height="15" fill="rgb(218,83,18)"/><text x="575.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="572" y="564" width="4" height="15" fill="rgb(251,15,41)"/><text x="575.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="572" y="580" width="4" height="15" fill="rgb(220,119,15)"/><text x="575.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="572" y="596" width="4" height="15" fill="rgb(239,100,44)"/><text x="575.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="572" y="612" width="4" height="15" fill="rgb(229,170,1)"/><text x="575.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py:110) (1 samples, 0.29%)</title><rect x="572" y="628" width="4" height="15" fill="rgb(251,217,33)"/><text x="575.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="572" y="644" width="4" height="15" fill="rgb(244,6,47)"/><text x="575.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="572" y="660" width="4" height="15" fill="rgb(229,107,25)"/><text x="575.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="572" y="676" width="4" height="15" fill="rgb(243,100,53)"/><text x="575.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="572" y="692" width="4" height="15" fill="rgb(214,136,38)"/><text x="575.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="572" y="708" width="4" height="15" fill="rgb(222,198,49)"/><text x="575.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="572" y="724" width="4" height="15" fill="rgb(214,148,0)"/><text x="575.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="572" y="740" width="4" height="15" fill="rgb(205,163,6)"/><text x="575.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="572" y="756" width="4" height="15" fill="rgb(243,83,13)"/><text x="575.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/__init__.py:14) (1 samples, 0.29%)</title><rect x="572" y="772" width="4" height="15" fill="rgb(229,131,16)"/><text x="575.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="572" y="788" width="4" height="15" fill="rgb(253,14,24)"/><text x="575.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="572" y="804" width="4" height="15" fill="rgb(215,66,35)"/><text x="575.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="572" y="820" width="4" height="15" fill="rgb(214,50,1)"/><text x="575.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="572" y="836" width="4" height="15" fill="rgb(248,107,36)"/><text x="575.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="572" y="852" width="4" height="15" fill="rgb(231,198,24)"/><text x="575.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_testutils.py:16) (1 samples, 0.29%)</title><rect x="572" y="868" width="4" height="15" fill="rgb(240,218,51)"/><text x="575.00" y="878.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:4) (2 samples, 0.57%)</title><rect x="572" y="148" width="7" height="15" fill="rgb(210,106,5)"/><text x="575.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="572" y="164" width="7" height="15" fill="rgb(211,103,31)"/><text x="575.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.57%)</title><rect x="572" y="180" width="7" height="15" fill="rgb(254,187,1)"/><text x="575.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="572" y="196" width="7" height="15" fill="rgb(213,135,10)"/><text x="575.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="572" y="212" width="7" height="15" fill="rgb(223,182,12)"/><text x="575.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="572" y="228" width="7" height="15" fill="rgb(241,115,50)"/><text x="575.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="572" y="244" width="7" height="15" fill="rgb(223,41,12)"/><text x="575.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.57%)</title><rect x="572" y="260" width="7" height="15" fill="rgb(253,136,54)"/><text x="575.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="572" y="276" width="7" height="15" fill="rgb(216,34,6)"/><text x="575.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.57%)</title><rect x="572" y="292" width="7" height="15" fill="rgb(222,98,43)"/><text x="575.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="572" y="308" width="7" height="15" fill="rgb(215,26,14)"/><text x="575.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="572" y="324" width="7" height="15" fill="rgb(215,68,20)"/><text x="575.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="572" y="340" width="7" height="15" fill="rgb(244,54,46)"/><text x="575.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.57%)</title><rect x="572" y="356" width="7" height="15" fill="rgb(239,11,33)"/><text x="575.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="572" y="372" width="7" height="15" fill="rgb(207,54,32)"/><text x="575.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.57%)</title><rect x="572" y="388" width="7" height="15" fill="rgb(206,31,11)"/><text x="575.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="572" y="404" width="7" height="15" fill="rgb(237,202,25)"/><text x="575.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="572" y="420" width="7" height="15" fill="rgb(231,119,45)"/><text x="575.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="572" y="436" width="7" height="15" fill="rgb(227,139,24)"/><text x="575.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.57%)</title><rect x="572" y="452" width="7" height="15" fill="rgb(227,88,8)"/><text x="575.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="572" y="468" width="7" height="15" fill="rgb(211,32,14)"/><text x="575.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.29%)</title><rect x="576" y="484" width="3" height="15" fill="rgb(240,149,34)"/><text x="579.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="576" y="500" width="3" height="15" fill="rgb(248,75,3)"/><text x="579.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="576" y="516" width="3" height="15" fill="rgb(253,196,50)"/><text x="579.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="576" y="532" width="3" height="15" fill="rgb(215,45,5)"/><text x="579.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="576" y="548" width="3" height="15" fill="rgb(249,138,3)"/><text x="579.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="576" y="564" width="3" height="15" fill="rgb(227,228,33)"/><text x="579.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="576" y="580" width="3" height="15" fill="rgb(217,42,8)"/><text x="579.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="576" y="596" width="3" height="15" fill="rgb(219,107,38)"/><text x="579.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.29%)</title><rect x="576" y="612" width="3" height="15" fill="rgb(205,144,46)"/><text x="579.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="576" y="628" width="3" height="15" fill="rgb(217,208,50)"/><text x="579.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="576" y="644" width="3" height="15" fill="rgb(239,95,31)"/><text x="579.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="576" y="660" width="3" height="15" fill="rgb(222,98,26)"/><text x="579.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="576" y="676" width="3" height="15" fill="rgb(217,7,16)"/><text x="579.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="576" y="692" width="3" height="15" fill="rgb(243,208,5)"/><text x="579.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.29%)</title><rect x="576" y="708" width="3" height="15" fill="rgb(252,38,4)"/><text x="579.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="576" y="724" width="3" height="15" fill="rgb(222,203,53)"/><text x="579.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="576" y="740" width="3" height="15" fill="rgb(251,26,41)"/><text x="579.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="576" y="756" width="3" height="15" fill="rgb(208,19,6)"/><text x="579.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="576" y="772" width="3" height="15" fill="rgb(224,162,29)"/><text x="579.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="576" y="788" width="3" height="15" fill="rgb(240,49,21)"/><text x="579.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.29%)</title><rect x="576" y="804" width="3" height="15" fill="rgb(228,224,27)"/><text x="579.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="576" y="820" width="3" height="15" fill="rgb(219,139,19)"/><text x="579.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="576" y="836" width="3" height="15" fill="rgb(231,83,38)"/><text x="579.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="576" y="852" width="3" height="15" fill="rgb(206,92,43)"/><text x="579.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="576" y="868" width="3" height="15" fill="rgb(212,199,0)"/><text x="579.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="576" y="884" width="3" height="15" fill="rgb(225,68,44)"/><text x="579.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:7) (1 samples, 0.29%)</title><rect x="576" y="900" width="3" height="15" fill="rgb(212,64,34)"/><text x="579.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="576" y="916" width="3" height="15" fill="rgb(235,112,6)"/><text x="579.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="576" y="932" width="3" height="15" fill="rgb(210,212,10)"/><text x="579.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="576" y="948" width="3" height="15" fill="rgb(231,176,54)"/><text x="579.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="576" y="964" width="3" height="15" fill="rgb(231,222,9)"/><text x="579.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="576" y="980" width="3" height="15" fill="rgb(230,35,2)"/><text x="579.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py:106) (1 samples, 0.29%)</title><rect x="576" y="996" width="3" height="15" fill="rgb(246,58,14)"/><text x="579.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="576" y="1012" width="3" height="15" fill="rgb(216,159,30)"/><text x="579.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.29%)</title><rect x="576" y="1028" width="3" height="15" fill="rgb(205,18,53)"/><text x="579.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.29%)</title><rect x="576" y="1044" width="3" height="15" fill="rgb(247,57,31)"/><text x="579.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.29%)</title><rect x="576" y="1060" width="3" height="15" fill="rgb(250,7,34)"/><text x="579.00" y="1070.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.29%)</title><rect x="576" y="1076" width="3" height="15" fill="rgb(211,123,9)"/><text x="579.00" y="1086.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.29%)</title><rect x="576" y="1092" width="3" height="15" fill="rgb(251,148,53)"/><text x="579.00" y="1102.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.29%)</title><rect x="576" y="1108" width="3" height="15" fill="rgb(215,2,24)"/><text x="579.00" y="1118.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;:1449) (1 samples, 0.29%)</title><rect x="576" y="1124" width="3" height="15" fill="rgb(246,207,9)"/><text x="579.00" y="1134.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;:1325) (1 samples, 0.29%)</title><rect x="576" y="1140" width="3" height="15" fill="rgb(235,116,54)"/><text x="579.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.29%)</title><rect x="579" y="244" width="4" height="15" fill="rgb(228,174,40)"/><text x="582.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="260" width="4" height="15" fill="rgb(244,84,25)"/><text x="582.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="276" width="4" height="15" fill="rgb(232,166,21)"/><text x="582.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="292" width="4" height="15" fill="rgb(223,216,31)"/><text x="582.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="308" width="4" height="15" fill="rgb(206,175,24)"/><text x="582.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="324" width="4" height="15" fill="rgb(230,211,20)"/><text x="582.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.29%)</title><rect x="579" y="340" width="4" height="15" fill="rgb(214,220,28)"/><text x="582.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="356" width="4" height="15" fill="rgb(242,218,52)"/><text x="582.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="579" y="372" width="4" height="15" fill="rgb(227,224,24)"/><text x="582.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="388" width="4" height="15" fill="rgb(208,139,1)"/><text x="582.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="404" width="4" height="15" fill="rgb(208,135,54)"/><text x="582.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="420" width="4" height="15" fill="rgb(248,214,2)"/><text x="582.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="436" width="4" height="15" fill="rgb(235,28,38)"/><text x="582.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="452" width="4" height="15" fill="rgb(208,58,37)"/><text x="582.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="468" width="4" height="15" fill="rgb(241,176,32)"/><text x="582.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.29%)</title><rect x="579" y="484" width="4" height="15" fill="rgb(220,87,2)"/><text x="582.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="500" width="4" height="15" fill="rgb(205,115,10)"/><text x="582.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="516" width="4" height="15" fill="rgb(254,77,26)"/><text x="582.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="532" width="4" height="15" fill="rgb(216,154,26)"/><text x="582.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="548" width="4" height="15" fill="rgb(211,141,51)"/><text x="582.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="564" width="4" height="15" fill="rgb(234,145,17)"/><text x="582.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.29%)</title><rect x="579" y="580" width="4" height="15" fill="rgb(211,117,47)"/><text x="582.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="596" width="4" height="15" fill="rgb(244,32,16)"/><text x="582.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="612" width="4" height="15" fill="rgb(223,69,21)"/><text x="582.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="628" width="4" height="15" fill="rgb(206,104,0)"/><text x="582.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="644" width="4" height="15" fill="rgb(248,81,45)"/><text x="582.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="660" width="4" height="15" fill="rgb(245,177,17)"/><text x="582.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.29%)</title><rect x="579" y="676" width="4" height="15" fill="rgb(223,205,27)"/><text x="582.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="692" width="4" height="15" fill="rgb(229,27,28)"/><text x="582.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="708" width="4" height="15" fill="rgb(214,213,36)"/><text x="582.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="724" width="4" height="15" fill="rgb(248,85,24)"/><text x="582.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="740" width="4" height="15" fill="rgb(227,31,13)"/><text x="582.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="756" width="4" height="15" fill="rgb(236,116,33)"/><text x="582.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.29%)</title><rect x="579" y="772" width="4" height="15" fill="rgb(239,98,10)"/><text x="582.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="579" y="788" width="4" height="15" fill="rgb(207,65,34)"/><text x="582.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="804" width="4" height="15" fill="rgb(246,191,42)"/><text x="582.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="820" width="4" height="15" fill="rgb(252,185,34)"/><text x="582.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="836" width="4" height="15" fill="rgb(211,177,23)"/><text x="582.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="852" width="4" height="15" fill="rgb(226,107,16)"/><text x="582.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="868" width="4" height="15" fill="rgb(207,108,27)"/><text x="582.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="884" width="4" height="15" fill="rgb(227,184,36)"/><text x="582.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.29%)</title><rect x="579" y="900" width="4" height="15" fill="rgb(235,151,7)"/><text x="582.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="916" width="4" height="15" fill="rgb(240,78,34)"/><text x="582.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="579" y="932" width="4" height="15" fill="rgb(222,123,45)"/><text x="582.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="948" width="4" height="15" fill="rgb(213,164,54)"/><text x="582.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="964" width="4" height="15" fill="rgb(221,117,14)"/><text x="582.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="980" width="4" height="15" fill="rgb(209,79,47)"/><text x="582.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="996" width="4" height="15" fill="rgb(247,104,41)"/><text x="582.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1012" width="4" height="15" fill="rgb(249,173,36)"/><text x="582.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1028" width="4" height="15" fill="rgb(238,79,10)"/><text x="582.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.29%)</title><rect x="579" y="1044" width="4" height="15" fill="rgb(233,142,50)"/><text x="582.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="579" y="1060" width="4" height="15" fill="rgb(247,132,19)"/><text x="582.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1076" width="4" height="15" fill="rgb(249,45,1)"/><text x="582.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1092" width="4" height="15" fill="rgb(210,25,36)"/><text x="582.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1108" width="4" height="15" fill="rgb(219,36,50)"/><text x="582.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1124" width="4" height="15" fill="rgb(225,200,19)"/><text x="582.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1140" width="4" height="15" fill="rgb(234,51,46)"/><text x="582.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1156" width="4" height="15" fill="rgb(242,11,50)"/><text x="582.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.29%)</title><rect x="579" y="1172" width="4" height="15" fill="rgb(207,67,7)"/><text x="582.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="579" y="1188" width="4" height="15" fill="rgb(238,99,35)"/><text x="582.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1204" width="4" height="15" fill="rgb(246,218,1)"/><text x="582.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1220" width="4" height="15" fill="rgb(223,67,11)"/><text x="582.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1236" width="4" height="15" fill="rgb(210,9,41)"/><text x="582.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1252" width="4" height="15" fill="rgb(214,18,52)"/><text x="582.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1268" width="4" height="15" fill="rgb(234,29,17)"/><text x="582.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1284" width="4" height="15" fill="rgb(243,168,17)"/><text x="582.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.29%)</title><rect x="579" y="1300" width="4" height="15" fill="rgb(206,215,9)"/><text x="582.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1316" width="4" height="15" fill="rgb(224,222,18)"/><text x="582.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1332" width="4" height="15" fill="rgb(219,55,15)"/><text x="582.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1348" width="4" height="15" fill="rgb(208,91,37)"/><text x="582.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1364" width="4" height="15" fill="rgb(245,15,32)"/><text x="582.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1380" width="4" height="15" fill="rgb(253,168,24)"/><text x="582.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:18) (1 samples, 0.29%)</title><rect x="579" y="1396" width="4" height="15" fill="rgb(254,78,25)"/><text x="582.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1412" width="4" height="15" fill="rgb(228,78,39)"/><text x="582.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1428" width="4" height="15" fill="rgb(228,68,32)"/><text x="582.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1444" width="4" height="15" fill="rgb(210,133,36)"/><text x="582.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1460" width="4" height="15" fill="rgb(245,187,6)"/><text x="582.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1476" width="4" height="15" fill="rgb(223,228,40)"/><text x="582.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:26) (1 samples, 0.29%)</title><rect x="579" y="1492" width="4" height="15" fill="rgb(206,59,18)"/><text x="582.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1508" width="4" height="15" fill="rgb(229,142,21)"/><text x="582.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1524" width="4" height="15" fill="rgb(208,18,19)"/><text x="582.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1540" width="4" height="15" fill="rgb(215,21,36)"/><text x="582.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1556" width="4" height="15" fill="rgb(210,118,51)"/><text x="582.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1572" width="4" height="15" fill="rgb(216,13,17)"/><text x="582.00" y="1582.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/general_name.py:16) (1 samples, 0.29%)</title><rect x="579" y="1588" width="4" height="15" fill="rgb(205,53,11)"/><text x="582.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1604" width="4" height="15" fill="rgb(242,146,41)"/><text x="582.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1620" width="4" height="15" fill="rgb(208,55,40)"/><text x="582.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1636" width="4" height="15" fill="rgb(229,138,50)"/><text x="582.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1652" width="4" height="15" fill="rgb(221,184,22)"/><text x="582.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1668" width="4" height="15" fill="rgb(207,220,0)"/><text x="582.00" y="1678.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/name.py:12) (1 samples, 0.29%)</title><rect x="579" y="1684" width="4" height="15" fill="rgb(222,61,37)"/><text x="582.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1700" width="4" height="15" fill="rgb(209,134,36)"/><text x="582.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1716" width="4" height="15" fill="rgb(252,128,10)"/><text x="582.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1732" width="4" height="15" fill="rgb(205,178,33)"/><text x="582.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1748" width="4" height="15" fill="rgb(254,93,44)"/><text x="582.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1764" width="4" height="15" fill="rgb(252,200,7)"/><text x="582.00" y="1774.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/oid.py:8) (1 samples, 0.29%)</title><rect x="579" y="1780" width="4" height="15" fill="rgb(239,179,27)"/><text x="582.00" y="1790.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="579" y="1796" width="4" height="15" fill="rgb(254,170,4)"/><text x="582.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1812" width="4" height="15" fill="rgb(252,70,48)"/><text x="582.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="579" y="1828" width="4" height="15" fill="rgb(213,145,43)"/><text x="582.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="579" y="1844" width="4" height="15" fill="rgb(206,98,27)"/><text x="582.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="579" y="1860" width="4" height="15" fill="rgb(220,4,13)"/><text x="582.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="579" y="1876" width="4" height="15" fill="rgb(237,145,41)"/><text x="582.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="579" y="1892" width="4" height="15" fill="rgb(212,116,20)"/><text x="582.00" y="1902.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/hashes.py:68) (1 samples, 0.29%)</title><rect x="579" y="1908" width="4" height="15" fill="rgb(247,40,21)"/><text x="582.00" y="1918.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.29%)</title><rect x="579" y="1924" width="4" height="15" fill="rgb(213,141,16)"/><text x="582.00" y="1934.50"></text></g><g><title>verify_interface (cryptography/utils.py:106) (1 samples, 0.29%)</title><rect x="579" y="1940" width="4" height="15" fill="rgb(243,145,8)"/><text x="582.00" y="1950.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.29%)</title><rect x="579" y="1956" width="4" height="15" fill="rgb(228,227,48)"/><text x="582.00" y="1966.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.29%)</title><rect x="579" y="1972" width="4" height="15" fill="rgb(209,206,15)"/><text x="582.00" y="1982.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.29%)</title><rect x="579" y="1988" width="4" height="15" fill="rgb(226,200,30)"/><text x="582.00" y="1998.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.29%)</title><rect x="579" y="2004" width="4" height="15" fill="rgb(234,160,16)"/><text x="582.00" y="2014.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.29%)</title><rect x="579" y="2020" width="4" height="15" fill="rgb(219,191,18)"/><text x="582.00" y="2030.50"></text></g><g><title>&lt;genexpr&gt; (inspect.py:2800) (1 samples, 0.29%)</title><rect x="579" y="2036" width="4" height="15" fill="rgb(233,176,46)"/><text x="582.00" y="2046.50"></text></g><g><title>name (inspect.py:2519) (1 samples, 0.29%)</title><rect x="579" y="2052" width="4" height="15" fill="rgb(225,210,46)"/><text x="582.00" y="2062.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.29%)</title><rect x="583" y="820" width="3" height="15" fill="rgb(249,50,5)"/><text x="586.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="583" y="836" width="3" height="15" fill="rgb(254,132,15)"/><text x="586.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="583" y="852" width="3" height="15" fill="rgb(250,151,40)"/><text x="586.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="583" y="868" width="3" height="15" fill="rgb(241,202,30)"/><text x="586.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="583" y="884" width="3" height="15" fill="rgb(217,159,21)"/><text x="586.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="583" y="900" width="3" height="15" fill="rgb(222,198,21)"/><text x="586.00" y="910.50"></text></g><g><title>0x7f7342e7a40e (?) (1 samples, 0.29%)</title><rect x="583" y="916" width="3" height="15" fill="rgb(252,1,32)"/><text x="586.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="583" y="932" width="3" height="15" fill="rgb(224,51,31)"/><text x="586.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="583" y="948" width="3" height="15" fill="rgb(218,50,6)"/><text x="586.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="583" y="964" width="3" height="15" fill="rgb(214,171,54)"/><text x="586.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="583" y="980" width="3" height="15" fill="rgb(233,181,41)"/><text x="586.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="583" y="996" width="3" height="15" fill="rgb(223,31,48)"/><text x="586.00" y="1006.50"></text></g><g><title>0x7f7342c33cd2 (?) (1 samples, 0.29%)</title><rect x="583" y="1012" width="3" height="15" fill="rgb(220,191,48)"/><text x="586.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="583" y="1028" width="3" height="15" fill="rgb(219,10,38)"/><text x="586.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="583" y="1044" width="3" height="15" fill="rgb(210,22,50)"/><text x="586.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="583" y="1060" width="3" height="15" fill="rgb(235,81,49)"/><text x="586.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="583" y="1076" width="3" height="15" fill="rgb(240,103,15)"/><text x="586.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="583" y="1092" width="3" height="15" fill="rgb(209,81,16)"/><text x="586.00" y="1102.50"></text></g><g><title>0x7f73423290e5 (?) (1 samples, 0.29%)</title><rect x="583" y="1108" width="3" height="15" fill="rgb(234,160,27)"/><text x="586.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="583" y="1124" width="3" height="15" fill="rgb(206,133,10)"/><text x="586.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="583" y="1140" width="3" height="15" fill="rgb(215,38,36)"/><text x="586.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="583" y="1156" width="3" height="15" fill="rgb(248,196,23)"/><text x="586.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="583" y="1172" width="3" height="15" fill="rgb(217,99,35)"/><text x="586.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="583" y="1188" width="3" height="15" fill="rgb(206,14,5)"/><text x="586.00" y="1198.50"></text></g><g><title>0x7f73420ade68 (?) (1 samples, 0.29%)</title><rect x="583" y="1204" width="3" height="15" fill="rgb(233,170,3)"/><text x="586.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="583" y="1220" width="3" height="15" fill="rgb(229,95,16)"/><text x="586.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="583" y="1236" width="3" height="15" fill="rgb(215,227,32)"/><text x="586.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="583" y="1252" width="3" height="15" fill="rgb(205,99,42)"/><text x="586.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="583" y="1268" width="3" height="15" fill="rgb(231,178,2)"/><text x="586.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="583" y="1284" width="3" height="15" fill="rgb(237,211,6)"/><text x="586.00" y="1294.50"></text></g><g><title>0x7f7341e3e2fb (?) (1 samples, 0.29%)</title><rect x="583" y="1300" width="3" height="15" fill="rgb(207,16,9)"/><text x="586.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="583" y="1316" width="3" height="15" fill="rgb(211,195,19)"/><text x="586.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="583" y="1332" width="3" height="15" fill="rgb(225,114,16)"/><text x="586.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="583" y="1348" width="3" height="15" fill="rgb(232,92,15)"/><text x="586.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="583" y="1364" width="3" height="15" fill="rgb(210,65,37)"/><text x="586.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="583" y="1380" width="3" height="15" fill="rgb(214,4,5)"/><text x="586.00" y="1390.50"></text></g><g><title>0x7f7341c22153 (?) (1 samples, 0.29%)</title><rect x="583" y="1396" width="3" height="15" fill="rgb(224,172,5)"/><text x="586.00" y="1406.50"></text></g><g><title>0x7f7341c20c13 (?) (1 samples, 0.29%)</title><rect x="583" y="1412" width="3" height="15" fill="rgb(238,61,19)"/><text x="586.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="583" y="1428" width="3" height="15" fill="rgb(210,85,35)"/><text x="586.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="583" y="1444" width="3" height="15" fill="rgb(239,218,45)"/><text x="586.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="583" y="1460" width="3" height="15" fill="rgb(236,65,51)"/><text x="586.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="583" y="1476" width="3" height="15" fill="rgb(232,145,47)"/><text x="586.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="583" y="1492" width="3" height="15" fill="rgb(223,42,45)"/><text x="586.00" y="1502.50"></text></g><g><title>0x7f734197d181 (?) (1 samples, 0.29%)</title><rect x="583" y="1508" width="3" height="15" fill="rgb(254,130,13)"/><text x="586.00" y="1518.50"></text></g><g><title>0x7f73419801c9 (?) (1 samples, 0.29%)</title><rect x="583" y="1524" width="3" height="15" fill="rgb(253,184,34)"/><text x="586.00" y="1534.50"></text></g><g><title>0x7f73419ac167 (?) (1 samples, 0.29%)</title><rect x="583" y="1540" width="3" height="15" fill="rgb(224,31,54)"/><text x="586.00" y="1550.50"></text></g><g><title>0x7f73419a7b64 (?) (1 samples, 0.29%)</title><rect x="583" y="1556" width="3" height="15" fill="rgb(243,222,43)"/><text x="586.00" y="1566.50"></text></g><g><title>0x7f734198b07b (?) (1 samples, 0.29%)</title><rect x="583" y="1572" width="3" height="15" fill="rgb(224,210,19)"/><text x="586.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.29%)</title><rect x="583" y="1588" width="3" height="15" fill="rgb(238,15,54)"/><text x="586.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.29%)</title><rect x="583" y="1604" width="3" height="15" fill="rgb(208,138,36)"/><text x="586.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.29%)</title><rect x="583" y="1620" width="3" height="15" fill="rgb(214,30,39)"/><text x="586.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:91) (1 samples, 0.29%)</title><rect x="583" y="1636" width="3" height="15" fill="rgb(254,41,54)"/><text x="586.00" y="1646.50"></text></g><g><title>get (_collections_abc.py:660) (1 samples, 0.29%)</title><rect x="583" y="1652" width="3" height="15" fill="rgb(210,154,53)"/><text x="586.00" y="1662.50"></text></g><g><title>__getitem__ (os.py:675) (1 samples, 0.29%)</title><rect x="583" y="1668" width="3" height="15" fill="rgb(208,83,14)"/><text x="586.00" y="1678.50"></text></g><g><title>encode (os.py:754) (1 samples, 0.29%)</title><rect x="583" y="1684" width="3" height="15" fill="rgb(205,145,35)"/><text x="586.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.29%)</title><rect x="586" y="1044" width="3" height="15" fill="rgb(220,104,21)"/><text x="589.00" y="1054.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.29%)</title><rect x="586" y="1060" width="3" height="15" fill="rgb(249,190,8)"/><text x="589.00" y="1070.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:174) (1 samples, 0.29%)</title><rect x="586" y="1076" width="3" height="15" fill="rgb(221,205,26)"/><text x="589.00" y="1086.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:59) (1 samples, 0.29%)</title><rect x="586" y="1092" width="3" height="15" fill="rgb(247,114,15)"/><text x="589.00" y="1102.50"></text></g><g><title>thread_PyThread_allocate_lock (python3.7) (1 samples, 0.29%)</title><rect x="586" y="1108" width="3" height="15" fill="rgb(237,146,21)"/><text x="589.00" y="1118.50"></text></g><g><title>PyThread_allocate_lock (python3.7) (1 samples, 0.29%)</title><rect x="586" y="1124" width="3" height="15" fill="rgb(212,207,28)"/><text x="589.00" y="1134.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="586" y="1140" width="3" height="15" fill="rgb(227,95,21)"/><text x="589.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (3 samples, 0.86%)</title><rect x="583" y="628" width="10" height="15" fill="rgb(215,34,21)"/><text x="586.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="583" y="644" width="10" height="15" fill="rgb(237,152,43)"/><text x="586.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="583" y="660" width="10" height="15" fill="rgb(246,116,39)"/><text x="586.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="583" y="676" width="10" height="15" fill="rgb(215,169,17)"/><text x="586.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="583" y="692" width="10" height="15" fill="rgb(237,218,2)"/><text x="586.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="583" y="708" width="10" height="15" fill="rgb(220,140,51)"/><text x="586.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (3 samples, 0.86%)</title><rect x="583" y="724" width="10" height="15" fill="rgb(238,218,2)"/><text x="586.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="583" y="740" width="10" height="15" fill="rgb(222,33,9)"/><text x="586.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="583" y="756" width="10" height="15" fill="rgb(207,148,19)"/><text x="586.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="583" y="772" width="10" height="15" fill="rgb(207,12,35)"/><text x="586.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="583" y="788" width="10" height="15" fill="rgb(235,79,27)"/><text x="586.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="583" y="804" width="10" height="15" fill="rgb(247,129,47)"/><text x="586.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:6) (2 samples, 0.57%)</title><rect x="586" y="820" width="7" height="15" fill="rgb(226,124,40)"/><text x="589.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="586" y="836" width="7" height="15" fill="rgb(223,223,16)"/><text x="589.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="586" y="852" width="7" height="15" fill="rgb(234,84,51)"/><text x="589.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="586" y="868" width="7" height="15" fill="rgb(234,205,2)"/><text x="589.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.57%)</title><rect x="586" y="884" width="7" height="15" fill="rgb(254,78,9)"/><text x="589.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="586" y="900" width="7" height="15" fill="rgb(207,4,1)"/><text x="589.00" y="910.50"></text></g><g><title>0x7f734120b179 (pandas/_libs/tslibs/period.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.57%)</title><rect x="586" y="916" width="7" height="15" fill="rgb(253,169,43)"/><text x="589.00" y="926.50"></text></g><g><title>0x7f734120fd4a (pandas/_libs/tslibs/period.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.57%)</title><rect x="586" y="932" width="7" height="15" fill="rgb(223,176,19)"/><text x="589.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="586" y="948" width="7" height="15" fill="rgb(242,94,0)"/><text x="589.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="586" y="964" width="7" height="15" fill="rgb(215,100,23)"/><text x="589.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="586" y="980" width="7" height="15" fill="rgb(219,69,14)"/><text x="589.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.57%)</title><rect x="586" y="996" width="7" height="15" fill="rgb(212,125,53)"/><text x="589.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="586" y="1012" width="7" height="15" fill="rgb(252,223,54)"/><text x="589.00" y="1022.50"></text></g><g><title>0x7f7340d94d13 (pandas/_libs/tslibs/timestamps.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.57%)</title><rect x="586" y="1028" width="7" height="15" fill="rgb(253,16,49)"/><text x="589.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="589" y="1044" width="4" height="15" fill="rgb(228,133,14)"/><text x="592.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.29%)</title><rect x="589" y="1060" width="4" height="15" fill="rgb(233,30,50)"/><text x="592.00" y="1070.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.29%)</title><rect x="589" y="1076" width="4" height="15" fill="rgb(207,154,18)"/><text x="592.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.29%)</title><rect x="589" y="1092" width="4" height="15" fill="rgb(244,210,34)"/><text x="592.00" y="1102.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.29%)</title><rect x="589" y="1108" width="4" height="15" fill="rgb(210,84,49)"/><text x="592.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.29%)</title><rect x="589" y="1124" width="4" height="15" fill="rgb(215,169,14)"/><text x="592.00" y="1134.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.29%)</title><rect x="589" y="1140" width="4" height="15" fill="rgb(226,19,29)"/><text x="592.00" y="1150.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.29%)</title><rect x="589" y="1156" width="4" height="15" fill="rgb(236,167,4)"/><text x="592.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.29%)</title><rect x="593" y="1012" width="3" height="15" fill="rgb(232,93,38)"/><text x="596.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1028" width="3" height="15" fill="rgb(223,54,52)"/><text x="596.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1044" width="3" height="15" fill="rgb(252,44,22)"/><text x="596.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1060" width="3" height="15" fill="rgb(237,0,7)"/><text x="596.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1076" width="3" height="15" fill="rgb(225,128,48)"/><text x="596.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1092" width="3" height="15" fill="rgb(253,79,53)"/><text x="596.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.29%)</title><rect x="593" y="1108" width="3" height="15" fill="rgb(243,205,6)"/><text x="596.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1124" width="3" height="15" fill="rgb(228,44,2)"/><text x="596.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1140" width="3" height="15" fill="rgb(231,171,38)"/><text x="596.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1156" width="3" height="15" fill="rgb(215,110,17)"/><text x="596.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1172" width="3" height="15" fill="rgb(212,149,51)"/><text x="596.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1188" width="3" height="15" fill="rgb(215,153,19)"/><text x="596.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.29%)</title><rect x="593" y="1204" width="3" height="15" fill="rgb(214,173,17)"/><text x="596.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1220" width="3" height="15" fill="rgb(237,35,13)"/><text x="596.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1236" width="3" height="15" fill="rgb(245,171,24)"/><text x="596.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1252" width="3" height="15" fill="rgb(248,142,18)"/><text x="596.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1268" width="3" height="15" fill="rgb(239,137,10)"/><text x="596.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1284" width="3" height="15" fill="rgb(208,163,20)"/><text x="596.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.29%)</title><rect x="593" y="1300" width="3" height="15" fill="rgb(224,109,28)"/><text x="596.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1316" width="3" height="15" fill="rgb(247,41,23)"/><text x="596.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1332" width="3" height="15" fill="rgb(249,88,48)"/><text x="596.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1348" width="3" height="15" fill="rgb(246,208,51)"/><text x="596.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1364" width="3" height="15" fill="rgb(249,140,12)"/><text x="596.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1380" width="3" height="15" fill="rgb(252,148,34)"/><text x="596.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.29%)</title><rect x="593" y="1396" width="3" height="15" fill="rgb(221,219,33)"/><text x="596.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1412" width="3" height="15" fill="rgb(219,101,33)"/><text x="596.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1428" width="3" height="15" fill="rgb(222,135,52)"/><text x="596.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1444" width="3" height="15" fill="rgb(219,224,29)"/><text x="596.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1460" width="3" height="15" fill="rgb(215,142,44)"/><text x="596.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1476" width="3" height="15" fill="rgb(231,207,26)"/><text x="596.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.29%)</title><rect x="593" y="1492" width="3" height="15" fill="rgb(206,180,0)"/><text x="596.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1508" width="3" height="15" fill="rgb(228,166,29)"/><text x="596.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1524" width="3" height="15" fill="rgb(235,16,32)"/><text x="596.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1540" width="3" height="15" fill="rgb(241,203,45)"/><text x="596.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1556" width="3" height="15" fill="rgb(230,99,6)"/><text x="596.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1572" width="3" height="15" fill="rgb(227,220,22)"/><text x="596.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.29%)</title><rect x="593" y="1588" width="3" height="15" fill="rgb(252,54,24)"/><text x="596.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1604" width="3" height="15" fill="rgb(211,102,31)"/><text x="596.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1620" width="3" height="15" fill="rgb(246,139,49)"/><text x="596.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1636" width="3" height="15" fill="rgb(217,47,12)"/><text x="596.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1652" width="3" height="15" fill="rgb(236,64,33)"/><text x="596.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1668" width="3" height="15" fill="rgb(254,128,45)"/><text x="596.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.29%)</title><rect x="593" y="1684" width="3" height="15" fill="rgb(207,125,50)"/><text x="596.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1700" width="3" height="15" fill="rgb(239,117,35)"/><text x="596.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1716" width="3" height="15" fill="rgb(228,227,40)"/><text x="596.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1732" width="3" height="15" fill="rgb(253,64,49)"/><text x="596.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1748" width="3" height="15" fill="rgb(251,74,46)"/><text x="596.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1764" width="3" height="15" fill="rgb(207,124,21)"/><text x="596.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.29%)</title><rect x="593" y="1780" width="3" height="15" fill="rgb(224,120,50)"/><text x="596.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1796" width="3" height="15" fill="rgb(230,120,35)"/><text x="596.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1812" width="3" height="15" fill="rgb(246,200,18)"/><text x="596.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1828" width="3" height="15" fill="rgb(240,154,10)"/><text x="596.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1844" width="3" height="15" fill="rgb(243,181,48)"/><text x="596.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1860" width="3" height="15" fill="rgb(232,163,41)"/><text x="596.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:17) (1 samples, 0.29%)</title><rect x="593" y="1876" width="3" height="15" fill="rgb(234,13,40)"/><text x="596.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1892" width="3" height="15" fill="rgb(237,47,29)"/><text x="596.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="1908" width="3" height="15" fill="rgb(245,12,31)"/><text x="596.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="1924" width="3" height="15" fill="rgb(244,167,18)"/><text x="596.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="1940" width="3" height="15" fill="rgb(251,185,5)"/><text x="596.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="1956" width="3" height="15" fill="rgb(239,204,7)"/><text x="596.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py:12) (1 samples, 0.29%)</title><rect x="593" y="1972" width="3" height="15" fill="rgb(217,197,2)"/><text x="596.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="593" y="1988" width="3" height="15" fill="rgb(238,170,7)"/><text x="596.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="593" y="2004" width="3" height="15" fill="rgb(213,77,36)"/><text x="596.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="593" y="2020" width="3" height="15" fill="rgb(222,29,30)"/><text x="596.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="593" y="2036" width="3" height="15" fill="rgb(231,154,15)"/><text x="596.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="593" y="2052" width="3" height="15" fill="rgb(250,198,53)"/><text x="596.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py:142) (1 samples, 0.29%)</title><rect x="593" y="2068" width="3" height="15" fill="rgb(219,92,53)"/><text x="596.00" y="2078.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:14) (1 samples, 0.29%)</title><rect x="596" y="1300" width="4" height="15" fill="rgb(245,144,12)"/><text x="599.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="596" y="1316" width="4" height="15" fill="rgb(219,189,27)"/><text x="599.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="596" y="1332" width="4" height="15" fill="rgb(233,157,17)"/><text x="599.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="596" y="1348" width="4" height="15" fill="rgb(234,178,3)"/><text x="599.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="596" y="1364" width="4" height="15" fill="rgb(245,146,4)"/><text x="599.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="596" y="1380" width="4" height="15" fill="rgb(222,3,36)"/><text x="599.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/category.py:56) (1 samples, 0.29%)</title><rect x="596" y="1396" width="4" height="15" fill="rgb(252,30,15)"/><text x="599.00" y="1406.50"></text></g><g><title>CategoricalIndex (pandas/core/indexes/category.py:715) (1 samples, 0.29%)</title><rect x="596" y="1412" width="4" height="15" fill="rgb(250,74,16)"/><text x="599.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.29%)</title><rect x="596" y="1428" width="4" height="15" fill="rgb(225,212,48)"/><text x="599.00" y="1438.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.29%)</title><rect x="596" y="1444" width="4" height="15" fill="rgb(211,36,52)"/><text x="599.00" y="1454.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.29%)</title><rect x="596" y="1460" width="4" height="15" fill="rgb(238,105,30)"/><text x="599.00" y="1470.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.29%)</title><rect x="596" y="1476" width="4" height="15" fill="rgb(246,131,25)"/><text x="599.00" y="1486.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="596" y="1492" width="4" height="15" fill="rgb(231,154,8)"/><text x="599.00" y="1502.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="596" y="1508" width="4" height="15" fill="rgb(236,175,8)"/><text x="599.00" y="1518.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.86%)</title><rect x="593" y="916" width="10" height="15" fill="rgb(212,160,54)"/><text x="596.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="593" y="932" width="10" height="15" fill="rgb(209,129,30)"/><text x="596.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="593" y="948" width="10" height="15" fill="rgb(253,41,42)"/><text x="596.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="593" y="964" width="10" height="15" fill="rgb(231,12,9)"/><text x="596.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="593" y="980" width="10" height="15" fill="rgb(232,51,47)"/><text x="596.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="593" y="996" width="10" height="15" fill="rgb(232,140,14)"/><text x="596.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.57%)</title><rect x="596" y="1012" width="7" height="15" fill="rgb(206,94,2)"/><text x="599.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="596" y="1028" width="7" height="15" fill="rgb(232,95,51)"/><text x="599.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="596" y="1044" width="7" height="15" fill="rgb(244,93,20)"/><text x="599.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="596" y="1060" width="7" height="15" fill="rgb(206,33,36)"/><text x="599.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.57%)</title><rect x="596" y="1076" width="7" height="15" fill="rgb(249,210,34)"/><text x="599.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="596" y="1092" width="7" height="15" fill="rgb(219,33,4)"/><text x="599.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (2 samples, 0.57%)</title><rect x="596" y="1108" width="7" height="15" fill="rgb(215,51,12)"/><text x="599.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="596" y="1124" width="7" height="15" fill="rgb(212,19,11)"/><text x="599.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="596" y="1140" width="7" height="15" fill="rgb(225,226,25)"/><text x="599.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="596" y="1156" width="7" height="15" fill="rgb(250,3,52)"/><text x="599.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.57%)</title><rect x="596" y="1172" width="7" height="15" fill="rgb(224,140,19)"/><text x="599.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="596" y="1188" width="7" height="15" fill="rgb(221,207,42)"/><text x="599.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (2 samples, 0.57%)</title><rect x="596" y="1204" width="7" height="15" fill="rgb(251,81,50)"/><text x="599.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="596" y="1220" width="7" height="15" fill="rgb(210,59,19)"/><text x="599.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="596" y="1236" width="7" height="15" fill="rgb(211,151,19)"/><text x="599.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="596" y="1252" width="7" height="15" fill="rgb(236,26,40)"/><text x="599.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.57%)</title><rect x="596" y="1268" width="7" height="15" fill="rgb(242,134,13)"/><text x="599.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="596" y="1284" width="7" height="15" fill="rgb(248,101,44)"/><text x="599.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:24) (1 samples, 0.29%)</title><rect x="600" y="1300" width="3" height="15" fill="rgb(251,152,50)"/><text x="603.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="600" y="1316" width="3" height="15" fill="rgb(215,188,44)"/><text x="603.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="600" y="1332" width="3" height="15" fill="rgb(242,189,29)"/><text x="603.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="600" y="1348" width="3" height="15" fill="rgb(246,192,7)"/><text x="603.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="600" y="1364" width="3" height="15" fill="rgb(236,212,54)"/><text x="603.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="600" y="1380" width="3" height="15" fill="rgb(219,187,38)"/><text x="603.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="600" y="1396" width="3" height="15" fill="rgb(223,100,31)"/><text x="603.00" y="1406.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:734) (1 samples, 0.29%)</title><rect x="603" y="1044" width="3" height="15" fill="rgb(217,32,34)"/><text x="606.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.29%)</title><rect x="603" y="1060" width="3" height="15" fill="rgb(228,190,28)"/><text x="606.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.29%)</title><rect x="603" y="1076" width="3" height="15" fill="rgb(219,42,7)"/><text x="606.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.29%)</title><rect x="603" y="1092" width="3" height="15" fill="rgb(231,138,3)"/><text x="606.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.29%)</title><rect x="603" y="1108" width="3" height="15" fill="rgb(238,206,23)"/><text x="606.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="603" y="1124" width="3" height="15" fill="rgb(247,223,26)"/><text x="606.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="603" y="1140" width="3" height="15" fill="rgb(210,35,46)"/><text x="606.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (8 samples, 2.30%)</title><rect x="583" y="436" width="27" height="15" fill="rgb(215,99,7)"/><text x="586.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.30%)</title><rect x="583" y="452" width="27" height="15" fill="rgb(251,150,5)"/><text x="586.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.30%)</title><rect x="583" y="468" width="27" height="15" fill="rgb(248,170,36)"/><text x="586.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.30%)</title><rect x="583" y="484" width="27" height="15" fill="rgb(231,132,6)"/><text x="586.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.30%)</title><rect x="583" y="500" width="27" height="15" fill="rgb(229,58,7)"/><text x="586.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.30%)</title><rect x="583" y="516" width="27" height="15" fill="rgb(208,110,45)"/><text x="586.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (8 samples, 2.30%)</title><rect x="583" y="532" width="27" height="15" fill="rgb(221,20,33)"/><text x="586.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.30%)</title><rect x="583" y="548" width="27" height="15" fill="rgb(238,217,9)"/><text x="586.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.30%)</title><rect x="583" y="564" width="27" height="15" fill="rgb(240,118,2)"/><text x="586.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.30%)</title><rect x="583" y="580" width="27" height="15" fill="rgb(253,95,14)"/><text x="586.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.30%)</title><rect x="583" y="596" width="27" height="15" fill="rgb(251,176,5)"/><text x="586.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.30%)</title><rect x="583" y="612" width="27" height="15" fill="rgb(205,169,14)"/><text x="586.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (5 samples, 1.44%)</title><rect x="593" y="628" width="17" height="15" fill="rgb(234,177,35)"/><text x="596.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.44%)</title><rect x="593" y="644" width="17" height="15" fill="rgb(210,45,17)"/><text x="596.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.44%)</title><rect x="593" y="660" width="17" height="15" fill="rgb(241,42,47)"/><text x="596.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.44%)</title><rect x="593" y="676" width="17" height="15" fill="rgb(229,103,54)"/><text x="596.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.44%)</title><rect x="593" y="692" width="17" height="15" fill="rgb(241,124,42)"/><text x="596.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="593" y="708" width="17" height="15" fill="rgb(211,226,4)"/><text x="596.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (5 samples, 1.44%)</title><rect x="593" y="724" width="17" height="15" fill="rgb(248,99,19)"/><text x="596.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.44%)</title><rect x="593" y="740" width="17" height="15" fill="rgb(238,220,36)"/><text x="596.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.44%)</title><rect x="593" y="756" width="17" height="15" fill="rgb(254,225,29)"/><text x="596.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.44%)</title><rect x="593" y="772" width="17" height="15" fill="rgb(252,115,53)"/><text x="596.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.44%)</title><rect x="593" y="788" width="17" height="15" fill="rgb(235,31,42)"/><text x="596.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="593" y="804" width="17" height="15" fill="rgb(224,191,43)"/><text x="596.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (5 samples, 1.44%)</title><rect x="593" y="820" width="17" height="15" fill="rgb(216,65,46)"/><text x="596.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.44%)</title><rect x="593" y="836" width="17" height="15" fill="rgb(237,131,11)"/><text x="596.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.44%)</title><rect x="593" y="852" width="17" height="15" fill="rgb(234,96,25)"/><text x="596.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.44%)</title><rect x="593" y="868" width="17" height="15" fill="rgb(230,96,24)"/><text x="596.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.44%)</title><rect x="593" y="884" width="17" height="15" fill="rgb(229,58,10)"/><text x="596.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="593" y="900" width="17" height="15" fill="rgb(226,149,37)"/><text x="596.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (2 samples, 0.57%)</title><rect x="603" y="916" width="7" height="15" fill="rgb(234,190,33)"/><text x="606.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.57%)</title><rect x="603" y="932" width="7" height="15" fill="rgb(240,6,22)"/><text x="606.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.57%)</title><rect x="603" y="948" width="7" height="15" fill="rgb(252,71,39)"/><text x="606.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.57%)</title><rect x="603" y="964" width="7" height="15" fill="rgb(254,120,9)"/><text x="606.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.57%)</title><rect x="603" y="980" width="7" height="15" fill="rgb(205,11,34)"/><text x="606.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.57%)</title><rect x="603" y="996" width="7" height="15" fill="rgb(237,122,28)"/><text x="606.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (2 samples, 0.57%)</title><rect x="603" y="1012" width="7" height="15" fill="rgb(222,83,22)"/><text x="606.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (2 samples, 0.57%)</title><rect x="603" y="1028" width="7" height="15" fill="rgb(234,100,14)"/><text x="606.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:743) (1 samples, 0.29%)</title><rect x="606" y="1044" width="4" height="15" fill="rgb(220,39,11)"/><text x="609.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.29%)</title><rect x="606" y="1060" width="4" height="15" fill="rgb(247,54,30)"/><text x="609.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.29%)</title><rect x="606" y="1076" width="4" height="15" fill="rgb(206,162,37)"/><text x="609.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.29%)</title><rect x="606" y="1092" width="4" height="15" fill="rgb(253,161,50)"/><text x="609.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.29%)</title><rect x="606" y="1108" width="4" height="15" fill="rgb(231,146,8)"/><text x="609.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="606" y="1124" width="4" height="15" fill="rgb(241,120,48)"/><text x="609.00" y="1134.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.29%)</title><rect x="610" y="1108" width="3" height="15" fill="rgb(235,32,37)"/><text x="613.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="610" y="1124" width="3" height="15" fill="rgb(246,111,0)"/><text x="613.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="610" y="1140" width="3" height="15" fill="rgb(244,178,41)"/><text x="613.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="610" y="1156" width="3" height="15" fill="rgb(215,14,39)"/><text x="613.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="610" y="1172" width="3" height="15" fill="rgb(229,75,30)"/><text x="613.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="610" y="1188" width="3" height="15" fill="rgb(236,128,29)"/><text x="613.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.29%)</title><rect x="610" y="1204" width="3" height="15" fill="rgb(242,54,13)"/><text x="613.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="610" y="1220" width="3" height="15" fill="rgb(246,175,6)"/><text x="613.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="610" y="1236" width="3" height="15" fill="rgb(239,65,50)"/><text x="613.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="610" y="1252" width="3" height="15" fill="rgb(232,98,19)"/><text x="613.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="610" y="1268" width="3" height="15" fill="rgb(236,53,36)"/><text x="613.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="610" y="1284" width="3" height="15" fill="rgb(232,53,32)"/><text x="613.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:53) (1 samples, 0.29%)</title><rect x="610" y="1300" width="3" height="15" fill="rgb(244,26,26)"/><text x="613.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="610" y="1316" width="3" height="15" fill="rgb(246,171,1)"/><text x="613.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="610" y="1332" width="3" height="15" fill="rgb(221,206,36)"/><text x="613.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="610" y="1348" width="3" height="15" fill="rgb(224,91,11)"/><text x="613.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="610" y="1364" width="3" height="15" fill="rgb(213,36,33)"/><text x="613.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="610" y="1380" width="3" height="15" fill="rgb(232,217,0)"/><text x="613.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:12) (1 samples, 0.29%)</title><rect x="610" y="1396" width="3" height="15" fill="rgb(233,179,11)"/><text x="613.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="610" y="1412" width="3" height="15" fill="rgb(229,164,12)"/><text x="613.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="610" y="1428" width="3" height="15" fill="rgb(239,31,28)"/><text x="613.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.29%)</title><rect x="610" y="1444" width="3" height="15" fill="rgb(254,166,35)"/><text x="613.00" y="1454.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.29%)</title><rect x="610" y="1460" width="3" height="15" fill="rgb(206,131,49)"/><text x="613.00" y="1470.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.29%)</title><rect x="610" y="1476" width="3" height="15" fill="rgb(245,0,18)"/><text x="613.00" y="1486.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.29%)</title><rect x="610" y="1492" width="3" height="15" fill="rgb(223,188,2)"/><text x="613.00" y="1502.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.29%)</title><rect x="613" y="1572" width="3" height="15" fill="rgb(220,9,36)"/><text x="616.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.29%)</title><rect x="613" y="1588" width="3" height="15" fill="rgb(238,25,33)"/><text x="616.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.57%)</title><rect x="613" y="1460" width="7" height="15" fill="rgb(243,164,48)"/><text x="616.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.57%)</title><rect x="613" y="1476" width="7" height="15" fill="rgb(238,159,35)"/><text x="616.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.57%)</title><rect x="613" y="1492" width="7" height="15" fill="rgb(244,74,33)"/><text x="616.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.57%)</title><rect x="613" y="1508" width="7" height="15" fill="rgb(233,98,18)"/><text x="616.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.57%)</title><rect x="613" y="1524" width="7" height="15" fill="rgb(210,99,10)"/><text x="616.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.57%)</title><rect x="613" y="1540" width="7" height="15" fill="rgb(217,58,31)"/><text x="616.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.57%)</title><rect x="613" y="1556" width="7" height="15" fill="rgb(239,201,49)"/><text x="616.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.29%)</title><rect x="616" y="1572" width="4" height="15" fill="rgb(224,12,28)"/><text x="619.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.29%)</title><rect x="616" y="1588" width="4" height="15" fill="rgb(246,30,43)"/><text x="619.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.29%)</title><rect x="616" y="1604" width="4" height="15" fill="rgb(225,136,40)"/><text x="619.00" y="1614.50"></text></g><g><title>0x7f735a04694d (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="616" y="1620" width="4" height="15" fill="rgb(238,199,16)"/><text x="619.00" y="1630.50"></text></g><g><title>google::protobuf::Message::_InternalParse (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="616" y="1636" width="4" height="15" fill="rgb(208,94,46)"/><text x="619.00" y="1646.50"></text></g><g><title>0x7f735a106de2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="616" y="1652" width="4" height="15" fill="rgb(245,38,22)"/><text x="619.00" y="1662.50"></text></g><g><title>google::protobuf::ParseLenDelim (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="616" y="1668" width="4" height="15" fill="rgb(222,151,36)"/><text x="619.00" y="1678.50"></text></g><g><title>google::protobuf::internal::VerifyUTF8 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="616" y="1684" width="4" height="15" fill="rgb(226,228,53)"/><text x="619.00" y="1694.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.29%)</title><rect x="620" y="1700" width="3" height="15" fill="rgb(228,151,7)"/><text x="623.00" y="1710.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:163) (1 samples, 0.29%)</title><rect x="620" y="1716" width="3" height="15" fill="rgb(234,91,43)"/><text x="623.00" y="1726.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:36) (2 samples, 0.57%)</title><rect x="620" y="1668" width="7" height="15" fill="rgb(218,119,28)"/><text x="623.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (2 samples, 0.57%)</title><rect x="620" y="1684" width="7" height="15" fill="rgb(247,6,25)"/><text x="623.00" y="1694.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.29%)</title><rect x="623" y="1700" width="4" height="15" fill="rgb(245,83,39)"/><text x="626.00" y="1710.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:91) (1 samples, 0.29%)</title><rect x="623" y="1716" width="4" height="15" fill="rgb(224,91,35)"/><text x="626.00" y="1726.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 1.72%)</title><rect x="610" y="676" width="20" height="15" fill="rgb(222,224,32)"/><text x="613.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="610" y="692" width="20" height="15" fill="rgb(218,69,17)"/><text x="613.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.72%)</title><rect x="610" y="708" width="20" height="15" fill="rgb(250,228,5)"/><text x="613.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.72%)</title><rect x="610" y="724" width="20" height="15" fill="rgb(215,24,45)"/><text x="613.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.72%)</title><rect x="610" y="740" width="20" height="15" fill="rgb(209,68,42)"/><text x="613.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="610" y="756" width="20" height="15" fill="rgb(237,128,22)"/><text x="613.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 1.72%)</title><rect x="610" y="772" width="20" height="15" fill="rgb(230,201,14)"/><text x="613.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="610" y="788" width="20" height="15" fill="rgb(207,204,29)"/><text x="613.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.72%)</title><rect x="610" y="804" width="20" height="15" fill="rgb(231,57,1)"/><text x="613.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.72%)</title><rect x="610" y="820" width="20" height="15" fill="rgb(224,96,10)"/><text x="613.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.72%)</title><rect x="610" y="836" width="20" height="15" fill="rgb(216,145,31)"/><text x="613.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="610" y="852" width="20" height="15" fill="rgb(222,111,6)"/><text x="613.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 1.72%)</title><rect x="610" y="868" width="20" height="15" fill="rgb(213,184,22)"/><text x="613.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="610" y="884" width="20" height="15" fill="rgb(216,34,14)"/><text x="613.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.72%)</title><rect x="610" y="900" width="20" height="15" fill="rgb(247,75,23)"/><text x="613.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="610" y="916" width="20" height="15" fill="rgb(211,111,16)"/><text x="613.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="610" y="932" width="20" height="15" fill="rgb(233,128,46)"/><text x="613.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.72%)</title><rect x="610" y="948" width="20" height="15" fill="rgb(230,94,5)"/><text x="613.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.72%)</title><rect x="610" y="964" width="20" height="15" fill="rgb(238,137,36)"/><text x="613.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.72%)</title><rect x="610" y="980" width="20" height="15" fill="rgb(226,163,48)"/><text x="613.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="610" y="996" width="20" height="15" fill="rgb(210,193,46)"/><text x="613.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 1.72%)</title><rect x="610" y="1012" width="20" height="15" fill="rgb(238,221,34)"/><text x="613.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.72%)</title><rect x="610" y="1028" width="20" height="15" fill="rgb(228,90,25)"/><text x="613.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.72%)</title><rect x="610" y="1044" width="20" height="15" fill="rgb(218,16,15)"/><text x="613.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.72%)</title><rect x="610" y="1060" width="20" height="15" fill="rgb(206,223,41)"/><text x="613.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.72%)</title><rect x="610" y="1076" width="20" height="15" fill="rgb(241,136,42)"/><text x="613.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.72%)</title><rect x="610" y="1092" width="20" height="15" fill="rgb(236,218,39)"/><text x="613.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 1.44%)</title><rect x="613" y="1108" width="17" height="15" fill="rgb(214,82,4)"/><text x="616.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.44%)</title><rect x="613" y="1124" width="17" height="15" fill="rgb(216,2,53)"/><text x="616.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="613" y="1140" width="17" height="15" fill="rgb(242,172,1)"/><text x="616.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.44%)</title><rect x="613" y="1156" width="17" height="15" fill="rgb(245,183,47)"/><text x="616.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.44%)</title><rect x="613" y="1172" width="17" height="15" fill="rgb(230,87,29)"/><text x="616.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.44%)</title><rect x="613" y="1188" width="17" height="15" fill="rgb(237,139,40)"/><text x="616.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.44%)</title><rect x="613" y="1204" width="17" height="15" fill="rgb(210,44,8)"/><text x="616.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="613" y="1220" width="17" height="15" fill="rgb(231,61,43)"/><text x="616.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (5 samples, 1.44%)</title><rect x="613" y="1236" width="17" height="15" fill="rgb(225,146,48)"/><text x="616.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.44%)</title><rect x="613" y="1252" width="17" height="15" fill="rgb(212,92,11)"/><text x="616.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="613" y="1268" width="17" height="15" fill="rgb(254,30,26)"/><text x="616.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.44%)</title><rect x="613" y="1284" width="17" height="15" fill="rgb(213,227,11)"/><text x="616.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.44%)</title><rect x="613" y="1300" width="17" height="15" fill="rgb(250,21,49)"/><text x="616.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.44%)</title><rect x="613" y="1316" width="17" height="15" fill="rgb(214,24,36)"/><text x="616.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.44%)</title><rect x="613" y="1332" width="17" height="15" fill="rgb(250,63,17)"/><text x="616.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="613" y="1348" width="17" height="15" fill="rgb(217,161,26)"/><text x="616.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (5 samples, 1.44%)</title><rect x="613" y="1364" width="17" height="15" fill="rgb(210,171,41)"/><text x="616.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.44%)</title><rect x="613" y="1380" width="17" height="15" fill="rgb(249,96,24)"/><text x="616.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.44%)</title><rect x="613" y="1396" width="17" height="15" fill="rgb(211,139,22)"/><text x="616.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.44%)</title><rect x="613" y="1412" width="17" height="15" fill="rgb(227,52,51)"/><text x="616.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.44%)</title><rect x="613" y="1428" width="17" height="15" fill="rgb(207,85,44)"/><text x="616.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.44%)</title><rect x="613" y="1444" width="17" height="15" fill="rgb(207,208,23)"/><text x="616.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (3 samples, 0.86%)</title><rect x="620" y="1460" width="10" height="15" fill="rgb(218,30,3)"/><text x="623.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="620" y="1476" width="10" height="15" fill="rgb(246,93,37)"/><text x="623.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="620" y="1492" width="10" height="15" fill="rgb(205,18,3)"/><text x="623.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="620" y="1508" width="10" height="15" fill="rgb(223,7,20)"/><text x="623.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="620" y="1524" width="10" height="15" fill="rgb(210,70,34)"/><text x="623.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="620" y="1540" width="10" height="15" fill="rgb(225,23,9)"/><text x="623.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (3 samples, 0.86%)</title><rect x="620" y="1556" width="10" height="15" fill="rgb(239,131,33)"/><text x="623.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (3 samples, 0.86%)</title><rect x="620" y="1572" width="10" height="15" fill="rgb(238,101,1)"/><text x="623.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="620" y="1588" width="10" height="15" fill="rgb(251,2,9)"/><text x="623.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="620" y="1604" width="10" height="15" fill="rgb(232,186,42)"/><text x="623.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="620" y="1620" width="10" height="15" fill="rgb(242,190,27)"/><text x="623.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="620" y="1636" width="10" height="15" fill="rgb(214,36,27)"/><text x="623.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="620" y="1652" width="10" height="15" fill="rgb(222,175,45)"/><text x="623.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.29%)</title><rect x="627" y="1668" width="3" height="15" fill="rgb(244,35,11)"/><text x="630.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.29%)</title><rect x="627" y="1684" width="3" height="15" fill="rgb(243,109,43)"/><text x="630.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="627" y="1700" width="3" height="15" fill="rgb(222,8,3)"/><text x="630.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="627" y="1716" width="3" height="15" fill="rgb(223,144,13)"/><text x="630.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="627" y="1732" width="3" height="15" fill="rgb(243,64,42)"/><text x="630.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="627" y="1748" width="3" height="15" fill="rgb(249,151,21)"/><text x="630.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="627" y="1764" width="3" height="15" fill="rgb(218,110,42)"/><text x="630.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.29%)</title><rect x="627" y="1780" width="3" height="15" fill="rgb(210,100,31)"/><text x="630.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="627" y="1796" width="3" height="15" fill="rgb(223,13,34)"/><text x="630.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="627" y="1812" width="3" height="15" fill="rgb(222,80,14)"/><text x="630.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="627" y="1828" width="3" height="15" fill="rgb(231,116,1)"/><text x="630.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="627" y="1844" width="3" height="15" fill="rgb(225,29,13)"/><text x="630.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="627" y="1860" width="3" height="15" fill="rgb(213,161,30)"/><text x="630.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.29%)</title><rect x="627" y="1876" width="3" height="15" fill="rgb(205,46,13)"/><text x="630.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="627" y="1892" width="3" height="15" fill="rgb(221,90,1)"/><text x="630.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="627" y="1908" width="3" height="15" fill="rgb(225,143,23)"/><text x="630.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="627" y="1924" width="3" height="15" fill="rgb(246,91,51)"/><text x="630.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="627" y="1940" width="3" height="15" fill="rgb(225,73,33)"/><text x="630.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="627" y="1956" width="3" height="15" fill="rgb(207,114,38)"/><text x="630.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:39) (1 samples, 0.29%)</title><rect x="627" y="1972" width="3" height="15" fill="rgb(249,75,24)"/><text x="630.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="627" y="1988" width="3" height="15" fill="rgb(247,97,10)"/><text x="630.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="627" y="2004" width="3" height="15" fill="rgb(206,151,22)"/><text x="630.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="627" y="2020" width="3" height="15" fill="rgb(250,162,46)"/><text x="630.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="627" y="2036" width="3" height="15" fill="rgb(238,47,15)"/><text x="630.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="627" y="2052" width="3" height="15" fill="rgb(237,50,46)"/><text x="630.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="627" y="2068" width="3" height="15" fill="rgb(252,15,38)"/><text x="630.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="627" y="2084" width="3" height="15" fill="rgb(226,81,5)"/><text x="630.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/events.py:14) (1 samples, 0.29%)</title><rect x="627" y="2100" width="3" height="15" fill="rgb(209,151,34)"/><text x="630.00" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="627" y="2116" width="3" height="15" fill="rgb(216,115,24)"/><text x="630.00" y="2126.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.29%)</title><rect x="627" y="2132" width="3" height="15" fill="rgb(222,130,17)"/><text x="630.00" y="2142.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:105) (1 samples, 0.29%)</title><rect x="627" y="2148" width="3" height="15" fill="rgb(231,183,53)"/><text x="630.00" y="2158.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:4) (26 samples, 7.47%)</title><rect x="545" y="52" width="88" height="15" fill="rgb(226,7,24)"/><text x="548.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (26 samples, 7.47%)</title><rect x="545" y="68" width="88" height="15" fill="rgb(235,36,49)"/><text x="548.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (26 samples, 7.47%)</title><rect x="545" y="84" width="88" height="15" fill="rgb(228,43,5)"/><text x="548.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (26 samples, 7.47%)</title><rect x="545" y="100" width="88" height="15" fill="rgb(241,226,44)"/><text x="548.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (26 samples, 7.47%)</title><rect x="545" y="116" width="88" height="15" fill="rgb(222,15,38)"/><text x="548.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (26 samples, 7.47%)</title><rect x="545" y="132" width="88" height="15" fill="rgb(245,5,43)"/><text x="548.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (16 samples, 4.60%)</title><rect x="579" y="148" width="54" height="15" fill="rgb(219,101,44)"/><text x="582.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 4.60%)</title><rect x="579" y="164" width="54" height="15" fill="rgb(222,146,34)"/><text x="582.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 4.60%)</title><rect x="579" y="180" width="54" height="15" fill="rgb(231,225,33)"/><text x="582.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 4.60%)</title><rect x="579" y="196" width="54" height="15" fill="rgb(210,9,12)"/><text x="582.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 4.60%)</title><rect x="579" y="212" width="54" height="15" fill="rgb(215,60,47)"/><text x="582.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 4.60%)</title><rect x="579" y="228" width="54" height="15" fill="rgb(213,172,41)"/><text x="582.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (15 samples, 4.31%)</title><rect x="583" y="244" width="50" height="15" fill="rgb(247,12,17)"/><text x="586.00" y="254.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 4.31%)</title><rect x="583" y="260" width="50" height="15" fill="rgb(242,103,31)"/><text x="586.00" y="270.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 4.31%)</title><rect x="583" y="276" width="50" height="15" fill="rgb(252,203,8)"/><text x="586.00" y="286.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 4.31%)</title><rect x="583" y="292" width="50" height="15" fill="rgb(208,187,20)"/><text x="586.00" y="302.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 4.31%)</title><rect x="583" y="308" width="50" height="15" fill="rgb(217,16,45)"/><text x="586.00" y="318.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 4.31%)</title><rect x="583" y="324" width="50" height="15" fill="rgb(249,103,9)"/><text x="586.00" y="334.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (15 samples, 4.31%)</title><rect x="583" y="340" width="50" height="15" fill="rgb(239,179,21)"/><text x="586.00" y="350.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 4.31%)</title><rect x="583" y="356" width="50" height="15" fill="rgb(253,185,40)"/><text x="586.00" y="366.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 4.31%)</title><rect x="583" y="372" width="50" height="15" fill="rgb(224,106,43)"/><text x="586.00" y="382.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 4.31%)</title><rect x="583" y="388" width="50" height="15" fill="rgb(209,148,40)"/><text x="586.00" y="398.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 4.31%)</title><rect x="583" y="404" width="50" height="15" fill="rgb(251,136,16)"/><text x="586.00" y="414.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 4.31%)</title><rect x="583" y="420" width="50" height="15" fill="rgb(244,196,23)"/><text x="586.00" y="430.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 2.01%)</title><rect x="610" y="436" width="23" height="15" fill="rgb(253,46,14)"/><text x="613.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="610" y="452" width="23" height="15" fill="rgb(238,72,47)"/><text x="613.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.01%)</title><rect x="610" y="468" width="23" height="15" fill="rgb(232,71,3)"/><text x="613.00" y="478.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="610" y="484" width="23" height="15" fill="rgb(249,83,41)"/><text x="613.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="610" y="500" width="23" height="15" fill="rgb(224,191,47)"/><text x="613.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.01%)</title><rect x="610" y="516" width="23" height="15" fill="rgb(246,99,6)"/><text x="613.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.01%)</title><rect x="610" y="532" width="23" height="15" fill="rgb(235,57,39)"/><text x="613.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.01%)</title><rect x="610" y="548" width="23" height="15" fill="rgb(211,23,29)"/><text x="613.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="610" y="564" width="23" height="15" fill="rgb(239,86,0)"/><text x="613.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 2.01%)</title><rect x="610" y="580" width="23" height="15" fill="rgb(213,73,28)"/><text x="613.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.01%)</title><rect x="610" y="596" width="23" height="15" fill="rgb(243,193,52)"/><text x="613.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.01%)</title><rect x="610" y="612" width="23" height="15" fill="rgb(223,215,41)"/><text x="613.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.01%)</title><rect x="610" y="628" width="23" height="15" fill="rgb(215,28,1)"/><text x="613.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.01%)</title><rect x="610" y="644" width="23" height="15" fill="rgb(221,153,37)"/><text x="613.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.01%)</title><rect x="610" y="660" width="23" height="15" fill="rgb(245,61,28)"/><text x="613.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:17) (1 samples, 0.29%)</title><rect x="630" y="676" width="3" height="15" fill="rgb(222,34,38)"/><text x="633.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="630" y="692" width="3" height="15" fill="rgb(220,23,40)"/><text x="633.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="630" y="708" width="3" height="15" fill="rgb(218,197,54)"/><text x="633.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="630" y="724" width="3" height="15" fill="rgb(219,158,17)"/><text x="633.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="630" y="740" width="3" height="15" fill="rgb(220,13,19)"/><text x="633.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="630" y="756" width="3" height="15" fill="rgb(206,14,33)"/><text x="633.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="630" y="772" width="3" height="15" fill="rgb(207,99,9)"/><text x="633.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="630" y="788" width="3" height="15" fill="rgb(244,3,20)"/><text x="633.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="630" y="804" width="3" height="15" fill="rgb(254,80,12)"/><text x="633.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/__init__.py:9) (1 samples, 0.29%)</title><rect x="630" y="820" width="3" height="15" fill="rgb(208,92,29)"/><text x="633.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="630" y="836" width="3" height="15" fill="rgb(218,195,10)"/><text x="633.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="630" y="852" width="3" height="15" fill="rgb(238,23,54)"/><text x="633.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="630" y="868" width="3" height="15" fill="rgb(205,160,7)"/><text x="633.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="630" y="884" width="3" height="15" fill="rgb(211,44,39)"/><text x="633.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="630" y="900" width="3" height="15" fill="rgb(225,169,36)"/><text x="633.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="630" y="916" width="3" height="15" fill="rgb(251,142,37)"/><text x="633.00" y="926.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.29%)</title><rect x="633" y="164" width="4" height="15" fill="rgb(249,113,1)"/><text x="636.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.29%)</title><rect x="633" y="180" width="4" height="15" fill="rgb(222,219,36)"/><text x="636.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.29%)</title><rect x="633" y="196" width="4" height="15" fill="rgb(237,86,20)"/><text x="636.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.29%)</title><rect x="633" y="212" width="4" height="15" fill="rgb(240,175,28)"/><text x="636.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.29%)</title><rect x="633" y="228" width="4" height="15" fill="rgb(242,55,42)"/><text x="636.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.29%)</title><rect x="633" y="244" width="4" height="15" fill="rgb(206,177,29)"/><text x="636.00" y="254.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.29%)</title><rect x="633" y="260" width="4" height="15" fill="rgb(226,156,37)"/><text x="636.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.29%)</title><rect x="633" y="276" width="4" height="15" fill="rgb(254,94,43)"/><text x="636.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.29%)</title><rect x="633" y="292" width="4" height="15" fill="rgb(221,104,53)"/><text x="636.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.29%)</title><rect x="633" y="308" width="4" height="15" fill="rgb(228,42,40)"/><text x="636.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.29%)</title><rect x="633" y="324" width="4" height="15" fill="rgb(236,227,44)"/><text x="636.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.29%)</title><rect x="633" y="340" width="4" height="15" fill="rgb(244,108,52)"/><text x="636.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.29%)</title><rect x="633" y="356" width="4" height="15" fill="rgb(243,70,54)"/><text x="636.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="633" y="372" width="4" height="15" fill="rgb(225,154,22)"/><text x="636.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.29%)</title><rect x="633" y="388" width="4" height="15" fill="rgb(224,97,21)"/><text x="636.00" y="398.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:18) (2 samples, 0.57%)</title><rect x="633" y="100" width="7" height="15" fill="rgb(241,21,9)"/><text x="636.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.57%)</title><rect x="633" y="116" width="7" height="15" fill="rgb(210,112,8)"/><text x="636.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.57%)</title><rect x="633" y="132" width="7" height="15" fill="rgb(221,97,28)"/><text x="636.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.57%)</title><rect x="633" y="148" width="7" height="15" fill="rgb(244,18,2)"/><text x="636.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.29%)</title><rect x="637" y="164" width="3" height="15" fill="rgb(214,158,1)"/><text x="640.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.29%)</title><rect x="647" y="148" width="3" height="15" fill="rgb(233,182,41)"/><text x="650.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.29%)</title><rect x="650" y="164" width="4" height="15" fill="rgb(253,26,47)"/><text x="653.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (4 samples, 1.15%)</title><rect x="654" y="164" width="13" height="15" fill="rgb(205,196,18)"/><text x="657.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.29%)</title><rect x="667" y="164" width="4" height="15" fill="rgb(248,132,1)"/><text x="670.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.29%)</title><rect x="681" y="180" width="3" height="15" fill="rgb(237,165,1)"/><text x="684.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 1.72%)</title><rect x="684" y="180" width="21" height="15" fill="rgb(244,25,34)"/><text x="687.00" y="190.50"></text></g><g><title>0x7f736bd1412b (libc-2.29.so) (1 samples, 0.29%)</title><rect x="701" y="196" width="4" height="15" fill="rgb(236,95,39)"/><text x="704.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.29%)</title><rect x="739" y="260" width="3" height="15" fill="rgb(236,55,36)"/><text x="742.00" y="270.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.29%)</title><rect x="742" y="260" width="3" height="15" fill="rgb(230,59,25)"/><text x="745.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.29%)</title><rect x="742" y="276" width="3" height="15" fill="rgb(209,199,54)"/><text x="745.00" y="286.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.57%)</title><rect x="745" y="260" width="7" height="15" fill="rgb(206,185,16)"/><text x="748.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.29%)</title><rect x="749" y="276" width="3" height="15" fill="rgb(239,229,32)"/><text x="752.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.29%)</title><rect x="752" y="292" width="3" height="15" fill="rgb(206,33,15)"/><text x="755.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c:504) (1 samples, 0.29%)</title><rect x="752" y="308" width="3" height="15" fill="rgb(209,65,18)"/><text x="755.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.57%)</title><rect x="752" y="260" width="7" height="15" fill="rgb(217,45,42)"/><text x="755.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.57%)</title><rect x="752" y="276" width="7" height="15" fill="rgb(244,155,13)"/><text x="755.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.29%)</title><rect x="755" y="292" width="4" height="15" fill="rgb(210,204,15)"/><text x="758.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.29%)</title><rect x="755" y="308" width="4" height="15" fill="rgb(248,193,0)"/><text x="758.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.86%)</title><rect x="762" y="308" width="10" height="15" fill="rgb(242,91,34)"/><text x="765.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.86%)</title><rect x="762" y="324" width="10" height="15" fill="rgb(251,64,39)"/><text x="765.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.86%)</title><rect x="762" y="340" width="10" height="15" fill="rgb(218,21,24)"/><text x="765.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.86%)</title><rect x="762" y="356" width="10" height="15" fill="rgb(239,78,15)"/><text x="765.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.86%)</title><rect x="762" y="372" width="10" height="15" fill="rgb(241,167,6)"/><text x="765.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.86%)</title><rect x="762" y="388" width="10" height="15" fill="rgb(252,165,1)"/><text x="765.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.57%)</title><rect x="772" y="324" width="7" height="15" fill="rgb(253,88,22)"/><text x="775.00" y="334.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.29%)</title><rect x="776" y="340" width="3" height="15" fill="rgb(216,165,52)"/><text x="779.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.29%)</title><rect x="779" y="324" width="4" height="15" fill="rgb(253,68,6)"/><text x="782.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.29%)</title><rect x="779" y="340" width="4" height="15" fill="rgb(222,125,11)"/><text x="782.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.29%)</title><rect x="783" y="340" width="3" height="15" fill="rgb(223,220,9)"/><text x="786.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c:2487) (1 samples, 0.29%)</title><rect x="783" y="356" width="3" height="15" fill="rgb(215,125,5)"/><text x="786.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:444) (1 samples, 0.29%)</title><rect x="786" y="356" width="3" height="15" fill="rgb(230,111,21)"/><text x="789.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.29%)</title><rect x="789" y="356" width="4" height="15" fill="rgb(238,11,5)"/><text x="792.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.29%)</title><rect x="789" y="372" width="4" height="15" fill="rgb(208,99,38)"/><text x="792.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.29%)</title><rect x="789" y="388" width="4" height="15" fill="rgb(238,123,1)"/><text x="792.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="789" y="404" width="4" height="15" fill="rgb(248,20,14)"/><text x="792.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.29%)</title><rect x="789" y="420" width="4" height="15" fill="rgb(227,104,0)"/><text x="792.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.29%)</title><rect x="789" y="436" width="4" height="15" fill="rgb(215,203,12)"/><text x="792.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.29%)</title><rect x="789" y="452" width="4" height="15" fill="rgb(216,156,48)"/><text x="792.00" y="462.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.29%)</title><rect x="789" y="468" width="4" height="15" fill="rgb(232,194,4)"/><text x="792.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.29%)</title><rect x="793" y="356" width="3" height="15" fill="rgb(246,45,36)"/><text x="796.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.29%)</title><rect x="793" y="372" width="3" height="15" fill="rgb(235,85,25)"/><text x="796.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.29%)</title><rect x="793" y="388" width="3" height="15" fill="rgb(228,178,52)"/><text x="796.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.29%)</title><rect x="793" y="404" width="3" height="15" fill="rgb(206,135,52)"/><text x="796.00" y="414.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (19 samples, 5.46%)</title><rect x="735" y="244" width="65" height="15" fill="rgb(244,142,48)"/><text x="738.00" y="254.50">norm_l1..</text></g><g><title>array_sum (methods.c:2215) (12 samples, 3.45%)</title><rect x="759" y="260" width="41" height="15" fill="rgb(225,171,47)"/><text x="762.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 3.45%)</title><rect x="759" y="276" width="41" height="15" fill="rgb(236,40,10)"/><text x="762.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 3.16%)</title><rect x="762" y="292" width="38" height="15" fill="rgb(243,129,11)"/><text x="765.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 2.30%)</title><rect x="772" y="308" width="28" height="15" fill="rgb(226,35,17)"/><text x="775.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.44%)</title><rect x="783" y="324" width="17" height="15" fill="rgb(229,143,18)"/><text x="786.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 1.15%)</title><rect x="786" y="340" width="14" height="15" fill="rgb(217,85,50)"/><text x="789.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.29%)</title><rect x="796" y="356" width="4" height="15" fill="rgb(220,36,10)"/><text x="799.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.29%)</title><rect x="796" y="372" width="4" height="15" fill="rgb(209,105,15)"/><text x="799.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.29%)</title><rect x="803" y="260" width="3" height="15" fill="rgb(235,64,4)"/><text x="806.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.57%)</title><rect x="806" y="260" width="7" height="15" fill="rgb(227,44,34)"/><text x="809.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (2 samples, 0.57%)</title><rect x="806" y="276" width="7" height="15" fill="rgb(205,97,33)"/><text x="809.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.29%)</title><rect x="813" y="260" width="4" height="15" fill="rgb(242,74,29)"/><text x="816.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.29%)</title><rect x="813" y="276" width="4" height="15" fill="rgb(217,131,53)"/><text x="816.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="817" y="260" width="3" height="15" fill="rgb(249,144,52)"/><text x="820.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="817" y="276" width="3" height="15" fill="rgb(228,108,12)"/><text x="820.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.29%)</title><rect x="817" y="292" width="3" height="15" fill="rgb(208,85,31)"/><text x="820.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.29%)</title><rect x="817" y="308" width="3" height="15" fill="rgb(221,151,6)"/><text x="820.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="820" y="276" width="3" height="15" fill="rgb(235,184,16)"/><text x="823.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.29%)</title><rect x="820" y="292" width="3" height="15" fill="rgb(233,121,1)"/><text x="823.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.29%)</title><rect x="820" y="308" width="3" height="15" fill="rgb(254,29,36)"/><text x="823.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.29%)</title><rect x="820" y="324" width="3" height="15" fill="rgb(246,217,21)"/><text x="823.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.29%)</title><rect x="820" y="340" width="3" height="15" fill="rgb(246,211,40)"/><text x="823.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1523) (1 samples, 0.29%)</title><rect x="820" y="356" width="3" height="15" fill="rgb(226,61,38)"/><text x="823.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.29%)</title><rect x="823" y="276" width="4" height="15" fill="rgb(208,182,4)"/><text x="826.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.29%)</title><rect x="823" y="292" width="4" height="15" fill="rgb(223,29,8)"/><text x="826.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.29%)</title><rect x="827" y="308" width="3" height="15" fill="rgb(207,4,4)"/><text x="830.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.29%)</title><rect x="827" y="324" width="3" height="15" fill="rgb(216,159,25)"/><text x="830.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.29%)</title><rect x="827" y="340" width="3" height="15" fill="rgb(252,133,54)"/><text x="830.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:673) (1 samples, 0.29%)</title><rect x="830" y="324" width="3" height="15" fill="rgb(221,101,17)"/><text x="833.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.29%)</title><rect x="833" y="324" width="4" height="15" fill="rgb(234,188,8)"/><text x="836.00" y="334.50"></text></g><g><title>0x7f736bcf3902 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="837" y="340" width="3" height="15" fill="rgb(236,154,18)"/><text x="840.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 10.34%)</title><rect x="722" y="196" width="122" height="15" fill="rgb(218,98,13)"/><text x="725.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 10.06%)</title><rect x="725" y="212" width="119" height="15" fill="rgb(252,178,11)"/><text x="728.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (35 samples, 10.06%)</title><rect x="725" y="228" width="119" height="15" fill="rgb(217,80,47)"/><text x="728.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (13 samples, 3.74%)</title><rect x="800" y="244" width="44" height="15" fill="rgb(220,68,15)"/><text x="803.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.01%)</title><rect x="820" y="260" width="24" height="15" fill="rgb(237,117,33)"/><text x="823.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.44%)</title><rect x="827" y="276" width="17" height="15" fill="rgb(211,115,34)"/><text x="830.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.44%)</title><rect x="827" y="292" width="17" height="15" fill="rgb(217,43,54)"/><text x="830.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (4 samples, 1.15%)</title><rect x="830" y="308" width="14" height="15" fill="rgb(250,91,0)"/><text x="833.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (2 samples, 0.57%)</title><rect x="837" y="324" width="7" height="15" fill="rgb(209,100,42)"/><text x="840.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="840" y="340" width="4" height="15" fill="rgb(213,142,22)"/><text x="843.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.29%)</title><rect x="844" y="196" width="3" height="15" fill="rgb(230,215,19)"/><text x="847.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (2 samples, 0.57%)</title><rect x="861" y="244" width="6" height="15" fill="rgb(250,31,14)"/><text x="864.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.29%)</title><rect x="867" y="260" width="4" height="15" fill="rgb(206,164,10)"/><text x="870.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.29%)</title><rect x="874" y="292" width="4" height="15" fill="rgb(226,46,4)"/><text x="877.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.29%)</title><rect x="878" y="308" width="3" height="15" fill="rgb(226,102,46)"/><text x="881.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.29%)</title><rect x="878" y="324" width="3" height="15" fill="rgb(253,105,17)"/><text x="881.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.29%)</title><rect x="878" y="340" width="3" height="15" fill="rgb(243,60,12)"/><text x="881.00" y="350.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.29%)</title><rect x="881" y="308" width="3" height="15" fill="rgb(247,21,54)"/><text x="884.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.29%)</title><rect x="881" y="324" width="3" height="15" fill="rgb(220,209,25)"/><text x="884.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.29%)</title><rect x="881" y="340" width="3" height="15" fill="rgb(219,104,30)"/><text x="884.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:233) (1 samples, 0.29%)</title><rect x="884" y="324" width="4" height="15" fill="rgb(229,1,41)"/><text x="887.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:197) (1 samples, 0.29%)</title><rect x="884" y="340" width="4" height="15" fill="rgb(234,10,29)"/><text x="887.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.29%)</title><rect x="888" y="324" width="3" height="15" fill="rgb(244,21,30)"/><text x="891.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="888" y="340" width="3" height="15" fill="rgb(251,95,22)"/><text x="891.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.29%)</title><rect x="891" y="324" width="4" height="15" fill="rgb(237,159,47)"/><text x="894.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.29%)</title><rect x="891" y="340" width="4" height="15" fill="rgb(247,138,5)"/><text x="894.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="891" y="356" width="4" height="15" fill="rgb(230,181,39)"/><text x="894.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="891" y="372" width="4" height="15" fill="rgb(241,15,50)"/><text x="894.00" y="382.50"></text></g><g><title>sgemv_kernel_4x1 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="891" y="388" width="4" height="15" fill="rgb(205,66,52)"/><text x="894.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (13 samples, 3.74%)</title><rect x="854" y="228" width="44" height="15" fill="rgb(236,85,20)"/><text x="857.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (9 samples, 2.59%)</title><rect x="867" y="244" width="31" height="15" fill="rgb(254,5,4)"/><text x="870.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (8 samples, 2.30%)</title><rect x="871" y="260" width="27" height="15" fill="rgb(241,138,30)"/><text x="874.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 2.01%)</title><rect x="874" y="276" width="24" height="15" fill="rgb(232,155,14)"/><text x="877.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (6 samples, 1.72%)</title><rect x="878" y="292" width="20" height="15" fill="rgb(232,221,23)"/><text x="881.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 1.15%)</title><rect x="884" y="308" width="14" height="15" fill="rgb(207,199,7)"/><text x="887.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.29%)</title><rect x="895" y="324" width="3" height="15" fill="rgb(213,80,39)"/><text x="898.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.29%)</title><rect x="895" y="340" width="3" height="15" fill="rgb(210,167,36)"/><text x="898.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="898" y="244" width="3" height="15" fill="rgb(254,37,17)"/><text x="901.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="898" y="260" width="3" height="15" fill="rgb(218,121,47)"/><text x="901.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="898" y="276" width="3" height="15" fill="rgb(216,218,34)"/><text x="901.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.29%)</title><rect x="898" y="292" width="3" height="15" fill="rgb(222,31,38)"/><text x="901.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.29%)</title><rect x="901" y="260" width="4" height="15" fill="rgb(239,171,21)"/><text x="904.00" y="270.50"></text></g><g><title>0x7f736af14c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="901" y="276" width="4" height="15" fill="rgb(253,41,10)"/><text x="904.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.29%)</title><rect x="905" y="260" width="3" height="15" fill="rgb(250,217,36)"/><text x="908.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.29%)</title><rect x="905" y="276" width="3" height="15" fill="rgb(238,75,46)"/><text x="908.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.29%)</title><rect x="905" y="292" width="3" height="15" fill="rgb(225,182,25)"/><text x="908.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.29%)</title><rect x="908" y="292" width="3" height="15" fill="rgb(212,3,7)"/><text x="911.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.29%)</title><rect x="908" y="308" width="3" height="15" fill="rgb(239,81,23)"/><text x="911.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.29%)</title><rect x="908" y="324" width="3" height="15" fill="rgb(220,110,30)"/><text x="911.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.29%)</title><rect x="908" y="340" width="3" height="15" fill="rgb(210,77,47)"/><text x="911.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.29%)</title><rect x="911" y="292" width="4" height="15" fill="rgb(253,103,53)"/><text x="914.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.29%)</title><rect x="911" y="308" width="4" height="15" fill="rgb(249,153,21)"/><text x="914.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.29%)</title><rect x="915" y="292" width="3" height="15" fill="rgb(238,101,8)"/><text x="918.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.01%)</title><rect x="901" y="244" width="24" height="15" fill="rgb(232,160,6)"/><text x="904.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.44%)</title><rect x="908" y="260" width="17" height="15" fill="rgb(231,51,20)"/><text x="911.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.44%)</title><rect x="908" y="276" width="17" height="15" fill="rgb(218,202,14)"/><text x="911.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.57%)</title><rect x="918" y="292" width="7" height="15" fill="rgb(212,115,37)"/><text x="921.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (2 samples, 0.57%)</title><rect x="918" y="308" width="7" height="15" fill="rgb(221,177,8)"/><text x="921.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (9 samples, 2.59%)</title><rect x="898" y="228" width="30" height="15" fill="rgb(243,27,14)"/><text x="901.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.29%)</title><rect x="925" y="244" width="3" height="15" fill="rgb(206,173,53)"/><text x="928.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.29%)</title><rect x="925" y="260" width="3" height="15" fill="rgb(254,120,35)"/><text x="928.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.29%)</title><rect x="925" y="276" width="3" height="15" fill="rgb(252,212,13)"/><text x="928.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="932" y="244" width="3" height="15" fill="rgb(219,187,26)"/><text x="935.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="932" y="260" width="3" height="15" fill="rgb(242,161,31)"/><text x="935.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.29%)</title><rect x="932" y="276" width="3" height="15" fill="rgb(214,135,23)"/><text x="935.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.29%)</title><rect x="932" y="292" width="3" height="15" fill="rgb(228,125,5)"/><text x="935.00" y="302.50"></text></g><g><title>0x7f736bd09e50 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="932" y="308" width="3" height="15" fill="rgb(242,182,26)"/><text x="935.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.29%)</title><rect x="935" y="260" width="4" height="15" fill="rgb(232,166,52)"/><text x="938.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1044) (1 samples, 0.29%)</title><rect x="935" y="276" width="4" height="15" fill="rgb(233,196,3)"/><text x="938.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3260) (1 samples, 0.29%)</title><rect x="939" y="260" width="3" height="15" fill="rgb(254,53,47)"/><text x="942.00" y="270.50"></text></g><g><title>solve_diophantine (mem_overlap.c:545) (1 samples, 0.29%)</title><rect x="942" y="324" width="3" height="15" fill="rgb(223,161,5)"/><text x="945.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (6 samples, 1.72%)</title><rect x="928" y="228" width="21" height="15" fill="rgb(226,32,44)"/><text x="931.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.15%)</title><rect x="935" y="244" width="14" height="15" fill="rgb(215,114,28)"/><text x="938.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.57%)</title><rect x="942" y="260" width="7" height="15" fill="rgb(215,0,34)"/><text x="945.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.57%)</title><rect x="942" y="276" width="7" height="15" fill="rgb(236,143,51)"/><text x="945.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.57%)</title><rect x="942" y="292" width="7" height="15" fill="rgb(233,161,12)"/><text x="945.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.57%)</title><rect x="942" y="308" width="7" height="15" fill="rgb(225,210,0)"/><text x="945.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.29%)</title><rect x="945" y="324" width="4" height="15" fill="rgb(238,209,51)"/><text x="948.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:398) (1 samples, 0.29%)</title><rect x="945" y="340" width="4" height="15" fill="rgb(241,55,50)"/><text x="948.00" y="350.50"></text></g><g><title>add_128 (npy_extint128.h:139) (1 samples, 0.29%)</title><rect x="945" y="356" width="4" height="15" fill="rgb(214,163,0)"/><text x="948.00" y="366.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.29%)</title><rect x="949" y="244" width="3" height="15" fill="rgb(206,53,13)"/><text x="952.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.29%)</title><rect x="959" y="292" width="3" height="15" fill="rgb(217,223,28)"/><text x="962.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.29%)</title><rect x="962" y="292" width="4" height="15" fill="rgb(206,112,42)"/><text x="965.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.29%)</title><rect x="966" y="308" width="3" height="15" fill="rgb(233,59,6)"/><text x="969.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.29%)</title><rect x="966" y="324" width="3" height="15" fill="rgb(226,127,21)"/><text x="969.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.29%)</title><rect x="969" y="324" width="3" height="15" fill="rgb(207,197,35)"/><text x="972.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="969" y="340" width="3" height="15" fill="rgb(233,151,37)"/><text x="972.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="969" y="356" width="3" height="15" fill="rgb(205,159,12)"/><text x="972.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.29%)</title><rect x="969" y="372" width="3" height="15" fill="rgb(236,196,48)"/><text x="972.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (38 samples, 10.92%)</title><rect x="847" y="196" width="129" height="15" fill="rgb(237,26,1)"/><text x="850.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 10.34%)</title><rect x="854" y="212" width="122" height="15" fill="rgb(240,83,12)"/><text x="857.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (8 samples, 2.30%)</title><rect x="949" y="228" width="27" height="15" fill="rgb(236,34,41)"/><text x="952.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 2.01%)</title><rect x="952" y="244" width="24" height="15" fill="rgb(243,57,43)"/><text x="955.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.72%)</title><rect x="956" y="260" width="20" height="15" fill="rgb(231,19,36)"/><text x="959.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.72%)</title><rect x="956" y="276" width="20" height="15" fill="rgb(245,208,20)"/><text x="959.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.86%)</title><rect x="966" y="292" width="10" height="15" fill="rgb(231,186,11)"/><text x="969.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.57%)</title><rect x="969" y="308" width="7" height="15" fill="rgb(221,86,44)"/><text x="972.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (1 samples, 0.29%)</title><rect x="972" y="324" width="4" height="15" fill="rgb(205,123,15)"/><text x="975.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.29%)</title><rect x="972" y="340" width="4" height="15" fill="rgb(217,9,12)"/><text x="975.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2217) (1 samples, 0.29%)</title><rect x="972" y="356" width="4" height="15" fill="rgb(225,18,32)"/><text x="975.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (84 samples, 24.14%)</title><rect x="705" y="180" width="284" height="15" fill="rgb(207,138,48)"/><text x="708.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (4 samples, 1.15%)</title><rect x="976" y="196" width="13" height="15" fill="rgb(212,158,47)"/><text x="979.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.86%)</title><rect x="989" y="180" width="11" height="15" fill="rgb(238,29,22)"/><text x="992.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.29%)</title><rect x="1000" y="180" width="3" height="15" fill="rgb(241,126,33)"/><text x="1003.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (8 samples, 2.30%)</title><rect x="1003" y="180" width="27" height="15" fill="rgb(236,159,3)"/><text x="1006.00" y="190.50">r..</text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:45) (118 samples, 33.91%)</title><rect x="633" y="52" width="401" height="15" fill="rgb(244,194,50)"/><text x="636.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:44) (118 samples, 33.91%)</title><rect x="633" y="68" width="401" height="15" fill="rgb(251,114,31)"/><text x="636.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:29) (118 samples, 33.91%)</title><rect x="633" y="84" width="401" height="15" fill="rgb(215,61,43)"/><text x="636.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:23) (116 samples, 33.33%)</title><rect x="640" y="100" width="394" height="15" fill="rgb(221,106,53)"/><text x="643.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (116 samples, 33.33%)</title><rect x="640" y="116" width="394" height="15" fill="rgb(246,13,29)"/><text x="643.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (115 samples, 33.05%)</title><rect x="644" y="132" width="390" height="15" fill="rgb(214,190,2)"/><text x="647.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (113 samples, 32.47%)</title><rect x="650" y="148" width="384" height="15" fill="rgb(233,70,29)"/><text x="653.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (107 samples, 30.75%)</title><rect x="671" y="164" width="363" height="15" fill="rgb(248,61,38)"/><text x="674.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.29%)</title><rect x="1030" y="180" width="4" height="15" fill="rgb(220,111,33)"/><text x="1033.00" y="190.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:28) (1 samples, 0.29%)</title><rect x="1034" y="84" width="3" height="15" fill="rgb(240,24,7)"/><text x="1037.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.29%)</title><rect x="1034" y="100" width="3" height="15" fill="rgb(242,44,44)"/><text x="1037.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.29%)</title><rect x="1034" y="116" width="3" height="15" fill="rgb(225,145,32)"/><text x="1037.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.29%)</title><rect x="1034" y="132" width="3" height="15" fill="rgb(231,161,11)"/><text x="1037.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.29%)</title><rect x="1034" y="148" width="3" height="15" fill="rgb(250,22,23)"/><text x="1037.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.29%)</title><rect x="1034" y="164" width="3" height="15" fill="rgb(225,197,25)"/><text x="1037.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1034" y="180" width="3" height="15" fill="rgb(230,65,17)"/><text x="1037.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1034" y="196" width="3" height="15" fill="rgb(218,219,31)"/><text x="1037.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1034" y="212" width="3" height="15" fill="rgb(254,11,44)"/><text x="1037.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1034" y="228" width="3" height="15" fill="rgb(232,34,53)"/><text x="1037.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1034" y="244" width="3" height="15" fill="rgb(243,92,24)"/><text x="1037.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.29%)</title><rect x="1034" y="260" width="3" height="15" fill="rgb(215,105,37)"/><text x="1037.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1034" y="276" width="3" height="15" fill="rgb(248,162,36)"/><text x="1037.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1034" y="292" width="3" height="15" fill="rgb(211,137,9)"/><text x="1037.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1034" y="308" width="3" height="15" fill="rgb(248,182,50)"/><text x="1037.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1034" y="324" width="3" height="15" fill="rgb(228,90,31)"/><text x="1037.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1034" y="340" width="3" height="15" fill="rgb(248,124,54)"/><text x="1037.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:15) (1 samples, 0.29%)</title><rect x="1034" y="356" width="3" height="15" fill="rgb(249,213,43)"/><text x="1037.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py:16) (1 samples, 0.29%)</title><rect x="1034" y="372" width="3" height="15" fill="rgb(220,81,32)"/><text x="1037.00" y="382.50"></text></g><g><title>architecture (platform.py:868) (1 samples, 0.29%)</title><rect x="1034" y="388" width="3" height="15" fill="rgb(238,180,5)"/><text x="1037.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py:813) (1 samples, 0.29%)</title><rect x="1034" y="404" width="3" height="15" fill="rgb(209,50,37)"/><text x="1037.00" y="414.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.29%)</title><rect x="1034" y="420" width="3" height="15" fill="rgb(214,7,10)"/><text x="1037.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py:1479) (1 samples, 0.29%)</title><rect x="1034" y="436" width="3" height="15" fill="rgb(218,198,34)"/><text x="1037.00" y="446.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:18) (1 samples, 0.29%)</title><rect x="1037" y="100" width="3" height="15" fill="rgb(207,165,18)"/><text x="1040.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.29%)</title><rect x="1037" y="116" width="3" height="15" fill="rgb(230,56,36)"/><text x="1040.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.29%)</title><rect x="1037" y="132" width="3" height="15" fill="rgb(240,29,6)"/><text x="1040.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="1044" y="116" width="3" height="15" fill="rgb(211,219,52)"/><text x="1047.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="1044" y="132" width="3" height="15" fill="rgb(224,226,48)"/><text x="1047.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.29%)</title><rect x="1044" y="148" width="3" height="15" fill="rgb(220,149,19)"/><text x="1047.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.29%)</title><rect x="1047" y="116" width="3" height="15" fill="rgb(220,117,14)"/><text x="1050.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.29%)</title><rect x="1047" y="132" width="3" height="15" fill="rgb(250,78,13)"/><text x="1050.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.29%)</title><rect x="1061" y="196" width="3" height="15" fill="rgb(246,4,10)"/><text x="1064.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.29%)</title><rect x="1064" y="196" width="3" height="15" fill="rgb(209,99,39)"/><text x="1067.00" y="206.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1074" y="260" width="4" height="15" fill="rgb(252,63,40)"/><text x="1077.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1074" y="276" width="4" height="15" fill="rgb(234,61,45)"/><text x="1077.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1074" y="292" width="4" height="15" fill="rgb(253,16,37)"/><text x="1077.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (4 samples, 1.15%)</title><rect x="1067" y="196" width="14" height="15" fill="rgb(233,136,5)"/><text x="1070.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.86%)</title><rect x="1071" y="212" width="10" height="15" fill="rgb(250,213,38)"/><text x="1074.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="1074" y="228" width="7" height="15" fill="rgb(242,177,31)"/><text x="1077.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="1074" y="244" width="7" height="15" fill="rgb(212,214,15)"/><text x="1077.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1078" y="260" width="3" height="15" fill="rgb(205,20,30)"/><text x="1081.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1078" y="276" width="3" height="15" fill="rgb(212,115,52)"/><text x="1081.00" y="286.50"></text></g><g><title>0x7f732bd63ff9 (?) (1 samples, 0.29%)</title><rect x="1084" y="212" width="4" height="15" fill="rgb(249,47,44)"/><text x="1087.00" y="222.50"></text></g><g><title>0x7f732bd5eef6 (?) (1 samples, 0.29%)</title><rect x="1084" y="228" width="4" height="15" fill="rgb(245,118,12)"/><text x="1087.00" y="238.50"></text></g><g><title>0x7f732bd53962 (?) (1 samples, 0.29%)</title><rect x="1084" y="244" width="4" height="15" fill="rgb(250,82,23)"/><text x="1087.00" y="254.50"></text></g><g><title>0x7f732bd877a7 (?) (1 samples, 0.29%)</title><rect x="1084" y="260" width="4" height="15" fill="rgb(254,121,19)"/><text x="1087.00" y="270.50"></text></g><g><title>0x7f732bd87379 (?) (1 samples, 0.29%)</title><rect x="1084" y="276" width="4" height="15" fill="rgb(240,4,22)"/><text x="1087.00" y="286.50"></text></g><g><title>0x7f732c1e58b8 (?) (1 samples, 0.29%)</title><rect x="1084" y="292" width="4" height="15" fill="rgb(245,162,28)"/><text x="1087.00" y="302.50"></text></g><g><title>0x7f732c1e3c7f (?) (1 samples, 0.29%)</title><rect x="1084" y="308" width="4" height="15" fill="rgb(222,147,43)"/><text x="1087.00" y="318.50"></text></g><g><title>0x7f732c1f699c (?) (1 samples, 0.29%)</title><rect x="1084" y="324" width="4" height="15" fill="rgb(222,60,13)"/><text x="1087.00" y="334.50"></text></g><g><title>0x7f732bedbaef (?) (1 samples, 0.29%)</title><rect x="1084" y="340" width="4" height="15" fill="rgb(212,54,26)"/><text x="1087.00" y="350.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1088" y="228" width="3" height="15" fill="rgb(213,143,9)"/><text x="1091.00" y="238.50"></text></g><g><title>0x7f732bd2ba40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1101" y="260" width="4" height="15" fill="rgb(235,56,49)"/><text x="1104.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1108" y="292" width="4" height="15" fill="rgb(247,157,6)"/><text x="1111.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1108" y="308" width="4" height="15" fill="rgb(250,155,53)"/><text x="1111.00" y="318.50"></text></g><g><title>0x7f732bd2a930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1108" y="324" width="4" height="15" fill="rgb(231,16,19)"/><text x="1111.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1112" y="292" width="3" height="15" fill="rgb(222,0,42)"/><text x="1115.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1112" y="308" width="3" height="15" fill="rgb(212,6,25)"/><text x="1115.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1112" y="324" width="3" height="15" fill="rgb(206,210,42)"/><text x="1115.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1112" y="340" width="3" height="15" fill="rgb(248,51,9)"/><text x="1115.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1118" y="340" width="4" height="15" fill="rgb(206,75,38)"/><text x="1121.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1118" y="356" width="4" height="15" fill="rgb(247,191,41)"/><text x="1121.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1118" y="372" width="4" height="15" fill="rgb(222,152,15)"/><text x="1121.00" y="382.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1118" y="388" width="4" height="15" fill="rgb(207,196,9)"/><text x="1121.00" y="398.50"></text></g><g><title>0x7f736bcf4b8e (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1125" y="500" width="3" height="15" fill="rgb(224,21,15)"/><text x="1128.00" y="510.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="1125" y="404" width="7" height="15" fill="rgb(241,43,19)"/><text x="1128.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="1125" y="420" width="7" height="15" fill="rgb(234,204,6)"/><text x="1128.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="1125" y="436" width="7" height="15" fill="rgb(223,201,17)"/><text x="1128.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="1125" y="452" width="7" height="15" fill="rgb(210,174,31)"/><text x="1128.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.57%)</title><rect x="1125" y="468" width="7" height="15" fill="rgb(233,142,50)"/><text x="1128.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.57%)</title><rect x="1125" y="484" width="7" height="15" fill="rgb(222,217,7)"/><text x="1128.00" y="494.50"></text></g><g><title>0x7f736bcf4c48 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1128" y="500" width="4" height="15" fill="rgb(250,219,48)"/><text x="1131.00" y="510.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.15%)</title><rect x="1122" y="340" width="13" height="15" fill="rgb(228,41,52)"/><text x="1125.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.86%)</title><rect x="1125" y="356" width="10" height="15" fill="rgb(229,100,29)"/><text x="1128.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.86%)</title><rect x="1125" y="372" width="10" height="15" fill="rgb(231,124,29)"/><text x="1128.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.86%)</title><rect x="1125" y="388" width="10" height="15" fill="rgb(240,74,21)"/><text x="1128.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1132" y="404" width="3" height="15" fill="rgb(235,105,53)"/><text x="1135.00" y="414.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.72%)</title><rect x="1118" y="308" width="21" height="15" fill="rgb(209,168,7)"/><text x="1121.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.72%)</title><rect x="1118" y="324" width="21" height="15" fill="rgb(226,158,3)"/><text x="1121.00" y="334.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1135" y="340" width="4" height="15" fill="rgb(253,6,44)"/><text x="1138.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1135" y="356" width="4" height="15" fill="rgb(241,117,48)"/><text x="1138.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1135" y="372" width="4" height="15" fill="rgb(226,151,49)"/><text x="1138.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.30%)</title><rect x="1115" y="292" width="27" height="15" fill="rgb(239,170,38)"/><text x="1118.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1139" y="308" width="3" height="15" fill="rgb(236,112,54)"/><text x="1142.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1139" y="324" width="3" height="15" fill="rgb(208,59,16)"/><text x="1142.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1139" y="340" width="3" height="15" fill="rgb(249,106,10)"/><text x="1142.00" y="350.50"></text></g><g><title>0x7f736bdd1130 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1139" y="356" width="3" height="15" fill="rgb(226,134,52)"/><text x="1142.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.45%)</title><rect x="1105" y="260" width="40" height="15" fill="rgb(225,96,22)"/><text x="1108.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.45%)</title><rect x="1105" y="276" width="40" height="15" fill="rgb(236,109,52)"/><text x="1108.00" y="286.50">onn..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1142" y="292" width="3" height="15" fill="rgb(205,151,40)"/><text x="1145.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1145" y="260" width="4" height="15" fill="rgb(222,208,33)"/><text x="1148.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1145" y="276" width="4" height="15" fill="rgb(225,34,21)"/><text x="1148.00" y="286.50"></text></g><g><title>0x7f736bcf3909 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1145" y="292" width="4" height="15" fill="rgb(222,183,36)"/><text x="1148.00" y="302.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1149" y="260" width="3" height="15" fill="rgb(216,60,38)"/><text x="1152.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.17%)</title><rect x="1095" y="244" width="61" height="15" fill="rgb(213,146,3)"/><text x="1098.00" y="254.50">onnxru..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="260" width="4" height="15" fill="rgb(214,165,39)"/><text x="1155.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="276" width="4" height="15" fill="rgb(226,161,5)"/><text x="1155.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="292" width="4" height="15" fill="rgb(210,101,38)"/><text x="1155.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="308" width="4" height="15" fill="rgb(224,57,14)"/><text x="1155.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="324" width="4" height="15" fill="rgb(212,53,54)"/><text x="1155.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="340" width="4" height="15" fill="rgb(247,67,1)"/><text x="1155.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="356" width="4" height="15" fill="rgb(232,125,33)"/><text x="1155.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1152" y="372" width="4" height="15" fill="rgb(205,148,51)"/><text x="1155.00" y="382.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (23 samples, 6.61%)</title><rect x="1081" y="196" width="78" height="15" fill="rgb(232,143,27)"/><text x="1084.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.03%)</title><rect x="1088" y="212" width="71" height="15" fill="rgb(243,119,50)"/><text x="1091.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 5.75%)</title><rect x="1091" y="228" width="68" height="15" fill="rgb(212,53,26)"/><text x="1094.00" y="238.50">void py..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1156" y="244" width="3" height="15" fill="rgb(229,159,10)"/><text x="1159.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1156" y="260" width="3" height="15" fill="rgb(240,114,50)"/><text x="1159.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1156" y="276" width="3" height="15" fill="rgb(248,13,5)"/><text x="1159.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (30 samples, 8.62%)</title><rect x="1061" y="164" width="101" height="15" fill="rgb(254,62,7)"/><text x="1064.00" y="174.50">_run_whole_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (30 samples, 8.62%)</title><rect x="1061" y="180" width="101" height="15" fill="rgb(239,185,0)"/><text x="1064.00" y="190.50">run (mlprodi..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.29%)</title><rect x="1159" y="196" width="3" height="15" fill="rgb(237,65,14)"/><text x="1162.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (37 samples, 10.63%)</title><rect x="1057" y="132" width="126" height="15" fill="rgb(249,48,45)"/><text x="1060.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (36 samples, 10.34%)</title><rect x="1061" y="148" width="122" height="15" fill="rgb(225,88,43)"/><text x="1064.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (6 samples, 1.72%)</title><rect x="1162" y="164" width="21" height="15" fill="rgb(208,211,27)"/><text x="1165.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.86%)</title><rect x="1173" y="180" width="10" height="15" fill="rgb(207,149,14)"/><text x="1176.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.29%)</title><rect x="1183" y="132" width="3" height="15" fill="rgb(214,79,4)"/><text x="1186.00" y="142.50"></text></g><g><title>all (348 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,92,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:52) (46 samples, 13.22%)</title><rect x="1034" y="52" width="156" height="15" fill="rgb(236,54,54)"/><text x="1037.00" y="62.50">&lt;module&gt; (bench_Logi..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:51) (46 samples, 13.22%)</title><rect x="1034" y="68" width="156" height="15" fill="rgb(218,178,4)"/><text x="1037.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:29) (45 samples, 12.93%)</title><rect x="1037" y="84" width="153" height="15" fill="rgb(244,21,54)"/><text x="1040.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py:23) (44 samples, 12.64%)</title><rect x="1040" y="100" width="150" height="15" fill="rgb(220,100,29)"/><text x="1043.00" y="110.50">profile (bench_Logi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (41 samples, 11.78%)</title><rect x="1050" y="116" width="140" height="15" fill="rgb(228,95,14)"/><text x="1053.00" y="126.50">time_predict (mlp..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(226,160,47)"/><text x="1189.00" y="142.50"></text></g></g></svg>