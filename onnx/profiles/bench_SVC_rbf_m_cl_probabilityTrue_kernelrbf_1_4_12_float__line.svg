<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:22) (1 samples, 0.29%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(222,120,8)"/><text x="13.00" y="110.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.29%)</title><rect x="20" y="148" width="3" height="15" fill="rgb(249,153,9)"/><text x="23.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.58%)</title><rect x="20" y="116" width="7" height="15" fill="rgb(216,74,7)"/><text x="23.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.58%)</title><rect x="20" y="132" width="7" height="15" fill="rgb(239,205,19)"/><text x="23.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.29%)</title><rect x="23" y="148" width="4" height="15" fill="rgb(226,142,49)"/><text x="26.00" y="158.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (1 samples, 0.29%)</title><rect x="23" y="164" width="4" height="15" fill="rgb(205,46,32)"/><text x="26.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:934) (1 samples, 0.29%)</title><rect x="47" y="180" width="4" height="15" fill="rgb(244,43,9)"/><text x="50.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.29%)</title><rect x="51" y="180" width="3" height="15" fill="rgb(218,13,2)"/><text x="54.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.29%)</title><rect x="51" y="196" width="3" height="15" fill="rgb(219,128,49)"/><text x="54.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.58%)</title><rect x="71" y="196" width="7" height="15" fill="rgb(221,106,20)"/><text x="74.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (9 samples, 2.62%)</title><rect x="106" y="212" width="31" height="15" fill="rgb(243,201,10)"/><text x="109.00" y="222.50">un..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (21 samples, 6.12%)</title><rect x="78" y="196" width="73" height="15" fill="rgb(215,111,21)"/><text x="81.00" y="206.50">&lt;listcom..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.17%)</title><rect x="137" y="212" width="14" height="15" fill="rgb(246,217,4)"/><text x="140.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (33 samples, 9.62%)</title><rect x="44" y="164" width="113" height="15" fill="rgb(205,55,1)"/><text x="47.00" y="174.50">_validate_for..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (30 samples, 8.75%)</title><rect x="54" y="180" width="103" height="15" fill="rgb(216,28,53)"/><text x="57.00" y="190.50">check_is_fit..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.58%)</title><rect x="151" y="196" width="6" height="15" fill="rgb(225,178,5)"/><text x="154.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="154" y="212" width="3" height="15" fill="rgb(229,7,46)"/><text x="157.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.29%)</title><rect x="157" y="180" width="4" height="15" fill="rgb(237,95,38)"/><text x="160.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (2 samples, 0.58%)</title><rect x="161" y="180" width="7" height="15" fill="rgb(209,194,29)"/><text x="164.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.29%)</title><rect x="182" y="196" width="3" height="15" fill="rgb(242,151,40)"/><text x="185.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 0.87%)</title><rect x="185" y="196" width="10" height="15" fill="rgb(236,149,3)"/><text x="188.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.29%)</title><rect x="195" y="196" width="4" height="15" fill="rgb(250,154,5)"/><text x="198.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.29%)</title><rect x="199" y="196" width="3" height="15" fill="rgb(214,34,53)"/><text x="202.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 3.21%)</title><rect x="168" y="180" width="38" height="15" fill="rgb(254,158,23)"/><text x="171.00" y="190.50">che..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.29%)</title><rect x="202" y="196" width="4" height="15" fill="rgb(252,111,50)"/><text x="205.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:503) (1 samples, 0.29%)</title><rect x="206" y="180" width="3" height="15" fill="rgb(238,34,45)"/><text x="209.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:177) (3 samples, 0.87%)</title><rect x="212" y="196" width="11" height="15" fill="rgb(210,14,17)"/><text x="215.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (13 samples, 3.79%)</title><rect x="209" y="180" width="45" height="15" fill="rgb(238,192,43)"/><text x="212.00" y="190.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (9 samples, 2.62%)</title><rect x="223" y="196" width="31" height="15" fill="rgb(211,59,39)"/><text x="226.00" y="206.50">si..</text></g><g><title>_add_filter (warnings.py:186) (8 samples, 2.33%)</title><rect x="226" y="212" width="28" height="15" fill="rgb(220,224,16)"/><text x="229.00" y="222.50">_..</text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.29%)</title><rect x="261" y="196" width="3" height="15" fill="rgb(225,221,3)"/><text x="264.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (4 samples, 1.17%)</title><rect x="254" y="180" width="14" height="15" fill="rgb(252,176,35)"/><text x="257.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.29%)</title><rect x="264" y="196" width="4" height="15" fill="rgb(215,152,1)"/><text x="267.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.29%)</title><rect x="264" y="212" width="4" height="15" fill="rgb(239,76,35)"/><text x="267.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.29%)</title><rect x="264" y="228" width="4" height="15" fill="rgb(220,172,40)"/><text x="267.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.29%)</title><rect x="264" y="244" width="4" height="15" fill="rgb(244,123,39)"/><text x="267.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="278" y="228" width="3" height="15" fill="rgb(216,46,22)"/><text x="281.00" y="238.50"></text></g><g><title>0x7feb14a7e130 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="278" y="244" width="3" height="15" fill="rgb(249,181,23)"/><text x="281.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.58%)</title><rect x="278" y="212" width="7" height="15" fill="rgb(228,10,36)"/><text x="281.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="281" y="228" width="4" height="15" fill="rgb(208,112,28)"/><text x="284.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.29%)</title><rect x="285" y="244" width="3" height="15" fill="rgb(236,55,40)"/><text x="288.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.29%)</title><rect x="288" y="244" width="4" height="15" fill="rgb(238,181,20)"/><text x="291.00" y="254.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.29%)</title><rect x="288" y="260" width="4" height="15" fill="rgb(223,148,25)"/><text x="291.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.29%)</title><rect x="292" y="260" width="3" height="15" fill="rgb(254,74,47)"/><text x="295.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.29%)</title><rect x="292" y="276" width="3" height="15" fill="rgb(236,91,18)"/><text x="295.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:734) (1 samples, 0.29%)</title><rect x="292" y="292" width="3" height="15" fill="rgb(227,219,47)"/><text x="295.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.29%)</title><rect x="295" y="276" width="3" height="15" fill="rgb(221,174,20)"/><text x="298.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.29%)</title><rect x="295" y="292" width="3" height="15" fill="rgb(227,89,10)"/><text x="298.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (10 samples, 2.92%)</title><rect x="268" y="180" width="34" height="15" fill="rgb(222,210,36)"/><text x="271.00" y="190.50">ch..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (9 samples, 2.62%)</title><rect x="271" y="196" width="31" height="15" fill="rgb(238,59,0)"/><text x="274.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (5 samples, 1.46%)</title><rect x="285" y="212" width="17" height="15" fill="rgb(247,176,27)"/><text x="288.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (5 samples, 1.46%)</title><rect x="285" y="228" width="17" height="15" fill="rgb(248,131,46)"/><text x="288.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (3 samples, 0.87%)</title><rect x="292" y="244" width="10" height="15" fill="rgb(215,140,50)"/><text x="295.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (2 samples, 0.58%)</title><rect x="295" y="260" width="7" height="15" fill="rgb(231,101,22)"/><text x="298.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.29%)</title><rect x="298" y="276" width="4" height="15" fill="rgb(248,144,31)"/><text x="301.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.29%)</title><rect x="298" y="292" width="4" height="15" fill="rgb(246,61,16)"/><text x="301.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.29%)</title><rect x="298" y="308" width="4" height="15" fill="rgb(245,185,51)"/><text x="301.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.29%)</title><rect x="298" y="324" width="4" height="15" fill="rgb(232,75,12)"/><text x="301.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.29%)</title><rect x="298" y="340" width="4" height="15" fill="rgb(247,6,3)"/><text x="301.00" y="350.50"></text></g><g><title>__exit__ (warnings.py:493) (1 samples, 0.29%)</title><rect x="302" y="196" width="3" height="15" fill="rgb(208,156,38)"/><text x="305.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.29%)</title><rect x="305" y="196" width="4" height="15" fill="rgb(212,210,54)"/><text x="308.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.87%)</title><rect x="302" y="180" width="10" height="15" fill="rgb(246,108,7)"/><text x="305.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.29%)</title><rect x="309" y="196" width="3" height="15" fill="rgb(247,102,47)"/><text x="312.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.29%)</title><rect x="319" y="196" width="4" height="15" fill="rgb(228,71,23)"/><text x="322.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (5 samples, 1.46%)</title><rect x="312" y="180" width="17" height="15" fill="rgb(223,22,7)"/><text x="315.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.58%)</title><rect x="323" y="196" width="6" height="15" fill="rgb(224,211,49)"/><text x="326.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.29%)</title><rect x="329" y="180" width="4" height="15" fill="rgb(216,82,2)"/><text x="332.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:560) (1 samples, 0.29%)</title><rect x="333" y="180" width="3" height="15" fill="rgb(221,108,8)"/><text x="336.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.29%)</title><rect x="336" y="180" width="4" height="15" fill="rgb(238,57,54)"/><text x="339.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 1.17%)</title><rect x="360" y="212" width="14" height="15" fill="rgb(238,135,48)"/><text x="363.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 2.92%)</title><rect x="343" y="196" width="35" height="15" fill="rgb(240,1,35)"/><text x="346.00" y="206.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.29%)</title><rect x="374" y="212" width="4" height="15" fill="rgb(233,29,7)"/><text x="377.00" y="222.50"></text></g><g><title>0x7feb149b16f2 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="374" y="228" width="4" height="15" fill="rgb(209,209,35)"/><text x="377.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 3.50%)</title><rect x="340" y="180" width="41" height="15" fill="rgb(225,124,21)"/><text x="343.00" y="190.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.29%)</title><rect x="378" y="196" width="3" height="15" fill="rgb(214,159,47)"/><text x="381.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.29%)</title><rect x="378" y="212" width="3" height="15" fill="rgb(253,105,8)"/><text x="381.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.87%)</title><rect x="381" y="196" width="10" height="15" fill="rgb(238,160,30)"/><text x="384.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.29%)</title><rect x="391" y="196" width="4" height="15" fill="rgb(213,158,9)"/><text x="394.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.29%)</title><rect x="395" y="196" width="3" height="15" fill="rgb(214,213,15)"/><text x="398.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.29%)</title><rect x="395" y="212" width="3" height="15" fill="rgb(252,32,52)"/><text x="398.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (14 samples, 4.08%)</title><rect x="381" y="180" width="48" height="15" fill="rgb(235,62,12)"/><text x="384.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (9 samples, 2.62%)</title><rect x="398" y="196" width="31" height="15" fill="rgb(230,111,24)"/><text x="401.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.46%)</title><rect x="412" y="212" width="17" height="15" fill="rgb(222,56,42)"/><text x="415.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.29%)</title><rect x="429" y="180" width="4" height="15" fill="rgb(251,176,9)"/><text x="432.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (81 samples, 23.62%)</title><rect x="157" y="164" width="279" height="15" fill="rgb(207,51,17)"/><text x="160.00" y="174.50">_validate_for_predict (sklearn/svm/_b..</text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.29%)</title><rect x="433" y="180" width="3" height="15" fill="rgb(226,21,44)"/><text x="436.00" y="190.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (116 samples, 33.82%)</title><rect x="40" y="148" width="400" height="15" fill="rgb(246,32,29)"/><text x="43.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (1 samples, 0.29%)</title><rect x="436" y="164" width="4" height="15" fill="rgb(214,161,45)"/><text x="439.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:645) (1 samples, 0.29%)</title><rect x="440" y="148" width="3" height="15" fill="rgb(243,191,33)"/><text x="443.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:682) (1 samples, 0.29%)</title><rect x="443" y="164" width="3" height="15" fill="rgb(242,28,46)"/><text x="446.00" y="174.50"></text></g><g><title>_compute_kernel (sklearn/svm/_base.py:366) (1 samples, 0.29%)</title><rect x="443" y="180" width="3" height="15" fill="rgb(212,111,10)"/><text x="446.00" y="190.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:688) (1 samples, 0.29%)</title><rect x="446" y="164" width="4" height="15" fill="rgb(250,183,0)"/><text x="449.00" y="174.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:689) (1 samples, 0.29%)</title><rect x="450" y="164" width="3" height="15" fill="rgb(226,137,27)"/><text x="453.00" y="174.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:691) (1 samples, 0.29%)</title><rect x="453" y="164" width="4" height="15" fill="rgb(251,125,15)"/><text x="456.00" y="174.50"></text></g><g><title>0x7feaef491035 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="460" y="180" width="7" height="15" fill="rgb(237,183,16)"/><text x="463.00" y="190.50"></text></g><g><title>0x7feaef4913fd (?) (1 samples, 0.29%)</title><rect x="467" y="180" width="3" height="15" fill="rgb(213,163,44)"/><text x="470.00" y="190.50"></text></g><g><title>0x7feaef48eff0 (?) (1 samples, 0.29%)</title><rect x="467" y="196" width="3" height="15" fill="rgb(208,67,40)"/><text x="470.00" y="206.50"></text></g><g><title>_buffer_get_info (buffer.c:645) (1 samples, 0.29%)</title><rect x="470" y="244" width="4" height="15" fill="rgb(232,224,53)"/><text x="473.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.29%)</title><rect x="474" y="244" width="3" height="15" fill="rgb(214,200,43)"/><text x="477.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.29%)</title><rect x="474" y="260" width="3" height="15" fill="rgb(224,100,15)"/><text x="477.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:237) (1 samples, 0.29%)</title><rect x="474" y="276" width="3" height="15" fill="rgb(236,34,50)"/><text x="477.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.29%)</title><rect x="477" y="244" width="4" height="15" fill="rgb(223,62,54)"/><text x="480.00" y="254.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.17%)</title><rect x="470" y="228" width="14" height="15" fill="rgb(243,125,25)"/><text x="473.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (1 samples, 0.29%)</title><rect x="481" y="244" width="3" height="15" fill="rgb(253,4,19)"/><text x="484.00" y="254.50"></text></g><g><title>0x7feb13bc3f30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="481" y="260" width="3" height="15" fill="rgb(231,132,16)"/><text x="484.00" y="270.50"></text></g><g><title>0x7feaef48ed0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.46%)</title><rect x="470" y="196" width="18" height="15" fill="rgb(232,142,50)"/><text x="473.00" y="206.50"></text></g><g><title>0x7feaef478e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.46%)</title><rect x="470" y="212" width="18" height="15" fill="rgb(224,203,36)"/><text x="473.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:831) (1 samples, 0.29%)</title><rect x="484" y="228" width="4" height="15" fill="rgb(247,224,54)"/><text x="487.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.29%)</title><rect x="488" y="244" width="3" height="15" fill="rgb(222,29,49)"/><text x="491.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.29%)</title><rect x="488" y="260" width="3" height="15" fill="rgb(231,212,8)"/><text x="491.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="488" y="276" width="3" height="15" fill="rgb(239,220,41)"/><text x="491.00" y="286.50"></text></g><g><title>0x7feaef48ed58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="488" y="196" width="7" height="15" fill="rgb(210,189,31)"/><text x="491.00" y="206.50"></text></g><g><title>0x7feaef4785ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="488" y="212" width="7" height="15" fill="rgb(246,137,48)"/><text x="491.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.58%)</title><rect x="488" y="228" width="7" height="15" fill="rgb(248,216,12)"/><text x="491.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.29%)</title><rect x="491" y="244" width="4" height="15" fill="rgb(251,36,33)"/><text x="494.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.29%)</title><rect x="491" y="260" width="4" height="15" fill="rgb(224,160,15)"/><text x="494.00" y="270.50"></text></g><g><title>0x7feaef48ee66 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="495" y="196" width="3" height="15" fill="rgb(226,72,40)"/><text x="498.00" y="206.50"></text></g><g><title>0x7feaef478f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="495" y="212" width="3" height="15" fill="rgb(253,23,6)"/><text x="498.00" y="222.50"></text></g><g><title>0x7feaef47833c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="495" y="228" width="3" height="15" fill="rgb(207,31,2)"/><text x="498.00" y="238.50"></text></g><g><title>0x7feaef477e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="495" y="244" width="3" height="15" fill="rgb(253,45,38)"/><text x="498.00" y="254.50"></text></g><g><title>0x7feaef48eeb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="498" y="196" width="3" height="15" fill="rgb(249,119,3)"/><text x="501.00" y="206.50"></text></g><g><title>0x7feaef478e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="498" y="212" width="3" height="15" fill="rgb(216,154,7)"/><text x="501.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:831) (1 samples, 0.29%)</title><rect x="498" y="228" width="3" height="15" fill="rgb(254,55,28)"/><text x="501.00" y="238.50"></text></g><g><title>0x7feaef48ef0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="501" y="196" width="4" height="15" fill="rgb(217,58,34)"/><text x="504.00" y="206.50"></text></g><g><title>0x7feaef478e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="501" y="212" width="4" height="15" fill="rgb(236,104,25)"/><text x="504.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:753) (1 samples, 0.29%)</title><rect x="501" y="228" width="4" height="15" fill="rgb(205,65,40)"/><text x="504.00" y="238.50"></text></g><g><title>0x7feaef48ef9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="505" y="196" width="3" height="15" fill="rgb(223,209,52)"/><text x="508.00" y="206.50"></text></g><g><title>0x7feaef478e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="505" y="212" width="3" height="15" fill="rgb(212,46,10)"/><text x="508.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.29%)</title><rect x="505" y="228" width="3" height="15" fill="rgb(228,11,37)"/><text x="508.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:666) (1 samples, 0.29%)</title><rect x="505" y="244" width="3" height="15" fill="rgb(206,223,18)"/><text x="508.00" y="254.50"></text></g><g><title>0x7feaef48f0d4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="508" y="196" width="4" height="15" fill="rgb(238,229,51)"/><text x="511.00" y="206.50"></text></g><g><title>0x7feb149b6757 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="519" y="228" width="3" height="15" fill="rgb(240,98,45)"/><text x="522.00" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (4 samples, 1.17%)</title><rect x="512" y="212" width="14" height="15" fill="rgb(238,184,37)"/><text x="515.00" y="222.50"></text></g><g><title>0x7feb149b6e76 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="522" y="228" width="4" height="15" fill="rgb(233,38,32)"/><text x="525.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3315) (1 samples, 0.29%)</title><rect x="526" y="244" width="3" height="15" fill="rgb(210,26,20)"/><text x="529.00" y="254.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (2 samples, 0.58%)</title><rect x="526" y="228" width="6" height="15" fill="rgb(248,111,14)"/><text x="529.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3330) (1 samples, 0.29%)</title><rect x="529" y="244" width="3" height="15" fill="rgb(238,125,30)"/><text x="532.00" y="254.50"></text></g><g><title>_arange_safe_ceil_to_intp (ctors.c:3137) (1 samples, 0.29%)</title><rect x="529" y="260" width="3" height="15" fill="rgb(222,18,29)"/><text x="532.00" y="270.50"></text></g><g><title>0x7feb13bc1df0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="529" y="276" width="3" height="15" fill="rgb(211,6,35)"/><text x="532.00" y="286.50"></text></g><g><title>0x7feaef48f12f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.04%)</title><rect x="512" y="196" width="24" height="15" fill="rgb(220,88,44)"/><text x="515.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c:2763) (3 samples, 0.87%)</title><rect x="526" y="212" width="10" height="15" fill="rgb(211,80,9)"/><text x="529.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3432) (1 samples, 0.29%)</title><rect x="532" y="228" width="4" height="15" fill="rgb(244,45,25)"/><text x="535.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1043) (1 samples, 0.29%)</title><rect x="532" y="244" width="4" height="15" fill="rgb(216,36,13)"/><text x="535.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.29%)</title><rect x="532" y="260" width="4" height="15" fill="rgb(238,160,11)"/><text x="535.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.29%)</title><rect x="532" y="276" width="4" height="15" fill="rgb(222,21,0)"/><text x="535.00" y="286.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="536" y="228" width="3" height="15" fill="rgb(206,95,9)"/><text x="539.00" y="238.50"></text></g><g><title>0x7feaef48f2b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="536" y="196" width="10" height="15" fill="rgb(240,136,3)"/><text x="539.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="536" y="212" width="10" height="15" fill="rgb(241,65,17)"/><text x="539.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.58%)</title><rect x="539" y="228" width="7" height="15" fill="rgb(226,100,10)"/><text x="542.00" y="238.50"></text></g><g><title>0x7feb149a1efa (libc-2.29.so) (1 samples, 0.29%)</title><rect x="543" y="244" width="3" height="15" fill="rgb(213,126,13)"/><text x="546.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:922) (1 samples, 0.29%)</title><rect x="546" y="244" width="4" height="15" fill="rgb(212,165,31)"/><text x="549.00" y="254.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (2 samples, 0.58%)</title><rect x="546" y="212" width="7" height="15" fill="rgb(231,126,1)"/><text x="549.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.58%)</title><rect x="546" y="228" width="7" height="15" fill="rgb(229,50,49)"/><text x="549.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.29%)</title><rect x="550" y="244" width="3" height="15" fill="rgb(233,162,54)"/><text x="553.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.29%)</title><rect x="550" y="260" width="3" height="15" fill="rgb(223,140,23)"/><text x="553.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.29%)</title><rect x="550" y="276" width="3" height="15" fill="rgb(253,229,47)"/><text x="553.00" y="286.50"></text></g><g><title>0x7feaef48f46c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="546" y="196" width="10" height="15" fill="rgb(234,12,49)"/><text x="549.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.29%)</title><rect x="553" y="212" width="3" height="15" fill="rgb(249,108,36)"/><text x="556.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.29%)</title><rect x="553" y="228" width="3" height="15" fill="rgb(229,44,45)"/><text x="556.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.29%)</title><rect x="553" y="244" width="3" height="15" fill="rgb(244,69,51)"/><text x="556.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.29%)</title><rect x="553" y="260" width="3" height="15" fill="rgb(217,84,31)"/><text x="556.00" y="270.50"></text></g><g><title>0x7feaef48f474 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="556" y="196" width="4" height="15" fill="rgb(223,59,46)"/><text x="559.00" y="206.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.29%)</title><rect x="560" y="260" width="3" height="15" fill="rgb(221,212,54)"/><text x="563.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="560" y="276" width="3" height="15" fill="rgb(243,180,45)"/><text x="563.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:206) (1 samples, 0.29%)</title><rect x="563" y="292" width="4" height="15" fill="rgb(251,100,2)"/><text x="566.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (3 samples, 0.87%)</title><rect x="560" y="244" width="10" height="15" fill="rgb(218,37,15)"/><text x="563.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 0.58%)</title><rect x="563" y="260" width="7" height="15" fill="rgb(244,78,22)"/><text x="566.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (2 samples, 0.58%)</title><rect x="563" y="276" width="7" height="15" fill="rgb(222,186,11)"/><text x="566.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:214) (1 samples, 0.29%)</title><rect x="567" y="292" width="3" height="15" fill="rgb(231,95,32)"/><text x="570.00" y="302.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.29%)</title><rect x="567" y="308" width="3" height="15" fill="rgb(212,154,34)"/><text x="570.00" y="318.50"></text></g><g><title>0x7feb149a1e76 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="570" y="276" width="4" height="15" fill="rgb(213,71,42)"/><text x="573.00" y="286.50"></text></g><g><title>0x7feaef48f528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.46%)</title><rect x="560" y="196" width="17" height="15" fill="rgb(253,48,25)"/><text x="563.00" y="206.50"></text></g><g><title>0x7feaef478e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.46%)</title><rect x="560" y="212" width="17" height="15" fill="rgb(225,164,6)"/><text x="563.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (5 samples, 1.46%)</title><rect x="560" y="228" width="17" height="15" fill="rgb(209,50,6)"/><text x="563.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (2 samples, 0.58%)</title><rect x="570" y="244" width="7" height="15" fill="rgb(250,218,35)"/><text x="573.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.58%)</title><rect x="570" y="260" width="7" height="15" fill="rgb(210,39,36)"/><text x="573.00" y="270.50"></text></g><g><title>0x7feb149a2028 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="574" y="276" width="3" height="15" fill="rgb(221,193,3)"/><text x="577.00" y="286.50"></text></g><g><title>0x7feb1499fb9b (libc-2.29.so) (1 samples, 0.29%)</title><rect x="574" y="292" width="3" height="15" fill="rgb(226,159,38)"/><text x="577.00" y="302.50"></text></g><g><title>0x7feaef472390 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="584" y="244" width="3" height="15" fill="rgb(235,134,19)"/><text x="587.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.58%)</title><rect x="591" y="260" width="7" height="15" fill="rgb(225,227,28)"/><text x="594.00" y="270.50"></text></g><g><title>0x7feb14b72c5a (libm-2.29.so) (1 samples, 0.29%)</title><rect x="594" y="276" width="4" height="15" fill="rgb(221,197,33)"/><text x="597.00" y="286.50"></text></g><g><title>0x7feaef48f553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.04%)</title><rect x="577" y="196" width="24" height="15" fill="rgb(252,50,23)"/><text x="580.00" y="206.50">0..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.04%)</title><rect x="577" y="212" width="24" height="15" fill="rgb(221,21,51)"/><text x="580.00" y="222.50">c..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.04%)</title><rect x="577" y="228" width="24" height="15" fill="rgb(229,169,19)"/><text x="580.00" y="238.50">s..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.17%)</title><rect x="587" y="244" width="14" height="15" fill="rgb(230,124,0)"/><text x="590.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="598" y="260" width="3" height="15" fill="rgb(218,147,41)"/><text x="601.00" y="270.50"></text></g><g><title>0x7feaef48f55e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="601" y="196" width="7" height="15" fill="rgb(249,205,3)"/><text x="604.00" y="206.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="605" y="212" width="3" height="15" fill="rgb(224,9,39)"/><text x="608.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.29%)</title><rect x="608" y="244" width="4" height="15" fill="rgb(245,216,43)"/><text x="611.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:727) (1 samples, 0.29%)</title><rect x="612" y="244" width="3" height="15" fill="rgb(222,178,40)"/><text x="615.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.29%)</title><rect x="615" y="244" width="3" height="15" fill="rgb(216,153,10)"/><text x="618.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (1 samples, 0.29%)</title><rect x="615" y="260" width="3" height="15" fill="rgb(207,16,50)"/><text x="618.00" y="270.50"></text></g><g><title>0x7feaef48f7b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.17%)</title><rect x="608" y="196" width="14" height="15" fill="rgb(236,56,38)"/><text x="611.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (4 samples, 1.17%)</title><rect x="608" y="212" width="14" height="15" fill="rgb(208,73,16)"/><text x="611.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (4 samples, 1.17%)</title><rect x="608" y="228" width="14" height="15" fill="rgb(232,111,9)"/><text x="611.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.29%)</title><rect x="618" y="244" width="4" height="15" fill="rgb(223,112,15)"/><text x="621.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.29%)</title><rect x="622" y="244" width="3" height="15" fill="rgb(246,132,28)"/><text x="625.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.29%)</title><rect x="622" y="260" width="3" height="15" fill="rgb(215,223,31)"/><text x="625.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:360) (1 samples, 0.29%)</title><rect x="622" y="276" width="3" height="15" fill="rgb(207,76,54)"/><text x="625.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.29%)</title><rect x="625" y="244" width="4" height="15" fill="rgb(242,209,54)"/><text x="628.00" y="254.50"></text></g><g><title>0x7feaef4913fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (47 samples, 13.70%)</title><rect x="470" y="180" width="162" height="15" fill="rgb(246,178,11)"/><text x="473.00" y="190.50">0x7feaef4913fd (skle..</text></g><g><title>0x7feaef490d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="622" y="196" width="10" height="15" fill="rgb(205,93,0)"/><text x="625.00" y="206.50"></text></g><g><title>0x7feaef4785ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="622" y="212" width="10" height="15" fill="rgb(250,146,43)"/><text x="625.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.87%)</title><rect x="622" y="228" width="10" height="15" fill="rgb(230,98,13)"/><text x="625.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.29%)</title><rect x="629" y="244" width="3" height="15" fill="rgb(237,112,21)"/><text x="632.00" y="254.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (52 samples, 15.16%)</title><rect x="457" y="164" width="179" height="15" fill="rgb(213,123,12)"/><text x="460.00" y="174.50">_dense_predict_proba (s..</text></g><g><title>0x7feaef4915e8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="632" y="180" width="4" height="15" fill="rgb(240,138,29)"/><text x="635.00" y="190.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (57 samples, 16.62%)</title><rect x="443" y="148" width="196" height="15" fill="rgb(238,99,45)"/><text x="446.00" y="158.50">_predict_proba (sklearn/s..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:696) (1 samples, 0.29%)</title><rect x="636" y="164" width="3" height="15" fill="rgb(224,164,10)"/><text x="639.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (175 samples, 51.02%)</title><rect x="40" y="132" width="603" height="15" fill="rgb(214,33,36)"/><text x="43.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/svm/_base.py:636) (1 samples, 0.29%)</title><rect x="639" y="148" width="4" height="15" fill="rgb(205,202,9)"/><text x="642.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py:602) (1 samples, 0.29%)</title><rect x="639" y="164" width="4" height="15" fill="rgb(251,105,50)"/><text x="642.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:38) (185 samples, 53.94%)</title><rect x="10" y="52" width="636" height="15" fill="rgb(211,220,27)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:37) (185 samples, 53.94%)</title><rect x="10" y="68" width="636" height="15" fill="rgb(243,169,30)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29) (185 samples, 53.94%)</title><rect x="10" y="84" width="636" height="15" fill="rgb(254,203,35)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29)</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23) (184 samples, 53.64%)</title><rect x="13" y="100" width="633" height="15" fill="rgb(230,26,4)"/><text x="16.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (180 samples, 52.48%)</title><rect x="27" y="116" width="619" height="15" fill="rgb(226,85,4)"/><text x="30.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="643" y="132" width="3" height="15" fill="rgb(228,218,43)"/><text x="646.00" y="142.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.29%)</title><rect x="646" y="852" width="3" height="15" fill="rgb(230,12,44)"/><text x="649.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.29%)</title><rect x="646" y="868" width="3" height="15" fill="rgb(244,201,43)"/><text x="649.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.29%)</title><rect x="646" y="884" width="3" height="15" fill="rgb(251,72,7)"/><text x="649.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.29%)</title><rect x="646" y="900" width="3" height="15" fill="rgb(215,185,52)"/><text x="649.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:703) (1 samples, 0.29%)</title><rect x="646" y="916" width="3" height="15" fill="rgb(217,229,6)"/><text x="649.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.29%)</title><rect x="649" y="900" width="4" height="15" fill="rgb(215,95,37)"/><text x="652.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.29%)</title><rect x="649" y="916" width="4" height="15" fill="rgb(243,23,31)"/><text x="652.00" y="926.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="649" y="932" width="4" height="15" fill="rgb(251,41,8)"/><text x="652.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.87%)</title><rect x="646" y="820" width="10" height="15" fill="rgb(235,2,3)"/><text x="649.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.87%)</title><rect x="646" y="836" width="10" height="15" fill="rgb(246,32,39)"/><text x="649.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.58%)</title><rect x="649" y="852" width="7" height="15" fill="rgb(243,176,9)"/><text x="652.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.58%)</title><rect x="649" y="868" width="7" height="15" fill="rgb(254,59,42)"/><text x="652.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.58%)</title><rect x="649" y="884" width="7" height="15" fill="rgb(215,167,38)"/><text x="652.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.29%)</title><rect x="653" y="900" width="3" height="15" fill="rgb(224,169,3)"/><text x="656.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2583) (1 samples, 0.29%)</title><rect x="653" y="916" width="3" height="15" fill="rgb(234,228,47)"/><text x="656.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:2) (4 samples, 1.17%)</title><rect x="646" y="148" width="14" height="15" fill="rgb(233,35,52)"/><text x="649.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="164" width="14" height="15" fill="rgb(236,33,3)"/><text x="649.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.17%)</title><rect x="646" y="180" width="14" height="15" fill="rgb(240,123,32)"/><text x="649.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="196" width="14" height="15" fill="rgb(254,217,2)"/><text x="649.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="212" width="14" height="15" fill="rgb(234,203,17)"/><text x="649.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="646" y="228" width="14" height="15" fill="rgb(235,183,9)"/><text x="649.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="646" y="244" width="14" height="15" fill="rgb(238,215,40)"/><text x="649.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="646" y="260" width="14" height="15" fill="rgb(236,8,28)"/><text x="649.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="276" width="14" height="15" fill="rgb(221,51,29)"/><text x="649.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.17%)</title><rect x="646" y="292" width="14" height="15" fill="rgb(215,85,28)"/><text x="649.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="308" width="14" height="15" fill="rgb(239,52,13)"/><text x="649.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="646" y="324" width="14" height="15" fill="rgb(212,60,0)"/><text x="649.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="646" y="340" width="14" height="15" fill="rgb(211,202,40)"/><text x="649.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="646" y="356" width="14" height="15" fill="rgb(254,42,45)"/><text x="649.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="372" width="14" height="15" fill="rgb(241,92,10)"/><text x="649.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.17%)</title><rect x="646" y="388" width="14" height="15" fill="rgb(228,139,28)"/><text x="649.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="404" width="14" height="15" fill="rgb(227,78,46)"/><text x="649.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="646" y="420" width="14" height="15" fill="rgb(215,49,0)"/><text x="649.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="646" y="436" width="14" height="15" fill="rgb(221,218,0)"/><text x="649.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="646" y="452" width="14" height="15" fill="rgb(241,132,4)"/><text x="649.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="468" width="14" height="15" fill="rgb(249,86,35)"/><text x="649.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.17%)</title><rect x="646" y="484" width="14" height="15" fill="rgb(243,182,40)"/><text x="649.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="500" width="14" height="15" fill="rgb(229,130,0)"/><text x="649.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="646" y="516" width="14" height="15" fill="rgb(233,183,6)"/><text x="649.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="646" y="532" width="14" height="15" fill="rgb(215,107,48)"/><text x="649.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="646" y="548" width="14" height="15" fill="rgb(253,63,7)"/><text x="649.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="564" width="14" height="15" fill="rgb(248,196,42)"/><text x="649.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.17%)</title><rect x="646" y="580" width="14" height="15" fill="rgb(211,183,11)"/><text x="649.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="596" width="14" height="15" fill="rgb(218,74,35)"/><text x="649.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.17%)</title><rect x="646" y="612" width="14" height="15" fill="rgb(214,149,24)"/><text x="649.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="628" width="14" height="15" fill="rgb(239,198,23)"/><text x="649.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="644" width="14" height="15" fill="rgb(253,113,52)"/><text x="649.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="646" y="660" width="14" height="15" fill="rgb(210,153,53)"/><text x="649.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="646" y="676" width="14" height="15" fill="rgb(211,51,45)"/><text x="649.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="646" y="692" width="14" height="15" fill="rgb(219,178,44)"/><text x="649.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="708" width="14" height="15" fill="rgb(228,41,10)"/><text x="649.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.17%)</title><rect x="646" y="724" width="14" height="15" fill="rgb(215,116,48)"/><text x="649.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="646" y="740" width="14" height="15" fill="rgb(253,206,37)"/><text x="649.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="646" y="756" width="14" height="15" fill="rgb(248,30,8)"/><text x="649.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="646" y="772" width="14" height="15" fill="rgb(224,195,51)"/><text x="649.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="646" y="788" width="14" height="15" fill="rgb(236,145,25)"/><text x="649.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="646" y="804" width="14" height="15" fill="rgb(207,122,22)"/><text x="649.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.29%)</title><rect x="656" y="820" width="4" height="15" fill="rgb(208,206,15)"/><text x="659.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="656" y="836" width="4" height="15" fill="rgb(208,17,51)"/><text x="659.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="656" y="852" width="4" height="15" fill="rgb(249,113,17)"/><text x="659.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="656" y="868" width="4" height="15" fill="rgb(233,144,18)"/><text x="659.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="656" y="884" width="4" height="15" fill="rgb(250,30,22)"/><text x="659.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="656" y="900" width="4" height="15" fill="rgb(220,217,21)"/><text x="659.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.29%)</title><rect x="656" y="916" width="4" height="15" fill="rgb(223,91,35)"/><text x="659.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.29%)</title><rect x="656" y="932" width="4" height="15" fill="rgb(242,19,2)"/><text x="659.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.29%)</title><rect x="656" y="948" width="4" height="15" fill="rgb(214,228,44)"/><text x="659.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.29%)</title><rect x="656" y="964" width="4" height="15" fill="rgb(251,229,50)"/><text x="659.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.29%)</title><rect x="656" y="980" width="4" height="15" fill="rgb(228,79,28)"/><text x="659.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.29%)</title><rect x="656" y="996" width="4" height="15" fill="rgb(232,228,40)"/><text x="659.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.29%)</title><rect x="656" y="1012" width="4" height="15" fill="rgb(217,196,23)"/><text x="659.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.29%)</title><rect x="656" y="1028" width="4" height="15" fill="rgb(216,155,38)"/><text x="659.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.29%)</title><rect x="656" y="1044" width="4" height="15" fill="rgb(237,189,17)"/><text x="659.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.29%)</title><rect x="656" y="1060" width="4" height="15" fill="rgb(226,103,26)"/><text x="659.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.29%)</title><rect x="656" y="1076" width="4" height="15" fill="rgb(223,87,47)"/><text x="659.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:835) (1 samples, 0.29%)</title><rect x="656" y="1092" width="4" height="15" fill="rgb(249,146,50)"/><text x="659.00" y="1102.50"></text></g><g><title>__getitem__ (sre_parse.py:167) (1 samples, 0.29%)</title><rect x="656" y="1108" width="4" height="15" fill="rgb(213,132,43)"/><text x="659.00" y="1118.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:4) (1 samples, 0.29%)</title><rect x="660" y="148" width="3" height="15" fill="rgb(244,174,36)"/><text x="663.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="164" width="3" height="15" fill="rgb(228,226,25)"/><text x="663.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="660" y="180" width="3" height="15" fill="rgb(211,138,37)"/><text x="663.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="196" width="3" height="15" fill="rgb(249,159,1)"/><text x="663.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="212" width="3" height="15" fill="rgb(250,162,15)"/><text x="663.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="228" width="3" height="15" fill="rgb(209,11,4)"/><text x="663.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="244" width="3" height="15" fill="rgb(213,46,0)"/><text x="663.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="260" width="3" height="15" fill="rgb(223,54,33)"/><text x="663.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="276" width="3" height="15" fill="rgb(253,103,6)"/><text x="663.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.29%)</title><rect x="660" y="292" width="3" height="15" fill="rgb(252,32,27)"/><text x="663.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="308" width="3" height="15" fill="rgb(235,136,36)"/><text x="663.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="324" width="3" height="15" fill="rgb(230,151,45)"/><text x="663.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="340" width="3" height="15" fill="rgb(235,97,31)"/><text x="663.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="356" width="3" height="15" fill="rgb(233,73,42)"/><text x="663.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="372" width="3" height="15" fill="rgb(237,121,8)"/><text x="663.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.29%)</title><rect x="660" y="388" width="3" height="15" fill="rgb(230,99,49)"/><text x="663.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="404" width="3" height="15" fill="rgb(208,30,18)"/><text x="663.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="420" width="3" height="15" fill="rgb(212,225,18)"/><text x="663.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="436" width="3" height="15" fill="rgb(234,221,38)"/><text x="663.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="452" width="3" height="15" fill="rgb(247,2,9)"/><text x="663.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="468" width="3" height="15" fill="rgb(244,67,21)"/><text x="663.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.29%)</title><rect x="660" y="484" width="3" height="15" fill="rgb(251,29,7)"/><text x="663.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="500" width="3" height="15" fill="rgb(214,135,3)"/><text x="663.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="516" width="3" height="15" fill="rgb(243,179,43)"/><text x="663.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="532" width="3" height="15" fill="rgb(249,28,42)"/><text x="663.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="548" width="3" height="15" fill="rgb(246,105,53)"/><text x="663.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="564" width="3" height="15" fill="rgb(223,89,19)"/><text x="663.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.29%)</title><rect x="660" y="580" width="3" height="15" fill="rgb(231,129,20)"/><text x="663.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="596" width="3" height="15" fill="rgb(227,0,9)"/><text x="663.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="612" width="3" height="15" fill="rgb(252,223,23)"/><text x="663.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="628" width="3" height="15" fill="rgb(212,211,9)"/><text x="663.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="644" width="3" height="15" fill="rgb(232,141,1)"/><text x="663.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="660" width="3" height="15" fill="rgb(242,147,14)"/><text x="663.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.29%)</title><rect x="660" y="676" width="3" height="15" fill="rgb(233,45,36)"/><text x="663.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="692" width="3" height="15" fill="rgb(210,144,43)"/><text x="663.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="708" width="3" height="15" fill="rgb(225,141,21)"/><text x="663.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="724" width="3" height="15" fill="rgb(217,190,4)"/><text x="663.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="740" width="3" height="15" fill="rgb(208,22,45)"/><text x="663.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="756" width="3" height="15" fill="rgb(242,21,48)"/><text x="663.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.29%)</title><rect x="660" y="772" width="3" height="15" fill="rgb(229,176,19)"/><text x="663.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="660" y="788" width="3" height="15" fill="rgb(209,161,35)"/><text x="663.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="804" width="3" height="15" fill="rgb(220,6,13)"/><text x="663.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="820" width="3" height="15" fill="rgb(219,38,47)"/><text x="663.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="836" width="3" height="15" fill="rgb(247,150,29)"/><text x="663.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="852" width="3" height="15" fill="rgb(219,33,29)"/><text x="663.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="868" width="3" height="15" fill="rgb(217,113,36)"/><text x="663.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="884" width="3" height="15" fill="rgb(238,218,14)"/><text x="663.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.29%)</title><rect x="660" y="900" width="3" height="15" fill="rgb(205,114,35)"/><text x="663.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="660" y="916" width="3" height="15" fill="rgb(221,190,12)"/><text x="663.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="932" width="3" height="15" fill="rgb(210,46,23)"/><text x="663.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="660" y="948" width="3" height="15" fill="rgb(229,170,1)"/><text x="663.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="660" y="964" width="3" height="15" fill="rgb(212,52,26)"/><text x="663.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="660" y="980" width="3" height="15" fill="rgb(218,20,23)"/><text x="663.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="660" y="996" width="3" height="15" fill="rgb(251,195,23)"/><text x="663.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="660" y="1012" width="3" height="15" fill="rgb(215,225,18)"/><text x="663.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5755) (1 samples, 0.29%)</title><rect x="660" y="1028" width="3" height="15" fill="rgb(241,178,41)"/><text x="663.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.29%)</title><rect x="660" y="1044" width="3" height="15" fill="rgb(239,129,27)"/><text x="663.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.29%)</title><rect x="660" y="1060" width="3" height="15" fill="rgb(247,200,6)"/><text x="663.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:50) (1 samples, 0.29%)</title><rect x="660" y="1076" width="3" height="15" fill="rgb(216,109,3)"/><text x="663.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.29%)</title><rect x="660" y="1092" width="3" height="15" fill="rgb(237,54,52)"/><text x="663.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.29%)</title><rect x="663" y="340" width="4" height="15" fill="rgb(220,105,10)"/><text x="666.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="356" width="4" height="15" fill="rgb(238,28,39)"/><text x="666.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="663" y="372" width="4" height="15" fill="rgb(214,17,32)"/><text x="666.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="388" width="4" height="15" fill="rgb(241,43,1)"/><text x="666.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="404" width="4" height="15" fill="rgb(211,66,49)"/><text x="666.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="663" y="420" width="4" height="15" fill="rgb(236,122,21)"/><text x="666.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="663" y="436" width="4" height="15" fill="rgb(250,180,54)"/><text x="666.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="663" y="452" width="4" height="15" fill="rgb(222,187,39)"/><text x="666.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="468" width="4" height="15" fill="rgb(209,172,7)"/><text x="666.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.29%)</title><rect x="663" y="484" width="4" height="15" fill="rgb(250,217,29)"/><text x="666.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="500" width="4" height="15" fill="rgb(254,18,18)"/><text x="666.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="663" y="516" width="4" height="15" fill="rgb(205,33,14)"/><text x="666.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="663" y="532" width="4" height="15" fill="rgb(235,29,33)"/><text x="666.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="663" y="548" width="4" height="15" fill="rgb(213,202,1)"/><text x="666.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="564" width="4" height="15" fill="rgb(223,28,9)"/><text x="666.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.29%)</title><rect x="663" y="580" width="4" height="15" fill="rgb(211,128,43)"/><text x="666.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="596" width="4" height="15" fill="rgb(222,97,15)"/><text x="666.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="663" y="612" width="4" height="15" fill="rgb(238,108,21)"/><text x="666.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="628" width="4" height="15" fill="rgb(223,12,4)"/><text x="666.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="644" width="4" height="15" fill="rgb(213,78,34)"/><text x="666.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="663" y="660" width="4" height="15" fill="rgb(246,152,29)"/><text x="666.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="663" y="676" width="4" height="15" fill="rgb(214,17,48)"/><text x="666.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="663" y="692" width="4" height="15" fill="rgb(205,200,34)"/><text x="666.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="708" width="4" height="15" fill="rgb(213,162,32)"/><text x="666.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.29%)</title><rect x="663" y="724" width="4" height="15" fill="rgb(212,160,23)"/><text x="666.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="740" width="4" height="15" fill="rgb(251,111,4)"/><text x="666.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="663" y="756" width="4" height="15" fill="rgb(207,49,9)"/><text x="666.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="663" y="772" width="4" height="15" fill="rgb(227,219,30)"/><text x="666.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="663" y="788" width="4" height="15" fill="rgb(213,149,53)"/><text x="666.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="804" width="4" height="15" fill="rgb(216,103,38)"/><text x="666.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.29%)</title><rect x="663" y="820" width="4" height="15" fill="rgb(254,41,44)"/><text x="666.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="836" width="4" height="15" fill="rgb(250,167,31)"/><text x="666.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="663" y="852" width="4" height="15" fill="rgb(247,78,24)"/><text x="666.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="663" y="868" width="4" height="15" fill="rgb(221,35,47)"/><text x="666.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="663" y="884" width="4" height="15" fill="rgb(207,79,34)"/><text x="666.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="900" width="4" height="15" fill="rgb(248,209,26)"/><text x="666.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.29%)</title><rect x="663" y="916" width="4" height="15" fill="rgb(230,204,20)"/><text x="666.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="932" width="4" height="15" fill="rgb(223,185,44)"/><text x="666.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="663" y="948" width="4" height="15" fill="rgb(206,61,37)"/><text x="666.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="964" width="4" height="15" fill="rgb(237,100,9)"/><text x="666.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="980" width="4" height="15" fill="rgb(231,44,27)"/><text x="666.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="663" y="996" width="4" height="15" fill="rgb(228,199,51)"/><text x="666.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="663" y="1012" width="4" height="15" fill="rgb(207,169,20)"/><text x="666.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="663" y="1028" width="4" height="15" fill="rgb(248,129,33)"/><text x="666.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="663" y="1044" width="4" height="15" fill="rgb(229,197,18)"/><text x="666.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.29%)</title><rect x="663" y="1060" width="4" height="15" fill="rgb(224,52,40)"/><text x="666.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="663" y="1076" width="4" height="15" fill="rgb(243,7,34)"/><text x="666.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="663" y="1092" width="4" height="15" fill="rgb(235,98,38)"/><text x="666.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="663" y="1108" width="4" height="15" fill="rgb(244,49,8)"/><text x="666.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="663" y="1124" width="4" height="15" fill="rgb(224,94,1)"/><text x="666.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="663" y="1140" width="4" height="15" fill="rgb(226,26,6)"/><text x="666.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="663" y="1156" width="4" height="15" fill="rgb(214,27,0)"/><text x="666.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.58%)</title><rect x="663" y="244" width="7" height="15" fill="rgb(205,120,13)"/><text x="666.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="663" y="260" width="7" height="15" fill="rgb(246,103,44)"/><text x="666.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="663" y="276" width="7" height="15" fill="rgb(236,228,28)"/><text x="666.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="663" y="292" width="7" height="15" fill="rgb(229,169,0)"/><text x="666.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="663" y="308" width="7" height="15" fill="rgb(212,127,0)"/><text x="666.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="663" y="324" width="7" height="15" fill="rgb(225,15,36)"/><text x="666.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:54) (1 samples, 0.29%)</title><rect x="667" y="340" width="3" height="15" fill="rgb(253,225,35)"/><text x="670.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="667" y="356" width="3" height="15" fill="rgb(221,145,7)"/><text x="670.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="667" y="372" width="3" height="15" fill="rgb(218,139,21)"/><text x="670.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="667" y="388" width="3" height="15" fill="rgb(246,195,2)"/><text x="670.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="667" y="404" width="3" height="15" fill="rgb(252,169,53)"/><text x="670.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="667" y="420" width="3" height="15" fill="rgb(220,61,37)"/><text x="670.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="667" y="436" width="3" height="15" fill="rgb(215,18,39)"/><text x="670.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="667" y="452" width="3" height="15" fill="rgb(229,191,1)"/><text x="670.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="667" y="468" width="3" height="15" fill="rgb(247,148,36)"/><text x="670.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py:6) (1 samples, 0.29%)</title><rect x="667" y="484" width="3" height="15" fill="rgb(228,24,36)"/><text x="670.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="667" y="500" width="3" height="15" fill="rgb(215,128,7)"/><text x="670.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="667" y="516" width="3" height="15" fill="rgb(211,199,17)"/><text x="670.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="667" y="532" width="3" height="15" fill="rgb(252,188,54)"/><text x="670.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="667" y="548" width="3" height="15" fill="rgb(254,0,21)"/><text x="670.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="667" y="564" width="3" height="15" fill="rgb(247,108,44)"/><text x="670.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py:10) (1 samples, 0.29%)</title><rect x="667" y="580" width="3" height="15" fill="rgb(243,167,30)"/><text x="670.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="667" y="596" width="3" height="15" fill="rgb(247,162,15)"/><text x="670.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="667" y="612" width="3" height="15" fill="rgb(231,125,1)"/><text x="670.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="667" y="628" width="3" height="15" fill="rgb(247,40,24)"/><text x="670.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="667" y="644" width="3" height="15" fill="rgb(208,114,54)"/><text x="670.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="667" y="660" width="3" height="15" fill="rgb(222,220,12)"/><text x="670.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/cc/__init__.py:6) (1 samples, 0.29%)</title><rect x="667" y="676" width="3" height="15" fill="rgb(221,97,2)"/><text x="670.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="667" y="692" width="3" height="15" fill="rgb(229,157,11)"/><text x="670.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.29%)</title><rect x="667" y="708" width="3" height="15" fill="rgb(238,209,14)"/><text x="670.00" y="718.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.29%)</title><rect x="667" y="724" width="3" height="15" fill="rgb(224,172,21)"/><text x="670.00" y="734.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.29%)</title><rect x="667" y="740" width="3" height="15" fill="rgb(254,173,36)"/><text x="670.00" y="750.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1250) (1 samples, 0.29%)</title><rect x="667" y="756" width="3" height="15" fill="rgb(245,61,34)"/><text x="670.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.29%)</title><rect x="670" y="1012" width="3" height="15" fill="rgb(244,88,27)"/><text x="673.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="670" y="1028" width="3" height="15" fill="rgb(225,24,52)"/><text x="673.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="670" y="1044" width="3" height="15" fill="rgb(213,153,35)"/><text x="673.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="670" y="1060" width="3" height="15" fill="rgb(244,221,1)"/><text x="673.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="670" y="1076" width="3" height="15" fill="rgb(239,8,49)"/><text x="673.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="670" y="1092" width="3" height="15" fill="rgb(250,203,38)"/><text x="673.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.29%)</title><rect x="670" y="1108" width="3" height="15" fill="rgb(228,210,23)"/><text x="673.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="670" y="1124" width="3" height="15" fill="rgb(229,81,14)"/><text x="673.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="670" y="1140" width="3" height="15" fill="rgb(240,79,17)"/><text x="673.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="670" y="1156" width="3" height="15" fill="rgb(211,16,0)"/><text x="673.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="670" y="1172" width="3" height="15" fill="rgb(214,33,39)"/><text x="673.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="670" y="1188" width="3" height="15" fill="rgb(230,56,16)"/><text x="673.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.29%)</title><rect x="670" y="1204" width="3" height="15" fill="rgb(246,178,15)"/><text x="673.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="670" y="1220" width="3" height="15" fill="rgb(221,77,11)"/><text x="673.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="670" y="1236" width="3" height="15" fill="rgb(205,140,31)"/><text x="673.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="670" y="1252" width="3" height="15" fill="rgb(251,62,45)"/><text x="673.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="670" y="1268" width="3" height="15" fill="rgb(243,139,19)"/><text x="673.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="670" y="1284" width="3" height="15" fill="rgb(243,228,22)"/><text x="673.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.29%)</title><rect x="670" y="1300" width="3" height="15" fill="rgb(250,159,26)"/><text x="673.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="670" y="1316" width="3" height="15" fill="rgb(211,38,26)"/><text x="673.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="670" y="1332" width="3" height="15" fill="rgb(250,227,30)"/><text x="673.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="670" y="1348" width="3" height="15" fill="rgb(219,47,20)"/><text x="673.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="670" y="1364" width="3" height="15" fill="rgb(219,18,7)"/><text x="673.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="670" y="1380" width="3" height="15" fill="rgb(214,156,23)"/><text x="673.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.29%)</title><rect x="670" y="1396" width="3" height="15" fill="rgb(223,93,46)"/><text x="673.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="670" y="1412" width="3" height="15" fill="rgb(240,172,5)"/><text x="673.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="670" y="1428" width="3" height="15" fill="rgb(239,193,16)"/><text x="673.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="670" y="1444" width="3" height="15" fill="rgb(211,71,12)"/><text x="673.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="670" y="1460" width="3" height="15" fill="rgb(242,94,44)"/><text x="673.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="670" y="1476" width="3" height="15" fill="rgb(223,29,40)"/><text x="673.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.29%)</title><rect x="670" y="1492" width="3" height="15" fill="rgb(253,165,11)"/><text x="673.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="670" y="1508" width="3" height="15" fill="rgb(233,150,1)"/><text x="673.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="670" y="1524" width="3" height="15" fill="rgb(243,111,23)"/><text x="673.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="670" y="1540" width="3" height="15" fill="rgb(206,34,16)"/><text x="673.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="670" y="1556" width="3" height="15" fill="rgb(226,144,37)"/><text x="673.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="670" y="1572" width="3" height="15" fill="rgb(240,94,34)"/><text x="673.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.29%)</title><rect x="670" y="1588" width="3" height="15" fill="rgb(233,214,13)"/><text x="673.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.29%)</title><rect x="670" y="1604" width="3" height="15" fill="rgb(205,219,1)"/><text x="673.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.29%)</title><rect x="670" y="1620" width="3" height="15" fill="rgb(231,56,8)"/><text x="673.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1255) (1 samples, 0.29%)</title><rect x="670" y="1636" width="3" height="15" fill="rgb(221,5,42)"/><text x="673.00" y="1646.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.29%)</title><rect x="670" y="1652" width="3" height="15" fill="rgb(227,178,31)"/><text x="673.00" y="1662.50"></text></g><g><title>cleandoc (inspect.py:634) (1 samples, 0.29%)</title><rect x="670" y="1668" width="3" height="15" fill="rgb(254,10,53)"/><text x="673.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.58%)</title><rect x="670" y="916" width="7" height="15" fill="rgb(220,170,19)"/><text x="673.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="670" y="932" width="7" height="15" fill="rgb(212,155,22)"/><text x="673.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="670" y="948" width="7" height="15" fill="rgb(236,197,8)"/><text x="673.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="670" y="964" width="7" height="15" fill="rgb(243,80,40)"/><text x="673.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="670" y="980" width="7" height="15" fill="rgb(213,35,47)"/><text x="673.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="670" y="996" width="7" height="15" fill="rgb(211,50,33)"/><text x="673.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.29%)</title><rect x="673" y="1012" width="4" height="15" fill="rgb(228,90,33)"/><text x="676.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="673" y="1028" width="4" height="15" fill="rgb(226,211,25)"/><text x="676.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="673" y="1044" width="4" height="15" fill="rgb(222,75,28)"/><text x="676.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="673" y="1060" width="4" height="15" fill="rgb(240,84,41)"/><text x="676.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="673" y="1076" width="4" height="15" fill="rgb(230,222,12)"/><text x="676.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="673" y="1092" width="4" height="15" fill="rgb(217,71,54)"/><text x="676.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.29%)</title><rect x="673" y="1108" width="4" height="15" fill="rgb(248,150,41)"/><text x="676.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="673" y="1124" width="4" height="15" fill="rgb(212,118,33)"/><text x="676.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="673" y="1140" width="4" height="15" fill="rgb(226,112,24)"/><text x="676.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="673" y="1156" width="4" height="15" fill="rgb(248,151,32)"/><text x="676.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="673" y="1172" width="4" height="15" fill="rgb(216,7,54)"/><text x="676.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="673" y="1188" width="4" height="15" fill="rgb(218,113,24)"/><text x="676.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.29%)</title><rect x="673" y="1204" width="4" height="15" fill="rgb(220,162,54)"/><text x="676.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="673" y="1220" width="4" height="15" fill="rgb(238,195,23)"/><text x="676.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="673" y="1236" width="4" height="15" fill="rgb(243,73,28)"/><text x="676.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="673" y="1252" width="4" height="15" fill="rgb(219,159,21)"/><text x="676.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="673" y="1268" width="4" height="15" fill="rgb(241,123,53)"/><text x="676.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="673" y="1284" width="4" height="15" fill="rgb(214,40,48)"/><text x="676.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:24) (1 samples, 0.29%)</title><rect x="673" y="1300" width="4" height="15" fill="rgb(221,197,16)"/><text x="676.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="673" y="1316" width="4" height="15" fill="rgb(209,152,20)"/><text x="676.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="673" y="1332" width="4" height="15" fill="rgb(208,29,3)"/><text x="676.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="673" y="1348" width="4" height="15" fill="rgb(235,65,42)"/><text x="676.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="673" y="1364" width="4" height="15" fill="rgb(220,72,2)"/><text x="676.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="673" y="1380" width="4" height="15" fill="rgb(239,182,14)"/><text x="676.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/period.py:75) (1 samples, 0.29%)</title><rect x="673" y="1396" width="4" height="15" fill="rgb(248,203,0)"/><text x="676.00" y="1406.50"></text></g><g><title>PeriodIndex (pandas/core/indexes/period.py:554) (1 samples, 0.29%)</title><rect x="673" y="1412" width="4" height="15" fill="rgb(220,153,22)"/><text x="676.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.29%)</title><rect x="673" y="1428" width="4" height="15" fill="rgb(249,213,19)"/><text x="676.00" y="1438.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.29%)</title><rect x="673" y="1444" width="4" height="15" fill="rgb(240,157,43)"/><text x="676.00" y="1454.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.29%)</title><rect x="673" y="1460" width="4" height="15" fill="rgb(224,146,46)"/><text x="676.00" y="1470.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="673" y="1476" width="4" height="15" fill="rgb(234,50,32)"/><text x="676.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.87%)</title><rect x="670" y="724" width="10" height="15" fill="rgb(225,36,23)"/><text x="673.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.87%)</title><rect x="670" y="740" width="10" height="15" fill="rgb(208,131,38)"/><text x="673.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.87%)</title><rect x="670" y="756" width="10" height="15" fill="rgb(244,25,0)"/><text x="673.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.87%)</title><rect x="670" y="772" width="10" height="15" fill="rgb(233,102,16)"/><text x="673.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.87%)</title><rect x="670" y="788" width="10" height="15" fill="rgb(232,74,34)"/><text x="673.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.87%)</title><rect x="670" y="804" width="10" height="15" fill="rgb(228,193,9)"/><text x="673.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.87%)</title><rect x="670" y="820" width="10" height="15" fill="rgb(227,48,22)"/><text x="673.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.87%)</title><rect x="670" y="836" width="10" height="15" fill="rgb(236,25,30)"/><text x="673.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.87%)</title><rect x="670" y="852" width="10" height="15" fill="rgb(241,203,26)"/><text x="673.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.87%)</title><rect x="670" y="868" width="10" height="15" fill="rgb(254,1,27)"/><text x="673.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.87%)</title><rect x="670" y="884" width="10" height="15" fill="rgb(237,220,45)"/><text x="673.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.87%)</title><rect x="670" y="900" width="10" height="15" fill="rgb(223,88,11)"/><text x="673.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.29%)</title><rect x="677" y="916" width="3" height="15" fill="rgb(206,227,37)"/><text x="680.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="677" y="932" width="3" height="15" fill="rgb(214,136,8)"/><text x="680.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="677" y="948" width="3" height="15" fill="rgb(223,147,28)"/><text x="680.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="677" y="964" width="3" height="15" fill="rgb(225,148,29)"/><text x="680.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="677" y="980" width="3" height="15" fill="rgb(231,96,22)"/><text x="680.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="677" y="996" width="3" height="15" fill="rgb(251,57,25)"/><text x="680.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (1 samples, 0.29%)</title><rect x="677" y="1012" width="3" height="15" fill="rgb(209,142,21)"/><text x="680.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.29%)</title><rect x="677" y="1028" width="3" height="15" fill="rgb(227,221,33)"/><text x="680.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:760) (1 samples, 0.29%)</title><rect x="677" y="1044" width="3" height="15" fill="rgb(240,158,30)"/><text x="680.00" y="1054.50"></text></g><g><title>_flex_comp_method_FRAME (pandas/core/ops/__init__.py:1531) (1 samples, 0.29%)</title><rect x="677" y="1060" width="3" height="15" fill="rgb(211,96,33)"/><text x="680.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.29%)</title><rect x="677" y="1076" width="3" height="15" fill="rgb(233,55,25)"/><text x="680.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.29%)</title><rect x="677" y="1092" width="3" height="15" fill="rgb(206,192,44)"/><text x="680.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.29%)</title><rect x="677" y="1108" width="3" height="15" fill="rgb(245,200,20)"/><text x="680.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="677" y="1124" width="3" height="15" fill="rgb(252,156,42)"/><text x="680.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="677" y="1140" width="3" height="15" fill="rgb(245,69,3)"/><text x="680.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.17%)</title><rect x="670" y="436" width="14" height="15" fill="rgb(249,31,47)"/><text x="673.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="670" y="452" width="14" height="15" fill="rgb(224,31,13)"/><text x="673.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="670" y="468" width="14" height="15" fill="rgb(237,129,3)"/><text x="673.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="670" y="484" width="14" height="15" fill="rgb(253,70,3)"/><text x="673.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="670" y="500" width="14" height="15" fill="rgb(228,51,16)"/><text x="673.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="670" y="516" width="14" height="15" fill="rgb(234,174,43)"/><text x="673.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.17%)</title><rect x="670" y="532" width="14" height="15" fill="rgb(249,110,6)"/><text x="673.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="670" y="548" width="14" height="15" fill="rgb(232,181,12)"/><text x="673.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="670" y="564" width="14" height="15" fill="rgb(215,60,26)"/><text x="673.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="670" y="580" width="14" height="15" fill="rgb(227,12,34)"/><text x="673.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="670" y="596" width="14" height="15" fill="rgb(207,7,24)"/><text x="673.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="670" y="612" width="14" height="15" fill="rgb(252,24,20)"/><text x="673.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.17%)</title><rect x="670" y="628" width="14" height="15" fill="rgb(237,208,42)"/><text x="673.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.17%)</title><rect x="670" y="644" width="14" height="15" fill="rgb(221,144,22)"/><text x="673.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.17%)</title><rect x="670" y="660" width="14" height="15" fill="rgb(211,49,23)"/><text x="673.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.17%)</title><rect x="670" y="676" width="14" height="15" fill="rgb(235,85,19)"/><text x="673.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.17%)</title><rect x="670" y="692" width="14" height="15" fill="rgb(247,162,34)"/><text x="673.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.17%)</title><rect x="670" y="708" width="14" height="15" fill="rgb(217,211,33)"/><text x="673.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.29%)</title><rect x="680" y="724" width="4" height="15" fill="rgb(224,158,30)"/><text x="683.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="680" y="740" width="4" height="15" fill="rgb(228,41,13)"/><text x="683.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="680" y="756" width="4" height="15" fill="rgb(232,128,27)"/><text x="683.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="680" y="772" width="4" height="15" fill="rgb(228,152,23)"/><text x="683.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="680" y="788" width="4" height="15" fill="rgb(225,2,37)"/><text x="683.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="680" y="804" width="4" height="15" fill="rgb(222,105,54)"/><text x="683.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="680" y="820" width="4" height="15" fill="rgb(242,15,22)"/><text x="683.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="680" y="836" width="4" height="15" fill="rgb(251,109,22)"/><text x="683.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="680" y="852" width="4" height="15" fill="rgb(212,211,24)"/><text x="683.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.29%)</title><rect x="680" y="868" width="4" height="15" fill="rgb(243,27,48)"/><text x="683.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="680" y="884" width="4" height="15" fill="rgb(221,15,10)"/><text x="683.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="680" y="900" width="4" height="15" fill="rgb(215,131,21)"/><text x="683.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="680" y="916" width="4" height="15" fill="rgb(251,70,46)"/><text x="683.00" y="926.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:321) (1 samples, 0.29%)</title><rect x="680" y="932" width="4" height="15" fill="rgb(239,191,17)"/><text x="683.00" y="942.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:4) (12 samples, 3.50%)</title><rect x="646" y="52" width="41" height="15" fill="rgb(250,144,37)"/><text x="649.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 3.50%)</title><rect x="646" y="68" width="41" height="15" fill="rgb(240,36,13)"/><text x="649.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 3.50%)</title><rect x="646" y="84" width="41" height="15" fill="rgb(225,39,26)"/><text x="649.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 3.50%)</title><rect x="646" y="100" width="41" height="15" fill="rgb(205,224,34)"/><text x="649.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 3.50%)</title><rect x="646" y="116" width="41" height="15" fill="rgb(250,191,3)"/><text x="649.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 3.50%)</title><rect x="646" y="132" width="41" height="15" fill="rgb(213,226,1)"/><text x="649.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:7) (7 samples, 2.04%)</title><rect x="663" y="148" width="24" height="15" fill="rgb(231,142,15)"/><text x="666.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.04%)</title><rect x="663" y="164" width="24" height="15" fill="rgb(224,23,11)"/><text x="666.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.04%)</title><rect x="663" y="180" width="24" height="15" fill="rgb(253,76,7)"/><text x="666.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.04%)</title><rect x="663" y="196" width="24" height="15" fill="rgb(210,68,43)"/><text x="666.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.04%)</title><rect x="663" y="212" width="24" height="15" fill="rgb(244,121,6)"/><text x="666.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.04%)</title><rect x="663" y="228" width="24" height="15" fill="rgb(222,56,38)"/><text x="666.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.46%)</title><rect x="670" y="244" width="17" height="15" fill="rgb(246,144,49)"/><text x="673.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.46%)</title><rect x="670" y="260" width="17" height="15" fill="rgb(245,28,28)"/><text x="673.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.46%)</title><rect x="670" y="276" width="17" height="15" fill="rgb(251,62,54)"/><text x="673.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.46%)</title><rect x="670" y="292" width="17" height="15" fill="rgb(217,80,5)"/><text x="673.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.46%)</title><rect x="670" y="308" width="17" height="15" fill="rgb(249,93,0)"/><text x="673.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.46%)</title><rect x="670" y="324" width="17" height="15" fill="rgb(253,112,41)"/><text x="673.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.46%)</title><rect x="670" y="340" width="17" height="15" fill="rgb(249,46,8)"/><text x="673.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.46%)</title><rect x="670" y="356" width="17" height="15" fill="rgb(227,160,51)"/><text x="673.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.46%)</title><rect x="670" y="372" width="17" height="15" fill="rgb(250,184,19)"/><text x="673.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.46%)</title><rect x="670" y="388" width="17" height="15" fill="rgb(229,165,0)"/><text x="673.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.46%)</title><rect x="670" y="404" width="17" height="15" fill="rgb(254,133,13)"/><text x="673.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.46%)</title><rect x="670" y="420" width="17" height="15" fill="rgb(241,188,49)"/><text x="673.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.29%)</title><rect x="684" y="436" width="3" height="15" fill="rgb(225,20,11)"/><text x="687.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="452" width="3" height="15" fill="rgb(248,125,22)"/><text x="687.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="684" y="468" width="3" height="15" fill="rgb(210,51,3)"/><text x="687.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="484" width="3" height="15" fill="rgb(235,76,30)"/><text x="687.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="500" width="3" height="15" fill="rgb(251,3,41)"/><text x="687.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="516" width="3" height="15" fill="rgb(221,28,54)"/><text x="687.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="532" width="3" height="15" fill="rgb(219,227,22)"/><text x="687.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="548" width="3" height="15" fill="rgb(251,61,42)"/><text x="687.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="564" width="3" height="15" fill="rgb(208,121,17)"/><text x="687.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.29%)</title><rect x="684" y="580" width="3" height="15" fill="rgb(223,129,0)"/><text x="687.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="596" width="3" height="15" fill="rgb(245,128,23)"/><text x="687.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="612" width="3" height="15" fill="rgb(222,176,7)"/><text x="687.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="628" width="3" height="15" fill="rgb(251,147,9)"/><text x="687.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="644" width="3" height="15" fill="rgb(240,198,54)"/><text x="687.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="660" width="3" height="15" fill="rgb(242,189,11)"/><text x="687.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.29%)</title><rect x="684" y="676" width="3" height="15" fill="rgb(243,81,42)"/><text x="687.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="692" width="3" height="15" fill="rgb(216,124,48)"/><text x="687.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="708" width="3" height="15" fill="rgb(218,36,36)"/><text x="687.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="724" width="3" height="15" fill="rgb(218,214,0)"/><text x="687.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="740" width="3" height="15" fill="rgb(241,182,6)"/><text x="687.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="756" width="3" height="15" fill="rgb(214,69,19)"/><text x="687.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.29%)</title><rect x="684" y="772" width="3" height="15" fill="rgb(224,86,38)"/><text x="687.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="788" width="3" height="15" fill="rgb(223,11,33)"/><text x="687.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="804" width="3" height="15" fill="rgb(226,147,25)"/><text x="687.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="820" width="3" height="15" fill="rgb(218,91,14)"/><text x="687.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="836" width="3" height="15" fill="rgb(220,16,12)"/><text x="687.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="852" width="3" height="15" fill="rgb(224,176,30)"/><text x="687.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.29%)</title><rect x="684" y="868" width="3" height="15" fill="rgb(239,57,32)"/><text x="687.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="884" width="3" height="15" fill="rgb(214,81,0)"/><text x="687.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="684" y="900" width="3" height="15" fill="rgb(235,157,18)"/><text x="687.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="916" width="3" height="15" fill="rgb(215,86,21)"/><text x="687.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="932" width="3" height="15" fill="rgb(215,19,9)"/><text x="687.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="948" width="3" height="15" fill="rgb(230,69,27)"/><text x="687.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="964" width="3" height="15" fill="rgb(253,89,13)"/><text x="687.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="980" width="3" height="15" fill="rgb(223,135,25)"/><text x="687.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="996" width="3" height="15" fill="rgb(209,90,21)"/><text x="687.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.29%)</title><rect x="684" y="1012" width="3" height="15" fill="rgb(226,178,14)"/><text x="687.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="1028" width="3" height="15" fill="rgb(223,128,4)"/><text x="687.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="1044" width="3" height="15" fill="rgb(213,189,50)"/><text x="687.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="1060" width="3" height="15" fill="rgb(214,67,13)"/><text x="687.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="1076" width="3" height="15" fill="rgb(218,52,41)"/><text x="687.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="1092" width="3" height="15" fill="rgb(248,194,22)"/><text x="687.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.29%)</title><rect x="684" y="1108" width="3" height="15" fill="rgb(216,52,29)"/><text x="687.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="1124" width="3" height="15" fill="rgb(222,9,47)"/><text x="687.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="1140" width="3" height="15" fill="rgb(221,71,46)"/><text x="687.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="1156" width="3" height="15" fill="rgb(219,115,8)"/><text x="687.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="1172" width="3" height="15" fill="rgb(219,129,51)"/><text x="687.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="1188" width="3" height="15" fill="rgb(205,226,17)"/><text x="687.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.29%)</title><rect x="684" y="1204" width="3" height="15" fill="rgb(229,181,15)"/><text x="687.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="684" y="1220" width="3" height="15" fill="rgb(235,209,43)"/><text x="687.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="684" y="1236" width="3" height="15" fill="rgb(223,70,28)"/><text x="687.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="684" y="1252" width="3" height="15" fill="rgb(207,199,13)"/><text x="687.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="684" y="1268" width="3" height="15" fill="rgb(206,41,28)"/><text x="687.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="684" y="1284" width="3" height="15" fill="rgb(250,3,6)"/><text x="687.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.29%)</title><rect x="684" y="1300" width="3" height="15" fill="rgb(224,90,48)"/><text x="687.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.29%)</title><rect x="684" y="1316" width="3" height="15" fill="rgb(252,103,3)"/><text x="687.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.29%)</title><rect x="684" y="1332" width="3" height="15" fill="rgb(209,26,13)"/><text x="687.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:955) (1 samples, 0.29%)</title><rect x="684" y="1348" width="3" height="15" fill="rgb(249,207,51)"/><text x="687.00" y="1358.50"></text></g><g><title>findsource (inspect.py:768) (1 samples, 0.29%)</title><rect x="684" y="1364" width="3" height="15" fill="rgb(206,48,7)"/><text x="687.00" y="1374.50"></text></g><g><title>getsourcefile (inspect.py:693) (1 samples, 0.29%)</title><rect x="684" y="1380" width="3" height="15" fill="rgb(220,114,27)"/><text x="687.00" y="1390.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.29%)</title><rect x="684" y="1396" width="3" height="15" fill="rgb(207,99,32)"/><text x="687.00" y="1406.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="684" y="1412" width="3" height="15" fill="rgb(214,3,38)"/><text x="687.00" y="1422.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="691" y="116" width="3" height="15" fill="rgb(228,70,29)"/><text x="694.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:949) (1 samples, 0.29%)</title><rect x="691" y="132" width="3" height="15" fill="rgb(211,186,52)"/><text x="694.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.29%)</title><rect x="715" y="148" width="3" height="15" fill="rgb(251,130,2)"/><text x="718.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.29%)</title><rect x="718" y="148" width="4" height="15" fill="rgb(228,187,37)"/><text x="721.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.29%)</title><rect x="725" y="164" width="4" height="15" fill="rgb(233,198,10)"/><text x="728.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.29%)</title><rect x="729" y="164" width="3" height="15" fill="rgb(208,217,35)"/><text x="732.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (3 samples, 0.87%)</title><rect x="732" y="164" width="10" height="15" fill="rgb(217,72,35)"/><text x="735.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.29%)</title><rect x="753" y="180" width="3" height="15" fill="rgb(235,79,13)"/><text x="756.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.17%)</title><rect x="756" y="180" width="14" height="15" fill="rgb(234,31,50)"/><text x="759.00" y="190.50"></text></g><g><title>array_astype (methods.c:814) (1 samples, 0.29%)</title><rect x="790" y="244" width="4" height="15" fill="rgb(244,101,6)"/><text x="793.00" y="254.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.29%)</title><rect x="794" y="244" width="3" height="15" fill="rgb(243,212,36)"/><text x="797.00" y="254.50"></text></g><g><title>PyArray_NewLikeArray (ctors.c:1346) (1 samples, 0.29%)</title><rect x="794" y="260" width="3" height="15" fill="rgb(218,49,43)"/><text x="797.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.29%)</title><rect x="797" y="276" width="4" height="15" fill="rgb(220,83,24)"/><text x="800.00" y="286.50"></text></g><g><title>0x7feb149c1120 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="797" y="292" width="4" height="15" fill="rgb(226,204,18)"/><text x="800.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:135) (1 samples, 0.29%)</title><rect x="801" y="276" width="3" height="15" fill="rgb(249,98,31)"/><text x="804.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:141) (2 samples, 0.58%)</title><rect x="804" y="276" width="7" height="15" fill="rgb(248,143,8)"/><text x="807.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (9 samples, 2.62%)</title><rect x="784" y="212" width="31" height="15" fill="rgb(227,100,29)"/><text x="787.00" y="222.50">_r..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (9 samples, 2.62%)</title><rect x="784" y="228" width="31" height="15" fill="rgb(251,35,39)"/><text x="787.00" y="238.50">&lt;l..</text></g><g><title>array_astype (methods.c:845) (5 samples, 1.46%)</title><rect x="797" y="244" width="18" height="15" fill="rgb(248,57,27)"/><text x="800.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 1.46%)</title><rect x="797" y="260" width="18" height="15" fill="rgb(216,173,45)"/><text x="800.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.29%)</title><rect x="811" y="276" width="4" height="15" fill="rgb(248,133,15)"/><text x="814.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.29%)</title><rect x="811" y="292" width="4" height="15" fill="rgb(249,209,19)"/><text x="814.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.29%)</title><rect x="811" y="308" width="4" height="15" fill="rgb(222,111,2)"/><text x="814.00" y="318.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.29%)</title><rect x="815" y="228" width="3" height="15" fill="rgb(226,133,21)"/><text x="818.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.58%)</title><rect x="815" y="212" width="6" height="15" fill="rgb(220,113,36)"/><text x="818.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.29%)</title><rect x="818" y="228" width="3" height="15" fill="rgb(235,193,41)"/><text x="821.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (13 samples, 3.79%)</title><rect x="780" y="196" width="45" height="15" fill="rgb(243,146,11)"/><text x="783.00" y="206.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:167) (1 samples, 0.29%)</title><rect x="821" y="212" width="4" height="15" fill="rgb(241,142,15)"/><text x="824.00" y="222.50"></text></g><g><title>0x7fead5b0fc29 (?) (1 samples, 0.29%)</title><rect x="832" y="244" width="3" height="15" fill="rgb(217,99,48)"/><text x="835.00" y="254.50"></text></g><g><title>0x7fead5b16d9e (?) (1 samples, 0.29%)</title><rect x="832" y="260" width="3" height="15" fill="rgb(218,183,26)"/><text x="835.00" y="270.50"></text></g><g><title>0x7fead5b16c56 (?) (1 samples, 0.29%)</title><rect x="832" y="276" width="3" height="15" fill="rgb(245,5,7)"/><text x="835.00" y="286.50"></text></g><g><title>0x7fead5b1c9dd (?) (1 samples, 0.29%)</title><rect x="832" y="292" width="3" height="15" fill="rgb(254,168,20)"/><text x="835.00" y="302.50"></text></g><g><title>0x7fead5b08558 (?) (1 samples, 0.29%)</title><rect x="832" y="308" width="3" height="15" fill="rgb(247,169,24)"/><text x="835.00" y="318.50"></text></g><g><title>0x7fead5b07d67 (?) (1 samples, 0.29%)</title><rect x="832" y="324" width="3" height="15" fill="rgb(242,104,6)"/><text x="835.00" y="334.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:517) (1 samples, 0.29%)</title><rect x="835" y="244" width="4" height="15" fill="rgb(235,92,4)"/><text x="838.00" y="254.50"></text></g><g><title>std::vector&lt;pybind11::detail::argument_record, std::allocator&lt;pybind11::detail::argument_record&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.29%)</title><rect x="835" y="260" width="4" height="15" fill="rgb(227,197,21)"/><text x="838.00" y="270.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (cast.h:44) (1 samples, 0.29%)</title><rect x="839" y="260" width="3" height="15" fill="rgb(219,21,31)"/><text x="842.00" y="270.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.29%)</title><rect x="839" y="276" width="3" height="15" fill="rgb(206,46,28)"/><text x="842.00" y="286.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::emplace_back&lt;_object*&gt; (vector.tcc:94) (1 samples, 0.29%)</title><rect x="839" y="292" width="3" height="15" fill="rgb(235,24,2)"/><text x="842.00" y="302.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h:188) (1 samples, 0.29%)</title><rect x="842" y="356" width="3" height="15" fill="rgb(227,46,25)"/><text x="845.00" y="366.50"></text></g><g><title>pybind11::detail::get_local_type_info (cast.h:170) (1 samples, 0.29%)</title><rect x="842" y="372" width="3" height="15" fill="rgb(229,38,1)"/><text x="845.00" y="382.50"></text></g><g><title>pybind11::detail::registered_local_types_cpp (internals.h:289) (1 samples, 0.29%)</title><rect x="842" y="388" width="3" height="15" fill="rgb(243,98,4)"/><text x="845.00" y="398.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1927) (2 samples, 0.58%)</title><rect x="842" y="308" width="7" height="15" fill="rgb(243,123,3)"/><text x="845.00" y="318.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h:81) (2 samples, 0.58%)</title><rect x="842" y="324" width="7" height="15" fill="rgb(214,188,32)"/><text x="845.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (cast.h:486) (2 samples, 0.58%)</title><rect x="842" y="340" width="7" height="15" fill="rgb(222,62,18)"/><text x="845.00" y="350.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h:190) (1 samples, 0.29%)</title><rect x="845" y="356" width="4" height="15" fill="rgb(212,84,8)"/><text x="848.00" y="366.50"></text></g><g><title>pybind11::detail::get_global_type_info (cast.h:179) (1 samples, 0.29%)</title><rect x="845" y="372" width="4" height="15" fill="rgb(241,179,1)"/><text x="848.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h:851) (1 samples, 0.29%)</title><rect x="845" y="388" width="4" height="15" fill="rgb(253,4,40)"/><text x="848.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1294) (1 samples, 0.29%)</title><rect x="845" y="404" width="4" height="15" fill="rgb(227,169,1)"/><text x="848.00" y="414.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:635) (1 samples, 0.29%)</title><rect x="845" y="420" width="4" height="15" fill="rgb(253,127,36)"/><text x="848.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1414) (1 samples, 0.29%)</title><rect x="845" y="436" width="4" height="15" fill="rgb(217,19,11)"/><text x="848.00" y="446.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (3 samples, 0.87%)</title><rect x="842" y="276" width="10" height="15" fill="rgb(241,73,12)"/><text x="845.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (3 samples, 0.87%)</title><rect x="842" y="292" width="10" height="15" fill="rgb(207,102,17)"/><text x="845.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.29%)</title><rect x="849" y="308" width="3" height="15" fill="rgb(233,219,50)"/><text x="852.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.29%)</title><rect x="849" y="324" width="3" height="15" fill="rgb(222,189,5)"/><text x="852.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.29%)</title><rect x="849" y="340" width="3" height="15" fill="rgb(254,216,24)"/><text x="852.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.29%)</title><rect x="849" y="356" width="3" height="15" fill="rgb(208,220,35)"/><text x="852.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.29%)</title><rect x="849" y="372" width="3" height="15" fill="rgb(248,131,18)"/><text x="852.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.29%)</title><rect x="849" y="388" width="3" height="15" fill="rgb(238,116,9)"/><text x="852.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.29%)</title><rect x="849" y="404" width="3" height="15" fill="rgb(239,124,20)"/><text x="852.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.29%)</title><rect x="849" y="420" width="3" height="15" fill="rgb(216,72,32)"/><text x="852.00" y="430.50"></text></g><g><title>pybind11::dtype::of&lt;float&gt; (numpy.h:479) (1 samples, 0.29%)</title><rect x="852" y="500" width="4" height="15" fill="rgb(230,71,17)"/><text x="855.00" y="510.50"></text></g><g><title>pybind11::detail::npy_format_descriptor&lt;float, void&gt;::dtype (numpy.h:1046) (1 samples, 0.29%)</title><rect x="852" y="516" width="4" height="15" fill="rgb(212,225,32)"/><text x="855.00" y="526.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.29%)</title><rect x="852" y="532" width="4" height="15" fill="rgb(208,188,10)"/><text x="855.00" y="542.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h:867) (2 samples, 0.58%)</title><rect x="852" y="436" width="7" height="15" fill="rgb(254,146,13)"/><text x="855.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (2 samples, 0.58%)</title><rect x="852" y="452" width="7" height="15" fill="rgb(209,31,2)"/><text x="855.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.58%)</title><rect x="852" y="468" width="7" height="15" fill="rgb(238,102,20)"/><text x="855.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (2 samples, 0.58%)</title><rect x="852" y="484" width="7" height="15" fill="rgb(208,221,37)"/><text x="855.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.29%)</title><rect x="856" y="500" width="3" height="15" fill="rgb(220,229,42)"/><text x="859.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.29%)</title><rect x="856" y="516" width="3" height="15" fill="rgb(234,14,27)"/><text x="859.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.29%)</title><rect x="856" y="532" width="3" height="15" fill="rgb(247,136,31)"/><text x="859.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.29%)</title><rect x="856" y="548" width="3" height="15" fill="rgb(244,108,17)"/><text x="859.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="856" y="564" width="3" height="15" fill="rgb(226,194,5)"/><text x="859.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.29%)</title><rect x="856" y="580" width="3" height="15" fill="rgb(229,224,25)"/><text x="859.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:258) (3 samples, 0.87%)</title><rect x="852" y="420" width="11" height="15" fill="rgb(205,212,33)"/><text x="855.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (1 samples, 0.29%)</title><rect x="859" y="436" width="4" height="15" fill="rgb(243,105,37)"/><text x="862.00" y="446.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (1 samples, 0.29%)</title><rect x="859" y="452" width="4" height="15" fill="rgb(251,221,10)"/><text x="862.00" y="462.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (1 samples, 0.29%)</title><rect x="859" y="468" width="4" height="15" fill="rgb(232,154,25)"/><text x="862.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.29%)</title><rect x="859" y="484" width="4" height="15" fill="rgb(220,228,45)"/><text x="862.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.29%)</title><rect x="859" y="500" width="4" height="15" fill="rgb(244,36,51)"/><text x="862.00" y="510.50"></text></g><g><title>pybind11::make_tuple&lt;(pybind11::return_value_policy)1, pybind11::array_t&lt;long, 16&gt;&amp;, pybind11::array_t&lt;float, 16&gt;&amp;&gt; (cast.h:1775) (1 samples, 0.29%)</title><rect x="859" y="516" width="4" height="15" fill="rgb(234,165,20)"/><text x="862.00" y="526.50"></text></g><g><title>pybind11::tuple::tuple (pytypes.h:1202) (1 samples, 0.29%)</title><rect x="859" y="532" width="4" height="15" fill="rgb(222,108,44)"/><text x="862.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.29%)</title><rect x="863" y="468" width="3" height="15" fill="rgb(208,165,42)"/><text x="866.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1425) (1 samples, 0.29%)</title><rect x="863" y="484" width="3" height="15" fill="rgb(233,190,2)"/><text x="866.00" y="494.50"></text></g><g><title>std::max&lt;unsigned long&gt; (stl_algobase.h:224) (1 samples, 0.29%)</title><rect x="863" y="500" width="3" height="15" fill="rgb(205,156,34)"/><text x="866.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (2 samples, 0.58%)</title><rect x="863" y="452" width="7" height="15" fill="rgb(237,130,39)"/><text x="866.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.29%)</title><rect x="866" y="468" width="4" height="15" fill="rgb(252,213,21)"/><text x="869.00" y="478.50"></text></g><g><title>0x7feb149a0be4 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="866" y="484" width="4" height="15" fill="rgb(212,200,22)"/><text x="869.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (1 samples, 0.29%)</title><rect x="870" y="468" width="3" height="15" fill="rgb(239,179,14)"/><text x="873.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (2 samples, 0.58%)</title><rect x="870" y="452" width="6" height="15" fill="rgb(210,45,0)"/><text x="873.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (1 samples, 0.29%)</title><rect x="873" y="468" width="3" height="15" fill="rgb(243,40,18)"/><text x="876.00" y="478.50"></text></g><g><title>expf32x (libm-2.29.so) (1 samples, 0.29%)</title><rect x="873" y="484" width="3" height="15" fill="rgb(254,63,52)"/><text x="876.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (16 samples, 4.66%)</title><rect x="825" y="228" width="55" height="15" fill="rgb(218,107,16)"/><text x="828.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (12 samples, 3.50%)</title><rect x="839" y="244" width="41" height="15" fill="rgb(241,56,39)"/><text x="842.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (11 samples, 3.21%)</title><rect x="842" y="260" width="38" height="15" fill="rgb(248,55,14)"/><text x="845.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (8 samples, 2.33%)</title><rect x="852" y="276" width="28" height="15" fill="rgb(252,5,32)"/><text x="855.00" y="286.50">v..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (8 samples, 2.33%)</title><rect x="852" y="292" width="28" height="15" fill="rgb(228,31,7)"/><text x="855.00" y="302.50">p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (8 samples, 2.33%)</title><rect x="852" y="308" width="28" height="15" fill="rgb(243,178,44)"/><text x="855.00" y="318.50">p..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (8 samples, 2.33%)</title><rect x="852" y="324" width="28" height="15" fill="rgb(233,138,22)"/><text x="855.00" y="334.50">p..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (8 samples, 2.33%)</title><rect x="852" y="340" width="28" height="15" fill="rgb(213,76,42)"/><text x="855.00" y="350.50">p..</text></g><g><title>pybind11::array::~array (numpy.h:538) (8 samples, 2.33%)</title><rect x="852" y="356" width="28" height="15" fill="rgb(212,177,40)"/><text x="855.00" y="366.50">p..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (8 samples, 2.33%)</title><rect x="852" y="372" width="28" height="15" fill="rgb(244,102,12)"/><text x="855.00" y="382.50">p..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (8 samples, 2.33%)</title><rect x="852" y="388" width="28" height="15" fill="rgb(252,172,31)"/><text x="855.00" y="398.50">p..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (8 samples, 2.33%)</title><rect x="852" y="404" width="28" height="15" fill="rgb(215,164,8)"/><text x="855.00" y="414.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (5 samples, 1.46%)</title><rect x="863" y="420" width="17" height="15" fill="rgb(243,130,40)"/><text x="866.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (5 samples, 1.46%)</title><rect x="863" y="436" width="17" height="15" fill="rgb(242,2,13)"/><text x="866.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (1 samples, 0.29%)</title><rect x="876" y="452" width="4" height="15" fill="rgb(247,115,6)"/><text x="879.00" y="462.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.29%)</title><rect x="890" y="244" width="4" height="15" fill="rgb(241,86,34)"/><text x="893.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:45) (1 samples, 0.29%)</title><rect x="890" y="260" width="4" height="15" fill="rgb(215,94,26)"/><text x="893.00" y="270.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.29%)</title><rect x="894" y="244" width="3" height="15" fill="rgb(222,208,40)"/><text x="897.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.29%)</title><rect x="894" y="260" width="3" height="15" fill="rgb(211,92,30)"/><text x="897.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.29%)</title><rect x="894" y="276" width="3" height="15" fill="rgb(250,36,1)"/><text x="897.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (6 samples, 1.75%)</title><rect x="880" y="228" width="21" height="15" fill="rgb(207,79,25)"/><text x="883.00" y="238.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.29%)</title><rect x="897" y="244" width="4" height="15" fill="rgb(222,72,28)"/><text x="900.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.29%)</title><rect x="897" y="260" width="4" height="15" fill="rgb(243,124,43)"/><text x="900.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.29%)</title><rect x="897" y="276" width="4" height="15" fill="rgb(246,34,21)"/><text x="900.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.29%)</title><rect x="897" y="292" width="4" height="15" fill="rgb(212,153,16)"/><text x="900.00" y="302.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:165) (1 samples, 0.29%)</title><rect x="897" y="308" width="4" height="15" fill="rgb(254,86,50)"/><text x="900.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (23 samples, 6.71%)</title><rect x="825" y="196" width="79" height="15" fill="rgb(249,117,7)"/><text x="828.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (23 samples, 6.71%)</title><rect x="825" y="212" width="79" height="15" fill="rgb(217,186,1)"/><text x="828.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:63) (1 samples, 0.29%)</title><rect x="901" y="228" width="3" height="15" fill="rgb(247,182,42)"/><text x="904.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (43 samples, 12.54%)</title><rect x="770" y="180" width="148" height="15" fill="rgb(219,78,5)"/><text x="773.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (4 samples, 1.17%)</title><rect x="904" y="196" width="14" height="15" fill="rgb(236,70,39)"/><text x="907.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.29%)</title><rect x="914" y="212" width="4" height="15" fill="rgb(249,138,44)"/><text x="917.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.29%)</title><rect x="918" y="180" width="3" height="15" fill="rgb(244,163,18)"/><text x="921.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.29%)</title><rect x="921" y="180" width="4" height="15" fill="rgb(245,110,3)"/><text x="924.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.58%)</title><rect x="925" y="180" width="6" height="15" fill="rgb(225,228,18)"/><text x="928.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.58%)</title><rect x="931" y="180" width="7" height="15" fill="rgb(231,183,2)"/><text x="934.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (60 samples, 17.49%)</title><rect x="742" y="164" width="207" height="15" fill="rgb(228,19,26)"/><text x="745.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.87%)</title><rect x="938" y="180" width="11" height="15" fill="rgb(238,135,16)"/><text x="941.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:45) (80 samples, 23.32%)</title><rect x="687" y="52" width="275" height="15" fill="rgb(220,129,18)"/><text x="690.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabi..</text></g><g><title>profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:44) (80 samples, 23.32%)</title><rect x="687" y="68" width="275" height="15" fill="rgb(248,185,14)"/><text x="690.00" y="78.50">profile_pyrt (bench_SVC_rbf_m_cl_pro..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29) (80 samples, 23.32%)</title><rect x="687" y="84" width="275" height="15" fill="rgb(208,151,25)"/><text x="690.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_pr..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23) (80 samples, 23.32%)</title><rect x="687" y="100" width="275" height="15" fill="rgb(222,59,51)"/><text x="690.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (78 samples, 22.74%)</title><rect x="694" y="116" width="268" height="15" fill="rgb(222,210,24)"/><text x="697.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (74 samples, 21.57%)</title><rect x="708" y="132" width="254" height="15" fill="rgb(208,164,33)"/><text x="711.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (70 samples, 20.41%)</title><rect x="722" y="148" width="240" height="15" fill="rgb(250,191,21)"/><text x="725.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.17%)</title><rect x="949" y="164" width="13" height="15" fill="rgb(207,173,26)"/><text x="952.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.29%)</title><rect x="959" y="180" width="3" height="15" fill="rgb(228,60,38)"/><text x="962.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="962" y="116" width="4" height="15" fill="rgb(209,23,0)"/><text x="965.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="962" y="132" width="4" height="15" fill="rgb(228,53,2)"/><text x="965.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.29%)</title><rect x="962" y="148" width="4" height="15" fill="rgb(243,71,14)"/><text x="965.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.29%)</title><rect x="987" y="148" width="3" height="15" fill="rgb(217,140,22)"/><text x="990.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.29%)</title><rect x="990" y="148" width="3" height="15" fill="rgb(231,114,44)"/><text x="993.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (3 samples, 0.87%)</title><rect x="1011" y="196" width="10" height="15" fill="rgb(217,61,36)"/><text x="1014.00" y="206.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1028" y="260" width="3" height="15" fill="rgb(242,147,27)"/><text x="1031.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1028" y="276" width="3" height="15" fill="rgb(247,62,15)"/><text x="1031.00" y="286.50"></text></g><g><title>0x7feb149b6e7e (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1031" y="292" width="4" height="15" fill="rgb(245,84,41)"/><text x="1034.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 1.46%)</title><rect x="1021" y="196" width="17" height="15" fill="rgb(208,15,38)"/><text x="1024.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.46%)</title><rect x="1021" y="212" width="17" height="15" fill="rgb(208,221,17)"/><text x="1024.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.17%)</title><rect x="1024" y="228" width="14" height="15" fill="rgb(221,84,11)"/><text x="1027.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1028" y="244" width="10" height="15" fill="rgb(212,193,10)"/><text x="1031.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1031" y="260" width="7" height="15" fill="rgb(231,16,54)"/><text x="1034.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1031" y="276" width="7" height="15" fill="rgb(234,193,15)"/><text x="1034.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1035" y="292" width="3" height="15" fill="rgb(234,178,36)"/><text x="1038.00" y="302.50"></text></g><g><title>0x7fead49d0ff9 (?) (1 samples, 0.29%)</title><rect x="1048" y="212" width="4" height="15" fill="rgb(251,57,37)"/><text x="1051.00" y="222.50"></text></g><g><title>0x7fead49cbef6 (?) (1 samples, 0.29%)</title><rect x="1048" y="228" width="4" height="15" fill="rgb(227,142,49)"/><text x="1051.00" y="238.50"></text></g><g><title>0x7fead49c0962 (?) (1 samples, 0.29%)</title><rect x="1048" y="244" width="4" height="15" fill="rgb(235,146,42)"/><text x="1051.00" y="254.50"></text></g><g><title>0x7fead49f47a7 (?) (1 samples, 0.29%)</title><rect x="1048" y="260" width="4" height="15" fill="rgb(251,12,45)"/><text x="1051.00" y="270.50"></text></g><g><title>0x7fead49f4379 (?) (1 samples, 0.29%)</title><rect x="1048" y="276" width="4" height="15" fill="rgb(242,123,42)"/><text x="1051.00" y="286.50"></text></g><g><title>0x7fead4e528b8 (?) (1 samples, 0.29%)</title><rect x="1048" y="292" width="4" height="15" fill="rgb(220,121,31)"/><text x="1051.00" y="302.50"></text></g><g><title>0x7fead4e50c7f (?) (1 samples, 0.29%)</title><rect x="1048" y="308" width="4" height="15" fill="rgb(224,136,27)"/><text x="1051.00" y="318.50"></text></g><g><title>0x7fead4e6399c (?) (1 samples, 0.29%)</title><rect x="1048" y="324" width="4" height="15" fill="rgb(228,119,51)"/><text x="1051.00" y="334.50"></text></g><g><title>0x7fead4b69052 (?) (1 samples, 0.29%)</title><rect x="1048" y="340" width="4" height="15" fill="rgb(228,78,0)"/><text x="1051.00" y="350.50"></text></g><g><title>0x7fead4b6807a (?) (1 samples, 0.29%)</title><rect x="1048" y="356" width="4" height="15" fill="rgb(212,170,45)"/><text x="1051.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1052" y="292" width="3" height="15" fill="rgb(222,143,8)"/><text x="1055.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1052" y="308" width="3" height="15" fill="rgb(246,65,39)"/><text x="1055.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1052" y="324" width="3" height="15" fill="rgb(207,43,45)"/><text x="1055.00" y="334.50"></text></g><g><title>0x7feb149a1b8e (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1055" y="340" width="4" height="15" fill="rgb(243,193,7)"/><text x="1058.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1055" y="292" width="7" height="15" fill="rgb(239,133,40)"/><text x="1058.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.58%)</title><rect x="1055" y="308" width="7" height="15" fill="rgb(228,227,48)"/><text x="1058.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.58%)</title><rect x="1055" y="324" width="7" height="15" fill="rgb(239,189,19)"/><text x="1058.00" y="334.50"></text></g><g><title>0x7feb149a1c48 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1059" y="340" width="3" height="15" fill="rgb(253,36,51)"/><text x="1062.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1069" y="340" width="4" height="15" fill="rgb(207,168,45)"/><text x="1072.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1073" y="340" width="3" height="15" fill="rgb(213,68,52)"/><text x="1076.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1073" y="356" width="3" height="15" fill="rgb(219,107,18)"/><text x="1076.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1073" y="372" width="3" height="15" fill="rgb(251,93,21)"/><text x="1076.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1073" y="388" width="3" height="15" fill="rgb(246,57,45)"/><text x="1076.00" y="398.50"></text></g><g><title>0x7feb149af6a2 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1073" y="404" width="3" height="15" fill="rgb(239,31,49)"/><text x="1076.00" y="414.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1076" y="340" width="3" height="15" fill="rgb(252,121,14)"/><text x="1079.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1076" y="356" width="3" height="15" fill="rgb(241,106,17)"/><text x="1079.00" y="366.50"></text></g><g><title>0x7feb14b1fe71 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1086" y="356" width="4" height="15" fill="rgb(208,57,1)"/><text x="1089.00" y="366.50"></text></g><g><title>0x7feb14b72ba5 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1093" y="372" width="4" height="15" fill="rgb(218,154,23)"/><text x="1096.00" y="382.50"></text></g><g><title>0x7feb14b72c18 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1097" y="372" width="3" height="15" fill="rgb(232,82,23)"/><text x="1100.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (4 samples, 1.17%)</title><rect x="1090" y="356" width="13" height="15" fill="rgb(228,68,54)"/><text x="1093.00" y="366.50"></text></g><g><title>0x7feb14b72c52 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1100" y="372" width="3" height="15" fill="rgb(225,160,35)"/><text x="1103.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1103" y="356" width="4" height="15" fill="rgb(251,185,10)"/><text x="1106.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1107" y="452" width="7" height="15" fill="rgb(252,28,37)"/><text x="1110.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1107" y="468" width="7" height="15" fill="rgb(233,77,37)"/><text x="1110.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1107" y="484" width="7" height="15" fill="rgb(207,227,42)"/><text x="1110.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1107" y="500" width="7" height="15" fill="rgb(232,74,22)"/><text x="1110.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1110" y="516" width="4" height="15" fill="rgb(229,169,31)"/><text x="1113.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1110" y="532" width="4" height="15" fill="rgb(223,103,38)"/><text x="1113.00" y="542.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1107" y="356" width="10" height="15" fill="rgb(248,19,39)"/><text x="1110.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1107" y="372" width="10" height="15" fill="rgb(207,187,54)"/><text x="1110.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1107" y="388" width="10" height="15" fill="rgb(251,61,38)"/><text x="1110.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1107" y="404" width="10" height="15" fill="rgb(245,164,3)"/><text x="1110.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1107" y="420" width="10" height="15" fill="rgb(222,96,11)"/><text x="1110.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1107" y="436" width="10" height="15" fill="rgb(223,18,43)"/><text x="1110.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1114" y="452" width="3" height="15" fill="rgb(208,53,13)"/><text x="1117.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1114" y="468" width="3" height="15" fill="rgb(223,108,15)"/><text x="1117.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1114" y="484" width="3" height="15" fill="rgb(226,33,51)"/><text x="1117.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1117" y="356" width="4" height="15" fill="rgb(253,224,40)"/><text x="1120.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1117" y="372" width="4" height="15" fill="rgb(226,169,19)"/><text x="1120.00" y="382.50"></text></g><g><title>0x7feb149a200a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1117" y="388" width="4" height="15" fill="rgb(227,140,53)"/><text x="1120.00" y="398.50"></text></g><g><title>0x7feb149a0bdc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1121" y="372" width="3" height="15" fill="rgb(244,129,36)"/><text x="1124.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.08%)</title><rect x="1079" y="340" width="49" height="15" fill="rgb(253,54,14)"/><text x="1082.00" y="350.50">onnx..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1121" y="356" width="7" height="15" fill="rgb(214,43,15)"/><text x="1124.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1124" y="372" width="4" height="15" fill="rgb(225,195,13)"/><text x="1127.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1124" y="388" width="4" height="15" fill="rgb(232,68,44)"/><text x="1127.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.12%)</title><rect x="1066" y="308" width="72" height="15" fill="rgb(235,227,23)"/><text x="1069.00" y="318.50">onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.12%)</title><rect x="1066" y="324" width="72" height="15" fill="rgb(235,58,47)"/><text x="1069.00" y="334.50">onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.87%)</title><rect x="1128" y="340" width="10" height="15" fill="rgb(230,199,50)"/><text x="1131.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1134" y="356" width="4" height="15" fill="rgb(213,178,15)"/><text x="1137.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 6.71%)</title><rect x="1062" y="292" width="79" height="15" fill="rgb(233,203,31)"/><text x="1065.00" y="302.50">onnxrunti..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1138" y="308" width="3" height="15" fill="rgb(219,144,41)"/><text x="1141.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1138" y="324" width="3" height="15" fill="rgb(240,14,6)"/><text x="1141.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 7.87%)</title><rect x="1052" y="260" width="93" height="15" fill="rgb(229,9,12)"/><text x="1055.00" y="270.50">onnxruntime..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 7.87%)</title><rect x="1052" y="276" width="93" height="15" fill="rgb(237,181,52)"/><text x="1055.00" y="286.50">onnxruntime..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1141" y="292" width="4" height="15" fill="rgb(214,84,14)"/><text x="1144.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1141" y="308" width="4" height="15" fill="rgb(238,3,40)"/><text x="1144.00" y="318.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, float, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1145" y="260" width="3" height="15" fill="rgb(240,139,1)"/><text x="1148.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1148" y="276" width="4" height="15" fill="rgb(224,161,51)"/><text x="1151.00" y="286.50"></text></g><g><title>0x7feb0446d7a0 (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1148" y="292" width="4" height="15" fill="rgb(210,92,27)"/><text x="1151.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1148" y="260" width="7" height="15" fill="rgb(243,56,14)"/><text x="1151.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="1152" y="276" width="3" height="15" fill="rgb(238,148,30)"/><text x="1155.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1155" y="260" width="4" height="15" fill="rgb(250,87,11)"/><text x="1158.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.29%)</title><rect x="1155" y="276" width="4" height="15" fill="rgb(241,86,22)"/><text x="1158.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="1155" y="292" width="4" height="15" fill="rgb(220,130,34)"/><text x="1158.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.29%)</title><rect x="1155" y="308" width="4" height="15" fill="rgb(207,148,53)"/><text x="1158.00" y="318.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1159" y="260" width="3" height="15" fill="rgb(233,108,15)"/><text x="1162.00" y="270.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.925] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1162" y="260" width="3" height="15" fill="rgb(215,59,18)"/><text x="1165.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1162" y="276" width="3" height="15" fill="rgb(238,114,2)"/><text x="1165.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1162" y="292" width="3" height="15" fill="rgb(205,178,45)"/><text x="1165.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 9.91%)</title><rect x="1052" y="244" width="117" height="15" fill="rgb(227,212,25)"/><text x="1055.00" y="254.50">onnxruntime::p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1165" y="260" width="4" height="15" fill="rgb(238,98,47)"/><text x="1168.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1165" y="276" width="4" height="15" fill="rgb(253,76,18)"/><text x="1168.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (51 samples, 14.87%)</title><rect x="997" y="164" width="175" height="15" fill="rgb(219,222,32)"/><text x="1000.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (50 samples, 14.58%)</title><rect x="1000" y="180" width="172" height="15" fill="rgb(220,6,23)"/><text x="1003.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (39 samples, 11.37%)</title><rect x="1038" y="196" width="134" height="15" fill="rgb(206,172,54)"/><text x="1041.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 10.20%)</title><rect x="1052" y="212" width="120" height="15" fill="rgb(226,195,21)"/><text x="1055.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 10.20%)</title><rect x="1052" y="228" width="120" height="15" fill="rgb(234,57,9)"/><text x="1055.00" y="238.50">void pybind11:..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1169" y="244" width="3" height="15" fill="rgb(236,27,27)"/><text x="1172.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (61 samples, 17.78%)</title><rect x="976" y="132" width="210" height="15" fill="rgb(240,89,38)"/><text x="979.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (56 samples, 16.33%)</title><rect x="993" y="148" width="193" height="15" fill="rgb(244,218,32)"/><text x="996.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.17%)</title><rect x="1172" y="164" width="14" height="15" fill="rgb(250,28,24)"/><text x="1175.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.58%)</title><rect x="1179" y="180" width="7" height="15" fill="rgb(206,135,9)"/><text x="1182.00" y="190.50"></text></g><g><title>all (343 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(206,154,10)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:52) (66 samples, 19.24%)</title><rect x="962" y="52" width="228" height="15" fill="rgb(243,33,21)"/><text x="965.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_p..</text></g><g><title>profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:51) (66 samples, 19.24%)</title><rect x="962" y="68" width="228" height="15" fill="rgb(225,60,24)"/><text x="965.00" y="78.50">profile_ort (bench_SVC_rbf_m_c..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29) (66 samples, 19.24%)</title><rect x="962" y="84" width="228" height="15" fill="rgb(247,136,5)"/><text x="965.00" y="94.50">setup_profile (bench_SVC_rbf_m..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23) (66 samples, 19.24%)</title><rect x="962" y="100" width="228" height="15" fill="rgb(226,125,35)"/><text x="965.00" y="110.50">profile (bench_SVC_rbf_m_cl_pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (65 samples, 18.95%)</title><rect x="966" y="116" width="224" height="15" fill="rgb(238,52,24)"/><text x="969.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(220,178,31)"/><text x="1189.00" y="142.50"></text></g></g></svg>