<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1830" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1813.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1813.00"> </text><g id="frames"><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:515) (1 samples, 0.19%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(246,166,11)"/><text x="13.00" y="158.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py:699) (1 samples, 0.19%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(225,178,1)"/><text x="13.00" y="174.50"></text></g><g><title>resample (sklearn/utils/__init__.py:582) (1 samples, 0.19%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(244,61,19)"/><text x="13.00" y="190.50"></text></g><g><title>check_consistent_length (sklearn/utils/validation.py:208) (1 samples, 0.19%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(207,67,11)"/><text x="13.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:208) (1 samples, 0.19%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(239,56,30)"/><text x="13.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.19%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(210,147,23)"/><text x="13.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(218,6,50)"/><text x="13.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(253,105,15)"/><text x="17.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.19%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(227,18,43)"/><text x="17.00" y="238.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:229) (1 samples, 0.19%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(241,196,44)"/><text x="17.00" y="254.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (3 samples, 0.56%)</title><rect x="12" y="164" width="6" height="15" fill="rgb(233,86,32)"/><text x="15.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (3 samples, 0.56%)</title><rect x="12" y="180" width="6" height="15" fill="rgb(210,215,17)"/><text x="15.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="14" y="196" width="4" height="15" fill="rgb(246,163,35)"/><text x="17.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(247,59,8)"/><text x="19.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(209,6,35)"/><text x="19.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(226,147,4)"/><text x="19.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(249,55,29)"/><text x="19.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="16" y="276" width="2" height="15" fill="rgb(223,217,16)"/><text x="19.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.19%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(233,51,44)"/><text x="19.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.19%)</title><rect x="16" y="308" width="2" height="15" fill="rgb(205,28,50)"/><text x="19.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:31) (5 samples, 0.93%)</title><rect x="10" y="52" width="11" height="15" fill="rgb(213,69,26)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:11) (5 samples, 0.93%)</title><rect x="10" y="68" width="11" height="15" fill="rgb(240,131,1)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:39) (5 samples, 0.93%)</title><rect x="10" y="84" width="11" height="15" fill="rgb(210,49,22)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (5 samples, 0.93%)</title><rect x="10" y="100" width="11" height="15" fill="rgb(253,110,10)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:995) (5 samples, 0.93%)</title><rect x="10" y="116" width="11" height="15" fill="rgb(254,86,23)"/><text x="13.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (5 samples, 0.93%)</title><rect x="10" y="132" width="11" height="15" fill="rgb(206,89,43)"/><text x="13.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (4 samples, 0.75%)</title><rect x="12" y="148" width="9" height="15" fill="rgb(224,132,51)"/><text x="15.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:244) (1 samples, 0.19%)</title><rect x="18" y="164" width="3" height="15" fill="rgb(229,58,52)"/><text x="21.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:129) (1 samples, 0.19%)</title><rect x="18" y="180" width="3" height="15" fill="rgb(220,58,45)"/><text x="21.00" y="190.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="18" y="196" width="3" height="15" fill="rgb(212,135,49)"/><text x="21.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="18" y="212" width="3" height="15" fill="rgb(251,36,49)"/><text x="21.00" y="222.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3256) (1 samples, 0.19%)</title><rect x="18" y="228" width="3" height="15" fill="rgb(232,187,29)"/><text x="21.00" y="238.50"></text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:28) (1 samples, 0.19%)</title><rect x="21" y="84" width="2" height="15" fill="rgb(210,215,40)"/><text x="24.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="21" y="100" width="2" height="15" fill="rgb(219,38,8)"/><text x="24.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.19%)</title><rect x="21" y="116" width="2" height="15" fill="rgb(245,163,32)"/><text x="24.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.19%)</title><rect x="21" y="132" width="2" height="15" fill="rgb(232,118,38)"/><text x="24.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.19%)</title><rect x="21" y="148" width="2" height="15" fill="rgb(249,204,22)"/><text x="24.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:132) (1 samples, 0.19%)</title><rect x="21" y="164" width="2" height="15" fill="rgb(212,197,17)"/><text x="24.00" y="174.50"></text></g><g><title>parse_sklearn_model (skl2onnx/_parse.py:457) (1 samples, 0.19%)</title><rect x="21" y="180" width="2" height="15" fill="rgb(206,113,51)"/><text x="24.00" y="190.50"></text></g><g><title>declare_scope (skl2onnx/common/_topology.py:524) (1 samples, 0.19%)</title><rect x="21" y="196" width="2" height="15" fill="rgb(250,173,0)"/><text x="24.00" y="206.50"></text></g><g><title>get_unique_scope_name (skl2onnx/common/_topology.py:515) (1 samples, 0.19%)</title><rect x="21" y="212" width="2" height="15" fill="rgb(209,29,54)"/><text x="24.00" y="222.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:496) (1 samples, 0.19%)</title><rect x="21" y="228" width="2" height="15" fill="rgb(241,14,31)"/><text x="24.00" y="238.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.19%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(217,12,52)"/><text x="24.00" y="254.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(234,7,47)"/><text x="24.00" y="270.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.19%)</title><rect x="21" y="276" width="2" height="15" fill="rgb(243,88,2)"/><text x="24.00" y="286.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.19%)</title><rect x="21" y="292" width="2" height="15" fill="rgb(223,0,36)"/><text x="24.00" y="302.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.19%)</title><rect x="21" y="308" width="2" height="15" fill="rgb(216,205,24)"/><text x="24.00" y="318.50"></text></g><g><title>_optimize_charset (sre_compile.py:312) (1 samples, 0.19%)</title><rect x="21" y="324" width="2" height="15" fill="rgb(226,159,16)"/><text x="24.00" y="334.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1071) (1 samples, 0.19%)</title><rect x="23" y="148" width="2" height="15" fill="rgb(252,70,4)"/><text x="26.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="23" y="164" width="2" height="15" fill="rgb(207,135,13)"/><text x="26.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.19%)</title><rect x="23" y="180" width="2" height="15" fill="rgb(234,112,2)"/><text x="26.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="23" y="196" width="2" height="15" fill="rgb(207,161,16)"/><text x="26.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (2 samples, 0.37%)</title><rect x="25" y="164" width="4" height="15" fill="rgb(243,1,26)"/><text x="28.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.37%)</title><rect x="25" y="180" width="4" height="15" fill="rgb(208,6,14)"/><text x="28.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.19%)</title><rect x="27" y="196" width="2" height="15" fill="rgb(243,122,24)"/><text x="30.00" y="206.50"></text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:18) (4 samples, 0.75%)</title><rect x="23" y="100" width="9" height="15" fill="rgb(246,4,44)"/><text x="26.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.75%)</title><rect x="23" y="116" width="9" height="15" fill="rgb(229,45,43)"/><text x="26.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 0.75%)</title><rect x="23" y="132" width="9" height="15" fill="rgb(213,30,27)"/><text x="26.00" y="142.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (3 samples, 0.56%)</title><rect x="25" y="148" width="7" height="15" fill="rgb(222,119,21)"/><text x="28.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (1 samples, 0.19%)</title><rect x="29" y="164" width="3" height="15" fill="rgb(246,4,48)"/><text x="32.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (1 samples, 0.19%)</title><rect x="29" y="180" width="3" height="15" fill="rgb(245,64,8)"/><text x="32.00" y="190.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (1 samples, 0.19%)</title><rect x="29" y="196" width="3" height="15" fill="rgb(208,9,52)"/><text x="32.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="29" y="212" width="3" height="15" fill="rgb(219,190,22)"/><text x="32.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="29" y="228" width="3" height="15" fill="rgb(224,161,24)"/><text x="32.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.19%)</title><rect x="29" y="244" width="3" height="15" fill="rgb(208,189,17)"/><text x="32.00" y="254.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.19%)</title><rect x="29" y="260" width="3" height="15" fill="rgb(227,23,5)"/><text x="32.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.19%)</title><rect x="29" y="276" width="3" height="15" fill="rgb(251,119,4)"/><text x="32.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.19%)</title><rect x="29" y="292" width="3" height="15" fill="rgb(245,56,48)"/><text x="32.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:677) (1 samples, 0.19%)</title><rect x="29" y="308" width="3" height="15" fill="rgb(213,28,30)"/><text x="32.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (4 samples, 0.75%)</title><rect x="34" y="164" width="9" height="15" fill="rgb(214,203,51)"/><text x="37.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.37%)</title><rect x="38" y="180" width="5" height="15" fill="rgb(218,58,21)"/><text x="41.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.37%)</title><rect x="47" y="180" width="4" height="15" fill="rgb(251,64,16)"/><text x="50.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.56%)</title><rect x="62" y="196" width="7" height="15" fill="rgb(224,62,33)"/><text x="65.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 1.87%)</title><rect x="51" y="180" width="22" height="15" fill="rgb(245,59,48)"/><text x="54.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.37%)</title><rect x="69" y="196" width="4" height="15" fill="rgb(216,71,21)"/><text x="72.00" y="206.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1071) (25 samples, 4.67%)</title><rect x="34" y="148" width="55" height="15" fill="rgb(253,206,4)"/><text x="37.00" y="158.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (21 samples, 3.93%)</title><rect x="43" y="164" width="46" height="15" fill="rgb(241,178,6)"/><text x="46.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (7 samples, 1.31%)</title><rect x="73" y="180" width="16" height="15" fill="rgb(206,163,43)"/><text x="76.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.37%)</title><rect x="84" y="196" width="5" height="15" fill="rgb(210,107,32)"/><text x="87.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:443) (1 samples, 0.19%)</title><rect x="89" y="180" width="2" height="15" fill="rgb(209,78,31)"/><text x="92.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.19%)</title><rect x="91" y="180" width="2" height="15" fill="rgb(221,158,43)"/><text x="94.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.19%)</title><rect x="93" y="180" width="3" height="15" fill="rgb(235,67,41)"/><text x="96.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.19%)</title><rect x="96" y="180" width="2" height="15" fill="rgb(219,147,15)"/><text x="99.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.19%)</title><rect x="98" y="196" width="2" height="15" fill="rgb(208,155,21)"/><text x="101.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.19%)</title><rect x="100" y="196" width="2" height="15" fill="rgb(205,220,47)"/><text x="103.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (2 samples, 0.37%)</title><rect x="102" y="196" width="5" height="15" fill="rgb(238,118,43)"/><text x="105.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 0.93%)</title><rect x="98" y="180" width="11" height="15" fill="rgb(237,79,50)"/><text x="101.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.19%)</title><rect x="107" y="196" width="2" height="15" fill="rgb(233,103,54)"/><text x="110.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.37%)</title><rect x="111" y="212" width="4" height="15" fill="rgb(237,188,35)"/><text x="114.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (2 samples, 0.37%)</title><rect x="115" y="212" width="5" height="15" fill="rgb(209,186,44)"/><text x="118.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 1.31%)</title><rect x="109" y="180" width="15" height="15" fill="rgb(214,211,25)"/><text x="112.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (6 samples, 1.12%)</title><rect x="111" y="196" width="13" height="15" fill="rgb(205,45,37)"/><text x="114.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.37%)</title><rect x="120" y="212" width="4" height="15" fill="rgb(224,154,14)"/><text x="123.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="124" y="180" width="2" height="15" fill="rgb(217,210,46)"/><text x="127.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.19%)</title><rect x="126" y="196" width="3" height="15" fill="rgb(223,14,12)"/><text x="129.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.37%)</title><rect x="126" y="180" width="5" height="15" fill="rgb(211,100,0)"/><text x="129.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.19%)</title><rect x="129" y="196" width="2" height="15" fill="rgb(237,195,11)"/><text x="132.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.37%)</title><rect x="131" y="180" width="4" height="15" fill="rgb(224,110,4)"/><text x="134.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.19%)</title><rect x="133" y="196" width="2" height="15" fill="rgb(254,221,41)"/><text x="136.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.19%)</title><rect x="140" y="196" width="2" height="15" fill="rgb(210,7,3)"/><text x="143.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:327) (1 samples, 0.19%)</title><rect x="140" y="212" width="2" height="15" fill="rgb(239,197,22)"/><text x="143.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 0.75%)</title><rect x="135" y="180" width="9" height="15" fill="rgb(240,198,19)"/><text x="138.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.19%)</title><rect x="142" y="196" width="2" height="15" fill="rgb(225,90,41)"/><text x="145.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.19%)</title><rect x="142" y="212" width="2" height="15" fill="rgb(235,51,13)"/><text x="145.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.19%)</title><rect x="144" y="180" width="2" height="15" fill="rgb(240,215,25)"/><text x="147.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.75%)</title><rect x="146" y="196" width="9" height="15" fill="rgb(234,66,31)"/><text x="149.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 1.12%)</title><rect x="146" y="180" width="13" height="15" fill="rgb(244,143,8)"/><text x="149.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.37%)</title><rect x="155" y="196" width="4" height="15" fill="rgb(205,204,17)"/><text x="158.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.19%)</title><rect x="157" y="212" width="2" height="15" fill="rgb(229,147,20)"/><text x="160.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 0.93%)</title><rect x="164" y="196" width="11" height="15" fill="rgb(221,72,50)"/><text x="167.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="173" y="212" width="2" height="15" fill="rgb(233,112,3)"/><text x="176.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.19%)</title><rect x="175" y="196" width="2" height="15" fill="rgb(210,193,41)"/><text x="178.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (44 samples, 8.22%)</title><rect x="89" y="164" width="97" height="15" fill="rgb(208,201,6)"/><text x="92.00" y="174.50">_predict (s..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 2.24%)</title><rect x="159" y="180" width="27" height="15" fill="rgb(232,136,15)"/><text x="162.00" y="190.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.75%)</title><rect x="177" y="196" width="9" height="15" fill="rgb(234,115,1)"/><text x="180.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="184" y="212" width="2" height="15" fill="rgb(230,65,2)"/><text x="187.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:670) (1 samples, 0.19%)</title><rect x="186" y="164" width="2" height="15" fill="rgb(244,59,11)"/><text x="189.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:675) (2 samples, 0.37%)</title><rect x="188" y="164" width="5" height="15" fill="rgb(209,216,52)"/><text x="191.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:681) (1 samples, 0.19%)</title><rect x="193" y="164" width="2" height="15" fill="rgb(225,169,26)"/><text x="196.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:682) (1 samples, 0.19%)</title><rect x="195" y="164" width="2" height="15" fill="rgb(232,112,43)"/><text x="198.00" y="174.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.19%)</title><rect x="208" y="196" width="2" height="15" fill="rgb(212,25,3)"/><text x="211.00" y="206.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="215" y="212" width="4" height="15" fill="rgb(234,212,19)"/><text x="218.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.19%)</title><rect x="219" y="212" width="2" height="15" fill="rgb(213,57,26)"/><text x="222.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="221" y="212" width="2" height="15" fill="rgb(207,36,32)"/><text x="224.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="221" y="228" width="2" height="15" fill="rgb(248,160,11)"/><text x="224.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="221" y="244" width="2" height="15" fill="rgb(235,222,28)"/><text x="224.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.19%)</title><rect x="221" y="260" width="2" height="15" fill="rgb(209,168,39)"/><text x="224.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.19%)</title><rect x="223" y="244" width="3" height="15" fill="rgb(237,25,52)"/><text x="226.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="223" y="260" width="3" height="15" fill="rgb(246,0,23)"/><text x="226.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="223" y="276" width="3" height="15" fill="rgb(249,226,15)"/><text x="226.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.19%)</title><rect x="223" y="292" width="3" height="15" fill="rgb(241,223,33)"/><text x="226.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2838) (1 samples, 0.19%)</title><rect x="226" y="244" width="2" height="15" fill="rgb(245,0,54)"/><text x="229.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="226" y="260" width="2" height="15" fill="rgb(232,21,43)"/><text x="229.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="228" y="276" width="2" height="15" fill="rgb(212,186,32)"/><text x="231.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="228" y="292" width="2" height="15" fill="rgb(233,48,44)"/><text x="231.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="228" y="308" width="2" height="15" fill="rgb(209,23,23)"/><text x="231.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="228" y="324" width="2" height="15" fill="rgb(225,225,9)"/><text x="231.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.19%)</title><rect x="228" y="340" width="2" height="15" fill="rgb(249,181,42)"/><text x="231.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.37%)</title><rect x="228" y="244" width="4" height="15" fill="rgb(209,1,22)"/><text x="231.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.37%)</title><rect x="228" y="260" width="4" height="15" fill="rgb(231,37,9)"/><text x="231.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.19%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(241,109,32)"/><text x="233.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:2013) (1 samples, 0.19%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(223,128,44)"/><text x="233.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2879) (1 samples, 0.19%)</title><rect x="232" y="244" width="2" height="15" fill="rgb(244,22,2)"/><text x="235.00" y="254.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.19%)</title><rect x="232" y="260" width="2" height="15" fill="rgb(249,83,47)"/><text x="235.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (3 samples, 0.56%)</title><rect x="234" y="244" width="7" height="15" fill="rgb(213,84,3)"/><text x="237.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.56%)</title><rect x="234" y="260" width="7" height="15" fill="rgb(253,124,36)"/><text x="237.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.68%)</title><rect x="223" y="212" width="20" height="15" fill="rgb(254,119,1)"/><text x="226.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (9 samples, 1.68%)</title><rect x="223" y="228" width="20" height="15" fill="rgb(231,27,5)"/><text x="226.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2961) (1 samples, 0.19%)</title><rect x="241" y="244" width="2" height="15" fill="rgb(245,181,1)"/><text x="244.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.19%)</title><rect x="241" y="260" width="2" height="15" fill="rgb(243,206,3)"/><text x="244.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.19%)</title><rect x="241" y="276" width="2" height="15" fill="rgb(235,208,34)"/><text x="244.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1762) (1 samples, 0.19%)</title><rect x="241" y="292" width="2" height="15" fill="rgb(247,203,35)"/><text x="244.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (16 samples, 2.99%)</title><rect x="210" y="196" width="35" height="15" fill="rgb(212,81,41)"/><text x="213.00" y="206.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.19%)</title><rect x="243" y="212" width="2" height="15" fill="rgb(221,157,13)"/><text x="246.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.19%)</title><rect x="243" y="228" width="2" height="15" fill="rgb(228,11,9)"/><text x="246.00" y="238.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (22 samples, 4.11%)</title><rect x="201" y="180" width="49" height="15" fill="rgb(228,81,35)"/><text x="204.00" y="190.50">_for..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.37%)</title><rect x="245" y="196" width="5" height="15" fill="rgb(252,73,49)"/><text x="248.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="250" y="212" width="2" height="15" fill="rgb(237,124,42)"/><text x="253.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1110) (1 samples, 0.19%)</title><rect x="250" y="228" width="2" height="15" fill="rgb(219,194,16)"/><text x="253.00" y="238.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.19%)</title><rect x="250" y="244" width="2" height="15" fill="rgb(235,133,51)"/><text x="253.00" y="254.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.19%)</title><rect x="250" y="260" width="2" height="15" fill="rgb(243,225,1)"/><text x="253.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="252" y="212" width="2" height="15" fill="rgb(220,68,28)"/><text x="255.00" y="222.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.19%)</title><rect x="252" y="228" width="2" height="15" fill="rgb(236,26,49)"/><text x="255.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="254" y="212" width="3" height="15" fill="rgb(230,197,39)"/><text x="257.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.19%)</title><rect x="254" y="228" width="3" height="15" fill="rgb(206,88,9)"/><text x="257.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.19%)</title><rect x="257" y="228" width="2" height="15" fill="rgb(210,188,49)"/><text x="260.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="259" y="228" width="2" height="15" fill="rgb(235,59,17)"/><text x="262.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.19%)</title><rect x="259" y="244" width="2" height="15" fill="rgb(233,224,53)"/><text x="262.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:302) (1 samples, 0.19%)</title><rect x="261" y="228" width="2" height="15" fill="rgb(218,38,38)"/><text x="264.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (4 samples, 0.75%)</title><rect x="257" y="212" width="8" height="15" fill="rgb(227,3,25)"/><text x="260.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.19%)</title><rect x="263" y="228" width="2" height="15" fill="rgb(241,82,8)"/><text x="266.00" y="238.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1432) (1 samples, 0.19%)</title><rect x="265" y="276" width="3" height="15" fill="rgb(230,72,17)"/><text x="268.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.37%)</title><rect x="265" y="260" width="5" height="15" fill="rgb(254,72,29)"/><text x="268.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.19%)</title><rect x="268" y="276" width="2" height="15" fill="rgb(245,73,18)"/><text x="271.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (10 samples, 1.87%)</title><rect x="250" y="180" width="22" height="15" fill="rgb(205,110,41)"/><text x="253.00" y="190.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.87%)</title><rect x="250" y="196" width="22" height="15" fill="rgb(228,65,6)"/><text x="253.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="265" y="212" width="7" height="15" fill="rgb(205,69,10)"/><text x="268.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="265" y="228" width="7" height="15" fill="rgb(220,132,5)"/><text x="268.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.56%)</title><rect x="265" y="244" width="7" height="15" fill="rgb(214,5,20)"/><text x="268.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.19%)</title><rect x="270" y="260" width="2" height="15" fill="rgb(233,131,32)"/><text x="273.00" y="270.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3265) (1 samples, 0.19%)</title><rect x="270" y="276" width="2" height="15" fill="rgb(241,206,21)"/><text x="273.00" y="286.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.19%)</title><rect x="287" y="212" width="3" height="15" fill="rgb(235,23,51)"/><text x="290.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.19%)</title><rect x="290" y="212" width="2" height="15" fill="rgb(230,174,4)"/><text x="293.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="292" y="212" width="2" height="15" fill="rgb(212,203,27)"/><text x="295.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="296" y="228" width="2" height="15" fill="rgb(234,158,54)"/><text x="299.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="296" y="244" width="2" height="15" fill="rgb(250,220,9)"/><text x="299.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="296" y="260" width="2" height="15" fill="rgb(241,109,38)"/><text x="299.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="296" y="276" width="2" height="15" fill="rgb(242,78,46)"/><text x="299.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="296" y="292" width="2" height="15" fill="rgb(208,208,36)"/><text x="299.00" y="302.50"></text></g><g><title>0x7f2e191e8e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="296" y="308" width="2" height="15" fill="rgb(223,13,13)"/><text x="299.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.75%)</title><rect x="305" y="324" width="9" height="15" fill="rgb(220,196,49)"/><text x="308.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.37%)</title><rect x="309" y="340" width="5" height="15" fill="rgb(238,47,37)"/><text x="312.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.19%)</title><rect x="316" y="372" width="2" height="15" fill="rgb(218,91,34)"/><text x="319.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.56%)</title><rect x="314" y="324" width="6" height="15" fill="rgb(229,135,9)"/><text x="317.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.37%)</title><rect x="316" y="340" width="4" height="15" fill="rgb(213,53,27)"/><text x="319.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.37%)</title><rect x="316" y="356" width="4" height="15" fill="rgb(249,204,34)"/><text x="319.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.19%)</title><rect x="318" y="372" width="2" height="15" fill="rgb(248,136,15)"/><text x="321.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="318" y="388" width="2" height="15" fill="rgb(208,166,40)"/><text x="321.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="323" y="340" width="2" height="15" fill="rgb(253,192,1)"/><text x="326.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.19%)</title><rect x="323" y="356" width="2" height="15" fill="rgb(214,183,41)"/><text x="326.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.19%)</title><rect x="325" y="388" width="2" height="15" fill="rgb(217,136,39)"/><text x="328.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.37%)</title><rect x="325" y="372" width="4" height="15" fill="rgb(254,216,49)"/><text x="328.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="327" y="388" width="2" height="15" fill="rgb(230,24,42)"/><text x="330.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.19%)</title><rect x="327" y="404" width="2" height="15" fill="rgb(219,61,53)"/><text x="330.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.19%)</title><rect x="327" y="420" width="2" height="15" fill="rgb(240,96,53)"/><text x="330.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.56%)</title><rect x="325" y="356" width="7" height="15" fill="rgb(246,109,30)"/><text x="328.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.19%)</title><rect x="329" y="372" width="3" height="15" fill="rgb(220,13,40)"/><text x="332.00" y="382.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.19%)</title><rect x="329" y="388" width="3" height="15" fill="rgb(221,195,41)"/><text x="332.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (13 samples, 2.43%)</title><rect x="305" y="308" width="29" height="15" fill="rgb(234,3,30)"/><text x="308.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (6 samples, 1.12%)</title><rect x="320" y="324" width="14" height="15" fill="rgb(241,209,3)"/><text x="323.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="325" y="340" width="9" height="15" fill="rgb(211,195,3)"/><text x="328.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="332" y="356" width="2" height="15" fill="rgb(225,160,47)"/><text x="335.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.19%)</title><rect x="332" y="372" width="2" height="15" fill="rgb(209,171,7)"/><text x="335.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="332" y="388" width="2" height="15" fill="rgb(241,55,52)"/><text x="335.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="332" y="404" width="2" height="15" fill="rgb(233,199,52)"/><text x="335.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (7 samples, 1.31%)</title><rect x="334" y="324" width="15" height="15" fill="rgb(242,118,37)"/><text x="337.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (5 samples, 0.93%)</title><rect x="338" y="340" width="11" height="15" fill="rgb(242,27,8)"/><text x="341.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.37%)</title><rect x="351" y="420" width="5" height="15" fill="rgb(207,2,23)"/><text x="354.00" y="430.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (4 samples, 0.75%)</title><rect x="351" y="356" width="9" height="15" fill="rgb(230,150,31)"/><text x="354.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (4 samples, 0.75%)</title><rect x="351" y="372" width="9" height="15" fill="rgb(205,4,14)"/><text x="354.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (4 samples, 0.75%)</title><rect x="351" y="388" width="9" height="15" fill="rgb(221,39,27)"/><text x="354.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 0.75%)</title><rect x="351" y="404" width="9" height="15" fill="rgb(244,65,2)"/><text x="354.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.37%)</title><rect x="356" y="420" width="4" height="15" fill="rgb(227,186,33)"/><text x="359.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 1.12%)</title><rect x="349" y="324" width="13" height="15" fill="rgb(208,133,2)"/><text x="352.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (5 samples, 0.93%)</title><rect x="351" y="340" width="11" height="15" fill="rgb(213,156,26)"/><text x="354.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="360" y="356" width="2" height="15" fill="rgb(248,22,2)"/><text x="363.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="365" y="340" width="2" height="15" fill="rgb(205,185,14)"/><text x="368.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="365" y="356" width="2" height="15" fill="rgb(237,79,14)"/><text x="368.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="365" y="372" width="2" height="15" fill="rgb(244,116,54)"/><text x="368.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="365" y="388" width="2" height="15" fill="rgb(244,77,33)"/><text x="368.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.19%)</title><rect x="365" y="404" width="2" height="15" fill="rgb(240,216,3)"/><text x="368.00" y="414.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:14) (1 samples, 0.19%)</title><rect x="365" y="420" width="2" height="15" fill="rgb(243,40,2)"/><text x="368.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="367" y="356" width="2" height="15" fill="rgb(219,202,24)"/><text x="370.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="367" y="372" width="2" height="15" fill="rgb(244,186,31)"/><text x="370.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.19%)</title><rect x="367" y="388" width="2" height="15" fill="rgb(219,8,36)"/><text x="370.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.19%)</title><rect x="367" y="404" width="2" height="15" fill="rgb(234,157,49)"/><text x="370.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="367" y="420" width="2" height="15" fill="rgb(209,228,27)"/><text x="370.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="367" y="436" width="2" height="15" fill="rgb(245,143,37)"/><text x="370.00" y="446.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.19%)</title><rect x="367" y="452" width="2" height="15" fill="rgb(207,64,9)"/><text x="370.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="369" y="356" width="2" height="15" fill="rgb(207,5,20)"/><text x="372.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="369" y="372" width="2" height="15" fill="rgb(234,17,12)"/><text x="372.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="369" y="388" width="2" height="15" fill="rgb(248,40,4)"/><text x="372.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="369" y="404" width="2" height="15" fill="rgb(232,87,31)"/><text x="372.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="369" y="420" width="2" height="15" fill="rgb(226,91,27)"/><text x="372.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.19%)</title><rect x="369" y="436" width="2" height="15" fill="rgb(242,118,31)"/><text x="372.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.19%)</title><rect x="369" y="452" width="2" height="15" fill="rgb(226,119,22)"/><text x="372.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="371" y="356" width="2" height="15" fill="rgb(241,147,23)"/><text x="374.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="371" y="372" width="2" height="15" fill="rgb(219,88,39)"/><text x="374.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.19%)</title><rect x="371" y="388" width="2" height="15" fill="rgb(207,117,7)"/><text x="374.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (19 samples, 3.55%)</title><rect x="334" y="308" width="42" height="15" fill="rgb(227,190,47)"/><text x="337.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (6 samples, 1.12%)</title><rect x="362" y="324" width="14" height="15" fill="rgb(217,210,46)"/><text x="365.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="367" y="340" width="9" height="15" fill="rgb(205,127,46)"/><text x="370.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="373" y="356" width="3" height="15" fill="rgb(252,169,3)"/><text x="376.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="373" y="372" width="3" height="15" fill="rgb(217,64,47)"/><text x="376.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.19%)</title><rect x="373" y="388" width="3" height="15" fill="rgb(239,103,10)"/><text x="376.00" y="398.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.19%)</title><rect x="373" y="404" width="3" height="15" fill="rgb(233,154,6)"/><text x="376.00" y="414.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1600) (1 samples, 0.19%)</title><rect x="378" y="404" width="2" height="15" fill="rgb(232,114,9)"/><text x="381.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.37%)</title><rect x="378" y="356" width="4" height="15" fill="rgb(242,55,54)"/><text x="381.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.37%)</title><rect x="378" y="372" width="4" height="15" fill="rgb(231,96,19)"/><text x="381.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.37%)</title><rect x="378" y="388" width="4" height="15" fill="rgb(244,109,49)"/><text x="381.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.19%)</title><rect x="380" y="404" width="2" height="15" fill="rgb(208,86,45)"/><text x="383.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.19%)</title><rect x="380" y="420" width="2" height="15" fill="rgb(226,168,5)"/><text x="383.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.19%)</title><rect x="380" y="436" width="2" height="15" fill="rgb(242,45,1)"/><text x="383.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.19%)</title><rect x="380" y="452" width="2" height="15" fill="rgb(244,60,32)"/><text x="383.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="382" y="356" width="2" height="15" fill="rgb(207,156,23)"/><text x="385.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.19%)</title><rect x="382" y="372" width="2" height="15" fill="rgb(240,85,19)"/><text x="385.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="384" y="356" width="3" height="15" fill="rgb(216,65,29)"/><text x="387.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.19%)</title><rect x="384" y="372" width="3" height="15" fill="rgb(249,8,43)"/><text x="387.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.19%)</title><rect x="387" y="404" width="2" height="15" fill="rgb(254,19,13)"/><text x="390.00" y="414.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.37%)</title><rect x="387" y="372" width="4" height="15" fill="rgb(253,49,43)"/><text x="390.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (2 samples, 0.37%)</title><rect x="387" y="388" width="4" height="15" fill="rgb(248,71,1)"/><text x="390.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.19%)</title><rect x="389" y="404" width="2" height="15" fill="rgb(222,115,50)"/><text x="392.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="389" y="420" width="2" height="15" fill="rgb(249,158,11)"/><text x="392.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="389" y="436" width="2" height="15" fill="rgb(205,201,20)"/><text x="392.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.19%)</title><rect x="389" y="452" width="2" height="15" fill="rgb(217,225,0)"/><text x="392.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.19%)</title><rect x="389" y="468" width="2" height="15" fill="rgb(219,153,24)"/><text x="392.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (3 samples, 0.56%)</title><rect x="387" y="356" width="6" height="15" fill="rgb(248,74,47)"/><text x="390.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.19%)</title><rect x="391" y="372" width="2" height="15" fill="rgb(213,54,0)"/><text x="394.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="391" y="388" width="2" height="15" fill="rgb(247,33,2)"/><text x="394.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="391" y="404" width="2" height="15" fill="rgb(242,94,25)"/><text x="394.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="391" y="420" width="2" height="15" fill="rgb(253,61,39)"/><text x="394.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="393" y="388" width="2" height="15" fill="rgb(213,119,6)"/><text x="396.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="393" y="404" width="2" height="15" fill="rgb(249,221,28)"/><text x="396.00" y="414.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1563) (1 samples, 0.19%)</title><rect x="393" y="420" width="2" height="15" fill="rgb(208,202,49)"/><text x="396.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.68%)</title><rect x="378" y="340" width="20" height="15" fill="rgb(233,8,50)"/><text x="381.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="393" y="356" width="5" height="15" fill="rgb(241,22,4)"/><text x="396.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="393" y="372" width="5" height="15" fill="rgb(229,184,15)"/><text x="396.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="395" y="388" width="3" height="15" fill="rgb(237,30,32)"/><text x="398.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src:97) (1 samples, 0.19%)</title><rect x="395" y="404" width="3" height="15" fill="rgb(211,107,39)"/><text x="398.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="398" y="340" width="2" height="15" fill="rgb(250,222,2)"/><text x="401.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="398" y="356" width="2" height="15" fill="rgb(226,7,48)"/><text x="401.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="398" y="372" width="2" height="15" fill="rgb(222,98,37)"/><text x="401.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="398" y="388" width="2" height="15" fill="rgb(218,214,4)"/><text x="401.00" y="398.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (59 samples, 11.03%)</title><rect x="272" y="180" width="130" height="15" fill="rgb(236,25,14)"/><text x="275.00" y="190.50">_forward_pass (s..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (58 samples, 10.84%)</title><rect x="274" y="196" width="128" height="15" fill="rgb(216,34,10)"/><text x="277.00" y="206.50">relu (sklearn/ne..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (49 samples, 9.16%)</title><rect x="294" y="212" width="108" height="15" fill="rgb(251,224,25)"/><text x="297.00" y="222.50">clip (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (47 samples, 8.79%)</title><rect x="298" y="228" width="104" height="15" fill="rgb(248,166,18)"/><text x="301.00" y="238.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (46 samples, 8.60%)</title><rect x="301" y="244" width="101" height="15" fill="rgb(246,228,39)"/><text x="304.00" y="254.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (45 samples, 8.41%)</title><rect x="303" y="260" width="99" height="15" fill="rgb(248,108,39)"/><text x="306.00" y="270.50">_wrapfunc (..</text></g><g><title>array_clip (methods.c:2381) (44 samples, 8.22%)</title><rect x="305" y="276" width="97" height="15" fill="rgb(243,106,48)"/><text x="308.00" y="286.50">array_clip ..</text></g><g><title>forward_ndarray_method (methods.c:108) (44 samples, 8.22%)</title><rect x="305" y="292" width="97" height="15" fill="rgb(224,210,40)"/><text x="308.00" y="302.50">forward_nda..</text></g><g><title>_clip (numpy/core/_methods.py:132) (12 samples, 2.24%)</title><rect x="376" y="308" width="26" height="15" fill="rgb(246,155,33)"/><text x="379.00" y="318.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (11 samples, 2.06%)</title><rect x="378" y="324" width="24" height="15" fill="rgb(227,138,2)"/><text x="381.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.19%)</title><rect x="400" y="340" width="2" height="15" fill="rgb(212,33,17)"/><text x="403.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="404" y="276" width="3" height="15" fill="rgb(208,78,3)"/><text x="407.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.19%)</title><rect x="407" y="308" width="2" height="15" fill="rgb(237,139,0)"/><text x="410.00" y="318.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (2 samples, 0.37%)</title><rect x="409" y="340" width="4" height="15" fill="rgb(252,130,19)"/><text x="412.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.19%)</title><rect x="413" y="340" width="2" height="15" fill="rgb(206,97,13)"/><text x="416.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1788) (1 samples, 0.19%)</title><rect x="413" y="356" width="2" height="15" fill="rgb(233,216,11)"/><text x="416.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (5 samples, 0.93%)</title><rect x="407" y="292" width="11" height="15" fill="rgb(240,119,48)"/><text x="410.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (4 samples, 0.75%)</title><rect x="409" y="308" width="9" height="15" fill="rgb(229,140,3)"/><text x="412.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (4 samples, 0.75%)</title><rect x="409" y="324" width="9" height="15" fill="rgb(247,34,50)"/><text x="412.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.19%)</title><rect x="415" y="340" width="3" height="15" fill="rgb(210,19,14)"/><text x="418.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.19%)</title><rect x="415" y="356" width="3" height="15" fill="rgb(232,187,34)"/><text x="418.00" y="366.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:316) (1 samples, 0.19%)</title><rect x="418" y="324" width="2" height="15" fill="rgb(205,174,35)"/><text x="421.00" y="334.50"></text></g><g><title>PyArray_View (convert.c:574) (1 samples, 0.19%)</title><rect x="418" y="340" width="2" height="15" fill="rgb(223,222,6)"/><text x="421.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (2 samples, 0.37%)</title><rect x="418" y="308" width="4" height="15" fill="rgb(254,167,27)"/><text x="421.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.19%)</title><rect x="420" y="324" width="2" height="15" fill="rgb(237,145,3)"/><text x="423.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="420" y="340" width="2" height="15" fill="rgb(212,38,54)"/><text x="423.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.19%)</title><rect x="420" y="356" width="2" height="15" fill="rgb(243,213,0)"/><text x="423.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.19%)</title><rect x="420" y="372" width="2" height="15" fill="rgb(217,144,54)"/><text x="423.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="422" y="324" width="2" height="15" fill="rgb(232,108,39)"/><text x="425.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="424" y="324" width="2" height="15" fill="rgb(214,179,33)"/><text x="427.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.19%)</title><rect x="424" y="340" width="2" height="15" fill="rgb(207,120,30)"/><text x="427.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.56%)</title><rect x="422" y="308" width="7" height="15" fill="rgb(221,4,14)"/><text x="425.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="426" y="324" width="3" height="15" fill="rgb(231,223,2)"/><text x="429.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.19%)</title><rect x="426" y="340" width="3" height="15" fill="rgb(253,157,44)"/><text x="429.00" y="350.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2599) (1 samples, 0.19%)</title><rect x="426" y="356" width="3" height="15" fill="rgb(230,26,52)"/><text x="429.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.19%)</title><rect x="429" y="308" width="2" height="15" fill="rgb(210,169,47)"/><text x="432.00" y="318.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.19%)</title><rect x="429" y="324" width="2" height="15" fill="rgb(228,67,14)"/><text x="432.00" y="334.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.43%)</title><rect x="404" y="228" width="29" height="15" fill="rgb(213,30,40)"/><text x="407.00" y="238.50">fo..</text></g><g><title>_amax (numpy/core/_methods.py:30) (13 samples, 2.43%)</title><rect x="404" y="244" width="29" height="15" fill="rgb(254,222,37)"/><text x="407.00" y="254.50">_a..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 2.43%)</title><rect x="404" y="260" width="29" height="15" fill="rgb(238,111,18)"/><text x="407.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 2.24%)</title><rect x="407" y="276" width="26" height="15" fill="rgb(238,213,20)"/><text x="410.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.31%)</title><rect x="418" y="292" width="15" height="15" fill="rgb(234,45,17)"/><text x="421.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.19%)</title><rect x="431" y="308" width="2" height="15" fill="rgb(244,123,23)"/><text x="434.00" y="318.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.19%)</title><rect x="431" y="324" width="2" height="15" fill="rgb(232,157,38)"/><text x="434.00" y="334.50"></text></g><g><title>array_max (methods.c:323) (14 samples, 2.62%)</title><rect x="404" y="212" width="31" height="15" fill="rgb(231,107,7)"/><text x="407.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.19%)</title><rect x="433" y="228" width="2" height="15" fill="rgb(251,161,30)"/><text x="436.00" y="238.50"></text></g><g><title>0x7f2e191f3134 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="433" y="244" width="2" height="15" fill="rgb(209,187,5)"/><text x="436.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="435" y="212" width="2" height="15" fill="rgb(212,115,15)"/><text x="438.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="435" y="228" width="2" height="15" fill="rgb(217,151,4)"/><text x="438.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.19%)</title><rect x="437" y="292" width="3" height="15" fill="rgb(254,113,21)"/><text x="440.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2296) (1 samples, 0.19%)</title><rect x="437" y="308" width="3" height="15" fill="rgb(231,93,25)"/><text x="440.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.37%)</title><rect x="440" y="292" width="4" height="15" fill="rgb(216,207,31)"/><text x="443.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.37%)</title><rect x="440" y="308" width="4" height="15" fill="rgb(251,211,25)"/><text x="443.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.37%)</title><rect x="440" y="324" width="4" height="15" fill="rgb(206,105,1)"/><text x="443.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.37%)</title><rect x="440" y="340" width="4" height="15" fill="rgb(248,188,4)"/><text x="443.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (2 samples, 0.37%)</title><rect x="440" y="356" width="4" height="15" fill="rgb(223,200,11)"/><text x="443.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (2 samples, 0.37%)</title><rect x="440" y="372" width="4" height="15" fill="rgb(233,203,43)"/><text x="443.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (2 samples, 0.37%)</title><rect x="440" y="388" width="4" height="15" fill="rgb(205,54,47)"/><text x="443.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="442" y="404" width="2" height="15" fill="rgb(238,12,7)"/><text x="445.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.75%)</title><rect x="437" y="244" width="9" height="15" fill="rgb(245,137,23)"/><text x="440.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.75%)</title><rect x="437" y="260" width="9" height="15" fill="rgb(229,42,21)"/><text x="440.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.75%)</title><rect x="437" y="276" width="9" height="15" fill="rgb(249,63,17)"/><text x="440.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="444" y="292" width="2" height="15" fill="rgb(234,116,12)"/><text x="447.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.19%)</title><rect x="444" y="308" width="2" height="15" fill="rgb(251,197,8)"/><text x="447.00" y="318.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:92) (21 samples, 3.93%)</title><rect x="402" y="196" width="46" height="15" fill="rgb(240,6,51)"/><text x="405.00" y="206.50">soft..</text></g><g><title>array_subtract (number.c:342) (5 samples, 0.93%)</title><rect x="437" y="212" width="11" height="15" fill="rgb(211,83,26)"/><text x="440.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.93%)</title><rect x="437" y="228" width="11" height="15" fill="rgb(254,74,30)"/><text x="440.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3308) (1 samples, 0.19%)</title><rect x="446" y="244" width="2" height="15" fill="rgb(253,203,11)"/><text x="449.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="448" y="228" width="3" height="15" fill="rgb(249,68,47)"/><text x="451.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.19%)</title><rect x="448" y="244" width="3" height="15" fill="rgb(242,107,24)"/><text x="451.00" y="254.50"></text></g><g><title>0x7f2e193a4bcb (libm-2.29.so) (1 samples, 0.19%)</title><rect x="451" y="308" width="2" height="15" fill="rgb(234,130,18)"/><text x="454.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.37%)</title><rect x="451" y="244" width="4" height="15" fill="rgb(227,20,37)"/><text x="454.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.37%)</title><rect x="451" y="260" width="4" height="15" fill="rgb(219,74,20)"/><text x="454.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (2 samples, 0.37%)</title><rect x="451" y="276" width="4" height="15" fill="rgb(253,27,35)"/><text x="454.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.37%)</title><rect x="451" y="292" width="4" height="15" fill="rgb(249,26,54)"/><text x="454.00" y="302.50"></text></g><g><title>0x7f2e193a4c2e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="453" y="308" width="2" height="15" fill="rgb(250,217,31)"/><text x="456.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="448" y="212" width="9" height="15" fill="rgb(247,69,34)"/><text x="451.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="451" y="228" width="6" height="15" fill="rgb(248,106,37)"/><text x="454.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.19%)</title><rect x="455" y="244" width="2" height="15" fill="rgb(228,133,40)"/><text x="458.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="455" y="260" width="2" height="15" fill="rgb(253,119,31)"/><text x="458.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="455" y="276" width="2" height="15" fill="rgb(206,16,34)"/><text x="458.00" y="286.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (5 samples, 0.93%)</title><rect x="448" y="196" width="11" height="15" fill="rgb(213,175,51)"/><text x="451.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="457" y="212" width="2" height="15" fill="rgb(244,163,33)"/><text x="460.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.19%)</title><rect x="457" y="228" width="2" height="15" fill="rgb(219,179,6)"/><text x="460.00" y="238.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="473" y="292" width="2" height="15" fill="rgb(210,88,2)"/><text x="476.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.19%)</title><rect x="473" y="308" width="2" height="15" fill="rgb(244,66,10)"/><text x="476.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.19%)</title><rect x="473" y="324" width="2" height="15" fill="rgb(207,200,47)"/><text x="476.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="475" y="308" width="2" height="15" fill="rgb(224,105,15)"/><text x="478.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="475" y="324" width="2" height="15" fill="rgb(249,30,22)"/><text x="478.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.19%)</title><rect x="475" y="340" width="2" height="15" fill="rgb(231,26,34)"/><text x="478.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="475" y="356" width="2" height="15" fill="rgb(231,122,27)"/><text x="478.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="475" y="372" width="2" height="15" fill="rgb(207,81,42)"/><text x="478.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.19%)</title><rect x="477" y="324" width="2" height="15" fill="rgb(245,52,18)"/><text x="480.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="479" y="356" width="2" height="15" fill="rgb(231,19,11)"/><text x="482.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.19%)</title><rect x="479" y="372" width="2" height="15" fill="rgb(218,161,22)"/><text x="482.00" y="382.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="479" y="388" width="2" height="15" fill="rgb(251,209,28)"/><text x="482.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.19%)</title><rect x="479" y="404" width="2" height="15" fill="rgb(226,216,14)"/><text x="482.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.56%)</title><rect x="477" y="308" width="7" height="15" fill="rgb(226,114,5)"/><text x="480.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.37%)</title><rect x="479" y="324" width="5" height="15" fill="rgb(253,105,22)"/><text x="482.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.37%)</title><rect x="479" y="340" width="5" height="15" fill="rgb(222,45,8)"/><text x="482.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.19%)</title><rect x="481" y="356" width="3" height="15" fill="rgb(239,19,19)"/><text x="484.00" y="366.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.19%)</title><rect x="481" y="372" width="3" height="15" fill="rgb(233,86,8)"/><text x="484.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="484" y="324" width="2" height="15" fill="rgb(240,4,0)"/><text x="487.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1666) (1 samples, 0.19%)</title><rect x="484" y="340" width="2" height="15" fill="rgb(210,132,4)"/><text x="487.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.37%)</title><rect x="484" y="308" width="4" height="15" fill="rgb(248,36,40)"/><text x="487.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="486" y="324" width="2" height="15" fill="rgb(214,111,21)"/><text x="489.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.19%)</title><rect x="486" y="340" width="2" height="15" fill="rgb(221,90,45)"/><text x="489.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.19%)</title><rect x="488" y="324" width="2" height="15" fill="rgb(227,112,21)"/><text x="491.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 2.06%)</title><rect x="468" y="212" width="25" height="15" fill="rgb(241,210,24)"/><text x="471.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.06%)</title><rect x="468" y="228" width="25" height="15" fill="rgb(220,88,13)"/><text x="471.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 2.06%)</title><rect x="468" y="244" width="25" height="15" fill="rgb(226,124,52)"/><text x="471.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.68%)</title><rect x="473" y="260" width="20" height="15" fill="rgb(207,161,49)"/><text x="476.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.68%)</title><rect x="473" y="276" width="20" height="15" fill="rgb(212,213,39)"/><text x="476.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 1.50%)</title><rect x="475" y="292" width="18" height="15" fill="rgb(211,48,10)"/><text x="478.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (2 samples, 0.37%)</title><rect x="488" y="308" width="5" height="15" fill="rgb(224,101,29)"/><text x="491.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="490" y="324" width="3" height="15" fill="rgb(240,124,46)"/><text x="493.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3154) (1 samples, 0.19%)</title><rect x="493" y="228" width="2" height="15" fill="rgb(216,214,8)"/><text x="496.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="495" y="228" width="2" height="15" fill="rgb(226,100,25)"/><text x="498.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="495" y="244" width="2" height="15" fill="rgb(230,113,32)"/><text x="498.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.19%)</title><rect x="495" y="260" width="2" height="15" fill="rgb(230,91,14)"/><text x="498.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="495" y="276" width="2" height="15" fill="rgb(246,38,4)"/><text x="498.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="497" y="260" width="2" height="15" fill="rgb(222,34,16)"/><text x="500.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="497" y="276" width="2" height="15" fill="rgb(211,67,11)"/><text x="500.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1553) (1 samples, 0.19%)</title><rect x="497" y="292" width="2" height="15" fill="rgb(249,191,21)"/><text x="500.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="497" y="228" width="4" height="15" fill="rgb(238,127,46)"/><text x="500.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="497" y="244" width="4" height="15" fill="rgb(215,99,31)"/><text x="500.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="499" y="260" width="2" height="15" fill="rgb(247,224,36)"/><text x="502.00" y="270.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:718) (1 samples, 0.19%)</title><rect x="499" y="276" width="2" height="15" fill="rgb(211,38,43)"/><text x="502.00" y="286.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (188 samples, 35.14%)</title><rect x="89" y="148" width="415" height="15" fill="rgb(240,211,43)"/><text x="92.00" y="158.50">predict_proba (sklearn/neural_network/_multilayer_percep..</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (139 samples, 25.98%)</title><rect x="197" y="164" width="307" height="15" fill="rgb(232,113,40)"/><text x="200.00" y="174.50">_predict (sklearn/neural_network/_multila..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (46 samples, 8.60%)</title><rect x="402" y="180" width="102" height="15" fill="rgb(225,118,53)"/><text x="405.00" y="190.50">_forward_pas..</text></g><g><title>softmax (sklearn/neural_network/_base.py:94) (20 samples, 3.74%)</title><rect x="459" y="196" width="45" height="15" fill="rgb(231,16,25)"/><text x="462.00" y="206.50">soft..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.93%)</title><rect x="493" y="212" width="11" height="15" fill="rgb(218,36,41)"/><text x="496.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3284) (1 samples, 0.19%)</title><rect x="501" y="228" width="3" height="15" fill="rgb(217,196,34)"/><text x="504.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:38) (220 samples, 41.12%)</title><rect x="21" y="52" width="485" height="15" fill="rgb(213,8,47)"/><text x="24.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:37) (220 samples, 41.12%)</title><rect x="21" y="68" width="485" height="15" fill="rgb(230,163,45)"/><text x="24.00" y="78.50">profile_skl (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:29) (219 samples, 40.93%)</title><rect x="23" y="84" width="483" height="15" fill="rgb(243,166,48)"/><text x="26.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:23) (215 samples, 40.19%)</title><rect x="32" y="100" width="474" height="15" fill="rgb(219,138,47)"/><text x="35.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (215 samples, 40.19%)</title><rect x="32" y="116" width="474" height="15" fill="rgb(241,182,53)"/><text x="35.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (214 samples, 40.00%)</title><rect x="34" y="132" width="472" height="15" fill="rgb(211,162,2)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1077) (1 samples, 0.19%)</title><rect x="504" y="148" width="2" height="15" fill="rgb(230,223,37)"/><text x="507.00" y="158.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.19%)</title><rect x="506" y="916" width="2" height="15" fill="rgb(242,151,22)"/><text x="509.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.19%)</title><rect x="506" y="932" width="2" height="15" fill="rgb(239,228,12)"/><text x="509.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="506" y="948" width="2" height="15" fill="rgb(210,83,13)"/><text x="509.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="506" y="964" width="2" height="15" fill="rgb(230,22,41)"/><text x="509.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.19%)</title><rect x="506" y="980" width="2" height="15" fill="rgb(222,123,26)"/><text x="509.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.19%)</title><rect x="506" y="996" width="2" height="15" fill="rgb(244,163,38)"/><text x="509.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.19%)</title><rect x="506" y="1012" width="2" height="15" fill="rgb(211,0,31)"/><text x="509.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:116) (1 samples, 0.19%)</title><rect x="506" y="1028" width="2" height="15" fill="rgb(222,103,39)"/><text x="509.00" y="1038.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="510" y="1028" width="2" height="15" fill="rgb(250,156,12)"/><text x="513.00" y="1038.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (2 samples, 0.37%)</title><rect x="510" y="996" width="5" height="15" fill="rgb(225,103,5)"/><text x="513.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (2 samples, 0.37%)</title><rect x="510" y="1012" width="5" height="15" fill="rgb(239,148,51)"/><text x="513.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.19%)</title><rect x="512" y="1028" width="3" height="15" fill="rgb(254,113,13)"/><text x="515.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="512" y="1044" width="3" height="15" fill="rgb(246,156,12)"/><text x="515.00" y="1054.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.19%)</title><rect x="512" y="1060" width="3" height="15" fill="rgb(238,193,52)"/><text x="515.00" y="1070.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (5 samples, 0.93%)</title><rect x="506" y="852" width="11" height="15" fill="rgb(210,222,26)"/><text x="509.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (5 samples, 0.93%)</title><rect x="506" y="868" width="11" height="15" fill="rgb(244,52,18)"/><text x="509.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (5 samples, 0.93%)</title><rect x="506" y="884" width="11" height="15" fill="rgb(232,7,24)"/><text x="509.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (5 samples, 0.93%)</title><rect x="506" y="900" width="11" height="15" fill="rgb(249,133,32)"/><text x="509.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (4 samples, 0.75%)</title><rect x="508" y="916" width="9" height="15" fill="rgb(232,36,46)"/><text x="511.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (4 samples, 0.75%)</title><rect x="508" y="932" width="9" height="15" fill="rgb(247,122,16)"/><text x="511.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (4 samples, 0.75%)</title><rect x="508" y="948" width="9" height="15" fill="rgb(221,184,25)"/><text x="511.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (4 samples, 0.75%)</title><rect x="508" y="964" width="9" height="15" fill="rgb(210,9,5)"/><text x="511.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (4 samples, 0.75%)</title><rect x="508" y="980" width="9" height="15" fill="rgb(210,7,22)"/><text x="511.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.19%)</title><rect x="515" y="996" width="2" height="15" fill="rgb(212,170,45)"/><text x="518.00" y="1006.50"></text></g><g><title>_parse_local_version (pkg_resources/_vendor/packaging/version.py:336) (1 samples, 0.19%)</title><rect x="515" y="1012" width="2" height="15" fill="rgb(220,59,49)"/><text x="518.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.19%)</title><rect x="517" y="852" width="2" height="15" fill="rgb(236,72,0)"/><text x="520.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.19%)</title><rect x="517" y="868" width="2" height="15" fill="rgb(231,49,35)"/><text x="520.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.19%)</title><rect x="517" y="884" width="2" height="15" fill="rgb(228,212,51)"/><text x="520.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2896) (1 samples, 0.19%)</title><rect x="517" y="900" width="2" height="15" fill="rgb(220,6,26)"/><text x="520.00" y="910.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2896) (1 samples, 0.19%)</title><rect x="517" y="916" width="2" height="15" fill="rgb(208,64,51)"/><text x="520.00" y="926.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.19%)</title><rect x="519" y="884" width="2" height="15" fill="rgb(229,109,52)"/><text x="522.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.19%)</title><rect x="519" y="900" width="2" height="15" fill="rgb(217,87,19)"/><text x="522.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="519" y="916" width="2" height="15" fill="rgb(245,21,17)"/><text x="522.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="519" y="932" width="2" height="15" fill="rgb(206,37,29)"/><text x="522.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.19%)</title><rect x="519" y="948" width="2" height="15" fill="rgb(228,228,38)"/><text x="522.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.19%)</title><rect x="519" y="964" width="2" height="15" fill="rgb(221,32,19)"/><text x="522.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.19%)</title><rect x="519" y="980" width="2" height="15" fill="rgb(216,66,43)"/><text x="522.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.19%)</title><rect x="519" y="996" width="2" height="15" fill="rgb(246,93,31)"/><text x="522.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="519" y="1012" width="2" height="15" fill="rgb(246,218,19)"/><text x="522.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:2) (8 samples, 1.50%)</title><rect x="506" y="148" width="17" height="15" fill="rgb(243,172,18)"/><text x="509.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="164" width="17" height="15" fill="rgb(211,43,30)"/><text x="509.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 1.50%)</title><rect x="506" y="180" width="17" height="15" fill="rgb(209,207,54)"/><text x="509.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="196" width="17" height="15" fill="rgb(232,216,44)"/><text x="509.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="212" width="17" height="15" fill="rgb(206,217,27)"/><text x="509.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="506" y="228" width="17" height="15" fill="rgb(250,33,27)"/><text x="509.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="506" y="244" width="17" height="15" fill="rgb(245,57,5)"/><text x="509.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="506" y="260" width="17" height="15" fill="rgb(242,46,28)"/><text x="509.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="276" width="17" height="15" fill="rgb(232,22,11)"/><text x="509.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 1.50%)</title><rect x="506" y="292" width="17" height="15" fill="rgb(232,174,20)"/><text x="509.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="308" width="17" height="15" fill="rgb(245,46,3)"/><text x="509.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="506" y="324" width="17" height="15" fill="rgb(205,197,2)"/><text x="509.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="506" y="340" width="17" height="15" fill="rgb(247,175,38)"/><text x="509.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="506" y="356" width="17" height="15" fill="rgb(227,108,38)"/><text x="509.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="372" width="17" height="15" fill="rgb(241,10,32)"/><text x="509.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 1.50%)</title><rect x="506" y="388" width="17" height="15" fill="rgb(250,165,4)"/><text x="509.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="404" width="17" height="15" fill="rgb(217,15,22)"/><text x="509.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="506" y="420" width="17" height="15" fill="rgb(234,94,42)"/><text x="509.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="506" y="436" width="17" height="15" fill="rgb(211,8,25)"/><text x="509.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="506" y="452" width="17" height="15" fill="rgb(243,197,7)"/><text x="509.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="468" width="17" height="15" fill="rgb(222,203,46)"/><text x="509.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 1.50%)</title><rect x="506" y="484" width="17" height="15" fill="rgb(206,219,46)"/><text x="509.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="500" width="17" height="15" fill="rgb(230,110,8)"/><text x="509.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="506" y="516" width="17" height="15" fill="rgb(232,178,32)"/><text x="509.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="506" y="532" width="17" height="15" fill="rgb(237,9,52)"/><text x="509.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="506" y="548" width="17" height="15" fill="rgb(252,79,13)"/><text x="509.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="564" width="17" height="15" fill="rgb(239,31,54)"/><text x="509.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 1.50%)</title><rect x="506" y="580" width="17" height="15" fill="rgb(228,142,34)"/><text x="509.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="596" width="17" height="15" fill="rgb(238,212,23)"/><text x="509.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 1.50%)</title><rect x="506" y="612" width="17" height="15" fill="rgb(212,173,46)"/><text x="509.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="628" width="17" height="15" fill="rgb(221,104,45)"/><text x="509.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="644" width="17" height="15" fill="rgb(245,159,36)"/><text x="509.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="506" y="660" width="17" height="15" fill="rgb(232,78,53)"/><text x="509.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="506" y="676" width="17" height="15" fill="rgb(222,186,34)"/><text x="509.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="506" y="692" width="17" height="15" fill="rgb(217,159,4)"/><text x="509.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="708" width="17" height="15" fill="rgb(211,124,24)"/><text x="509.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 1.50%)</title><rect x="506" y="724" width="17" height="15" fill="rgb(254,143,37)"/><text x="509.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="506" y="740" width="17" height="15" fill="rgb(212,205,41)"/><text x="509.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="506" y="756" width="17" height="15" fill="rgb(248,190,20)"/><text x="509.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="506" y="772" width="17" height="15" fill="rgb(253,200,54)"/><text x="509.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="506" y="788" width="17" height="15" fill="rgb(215,1,37)"/><text x="509.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="506" y="804" width="17" height="15" fill="rgb(254,225,12)"/><text x="509.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 1.50%)</title><rect x="506" y="820" width="17" height="15" fill="rgb(211,186,10)"/><text x="509.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 1.50%)</title><rect x="506" y="836" width="17" height="15" fill="rgb(251,181,33)"/><text x="509.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.37%)</title><rect x="519" y="852" width="4" height="15" fill="rgb(252,200,1)"/><text x="522.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.37%)</title><rect x="519" y="868" width="4" height="15" fill="rgb(225,205,41)"/><text x="522.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.19%)</title><rect x="521" y="884" width="2" height="15" fill="rgb(207,2,4)"/><text x="524.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="521" y="900" width="2" height="15" fill="rgb(212,221,27)"/><text x="524.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2585) (1 samples, 0.19%)</title><rect x="521" y="916" width="2" height="15" fill="rgb(230,141,20)"/><text x="524.00" y="926.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.19%)</title><rect x="521" y="932" width="2" height="15" fill="rgb(228,114,1)"/><text x="524.00" y="942.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="521" y="948" width="2" height="15" fill="rgb(220,47,1)"/><text x="524.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5079) (1 samples, 0.19%)</title><rect x="523" y="1028" width="3" height="15" fill="rgb(243,4,23)"/><text x="526.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.19%)</title><rect x="523" y="1044" width="3" height="15" fill="rgb(225,191,6)"/><text x="526.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.19%)</title><rect x="523" y="1060" width="3" height="15" fill="rgb(252,18,25)"/><text x="526.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.19%)</title><rect x="523" y="1076" width="3" height="15" fill="rgb(252,118,51)"/><text x="526.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.19%)</title><rect x="523" y="1092" width="3" height="15" fill="rgb(254,60,10)"/><text x="526.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:4) (2 samples, 0.37%)</title><rect x="523" y="148" width="5" height="15" fill="rgb(207,61,8)"/><text x="526.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="164" width="5" height="15" fill="rgb(239,186,2)"/><text x="526.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="523" y="180" width="5" height="15" fill="rgb(205,181,23)"/><text x="526.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="196" width="5" height="15" fill="rgb(215,166,9)"/><text x="526.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="212" width="5" height="15" fill="rgb(224,139,29)"/><text x="526.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="228" width="5" height="15" fill="rgb(246,53,53)"/><text x="526.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="244" width="5" height="15" fill="rgb(205,60,30)"/><text x="526.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="260" width="5" height="15" fill="rgb(238,34,18)"/><text x="526.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="276" width="5" height="15" fill="rgb(240,74,13)"/><text x="526.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.37%)</title><rect x="523" y="292" width="5" height="15" fill="rgb(234,25,0)"/><text x="526.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="308" width="5" height="15" fill="rgb(234,63,14)"/><text x="526.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="324" width="5" height="15" fill="rgb(211,38,49)"/><text x="526.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="340" width="5" height="15" fill="rgb(215,107,20)"/><text x="526.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="356" width="5" height="15" fill="rgb(207,53,42)"/><text x="526.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="372" width="5" height="15" fill="rgb(239,209,3)"/><text x="526.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.37%)</title><rect x="523" y="388" width="5" height="15" fill="rgb(236,98,3)"/><text x="526.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="404" width="5" height="15" fill="rgb(220,183,13)"/><text x="526.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="420" width="5" height="15" fill="rgb(219,90,12)"/><text x="526.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="436" width="5" height="15" fill="rgb(254,7,39)"/><text x="526.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="452" width="5" height="15" fill="rgb(224,8,8)"/><text x="526.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="468" width="5" height="15" fill="rgb(238,183,5)"/><text x="526.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.37%)</title><rect x="523" y="484" width="5" height="15" fill="rgb(207,76,2)"/><text x="526.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="500" width="5" height="15" fill="rgb(207,38,14)"/><text x="526.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="516" width="5" height="15" fill="rgb(237,208,11)"/><text x="526.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="532" width="5" height="15" fill="rgb(228,114,22)"/><text x="526.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="548" width="5" height="15" fill="rgb(254,18,30)"/><text x="526.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="564" width="5" height="15" fill="rgb(237,213,29)"/><text x="526.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.37%)</title><rect x="523" y="580" width="5" height="15" fill="rgb(218,184,41)"/><text x="526.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="596" width="5" height="15" fill="rgb(237,79,42)"/><text x="526.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="612" width="5" height="15" fill="rgb(247,53,18)"/><text x="526.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="628" width="5" height="15" fill="rgb(252,41,37)"/><text x="526.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="644" width="5" height="15" fill="rgb(248,79,45)"/><text x="526.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="660" width="5" height="15" fill="rgb(235,217,27)"/><text x="526.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.37%)</title><rect x="523" y="676" width="5" height="15" fill="rgb(206,170,26)"/><text x="526.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="692" width="5" height="15" fill="rgb(210,41,26)"/><text x="526.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="708" width="5" height="15" fill="rgb(242,134,16)"/><text x="526.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="724" width="5" height="15" fill="rgb(231,188,34)"/><text x="526.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="740" width="5" height="15" fill="rgb(212,148,26)"/><text x="526.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="756" width="5" height="15" fill="rgb(214,172,20)"/><text x="526.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.37%)</title><rect x="523" y="772" width="5" height="15" fill="rgb(249,78,35)"/><text x="526.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="523" y="788" width="5" height="15" fill="rgb(234,37,15)"/><text x="526.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="804" width="5" height="15" fill="rgb(241,181,51)"/><text x="526.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="820" width="5" height="15" fill="rgb(251,13,33)"/><text x="526.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="836" width="5" height="15" fill="rgb(208,223,47)"/><text x="526.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="852" width="5" height="15" fill="rgb(218,63,30)"/><text x="526.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="868" width="5" height="15" fill="rgb(237,214,44)"/><text x="526.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="884" width="5" height="15" fill="rgb(226,12,3)"/><text x="526.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.37%)</title><rect x="523" y="900" width="5" height="15" fill="rgb(206,149,23)"/><text x="526.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="523" y="916" width="5" height="15" fill="rgb(240,226,44)"/><text x="526.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="932" width="5" height="15" fill="rgb(235,110,41)"/><text x="526.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="523" y="948" width="5" height="15" fill="rgb(242,20,12)"/><text x="526.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="523" y="964" width="5" height="15" fill="rgb(247,181,12)"/><text x="526.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="523" y="980" width="5" height="15" fill="rgb(222,5,19)"/><text x="526.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="523" y="996" width="5" height="15" fill="rgb(211,136,1)"/><text x="526.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="523" y="1012" width="5" height="15" fill="rgb(220,196,14)"/><text x="526.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6691) (1 samples, 0.19%)</title><rect x="526" y="1028" width="2" height="15" fill="rgb(232,149,44)"/><text x="529.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.19%)</title><rect x="526" y="1044" width="2" height="15" fill="rgb(211,128,31)"/><text x="529.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.19%)</title><rect x="526" y="1060" width="2" height="15" fill="rgb(215,53,46)"/><text x="529.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:63) (1 samples, 0.19%)</title><rect x="526" y="1076" width="2" height="15" fill="rgb(217,226,35)"/><text x="529.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.37%)</title><rect x="528" y="916" width="4" height="15" fill="rgb(205,193,0)"/><text x="531.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="932" width="4" height="15" fill="rgb(226,67,51)"/><text x="531.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="948" width="4" height="15" fill="rgb(248,31,48)"/><text x="531.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="964" width="4" height="15" fill="rgb(217,6,39)"/><text x="531.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="980" width="4" height="15" fill="rgb(215,104,30)"/><text x="531.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="996" width="4" height="15" fill="rgb(234,27,36)"/><text x="531.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.37%)</title><rect x="528" y="1012" width="4" height="15" fill="rgb(252,137,35)"/><text x="531.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1028" width="4" height="15" fill="rgb(254,228,50)"/><text x="531.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="1044" width="4" height="15" fill="rgb(229,1,45)"/><text x="531.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="1060" width="4" height="15" fill="rgb(235,65,50)"/><text x="531.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="1076" width="4" height="15" fill="rgb(231,183,16)"/><text x="531.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1092" width="4" height="15" fill="rgb(228,141,35)"/><text x="531.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.37%)</title><rect x="528" y="1108" width="4" height="15" fill="rgb(205,45,34)"/><text x="531.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1124" width="4" height="15" fill="rgb(222,4,45)"/><text x="531.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="1140" width="4" height="15" fill="rgb(212,113,33)"/><text x="531.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="1156" width="4" height="15" fill="rgb(251,140,43)"/><text x="531.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="1172" width="4" height="15" fill="rgb(209,213,29)"/><text x="531.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1188" width="4" height="15" fill="rgb(238,22,34)"/><text x="531.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.37%)</title><rect x="528" y="1204" width="4" height="15" fill="rgb(210,103,12)"/><text x="531.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1220" width="4" height="15" fill="rgb(243,207,6)"/><text x="531.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="1236" width="4" height="15" fill="rgb(220,228,37)"/><text x="531.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="1252" width="4" height="15" fill="rgb(232,197,22)"/><text x="531.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="1268" width="4" height="15" fill="rgb(217,6,17)"/><text x="531.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1284" width="4" height="15" fill="rgb(229,78,27)"/><text x="531.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.37%)</title><rect x="528" y="1300" width="4" height="15" fill="rgb(222,133,16)"/><text x="531.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1316" width="4" height="15" fill="rgb(243,92,32)"/><text x="531.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="1332" width="4" height="15" fill="rgb(215,101,42)"/><text x="531.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="1348" width="4" height="15" fill="rgb(217,143,14)"/><text x="531.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="1364" width="4" height="15" fill="rgb(249,66,17)"/><text x="531.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1380" width="4" height="15" fill="rgb(245,12,19)"/><text x="531.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.37%)</title><rect x="528" y="1396" width="4" height="15" fill="rgb(254,64,49)"/><text x="531.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1412" width="4" height="15" fill="rgb(240,181,17)"/><text x="531.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="1428" width="4" height="15" fill="rgb(247,177,3)"/><text x="531.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="1444" width="4" height="15" fill="rgb(243,78,27)"/><text x="531.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="1460" width="4" height="15" fill="rgb(242,58,16)"/><text x="531.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1476" width="4" height="15" fill="rgb(241,183,37)"/><text x="531.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.37%)</title><rect x="528" y="1492" width="4" height="15" fill="rgb(216,145,14)"/><text x="531.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1508" width="4" height="15" fill="rgb(232,11,53)"/><text x="531.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="528" y="1524" width="4" height="15" fill="rgb(207,127,27)"/><text x="531.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1540" width="4" height="15" fill="rgb(248,128,21)"/><text x="531.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1556" width="4" height="15" fill="rgb(209,187,7)"/><text x="531.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="1572" width="4" height="15" fill="rgb(207,116,35)"/><text x="531.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="1588" width="4" height="15" fill="rgb(243,151,54)"/><text x="531.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="1604" width="4" height="15" fill="rgb(212,215,36)"/><text x="531.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1620" width="4" height="15" fill="rgb(249,151,22)"/><text x="531.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (2 samples, 0.37%)</title><rect x="528" y="1636" width="4" height="15" fill="rgb(224,42,27)"/><text x="531.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="528" y="1652" width="4" height="15" fill="rgb(245,36,41)"/><text x="531.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1668" width="4" height="15" fill="rgb(232,173,13)"/><text x="531.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="528" y="1684" width="4" height="15" fill="rgb(234,156,47)"/><text x="531.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="528" y="1700" width="4" height="15" fill="rgb(216,206,2)"/><text x="531.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="528" y="1716" width="4" height="15" fill="rgb(244,22,51)"/><text x="531.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="528" y="1732" width="4" height="15" fill="rgb(253,92,41)"/><text x="531.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="528" y="1748" width="4" height="15" fill="rgb(220,227,54)"/><text x="531.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/__init__.py:382) (2 samples, 0.37%)</title><rect x="528" y="1764" width="4" height="15" fill="rgb(240,227,31)"/><text x="531.00" y="1774.50"></text></g><g><title>deprecate (matplotlib/cbook/deprecation.py:246) (2 samples, 0.37%)</title><rect x="528" y="1780" width="4" height="15" fill="rgb(237,167,23)"/><text x="531.00" y="1790.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.56%)</title><rect x="528" y="436" width="6" height="15" fill="rgb(233,133,9)"/><text x="531.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="528" y="452" width="6" height="15" fill="rgb(205,0,11)"/><text x="531.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="528" y="468" width="6" height="15" fill="rgb(225,134,16)"/><text x="531.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="528" y="484" width="6" height="15" fill="rgb(212,26,11)"/><text x="531.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="528" y="500" width="6" height="15" fill="rgb(216,83,12)"/><text x="531.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="528" y="516" width="6" height="15" fill="rgb(213,116,1)"/><text x="531.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.56%)</title><rect x="528" y="532" width="6" height="15" fill="rgb(239,11,27)"/><text x="531.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="528" y="548" width="6" height="15" fill="rgb(224,161,5)"/><text x="531.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="528" y="564" width="6" height="15" fill="rgb(240,157,34)"/><text x="531.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="528" y="580" width="6" height="15" fill="rgb(225,45,50)"/><text x="531.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="528" y="596" width="6" height="15" fill="rgb(216,135,41)"/><text x="531.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="528" y="612" width="6" height="15" fill="rgb(252,201,22)"/><text x="531.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.56%)</title><rect x="528" y="628" width="6" height="15" fill="rgb(222,87,11)"/><text x="531.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="528" y="644" width="6" height="15" fill="rgb(235,32,0)"/><text x="531.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="528" y="660" width="6" height="15" fill="rgb(216,140,21)"/><text x="531.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="528" y="676" width="6" height="15" fill="rgb(238,77,32)"/><text x="531.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="528" y="692" width="6" height="15" fill="rgb(251,80,37)"/><text x="531.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="528" y="708" width="6" height="15" fill="rgb(239,162,5)"/><text x="531.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.56%)</title><rect x="528" y="724" width="6" height="15" fill="rgb(228,227,9)"/><text x="531.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="528" y="740" width="6" height="15" fill="rgb(251,154,26)"/><text x="531.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="528" y="756" width="6" height="15" fill="rgb(207,65,7)"/><text x="531.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="528" y="772" width="6" height="15" fill="rgb(243,16,0)"/><text x="531.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="528" y="788" width="6" height="15" fill="rgb(213,26,4)"/><text x="531.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="528" y="804" width="6" height="15" fill="rgb(243,59,31)"/><text x="531.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.56%)</title><rect x="528" y="820" width="6" height="15" fill="rgb(245,46,35)"/><text x="531.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="528" y="836" width="6" height="15" fill="rgb(209,123,13)"/><text x="531.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="528" y="852" width="6" height="15" fill="rgb(218,120,16)"/><text x="531.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="528" y="868" width="6" height="15" fill="rgb(217,10,32)"/><text x="531.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="528" y="884" width="6" height="15" fill="rgb(232,95,41)"/><text x="531.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="528" y="900" width="6" height="15" fill="rgb(226,53,0)"/><text x="531.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:47) (1 samples, 0.19%)</title><rect x="532" y="916" width="2" height="15" fill="rgb(210,191,51)"/><text x="535.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="532" y="932" width="2" height="15" fill="rgb(237,151,39)"/><text x="535.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="532" y="948" width="2" height="15" fill="rgb(220,13,30)"/><text x="535.00" y="958.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="532" y="964" width="2" height="15" fill="rgb(214,168,16)"/><text x="535.00" y="974.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="532" y="980" width="2" height="15" fill="rgb(219,111,13)"/><text x="535.00" y="990.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.19%)</title><rect x="532" y="996" width="2" height="15" fill="rgb(234,137,33)"/><text x="535.00" y="1006.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.19%)</title><rect x="532" y="1012" width="2" height="15" fill="rgb(222,33,3)"/><text x="535.00" y="1022.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.19%)</title><rect x="532" y="1028" width="2" height="15" fill="rgb(232,26,46)"/><text x="535.00" y="1038.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.19%)</title><rect x="532" y="1044" width="2" height="15" fill="rgb(246,126,42)"/><text x="535.00" y="1054.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.19%)</title><rect x="532" y="1060" width="2" height="15" fill="rgb(251,154,42)"/><text x="535.00" y="1070.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="532" y="1076" width="2" height="15" fill="rgb(218,84,32)"/><text x="535.00" y="1086.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="532" y="1092" width="2" height="15" fill="rgb(241,209,29)"/><text x="535.00" y="1102.50"></text></g><g><title>_tokenize (tokenize.py:542) (1 samples, 0.19%)</title><rect x="534" y="1380" width="3" height="15" fill="rgb(223,189,10)"/><text x="537.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.37%)</title><rect x="534" y="1108" width="5" height="15" fill="rgb(243,4,21)"/><text x="537.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="534" y="1124" width="5" height="15" fill="rgb(248,34,38)"/><text x="537.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="534" y="1140" width="5" height="15" fill="rgb(246,7,32)"/><text x="537.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="534" y="1156" width="5" height="15" fill="rgb(218,227,44)"/><text x="537.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="534" y="1172" width="5" height="15" fill="rgb(253,209,18)"/><text x="537.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="534" y="1188" width="5" height="15" fill="rgb(220,95,44)"/><text x="537.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.37%)</title><rect x="534" y="1204" width="5" height="15" fill="rgb(230,132,22)"/><text x="537.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="534" y="1220" width="5" height="15" fill="rgb(241,16,38)"/><text x="537.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="534" y="1236" width="5" height="15" fill="rgb(215,47,39)"/><text x="537.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="534" y="1252" width="5" height="15" fill="rgb(220,36,33)"/><text x="537.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="534" y="1268" width="5" height="15" fill="rgb(228,28,19)"/><text x="537.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="534" y="1284" width="5" height="15" fill="rgb(229,148,2)"/><text x="537.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.37%)</title><rect x="534" y="1300" width="5" height="15" fill="rgb(207,22,52)"/><text x="537.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.37%)</title><rect x="534" y="1316" width="5" height="15" fill="rgb(229,80,25)"/><text x="537.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.37%)</title><rect x="534" y="1332" width="5" height="15" fill="rgb(235,56,50)"/><text x="537.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.37%)</title><rect x="534" y="1348" width="5" height="15" fill="rgb(216,145,50)"/><text x="537.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.37%)</title><rect x="534" y="1364" width="5" height="15" fill="rgb(229,23,42)"/><text x="537.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.19%)</title><rect x="537" y="1380" width="2" height="15" fill="rgb(249,90,23)"/><text x="540.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.19%)</title><rect x="537" y="1396" width="2" height="15" fill="rgb(251,145,53)"/><text x="540.00" y="1406.50"></text></g><g><title>0x7f2e191d2902 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="537" y="1412" width="2" height="15" fill="rgb(246,6,51)"/><text x="540.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.19%)</title><rect x="539" y="1108" width="2" height="15" fill="rgb(216,125,52)"/><text x="542.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="539" y="1124" width="2" height="15" fill="rgb(230,18,44)"/><text x="542.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="539" y="1140" width="2" height="15" fill="rgb(247,152,4)"/><text x="542.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="539" y="1156" width="2" height="15" fill="rgb(229,63,50)"/><text x="542.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="539" y="1172" width="2" height="15" fill="rgb(222,48,22)"/><text x="542.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="539" y="1188" width="2" height="15" fill="rgb(228,90,31)"/><text x="542.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="539" y="1204" width="2" height="15" fill="rgb(254,12,34)"/><text x="542.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="539" y="1220" width="2" height="15" fill="rgb(238,44,0)"/><text x="542.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:29) (1 samples, 0.19%)</title><rect x="539" y="1236" width="2" height="15" fill="rgb(219,183,37)"/><text x="542.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="539" y="1252" width="2" height="15" fill="rgb(234,197,49)"/><text x="542.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="539" y="1268" width="2" height="15" fill="rgb(242,137,37)"/><text x="542.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="539" y="1284" width="2" height="15" fill="rgb(214,110,54)"/><text x="542.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="539" y="1300" width="2" height="15" fill="rgb(251,149,47)"/><text x="542.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="539" y="1316" width="2" height="15" fill="rgb(210,42,1)"/><text x="542.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="539" y="1332" width="2" height="15" fill="rgb(224,43,20)"/><text x="542.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.19%)</title><rect x="539" y="1348" width="2" height="15" fill="rgb(233,145,38)"/><text x="542.00" y="1358.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.19%)</title><rect x="539" y="1364" width="2" height="15" fill="rgb(247,164,8)"/><text x="542.00" y="1374.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="539" y="1380" width="2" height="15" fill="rgb(245,159,4)"/><text x="542.00" y="1390.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.19%)</title><rect x="541" y="1492" width="2" height="15" fill="rgb(251,112,48)"/><text x="544.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.19%)</title><rect x="541" y="1508" width="2" height="15" fill="rgb(249,212,13)"/><text x="544.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.19%)</title><rect x="541" y="1524" width="2" height="15" fill="rgb(247,89,15)"/><text x="544.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.19%)</title><rect x="541" y="1540" width="2" height="15" fill="rgb(214,59,16)"/><text x="544.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="541" y="1556" width="2" height="15" fill="rgb(225,77,13)"/><text x="544.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:123) (1 samples, 0.19%)</title><rect x="541" y="1572" width="2" height="15" fill="rgb(214,15,33)"/><text x="544.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.19%)</title><rect x="541" y="1588" width="2" height="15" fill="rgb(220,1,50)"/><text x="544.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.19%)</title><rect x="541" y="1604" width="2" height="15" fill="rgb(236,218,4)"/><text x="544.00" y="1614.50"></text></g><g><title>0x7f2e0928e0e9 (?) (1 samples, 0.19%)</title><rect x="541" y="1620" width="2" height="15" fill="rgb(229,24,47)"/><text x="544.00" y="1630.50"></text></g><g><title>0x7f2e09291cf2 (?) (1 samples, 0.19%)</title><rect x="541" y="1636" width="2" height="15" fill="rgb(235,195,44)"/><text x="544.00" y="1646.50"></text></g><g><title>0x7f2e0929122a (?) (1 samples, 0.19%)</title><rect x="541" y="1652" width="2" height="15" fill="rgb(229,124,25)"/><text x="544.00" y="1662.50"></text></g><g><title>0x7f2e092852ff (?) (1 samples, 0.19%)</title><rect x="541" y="1668" width="2" height="15" fill="rgb(208,196,51)"/><text x="544.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:4) (18 samples, 3.36%)</title><rect x="506" y="52" width="39" height="15" fill="rgb(232,197,22)"/><text x="509.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 3.36%)</title><rect x="506" y="68" width="39" height="15" fill="rgb(231,4,18)"/><text x="509.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 3.36%)</title><rect x="506" y="84" width="39" height="15" fill="rgb(215,116,13)"/><text x="509.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 3.36%)</title><rect x="506" y="100" width="39" height="15" fill="rgb(227,170,6)"/><text x="509.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 3.36%)</title><rect x="506" y="116" width="39" height="15" fill="rgb(225,158,4)"/><text x="509.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 3.36%)</title><rect x="506" y="132" width="39" height="15" fill="rgb(231,220,32)"/><text x="509.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:7) (8 samples, 1.50%)</title><rect x="528" y="148" width="17" height="15" fill="rgb(239,56,52)"/><text x="531.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="528" y="164" width="17" height="15" fill="rgb(242,89,52)"/><text x="531.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="528" y="180" width="17" height="15" fill="rgb(247,5,46)"/><text x="531.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="528" y="196" width="17" height="15" fill="rgb(240,195,50)"/><text x="531.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="528" y="212" width="17" height="15" fill="rgb(247,167,13)"/><text x="531.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="528" y="228" width="17" height="15" fill="rgb(225,170,37)"/><text x="531.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.50%)</title><rect x="528" y="244" width="17" height="15" fill="rgb(220,138,50)"/><text x="531.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="528" y="260" width="17" height="15" fill="rgb(236,78,52)"/><text x="531.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="528" y="276" width="17" height="15" fill="rgb(251,71,26)"/><text x="531.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="528" y="292" width="17" height="15" fill="rgb(249,46,32)"/><text x="531.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="528" y="308" width="17" height="15" fill="rgb(206,206,45)"/><text x="531.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="528" y="324" width="17" height="15" fill="rgb(218,107,23)"/><text x="531.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.50%)</title><rect x="528" y="340" width="17" height="15" fill="rgb(252,78,52)"/><text x="531.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.50%)</title><rect x="528" y="356" width="17" height="15" fill="rgb(239,147,24)"/><text x="531.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.50%)</title><rect x="528" y="372" width="17" height="15" fill="rgb(212,171,47)"/><text x="531.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.50%)</title><rect x="528" y="388" width="17" height="15" fill="rgb(218,218,20)"/><text x="531.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.50%)</title><rect x="528" y="404" width="17" height="15" fill="rgb(221,201,35)"/><text x="531.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.50%)</title><rect x="528" y="420" width="17" height="15" fill="rgb(239,135,22)"/><text x="531.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 0.93%)</title><rect x="534" y="436" width="11" height="15" fill="rgb(245,167,38)"/><text x="537.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="452" width="11" height="15" fill="rgb(233,177,34)"/><text x="537.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.93%)</title><rect x="534" y="468" width="11" height="15" fill="rgb(244,182,54)"/><text x="537.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="484" width="11" height="15" fill="rgb(249,182,14)"/><text x="537.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="500" width="11" height="15" fill="rgb(211,129,25)"/><text x="537.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="534" y="516" width="11" height="15" fill="rgb(250,90,45)"/><text x="537.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="534" y="532" width="11" height="15" fill="rgb(208,96,28)"/><text x="537.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="534" y="548" width="11" height="15" fill="rgb(250,121,22)"/><text x="537.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="564" width="11" height="15" fill="rgb(222,87,52)"/><text x="537.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 0.93%)</title><rect x="534" y="580" width="11" height="15" fill="rgb(219,90,14)"/><text x="537.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="596" width="11" height="15" fill="rgb(253,15,30)"/><text x="537.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="534" y="612" width="11" height="15" fill="rgb(215,146,48)"/><text x="537.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="534" y="628" width="11" height="15" fill="rgb(254,136,38)"/><text x="537.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="534" y="644" width="11" height="15" fill="rgb(231,147,7)"/><text x="537.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="660" width="11" height="15" fill="rgb(220,71,34)"/><text x="537.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 0.93%)</title><rect x="534" y="676" width="11" height="15" fill="rgb(218,96,30)"/><text x="537.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="692" width="11" height="15" fill="rgb(252,143,37)"/><text x="537.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="534" y="708" width="11" height="15" fill="rgb(251,67,39)"/><text x="537.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="534" y="724" width="11" height="15" fill="rgb(206,210,19)"/><text x="537.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="534" y="740" width="11" height="15" fill="rgb(249,179,28)"/><text x="537.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="756" width="11" height="15" fill="rgb(229,129,20)"/><text x="537.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.93%)</title><rect x="534" y="772" width="11" height="15" fill="rgb(250,210,8)"/><text x="537.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="788" width="11" height="15" fill="rgb(231,147,45)"/><text x="537.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="534" y="804" width="11" height="15" fill="rgb(232,22,50)"/><text x="537.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="534" y="820" width="11" height="15" fill="rgb(251,174,51)"/><text x="537.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="534" y="836" width="11" height="15" fill="rgb(210,195,38)"/><text x="537.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="852" width="11" height="15" fill="rgb(219,225,52)"/><text x="537.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.93%)</title><rect x="534" y="868" width="11" height="15" fill="rgb(241,1,39)"/><text x="537.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="884" width="11" height="15" fill="rgb(216,211,32)"/><text x="537.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.93%)</title><rect x="534" y="900" width="11" height="15" fill="rgb(242,221,0)"/><text x="537.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="916" width="11" height="15" fill="rgb(225,95,43)"/><text x="537.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="932" width="11" height="15" fill="rgb(237,216,42)"/><text x="537.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="534" y="948" width="11" height="15" fill="rgb(222,36,36)"/><text x="537.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="534" y="964" width="11" height="15" fill="rgb(236,141,53)"/><text x="537.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="534" y="980" width="11" height="15" fill="rgb(216,9,6)"/><text x="537.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="996" width="11" height="15" fill="rgb(211,70,32)"/><text x="537.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.93%)</title><rect x="534" y="1012" width="11" height="15" fill="rgb(209,132,36)"/><text x="537.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="534" y="1028" width="11" height="15" fill="rgb(216,82,3)"/><text x="537.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="534" y="1044" width="11" height="15" fill="rgb(224,6,46)"/><text x="537.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="534" y="1060" width="11" height="15" fill="rgb(220,189,13)"/><text x="537.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="534" y="1076" width="11" height="15" fill="rgb(236,221,7)"/><text x="537.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="534" y="1092" width="11" height="15" fill="rgb(222,2,54)"/><text x="537.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.37%)</title><rect x="541" y="1108" width="4" height="15" fill="rgb(234,157,23)"/><text x="544.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="541" y="1124" width="4" height="15" fill="rgb(227,59,4)"/><text x="544.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="541" y="1140" width="4" height="15" fill="rgb(231,78,47)"/><text x="544.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="541" y="1156" width="4" height="15" fill="rgb(209,134,20)"/><text x="544.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="541" y="1172" width="4" height="15" fill="rgb(215,8,51)"/><text x="544.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="541" y="1188" width="4" height="15" fill="rgb(226,24,29)"/><text x="544.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="541" y="1204" width="4" height="15" fill="rgb(222,27,25)"/><text x="544.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="541" y="1220" width="4" height="15" fill="rgb(244,153,0)"/><text x="544.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.37%)</title><rect x="541" y="1236" width="4" height="15" fill="rgb(249,175,53)"/><text x="544.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="541" y="1252" width="4" height="15" fill="rgb(240,173,8)"/><text x="544.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="541" y="1268" width="4" height="15" fill="rgb(225,58,11)"/><text x="544.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="541" y="1284" width="4" height="15" fill="rgb(233,90,40)"/><text x="544.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="541" y="1300" width="4" height="15" fill="rgb(231,32,44)"/><text x="544.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="541" y="1316" width="4" height="15" fill="rgb(220,167,25)"/><text x="544.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="541" y="1332" width="4" height="15" fill="rgb(214,135,20)"/><text x="544.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="541" y="1348" width="4" height="15" fill="rgb(241,229,44)"/><text x="544.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.37%)</title><rect x="541" y="1364" width="4" height="15" fill="rgb(214,158,9)"/><text x="544.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="541" y="1380" width="4" height="15" fill="rgb(212,158,28)"/><text x="544.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="541" y="1396" width="4" height="15" fill="rgb(254,18,29)"/><text x="544.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="541" y="1412" width="4" height="15" fill="rgb(231,30,0)"/><text x="544.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="541" y="1428" width="4" height="15" fill="rgb(216,174,12)"/><text x="544.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="541" y="1444" width="4" height="15" fill="rgb(227,95,52)"/><text x="544.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.37%)</title><rect x="541" y="1460" width="4" height="15" fill="rgb(237,168,22)"/><text x="544.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.37%)</title><rect x="541" y="1476" width="4" height="15" fill="rgb(227,201,45)"/><text x="544.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.19%)</title><rect x="543" y="1492" width="2" height="15" fill="rgb(239,109,31)"/><text x="546.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.19%)</title><rect x="543" y="1508" width="2" height="15" fill="rgb(252,203,10)"/><text x="546.00" y="1518.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.19%)</title><rect x="548" y="196" width="2" height="15" fill="rgb(253,215,28)"/><text x="551.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.19%)</title><rect x="548" y="212" width="2" height="15" fill="rgb(243,136,34)"/><text x="551.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.19%)</title><rect x="548" y="228" width="2" height="15" fill="rgb(213,203,45)"/><text x="551.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.19%)</title><rect x="548" y="244" width="2" height="15" fill="rgb(232,54,4)"/><text x="551.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.19%)</title><rect x="548" y="260" width="2" height="15" fill="rgb(238,220,16)"/><text x="551.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="548" y="276" width="2" height="15" fill="rgb(213,22,14)"/><text x="551.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="548" y="292" width="2" height="15" fill="rgb(238,106,4)"/><text x="551.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.19%)</title><rect x="548" y="308" width="2" height="15" fill="rgb(207,226,32)"/><text x="551.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="548" y="324" width="2" height="15" fill="rgb(217,54,16)"/><text x="551.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:22) (1 samples, 0.19%)</title><rect x="550" y="228" width="2" height="15" fill="rgb(241,110,21)"/><text x="553.00" y="238.50"></text></g><g><title>array_max (methods.c:323) (1 samples, 0.19%)</title><rect x="550" y="244" width="2" height="15" fill="rgb(213,3,1)"/><text x="553.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="550" y="260" width="2" height="15" fill="rgb(248,95,46)"/><text x="553.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (1 samples, 0.19%)</title><rect x="550" y="276" width="2" height="15" fill="rgb(234,0,31)"/><text x="553.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="550" y="292" width="2" height="15" fill="rgb(219,149,28)"/><text x="553.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="550" y="308" width="2" height="15" fill="rgb(240,163,31)"/><text x="553.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="550" y="324" width="2" height="15" fill="rgb(250,210,13)"/><text x="553.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="550" y="340" width="2" height="15" fill="rgb(228,15,38)"/><text x="553.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="550" y="356" width="2" height="15" fill="rgb(229,140,48)"/><text x="553.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="550" y="372" width="2" height="15" fill="rgb(237,170,6)"/><text x="553.00" y="382.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.75%)</title><rect x="545" y="132" width="9" height="15" fill="rgb(214,185,20)"/><text x="548.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.75%)</title><rect x="545" y="148" width="9" height="15" fill="rgb(233,54,53)"/><text x="548.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (4 samples, 0.75%)</title><rect x="545" y="164" width="9" height="15" fill="rgb(220,101,33)"/><text x="548.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (3 samples, 0.56%)</title><rect x="548" y="180" width="6" height="15" fill="rgb(215,216,34)"/><text x="551.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (2 samples, 0.37%)</title><rect x="550" y="196" width="4" height="15" fill="rgb(211,119,26)"/><text x="553.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.37%)</title><rect x="550" y="212" width="4" height="15" fill="rgb(251,11,18)"/><text x="553.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:24) (1 samples, 0.19%)</title><rect x="552" y="228" width="2" height="15" fill="rgb(242,147,41)"/><text x="555.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="552" y="244" width="2" height="15" fill="rgb(237,165,19)"/><text x="555.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="552" y="260" width="2" height="15" fill="rgb(224,117,36)"/><text x="555.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="552" y="276" width="2" height="15" fill="rgb(230,42,45)"/><text x="555.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="552" y="292" width="2" height="15" fill="rgb(251,8,12)"/><text x="555.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.19%)</title><rect x="552" y="308" width="2" height="15" fill="rgb(211,224,10)"/><text x="555.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.19%)</title><rect x="552" y="324" width="2" height="15" fill="rgb(234,137,9)"/><text x="555.00" y="334.50"></text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:18) (5 samples, 0.93%)</title><rect x="545" y="100" width="11" height="15" fill="rgb(245,80,31)"/><text x="548.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 0.93%)</title><rect x="545" y="116" width="11" height="15" fill="rgb(245,59,18)"/><text x="548.00" y="126.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="554" y="132" width="2" height="15" fill="rgb(233,55,33)"/><text x="557.00" y="142.50"></text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:22) (1 samples, 0.19%)</title><rect x="556" y="100" width="3" height="15" fill="rgb(212,210,43)"/><text x="559.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.19%)</title><rect x="568" y="148" width="2" height="15" fill="rgb(216,41,36)"/><text x="571.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:423) (1 samples, 0.19%)</title><rect x="572" y="164" width="2" height="15" fill="rgb(238,15,27)"/><text x="575.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.19%)</title><rect x="574" y="164" width="2" height="15" fill="rgb(239,217,22)"/><text x="577.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.19%)</title><rect x="576" y="164" width="3" height="15" fill="rgb(251,2,0)"/><text x="579.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.19%)</title><rect x="579" y="164" width="2" height="15" fill="rgb(226,192,40)"/><text x="582.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.19%)</title><rect x="581" y="164" width="2" height="15" fill="rgb(219,138,17)"/><text x="584.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="605" y="180" width="2" height="15" fill="rgb(229,164,51)"/><text x="608.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (27 samples, 5.05%)</title><rect x="607" y="180" width="60" height="15" fill="rgb(221,185,50)"/><text x="610.00" y="190.50">run (m..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.75%)</title><rect x="658" y="196" width="9" height="15" fill="rgb(225,127,15)"/><text x="661.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.19%)</title><rect x="698" y="228" width="2" height="15" fill="rgb(205,177,38)"/><text x="701.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:96) (1 samples, 0.19%)</title><rect x="698" y="244" width="2" height="15" fill="rgb(217,98,34)"/><text x="701.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="700" y="228" width="2" height="15" fill="rgb(230,115,40)"/><text x="703.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="700" y="244" width="2" height="15" fill="rgb(205,95,2)"/><text x="703.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="700" y="260" width="2" height="15" fill="rgb(251,15,53)"/><text x="703.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (3 samples, 0.56%)</title><rect x="698" y="212" width="6" height="15" fill="rgb(251,146,31)"/><text x="701.00" y="222.50"></text></g><g><title>array_ravel (methods.c:2443) (1 samples, 0.19%)</title><rect x="702" y="228" width="2" height="15" fill="rgb(232,222,20)"/><text x="705.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c:906) (1 samples, 0.19%)</title><rect x="702" y="244" width="2" height="15" fill="rgb(229,192,51)"/><text x="705.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:277) (1 samples, 0.19%)</title><rect x="702" y="260" width="2" height="15" fill="rgb(228,13,30)"/><text x="705.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:491) (2 samples, 0.37%)</title><rect x="706" y="244" width="5" height="15" fill="rgb(217,13,48)"/><text x="709.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (2 samples, 0.37%)</title><rect x="706" y="260" width="5" height="15" fill="rgb(229,100,15)"/><text x="709.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (2 samples, 0.37%)</title><rect x="706" y="276" width="5" height="15" fill="rgb(221,210,49)"/><text x="709.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (3 samples, 0.56%)</title><rect x="711" y="276" width="6" height="15" fill="rgb(214,122,31)"/><text x="714.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.19%)</title><rect x="717" y="276" width="3" height="15" fill="rgb(239,123,3)"/><text x="720.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.19%)</title><rect x="717" y="292" width="3" height="15" fill="rgb(206,19,13)"/><text x="720.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.19%)</title><rect x="717" y="308" width="3" height="15" fill="rgb(211,168,52)"/><text x="720.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (1 samples, 0.19%)</title><rect x="717" y="324" width="3" height="15" fill="rgb(217,9,26)"/><text x="720.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (7 samples, 1.31%)</title><rect x="706" y="228" width="16" height="15" fill="rgb(206,41,13)"/><text x="709.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (5 samples, 0.93%)</title><rect x="711" y="244" width="11" height="15" fill="rgb(226,66,39)"/><text x="714.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (5 samples, 0.93%)</title><rect x="711" y="260" width="11" height="15" fill="rgb(239,63,53)"/><text x="714.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.19%)</title><rect x="720" y="276" width="2" height="15" fill="rgb(248,222,10)"/><text x="723.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:870) (1 samples, 0.19%)</title><rect x="720" y="292" width="2" height="15" fill="rgb(237,20,10)"/><text x="723.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:703) (1 samples, 0.19%)</title><rect x="720" y="308" width="2" height="15" fill="rgb(249,48,24)"/><text x="723.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.19%)</title><rect x="722" y="228" width="2" height="15" fill="rgb(241,213,27)"/><text x="725.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.19%)</title><rect x="722" y="244" width="2" height="15" fill="rgb(212,108,16)"/><text x="725.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="722" y="260" width="2" height="15" fill="rgb(233,55,22)"/><text x="725.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.19%)</title><rect x="722" y="276" width="2" height="15" fill="rgb(228,219,34)"/><text x="725.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.19%)</title><rect x="722" y="292" width="2" height="15" fill="rgb(237,175,39)"/><text x="725.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.19%)</title><rect x="724" y="228" width="2" height="15" fill="rgb(212,71,18)"/><text x="727.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1611) (1 samples, 0.19%)</title><rect x="724" y="244" width="2" height="15" fill="rgb(249,17,18)"/><text x="727.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="724" y="260" width="2" height="15" fill="rgb(217,67,0)"/><text x="727.00" y="270.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1850) (1 samples, 0.19%)</title><rect x="724" y="276" width="2" height="15" fill="rgb(244,93,19)"/><text x="727.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (11 samples, 2.06%)</title><rect x="704" y="212" width="25" height="15" fill="rgb(254,16,10)"/><text x="707.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.19%)</title><rect x="726" y="228" width="3" height="15" fill="rgb(251,110,8)"/><text x="729.00" y="238.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.19%)</title><rect x="726" y="244" width="3" height="15" fill="rgb(212,103,17)"/><text x="729.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="726" y="260" width="3" height="15" fill="rgb(245,175,39)"/><text x="729.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="726" y="276" width="3" height="15" fill="rgb(217,98,15)"/><text x="729.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.19%)</title><rect x="729" y="212" width="2" height="15" fill="rgb(216,120,12)"/><text x="732.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.19%)</title><rect x="737" y="260" width="3" height="15" fill="rgb(234,127,6)"/><text x="740.00" y="270.50"></text></g><g><title>array_astype (methods.c:799) (2 samples, 0.37%)</title><rect x="737" y="244" width="5" height="15" fill="rgb(220,69,7)"/><text x="740.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.19%)</title><rect x="740" y="260" width="2" height="15" fill="rgb(223,11,37)"/><text x="743.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.19%)</title><rect x="740" y="276" width="2" height="15" fill="rgb(209,101,41)"/><text x="743.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="740" y="292" width="2" height="15" fill="rgb(228,35,18)"/><text x="743.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(240,82,18)"/><text x="745.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="742" y="324" width="2" height="15" fill="rgb(221,178,20)"/><text x="745.00" y="334.50"></text></g><g><title>array_astype (methods.c:841) (2 samples, 0.37%)</title><rect x="742" y="244" width="4" height="15" fill="rgb(231,205,7)"/><text x="745.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (2 samples, 0.37%)</title><rect x="742" y="260" width="4" height="15" fill="rgb(228,78,14)"/><text x="745.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (2 samples, 0.37%)</title><rect x="742" y="276" width="4" height="15" fill="rgb(244,227,30)"/><text x="745.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (2 samples, 0.37%)</title><rect x="742" y="292" width="4" height="15" fill="rgb(217,201,7)"/><text x="745.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.19%)</title><rect x="744" y="308" width="2" height="15" fill="rgb(209,188,5)"/><text x="747.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.19%)</title><rect x="744" y="324" width="2" height="15" fill="rgb(231,117,51)"/><text x="747.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.19%)</title><rect x="746" y="276" width="2" height="15" fill="rgb(245,187,4)"/><text x="749.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="746" y="292" width="2" height="15" fill="rgb(235,137,12)"/><text x="749.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.37%)</title><rect x="748" y="276" width="5" height="15" fill="rgb(243,38,36)"/><text x="751.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (2 samples, 0.37%)</title><rect x="748" y="292" width="5" height="15" fill="rgb(228,133,9)"/><text x="751.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.19%)</title><rect x="753" y="276" width="2" height="15" fill="rgb(220,86,22)"/><text x="756.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.19%)</title><rect x="753" y="292" width="2" height="15" fill="rgb(244,160,12)"/><text x="756.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.19%)</title><rect x="753" y="308" width="2" height="15" fill="rgb(230,53,41)"/><text x="756.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (12 samples, 2.24%)</title><rect x="731" y="212" width="26" height="15" fill="rgb(243,173,30)"/><text x="734.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (10 samples, 1.87%)</title><rect x="735" y="228" width="22" height="15" fill="rgb(223,160,34)"/><text x="738.00" y="238.50">&lt;..</text></g><g><title>array_astype (methods.c:845) (5 samples, 0.93%)</title><rect x="746" y="244" width="11" height="15" fill="rgb(243,168,34)"/><text x="749.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 0.93%)</title><rect x="746" y="260" width="11" height="15" fill="rgb(244,30,31)"/><text x="749.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.19%)</title><rect x="755" y="276" width="2" height="15" fill="rgb(227,73,51)"/><text x="758.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.19%)</title><rect x="755" y="292" width="2" height="15" fill="rgb(252,162,44)"/><text x="758.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="755" y="308" width="2" height="15" fill="rgb(220,166,32)"/><text x="758.00" y="318.50"></text></g><g><title>0x7f2e1918aa19 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="755" y="324" width="2" height="15" fill="rgb(209,204,45)"/><text x="758.00" y="334.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.19%)</title><rect x="755" y="340" width="2" height="15" fill="rgb(238,42,17)"/><text x="758.00" y="350.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.19%)</title><rect x="759" y="260" width="3" height="15" fill="rgb(238,76,7)"/><text x="762.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.19%)</title><rect x="759" y="276" width="3" height="15" fill="rgb(247,215,42)"/><text x="762.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.19%)</title><rect x="759" y="292" width="3" height="15" fill="rgb(230,144,30)"/><text x="762.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:121) (1 samples, 0.19%)</title><rect x="759" y="308" width="3" height="15" fill="rgb(209,101,41)"/><text x="762.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (33 samples, 6.17%)</title><rect x="691" y="196" width="73" height="15" fill="rgb(223,29,47)"/><text x="694.00" y="206.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.56%)</title><rect x="757" y="212" width="7" height="15" fill="rgb(239,3,12)"/><text x="760.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.37%)</title><rect x="759" y="228" width="5" height="15" fill="rgb(210,13,53)"/><text x="762.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.37%)</title><rect x="759" y="244" width="5" height="15" fill="rgb(251,150,17)"/><text x="762.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.19%)</title><rect x="762" y="260" width="2" height="15" fill="rgb(241,139,6)"/><text x="765.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="762" y="276" width="2" height="15" fill="rgb(211,139,9)"/><text x="765.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:874) (1 samples, 0.19%)</title><rect x="762" y="292" width="2" height="15" fill="rgb(252,192,4)"/><text x="765.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:268) (1 samples, 0.19%)</title><rect x="764" y="212" width="2" height="15" fill="rgb(207,115,46)"/><text x="767.00" y="222.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (3 samples, 0.56%)</title><rect x="773" y="260" width="6" height="15" fill="rgb(245,16,35)"/><text x="776.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 0.56%)</title><rect x="773" y="276" width="6" height="15" fill="rgb(241,103,42)"/><text x="776.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="777" y="292" width="2" height="15" fill="rgb(223,227,10)"/><text x="780.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.19%)</title><rect x="777" y="308" width="2" height="15" fill="rgb(210,164,10)"/><text x="780.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.19%)</title><rect x="777" y="324" width="2" height="15" fill="rgb(253,64,15)"/><text x="780.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.19%)</title><rect x="777" y="340" width="2" height="15" fill="rgb(209,100,21)"/><text x="780.00" y="350.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:4) (2 samples, 0.37%)</title><rect x="781" y="276" width="5" height="15" fill="rgb(211,165,33)"/><text x="784.00" y="286.50"></text></g><g><title>_expand_dims_dispatcher (numpy/lib/shape_base.py:509) (1 samples, 0.19%)</title><rect x="784" y="292" width="2" height="15" fill="rgb(222,42,3)"/><text x="787.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (2 samples, 0.37%)</title><rect x="786" y="308" width="4" height="15" fill="rgb(229,78,30)"/><text x="789.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.19%)</title><rect x="788" y="324" width="2" height="15" fill="rgb(211,207,19)"/><text x="791.00" y="334.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:577) (1 samples, 0.19%)</title><rect x="790" y="308" width="2" height="15" fill="rgb(220,134,2)"/><text x="793.00" y="318.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (8 samples, 1.50%)</title><rect x="779" y="260" width="18" height="15" fill="rgb(227,223,44)"/><text x="782.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (5 samples, 0.93%)</title><rect x="786" y="276" width="11" height="15" fill="rgb(252,190,35)"/><text x="789.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.93%)</title><rect x="786" y="292" width="11" height="15" fill="rgb(242,32,47)"/><text x="789.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (2 samples, 0.37%)</title><rect x="792" y="308" width="5" height="15" fill="rgb(212,17,47)"/><text x="795.00" y="318.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.19%)</title><rect x="795" y="324" width="2" height="15" fill="rgb(226,15,41)"/><text x="798.00" y="334.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.19%)</title><rect x="795" y="340" width="2" height="15" fill="rgb(238,86,0)"/><text x="798.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.19%)</title><rect x="797" y="324" width="2" height="15" fill="rgb(222,11,42)"/><text x="800.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.19%)</title><rect x="797" y="340" width="2" height="15" fill="rgb(233,63,45)"/><text x="800.00" y="350.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (2 samples, 0.37%)</title><rect x="797" y="260" width="4" height="15" fill="rgb(218,122,14)"/><text x="800.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.37%)</title><rect x="797" y="276" width="4" height="15" fill="rgb(214,18,10)"/><text x="800.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.37%)</title><rect x="797" y="292" width="4" height="15" fill="rgb(218,216,10)"/><text x="800.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (2 samples, 0.37%)</title><rect x="797" y="308" width="4" height="15" fill="rgb(236,211,3)"/><text x="800.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.19%)</title><rect x="799" y="324" width="2" height="15" fill="rgb(222,24,44)"/><text x="802.00" y="334.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.19%)</title><rect x="799" y="340" width="2" height="15" fill="rgb(244,81,31)"/><text x="802.00" y="350.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:350) (1 samples, 0.19%)</title><rect x="799" y="356" width="2" height="15" fill="rgb(205,204,54)"/><text x="802.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="801" y="292" width="3" height="15" fill="rgb(221,220,16)"/><text x="804.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (19 samples, 3.55%)</title><rect x="764" y="196" width="42" height="15" fill="rgb(246,109,4)"/><text x="767.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 3.36%)</title><rect x="766" y="212" width="40" height="15" fill="rgb(226,121,20)"/><text x="769.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (17 samples, 3.18%)</title><rect x="768" y="228" width="38" height="15" fill="rgb(231,155,4)"/><text x="771.00" y="238.50">_ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (17 samples, 3.18%)</title><rect x="768" y="244" width="38" height="15" fill="rgb(236,59,3)"/><text x="771.00" y="254.50">_ru..</text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.37%)</title><rect x="801" y="260" width="5" height="15" fill="rgb(220,150,10)"/><text x="804.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.37%)</title><rect x="801" y="276" width="5" height="15" fill="rgb(241,56,28)"/><text x="804.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="804" y="292" width="2" height="15" fill="rgb(224,227,7)"/><text x="807.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:313) (1 samples, 0.19%)</title><rect x="806" y="196" width="2" height="15" fill="rgb(217,168,37)"/><text x="809.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="819" y="276" width="2" height="15" fill="rgb(233,108,45)"/><text x="822.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.19%)</title><rect x="819" y="292" width="2" height="15" fill="rgb(227,33,38)"/><text x="822.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.19%)</title><rect x="819" y="308" width="2" height="15" fill="rgb(232,22,14)"/><text x="822.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.19%)</title><rect x="819" y="324" width="2" height="15" fill="rgb(222,44,19)"/><text x="822.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.19%)</title><rect x="819" y="340" width="2" height="15" fill="rgb(222,144,41)"/><text x="822.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.19%)</title><rect x="821" y="276" width="2" height="15" fill="rgb(207,214,39)"/><text x="824.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.19%)</title><rect x="821" y="292" width="2" height="15" fill="rgb(212,68,24)"/><text x="824.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.56%)</title><rect x="819" y="260" width="7" height="15" fill="rgb(254,222,36)"/><text x="822.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="823" y="276" width="3" height="15" fill="rgb(234,41,14)"/><text x="826.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="826" y="260" width="2" height="15" fill="rgb(220,94,48)"/><text x="829.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="826" y="276" width="2" height="15" fill="rgb(233,24,31)"/><text x="829.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.19%)</title><rect x="826" y="292" width="2" height="15" fill="rgb(207,194,3)"/><text x="829.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="828" y="260" width="2" height="15" fill="rgb(220,224,2)"/><text x="831.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.19%)</title><rect x="828" y="276" width="2" height="15" fill="rgb(211,170,49)"/><text x="831.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.19%)</title><rect x="830" y="276" width="2" height="15" fill="rgb(241,164,40)"/><text x="833.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.19%)</title><rect x="830" y="292" width="2" height="15" fill="rgb(212,31,31)"/><text x="833.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.19%)</title><rect x="830" y="308" width="2" height="15" fill="rgb(220,63,19)"/><text x="833.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:701) (1 samples, 0.19%)</title><rect x="830" y="324" width="2" height="15" fill="rgb(235,129,28)"/><text x="833.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.19%)</title><rect x="832" y="276" width="2" height="15" fill="rgb(243,87,30)"/><text x="835.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.19%)</title><rect x="832" y="292" width="2" height="15" fill="rgb(217,85,45)"/><text x="835.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.50%)</title><rect x="819" y="244" width="18" height="15" fill="rgb(210,9,5)"/><text x="822.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="830" y="260" width="7" height="15" fill="rgb(235,85,41)"/><text x="833.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.19%)</title><rect x="834" y="276" width="3" height="15" fill="rgb(245,195,38)"/><text x="837.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="834" y="292" width="3" height="15" fill="rgb(239,136,27)"/><text x="837.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="834" y="308" width="3" height="15" fill="rgb(238,92,10)"/><text x="837.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (12 samples, 2.24%)</title><rect x="812" y="228" width="27" height="15" fill="rgb(207,73,17)"/><text x="815.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="837" y="244" width="2" height="15" fill="rgb(205,10,49)"/><text x="840.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="837" y="260" width="2" height="15" fill="rgb(207,158,15)"/><text x="840.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="837" y="276" width="2" height="15" fill="rgb(214,58,48)"/><text x="840.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="837" y="292" width="2" height="15" fill="rgb(244,93,32)"/><text x="840.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="848" y="244" width="2" height="15" fill="rgb(221,92,9)"/><text x="851.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="848" y="260" width="2" height="15" fill="rgb(206,61,47)"/><text x="851.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="848" y="276" width="2" height="15" fill="rgb(216,219,4)"/><text x="851.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.19%)</title><rect x="850" y="292" width="2" height="15" fill="rgb(250,71,12)"/><text x="853.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="852" y="292" width="2" height="15" fill="rgb(221,211,51)"/><text x="855.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="852" y="308" width="2" height="15" fill="rgb(230,169,28)"/><text x="855.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="852" y="324" width="2" height="15" fill="rgb(220,54,39)"/><text x="855.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="852" y="340" width="2" height="15" fill="rgb(235,107,41)"/><text x="855.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.19%)</title><rect x="852" y="356" width="2" height="15" fill="rgb(246,42,26)"/><text x="855.00" y="366.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.19%)</title><rect x="852" y="372" width="2" height="15" fill="rgb(218,54,0)"/><text x="855.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4513) (1 samples, 0.19%)</title><rect x="854" y="308" width="2" height="15" fill="rgb(221,228,37)"/><text x="857.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.19%)</title><rect x="856" y="308" width="3" height="15" fill="rgb(208,176,9)"/><text x="859.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.19%)</title><rect x="856" y="324" width="3" height="15" fill="rgb(227,108,12)"/><text x="859.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.19%)</title><rect x="859" y="340" width="2" height="15" fill="rgb(247,184,52)"/><text x="862.00" y="350.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.19%)</title><rect x="859" y="356" width="2" height="15" fill="rgb(243,137,50)"/><text x="862.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="859" y="372" width="2" height="15" fill="rgb(254,35,15)"/><text x="862.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.19%)</title><rect x="859" y="388" width="2" height="15" fill="rgb(254,123,30)"/><text x="862.00" y="398.50"></text></g><g><title>0x7f2e183f4d70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="859" y="404" width="2" height="15" fill="rgb(239,182,47)"/><text x="862.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="861" y="340" width="2" height="15" fill="rgb(246,148,43)"/><text x="864.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="861" y="356" width="2" height="15" fill="rgb(253,135,8)"/><text x="864.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1443) (1 samples, 0.19%)</title><rect x="861" y="372" width="2" height="15" fill="rgb(244,107,32)"/><text x="864.00" y="382.50"></text></g><g><title>array_max (methods.c:323) (7 samples, 1.31%)</title><rect x="850" y="244" width="15" height="15" fill="rgb(219,157,9)"/><text x="853.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.31%)</title><rect x="850" y="260" width="15" height="15" fill="rgb(226,58,26)"/><text x="853.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (7 samples, 1.31%)</title><rect x="850" y="276" width="15" height="15" fill="rgb(211,35,11)"/><text x="853.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.93%)</title><rect x="854" y="292" width="11" height="15" fill="rgb(228,7,48)"/><text x="857.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.56%)</title><rect x="859" y="308" width="6" height="15" fill="rgb(248,215,33)"/><text x="862.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.56%)</title><rect x="859" y="324" width="6" height="15" fill="rgb(240,190,11)"/><text x="862.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="863" y="340" width="2" height="15" fill="rgb(229,3,15)"/><text x="866.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.19%)</title><rect x="863" y="356" width="2" height="15" fill="rgb(212,145,43)"/><text x="866.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="865" y="244" width="2" height="15" fill="rgb(228,120,5)"/><text x="868.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="865" y="260" width="2" height="15" fill="rgb(228,8,50)"/><text x="868.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="865" y="276" width="2" height="15" fill="rgb(213,86,6)"/><text x="868.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.19%)</title><rect x="865" y="292" width="2" height="15" fill="rgb(208,131,33)"/><text x="868.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:33) (1 samples, 0.19%)</title><rect x="865" y="308" width="2" height="15" fill="rgb(250,37,15)"/><text x="868.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.19%)</title><rect x="867" y="244" width="3" height="15" fill="rgb(226,166,26)"/><text x="870.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="870" y="260" width="2" height="15" fill="rgb(220,112,48)"/><text x="873.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="870" y="276" width="2" height="15" fill="rgb(222,219,3)"/><text x="873.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:22) (16 samples, 2.99%)</title><rect x="839" y="228" width="35" height="15" fill="rgb(207,156,10)"/><text x="842.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="870" y="244" width="4" height="15" fill="rgb(252,156,37)"/><text x="873.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="872" y="260" width="2" height="15" fill="rgb(221,36,9)"/><text x="875.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="872" y="276" width="2" height="15" fill="rgb(231,151,27)"/><text x="875.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="872" y="292" width="2" height="15" fill="rgb(245,147,42)"/><text x="875.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="872" y="308" width="2" height="15" fill="rgb(229,103,16)"/><text x="875.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:245) (1 samples, 0.19%)</title><rect x="872" y="324" width="2" height="15" fill="rgb(218,69,12)"/><text x="875.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:23) (1 samples, 0.19%)</title><rect x="874" y="228" width="2" height="15" fill="rgb(232,26,41)"/><text x="877.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="874" y="244" width="2" height="15" fill="rgb(245,85,6)"/><text x="877.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="874" y="260" width="2" height="15" fill="rgb(214,54,2)"/><text x="877.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.19%)</title><rect x="874" y="276" width="2" height="15" fill="rgb(216,221,4)"/><text x="877.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.19%)</title><rect x="874" y="292" width="2" height="15" fill="rgb(242,7,13)"/><text x="877.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="874" y="308" width="2" height="15" fill="rgb(208,28,26)"/><text x="877.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.19%)</title><rect x="874" y="324" width="2" height="15" fill="rgb(246,184,26)"/><text x="877.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="874" y="340" width="2" height="15" fill="rgb(210,139,10)"/><text x="877.00" y="350.50"></text></g><g><title>0x7f2e1918a7a5 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="874" y="356" width="2" height="15" fill="rgb(225,52,21)"/><text x="877.00" y="366.50"></text></g><g><title>0x7f2e1918aa19 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="874" y="372" width="2" height="15" fill="rgb(230,15,53)"/><text x="877.00" y="382.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c:572) (1 samples, 0.19%)</title><rect x="874" y="388" width="2" height="15" fill="rgb(237,14,17)"/><text x="877.00" y="398.50"></text></g><g><title>get_array_ufunc_overrides (override.c:51) (1 samples, 0.19%)</title><rect x="883" y="324" width="2" height="15" fill="rgb(238,66,40)"/><text x="886.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.37%)</title><rect x="883" y="292" width="4" height="15" fill="rgb(236,225,16)"/><text x="886.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.37%)</title><rect x="883" y="308" width="4" height="15" fill="rgb(245,155,41)"/><text x="886.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="885" y="324" width="2" height="15" fill="rgb(252,16,31)"/><text x="888.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="885" y="340" width="2" height="15" fill="rgb(228,167,4)"/><text x="888.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="885" y="356" width="2" height="15" fill="rgb(231,165,32)"/><text x="888.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="885" y="372" width="2" height="15" fill="rgb(251,92,16)"/><text x="888.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="887" y="308" width="3" height="15" fill="rgb(246,85,19)"/><text x="890.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.19%)</title><rect x="890" y="308" width="2" height="15" fill="rgb(206,52,48)"/><text x="893.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="890" y="324" width="2" height="15" fill="rgb(230,173,1)"/><text x="893.00" y="334.50"></text></g><g><title>0x7f2e1918aa19 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="892" y="404" width="2" height="15" fill="rgb(248,190,1)"/><text x="895.00" y="414.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.19%)</title><rect x="892" y="420" width="2" height="15" fill="rgb(253,118,35)"/><text x="895.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.37%)</title><rect x="892" y="340" width="4" height="15" fill="rgb(250,150,20)"/><text x="895.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.37%)</title><rect x="892" y="356" width="4" height="15" fill="rgb(230,124,10)"/><text x="895.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (2 samples, 0.37%)</title><rect x="892" y="372" width="4" height="15" fill="rgb(217,125,54)"/><text x="895.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.37%)</title><rect x="892" y="388" width="4" height="15" fill="rgb(207,65,11)"/><text x="895.00" y="398.50"></text></g><g><title>0x7f2e191f2d59 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="894" y="404" width="2" height="15" fill="rgb(234,85,19)"/><text x="897.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="896" y="340" width="2" height="15" fill="rgb(233,208,52)"/><text x="899.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="896" y="356" width="2" height="15" fill="rgb(205,98,13)"/><text x="899.00" y="366.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="896" y="372" width="2" height="15" fill="rgb(211,188,43)"/><text x="899.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.19%)</title><rect x="896" y="388" width="2" height="15" fill="rgb(225,224,14)"/><text x="899.00" y="398.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.19%)</title><rect x="896" y="404" width="2" height="15" fill="rgb(243,164,25)"/><text x="899.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="898" y="340" width="3" height="15" fill="rgb(252,14,19)"/><text x="901.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="898" y="356" width="3" height="15" fill="rgb(219,129,47)"/><text x="901.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2198) (1 samples, 0.19%)</title><rect x="898" y="372" width="3" height="15" fill="rgb(231,44,41)"/><text x="901.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (9 samples, 1.68%)</title><rect x="883" y="244" width="20" height="15" fill="rgb(214,4,19)"/><text x="886.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 1.68%)</title><rect x="883" y="260" width="20" height="15" fill="rgb(213,135,41)"/><text x="886.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 1.68%)</title><rect x="883" y="276" width="20" height="15" fill="rgb(206,138,36)"/><text x="886.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.31%)</title><rect x="887" y="292" width="16" height="15" fill="rgb(223,33,54)"/><text x="890.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.93%)</title><rect x="892" y="308" width="11" height="15" fill="rgb(207,214,15)"/><text x="895.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.93%)</title><rect x="892" y="324" width="11" height="15" fill="rgb(230,134,52)"/><text x="895.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="901" y="340" width="2" height="15" fill="rgb(237,197,43)"/><text x="904.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="901" y="356" width="2" height="15" fill="rgb(247,95,17)"/><text x="904.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="903" y="260" width="2" height="15" fill="rgb(227,182,21)"/><text x="906.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="903" y="276" width="2" height="15" fill="rgb(243,172,39)"/><text x="906.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.19%)</title><rect x="903" y="292" width="2" height="15" fill="rgb(229,10,4)"/><text x="906.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="903" y="308" width="2" height="15" fill="rgb(229,25,19)"/><text x="906.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="905" y="292" width="2" height="15" fill="rgb(215,123,20)"/><text x="908.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="905" y="308" width="2" height="15" fill="rgb(251,110,7)"/><text x="908.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.19%)</title><rect x="905" y="324" width="2" height="15" fill="rgb(247,203,15)"/><text x="908.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.19%)</title><rect x="905" y="340" width="2" height="15" fill="rgb(213,175,24)"/><text x="908.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.19%)</title><rect x="905" y="356" width="2" height="15" fill="rgb(249,88,25)"/><text x="908.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (46 samples, 8.60%)</title><rect x="808" y="212" width="101" height="15" fill="rgb(241,194,37)"/><text x="811.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:24) (15 samples, 2.80%)</title><rect x="876" y="228" width="33" height="15" fill="rgb(237,5,44)"/><text x="879.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="903" y="244" width="6" height="15" fill="rgb(216,52,10)"/><text x="906.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="905" y="260" width="4" height="15" fill="rgb(213,225,32)"/><text x="908.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="905" y="276" width="4" height="15" fill="rgb(232,151,29)"/><text x="908.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="907" y="292" width="2" height="15" fill="rgb(212,92,24)"/><text x="910.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="907" y="308" width="2" height="15" fill="rgb(239,66,16)"/><text x="910.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.19%)</title><rect x="907" y="324" width="2" height="15" fill="rgb(218,192,48)"/><text x="910.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (47 samples, 8.79%)</title><rect x="808" y="196" width="104" height="15" fill="rgb(241,171,53)"/><text x="811.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (1 samples, 0.19%)</title><rect x="909" y="212" width="3" height="15" fill="rgb(248,222,4)"/><text x="912.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (3 samples, 0.56%)</title><rect x="918" y="212" width="7" height="15" fill="rgb(231,60,35)"/><text x="921.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.19%)</title><rect x="923" y="228" width="2" height="15" fill="rgb(244,49,4)"/><text x="926.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.19%)</title><rect x="927" y="228" width="2" height="15" fill="rgb(215,61,19)"/><text x="930.00" y="238.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.19%)</title><rect x="927" y="244" width="2" height="15" fill="rgb(222,196,21)"/><text x="930.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.19%)</title><rect x="929" y="228" width="2" height="15" fill="rgb(242,55,12)"/><text x="932.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.56%)</title><rect x="931" y="244" width="7" height="15" fill="rgb(208,124,26)"/><text x="934.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.56%)</title><rect x="931" y="260" width="7" height="15" fill="rgb(213,53,44)"/><text x="934.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (3 samples, 0.56%)</title><rect x="931" y="276" width="7" height="15" fill="rgb(213,100,5)"/><text x="934.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (3 samples, 0.56%)</title><rect x="931" y="292" width="7" height="15" fill="rgb(217,183,32)"/><text x="934.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.37%)</title><rect x="934" y="308" width="4" height="15" fill="rgb(229,196,19)"/><text x="937.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="938" y="260" width="2" height="15" fill="rgb(237,108,53)"/><text x="941.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1120) (1 samples, 0.19%)</title><rect x="938" y="276" width="2" height="15" fill="rgb(235,116,9)"/><text x="941.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="940" y="260" width="2" height="15" fill="rgb(216,120,47)"/><text x="943.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="940" y="276" width="2" height="15" fill="rgb(218,110,38)"/><text x="943.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.19%)</title><rect x="940" y="292" width="2" height="15" fill="rgb(228,191,0)"/><text x="943.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="942" y="276" width="3" height="15" fill="rgb(251,37,15)"/><text x="945.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.19%)</title><rect x="942" y="292" width="3" height="15" fill="rgb(207,140,22)"/><text x="945.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.37%)</title><rect x="942" y="260" width="5" height="15" fill="rgb(211,82,13)"/><text x="945.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.19%)</title><rect x="945" y="276" width="2" height="15" fill="rgb(210,101,43)"/><text x="948.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.19%)</title><rect x="945" y="292" width="2" height="15" fill="rgb(251,154,5)"/><text x="948.00" y="302.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (3 samples, 0.56%)</title><rect x="947" y="340" width="6" height="15" fill="rgb(235,175,21)"/><text x="950.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h:97) (3 samples, 0.56%)</title><rect x="947" y="356" width="6" height="15" fill="rgb(249,199,16)"/><text x="950.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h:65) (3 samples, 0.56%)</title><rect x="947" y="372" width="6" height="15" fill="rgb(237,189,31)"/><text x="950.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (4 samples, 0.75%)</title><rect x="947" y="276" width="9" height="15" fill="rgb(244,8,51)"/><text x="950.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 0.75%)</title><rect x="947" y="292" width="9" height="15" fill="rgb(243,153,32)"/><text x="950.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (4 samples, 0.75%)</title><rect x="947" y="308" width="9" height="15" fill="rgb(214,62,6)"/><text x="950.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (4 samples, 0.75%)</title><rect x="947" y="324" width="9" height="15" fill="rgb(210,125,5)"/><text x="950.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.19%)</title><rect x="953" y="340" width="3" height="15" fill="rgb(251,218,3)"/><text x="956.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.19%)</title><rect x="953" y="356" width="3" height="15" fill="rgb(210,185,14)"/><text x="956.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.19%)</title><rect x="953" y="372" width="3" height="15" fill="rgb(225,53,9)"/><text x="956.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1361) (1 samples, 0.19%)</title><rect x="956" y="292" width="2" height="15" fill="rgb(233,132,14)"/><text x="959.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (13 samples, 2.43%)</title><rect x="931" y="228" width="29" height="15" fill="rgb(251,64,16)"/><text x="934.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.87%)</title><rect x="938" y="244" width="22" height="15" fill="rgb(209,139,32)"/><text x="941.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.12%)</title><rect x="947" y="260" width="13" height="15" fill="rgb(235,11,18)"/><text x="950.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.37%)</title><rect x="956" y="276" width="4" height="15" fill="rgb(224,24,19)"/><text x="959.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.19%)</title><rect x="958" y="292" width="2" height="15" fill="rgb(235,27,34)"/><text x="961.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="958" y="308" width="2" height="15" fill="rgb(242,7,40)"/><text x="961.00" y="318.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (2 samples, 0.37%)</title><rect x="960" y="244" width="5" height="15" fill="rgb(223,228,6)"/><text x="963.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (1 samples, 0.19%)</title><rect x="965" y="244" width="2" height="15" fill="rgb(217,166,26)"/><text x="968.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.19%)</title><rect x="965" y="260" width="2" height="15" fill="rgb(216,71,5)"/><text x="968.00" y="270.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="971" y="260" width="2" height="15" fill="rgb(226,87,16)"/><text x="974.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (2 samples, 0.37%)</title><rect x="973" y="292" width="5" height="15" fill="rgb(240,227,26)"/><text x="976.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="978" y="356" width="2" height="15" fill="rgb(228,93,19)"/><text x="981.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.19%)</title><rect x="978" y="372" width="2" height="15" fill="rgb(237,79,23)"/><text x="981.00" y="382.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.19%)</title><rect x="978" y="388" width="2" height="15" fill="rgb(234,158,31)"/><text x="981.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.37%)</title><rect x="978" y="324" width="4" height="15" fill="rgb(225,44,11)"/><text x="981.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:875) (2 samples, 0.37%)</title><rect x="978" y="340" width="4" height="15" fill="rgb(219,96,12)"/><text x="981.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="980" y="356" width="2" height="15" fill="rgb(252,32,10)"/><text x="983.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:545) (1 samples, 0.19%)</title><rect x="980" y="372" width="2" height="15" fill="rgb(227,147,20)"/><text x="983.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.19%)</title><rect x="982" y="324" width="2" height="15" fill="rgb(230,140,1)"/><text x="985.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="982" y="340" width="2" height="15" fill="rgb(206,156,54)"/><text x="985.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (9 samples, 1.68%)</title><rect x="967" y="244" width="20" height="15" fill="rgb(209,84,34)"/><text x="970.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 1.12%)</title><rect x="973" y="260" width="14" height="15" fill="rgb(208,199,27)"/><text x="976.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.12%)</title><rect x="973" y="276" width="14" height="15" fill="rgb(238,14,20)"/><text x="976.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 0.75%)</title><rect x="978" y="292" width="9" height="15" fill="rgb(224,138,51)"/><text x="981.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.75%)</title><rect x="978" y="308" width="9" height="15" fill="rgb(223,134,41)"/><text x="981.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:685) (1 samples, 0.19%)</title><rect x="984" y="324" width="3" height="15" fill="rgb(213,33,36)"/><text x="987.00" y="334.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c:430) (1 samples, 0.19%)</title><rect x="984" y="340" width="3" height="15" fill="rgb(245,173,7)"/><text x="987.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2819) (1 samples, 0.19%)</title><rect x="984" y="356" width="3" height="15" fill="rgb(218,21,37)"/><text x="987.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="984" y="372" width="3" height="15" fill="rgb(248,14,53)"/><text x="987.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.19%)</title><rect x="984" y="388" width="3" height="15" fill="rgb(223,199,25)"/><text x="987.00" y="398.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.19%)</title><rect x="984" y="404" width="3" height="15" fill="rgb(234,214,44)"/><text x="987.00" y="414.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (1 samples, 0.19%)</title><rect x="987" y="244" width="2" height="15" fill="rgb(245,73,21)"/><text x="990.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.19%)</title><rect x="993" y="276" width="2" height="15" fill="rgb(214,173,19)"/><text x="996.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (2 samples, 0.37%)</title><rect x="995" y="308" width="5" height="15" fill="rgb(226,36,10)"/><text x="998.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 0.37%)</title><rect x="995" y="324" width="5" height="15" fill="rgb(233,50,12)"/><text x="998.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2214) (2 samples, 0.37%)</title><rect x="995" y="340" width="5" height="15" fill="rgb(230,98,1)"/><text x="998.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (42 samples, 7.85%)</title><rect x="912" y="196" width="92" height="15" fill="rgb(248,170,6)"/><text x="915.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (36 samples, 6.73%)</title><rect x="925" y="212" width="79" height="15" fill="rgb(252,37,48)"/><text x="928.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (20 samples, 3.74%)</title><rect x="960" y="228" width="44" height="15" fill="rgb(230,60,2)"/><text x="963.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (7 samples, 1.31%)</title><rect x="989" y="244" width="15" height="15" fill="rgb(229,106,0)"/><text x="992.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 0.93%)</title><rect x="993" y="260" width="11" height="15" fill="rgb(214,50,38)"/><text x="996.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.75%)</title><rect x="995" y="276" width="9" height="15" fill="rgb(244,26,1)"/><text x="998.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 0.75%)</title><rect x="995" y="292" width="9" height="15" fill="rgb(232,80,45)"/><text x="998.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.37%)</title><rect x="1000" y="308" width="4" height="15" fill="rgb(210,98,23)"/><text x="1003.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.37%)</title><rect x="1000" y="324" width="4" height="15" fill="rgb(234,167,28)"/><text x="1003.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.37%)</title><rect x="1000" y="340" width="4" height="15" fill="rgb(232,157,0)"/><text x="1003.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="1000" y="356" width="4" height="15" fill="rgb(233,55,39)"/><text x="1003.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="1002" y="372" width="2" height="15" fill="rgb(207,109,31)"/><text x="1005.00" y="382.50"></text></g><g><title>sgemv_kernel_4x8 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="1002" y="388" width="2" height="15" fill="rgb(229,140,33)"/><text x="1005.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.19%)</title><rect x="1004" y="196" width="2" height="15" fill="rgb(231,64,0)"/><text x="1007.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (155 samples, 28.97%)</title><rect x="667" y="180" width="342" height="15" fill="rgb(251,161,4)"/><text x="670.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:1..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:494) (1 samples, 0.19%)</title><rect x="1006" y="196" width="3" height="15" fill="rgb(228,117,53)"/><text x="1009.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.56%)</title><rect x="1009" y="180" width="6" height="15" fill="rgb(244,229,1)"/><text x="1012.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (6 samples, 1.12%)</title><rect x="1015" y="180" width="13" height="15" fill="rgb(224,111,1)"/><text x="1018.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (15 samples, 2.80%)</title><rect x="1028" y="180" width="34" height="15" fill="rgb(231,59,46)"/><text x="1031.00" y="190.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (221 samples, 41.31%)</title><rect x="583" y="164" width="487" height="15" fill="rgb(227,209,42)"/><text x="586.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (4 samples, 0.75%)</title><rect x="1062" y="180" width="8" height="15" fill="rgb(243,54,46)"/><text x="1065.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:45) (239 samples, 44.67%)</title><rect x="545" y="52" width="528" height="15" fill="rgb(249,9,35)"/><text x="548.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:44) (239 samples, 44.67%)</title><rect x="545" y="68" width="528" height="15" fill="rgb(214,80,25)"/><text x="548.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:44)</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:29) (239 samples, 44.67%)</title><rect x="545" y="84" width="528" height="15" fill="rgb(222,74,25)"/><text x="548.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:23) (233 samples, 43.55%)</title><rect x="559" y="100" width="514" height="15" fill="rgb(212,147,33)"/><text x="562.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (232 samples, 43.36%)</title><rect x="561" y="116" width="512" height="15" fill="rgb(236,103,28)"/><text x="564.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (231 samples, 43.18%)</title><rect x="563" y="132" width="510" height="15" fill="rgb(206,30,1)"/><text x="566.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (228 samples, 42.62%)</title><rect x="570" y="148" width="503" height="15" fill="rgb(207,66,49)"/><text x="573.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="1070" y="164" width="3" height="15" fill="rgb(222,203,43)"/><text x="1073.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="1070" y="180" width="3" height="15" fill="rgb(245,105,25)"/><text x="1073.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="1070" y="196" width="3" height="15" fill="rgb(209,139,32)"/><text x="1073.00" y="206.50"></text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:28) (1 samples, 0.19%)</title><rect x="1073" y="84" width="2" height="15" fill="rgb(248,177,5)"/><text x="1076.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="1073" y="100" width="2" height="15" fill="rgb(222,133,49)"/><text x="1076.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.19%)</title><rect x="1073" y="116" width="2" height="15" fill="rgb(218,73,17)"/><text x="1076.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.19%)</title><rect x="1073" y="132" width="2" height="15" fill="rgb(225,163,52)"/><text x="1076.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.19%)</title><rect x="1073" y="148" width="2" height="15" fill="rgb(244,152,0)"/><text x="1076.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.19%)</title><rect x="1073" y="164" width="2" height="15" fill="rgb(254,147,23)"/><text x="1076.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.19%)</title><rect x="1073" y="180" width="2" height="15" fill="rgb(226,189,53)"/><text x="1076.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.19%)</title><rect x="1073" y="196" width="2" height="15" fill="rgb(242,67,29)"/><text x="1076.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.19%)</title><rect x="1073" y="212" width="2" height="15" fill="rgb(234,4,19)"/><text x="1076.00" y="222.50"></text></g><g><title>0x7f2dd7215ff9 (?) (1 samples, 0.19%)</title><rect x="1073" y="228" width="2" height="15" fill="rgb(246,4,18)"/><text x="1076.00" y="238.50"></text></g><g><title>0x7f2dd721053d (?) (1 samples, 0.19%)</title><rect x="1073" y="244" width="2" height="15" fill="rgb(226,72,45)"/><text x="1076.00" y="254.50"></text></g><g><title>0x7f2dd723c4ec (?) (1 samples, 0.19%)</title><rect x="1073" y="260" width="2" height="15" fill="rgb(226,78,19)"/><text x="1076.00" y="270.50"></text></g><g><title>0x7f2dd723bc3a (?) (1 samples, 0.19%)</title><rect x="1073" y="276" width="2" height="15" fill="rgb(252,72,4)"/><text x="1076.00" y="286.50"></text></g><g><title>0x7f2dd723ea0c (?) (1 samples, 0.19%)</title><rect x="1073" y="292" width="2" height="15" fill="rgb(240,186,29)"/><text x="1076.00" y="302.50"></text></g><g><title>0x7f2dd76e5105 (?) (1 samples, 0.19%)</title><rect x="1073" y="308" width="2" height="15" fill="rgb(231,126,54)"/><text x="1076.00" y="318.50"></text></g><g><title>0x7f2dd76e5068 (?) (1 samples, 0.19%)</title><rect x="1073" y="324" width="2" height="15" fill="rgb(249,35,10)"/><text x="1076.00" y="334.50"></text></g><g><title>0x7f2dd76e44fb (?) (1 samples, 0.19%)</title><rect x="1073" y="340" width="2" height="15" fill="rgb(220,1,2)"/><text x="1076.00" y="350.50"></text></g><g><title>0x7f2dd76d3783 (?) (1 samples, 0.19%)</title><rect x="1073" y="356" width="2" height="15" fill="rgb(254,147,40)"/><text x="1076.00" y="366.50"></text></g><g><title>0x7f2dd76d2809 (?) (1 samples, 0.19%)</title><rect x="1073" y="372" width="2" height="15" fill="rgb(253,5,21)"/><text x="1076.00" y="382.50"></text></g><g><title>0x7f2dd781c5ca (?) (1 samples, 0.19%)</title><rect x="1073" y="388" width="2" height="15" fill="rgb(211,154,14)"/><text x="1076.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1073" y="404" width="2" height="15" fill="rgb(240,9,30)"/><text x="1076.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1073" y="420" width="2" height="15" fill="rgb(223,58,23)"/><text x="1076.00" y="430.50"></text></g><g><title>0x7f2e191d48a4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1073" y="436" width="2" height="15" fill="rgb(215,201,14)"/><text x="1076.00" y="446.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.19%)</title><rect x="1075" y="132" width="2" height="15" fill="rgb(245,88,39)"/><text x="1078.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (2 samples, 0.37%)</title><rect x="1075" y="116" width="4" height="15" fill="rgb(242,216,52)"/><text x="1078.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.19%)</title><rect x="1077" y="132" width="2" height="15" fill="rgb(216,139,36)"/><text x="1080.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.19%)</title><rect x="1088" y="148" width="2" height="15" fill="rgb(253,135,1)"/><text x="1091.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.19%)</title><rect x="1092" y="196" width="3" height="15" fill="rgb(250,228,47)"/><text x="1095.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.19%)</title><rect x="1095" y="196" width="2" height="15" fill="rgb(235,186,10)"/><text x="1098.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (4 samples, 0.75%)</title><rect x="1097" y="196" width="9" height="15" fill="rgb(235,155,49)"/><text x="1100.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 0.75%)</title><rect x="1097" y="212" width="9" height="15" fill="rgb(215,187,12)"/><text x="1100.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1101" y="228" width="5" height="15" fill="rgb(224,186,11)"/><text x="1104.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1103" y="244" width="3" height="15" fill="rgb(210,132,40)"/><text x="1106.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1103" y="260" width="3" height="15" fill="rgb(216,51,32)"/><text x="1106.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1103" y="276" width="3" height="15" fill="rgb(212,139,15)"/><text x="1106.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1103" y="292" width="3" height="15" fill="rgb(240,7,8)"/><text x="1106.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(209,106,9)"/><text x="1120.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1117" y="308" width="2" height="15" fill="rgb(250,120,25)"/><text x="1120.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1117" y="324" width="2" height="15" fill="rgb(251,152,43)"/><text x="1120.00" y="334.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1119" y="292" width="2" height="15" fill="rgb(222,214,48)"/><text x="1122.00" y="302.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1123" y="340" width="5" height="15" fill="rgb(211,161,23)"/><text x="1126.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1123" y="356" width="5" height="15" fill="rgb(233,95,21)"/><text x="1126.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1126" y="372" width="2" height="15" fill="rgb(247,115,36)"/><text x="1129.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1130" y="452" width="2" height="15" fill="rgb(231,19,38)"/><text x="1133.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1130" y="468" width="2" height="15" fill="rgb(235,128,45)"/><text x="1133.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1130" y="484" width="2" height="15" fill="rgb(240,25,52)"/><text x="1133.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1130" y="500" width="2" height="15" fill="rgb(226,92,44)"/><text x="1133.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1130" y="516" width="2" height="15" fill="rgb(211,64,34)"/><text x="1133.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1130" y="532" width="2" height="15" fill="rgb(224,180,48)"/><text x="1133.00" y="542.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1130" y="356" width="4" height="15" fill="rgb(251,45,42)"/><text x="1133.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1130" y="372" width="4" height="15" fill="rgb(234,132,18)"/><text x="1133.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1130" y="388" width="4" height="15" fill="rgb(254,46,52)"/><text x="1133.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1130" y="404" width="4" height="15" fill="rgb(246,113,52)"/><text x="1133.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1130" y="420" width="4" height="15" fill="rgb(206,58,53)"/><text x="1133.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1130" y="436" width="4" height="15" fill="rgb(228,40,18)"/><text x="1133.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1132" y="452" width="2" height="15" fill="rgb(245,55,43)"/><text x="1135.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="1128" y="340" width="9" height="15" fill="rgb(217,228,49)"/><text x="1131.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1134" y="356" width="3" height="15" fill="rgb(215,59,28)"/><text x="1137.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1137" y="340" width="2" height="15" fill="rgb(236,172,33)"/><text x="1140.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1137" y="356" width="2" height="15" fill="rgb(234,4,34)"/><text x="1140.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1137" y="372" width="2" height="15" fill="rgb(228,40,45)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="340" width="2" height="15" fill="rgb(224,73,19)"/><text x="1142.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="356" width="2" height="15" fill="rgb(208,5,33)"/><text x="1142.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="372" width="2" height="15" fill="rgb(231,123,42)"/><text x="1142.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="388" width="2" height="15" fill="rgb(246,58,48)"/><text x="1142.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="404" width="2" height="15" fill="rgb(224,53,51)"/><text x="1142.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="420" width="2" height="15" fill="rgb(209,91,23)"/><text x="1142.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="436" width="2" height="15" fill="rgb(250,40,31)"/><text x="1142.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="452" width="2" height="15" fill="rgb(226,78,15)"/><text x="1142.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1139" y="468" width="2" height="15" fill="rgb(210,216,43)"/><text x="1142.00" y="478.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1141" y="340" width="4" height="15" fill="rgb(228,195,46)"/><text x="1144.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1141" y="356" width="4" height="15" fill="rgb(241,203,38)"/><text x="1144.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1143" y="372" width="2" height="15" fill="rgb(247,149,49)"/><text x="1146.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1143" y="388" width="2" height="15" fill="rgb(215,136,23)"/><text x="1146.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1145" y="356" width="5" height="15" fill="rgb(226,3,13)"/><text x="1148.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1145" y="372" width="5" height="15" fill="rgb(211,54,15)"/><text x="1148.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1145" y="388" width="5" height="15" fill="rgb(221,29,13)"/><text x="1148.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1145" y="404" width="5" height="15" fill="rgb(216,26,17)"/><text x="1148.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="420" width="2" height="15" fill="rgb(208,3,38)"/><text x="1151.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1148" y="436" width="2" height="15" fill="rgb(208,20,49)"/><text x="1151.00" y="446.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.37%)</title><rect x="1150" y="420" width="4" height="15" fill="rgb(225,225,41)"/><text x="1153.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.37%)</title><rect x="1150" y="436" width="4" height="15" fill="rgb(235,141,30)"/><text x="1153.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="1152" y="452" width="2" height="15" fill="rgb(221,106,27)"/><text x="1155.00" y="462.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1145" y="340" width="11" height="15" fill="rgb(208,77,6)"/><text x="1148.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1150" y="356" width="6" height="15" fill="rgb(233,32,33)"/><text x="1153.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.56%)</title><rect x="1150" y="372" width="6" height="15" fill="rgb(244,162,41)"/><text x="1153.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.56%)</title><rect x="1150" y="388" width="6" height="15" fill="rgb(221,95,2)"/><text x="1153.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.56%)</title><rect x="1150" y="404" width="6" height="15" fill="rgb(206,8,26)"/><text x="1153.00" y="414.50"></text></g><g><title>mkl_serv_cbwr_get (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="1154" y="420" width="2" height="15" fill="rgb(246,192,41)"/><text x="1157.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="340" width="3" height="15" fill="rgb(210,3,49)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="356" width="3" height="15" fill="rgb(234,160,28)"/><text x="1159.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="372" width="3" height="15" fill="rgb(252,166,27)"/><text x="1159.00" y="382.50"></text></g><g><title>0x7f2e08c9ef70 (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1156" y="388" width="3" height="15" fill="rgb(224,123,22)"/><text x="1159.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1159" y="372" width="2" height="15" fill="rgb(253,108,18)"/><text x="1162.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1159" y="388" width="2" height="15" fill="rgb(252,52,3)"/><text x="1162.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1159" y="404" width="2" height="15" fill="rgb(246,74,52)"/><text x="1162.00" y="414.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1159" y="420" width="2" height="15" fill="rgb(231,25,8)"/><text x="1162.00" y="430.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1159" y="356" width="4" height="15" fill="rgb(225,224,44)"/><text x="1162.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1161" y="372" width="2" height="15" fill="rgb(224,179,7)"/><text x="1164.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1161" y="388" width="2" height="15" fill="rgb(245,165,44)"/><text x="1164.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1161" y="404" width="2" height="15" fill="rgb(238,91,42)"/><text x="1164.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1161" y="420" width="2" height="15" fill="rgb(209,221,45)"/><text x="1164.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 4.11%)</title><rect x="1117" y="260" width="48" height="15" fill="rgb(211,200,6)"/><text x="1120.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 4.11%)</title><rect x="1117" y="276" width="48" height="15" fill="rgb(225,89,42)"/><text x="1120.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.74%)</title><rect x="1121" y="292" width="44" height="15" fill="rgb(220,37,26)"/><text x="1124.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.74%)</title><rect x="1121" y="308" width="44" height="15" fill="rgb(226,201,46)"/><text x="1124.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.74%)</title><rect x="1121" y="324" width="44" height="15" fill="rgb(205,110,34)"/><text x="1124.00" y="334.50">onnx..</text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1159" y="340" width="6" height="15" fill="rgb(220,226,3)"/><text x="1162.00" y="350.50"></text></g><g><title>onnxruntime::HandleNegativeAxis (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="356" width="2" height="15" fill="rgb(247,29,21)"/><text x="1166.00" y="366.50"></text></g><g><title>array_finalize_get (getset.c:974) (1 samples, 0.19%)</title><rect x="1167" y="276" width="3" height="15" fill="rgb(220,43,11)"/><text x="1170.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="260" width="7" height="15" fill="rgb(206,216,6)"/><text x="1168.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="1170" y="276" width="2" height="15" fill="rgb(232,225,25)"/><text x="1173.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="260" width="2" height="15" fill="rgb(246,7,2)"/><text x="1175.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.19%)</title><rect x="1172" y="276" width="2" height="15" fill="rgb(242,167,18)"/><text x="1175.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.19%)</title><rect x="1172" y="292" width="2" height="15" fill="rgb(231,220,53)"/><text x="1175.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(231,129,10)"/><text x="1177.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="260" width="2" height="15" fill="rgb(218,139,4)"/><text x="1179.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 5.61%)</title><rect x="1115" y="244" width="66" height="15" fill="rgb(228,181,42)"/><text x="1118.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1178" y="260" width="3" height="15" fill="rgb(238,173,14)"/><text x="1181.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (42 samples, 7.85%)</title><rect x="1090" y="164" width="93" height="15" fill="rgb(210,73,22)"/><text x="1093.00" y="174.50">_run_whole_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (41 samples, 7.66%)</title><rect x="1092" y="180" width="91" height="15" fill="rgb(243,140,1)"/><text x="1095.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:136) (35 samples, 6.54%)</title><rect x="1106" y="196" width="77" height="15" fill="rgb(221,229,16)"/><text x="1109.00" y="206.50">run (onn..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 6.17%)</title><rect x="1110" y="212" width="73" height="15" fill="rgb(229,100,25)"/><text x="1113.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 5.98%)</title><rect x="1112" y="228" width="71" height="15" fill="rgb(242,191,16)"/><text x="1115.00" y="238.50">void pyb..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(206,108,45)"/><text x="1184.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1181" y="260" width="2" height="15" fill="rgb(235,46,20)"/><text x="1184.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1181" y="276" width="2" height="15" fill="rgb(212,14,1)"/><text x="1184.00" y="286.50"></text></g><g><title>all (535 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(235,136,9)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:52) (53 samples, 9.91%)</title><rect x="1073" y="52" width="117" height="15" fill="rgb(252,127,41)"/><text x="1076.00" y="62.50">&lt;module&gt; (benc..</text></g><g><title>profile_ort (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:51) (53 samples, 9.91%)</title><rect x="1073" y="68" width="117" height="15" fill="rgb(224,23,3)"/><text x="1076.00" y="78.50">profile_ort (b..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:29) (52 samples, 9.72%)</title><rect x="1075" y="84" width="115" height="15" fill="rgb(241,145,15)"/><text x="1078.00" y="94.50">setup_profile ..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_50_12_float_.py:23) (52 samples, 9.72%)</title><rect x="1075" y="100" width="115" height="15" fill="rgb(230,9,40)"/><text x="1078.00" y="110.50">profile (bench..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (50 samples, 9.35%)</title><rect x="1079" y="116" width="111" height="15" fill="rgb(228,119,23)"/><text x="1082.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (47 samples, 8.79%)</title><rect x="1086" y="132" width="104" height="15" fill="rgb(217,107,27)"/><text x="1089.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (45 samples, 8.41%)</title><rect x="1090" y="148" width="100" height="15" fill="rgb(212,222,20)"/><text x="1093.00" y="158.50">run (mlprodi..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.56%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(207,3,38)"/><text x="1186.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.37%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(239,120,32)"/><text x="1188.00" y="190.50"></text></g></g></svg>