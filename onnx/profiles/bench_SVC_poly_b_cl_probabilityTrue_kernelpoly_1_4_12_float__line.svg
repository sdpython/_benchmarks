<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2054" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2037.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2037.00"> </text><g id="frames"><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:18) (1 samples, 0.38%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(227,71,22)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.38%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(253,141,41)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.38%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(214,119,43)"/><text x="13.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(249,34,28)"/><text x="13.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(244,206,6)"/><text x="13.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.38%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(230,31,23)"/><text x="13.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="19" y="116" width="4" height="15" fill="rgb(238,85,17)"/><text x="22.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="19" y="132" width="4" height="15" fill="rgb(222,35,45)"/><text x="22.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.38%)</title><rect x="19" y="148" width="4" height="15" fill="rgb(236,153,29)"/><text x="22.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.76%)</title><rect x="32" y="180" width="9" height="15" fill="rgb(215,192,15)"/><text x="35.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.38%)</title><rect x="41" y="180" width="5" height="15" fill="rgb(205,77,21)"/><text x="44.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.38%)</title><rect x="46" y="196" width="4" height="15" fill="rgb(216,125,31)"/><text x="49.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (15 samples, 5.73%)</title><rect x="50" y="196" width="68" height="15" fill="rgb(225,190,11)"/><text x="53.00" y="206.50">&lt;listco..</text></g><g><title>unicode_endswith (python3.7) (7 samples, 2.67%)</title><rect x="86" y="212" width="32" height="15" fill="rgb(231,57,35)"/><text x="89.00" y="222.50">un..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (25 samples, 9.54%)</title><rect x="28" y="164" width="112" height="15" fill="rgb(226,104,21)"/><text x="31.00" y="174.50">_validate_for..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (21 samples, 8.02%)</title><rect x="46" y="180" width="94" height="15" fill="rgb(210,102,47)"/><text x="49.00" y="190.50">check_is_fi..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (5 samples, 1.91%)</title><rect x="118" y="196" width="22" height="15" fill="rgb(232,129,47)"/><text x="121.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.76%)</title><rect x="131" y="212" width="9" height="15" fill="rgb(205,153,18)"/><text x="134.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.38%)</title><rect x="145" y="180" width="4" height="15" fill="rgb(245,103,16)"/><text x="148.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.38%)</title><rect x="145" y="196" width="4" height="15" fill="rgb(209,207,28)"/><text x="148.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:477) (2 samples, 0.76%)</title><rect x="158" y="196" width="9" height="15" fill="rgb(226,168,10)"/><text x="161.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (2 samples, 0.76%)</title><rect x="167" y="196" width="9" height="15" fill="rgb(221,93,7)"/><text x="170.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.38%)</title><rect x="176" y="196" width="5" height="15" fill="rgb(235,5,25)"/><text x="179.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 3.05%)</title><rect x="149" y="180" width="36" height="15" fill="rgb(230,46,22)"/><text x="152.00" y="190.50">che..</text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.38%)</title><rect x="181" y="196" width="4" height="15" fill="rgb(252,108,18)"/><text x="184.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.15%)</title><rect x="194" y="212" width="14" height="15" fill="rgb(254,117,18)"/><text x="197.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.38%)</title><rect x="208" y="212" width="4" height="15" fill="rgb(251,165,27)"/><text x="211.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (10 samples, 3.82%)</title><rect x="185" y="180" width="45" height="15" fill="rgb(234,120,48)"/><text x="188.00" y="190.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (10 samples, 3.82%)</title><rect x="185" y="196" width="45" height="15" fill="rgb(236,73,15)"/><text x="188.00" y="206.50">simp..</text></g><g><title>_add_filter (warnings.py:189) (4 samples, 1.53%)</title><rect x="212" y="212" width="18" height="15" fill="rgb(208,103,14)"/><text x="215.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.38%)</title><rect x="230" y="180" width="5" height="15" fill="rgb(223,202,5)"/><text x="233.00" y="190.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.38%)</title><rect x="244" y="228" width="4" height="15" fill="rgb(223,223,25)"/><text x="247.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.38%)</title><rect x="244" y="244" width="4" height="15" fill="rgb(235,31,7)"/><text x="247.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.38%)</title><rect x="244" y="260" width="4" height="15" fill="rgb(219,182,54)"/><text x="247.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.38%)</title><rect x="244" y="276" width="4" height="15" fill="rgb(240,155,7)"/><text x="247.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.15%)</title><rect x="239" y="212" width="14" height="15" fill="rgb(242,105,16)"/><text x="242.00" y="222.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:553) (1 samples, 0.38%)</title><rect x="248" y="228" width="5" height="15" fill="rgb(209,13,10)"/><text x="251.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1043) (1 samples, 0.38%)</title><rect x="253" y="324" width="4" height="15" fill="rgb(208,198,17)"/><text x="256.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.38%)</title><rect x="253" y="340" width="4" height="15" fill="rgb(245,101,19)"/><text x="256.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (2 samples, 0.76%)</title><rect x="253" y="260" width="9" height="15" fill="rgb(227,224,0)"/><text x="256.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (2 samples, 0.76%)</title><rect x="253" y="276" width="9" height="15" fill="rgb(240,24,14)"/><text x="256.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (2 samples, 0.76%)</title><rect x="253" y="292" width="9" height="15" fill="rgb(239,193,23)"/><text x="256.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (2 samples, 0.76%)</title><rect x="253" y="308" width="9" height="15" fill="rgb(215,130,23)"/><text x="256.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.38%)</title><rect x="257" y="324" width="5" height="15" fill="rgb(254,65,6)"/><text x="260.00" y="334.50"></text></g><g><title>_array_fill_strides (ctors.c:4128) (1 samples, 0.38%)</title><rect x="257" y="340" width="5" height="15" fill="rgb(229,199,14)"/><text x="260.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.38%)</title><rect x="262" y="292" width="4" height="15" fill="rgb(228,65,22)"/><text x="265.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="262" y="308" width="4" height="15" fill="rgb(212,112,22)"/><text x="265.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (8 samples, 3.05%)</title><rect x="235" y="180" width="36" height="15" fill="rgb(246,52,9)"/><text x="238.00" y="190.50">che..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (7 samples, 2.67%)</title><rect x="239" y="196" width="32" height="15" fill="rgb(253,162,49)"/><text x="242.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (4 samples, 1.53%)</title><rect x="253" y="212" width="18" height="15" fill="rgb(216,86,19)"/><text x="256.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (4 samples, 1.53%)</title><rect x="253" y="228" width="18" height="15" fill="rgb(209,74,14)"/><text x="256.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (4 samples, 1.53%)</title><rect x="253" y="244" width="18" height="15" fill="rgb(218,103,4)"/><text x="256.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (2 samples, 0.76%)</title><rect x="262" y="260" width="9" height="15" fill="rgb(240,92,18)"/><text x="265.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.76%)</title><rect x="262" y="276" width="9" height="15" fill="rgb(221,228,3)"/><text x="265.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.38%)</title><rect x="266" y="292" width="5" height="15" fill="rgb(220,216,34)"/><text x="269.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.38%)</title><rect x="266" y="308" width="5" height="15" fill="rgb(222,150,9)"/><text x="269.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.38%)</title><rect x="266" y="324" width="5" height="15" fill="rgb(242,91,14)"/><text x="269.00" y="334.50"></text></g><g><title>0x7fd1731ac8c0 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="266" y="340" width="5" height="15" fill="rgb(233,49,34)"/><text x="269.00" y="350.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.38%)</title><rect x="298" y="196" width="4" height="15" fill="rgb(253,6,43)"/><text x="301.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (8 samples, 3.05%)</title><rect x="271" y="180" width="36" height="15" fill="rgb(211,95,51)"/><text x="274.00" y="190.50">che..</text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.38%)</title><rect x="302" y="196" width="5" height="15" fill="rgb(247,108,54)"/><text x="305.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.38%)</title><rect x="307" y="196" width="4" height="15" fill="rgb(221,82,22)"/><text x="310.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.76%)</title><rect x="307" y="180" width="9" height="15" fill="rgb(240,191,36)"/><text x="310.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.38%)</title><rect x="311" y="196" width="5" height="15" fill="rgb(208,184,32)"/><text x="314.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.38%)</title><rect x="316" y="180" width="4" height="15" fill="rgb(211,77,11)"/><text x="319.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.76%)</title><rect x="343" y="212" width="9" height="15" fill="rgb(251,101,28)"/><text x="346.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 3.05%)</title><rect x="320" y="196" width="36" height="15" fill="rgb(250,151,45)"/><text x="323.00" y="206.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.38%)</title><rect x="352" y="212" width="4" height="15" fill="rgb(237,227,37)"/><text x="355.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 4.58%)</title><rect x="320" y="180" width="54" height="15" fill="rgb(245,208,19)"/><text x="323.00" y="190.50">check..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (4 samples, 1.53%)</title><rect x="356" y="196" width="18" height="15" fill="rgb(209,135,24)"/><text x="359.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.38%)</title><rect x="370" y="212" width="4" height="15" fill="rgb(214,23,52)"/><text x="373.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.38%)</title><rect x="379" y="196" width="4" height="15" fill="rgb(245,81,8)"/><text x="382.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.38%)</title><rect x="383" y="196" width="5" height="15" fill="rgb(242,127,26)"/><text x="386.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.67%)</title><rect x="374" y="180" width="32" height="15" fill="rgb(248,188,39)"/><text x="377.00" y="190.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.53%)</title><rect x="388" y="196" width="18" height="15" fill="rgb(217,195,6)"/><text x="391.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.38%)</title><rect x="401" y="212" width="5" height="15" fill="rgb(249,52,14)"/><text x="404.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.38%)</title><rect x="401" y="228" width="5" height="15" fill="rgb(252,186,37)"/><text x="404.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.38%)</title><rect x="406" y="180" width="4" height="15" fill="rgb(224,134,2)"/><text x="409.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (61 samples, 23.28%)</title><rect x="140" y="164" width="275" height="15" fill="rgb(206,13,35)"/><text x="143.00" y="174.50">_validate_for_predict (sklearn/svm/_..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.38%)</title><rect x="410" y="180" width="5" height="15" fill="rgb(229,181,9)"/><text x="413.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (1 samples, 0.38%)</title><rect x="415" y="164" width="4" height="15" fill="rgb(236,201,7)"/><text x="418.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (88 samples, 33.59%)</title><rect x="28" y="148" width="396" height="15" fill="rgb(241,90,54)"/><text x="31.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:464) (1 samples, 0.38%)</title><rect x="419" y="164" width="5" height="15" fill="rgb(218,229,18)"/><text x="422.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:645) (1 samples, 0.38%)</title><rect x="424" y="148" width="4" height="15" fill="rgb(206,69,45)"/><text x="427.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:689) (1 samples, 0.38%)</title><rect x="428" y="164" width="5" height="15" fill="rgb(251,108,38)"/><text x="431.00" y="174.50"></text></g><g><title>0x7fd14dce5035 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="446" y="180" width="5" height="15" fill="rgb(223,145,23)"/><text x="449.00" y="190.50"></text></g><g><title>0x7fd14dce5247 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="451" y="180" width="4" height="15" fill="rgb(224,169,45)"/><text x="454.00" y="190.50"></text></g><g><title>0x7fd14dce52ee (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="455" y="180" width="5" height="15" fill="rgb(224,152,35)"/><text x="458.00" y="190.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.38%)</title><rect x="460" y="244" width="4" height="15" fill="rgb(246,52,6)"/><text x="463.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.38%)</title><rect x="460" y="260" width="4" height="15" fill="rgb(238,201,1)"/><text x="463.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:434) (1 samples, 0.38%)</title><rect x="460" y="276" width="4" height="15" fill="rgb(206,178,9)"/><text x="463.00" y="286.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.38%)</title><rect x="460" y="292" width="4" height="15" fill="rgb(223,219,34)"/><text x="463.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="460" y="308" width="4" height="15" fill="rgb(243,184,50)"/><text x="463.00" y="318.50"></text></g><g><title>0x7fd14dce2d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="460" y="196" width="9" height="15" fill="rgb(248,154,10)"/><text x="463.00" y="206.50"></text></g><g><title>0x7fd14dccce39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="460" y="212" width="9" height="15" fill="rgb(219,187,40)"/><text x="463.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.76%)</title><rect x="460" y="228" width="9" height="15" fill="rgb(206,189,43)"/><text x="463.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.38%)</title><rect x="464" y="244" width="5" height="15" fill="rgb(206,161,47)"/><text x="467.00" y="254.50"></text></g><g><title>0x7fd14dce2d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="469" y="196" width="4" height="15" fill="rgb(222,98,27)"/><text x="472.00" y="206.50"></text></g><g><title>0x7fd14dccc5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="469" y="212" width="4" height="15" fill="rgb(249,115,20)"/><text x="472.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.38%)</title><rect x="469" y="228" width="4" height="15" fill="rgb(226,196,29)"/><text x="472.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.38%)</title><rect x="469" y="244" width="4" height="15" fill="rgb(205,130,18)"/><text x="472.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:575) (1 samples, 0.38%)</title><rect x="469" y="260" width="4" height="15" fill="rgb(234,25,17)"/><text x="472.00" y="270.50"></text></g><g><title>0x7fd14dccce39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="473" y="212" width="5" height="15" fill="rgb(234,43,5)"/><text x="476.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:831) (1 samples, 0.38%)</title><rect x="473" y="228" width="5" height="15" fill="rgb(239,179,12)"/><text x="476.00" y="238.50"></text></g><g><title>0x7fd14dce2d9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="473" y="196" width="9" height="15" fill="rgb(217,47,26)"/><text x="476.00" y="206.50"></text></g><g><title>0x7fd14dcccf13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="478" y="212" width="4" height="15" fill="rgb(219,184,32)"/><text x="481.00" y="222.50"></text></g><g><title>0x7fd14dce2f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="482" y="196" width="5" height="15" fill="rgb(245,81,51)"/><text x="485.00" y="206.50"></text></g><g><title>0x7fd14dccce39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="482" y="212" width="5" height="15" fill="rgb(227,101,45)"/><text x="485.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:748) (1 samples, 0.38%)</title><rect x="482" y="228" width="5" height="15" fill="rgb(227,221,44)"/><text x="485.00" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c:2749) (1 samples, 0.38%)</title><rect x="487" y="212" width="4" height="15" fill="rgb(238,38,40)"/><text x="490.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.38%)</title><rect x="496" y="228" width="4" height="15" fill="rgb(207,69,37)"/><text x="499.00" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (3 samples, 1.15%)</title><rect x="491" y="212" width="14" height="15" fill="rgb(215,227,48)"/><text x="494.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.38%)</title><rect x="500" y="228" width="5" height="15" fill="rgb(248,201,32)"/><text x="503.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.38%)</title><rect x="500" y="244" width="5" height="15" fill="rgb(224,26,23)"/><text x="503.00" y="254.50"></text></g><g><title>0x7fd14dce312f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.91%)</title><rect x="487" y="196" width="22" height="15" fill="rgb(253,7,5)"/><text x="490.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.38%)</title><rect x="505" y="212" width="4" height="15" fill="rgb(225,128,45)"/><text x="508.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3413) (1 samples, 0.38%)</title><rect x="505" y="228" width="4" height="15" fill="rgb(212,181,44)"/><text x="508.00" y="238.50"></text></g><g><title>0x7fd14dce3237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="509" y="196" width="5" height="15" fill="rgb(237,84,15)"/><text x="512.00" y="206.50"></text></g><g><title>0x7fd14dccd7c1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="509" y="212" width="5" height="15" fill="rgb(238,201,36)"/><text x="512.00" y="222.50"></text></g><g><title>0x7fd14dce32b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="514" y="196" width="9" height="15" fill="rgb(247,85,40)"/><text x="517.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="514" y="212" width="9" height="15" fill="rgb(248,192,6)"/><text x="517.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="518" y="228" width="5" height="15" fill="rgb(209,192,27)"/><text x="521.00" y="238.50"></text></g><g><title>0x7fd1731f5c44 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="518" y="244" width="5" height="15" fill="rgb(230,31,52)"/><text x="521.00" y="254.50"></text></g><g><title>0x7fd14dce3314 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="523" y="196" width="4" height="15" fill="rgb(253,208,43)"/><text x="526.00" y="206.50"></text></g><g><title>0x7fd14dce3418 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="527" y="196" width="5" height="15" fill="rgb(223,69,44)"/><text x="530.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (2 samples, 0.76%)</title><rect x="536" y="244" width="9" height="15" fill="rgb(252,166,54)"/><text x="539.00" y="254.50"></text></g><g><title>0x7fd14dce346c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.53%)</title><rect x="532" y="196" width="18" height="15" fill="rgb(246,19,26)"/><text x="535.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (4 samples, 1.53%)</title><rect x="532" y="212" width="18" height="15" fill="rgb(220,211,27)"/><text x="535.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (3 samples, 1.15%)</title><rect x="536" y="228" width="14" height="15" fill="rgb(237,89,25)"/><text x="539.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.38%)</title><rect x="545" y="244" width="5" height="15" fill="rgb(221,159,16)"/><text x="548.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.38%)</title><rect x="545" y="260" width="5" height="15" fill="rgb(221,97,48)"/><text x="548.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.38%)</title><rect x="545" y="276" width="5" height="15" fill="rgb(247,80,31)"/><text x="548.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:645) (1 samples, 0.38%)</title><rect x="550" y="244" width="4" height="15" fill="rgb(231,42,49)"/><text x="553.00" y="254.50"></text></g><g><title>0x7fd14dce3528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="550" y="196" width="9" height="15" fill="rgb(250,143,24)"/><text x="553.00" y="206.50"></text></g><g><title>0x7fd14dccce39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="550" y="212" width="9" height="15" fill="rgb(245,171,40)"/><text x="553.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.76%)</title><rect x="550" y="228" width="9" height="15" fill="rgb(239,171,45)"/><text x="553.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.38%)</title><rect x="554" y="244" width="5" height="15" fill="rgb(213,72,29)"/><text x="557.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.38%)</title><rect x="554" y="260" width="5" height="15" fill="rgb(220,205,18)"/><text x="557.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:434) (1 samples, 0.38%)</title><rect x="554" y="276" width="5" height="15" fill="rgb(231,82,10)"/><text x="557.00" y="286.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.38%)</title><rect x="554" y="292" width="5" height="15" fill="rgb(222,143,44)"/><text x="557.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="554" y="308" width="5" height="15" fill="rgb(229,138,39)"/><text x="557.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.76%)</title><rect x="572" y="244" width="9" height="15" fill="rgb(239,8,12)"/><text x="575.00" y="254.50"></text></g><g><title>0x7fd14dce3553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.67%)</title><rect x="559" y="196" width="31" height="15" fill="rgb(225,164,16)"/><text x="562.00" y="206.50">0x..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.67%)</title><rect x="559" y="212" width="31" height="15" fill="rgb(223,137,43)"/><text x="562.00" y="222.50">co..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.67%)</title><rect x="559" y="228" width="31" height="15" fill="rgb(234,153,27)"/><text x="562.00" y="238.50">sv..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="581" y="244" width="9" height="15" fill="rgb(224,131,6)"/><text x="584.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="581" y="260" width="9" height="15" fill="rgb(243,203,24)"/><text x="584.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.38%)</title><rect x="590" y="244" width="5" height="15" fill="rgb(216,220,14)"/><text x="593.00" y="254.50"></text></g><g><title>0x7fd14dce53fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (31 samples, 11.83%)</title><rect x="460" y="180" width="140" height="15" fill="rgb(237,181,31)"/><text x="463.00" y="190.50">0x7fd14dce53fd (s..</text></g><g><title>0x7fd14dce37b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.76%)</title><rect x="590" y="196" width="10" height="15" fill="rgb(209,210,0)"/><text x="593.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.76%)</title><rect x="590" y="212" width="10" height="15" fill="rgb(226,186,0)"/><text x="593.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.76%)</title><rect x="590" y="228" width="10" height="15" fill="rgb(209,112,29)"/><text x="593.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.38%)</title><rect x="595" y="244" width="5" height="15" fill="rgb(242,65,42)"/><text x="598.00" y="254.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (39 samples, 14.89%)</title><rect x="428" y="148" width="176" height="15" fill="rgb(254,25,41)"/><text x="431.00" y="158.50">_predict_proba (sklear..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (38 samples, 14.50%)</title><rect x="433" y="164" width="171" height="15" fill="rgb(221,27,8)"/><text x="436.00" y="174.50">_dense_predict_proba (..</text></g><g><title>0x7fd14dce6154 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="600" y="180" width="4" height="15" fill="rgb(221,7,11)"/><text x="603.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="604" y="148" width="5" height="15" fill="rgb(221,55,13)"/><text x="607.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="604" y="164" width="5" height="15" fill="rgb(244,84,26)"/><text x="607.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.38%)</title><rect x="604" y="180" width="5" height="15" fill="rgb(230,84,18)"/><text x="607.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:38) (134 samples, 51.15%)</title><rect x="10" y="52" width="603" height="15" fill="rgb(253,10,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:37) (134 samples, 51.15%)</title><rect x="10" y="68" width="603" height="15" fill="rgb(219,66,25)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29) (134 samples, 51.15%)</title><rect x="10" y="84" width="603" height="15" fill="rgb(207,222,49)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29)</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23) (133 samples, 50.76%)</title><rect x="14" y="100" width="599" height="15" fill="rgb(224,163,50)"/><text x="17.00" y="110.50">profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (131 samples, 50.00%)</title><rect x="23" y="116" width="590" height="15" fill="rgb(213,70,46)"/><text x="26.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (131 samples, 50.00%)</title><rect x="23" y="132" width="590" height="15" fill="rgb(211,28,54)"/><text x="26.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/svm/_base.py:636) (1 samples, 0.38%)</title><rect x="609" y="148" width="4" height="15" fill="rgb(209,62,0)"/><text x="612.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py:605) (1 samples, 0.38%)</title><rect x="609" y="164" width="4" height="15" fill="rgb(220,129,53)"/><text x="612.00" y="174.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.38%)</title><rect x="613" y="852" width="5" height="15" fill="rgb(252,178,53)"/><text x="616.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.38%)</title><rect x="613" y="868" width="5" height="15" fill="rgb(242,221,30)"/><text x="616.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.38%)</title><rect x="613" y="884" width="5" height="15" fill="rgb(221,56,3)"/><text x="616.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.38%)</title><rect x="613" y="900" width="5" height="15" fill="rgb(221,97,10)"/><text x="616.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.38%)</title><rect x="613" y="916" width="5" height="15" fill="rgb(217,106,7)"/><text x="616.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.38%)</title><rect x="613" y="932" width="5" height="15" fill="rgb(235,181,21)"/><text x="616.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.38%)</title><rect x="613" y="948" width="5" height="15" fill="rgb(210,200,38)"/><text x="616.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.38%)</title><rect x="613" y="964" width="5" height="15" fill="rgb(230,163,50)"/><text x="616.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.38%)</title><rect x="613" y="980" width="5" height="15" fill="rgb(229,192,5)"/><text x="616.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.38%)</title><rect x="613" y="996" width="5" height="15" fill="rgb(206,33,32)"/><text x="616.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.38%)</title><rect x="613" y="1012" width="5" height="15" fill="rgb(215,144,13)"/><text x="616.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.38%)</title><rect x="613" y="1028" width="5" height="15" fill="rgb(205,151,17)"/><text x="616.00" y="1038.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.76%)</title><rect x="618" y="884" width="9" height="15" fill="rgb(243,149,34)"/><text x="621.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.76%)</title><rect x="618" y="900" width="9" height="15" fill="rgb(248,58,7)"/><text x="621.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.76%)</title><rect x="618" y="916" width="9" height="15" fill="rgb(212,62,33)"/><text x="621.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.38%)</title><rect x="622" y="932" width="5" height="15" fill="rgb(252,196,47)"/><text x="625.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.38%)</title><rect x="622" y="948" width="5" height="15" fill="rgb(227,196,19)"/><text x="625.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:75) (1 samples, 0.38%)</title><rect x="622" y="964" width="5" height="15" fill="rgb(235,36,47)"/><text x="625.00" y="974.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.38%)</title><rect x="622" y="980" width="5" height="15" fill="rgb(233,207,9)"/><text x="625.00" y="990.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.38%)</title><rect x="627" y="900" width="4" height="15" fill="rgb(237,179,40)"/><text x="630.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.38%)</title><rect x="627" y="916" width="4" height="15" fill="rgb(211,117,6)"/><text x="630.00" y="926.50"></text></g><g><title>0x7fd173233fb5 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="627" y="932" width="4" height="15" fill="rgb(225,1,4)"/><text x="630.00" y="942.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.38%)</title><rect x="627" y="948" width="4" height="15" fill="rgb(229,220,2)"/><text x="630.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_b_cl_probabilityTrue_kernelpoly.py:2) (5 samples, 1.91%)</title><rect x="613" y="148" width="23" height="15" fill="rgb(220,182,6)"/><text x="616.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="164" width="23" height="15" fill="rgb(247,45,0)"/><text x="616.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.91%)</title><rect x="613" y="180" width="23" height="15" fill="rgb(231,202,37)"/><text x="616.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="196" width="23" height="15" fill="rgb(234,206,7)"/><text x="616.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="212" width="23" height="15" fill="rgb(214,17,35)"/><text x="616.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="613" y="228" width="23" height="15" fill="rgb(225,85,41)"/><text x="616.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="613" y="244" width="23" height="15" fill="rgb(230,11,43)"/><text x="616.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="613" y="260" width="23" height="15" fill="rgb(205,131,40)"/><text x="616.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="276" width="23" height="15" fill="rgb(253,228,4)"/><text x="616.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.91%)</title><rect x="613" y="292" width="23" height="15" fill="rgb(233,155,19)"/><text x="616.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="308" width="23" height="15" fill="rgb(217,220,3)"/><text x="616.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="613" y="324" width="23" height="15" fill="rgb(217,181,21)"/><text x="616.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="613" y="340" width="23" height="15" fill="rgb(252,105,0)"/><text x="616.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="613" y="356" width="23" height="15" fill="rgb(238,126,36)"/><text x="616.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="372" width="23" height="15" fill="rgb(226,43,39)"/><text x="616.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.91%)</title><rect x="613" y="388" width="23" height="15" fill="rgb(224,28,2)"/><text x="616.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="404" width="23" height="15" fill="rgb(222,182,51)"/><text x="616.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="613" y="420" width="23" height="15" fill="rgb(220,27,9)"/><text x="616.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="613" y="436" width="23" height="15" fill="rgb(223,75,8)"/><text x="616.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="613" y="452" width="23" height="15" fill="rgb(212,120,14)"/><text x="616.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="468" width="23" height="15" fill="rgb(254,200,54)"/><text x="616.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.91%)</title><rect x="613" y="484" width="23" height="15" fill="rgb(212,220,48)"/><text x="616.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="500" width="23" height="15" fill="rgb(250,111,30)"/><text x="616.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="613" y="516" width="23" height="15" fill="rgb(237,194,42)"/><text x="616.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="613" y="532" width="23" height="15" fill="rgb(248,91,4)"/><text x="616.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="613" y="548" width="23" height="15" fill="rgb(248,23,20)"/><text x="616.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="564" width="23" height="15" fill="rgb(205,114,21)"/><text x="616.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.91%)</title><rect x="613" y="580" width="23" height="15" fill="rgb(222,140,31)"/><text x="616.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="596" width="23" height="15" fill="rgb(245,116,20)"/><text x="616.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.91%)</title><rect x="613" y="612" width="23" height="15" fill="rgb(221,113,48)"/><text x="616.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="628" width="23" height="15" fill="rgb(220,53,35)"/><text x="616.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="644" width="23" height="15" fill="rgb(241,214,5)"/><text x="616.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="613" y="660" width="23" height="15" fill="rgb(241,119,27)"/><text x="616.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="613" y="676" width="23" height="15" fill="rgb(208,150,23)"/><text x="616.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="613" y="692" width="23" height="15" fill="rgb(207,186,16)"/><text x="616.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="708" width="23" height="15" fill="rgb(222,139,40)"/><text x="616.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.91%)</title><rect x="613" y="724" width="23" height="15" fill="rgb(207,173,33)"/><text x="616.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="613" y="740" width="23" height="15" fill="rgb(244,163,20)"/><text x="616.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="613" y="756" width="23" height="15" fill="rgb(220,98,52)"/><text x="616.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="613" y="772" width="23" height="15" fill="rgb(230,219,42)"/><text x="616.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="613" y="788" width="23" height="15" fill="rgb(244,160,24)"/><text x="616.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="613" y="804" width="23" height="15" fill="rgb(242,186,44)"/><text x="616.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.91%)</title><rect x="613" y="820" width="23" height="15" fill="rgb(246,169,15)"/><text x="616.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.91%)</title><rect x="613" y="836" width="23" height="15" fill="rgb(243,124,7)"/><text x="616.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 1.53%)</title><rect x="618" y="852" width="18" height="15" fill="rgb(247,31,8)"/><text x="621.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 1.53%)</title><rect x="618" y="868" width="18" height="15" fill="rgb(231,58,21)"/><text x="621.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.76%)</title><rect x="627" y="884" width="9" height="15" fill="rgb(215,145,54)"/><text x="630.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.38%)</title><rect x="631" y="900" width="5" height="15" fill="rgb(253,93,10)"/><text x="634.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (1 samples, 0.38%)</title><rect x="631" y="916" width="5" height="15" fill="rgb(218,62,8)"/><text x="634.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.38%)</title><rect x="631" y="932" width="5" height="15" fill="rgb(206,185,52)"/><text x="634.00" y="942.50"></text></g><g><title>_splitext (genericpath.py:129) (1 samples, 0.38%)</title><rect x="631" y="948" width="5" height="15" fill="rgb(228,93,5)"/><text x="634.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:182) (1 samples, 0.38%)</title><rect x="636" y="628" width="4" height="15" fill="rgb(207,181,4)"/><text x="639.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="644" width="4" height="15" fill="rgb(248,47,20)"/><text x="639.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="636" y="660" width="4" height="15" fill="rgb(213,203,7)"/><text x="639.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="636" y="676" width="4" height="15" fill="rgb(239,149,6)"/><text x="639.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="636" y="692" width="4" height="15" fill="rgb(209,228,25)"/><text x="639.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="636" y="708" width="4" height="15" fill="rgb(242,18,45)"/><text x="639.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/testing.py:7) (1 samples, 0.38%)</title><rect x="636" y="724" width="4" height="15" fill="rgb(216,79,10)"/><text x="639.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="740" width="4" height="15" fill="rgb(220,85,41)"/><text x="639.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="636" y="756" width="4" height="15" fill="rgb(229,2,6)"/><text x="639.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="636" y="772" width="4" height="15" fill="rgb(251,173,29)"/><text x="639.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="636" y="788" width="4" height="15" fill="rgb(243,61,44)"/><text x="639.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="636" y="804" width="4" height="15" fill="rgb(218,210,13)"/><text x="639.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/util/testing.py:27) (1 samples, 0.38%)</title><rect x="636" y="820" width="4" height="15" fill="rgb(233,109,43)"/><text x="639.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="836" width="4" height="15" fill="rgb(209,88,15)"/><text x="639.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (1 samples, 0.38%)</title><rect x="636" y="852" width="4" height="15" fill="rgb(240,220,8)"/><text x="639.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.38%)</title><rect x="640" y="1492" width="5" height="15" fill="rgb(229,20,10)"/><text x="643.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="640" y="1508" width="5" height="15" fill="rgb(230,135,8)"/><text x="643.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="640" y="1524" width="5" height="15" fill="rgb(250,201,19)"/><text x="643.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="640" y="1540" width="5" height="15" fill="rgb(223,3,48)"/><text x="643.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="640" y="1556" width="5" height="15" fill="rgb(205,164,7)"/><text x="643.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="640" y="1572" width="5" height="15" fill="rgb(227,98,18)"/><text x="643.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.38%)</title><rect x="640" y="1588" width="5" height="15" fill="rgb(216,174,39)"/><text x="643.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="640" y="1604" width="5" height="15" fill="rgb(222,121,17)"/><text x="643.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="640" y="1620" width="5" height="15" fill="rgb(222,143,11)"/><text x="643.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="640" y="1636" width="5" height="15" fill="rgb(222,6,19)"/><text x="643.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="640" y="1652" width="5" height="15" fill="rgb(208,27,28)"/><text x="643.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="640" y="1668" width="5" height="15" fill="rgb(254,101,27)"/><text x="643.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.38%)</title><rect x="640" y="1684" width="5" height="15" fill="rgb(254,214,5)"/><text x="643.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="640" y="1700" width="5" height="15" fill="rgb(206,163,3)"/><text x="643.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="640" y="1716" width="5" height="15" fill="rgb(250,153,24)"/><text x="643.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="640" y="1732" width="5" height="15" fill="rgb(223,38,13)"/><text x="643.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="640" y="1748" width="5" height="15" fill="rgb(249,74,6)"/><text x="643.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="640" y="1764" width="5" height="15" fill="rgb(214,222,9)"/><text x="643.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.38%)</title><rect x="640" y="1780" width="5" height="15" fill="rgb(211,193,26)"/><text x="643.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="640" y="1796" width="5" height="15" fill="rgb(235,169,32)"/><text x="643.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="640" y="1812" width="5" height="15" fill="rgb(230,51,15)"/><text x="643.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="640" y="1828" width="5" height="15" fill="rgb(251,31,52)"/><text x="643.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="640" y="1844" width="5" height="15" fill="rgb(224,199,50)"/><text x="643.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="640" y="1860" width="5" height="15" fill="rgb(253,9,1)"/><text x="643.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:600) (1 samples, 0.38%)</title><rect x="640" y="1876" width="5" height="15" fill="rgb(209,183,41)"/><text x="643.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.38%)</title><rect x="640" y="1892" width="5" height="15" fill="rgb(223,197,21)"/><text x="643.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.38%)</title><rect x="640" y="1908" width="5" height="15" fill="rgb(213,5,9)"/><text x="643.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1289) (1 samples, 0.38%)</title><rect x="640" y="1924" width="5" height="15" fill="rgb(251,55,35)"/><text x="643.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py:1126) (1 samples, 0.38%)</title><rect x="640" y="1940" width="5" height="15" fill="rgb(213,157,54)"/><text x="643.00" y="1950.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.38%)</title><rect x="640" y="1956" width="5" height="15" fill="rgb(212,211,13)"/><text x="643.00" y="1966.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.38%)</title><rect x="640" y="1972" width="5" height="15" fill="rgb(234,102,15)"/><text x="643.00" y="1982.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.38%)</title><rect x="640" y="1988" width="5" height="15" fill="rgb(220,49,27)"/><text x="643.00" y="1998.50"></text></g><g><title>__call__ (enum.py:283) (1 samples, 0.38%)</title><rect x="640" y="2004" width="5" height="15" fill="rgb(212,134,31)"/><text x="643.00" y="2014.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.15%)</title><rect x="636" y="532" width="13" height="15" fill="rgb(205,120,23)"/><text x="639.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.15%)</title><rect x="636" y="548" width="13" height="15" fill="rgb(228,38,23)"/><text x="639.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.15%)</title><rect x="636" y="564" width="13" height="15" fill="rgb(225,132,33)"/><text x="639.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.15%)</title><rect x="636" y="580" width="13" height="15" fill="rgb(231,19,16)"/><text x="639.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.15%)</title><rect x="636" y="596" width="13" height="15" fill="rgb(205,123,13)"/><text x="639.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.15%)</title><rect x="636" y="612" width="13" height="15" fill="rgb(247,47,0)"/><text x="639.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.76%)</title><rect x="640" y="628" width="9" height="15" fill="rgb(251,180,0)"/><text x="643.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="644" width="9" height="15" fill="rgb(229,34,16)"/><text x="643.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="660" width="9" height="15" fill="rgb(206,16,30)"/><text x="643.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="676" width="9" height="15" fill="rgb(237,25,4)"/><text x="643.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="692" width="9" height="15" fill="rgb(231,97,33)"/><text x="643.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="708" width="9" height="15" fill="rgb(233,98,51)"/><text x="643.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.76%)</title><rect x="640" y="724" width="9" height="15" fill="rgb(237,46,48)"/><text x="643.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="740" width="9" height="15" fill="rgb(229,112,21)"/><text x="643.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="756" width="9" height="15" fill="rgb(248,121,34)"/><text x="643.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="772" width="9" height="15" fill="rgb(231,64,33)"/><text x="643.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="788" width="9" height="15" fill="rgb(245,22,38)"/><text x="643.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="804" width="9" height="15" fill="rgb(235,18,54)"/><text x="643.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.76%)</title><rect x="640" y="820" width="9" height="15" fill="rgb(214,144,22)"/><text x="643.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="836" width="9" height="15" fill="rgb(225,211,54)"/><text x="643.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="852" width="9" height="15" fill="rgb(208,99,41)"/><text x="643.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="868" width="9" height="15" fill="rgb(252,71,11)"/><text x="643.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="884" width="9" height="15" fill="rgb(248,101,18)"/><text x="643.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="900" width="9" height="15" fill="rgb(209,226,0)"/><text x="643.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.76%)</title><rect x="640" y="916" width="9" height="15" fill="rgb(217,157,8)"/><text x="643.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="932" width="9" height="15" fill="rgb(224,130,37)"/><text x="643.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="948" width="9" height="15" fill="rgb(226,159,3)"/><text x="643.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="964" width="9" height="15" fill="rgb(243,170,40)"/><text x="643.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="980" width="9" height="15" fill="rgb(210,183,38)"/><text x="643.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="996" width="9" height="15" fill="rgb(219,85,48)"/><text x="643.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.76%)</title><rect x="640" y="1012" width="9" height="15" fill="rgb(239,164,51)"/><text x="643.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="1028" width="9" height="15" fill="rgb(236,141,9)"/><text x="643.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="1044" width="9" height="15" fill="rgb(230,57,27)"/><text x="643.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="1060" width="9" height="15" fill="rgb(217,207,33)"/><text x="643.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="1076" width="9" height="15" fill="rgb(253,196,12)"/><text x="643.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="1092" width="9" height="15" fill="rgb(219,77,53)"/><text x="643.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.76%)</title><rect x="640" y="1108" width="9" height="15" fill="rgb(246,69,5)"/><text x="643.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="1124" width="9" height="15" fill="rgb(208,191,49)"/><text x="643.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="1140" width="9" height="15" fill="rgb(214,44,8)"/><text x="643.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="1156" width="9" height="15" fill="rgb(252,192,19)"/><text x="643.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="1172" width="9" height="15" fill="rgb(221,37,8)"/><text x="643.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="1188" width="9" height="15" fill="rgb(220,0,10)"/><text x="643.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.76%)</title><rect x="640" y="1204" width="9" height="15" fill="rgb(229,1,54)"/><text x="643.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="1220" width="9" height="15" fill="rgb(216,79,21)"/><text x="643.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="1236" width="9" height="15" fill="rgb(214,100,10)"/><text x="643.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="1252" width="9" height="15" fill="rgb(230,14,20)"/><text x="643.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="1268" width="9" height="15" fill="rgb(249,78,35)"/><text x="643.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="1284" width="9" height="15" fill="rgb(227,152,2)"/><text x="643.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.76%)</title><rect x="640" y="1300" width="9" height="15" fill="rgb(233,66,16)"/><text x="643.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="1316" width="9" height="15" fill="rgb(226,188,21)"/><text x="643.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="1332" width="9" height="15" fill="rgb(210,99,32)"/><text x="643.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="1348" width="9" height="15" fill="rgb(229,125,35)"/><text x="643.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="1364" width="9" height="15" fill="rgb(230,168,3)"/><text x="643.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="1380" width="9" height="15" fill="rgb(230,79,50)"/><text x="643.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.76%)</title><rect x="640" y="1396" width="9" height="15" fill="rgb(238,93,23)"/><text x="643.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.76%)</title><rect x="640" y="1412" width="9" height="15" fill="rgb(241,54,22)"/><text x="643.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.76%)</title><rect x="640" y="1428" width="9" height="15" fill="rgb(219,63,31)"/><text x="643.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.76%)</title><rect x="640" y="1444" width="9" height="15" fill="rgb(236,149,16)"/><text x="643.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.76%)</title><rect x="640" y="1460" width="9" height="15" fill="rgb(227,70,20)"/><text x="643.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.76%)</title><rect x="640" y="1476" width="9" height="15" fill="rgb(219,143,4)"/><text x="643.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.38%)</title><rect x="645" y="1492" width="4" height="15" fill="rgb(229,85,14)"/><text x="648.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="645" y="1508" width="4" height="15" fill="rgb(232,93,15)"/><text x="648.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="645" y="1524" width="4" height="15" fill="rgb(211,46,28)"/><text x="648.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="645" y="1540" width="4" height="15" fill="rgb(243,35,53)"/><text x="648.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="645" y="1556" width="4" height="15" fill="rgb(242,180,40)"/><text x="648.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="645" y="1572" width="4" height="15" fill="rgb(225,147,45)"/><text x="648.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="645" y="1588" width="4" height="15" fill="rgb(230,137,1)"/><text x="648.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="645" y="1604" width="4" height="15" fill="rgb(230,109,7)"/><text x="648.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="645" y="1620" width="4" height="15" fill="rgb(223,161,44)"/><text x="648.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.38%)</title><rect x="645" y="1636" width="4" height="15" fill="rgb(231,144,37)"/><text x="648.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="645" y="1652" width="4" height="15" fill="rgb(207,211,43)"/><text x="648.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="645" y="1668" width="4" height="15" fill="rgb(227,44,30)"/><text x="648.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="645" y="1684" width="4" height="15" fill="rgb(222,34,4)"/><text x="648.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="645" y="1700" width="4" height="15" fill="rgb(237,80,49)"/><text x="648.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="645" y="1716" width="4" height="15" fill="rgb(232,119,42)"/><text x="648.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="645" y="1732" width="4" height="15" fill="rgb(253,31,16)"/><text x="648.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="645" y="1748" width="4" height="15" fill="rgb(251,166,54)"/><text x="648.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.38%)</title><rect x="645" y="1764" width="4" height="15" fill="rgb(251,124,19)"/><text x="648.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="645" y="1780" width="4" height="15" fill="rgb(215,77,25)"/><text x="648.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="645" y="1796" width="4" height="15" fill="rgb(217,208,2)"/><text x="648.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="645" y="1812" width="4" height="15" fill="rgb(206,27,19)"/><text x="648.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="645" y="1828" width="4" height="15" fill="rgb(220,12,31)"/><text x="648.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="645" y="1844" width="4" height="15" fill="rgb(232,229,52)"/><text x="648.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.38%)</title><rect x="645" y="1860" width="4" height="15" fill="rgb(212,99,41)"/><text x="648.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="645" y="1876" width="4" height="15" fill="rgb(231,109,24)"/><text x="648.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="645" y="1892" width="4" height="15" fill="rgb(252,139,8)"/><text x="648.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="645" y="1908" width="4" height="15" fill="rgb(215,33,24)"/><text x="648.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.38%)</title><rect x="645" y="1924" width="4" height="15" fill="rgb(217,227,14)"/><text x="648.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.38%)</title><rect x="645" y="1940" width="4" height="15" fill="rgb(233,22,32)"/><text x="648.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.38%)</title><rect x="645" y="1956" width="4" height="15" fill="rgb(227,122,38)"/><text x="648.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.53%)</title><rect x="636" y="436" width="18" height="15" fill="rgb(221,217,31)"/><text x="639.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.53%)</title><rect x="636" y="452" width="18" height="15" fill="rgb(220,49,27)"/><text x="639.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.53%)</title><rect x="636" y="468" width="18" height="15" fill="rgb(242,111,6)"/><text x="639.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.53%)</title><rect x="636" y="484" width="18" height="15" fill="rgb(240,75,8)"/><text x="639.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.53%)</title><rect x="636" y="500" width="18" height="15" fill="rgb(249,65,3)"/><text x="639.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.53%)</title><rect x="636" y="516" width="18" height="15" fill="rgb(239,205,22)"/><text x="639.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.38%)</title><rect x="649" y="532" width="5" height="15" fill="rgb(238,142,10)"/><text x="652.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="649" y="548" width="5" height="15" fill="rgb(229,196,26)"/><text x="652.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="649" y="564" width="5" height="15" fill="rgb(240,228,3)"/><text x="652.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="649" y="580" width="5" height="15" fill="rgb(230,87,33)"/><text x="652.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="649" y="596" width="5" height="15" fill="rgb(217,96,53)"/><text x="652.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="649" y="612" width="5" height="15" fill="rgb(232,119,25)"/><text x="652.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.38%)</title><rect x="649" y="628" width="5" height="15" fill="rgb(251,158,3)"/><text x="652.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="649" y="644" width="5" height="15" fill="rgb(218,61,49)"/><text x="652.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="649" y="660" width="5" height="15" fill="rgb(253,147,54)"/><text x="652.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="649" y="676" width="5" height="15" fill="rgb(206,7,44)"/><text x="652.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="649" y="692" width="5" height="15" fill="rgb(222,15,47)"/><text x="652.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="649" y="708" width="5" height="15" fill="rgb(234,208,2)"/><text x="652.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="649" y="724" width="5" height="15" fill="rgb(253,49,53)"/><text x="652.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="649" y="740" width="5" height="15" fill="rgb(232,177,15)"/><text x="652.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.38%)</title><rect x="649" y="756" width="5" height="15" fill="rgb(221,26,33)"/><text x="652.00" y="766.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.38%)</title><rect x="649" y="772" width="5" height="15" fill="rgb(219,164,45)"/><text x="652.00" y="782.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.38%)</title><rect x="649" y="788" width="5" height="15" fill="rgb(220,43,40)"/><text x="652.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.38%)</title><rect x="649" y="804" width="5" height="15" fill="rgb(248,155,46)"/><text x="652.00" y="814.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.38%)</title><rect x="649" y="820" width="5" height="15" fill="rgb(214,151,38)"/><text x="652.00" y="830.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.38%)</title><rect x="649" y="836" width="5" height="15" fill="rgb(254,77,7)"/><text x="652.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.38%)</title><rect x="649" y="852" width="5" height="15" fill="rgb(221,50,24)"/><text x="652.00" y="862.50"></text></g><g><title>0x7fd167875372 (?) (1 samples, 0.38%)</title><rect x="649" y="868" width="5" height="15" fill="rgb(252,143,42)"/><text x="652.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.38%)</title><rect x="649" y="884" width="5" height="15" fill="rgb(233,70,47)"/><text x="652.00" y="894.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:4) (10 samples, 3.82%)</title><rect x="613" y="52" width="45" height="15" fill="rgb(245,227,51)"/><text x="616.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.82%)</title><rect x="613" y="68" width="45" height="15" fill="rgb(232,204,31)"/><text x="616.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.82%)</title><rect x="613" y="84" width="45" height="15" fill="rgb(247,77,16)"/><text x="616.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.82%)</title><rect x="613" y="100" width="45" height="15" fill="rgb(244,7,22)"/><text x="616.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.82%)</title><rect x="613" y="116" width="45" height="15" fill="rgb(237,10,6)"/><text x="616.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.82%)</title><rect x="613" y="132" width="45" height="15" fill="rgb(227,201,42)"/><text x="616.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_b_cl_probabilityTrue_kernelpoly.py:7) (5 samples, 1.91%)</title><rect x="636" y="148" width="22" height="15" fill="rgb(234,33,42)"/><text x="639.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="636" y="164" width="22" height="15" fill="rgb(228,206,50)"/><text x="639.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="636" y="180" width="22" height="15" fill="rgb(213,185,8)"/><text x="639.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="636" y="196" width="22" height="15" fill="rgb(246,153,19)"/><text x="639.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="636" y="212" width="22" height="15" fill="rgb(207,45,35)"/><text x="639.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="636" y="228" width="22" height="15" fill="rgb(246,225,45)"/><text x="639.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.91%)</title><rect x="636" y="244" width="22" height="15" fill="rgb(254,62,46)"/><text x="639.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="636" y="260" width="22" height="15" fill="rgb(248,172,14)"/><text x="639.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="636" y="276" width="22" height="15" fill="rgb(254,17,12)"/><text x="639.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="636" y="292" width="22" height="15" fill="rgb(221,151,54)"/><text x="639.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="636" y="308" width="22" height="15" fill="rgb(246,173,51)"/><text x="639.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="636" y="324" width="22" height="15" fill="rgb(222,117,14)"/><text x="639.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.91%)</title><rect x="636" y="340" width="22" height="15" fill="rgb(250,17,52)"/><text x="639.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.91%)</title><rect x="636" y="356" width="22" height="15" fill="rgb(246,32,27)"/><text x="639.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.91%)</title><rect x="636" y="372" width="22" height="15" fill="rgb(250,133,25)"/><text x="639.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.91%)</title><rect x="636" y="388" width="22" height="15" fill="rgb(232,151,22)"/><text x="639.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.91%)</title><rect x="636" y="404" width="22" height="15" fill="rgb(218,229,2)"/><text x="639.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.91%)</title><rect x="636" y="420" width="22" height="15" fill="rgb(226,87,4)"/><text x="639.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.38%)</title><rect x="654" y="436" width="4" height="15" fill="rgb(247,4,53)"/><text x="657.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="452" width="4" height="15" fill="rgb(214,52,24)"/><text x="657.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="654" y="468" width="4" height="15" fill="rgb(240,40,34)"/><text x="657.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="484" width="4" height="15" fill="rgb(220,169,49)"/><text x="657.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="500" width="4" height="15" fill="rgb(214,52,42)"/><text x="657.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="516" width="4" height="15" fill="rgb(247,112,29)"/><text x="657.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="532" width="4" height="15" fill="rgb(210,189,31)"/><text x="657.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="548" width="4" height="15" fill="rgb(244,42,4)"/><text x="657.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="564" width="4" height="15" fill="rgb(218,117,32)"/><text x="657.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.38%)</title><rect x="654" y="580" width="4" height="15" fill="rgb(227,35,33)"/><text x="657.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="596" width="4" height="15" fill="rgb(231,220,54)"/><text x="657.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="612" width="4" height="15" fill="rgb(224,70,2)"/><text x="657.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="628" width="4" height="15" fill="rgb(232,199,25)"/><text x="657.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="644" width="4" height="15" fill="rgb(223,224,4)"/><text x="657.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="660" width="4" height="15" fill="rgb(232,200,50)"/><text x="657.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.38%)</title><rect x="654" y="676" width="4" height="15" fill="rgb(233,105,29)"/><text x="657.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="692" width="4" height="15" fill="rgb(217,171,14)"/><text x="657.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="708" width="4" height="15" fill="rgb(239,144,43)"/><text x="657.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="724" width="4" height="15" fill="rgb(209,114,48)"/><text x="657.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="740" width="4" height="15" fill="rgb(230,185,24)"/><text x="657.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="756" width="4" height="15" fill="rgb(225,82,15)"/><text x="657.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.38%)</title><rect x="654" y="772" width="4" height="15" fill="rgb(237,94,8)"/><text x="657.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="788" width="4" height="15" fill="rgb(254,8,10)"/><text x="657.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="804" width="4" height="15" fill="rgb(227,130,24)"/><text x="657.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="820" width="4" height="15" fill="rgb(234,78,0)"/><text x="657.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="836" width="4" height="15" fill="rgb(217,61,17)"/><text x="657.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="852" width="4" height="15" fill="rgb(227,191,25)"/><text x="657.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.38%)</title><rect x="654" y="868" width="4" height="15" fill="rgb(222,144,27)"/><text x="657.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="884" width="4" height="15" fill="rgb(238,171,32)"/><text x="657.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="654" y="900" width="4" height="15" fill="rgb(219,7,41)"/><text x="657.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="916" width="4" height="15" fill="rgb(240,45,3)"/><text x="657.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="932" width="4" height="15" fill="rgb(216,86,51)"/><text x="657.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="948" width="4" height="15" fill="rgb(211,9,7)"/><text x="657.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="964" width="4" height="15" fill="rgb(209,32,43)"/><text x="657.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="980" width="4" height="15" fill="rgb(247,86,0)"/><text x="657.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="996" width="4" height="15" fill="rgb(253,56,21)"/><text x="657.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.38%)</title><rect x="654" y="1012" width="4" height="15" fill="rgb(217,220,0)"/><text x="657.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="1028" width="4" height="15" fill="rgb(229,5,5)"/><text x="657.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="1044" width="4" height="15" fill="rgb(230,37,24)"/><text x="657.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="1060" width="4" height="15" fill="rgb(234,83,47)"/><text x="657.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="1076" width="4" height="15" fill="rgb(212,25,30)"/><text x="657.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="1092" width="4" height="15" fill="rgb(205,69,28)"/><text x="657.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.38%)</title><rect x="654" y="1108" width="4" height="15" fill="rgb(235,215,18)"/><text x="657.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="1124" width="4" height="15" fill="rgb(223,151,5)"/><text x="657.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="1140" width="4" height="15" fill="rgb(251,156,30)"/><text x="657.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="1156" width="4" height="15" fill="rgb(240,227,17)"/><text x="657.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="1172" width="4" height="15" fill="rgb(252,74,11)"/><text x="657.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="1188" width="4" height="15" fill="rgb(207,40,8)"/><text x="657.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.38%)</title><rect x="654" y="1204" width="4" height="15" fill="rgb(249,57,17)"/><text x="657.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="654" y="1220" width="4" height="15" fill="rgb(249,36,40)"/><text x="657.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="654" y="1236" width="4" height="15" fill="rgb(215,86,22)"/><text x="657.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="1252" width="4" height="15" fill="rgb(234,45,25)"/><text x="657.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="654" y="1268" width="4" height="15" fill="rgb(213,9,44)"/><text x="657.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="654" y="1284" width="4" height="15" fill="rgb(231,74,17)"/><text x="657.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.38%)</title><rect x="654" y="1300" width="4" height="15" fill="rgb(222,158,48)"/><text x="657.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.38%)</title><rect x="654" y="1316" width="4" height="15" fill="rgb(232,220,13)"/><text x="657.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.38%)</title><rect x="654" y="1332" width="4" height="15" fill="rgb(230,95,23)"/><text x="657.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.38%)</title><rect x="654" y="1348" width="4" height="15" fill="rgb(210,42,5)"/><text x="657.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.38%)</title><rect x="654" y="1364" width="4" height="15" fill="rgb(214,90,41)"/><text x="657.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:589) (1 samples, 0.38%)</title><rect x="654" y="1380" width="4" height="15" fill="rgb(215,182,25)"/><text x="657.00" y="1390.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.38%)</title><rect x="654" y="1396" width="4" height="15" fill="rgb(220,119,34)"/><text x="657.00" y="1406.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:22) (1 samples, 0.38%)</title><rect x="658" y="100" width="5" height="15" fill="rgb(225,45,0)"/><text x="661.00" y="110.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (3 samples, 1.15%)</title><rect x="672" y="164" width="13" height="15" fill="rgb(240,206,40)"/><text x="675.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.38%)</title><rect x="685" y="164" width="5" height="15" fill="rgb(224,34,22)"/><text x="688.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.38%)</title><rect x="708" y="180" width="4" height="15" fill="rgb(205,63,52)"/><text x="711.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 1.91%)</title><rect x="712" y="180" width="23" height="15" fill="rgb(234,215,9)"/><text x="715.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.38%)</title><rect x="730" y="196" width="5" height="15" fill="rgb(250,206,22)"/><text x="733.00" y="206.50"></text></g><g><title>0x7fd173215120 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="748" y="196" width="5" height="15" fill="rgb(239,167,40)"/><text x="751.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.38%)</title><rect x="762" y="244" width="4" height="15" fill="rgb(244,10,50)"/><text x="765.00" y="254.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.38%)</title><rect x="766" y="276" width="5" height="15" fill="rgb(227,225,1)"/><text x="769.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="766" y="292" width="5" height="15" fill="rgb(229,150,46)"/><text x="769.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 1.53%)</title><rect x="757" y="212" width="18" height="15" fill="rgb(242,191,50)"/><text x="760.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 1.53%)</title><rect x="757" y="228" width="18" height="15" fill="rgb(206,35,53)"/><text x="760.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.76%)</title><rect x="766" y="244" width="9" height="15" fill="rgb(254,147,10)"/><text x="769.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.76%)</title><rect x="766" y="260" width="9" height="15" fill="rgb(210,156,8)"/><text x="769.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.38%)</title><rect x="771" y="276" width="4" height="15" fill="rgb(252,74,51)"/><text x="774.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.38%)</title><rect x="771" y="292" width="4" height="15" fill="rgb(212,225,12)"/><text x="774.00" y="302.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (2 samples, 0.76%)</title><rect x="775" y="228" width="9" height="15" fill="rgb(239,62,6)"/><text x="778.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (8 samples, 3.05%)</title><rect x="753" y="196" width="36" height="15" fill="rgb(249,135,29)"/><text x="756.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 1.15%)</title><rect x="775" y="212" width="14" height="15" fill="rgb(217,219,47)"/><text x="778.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.38%)</title><rect x="784" y="228" width="5" height="15" fill="rgb(229,71,54)"/><text x="787.00" y="238.50"></text></g><g><title>0x7fd134363c29 (?) (1 samples, 0.38%)</title><rect x="798" y="244" width="4" height="15" fill="rgb(228,188,28)"/><text x="801.00" y="254.50"></text></g><g><title>0x7fd13436ad9e (?) (1 samples, 0.38%)</title><rect x="798" y="260" width="4" height="15" fill="rgb(244,185,46)"/><text x="801.00" y="270.50"></text></g><g><title>0x7fd13436ac56 (?) (1 samples, 0.38%)</title><rect x="798" y="276" width="4" height="15" fill="rgb(242,42,45)"/><text x="801.00" y="286.50"></text></g><g><title>0x7fd134370a99 (?) (1 samples, 0.38%)</title><rect x="798" y="292" width="4" height="15" fill="rgb(227,52,19)"/><text x="801.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="798" y="308" width="4" height="15" fill="rgb(247,129,29)"/><text x="801.00" y="318.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (cast.h:44) (1 samples, 0.38%)</title><rect x="802" y="260" width="5" height="15" fill="rgb(239,228,17)"/><text x="805.00" y="270.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.38%)</title><rect x="802" y="276" width="5" height="15" fill="rgb(222,106,42)"/><text x="805.00" y="286.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::emplace_back&lt;_object*&gt; (vector.tcc:94) (1 samples, 0.38%)</title><rect x="802" y="292" width="5" height="15" fill="rgb(208,90,21)"/><text x="805.00" y="302.50"></text></g><g><title>pybind11::detail::get_internals (internals.h:234) (1 samples, 0.38%)</title><rect x="802" y="308" width="5" height="15" fill="rgb(238,126,53)"/><text x="805.00" y="318.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.38%)</title><rect x="807" y="276" width="4" height="15" fill="rgb(220,74,51)"/><text x="810.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.38%)</title><rect x="807" y="292" width="4" height="15" fill="rgb(224,37,14)"/><text x="810.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.38%)</title><rect x="807" y="308" width="4" height="15" fill="rgb(241,163,9)"/><text x="810.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.38%)</title><rect x="807" y="324" width="4" height="15" fill="rgb(242,36,28)"/><text x="810.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.38%)</title><rect x="807" y="340" width="4" height="15" fill="rgb(250,99,39)"/><text x="810.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.38%)</title><rect x="807" y="356" width="4" height="15" fill="rgb(216,105,10)"/><text x="810.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.38%)</title><rect x="807" y="372" width="4" height="15" fill="rgb(238,45,41)"/><text x="810.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.38%)</title><rect x="807" y="388" width="4" height="15" fill="rgb(213,214,0)"/><text x="810.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.38%)</title><rect x="807" y="404" width="4" height="15" fill="rgb(226,134,24)"/><text x="810.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="807" y="420" width="4" height="15" fill="rgb(234,108,15)"/><text x="810.00" y="430.50"></text></g><g><title>pybind11::detail::type_caster_generic::load (cast.h:492) (1 samples, 0.38%)</title><rect x="811" y="324" width="5" height="15" fill="rgb(244,33,12)"/><text x="814.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (cast.h:673) (1 samples, 0.38%)</title><rect x="811" y="340" width="5" height="15" fill="rgb(231,213,27)"/><text x="814.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value (cast.h:572) (1 samples, 0.38%)</title><rect x="811" y="356" width="5" height="15" fill="rgb(214,108,5)"/><text x="814.00" y="366.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (2 samples, 0.76%)</title><rect x="811" y="276" width="9" height="15" fill="rgb(246,99,10)"/><text x="814.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (2 samples, 0.76%)</title><rect x="811" y="292" width="9" height="15" fill="rgb(225,123,12)"/><text x="814.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1927) (2 samples, 0.76%)</title><rect x="811" y="308" width="9" height="15" fill="rgb(238,195,5)"/><text x="814.00" y="318.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h:81) (1 samples, 0.38%)</title><rect x="816" y="324" width="4" height="15" fill="rgb(233,154,37)"/><text x="819.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (cast.h:486) (1 samples, 0.38%)</title><rect x="816" y="340" width="4" height="15" fill="rgb(215,149,29)"/><text x="819.00" y="350.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h:188) (1 samples, 0.38%)</title><rect x="816" y="356" width="4" height="15" fill="rgb(239,145,5)"/><text x="819.00" y="366.50"></text></g><g><title>pybind11::detail::get_local_type_info (cast.h:171) (1 samples, 0.38%)</title><rect x="816" y="372" width="4" height="15" fill="rgb(241,160,13)"/><text x="819.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h:851) (1 samples, 0.38%)</title><rect x="816" y="388" width="4" height="15" fill="rgb(207,60,20)"/><text x="819.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1292) (1 samples, 0.38%)</title><rect x="816" y="404" width="4" height="15" fill="rgb(214,153,43)"/><text x="819.00" y="414.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (hashtable_policy.h:1167) (1 samples, 0.38%)</title><rect x="816" y="420" width="4" height="15" fill="rgb(250,92,27)"/><text x="819.00" y="430.50"></text></g><g><title>std::hash&lt;std::type_index&gt;::operator() (typeindex:104) (1 samples, 0.38%)</title><rect x="816" y="436" width="4" height="15" fill="rgb(246,108,41)"/><text x="819.00" y="446.50"></text></g><g><title>std::type_index::hash_code (typeindex:83) (1 samples, 0.38%)</title><rect x="816" y="452" width="4" height="15" fill="rgb(217,128,15)"/><text x="819.00" y="462.50"></text></g><g><title>std::type_info::hash_code (typeinfo:143) (1 samples, 0.38%)</title><rect x="816" y="468" width="4" height="15" fill="rgb(206,175,54)"/><text x="819.00" y="478.50"></text></g><g><title>std::type_info::name (typeinfo:100) (1 samples, 0.38%)</title><rect x="816" y="484" width="4" height="15" fill="rgb(239,160,43)"/><text x="819.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (1 samples, 0.38%)</title><rect x="820" y="452" width="5" height="15" fill="rgb(224,210,7)"/><text x="823.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (1 samples, 0.38%)</title><rect x="820" y="468" width="5" height="15" fill="rgb(207,225,45)"/><text x="823.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (1 samples, 0.38%)</title><rect x="820" y="484" width="5" height="15" fill="rgb(241,35,12)"/><text x="823.00" y="494.50"></text></g><g><title>0x7fd173373e71 (libm-2.29.so) (1 samples, 0.38%)</title><rect x="820" y="500" width="5" height="15" fill="rgb(247,200,39)"/><text x="823.00" y="510.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (7 samples, 2.67%)</title><rect x="798" y="228" width="31" height="15" fill="rgb(246,193,25)"/><text x="801.00" y="238.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (6 samples, 2.29%)</title><rect x="802" y="244" width="27" height="15" fill="rgb(236,222,45)"/><text x="805.00" y="254.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (5 samples, 1.91%)</title><rect x="807" y="260" width="22" height="15" fill="rgb(225,203,51)"/><text x="810.00" y="270.50">v..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (2 samples, 0.76%)</title><rect x="820" y="276" width="9" height="15" fill="rgb(211,106,36)"/><text x="823.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (2 samples, 0.76%)</title><rect x="820" y="292" width="9" height="15" fill="rgb(245,11,37)"/><text x="823.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (2 samples, 0.76%)</title><rect x="820" y="308" width="9" height="15" fill="rgb(242,147,2)"/><text x="823.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (2 samples, 0.76%)</title><rect x="820" y="324" width="9" height="15" fill="rgb(210,214,22)"/><text x="823.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (2 samples, 0.76%)</title><rect x="820" y="340" width="9" height="15" fill="rgb(252,65,54)"/><text x="823.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (2 samples, 0.76%)</title><rect x="820" y="356" width="9" height="15" fill="rgb(250,134,17)"/><text x="823.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (2 samples, 0.76%)</title><rect x="820" y="372" width="9" height="15" fill="rgb(213,24,6)"/><text x="823.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (2 samples, 0.76%)</title><rect x="820" y="388" width="9" height="15" fill="rgb(214,101,45)"/><text x="823.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (2 samples, 0.76%)</title><rect x="820" y="404" width="9" height="15" fill="rgb(237,183,44)"/><text x="823.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (2 samples, 0.76%)</title><rect x="820" y="420" width="9" height="15" fill="rgb(212,12,18)"/><text x="823.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (2 samples, 0.76%)</title><rect x="820" y="436" width="9" height="15" fill="rgb(231,168,41)"/><text x="823.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (1 samples, 0.38%)</title><rect x="825" y="452" width="4" height="15" fill="rgb(229,15,27)"/><text x="828.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.38%)</title><rect x="825" y="468" width="4" height="15" fill="rgb(242,201,32)"/><text x="828.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (1 samples, 0.38%)</title><rect x="825" y="484" width="4" height="15" fill="rgb(229,96,14)"/><text x="828.00" y="494.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.38%)</title><rect x="829" y="244" width="5" height="15" fill="rgb(219,69,25)"/><text x="832.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.38%)</title><rect x="829" y="260" width="5" height="15" fill="rgb(237,11,14)"/><text x="832.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (11 samples, 4.20%)</title><rect x="789" y="196" width="49" height="15" fill="rgb(242,69,20)"/><text x="792.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (11 samples, 4.20%)</title><rect x="789" y="212" width="49" height="15" fill="rgb(252,16,25)"/><text x="792.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (2 samples, 0.76%)</title><rect x="829" y="228" width="9" height="15" fill="rgb(206,175,35)"/><text x="832.00" y="238.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.38%)</title><rect x="834" y="244" width="4" height="15" fill="rgb(236,163,45)"/><text x="837.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.38%)</title><rect x="834" y="260" width="4" height="15" fill="rgb(251,94,40)"/><text x="837.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.38%)</title><rect x="834" y="276" width="4" height="15" fill="rgb(224,11,14)"/><text x="837.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.38%)</title><rect x="834" y="292" width="4" height="15" fill="rgb(247,87,49)"/><text x="837.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.38%)</title><rect x="834" y="308" width="4" height="15" fill="rgb(218,168,37)"/><text x="837.00" y="318.50"></text></g><g><title>0x7fd1732d2134 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="847" y="212" width="5" height="15" fill="rgb(248,55,7)"/><text x="850.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (27 samples, 10.31%)</title><rect x="735" y="180" width="121" height="15" fill="rgb(209,129,29)"/><text x="738.00" y="190.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (4 samples, 1.53%)</title><rect x="838" y="196" width="18" height="15" fill="rgb(251,103,37)"/><text x="841.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3273) (1 samples, 0.38%)</title><rect x="852" y="212" width="4" height="15" fill="rgb(205,58,18)"/><text x="855.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 1.15%)</title><rect x="856" y="180" width="14" height="15" fill="rgb(211,165,35)"/><text x="859.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.38%)</title><rect x="870" y="180" width="4" height="15" fill="rgb(222,55,24)"/><text x="873.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 2.29%)</title><rect x="874" y="180" width="27" height="15" fill="rgb(205,87,52)"/><text x="877.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (48 samples, 18.32%)</title><rect x="690" y="164" width="216" height="15" fill="rgb(246,124,42)"/><text x="693.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.38%)</title><rect x="901" y="180" width="5" height="15" fill="rgb(250,41,11)"/><text x="904.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 1.15%)</title><rect x="906" y="164" width="13" height="15" fill="rgb(230,171,19)"/><text x="909.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.76%)</title><rect x="910" y="180" width="9" height="15" fill="rgb(233,71,30)"/><text x="913.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.38%)</title><rect x="919" y="164" width="5" height="15" fill="rgb(252,190,33)"/><text x="922.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="924" y="164" width="4" height="15" fill="rgb(229,57,19)"/><text x="927.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="924" y="180" width="4" height="15" fill="rgb(247,124,32)"/><text x="927.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.38%)</title><rect x="924" y="196" width="4" height="15" fill="rgb(214,64,48)"/><text x="927.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:45) (61 samples, 23.28%)</title><rect x="658" y="52" width="275" height="15" fill="rgb(251,217,29)"/><text x="661.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_probab..</text></g><g><title>profile_pyrt (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:44) (61 samples, 23.28%)</title><rect x="658" y="68" width="275" height="15" fill="rgb(205,1,34)"/><text x="661.00" y="78.50">profile_pyrt (bench_SVC_poly_b_cl_pr..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29) (61 samples, 23.28%)</title><rect x="658" y="84" width="275" height="15" fill="rgb(253,117,51)"/><text x="661.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_p..</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23) (60 samples, 22.90%)</title><rect x="663" y="100" width="270" height="15" fill="rgb(246,78,18)"/><text x="666.00" y="110.50">profile (bench_SVC_poly_b_cl_probabi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (60 samples, 22.90%)</title><rect x="663" y="116" width="270" height="15" fill="rgb(237,178,1)"/><text x="666.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (60 samples, 22.90%)</title><rect x="663" y="132" width="270" height="15" fill="rgb(238,175,4)"/><text x="666.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (59 samples, 22.52%)</title><rect x="667" y="148" width="266" height="15" fill="rgb(216,26,24)"/><text x="670.00" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.38%)</title><rect x="928" y="164" width="5" height="15" fill="rgb(254,35,14)"/><text x="931.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.38%)</title><rect x="928" y="180" width="5" height="15" fill="rgb(232,185,50)"/><text x="931.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.38%)</title><rect x="928" y="196" width="5" height="15" fill="rgb(244,177,22)"/><text x="931.00" y="206.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:22) (1 samples, 0.38%)</title><rect x="933" y="100" width="4" height="15" fill="rgb(248,162,41)"/><text x="936.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="937" y="116" width="5" height="15" fill="rgb(253,88,19)"/><text x="940.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="937" y="132" width="5" height="15" fill="rgb(251,211,11)"/><text x="940.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.38%)</title><rect x="937" y="148" width="5" height="15" fill="rgb(250,79,19)"/><text x="940.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.38%)</title><rect x="982" y="196" width="5" height="15" fill="rgb(241,164,14)"/><text x="985.00" y="206.50"></text></g><g><title>0x7fd13326546c (?) (1 samples, 0.38%)</title><rect x="996" y="228" width="4" height="15" fill="rgb(254,189,13)"/><text x="999.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="996" y="244" width="4" height="15" fill="rgb(238,24,30)"/><text x="999.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="996" y="260" width="4" height="15" fill="rgb(230,228,8)"/><text x="999.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (4 samples, 1.53%)</title><rect x="987" y="196" width="18" height="15" fill="rgb(241,49,19)"/><text x="990.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.53%)</title><rect x="987" y="212" width="18" height="15" fill="rgb(215,33,48)"/><text x="990.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1000" y="228" width="5" height="15" fill="rgb(227,218,44)"/><text x="1003.00" y="238.50"></text></g><g><title>0x7ffe71deda01 ([vdso]) (1 samples, 0.38%)</title><rect x="1014" y="212" width="4" height="15" fill="rgb(233,145,30)"/><text x="1017.00" y="222.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1018" y="292" width="5" height="15" fill="rgb(224,110,50)"/><text x="1021.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1018" y="308" width="5" height="15" fill="rgb(252,199,10)"/><text x="1021.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1018" y="324" width="5" height="15" fill="rgb(234,99,53)"/><text x="1021.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1023" y="292" width="4" height="15" fill="rgb(227,186,50)"/><text x="1026.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1023" y="308" width="4" height="15" fill="rgb(225,120,54)"/><text x="1026.00" y="318.50"></text></g><g><title>0x7fd1731f4991 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1023" y="324" width="4" height="15" fill="rgb(225,25,0)"/><text x="1026.00" y="334.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="340" width="5" height="15" fill="rgb(241,100,53)"/><text x="1039.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="356" width="5" height="15" fill="rgb(245,123,18)"/><text x="1039.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="372" width="5" height="15" fill="rgb(230,155,51)"/><text x="1039.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="388" width="5" height="15" fill="rgb(249,182,4)"/><text x="1039.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="404" width="5" height="15" fill="rgb(225,142,8)"/><text x="1039.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="420" width="5" height="15" fill="rgb(213,2,25)"/><text x="1039.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="436" width="5" height="15" fill="rgb(239,95,43)"/><text x="1039.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="452" width="5" height="15" fill="rgb(226,158,39)"/><text x="1039.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="468" width="5" height="15" fill="rgb(226,47,53)"/><text x="1039.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1036" y="484" width="5" height="15" fill="rgb(226,227,12)"/><text x="1039.00" y="494.50"></text></g><g><title>0x7fd173214db3 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1036" y="500" width="5" height="15" fill="rgb(209,6,41)"/><text x="1039.00" y="510.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1041" y="340" width="4" height="15" fill="rgb(222,212,9)"/><text x="1044.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1041" y="356" width="4" height="15" fill="rgb(242,0,44)"/><text x="1044.00" y="366.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1045" y="340" width="5" height="15" fill="rgb(246,117,16)"/><text x="1048.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1050" y="356" width="4" height="15" fill="rgb(245,10,5)"/><text x="1053.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1054" y="356" width="9" height="15" fill="rgb(240,200,46)"/><text x="1057.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1063" y="356" width="9" height="15" fill="rgb(216,168,53)"/><text x="1066.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1063" y="372" width="9" height="15" fill="rgb(210,115,18)"/><text x="1066.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1063" y="388" width="9" height="15" fill="rgb(246,86,43)"/><text x="1066.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1063" y="404" width="9" height="15" fill="rgb(207,172,49)"/><text x="1066.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1063" y="420" width="9" height="15" fill="rgb(233,64,46)"/><text x="1066.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1063" y="436" width="9" height="15" fill="rgb(240,159,13)"/><text x="1066.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1068" y="452" width="4" height="15" fill="rgb(224,82,0)"/><text x="1071.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1068" y="468" width="4" height="15" fill="rgb(246,165,32)"/><text x="1071.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1068" y="484" width="4" height="15" fill="rgb(212,157,34)"/><text x="1071.00" y="494.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1072" y="356" width="5" height="15" fill="rgb(206,66,30)"/><text x="1075.00" y="366.50"></text></g><g><title>0x7fd17335ed2b (libm-2.29.so) (1 samples, 0.38%)</title><rect x="1081" y="372" width="5" height="15" fill="rgb(246,105,13)"/><text x="1084.00" y="382.50"></text></g><g><title>0x7fd17335ed47 (libm-2.29.so) (1 samples, 0.38%)</title><rect x="1086" y="372" width="4" height="15" fill="rgb(217,35,3)"/><text x="1089.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (4 samples, 1.53%)</title><rect x="1077" y="356" width="18" height="15" fill="rgb(234,174,39)"/><text x="1080.00" y="366.50"></text></g><g><title>0x7fd17335eda2 (libm-2.29.so) (1 samples, 0.38%)</title><rect x="1090" y="372" width="5" height="15" fill="rgb(229,191,40)"/><text x="1093.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.20%)</title><rect x="1050" y="340" width="49" height="15" fill="rgb(253,21,10)"/><text x="1053.00" y="350.50">onnx..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1095" y="356" width="4" height="15" fill="rgb(222,39,26)"/><text x="1098.00" y="366.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.49%)</title><rect x="1027" y="324" width="77" height="15" fill="rgb(216,124,48)"/><text x="1030.00" y="334.50">onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1099" y="340" width="5" height="15" fill="rgb(207,101,18)"/><text x="1102.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.63%)</title><rect x="1018" y="260" width="90" height="15" fill="rgb(252,6,19)"/><text x="1021.00" y="270.50">onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.63%)</title><rect x="1018" y="276" width="90" height="15" fill="rgb(214,1,44)"/><text x="1021.00" y="286.50">onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 6.87%)</title><rect x="1027" y="292" width="81" height="15" fill="rgb(212,32,30)"/><text x="1030.00" y="302.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 6.87%)</title><rect x="1027" y="308" width="81" height="15" fill="rgb(213,9,48)"/><text x="1030.00" y="318.50">onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::~SequentialExecutor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1104" y="324" width="4" height="15" fill="rgb(230,118,17)"/><text x="1107.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1108" y="260" width="9" height="15" fill="rgb(205,146,0)"/><text x="1111.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1113" y="276" width="4" height="15" fill="rgb(222,109,47)"/><text x="1116.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1117" y="260" width="5" height="15" fill="rgb(207,27,34)"/><text x="1120.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.38%)</title><rect x="1117" y="276" width="5" height="15" fill="rgb(228,26,17)"/><text x="1120.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.38%)</title><rect x="1117" y="292" width="5" height="15" fill="rgb(238,137,7)"/><text x="1120.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.38%)</title><rect x="1117" y="308" width="5" height="15" fill="rgb(207,157,33)"/><text x="1120.00" y="318.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1122" y="260" width="4" height="15" fill="rgb(211,118,14)"/><text x="1125.00" y="270.50"></text></g><g><title>0x7fd1731f4971 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1131" y="276" width="4" height="15" fill="rgb(225,132,20)"/><text x="1134.00" y="286.50"></text></g><g><title>0x7fd1731f4d07 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1135" y="276" width="5" height="15" fill="rgb(241,45,43)"/><text x="1138.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 10.69%)</title><rect x="1018" y="244" width="126" height="15" fill="rgb(254,207,3)"/><text x="1021.00" y="254.50">onnxruntime::py..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.53%)</title><rect x="1126" y="260" width="18" height="15" fill="rgb(225,209,20)"/><text x="1129.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="276" width="4" height="15" fill="rgb(229,165,23)"/><text x="1143.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="292" width="4" height="15" fill="rgb(214,43,0)"/><text x="1143.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="308" width="4" height="15" fill="rgb(229,227,40)"/><text x="1143.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="324" width="4" height="15" fill="rgb(220,49,7)"/><text x="1143.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="340" width="4" height="15" fill="rgb(251,54,7)"/><text x="1143.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="356" width="4" height="15" fill="rgb(215,204,37)"/><text x="1143.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="372" width="4" height="15" fill="rgb(210,42,13)"/><text x="1143.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1140" y="388" width="4" height="15" fill="rgb(228,118,23)"/><text x="1143.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.15%)</title><rect x="1144" y="244" width="14" height="15" fill="rgb(248,45,15)"/><text x="1147.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.76%)</title><rect x="1149" y="260" width="9" height="15" fill="rgb(254,160,9)"/><text x="1152.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (2 samples, 0.76%)</title><rect x="1149" y="276" width="9" height="15" fill="rgb(234,46,45)"/><text x="1152.00" y="286.50"></text></g><g><title>0x7fd173214d50 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1153" y="292" width="5" height="15" fill="rgb(235,206,22)"/><text x="1156.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (43 samples, 16.41%)</title><rect x="969" y="164" width="193" height="15" fill="rgb(222,27,9)"/><text x="972.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (43 samples, 16.41%)</title><rect x="969" y="180" width="193" height="15" fill="rgb(230,77,49)"/><text x="972.00" y="190.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (onnxruntime/capi/session.py:136) (35 samples, 13.36%)</title><rect x="1005" y="196" width="157" height="15" fill="rgb(210,188,51)"/><text x="1008.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 12.21%)</title><rect x="1018" y="212" width="144" height="15" fill="rgb(213,90,42)"/><text x="1021.00" y="222.50">pybind11::cpp_func..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 12.21%)</title><rect x="1018" y="228" width="144" height="15" fill="rgb(216,157,31)"/><text x="1021.00" y="238.50">void pybind11::cpp..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1158" y="244" width="4" height="15" fill="rgb(222,127,14)"/><text x="1161.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1158" y="260" width="4" height="15" fill="rgb(227,15,11)"/><text x="1161.00" y="270.50"></text></g><g><title>all (262 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(230,89,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:52) (57 samples, 21.76%)</title><rect x="933" y="52" width="257" height="15" fill="rgb(230,155,52)"/><text x="936.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_prob..</text></g><g><title>profile_ort (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:51) (57 samples, 21.76%)</title><rect x="933" y="68" width="257" height="15" fill="rgb(210,218,16)"/><text x="936.00" y="78.50">profile_ort (bench_SVC_poly_b_cl_p..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29) (57 samples, 21.76%)</title><rect x="933" y="84" width="257" height="15" fill="rgb(209,134,34)"/><text x="936.00" y="94.50">setup_profile (bench_SVC_poly_b_cl..</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23) (56 samples, 21.37%)</title><rect x="937" y="100" width="253" height="15" fill="rgb(206,170,40)"/><text x="940.00" y="110.50">profile (bench_SVC_poly_b_cl_prob..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (55 samples, 20.99%)</title><rect x="942" y="116" width="248" height="15" fill="rgb(249,87,36)"/><text x="945.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (54 samples, 20.61%)</title><rect x="946" y="132" width="244" height="15" fill="rgb(221,69,26)"/><text x="949.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (50 samples, 19.08%)</title><rect x="964" y="148" width="226" height="15" fill="rgb(231,91,11)"/><text x="967.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (6 samples, 2.29%)</title><rect x="1162" y="164" width="28" height="15" fill="rgb(209,174,22)"/><text x="1165.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.76%)</title><rect x="1180" y="180" width="10" height="15" fill="rgb(215,99,46)"/><text x="1183.00" y="190.50"></text></g></g></svg>