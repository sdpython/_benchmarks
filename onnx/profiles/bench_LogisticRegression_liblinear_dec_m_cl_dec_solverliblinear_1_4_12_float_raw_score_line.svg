<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2278" onload="init(evt)" viewBox="0 0 1200 2278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2278" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2261.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2261.00"> </text><g id="frames"><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.46%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(251,3,32)"/><text x="13.00" y="174.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.46%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(229,125,44)"/><text x="13.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (2 samples, 0.91%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(210,136,10)"/><text x="13.00" y="158.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.46%)</title><rect x="15" y="164" width="5" height="15" fill="rgb(242,192,21)"/><text x="18.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.46%)</title><rect x="15" y="180" width="5" height="15" fill="rgb(221,127,13)"/><text x="18.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.46%)</title><rect x="15" y="196" width="5" height="15" fill="rgb(217,99,9)"/><text x="18.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:18) (3 samples, 1.37%)</title><rect x="10" y="100" width="16" height="15" fill="rgb(241,182,25)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 1.37%)</title><rect x="10" y="116" width="16" height="15" fill="rgb(241,226,32)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (3 samples, 1.37%)</title><rect x="10" y="132" width="16" height="15" fill="rgb(241,208,9)"/><text x="13.00" y="142.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.46%)</title><rect x="20" y="148" width="6" height="15" fill="rgb(231,195,21)"/><text x="23.00" y="158.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.46%)</title><rect x="20" y="164" width="6" height="15" fill="rgb(217,128,46)"/><text x="23.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.46%)</title><rect x="20" y="180" width="6" height="15" fill="rgb(226,154,1)"/><text x="23.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.46%)</title><rect x="20" y="196" width="6" height="15" fill="rgb(242,140,13)"/><text x="23.00" y="206.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.46%)</title><rect x="20" y="212" width="6" height="15" fill="rgb(227,94,0)"/><text x="23.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.46%)</title><rect x="20" y="228" width="6" height="15" fill="rgb(251,132,0)"/><text x="23.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.46%)</title><rect x="20" y="244" width="6" height="15" fill="rgb(208,57,27)"/><text x="23.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.46%)</title><rect x="20" y="260" width="6" height="15" fill="rgb(227,83,17)"/><text x="23.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.46%)</title><rect x="20" y="276" width="6" height="15" fill="rgb(225,3,10)"/><text x="23.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="20" y="292" width="6" height="15" fill="rgb(207,62,32)"/><text x="23.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.46%)</title><rect x="63" y="164" width="6" height="15" fill="rgb(208,186,39)"/><text x="66.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.46%)</title><rect x="63" y="180" width="6" height="15" fill="rgb(217,37,32)"/><text x="66.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.46%)</title><rect x="69" y="164" width="5" height="15" fill="rgb(231,60,46)"/><text x="72.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.37%)</title><rect x="96" y="196" width="16" height="15" fill="rgb(248,125,36)"/><text x="99.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (11 samples, 5.02%)</title><rect x="58" y="148" width="59" height="15" fill="rgb(211,13,18)"/><text x="61.00" y="158.50">decisi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 3.65%)</title><rect x="74" y="164" width="43" height="15" fill="rgb(246,195,18)"/><text x="77.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 3.65%)</title><rect x="74" y="180" width="43" height="15" fill="rgb(211,181,34)"/><text x="77.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.46%)</title><rect x="112" y="196" width="5" height="15" fill="rgb(217,162,36)"/><text x="115.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.46%)</title><rect x="117" y="164" width="6" height="15" fill="rgb(239,88,11)"/><text x="120.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.46%)</title><rect x="123" y="164" width="5" height="15" fill="rgb(212,58,27)"/><text x="126.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.91%)</title><rect x="128" y="164" width="11" height="15" fill="rgb(244,217,30)"/><text x="131.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.46%)</title><rect x="139" y="164" width="5" height="15" fill="rgb(233,68,18)"/><text x="142.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.46%)</title><rect x="144" y="164" width="6" height="15" fill="rgb(211,59,37)"/><text x="147.00" y="174.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.46%)</title><rect x="155" y="180" width="5" height="15" fill="rgb(228,9,18)"/><text x="158.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 1.37%)</title><rect x="150" y="164" width="16" height="15" fill="rgb(250,160,25)"/><text x="153.00" y="174.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.46%)</title><rect x="160" y="180" width="6" height="15" fill="rgb(254,156,19)"/><text x="163.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.37%)</title><rect x="171" y="196" width="16" height="15" fill="rgb(225,115,43)"/><text x="174.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 2.28%)</title><rect x="166" y="164" width="27" height="15" fill="rgb(226,29,50)"/><text x="169.00" y="174.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.83%)</title><rect x="171" y="180" width="22" height="15" fill="rgb(246,86,40)"/><text x="174.00" y="190.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.46%)</title><rect x="187" y="196" width="6" height="15" fill="rgb(231,1,40)"/><text x="190.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (5 samples, 2.28%)</title><rect x="193" y="164" width="27" height="15" fill="rgb(208,92,42)"/><text x="196.00" y="174.50">c..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 1.83%)</title><rect x="198" y="180" width="22" height="15" fill="rgb(232,47,9)"/><text x="201.00" y="190.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c:1646) (1 samples, 0.46%)</title><rect x="214" y="196" width="6" height="15" fill="rgb(221,134,16)"/><text x="217.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.83%)</title><rect x="220" y="164" width="21" height="15" fill="rgb(213,94,47)"/><text x="223.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.91%)</title><rect x="230" y="180" width="11" height="15" fill="rgb(211,131,24)"/><text x="233.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.46%)</title><rect x="241" y="164" width="6" height="15" fill="rgb(242,191,40)"/><text x="244.00" y="174.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.46%)</title><rect x="252" y="196" width="5" height="15" fill="rgb(248,5,4)"/><text x="255.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 1.37%)</title><rect x="247" y="180" width="16" height="15" fill="rgb(238,169,31)"/><text x="250.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.46%)</title><rect x="257" y="196" width="6" height="15" fill="rgb(205,45,8)"/><text x="260.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 1.83%)</title><rect x="247" y="164" width="21" height="15" fill="rgb(240,108,12)"/><text x="250.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.46%)</title><rect x="263" y="180" width="5" height="15" fill="rgb(208,18,46)"/><text x="266.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.46%)</title><rect x="263" y="196" width="5" height="15" fill="rgb(232,56,49)"/><text x="266.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.46%)</title><rect x="268" y="164" width="6" height="15" fill="rgb(253,89,43)"/><text x="271.00" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.37%)</title><rect x="306" y="196" width="16" height="15" fill="rgb(226,220,16)"/><text x="309.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.46%)</title><rect x="322" y="196" width="5" height="15" fill="rgb(232,205,22)"/><text x="325.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 5.48%)</title><rect x="274" y="164" width="64" height="15" fill="rgb(228,171,51)"/><text x="277.00" y="174.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (12 samples, 5.48%)</title><rect x="274" y="180" width="64" height="15" fill="rgb(215,64,15)"/><text x="277.00" y="190.50">_assert..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.91%)</title><rect x="327" y="196" width="11" height="15" fill="rgb(212,186,46)"/><text x="330.00" y="206.50"></text></g><g><title>0x7f1a8a0d56fa (libc-2.29.so) (1 samples, 0.46%)</title><rect x="333" y="212" width="5" height="15" fill="rgb(224,214,40)"/><text x="336.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.46%)</title><rect x="338" y="180" width="6" height="15" fill="rgb(251,195,25)"/><text x="341.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.91%)</title><rect x="344" y="180" width="10" height="15" fill="rgb(236,22,49)"/><text x="347.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.91%)</title><rect x="354" y="180" width="11" height="15" fill="rgb(227,55,43)"/><text x="357.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.46%)</title><rect x="360" y="196" width="5" height="15" fill="rgb(215,33,42)"/><text x="363.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 2.28%)</title><rect x="365" y="180" width="27" height="15" fill="rgb(249,77,51)"/><text x="368.00" y="190.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.37%)</title><rect x="376" y="196" width="16" height="15" fill="rgb(223,11,45)"/><text x="379.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.91%)</title><rect x="381" y="212" width="11" height="15" fill="rgb(242,155,15)"/><text x="384.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (53 samples, 24.20%)</title><rect x="117" y="148" width="286" height="15" fill="rgb(235,205,23)"/><text x="120.00" y="158.50">decision_function (sklearn/linear_mode..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 5.48%)</title><rect x="338" y="164" width="65" height="15" fill="rgb(226,32,25)"/><text x="341.00" y="174.50">check_a..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (2 samples, 0.91%)</title><rect x="392" y="180" width="11" height="15" fill="rgb(221,224,46)"/><text x="395.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.46%)</title><rect x="397" y="196" width="6" height="15" fill="rgb(221,207,12)"/><text x="400.00" y="206.50"></text></g><g><title>0x7f1a8a0e514e (libc-2.29.so) (1 samples, 0.46%)</title><rect x="397" y="212" width="6" height="15" fill="rgb(242,212,10)"/><text x="400.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.46%)</title><rect x="403" y="148" width="5" height="15" fill="rgb(251,102,39)"/><text x="406.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.46%)</title><rect x="408" y="180" width="6" height="15" fill="rgb(248,193,7)"/><text x="411.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.46%)</title><rect x="408" y="196" width="6" height="15" fill="rgb(219,220,29)"/><text x="411.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.46%)</title><rect x="408" y="212" width="6" height="15" fill="rgb(214,91,45)"/><text x="411.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.46%)</title><rect x="408" y="228" width="6" height="15" fill="rgb(236,212,27)"/><text x="411.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.46%)</title><rect x="414" y="196" width="5" height="15" fill="rgb(242,116,11)"/><text x="417.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.46%)</title><rect x="414" y="212" width="5" height="15" fill="rgb(229,19,22)"/><text x="417.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.91%)</title><rect x="414" y="180" width="10" height="15" fill="rgb(224,205,43)"/><text x="417.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.46%)</title><rect x="419" y="196" width="5" height="15" fill="rgb(213,124,43)"/><text x="422.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.46%)</title><rect x="419" y="212" width="5" height="15" fill="rgb(251,149,47)"/><text x="422.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.46%)</title><rect x="419" y="228" width="5" height="15" fill="rgb(251,129,6)"/><text x="422.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.46%)</title><rect x="419" y="244" width="5" height="15" fill="rgb(244,90,5)"/><text x="422.00" y="254.50"></text></g><g><title>array_add (number.c:330) (4 samples, 1.83%)</title><rect x="408" y="164" width="22" height="15" fill="rgb(226,87,26)"/><text x="411.00" y="174.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.46%)</title><rect x="424" y="180" width="6" height="15" fill="rgb(252,14,30)"/><text x="427.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.46%)</title><rect x="430" y="164" width="5" height="15" fill="rgb(240,215,13)"/><text x="433.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.46%)</title><rect x="430" y="180" width="5" height="15" fill="rgb(253,91,11)"/><text x="433.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.46%)</title><rect x="430" y="196" width="5" height="15" fill="rgb(209,6,32)"/><text x="433.00" y="206.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.46%)</title><rect x="435" y="164" width="6" height="15" fill="rgb(247,35,1)"/><text x="438.00" y="174.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.46%)</title><rect x="441" y="212" width="5" height="15" fill="rgb(205,205,39)"/><text x="444.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.46%)</title><rect x="441" y="228" width="5" height="15" fill="rgb(249,226,5)"/><text x="444.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.46%)</title><rect x="441" y="244" width="5" height="15" fill="rgb(251,65,1)"/><text x="444.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:557) (1 samples, 0.46%)</title><rect x="446" y="228" width="5" height="15" fill="rgb(221,42,41)"/><text x="449.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.91%)</title><rect x="446" y="212" width="11" height="15" fill="rgb(223,3,26)"/><text x="449.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.46%)</title><rect x="451" y="228" width="6" height="15" fill="rgb(248,176,2)"/><text x="454.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.46%)</title><rect x="451" y="244" width="6" height="15" fill="rgb(224,143,46)"/><text x="454.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.46%)</title><rect x="451" y="260" width="6" height="15" fill="rgb(210,154,20)"/><text x="454.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.46%)</title><rect x="451" y="276" width="6" height="15" fill="rgb(208,19,20)"/><text x="454.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.46%)</title><rect x="457" y="260" width="5" height="15" fill="rgb(224,121,18)"/><text x="460.00" y="270.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.46%)</title><rect x="457" y="276" width="5" height="15" fill="rgb(212,169,46)"/><text x="460.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.46%)</title><rect x="462" y="276" width="5" height="15" fill="rgb(228,108,37)"/><text x="465.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="462" y="292" width="5" height="15" fill="rgb(249,147,52)"/><text x="465.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.46%)</title><rect x="467" y="276" width="6" height="15" fill="rgb(226,11,32)"/><text x="470.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.46%)</title><rect x="467" y="292" width="6" height="15" fill="rgb(219,143,22)"/><text x="470.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.46%)</title><rect x="467" y="308" width="6" height="15" fill="rgb(214,15,40)"/><text x="470.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3998) (1 samples, 0.46%)</title><rect x="473" y="292" width="5" height="15" fill="rgb(239,39,22)"/><text x="476.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 3.20%)</title><rect x="457" y="212" width="37" height="15" fill="rgb(213,96,1)"/><text x="460.00" y="222.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 3.20%)</title><rect x="457" y="228" width="37" height="15" fill="rgb(247,123,37)"/><text x="460.00" y="238.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (7 samples, 3.20%)</title><rect x="457" y="244" width="37" height="15" fill="rgb(205,26,50)"/><text x="460.00" y="254.50">npy..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 2.74%)</title><rect x="462" y="260" width="32" height="15" fill="rgb(243,19,37)"/><text x="465.00" y="270.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (4 samples, 1.83%)</title><rect x="473" y="276" width="21" height="15" fill="rgb(238,117,40)"/><text x="476.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (3 samples, 1.37%)</title><rect x="478" y="292" width="16" height="15" fill="rgb(229,167,19)"/><text x="481.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (3 samples, 1.37%)</title><rect x="478" y="308" width="16" height="15" fill="rgb(236,227,10)"/><text x="481.00" y="318.50"></text></g><g><title>0x7f1a8a0e4d50 (libc-2.29.so) (2 samples, 0.91%)</title><rect x="484" y="324" width="10" height="15" fill="rgb(227,128,11)"/><text x="487.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.46%)</title><rect x="494" y="212" width="6" height="15" fill="rgb(222,137,6)"/><text x="497.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.46%)</title><rect x="494" y="228" width="6" height="15" fill="rgb(210,188,26)"/><text x="497.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.46%)</title><rect x="494" y="244" width="6" height="15" fill="rgb(216,26,33)"/><text x="497.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.46%)</title><rect x="500" y="212" width="5" height="15" fill="rgb(253,194,35)"/><text x="503.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:411) (1 samples, 0.46%)</title><rect x="500" y="228" width="5" height="15" fill="rgb(227,191,14)"/><text x="503.00" y="238.50"></text></g><g><title>is_blasable2d (matmul.c.src:47) (1 samples, 0.46%)</title><rect x="500" y="244" width="5" height="15" fill="rgb(241,10,26)"/><text x="503.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.46%)</title><rect x="505" y="244" width="6" height="15" fill="rgb(211,206,44)"/><text x="508.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.46%)</title><rect x="505" y="260" width="6" height="15" fill="rgb(206,223,3)"/><text x="508.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.46%)</title><rect x="505" y="276" width="6" height="15" fill="rgb(233,155,16)"/><text x="508.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.91%)</title><rect x="505" y="212" width="11" height="15" fill="rgb(220,205,48)"/><text x="508.00" y="222.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.91%)</title><rect x="505" y="228" width="11" height="15" fill="rgb(249,33,18)"/><text x="508.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.46%)</title><rect x="511" y="244" width="5" height="15" fill="rgb(248,210,23)"/><text x="514.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.46%)</title><rect x="511" y="260" width="5" height="15" fill="rgb(235,35,53)"/><text x="514.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 6.85%)</title><rect x="441" y="180" width="80" height="15" fill="rgb(226,111,47)"/><text x="444.00" y="190.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (15 samples, 6.85%)</title><rect x="441" y="196" width="80" height="15" fill="rgb(237,96,40)"/><text x="444.00" y="206.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3086) (1 samples, 0.46%)</title><rect x="516" y="212" width="5" height="15" fill="rgb(212,30,44)"/><text x="519.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (22 samples, 10.05%)</title><rect x="408" y="148" width="119" height="15" fill="rgb(243,37,18)"/><text x="411.00" y="158.50">decision_funct..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (16 samples, 7.31%)</title><rect x="441" y="164" width="86" height="15" fill="rgb(240,145,44)"/><text x="444.00" y="174.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.46%)</title><rect x="521" y="180" width="6" height="15" fill="rgb(226,196,20)"/><text x="524.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.46%)</title><rect x="521" y="196" width="6" height="15" fill="rgb(228,197,2)"/><text x="524.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (90 samples, 41.10%)</title><rect x="53" y="132" width="485" height="15" fill="rgb(207,76,26)"/><text x="56.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.91%)</title><rect x="527" y="148" width="11" height="15" fill="rgb(231,223,5)"/><text x="530.00" y="158.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1194) (1 samples, 0.46%)</title><rect x="532" y="164" width="6" height="15" fill="rgb(239,34,45)"/><text x="535.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:38) (100 samples, 45.66%)</title><rect x="10" y="52" width="538" height="15" fill="rgb(223,227,32)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:37) (100 samples, 45.66%)</title><rect x="10" y="68" width="538" height="15" fill="rgb(215,200,19)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblin..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:29) (100 samples, 45.66%)</title><rect x="10" y="84" width="538" height="15" fill="rgb(253,143,30)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverlibl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:23) (97 samples, 44.29%)</title><rect x="26" y="100" width="522" height="15" fill="rgb(234,167,4)"/><text x="29.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinea..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (97 samples, 44.29%)</title><rect x="26" y="116" width="522" height="15" fill="rgb(251,78,53)"/><text x="29.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.91%)</title><rect x="538" y="132" width="10" height="15" fill="rgb(246,68,48)"/><text x="541.00" y="142.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.46%)</title><rect x="548" y="852" width="6" height="15" fill="rgb(238,15,14)"/><text x="551.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.46%)</title><rect x="548" y="868" width="6" height="15" fill="rgb(232,218,7)"/><text x="551.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.46%)</title><rect x="548" y="884" width="6" height="15" fill="rgb(245,182,12)"/><text x="551.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.46%)</title><rect x="548" y="900" width="6" height="15" fill="rgb(253,183,27)"/><text x="551.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.46%)</title><rect x="548" y="916" width="6" height="15" fill="rgb(249,186,54)"/><text x="551.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.46%)</title><rect x="548" y="932" width="6" height="15" fill="rgb(244,205,17)"/><text x="551.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.46%)</title><rect x="548" y="948" width="6" height="15" fill="rgb(242,168,19)"/><text x="551.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.46%)</title><rect x="548" y="964" width="6" height="15" fill="rgb(239,165,23)"/><text x="551.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.46%)</title><rect x="548" y="980" width="6" height="15" fill="rgb(209,221,37)"/><text x="551.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.46%)</title><rect x="548" y="996" width="6" height="15" fill="rgb(212,218,6)"/><text x="551.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.46%)</title><rect x="548" y="1012" width="6" height="15" fill="rgb(225,207,54)"/><text x="551.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.46%)</title><rect x="548" y="1028" width="6" height="15" fill="rgb(241,61,53)"/><text x="551.00" y="1038.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.46%)</title><rect x="554" y="900" width="5" height="15" fill="rgb(245,130,46)"/><text x="557.00" y="910.50"></text></g><g><title>isdir (genericpath.py:45) (1 samples, 0.46%)</title><rect x="554" y="916" width="5" height="15" fill="rgb(215,169,20)"/><text x="557.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:2) (3 samples, 1.37%)</title><rect x="548" y="148" width="16" height="15" fill="rgb(239,107,45)"/><text x="551.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="164" width="16" height="15" fill="rgb(216,227,40)"/><text x="551.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.37%)</title><rect x="548" y="180" width="16" height="15" fill="rgb(209,3,50)"/><text x="551.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="196" width="16" height="15" fill="rgb(226,117,43)"/><text x="551.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="212" width="16" height="15" fill="rgb(222,54,45)"/><text x="551.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="548" y="228" width="16" height="15" fill="rgb(222,47,34)"/><text x="551.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="548" y="244" width="16" height="15" fill="rgb(241,147,39)"/><text x="551.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="548" y="260" width="16" height="15" fill="rgb(251,64,28)"/><text x="551.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="276" width="16" height="15" fill="rgb(205,27,45)"/><text x="551.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.37%)</title><rect x="548" y="292" width="16" height="15" fill="rgb(219,44,51)"/><text x="551.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="308" width="16" height="15" fill="rgb(247,212,29)"/><text x="551.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="548" y="324" width="16" height="15" fill="rgb(212,61,5)"/><text x="551.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="548" y="340" width="16" height="15" fill="rgb(249,143,51)"/><text x="551.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="548" y="356" width="16" height="15" fill="rgb(248,150,44)"/><text x="551.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="372" width="16" height="15" fill="rgb(249,39,13)"/><text x="551.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.37%)</title><rect x="548" y="388" width="16" height="15" fill="rgb(253,195,39)"/><text x="551.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="404" width="16" height="15" fill="rgb(238,226,8)"/><text x="551.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="548" y="420" width="16" height="15" fill="rgb(213,212,2)"/><text x="551.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="548" y="436" width="16" height="15" fill="rgb(254,22,0)"/><text x="551.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="548" y="452" width="16" height="15" fill="rgb(254,196,6)"/><text x="551.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="468" width="16" height="15" fill="rgb(208,129,6)"/><text x="551.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.37%)</title><rect x="548" y="484" width="16" height="15" fill="rgb(252,161,44)"/><text x="551.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="500" width="16" height="15" fill="rgb(229,82,32)"/><text x="551.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="548" y="516" width="16" height="15" fill="rgb(246,38,6)"/><text x="551.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="548" y="532" width="16" height="15" fill="rgb(227,35,8)"/><text x="551.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="548" y="548" width="16" height="15" fill="rgb(244,207,33)"/><text x="551.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="564" width="16" height="15" fill="rgb(221,45,19)"/><text x="551.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.37%)</title><rect x="548" y="580" width="16" height="15" fill="rgb(244,95,15)"/><text x="551.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="596" width="16" height="15" fill="rgb(243,129,4)"/><text x="551.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.37%)</title><rect x="548" y="612" width="16" height="15" fill="rgb(238,75,25)"/><text x="551.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="628" width="16" height="15" fill="rgb(252,185,21)"/><text x="551.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="644" width="16" height="15" fill="rgb(240,81,34)"/><text x="551.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="548" y="660" width="16" height="15" fill="rgb(208,75,13)"/><text x="551.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="548" y="676" width="16" height="15" fill="rgb(208,112,18)"/><text x="551.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="548" y="692" width="16" height="15" fill="rgb(205,67,40)"/><text x="551.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="708" width="16" height="15" fill="rgb(252,144,18)"/><text x="551.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.37%)</title><rect x="548" y="724" width="16" height="15" fill="rgb(217,75,29)"/><text x="551.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="548" y="740" width="16" height="15" fill="rgb(217,201,7)"/><text x="551.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="548" y="756" width="16" height="15" fill="rgb(242,121,13)"/><text x="551.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="548" y="772" width="16" height="15" fill="rgb(226,56,16)"/><text x="551.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="548" y="788" width="16" height="15" fill="rgb(235,85,3)"/><text x="551.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="548" y="804" width="16" height="15" fill="rgb(251,92,32)"/><text x="551.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.37%)</title><rect x="548" y="820" width="16" height="15" fill="rgb(228,40,46)"/><text x="551.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.37%)</title><rect x="548" y="836" width="16" height="15" fill="rgb(233,0,6)"/><text x="551.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.91%)</title><rect x="554" y="852" width="10" height="15" fill="rgb(221,104,22)"/><text x="557.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.91%)</title><rect x="554" y="868" width="10" height="15" fill="rgb(205,203,10)"/><text x="557.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.91%)</title><rect x="554" y="884" width="10" height="15" fill="rgb(246,1,6)"/><text x="557.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.46%)</title><rect x="559" y="900" width="5" height="15" fill="rgb(234,196,31)"/><text x="562.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.46%)</title><rect x="559" y="916" width="5" height="15" fill="rgb(233,207,44)"/><text x="562.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.46%)</title><rect x="559" y="932" width="5" height="15" fill="rgb(210,34,44)"/><text x="562.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.46%)</title><rect x="559" y="948" width="5" height="15" fill="rgb(208,34,7)"/><text x="562.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.46%)</title><rect x="559" y="964" width="5" height="15" fill="rgb(240,44,41)"/><text x="562.00" y="974.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.46%)</title><rect x="564" y="900" width="6" height="15" fill="rgb(211,121,5)"/><text x="567.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="564" y="916" width="6" height="15" fill="rgb(222,30,26)"/><text x="567.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="564" y="932" width="6" height="15" fill="rgb(252,107,6)"/><text x="567.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="564" y="948" width="6" height="15" fill="rgb(244,10,13)"/><text x="567.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="564" y="964" width="6" height="15" fill="rgb(228,198,33)"/><text x="567.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="564" y="980" width="6" height="15" fill="rgb(225,104,31)"/><text x="567.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.46%)</title><rect x="564" y="996" width="6" height="15" fill="rgb(223,73,7)"/><text x="567.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.46%)</title><rect x="564" y="1012" width="6" height="15" fill="rgb(231,203,3)"/><text x="567.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="564" y="1028" width="6" height="15" fill="rgb(252,189,0)"/><text x="567.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="564" y="1044" width="6" height="15" fill="rgb(230,173,45)"/><text x="567.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="564" y="1060" width="6" height="15" fill="rgb(239,140,54)"/><text x="567.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="564" y="1076" width="6" height="15" fill="rgb(245,229,33)"/><text x="567.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="564" y="1092" width="6" height="15" fill="rgb(215,174,31)"/><text x="567.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="564" y="1108" width="6" height="15" fill="rgb(250,36,7)"/><text x="567.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.46%)</title><rect x="564" y="1124" width="6" height="15" fill="rgb(254,63,15)"/><text x="567.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="564" y="1140" width="6" height="15" fill="rgb(238,68,18)"/><text x="567.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="564" y="1156" width="6" height="15" fill="rgb(253,39,32)"/><text x="567.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="564" y="1172" width="6" height="15" fill="rgb(253,12,42)"/><text x="567.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="564" y="1188" width="6" height="15" fill="rgb(219,140,24)"/><text x="567.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="564" y="1204" width="6" height="15" fill="rgb(213,123,54)"/><text x="567.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:26) (1 samples, 0.46%)</title><rect x="564" y="1220" width="6" height="15" fill="rgb(229,150,13)"/><text x="567.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="564" y="1236" width="6" height="15" fill="rgb(251,97,12)"/><text x="567.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="564" y="1252" width="6" height="15" fill="rgb(249,144,53)"/><text x="567.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="564" y="1268" width="6" height="15" fill="rgb(212,14,43)"/><text x="567.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="564" y="1284" width="6" height="15" fill="rgb(251,6,34)"/><text x="567.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="564" y="1300" width="6" height="15" fill="rgb(240,38,47)"/><text x="567.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_dogleg.py:40) (1 samples, 0.46%)</title><rect x="564" y="1316" width="6" height="15" fill="rgb(223,76,33)"/><text x="567.00" y="1326.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:4) (2 samples, 0.91%)</title><rect x="564" y="148" width="11" height="15" fill="rgb(209,190,27)"/><text x="567.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="164" width="11" height="15" fill="rgb(232,109,21)"/><text x="567.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.91%)</title><rect x="564" y="180" width="11" height="15" fill="rgb(211,183,18)"/><text x="567.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="196" width="11" height="15" fill="rgb(233,74,44)"/><text x="567.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="212" width="11" height="15" fill="rgb(230,7,48)"/><text x="567.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="564" y="228" width="11" height="15" fill="rgb(248,174,28)"/><text x="567.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="564" y="244" width="11" height="15" fill="rgb(234,198,6)"/><text x="567.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="564" y="260" width="11" height="15" fill="rgb(227,45,46)"/><text x="567.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="276" width="11" height="15" fill="rgb(210,33,49)"/><text x="567.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.91%)</title><rect x="564" y="292" width="11" height="15" fill="rgb(239,14,19)"/><text x="567.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="308" width="11" height="15" fill="rgb(239,226,53)"/><text x="567.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="564" y="324" width="11" height="15" fill="rgb(231,48,3)"/><text x="567.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="564" y="340" width="11" height="15" fill="rgb(215,88,37)"/><text x="567.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="564" y="356" width="11" height="15" fill="rgb(225,129,20)"/><text x="567.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="372" width="11" height="15" fill="rgb(217,117,14)"/><text x="567.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.91%)</title><rect x="564" y="388" width="11" height="15" fill="rgb(205,177,41)"/><text x="567.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="404" width="11" height="15" fill="rgb(247,228,24)"/><text x="567.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="564" y="420" width="11" height="15" fill="rgb(220,224,17)"/><text x="567.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="564" y="436" width="11" height="15" fill="rgb(230,102,13)"/><text x="567.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="564" y="452" width="11" height="15" fill="rgb(226,76,45)"/><text x="567.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="468" width="11" height="15" fill="rgb(212,181,31)"/><text x="567.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.91%)</title><rect x="564" y="484" width="11" height="15" fill="rgb(244,165,19)"/><text x="567.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="500" width="11" height="15" fill="rgb(223,85,34)"/><text x="567.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="564" y="516" width="11" height="15" fill="rgb(232,22,41)"/><text x="567.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="564" y="532" width="11" height="15" fill="rgb(217,96,45)"/><text x="567.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="564" y="548" width="11" height="15" fill="rgb(218,142,14)"/><text x="567.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="564" width="11" height="15" fill="rgb(212,9,25)"/><text x="567.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.91%)</title><rect x="564" y="580" width="11" height="15" fill="rgb(233,109,48)"/><text x="567.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="596" width="11" height="15" fill="rgb(232,90,3)"/><text x="567.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="564" y="612" width="11" height="15" fill="rgb(218,130,48)"/><text x="567.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="564" y="628" width="11" height="15" fill="rgb(230,83,0)"/><text x="567.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="564" y="644" width="11" height="15" fill="rgb(224,92,12)"/><text x="567.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="660" width="11" height="15" fill="rgb(247,16,23)"/><text x="567.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.91%)</title><rect x="564" y="676" width="11" height="15" fill="rgb(234,156,50)"/><text x="567.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="692" width="11" height="15" fill="rgb(212,158,33)"/><text x="567.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="564" y="708" width="11" height="15" fill="rgb(243,218,15)"/><text x="567.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="564" y="724" width="11" height="15" fill="rgb(232,93,26)"/><text x="567.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="564" y="740" width="11" height="15" fill="rgb(224,27,17)"/><text x="567.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="756" width="11" height="15" fill="rgb(207,63,20)"/><text x="567.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.91%)</title><rect x="564" y="772" width="11" height="15" fill="rgb(219,76,39)"/><text x="567.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.91%)</title><rect x="564" y="788" width="11" height="15" fill="rgb(240,15,46)"/><text x="567.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="804" width="11" height="15" fill="rgb(211,27,13)"/><text x="567.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="564" y="820" width="11" height="15" fill="rgb(219,37,12)"/><text x="567.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="564" y="836" width="11" height="15" fill="rgb(230,217,51)"/><text x="567.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="564" y="852" width="11" height="15" fill="rgb(243,205,19)"/><text x="567.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="564" y="868" width="11" height="15" fill="rgb(228,153,21)"/><text x="567.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="564" y="884" width="11" height="15" fill="rgb(236,219,10)"/><text x="567.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.46%)</title><rect x="570" y="900" width="5" height="15" fill="rgb(246,162,41)"/><text x="573.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.46%)</title><rect x="570" y="916" width="5" height="15" fill="rgb(248,144,24)"/><text x="573.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="570" y="932" width="5" height="15" fill="rgb(247,166,3)"/><text x="573.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="570" y="948" width="5" height="15" fill="rgb(254,81,32)"/><text x="573.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="570" y="964" width="5" height="15" fill="rgb(241,137,17)"/><text x="573.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="570" y="980" width="5" height="15" fill="rgb(251,208,5)"/><text x="573.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="570" y="996" width="5" height="15" fill="rgb(228,195,40)"/><text x="573.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="570" y="1012" width="5" height="15" fill="rgb(228,225,41)"/><text x="573.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3178) (1 samples, 0.46%)</title><rect x="570" y="1028" width="5" height="15" fill="rgb(215,187,0)"/><text x="573.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.46%)</title><rect x="570" y="1044" width="5" height="15" fill="rgb(215,104,1)"/><text x="573.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.46%)</title><rect x="570" y="1060" width="5" height="15" fill="rgb(242,30,10)"/><text x="573.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.46%)</title><rect x="570" y="1076" width="5" height="15" fill="rgb(251,186,29)"/><text x="573.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.46%)</title><rect x="570" y="1092" width="5" height="15" fill="rgb(208,71,35)"/><text x="573.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.46%)</title><rect x="575" y="244" width="6" height="15" fill="rgb(236,86,17)"/><text x="578.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="260" width="6" height="15" fill="rgb(227,107,25)"/><text x="578.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="276" width="6" height="15" fill="rgb(246,51,21)"/><text x="578.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="292" width="6" height="15" fill="rgb(207,167,24)"/><text x="578.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="575" y="308" width="6" height="15" fill="rgb(238,104,54)"/><text x="578.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="324" width="6" height="15" fill="rgb(224,167,15)"/><text x="578.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.46%)</title><rect x="575" y="340" width="6" height="15" fill="rgb(247,176,52)"/><text x="578.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="356" width="6" height="15" fill="rgb(253,0,48)"/><text x="578.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.46%)</title><rect x="575" y="372" width="6" height="15" fill="rgb(246,84,9)"/><text x="578.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="388" width="6" height="15" fill="rgb(238,27,30)"/><text x="578.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="404" width="6" height="15" fill="rgb(228,69,27)"/><text x="578.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="420" width="6" height="15" fill="rgb(232,131,2)"/><text x="578.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="436" width="6" height="15" fill="rgb(226,171,8)"/><text x="578.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="575" y="452" width="6" height="15" fill="rgb(219,204,5)"/><text x="578.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="468" width="6" height="15" fill="rgb(253,57,34)"/><text x="578.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.46%)</title><rect x="575" y="484" width="6" height="15" fill="rgb(248,180,44)"/><text x="578.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="500" width="6" height="15" fill="rgb(239,191,4)"/><text x="578.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="516" width="6" height="15" fill="rgb(245,216,11)"/><text x="578.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="532" width="6" height="15" fill="rgb(232,58,39)"/><text x="578.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="575" y="548" width="6" height="15" fill="rgb(224,147,20)"/><text x="578.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="564" width="6" height="15" fill="rgb(238,20,39)"/><text x="578.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.46%)</title><rect x="575" y="580" width="6" height="15" fill="rgb(213,29,8)"/><text x="578.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="596" width="6" height="15" fill="rgb(250,132,54)"/><text x="578.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.46%)</title><rect x="575" y="612" width="6" height="15" fill="rgb(220,120,17)"/><text x="578.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="628" width="6" height="15" fill="rgb(232,194,45)"/><text x="578.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="644" width="6" height="15" fill="rgb(229,129,23)"/><text x="578.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="660" width="6" height="15" fill="rgb(231,223,26)"/><text x="578.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="676" width="6" height="15" fill="rgb(244,186,1)"/><text x="578.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="575" y="692" width="6" height="15" fill="rgb(231,159,11)"/><text x="578.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="708" width="6" height="15" fill="rgb(241,50,27)"/><text x="578.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.46%)</title><rect x="575" y="724" width="6" height="15" fill="rgb(230,84,40)"/><text x="578.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="740" width="6" height="15" fill="rgb(251,83,51)"/><text x="578.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="756" width="6" height="15" fill="rgb(245,202,7)"/><text x="578.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="772" width="6" height="15" fill="rgb(236,200,30)"/><text x="578.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="575" y="788" width="6" height="15" fill="rgb(225,219,2)"/><text x="578.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="804" width="6" height="15" fill="rgb(227,80,45)"/><text x="578.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.46%)</title><rect x="575" y="820" width="6" height="15" fill="rgb(244,164,48)"/><text x="578.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="836" width="6" height="15" fill="rgb(205,182,15)"/><text x="578.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="852" width="6" height="15" fill="rgb(232,40,46)"/><text x="578.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="868" width="6" height="15" fill="rgb(251,53,10)"/><text x="578.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="575" y="884" width="6" height="15" fill="rgb(248,162,12)"/><text x="578.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="900" width="6" height="15" fill="rgb(246,128,30)"/><text x="578.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.46%)</title><rect x="575" y="916" width="6" height="15" fill="rgb(213,3,41)"/><text x="578.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="932" width="6" height="15" fill="rgb(249,212,42)"/><text x="578.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.46%)</title><rect x="575" y="948" width="6" height="15" fill="rgb(219,167,22)"/><text x="578.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="964" width="6" height="15" fill="rgb(251,4,23)"/><text x="578.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="980" width="6" height="15" fill="rgb(211,122,52)"/><text x="578.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="996" width="6" height="15" fill="rgb(238,130,43)"/><text x="578.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="1012" width="6" height="15" fill="rgb(206,30,24)"/><text x="578.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="575" y="1028" width="6" height="15" fill="rgb(228,58,32)"/><text x="578.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="575" y="1044" width="6" height="15" fill="rgb(221,214,3)"/><text x="578.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.46%)</title><rect x="575" y="1060" width="6" height="15" fill="rgb(247,90,23)"/><text x="578.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="575" y="1076" width="6" height="15" fill="rgb(254,7,49)"/><text x="578.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="575" y="1092" width="6" height="15" fill="rgb(214,107,24)"/><text x="578.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="575" y="1108" width="6" height="15" fill="rgb(226,227,51)"/><text x="578.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.46%)</title><rect x="575" y="1124" width="6" height="15" fill="rgb(217,195,11)"/><text x="578.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.46%)</title><rect x="575" y="1140" width="6" height="15" fill="rgb(235,73,17)"/><text x="578.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.46%)</title><rect x="575" y="1156" width="6" height="15" fill="rgb(212,157,29)"/><text x="578.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.46%)</title><rect x="581" y="340" width="5" height="15" fill="rgb(238,159,45)"/><text x="584.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="581" y="356" width="5" height="15" fill="rgb(216,17,41)"/><text x="584.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="581" y="372" width="5" height="15" fill="rgb(227,132,52)"/><text x="584.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="581" y="388" width="5" height="15" fill="rgb(205,51,11)"/><text x="584.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="581" y="404" width="5" height="15" fill="rgb(225,74,16)"/><text x="584.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="581" y="420" width="5" height="15" fill="rgb(228,219,41)"/><text x="584.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:49) (1 samples, 0.46%)</title><rect x="581" y="436" width="5" height="15" fill="rgb(217,36,11)"/><text x="584.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="581" y="452" width="5" height="15" fill="rgb(252,123,54)"/><text x="584.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="581" y="468" width="5" height="15" fill="rgb(205,44,21)"/><text x="584.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="581" y="484" width="5" height="15" fill="rgb(251,33,20)"/><text x="584.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.46%)</title><rect x="581" y="500" width="5" height="15" fill="rgb(230,169,41)"/><text x="584.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.46%)</title><rect x="581" y="516" width="5" height="15" fill="rgb(225,223,16)"/><text x="584.00" y="526.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.46%)</title><rect x="581" y="532" width="5" height="15" fill="rgb(244,78,44)"/><text x="584.00" y="542.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.46%)</title><rect x="581" y="548" width="5" height="15" fill="rgb(244,1,26)"/><text x="584.00" y="558.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.46%)</title><rect x="581" y="564" width="5" height="15" fill="rgb(236,66,5)"/><text x="584.00" y="574.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.46%)</title><rect x="581" y="580" width="5" height="15" fill="rgb(240,189,53)"/><text x="584.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.46%)</title><rect x="586" y="1524" width="5" height="15" fill="rgb(237,124,45)"/><text x="589.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="586" y="1540" width="5" height="15" fill="rgb(230,140,49)"/><text x="589.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="586" y="1556" width="5" height="15" fill="rgb(246,153,45)"/><text x="589.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="586" y="1572" width="5" height="15" fill="rgb(223,19,28)"/><text x="589.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="586" y="1588" width="5" height="15" fill="rgb(209,158,3)"/><text x="589.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="586" y="1604" width="5" height="15" fill="rgb(234,33,34)"/><text x="589.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="586" y="1620" width="5" height="15" fill="rgb(240,110,31)"/><text x="589.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.46%)</title><rect x="586" y="1636" width="5" height="15" fill="rgb(238,163,0)"/><text x="589.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.46%)</title><rect x="586" y="1652" width="5" height="15" fill="rgb(248,93,24)"/><text x="589.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="586" y="1668" width="5" height="15" fill="rgb(241,192,51)"/><text x="589.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="586" y="1684" width="5" height="15" fill="rgb(228,185,53)"/><text x="589.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="586" y="1700" width="5" height="15" fill="rgb(252,20,41)"/><text x="589.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="586" y="1716" width="5" height="15" fill="rgb(216,83,16)"/><text x="589.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="586" y="1732" width="5" height="15" fill="rgb(247,76,9)"/><text x="589.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="586" y="1748" width="5" height="15" fill="rgb(238,215,47)"/><text x="589.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.46%)</title><rect x="586" y="1764" width="5" height="15" fill="rgb(248,105,53)"/><text x="589.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="586" y="1780" width="5" height="15" fill="rgb(230,205,1)"/><text x="589.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="586" y="1796" width="5" height="15" fill="rgb(216,33,36)"/><text x="589.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="586" y="1812" width="5" height="15" fill="rgb(234,69,9)"/><text x="589.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="586" y="1828" width="5" height="15" fill="rgb(244,181,34)"/><text x="589.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="586" y="1844" width="5" height="15" fill="rgb(245,127,26)"/><text x="589.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.46%)</title><rect x="586" y="1860" width="5" height="15" fill="rgb(250,15,11)"/><text x="589.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="586" y="1876" width="5" height="15" fill="rgb(217,183,17)"/><text x="589.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="586" y="1892" width="5" height="15" fill="rgb(215,127,34)"/><text x="589.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="586" y="1908" width="5" height="15" fill="rgb(240,91,40)"/><text x="589.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="586" y="1924" width="5" height="15" fill="rgb(206,111,1)"/><text x="589.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="586" y="1940" width="5" height="15" fill="rgb(205,36,27)"/><text x="589.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6105) (1 samples, 0.46%)</title><rect x="586" y="1956" width="5" height="15" fill="rgb(211,118,31)"/><text x="589.00" y="1966.50"></text></g><g><title>__init__ (pyparsing.py:5105) (1 samples, 0.46%)</title><rect x="586" y="1972" width="5" height="15" fill="rgb(215,62,11)"/><text x="589.00" y="1982.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.46%)</title><rect x="586" y="1988" width="5" height="15" fill="rgb(241,50,29)"/><text x="589.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3883) (1 samples, 0.46%)</title><rect x="586" y="2004" width="5" height="15" fill="rgb(242,5,3)"/><text x="589.00" y="2014.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3883) (1 samples, 0.46%)</title><rect x="586" y="2020" width="5" height="15" fill="rgb(242,85,21)"/><text x="589.00" y="2030.50"></text></g><g><title>copy (pyparsing.py:3951) (1 samples, 0.46%)</title><rect x="586" y="2036" width="5" height="15" fill="rgb(225,225,15)"/><text x="589.00" y="2046.50"></text></g><g><title>copy (pyparsing.py:1437) (1 samples, 0.46%)</title><rect x="586" y="2052" width="5" height="15" fill="rgb(211,17,11)"/><text x="589.00" y="2062.50"></text></g><g><title>copy (copy.py:96) (1 samples, 0.46%)</title><rect x="586" y="2068" width="5" height="15" fill="rgb(218,121,14)"/><text x="589.00" y="2078.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.91%)</title><rect x="586" y="436" width="11" height="15" fill="rgb(251,43,31)"/><text x="589.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="452" width="11" height="15" fill="rgb(208,89,28)"/><text x="589.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="468" width="11" height="15" fill="rgb(253,62,28)"/><text x="589.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="484" width="11" height="15" fill="rgb(232,206,18)"/><text x="589.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="500" width="11" height="15" fill="rgb(241,19,4)"/><text x="589.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="516" width="11" height="15" fill="rgb(254,158,47)"/><text x="589.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.91%)</title><rect x="586" y="532" width="11" height="15" fill="rgb(217,34,18)"/><text x="589.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="548" width="11" height="15" fill="rgb(253,105,19)"/><text x="589.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="564" width="11" height="15" fill="rgb(206,133,20)"/><text x="589.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="580" width="11" height="15" fill="rgb(225,64,16)"/><text x="589.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="596" width="11" height="15" fill="rgb(209,162,3)"/><text x="589.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="612" width="11" height="15" fill="rgb(225,137,45)"/><text x="589.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.91%)</title><rect x="586" y="628" width="11" height="15" fill="rgb(242,71,15)"/><text x="589.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="644" width="11" height="15" fill="rgb(247,228,23)"/><text x="589.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="660" width="11" height="15" fill="rgb(246,106,46)"/><text x="589.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="676" width="11" height="15" fill="rgb(216,117,30)"/><text x="589.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="692" width="11" height="15" fill="rgb(220,90,15)"/><text x="589.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="708" width="11" height="15" fill="rgb(234,160,3)"/><text x="589.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.91%)</title><rect x="586" y="724" width="11" height="15" fill="rgb(250,171,43)"/><text x="589.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="740" width="11" height="15" fill="rgb(206,39,0)"/><text x="589.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="756" width="11" height="15" fill="rgb(214,68,2)"/><text x="589.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="772" width="11" height="15" fill="rgb(254,94,18)"/><text x="589.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="788" width="11" height="15" fill="rgb(241,43,43)"/><text x="589.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="804" width="11" height="15" fill="rgb(226,190,50)"/><text x="589.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.91%)</title><rect x="586" y="820" width="11" height="15" fill="rgb(218,115,5)"/><text x="589.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="836" width="11" height="15" fill="rgb(237,84,6)"/><text x="589.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="852" width="11" height="15" fill="rgb(217,109,21)"/><text x="589.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="868" width="11" height="15" fill="rgb(252,211,40)"/><text x="589.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="884" width="11" height="15" fill="rgb(242,8,25)"/><text x="589.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="900" width="11" height="15" fill="rgb(254,132,43)"/><text x="589.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.91%)</title><rect x="586" y="916" width="11" height="15" fill="rgb(229,59,51)"/><text x="589.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="932" width="11" height="15" fill="rgb(227,201,20)"/><text x="589.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="948" width="11" height="15" fill="rgb(231,217,13)"/><text x="589.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="964" width="11" height="15" fill="rgb(249,145,34)"/><text x="589.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="980" width="11" height="15" fill="rgb(206,138,52)"/><text x="589.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="996" width="11" height="15" fill="rgb(239,101,9)"/><text x="589.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.91%)</title><rect x="586" y="1012" width="11" height="15" fill="rgb(231,81,21)"/><text x="589.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="1028" width="11" height="15" fill="rgb(234,189,9)"/><text x="589.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="1044" width="11" height="15" fill="rgb(208,93,54)"/><text x="589.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="1060" width="11" height="15" fill="rgb(229,227,21)"/><text x="589.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="1076" width="11" height="15" fill="rgb(245,122,0)"/><text x="589.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="1092" width="11" height="15" fill="rgb(252,130,14)"/><text x="589.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.91%)</title><rect x="586" y="1108" width="11" height="15" fill="rgb(210,174,7)"/><text x="589.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="1124" width="11" height="15" fill="rgb(210,123,10)"/><text x="589.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="1140" width="11" height="15" fill="rgb(246,33,17)"/><text x="589.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="1156" width="11" height="15" fill="rgb(221,127,6)"/><text x="589.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="1172" width="11" height="15" fill="rgb(235,23,49)"/><text x="589.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="1188" width="11" height="15" fill="rgb(207,144,51)"/><text x="589.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.91%)</title><rect x="586" y="1204" width="11" height="15" fill="rgb(214,98,52)"/><text x="589.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="1220" width="11" height="15" fill="rgb(254,207,24)"/><text x="589.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="1236" width="11" height="15" fill="rgb(237,131,43)"/><text x="589.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="1252" width="11" height="15" fill="rgb(208,7,7)"/><text x="589.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="1268" width="11" height="15" fill="rgb(224,193,40)"/><text x="589.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="1284" width="11" height="15" fill="rgb(228,169,50)"/><text x="589.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.91%)</title><rect x="586" y="1300" width="11" height="15" fill="rgb(230,31,31)"/><text x="589.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="1316" width="11" height="15" fill="rgb(240,159,2)"/><text x="589.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="1332" width="11" height="15" fill="rgb(226,81,1)"/><text x="589.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="1348" width="11" height="15" fill="rgb(252,161,40)"/><text x="589.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="1364" width="11" height="15" fill="rgb(234,202,35)"/><text x="589.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="1380" width="11" height="15" fill="rgb(218,203,31)"/><text x="589.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.91%)</title><rect x="586" y="1396" width="11" height="15" fill="rgb(250,87,17)"/><text x="589.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="1412" width="11" height="15" fill="rgb(217,215,39)"/><text x="589.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="586" y="1428" width="11" height="15" fill="rgb(214,145,52)"/><text x="589.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="586" y="1444" width="11" height="15" fill="rgb(219,106,38)"/><text x="589.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="586" y="1460" width="11" height="15" fill="rgb(221,147,53)"/><text x="589.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="586" y="1476" width="11" height="15" fill="rgb(211,110,24)"/><text x="589.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.91%)</title><rect x="586" y="1492" width="11" height="15" fill="rgb(221,224,29)"/><text x="589.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="586" y="1508" width="11" height="15" fill="rgb(227,119,37)"/><text x="589.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="591" y="1524" width="6" height="15" fill="rgb(239,101,8)"/><text x="594.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="591" y="1540" width="6" height="15" fill="rgb(213,53,44)"/><text x="594.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.46%)</title><rect x="591" y="1556" width="6" height="15" fill="rgb(248,211,5)"/><text x="594.00" y="1566.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.46%)</title><rect x="591" y="1572" width="6" height="15" fill="rgb(254,42,42)"/><text x="594.00" y="1582.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.46%)</title><rect x="591" y="1588" width="6" height="15" fill="rgb(220,72,14)"/><text x="594.00" y="1598.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.46%)</title><rect x="591" y="1604" width="6" height="15" fill="rgb(210,141,35)"/><text x="594.00" y="1614.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.46%)</title><rect x="597" y="1108" width="5" height="15" fill="rgb(253,172,6)"/><text x="600.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="597" y="1124" width="5" height="15" fill="rgb(247,124,19)"/><text x="600.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="597" y="1140" width="5" height="15" fill="rgb(212,108,34)"/><text x="600.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="597" y="1156" width="5" height="15" fill="rgb(252,71,6)"/><text x="600.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="597" y="1172" width="5" height="15" fill="rgb(225,141,53)"/><text x="600.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="597" y="1188" width="5" height="15" fill="rgb(218,115,23)"/><text x="600.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.46%)</title><rect x="597" y="1204" width="5" height="15" fill="rgb(227,9,5)"/><text x="600.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="597" y="1220" width="5" height="15" fill="rgb(243,189,6)"/><text x="600.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="597" y="1236" width="5" height="15" fill="rgb(208,79,34)"/><text x="600.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="597" y="1252" width="5" height="15" fill="rgb(205,221,13)"/><text x="600.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="597" y="1268" width="5" height="15" fill="rgb(231,30,47)"/><text x="600.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="597" y="1284" width="5" height="15" fill="rgb(244,9,34)"/><text x="600.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.46%)</title><rect x="597" y="1300" width="5" height="15" fill="rgb(211,58,5)"/><text x="600.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="597" y="1316" width="5" height="15" fill="rgb(253,161,30)"/><text x="600.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="597" y="1332" width="5" height="15" fill="rgb(252,103,20)"/><text x="600.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="597" y="1348" width="5" height="15" fill="rgb(221,100,37)"/><text x="600.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="597" y="1364" width="5" height="15" fill="rgb(230,180,33)"/><text x="600.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="597" y="1380" width="5" height="15" fill="rgb(249,115,0)"/><text x="600.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.46%)</title><rect x="597" y="1396" width="5" height="15" fill="rgb(212,51,17)"/><text x="600.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="597" y="1412" width="5" height="15" fill="rgb(206,195,45)"/><text x="600.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="597" y="1428" width="5" height="15" fill="rgb(219,144,6)"/><text x="600.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="597" y="1444" width="5" height="15" fill="rgb(212,142,39)"/><text x="600.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="597" y="1460" width="5" height="15" fill="rgb(218,161,44)"/><text x="600.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="597" y="1476" width="5" height="15" fill="rgb(245,177,3)"/><text x="600.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.46%)</title><rect x="597" y="1492" width="5" height="15" fill="rgb(239,158,43)"/><text x="600.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.46%)</title><rect x="597" y="1508" width="5" height="15" fill="rgb(218,71,38)"/><text x="600.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="597" y="1524" width="5" height="15" fill="rgb(216,75,32)"/><text x="600.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="597" y="1540" width="5" height="15" fill="rgb(250,174,13)"/><text x="600.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="597" y="1556" width="5" height="15" fill="rgb(254,153,19)"/><text x="600.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="597" y="1572" width="5" height="15" fill="rgb(228,60,8)"/><text x="600.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="597" y="1588" width="5" height="15" fill="rgb(253,103,3)"/><text x="600.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="597" y="1604" width="5" height="15" fill="rgb(227,155,44)"/><text x="600.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:10) (1 samples, 0.46%)</title><rect x="597" y="1620" width="5" height="15" fill="rgb(254,66,44)"/><text x="600.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="597" y="1636" width="5" height="15" fill="rgb(243,147,0)"/><text x="600.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="597" y="1652" width="5" height="15" fill="rgb(227,71,49)"/><text x="600.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="597" y="1668" width="5" height="15" fill="rgb(240,5,13)"/><text x="600.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.46%)</title><rect x="597" y="1684" width="5" height="15" fill="rgb(226,68,31)"/><text x="600.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.46%)</title><rect x="597" y="1700" width="5" height="15" fill="rgb(216,202,44)"/><text x="600.00" y="1710.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.46%)</title><rect x="597" y="1716" width="5" height="15" fill="rgb(246,87,40)"/><text x="600.00" y="1726.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.46%)</title><rect x="597" y="1732" width="5" height="15" fill="rgb(244,109,9)"/><text x="600.00" y="1742.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.46%)</title><rect x="597" y="1748" width="5" height="15" fill="rgb(254,208,4)"/><text x="600.00" y="1758.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.46%)</title><rect x="597" y="1764" width="5" height="15" fill="rgb(236,213,39)"/><text x="600.00" y="1774.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:117) (1 samples, 0.46%)</title><rect x="602" y="1492" width="6" height="15" fill="rgb(235,130,12)"/><text x="605.00" y="1502.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.46%)</title><rect x="608" y="1572" width="5" height="15" fill="rgb(216,164,51)"/><text x="611.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.46%)</title><rect x="608" y="1588" width="5" height="15" fill="rgb(240,132,22)"/><text x="611.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.46%)</title><rect x="608" y="1604" width="5" height="15" fill="rgb(238,189,12)"/><text x="611.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:438) (1 samples, 0.46%)</title><rect x="608" y="1620" width="5" height="15" fill="rgb(229,196,20)"/><text x="611.00" y="1630.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.46%)</title><rect x="608" y="1636" width="5" height="15" fill="rgb(249,159,17)"/><text x="611.00" y="1646.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.91%)</title><rect x="608" y="1492" width="10" height="15" fill="rgb(218,177,48)"/><text x="611.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.91%)</title><rect x="608" y="1508" width="10" height="15" fill="rgb(248,28,23)"/><text x="611.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.91%)</title><rect x="608" y="1524" width="10" height="15" fill="rgb(213,155,53)"/><text x="611.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.91%)</title><rect x="608" y="1540" width="10" height="15" fill="rgb(237,116,7)"/><text x="611.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.91%)</title><rect x="608" y="1556" width="10" height="15" fill="rgb(225,14,1)"/><text x="611.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.46%)</title><rect x="613" y="1572" width="5" height="15" fill="rgb(240,130,20)"/><text x="616.00" y="1582.50"></text></g><g><title>0x7f1a784117d7 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="613" y="1588" width="5" height="15" fill="rgb(234,16,52)"/><text x="616.00" y="1598.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="613" y="1604" width="5" height="15" fill="rgb(225,194,43)"/><text x="616.00" y="1614.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="613" y="1620" width="5" height="15" fill="rgb(217,80,54)"/><text x="616.00" y="1630.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.46%)</title><rect x="618" y="1492" width="6" height="15" fill="rgb(234,221,2)"/><text x="621.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="618" y="1508" width="6" height="15" fill="rgb(213,97,24)"/><text x="621.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="618" y="1524" width="6" height="15" fill="rgb(250,191,31)"/><text x="621.00" y="1534.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="618" y="1540" width="6" height="15" fill="rgb(235,50,25)"/><text x="621.00" y="1550.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="618" y="1556" width="6" height="15" fill="rgb(248,21,53)"/><text x="621.00" y="1566.50"></text></g><g><title>pybind11::detail::keep_alive_impl (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="618" y="1572" width="6" height="15" fill="rgb(249,152,23)"/><text x="621.00" y="1582.50"></text></g><g><title>0x7f1a8a0e4d53 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="618" y="1588" width="6" height="15" fill="rgb(243,71,42)"/><text x="621.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (5 samples, 2.28%)</title><rect x="602" y="1460" width="27" height="15" fill="rgb(250,128,4)"/><text x="605.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (5 samples, 2.28%)</title><rect x="602" y="1476" width="27" height="15" fill="rgb(243,125,14)"/><text x="605.00" y="1486.50">_..</text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.46%)</title><rect x="624" y="1492" width="5" height="15" fill="rgb(224,66,10)"/><text x="627.00" y="1502.50"></text></g><g><title>0x7f1a7a1800e9 (?) (1 samples, 0.46%)</title><rect x="624" y="1508" width="5" height="15" fill="rgb(212,87,5)"/><text x="627.00" y="1518.50"></text></g><g><title>0x7f1a7a166bc1 (?) (1 samples, 0.46%)</title><rect x="624" y="1524" width="5" height="15" fill="rgb(247,184,45)"/><text x="627.00" y="1534.50"></text></g><g><title>0x7f1a7a244b8e (?) (1 samples, 0.46%)</title><rect x="624" y="1540" width="5" height="15" fill="rgb(246,219,42)"/><text x="627.00" y="1550.50"></text></g><g><title>0x7f1a7a24801b (?) (1 samples, 0.46%)</title><rect x="624" y="1556" width="5" height="15" fill="rgb(209,202,35)"/><text x="627.00" y="1566.50"></text></g><g><title>0x7f1a7a22f6ca (?) (1 samples, 0.46%)</title><rect x="624" y="1572" width="5" height="15" fill="rgb(240,178,17)"/><text x="627.00" y="1582.50"></text></g><g><title>0x7f1a7a1bb9c0 (?) (1 samples, 0.46%)</title><rect x="624" y="1588" width="5" height="15" fill="rgb(239,209,2)"/><text x="627.00" y="1598.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.46%)</title><rect x="629" y="1668" width="6" height="15" fill="rgb(244,106,6)"/><text x="632.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="629" y="1684" width="6" height="15" fill="rgb(246,104,25)"/><text x="632.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="629" y="1700" width="6" height="15" fill="rgb(224,199,48)"/><text x="632.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="629" y="1716" width="6" height="15" fill="rgb(212,225,33)"/><text x="632.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="629" y="1732" width="6" height="15" fill="rgb(216,179,37)"/><text x="632.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="629" y="1748" width="6" height="15" fill="rgb(208,93,2)"/><text x="632.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:22) (1 samples, 0.46%)</title><rect x="629" y="1764" width="6" height="15" fill="rgb(208,116,23)"/><text x="632.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="629" y="1780" width="6" height="15" fill="rgb(228,1,40)"/><text x="632.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="629" y="1796" width="6" height="15" fill="rgb(225,43,15)"/><text x="632.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="629" y="1812" width="6" height="15" fill="rgb(243,115,49)"/><text x="632.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="629" y="1828" width="6" height="15" fill="rgb(221,41,4)"/><text x="632.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="629" y="1844" width="6" height="15" fill="rgb(238,4,35)"/><text x="632.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/lexer.py:46) (1 samples, 0.46%)</title><rect x="629" y="1860" width="6" height="15" fill="rgb(228,94,24)"/><text x="632.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.46%)</title><rect x="629" y="1876" width="6" height="15" fill="rgb(237,179,50)"/><text x="632.00" y="1886.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.46%)</title><rect x="629" y="1892" width="6" height="15" fill="rgb(212,41,18)"/><text x="632.00" y="1902.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.46%)</title><rect x="629" y="1908" width="6" height="15" fill="rgb(235,102,41)"/><text x="632.00" y="1918.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.46%)</title><rect x="629" y="1924" width="6" height="15" fill="rgb(223,77,39)"/><text x="632.00" y="1934.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.46%)</title><rect x="629" y="1940" width="6" height="15" fill="rgb(224,108,2)"/><text x="632.00" y="1950.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.46%)</title><rect x="629" y="1956" width="6" height="15" fill="rgb(226,179,1)"/><text x="632.00" y="1966.50"></text></g><g><title>get (sre_parse.py:255) (1 samples, 0.46%)</title><rect x="629" y="1972" width="6" height="15" fill="rgb(210,172,53)"/><text x="632.00" y="1982.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.46%)</title><rect x="635" y="2036" width="5" height="15" fill="rgb(248,132,28)"/><text x="638.00" y="2046.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.46%)</title><rect x="635" y="2052" width="5" height="15" fill="rgb(226,125,24)"/><text x="638.00" y="2062.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.46%)</title><rect x="635" y="2068" width="5" height="15" fill="rgb(253,23,28)"/><text x="638.00" y="2078.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.46%)</title><rect x="635" y="2084" width="5" height="15" fill="rgb(242,121,32)"/><text x="638.00" y="2094.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.46%)</title><rect x="635" y="2100" width="5" height="15" fill="rgb(223,105,19)"/><text x="638.00" y="2110.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.46%)</title><rect x="635" y="2116" width="5" height="15" fill="rgb(211,40,38)"/><text x="638.00" y="2126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.46%)</title><rect x="635" y="2132" width="5" height="15" fill="rgb(246,28,23)"/><text x="638.00" y="2142.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.46%)</title><rect x="635" y="2148" width="5" height="15" fill="rgb(222,126,27)"/><text x="638.00" y="2158.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:4) (18 samples, 8.22%)</title><rect x="548" y="52" width="97" height="15" fill="rgb(230,27,27)"/><text x="551.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 8.22%)</title><rect x="548" y="68" width="97" height="15" fill="rgb(233,183,29)"/><text x="551.00" y="78.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 8.22%)</title><rect x="548" y="84" width="97" height="15" fill="rgb(217,184,17)"/><text x="551.00" y="94.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 8.22%)</title><rect x="548" y="100" width="97" height="15" fill="rgb(228,43,28)"/><text x="551.00" y="110.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 8.22%)</title><rect x="548" y="116" width="97" height="15" fill="rgb(220,223,37)"/><text x="551.00" y="126.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 8.22%)</title><rect x="548" y="132" width="97" height="15" fill="rgb(216,29,2)"/><text x="551.00" y="142.50">_call_with_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:7) (13 samples, 5.94%)</title><rect x="575" y="148" width="70" height="15" fill="rgb(206,20,20)"/><text x="578.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 5.94%)</title><rect x="575" y="164" width="70" height="15" fill="rgb(234,12,49)"/><text x="578.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 5.94%)</title><rect x="575" y="180" width="70" height="15" fill="rgb(243,63,4)"/><text x="578.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 5.94%)</title><rect x="575" y="196" width="70" height="15" fill="rgb(240,208,28)"/><text x="578.00" y="206.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 5.94%)</title><rect x="575" y="212" width="70" height="15" fill="rgb(210,46,28)"/><text x="578.00" y="222.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 5.94%)</title><rect x="575" y="228" width="70" height="15" fill="rgb(240,228,30)"/><text x="578.00" y="238.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (12 samples, 5.48%)</title><rect x="581" y="244" width="64" height="15" fill="rgb(213,79,37)"/><text x="584.00" y="254.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 5.48%)</title><rect x="581" y="260" width="64" height="15" fill="rgb(252,210,16)"/><text x="584.00" y="270.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 5.48%)</title><rect x="581" y="276" width="64" height="15" fill="rgb(236,80,19)"/><text x="584.00" y="286.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 5.48%)</title><rect x="581" y="292" width="64" height="15" fill="rgb(250,205,32)"/><text x="584.00" y="302.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 5.48%)</title><rect x="581" y="308" width="64" height="15" fill="rgb(210,39,31)"/><text x="584.00" y="318.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 5.48%)</title><rect x="581" y="324" width="64" height="15" fill="rgb(221,31,41)"/><text x="584.00" y="334.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (11 samples, 5.02%)</title><rect x="586" y="340" width="59" height="15" fill="rgb(235,222,9)"/><text x="589.00" y="350.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 5.02%)</title><rect x="586" y="356" width="59" height="15" fill="rgb(205,10,1)"/><text x="589.00" y="366.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 5.02%)</title><rect x="586" y="372" width="59" height="15" fill="rgb(223,153,16)"/><text x="589.00" y="382.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 5.02%)</title><rect x="586" y="388" width="59" height="15" fill="rgb(228,207,20)"/><text x="589.00" y="398.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 5.02%)</title><rect x="586" y="404" width="59" height="15" fill="rgb(211,111,50)"/><text x="589.00" y="414.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 5.02%)</title><rect x="586" y="420" width="59" height="15" fill="rgb(244,48,10)"/><text x="589.00" y="430.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (9 samples, 4.11%)</title><rect x="597" y="436" width="48" height="15" fill="rgb(253,219,54)"/><text x="600.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="452" width="48" height="15" fill="rgb(212,36,24)"/><text x="600.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 4.11%)</title><rect x="597" y="468" width="48" height="15" fill="rgb(219,225,49)"/><text x="600.00" y="478.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="484" width="48" height="15" fill="rgb(221,182,4)"/><text x="600.00" y="494.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="500" width="48" height="15" fill="rgb(213,66,40)"/><text x="600.00" y="510.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.11%)</title><rect x="597" y="516" width="48" height="15" fill="rgb(229,168,3)"/><text x="600.00" y="526.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.11%)</title><rect x="597" y="532" width="48" height="15" fill="rgb(244,226,38)"/><text x="600.00" y="542.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.11%)</title><rect x="597" y="548" width="48" height="15" fill="rgb(235,156,39)"/><text x="600.00" y="558.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="564" width="48" height="15" fill="rgb(225,97,8)"/><text x="600.00" y="574.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (9 samples, 4.11%)</title><rect x="597" y="580" width="48" height="15" fill="rgb(218,46,28)"/><text x="600.00" y="590.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="596" width="48" height="15" fill="rgb(227,70,35)"/><text x="600.00" y="606.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.11%)</title><rect x="597" y="612" width="48" height="15" fill="rgb(220,89,46)"/><text x="600.00" y="622.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.11%)</title><rect x="597" y="628" width="48" height="15" fill="rgb(226,119,21)"/><text x="600.00" y="638.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.11%)</title><rect x="597" y="644" width="48" height="15" fill="rgb(232,118,32)"/><text x="600.00" y="654.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="660" width="48" height="15" fill="rgb(231,83,46)"/><text x="600.00" y="670.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (9 samples, 4.11%)</title><rect x="597" y="676" width="48" height="15" fill="rgb(237,136,45)"/><text x="600.00" y="686.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="692" width="48" height="15" fill="rgb(214,25,48)"/><text x="600.00" y="702.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.11%)</title><rect x="597" y="708" width="48" height="15" fill="rgb(225,125,5)"/><text x="600.00" y="718.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.11%)</title><rect x="597" y="724" width="48" height="15" fill="rgb(224,195,5)"/><text x="600.00" y="734.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.11%)</title><rect x="597" y="740" width="48" height="15" fill="rgb(218,224,37)"/><text x="600.00" y="750.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="756" width="48" height="15" fill="rgb(246,227,33)"/><text x="600.00" y="766.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (9 samples, 4.11%)</title><rect x="597" y="772" width="48" height="15" fill="rgb(244,38,13)"/><text x="600.00" y="782.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="788" width="48" height="15" fill="rgb(219,27,42)"/><text x="600.00" y="798.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.11%)</title><rect x="597" y="804" width="48" height="15" fill="rgb(226,27,44)"/><text x="600.00" y="814.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.11%)</title><rect x="597" y="820" width="48" height="15" fill="rgb(207,17,22)"/><text x="600.00" y="830.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.11%)</title><rect x="597" y="836" width="48" height="15" fill="rgb(209,203,13)"/><text x="600.00" y="846.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="852" width="48" height="15" fill="rgb(222,94,22)"/><text x="600.00" y="862.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (9 samples, 4.11%)</title><rect x="597" y="868" width="48" height="15" fill="rgb(237,93,21)"/><text x="600.00" y="878.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="884" width="48" height="15" fill="rgb(220,122,35)"/><text x="600.00" y="894.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 4.11%)</title><rect x="597" y="900" width="48" height="15" fill="rgb(230,165,23)"/><text x="600.00" y="910.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="916" width="48" height="15" fill="rgb(207,201,49)"/><text x="600.00" y="926.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="932" width="48" height="15" fill="rgb(226,121,49)"/><text x="600.00" y="942.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.11%)</title><rect x="597" y="948" width="48" height="15" fill="rgb(212,210,7)"/><text x="600.00" y="958.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.11%)</title><rect x="597" y="964" width="48" height="15" fill="rgb(230,193,45)"/><text x="600.00" y="974.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.11%)</title><rect x="597" y="980" width="48" height="15" fill="rgb(213,136,51)"/><text x="600.00" y="990.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="996" width="48" height="15" fill="rgb(227,68,34)"/><text x="600.00" y="1006.50">_cal..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (9 samples, 4.11%)</title><rect x="597" y="1012" width="48" height="15" fill="rgb(243,63,44)"/><text x="600.00" y="1022.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.11%)</title><rect x="597" y="1028" width="48" height="15" fill="rgb(227,90,5)"/><text x="600.00" y="1038.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.11%)</title><rect x="597" y="1044" width="48" height="15" fill="rgb(229,40,5)"/><text x="600.00" y="1054.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.11%)</title><rect x="597" y="1060" width="48" height="15" fill="rgb(231,63,50)"/><text x="600.00" y="1070.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.11%)</title><rect x="597" y="1076" width="48" height="15" fill="rgb(208,11,25)"/><text x="600.00" y="1086.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.11%)</title><rect x="597" y="1092" width="48" height="15" fill="rgb(206,184,48)"/><text x="600.00" y="1102.50">_cal..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (8 samples, 3.65%)</title><rect x="602" y="1108" width="43" height="15" fill="rgb(215,147,42)"/><text x="605.00" y="1118.50">&lt;mod..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (8 samples, 3.65%)</title><rect x="602" y="1124" width="43" height="15" fill="rgb(242,188,33)"/><text x="605.00" y="1134.50">_han..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.65%)</title><rect x="602" y="1140" width="43" height="15" fill="rgb(234,56,51)"/><text x="605.00" y="1150.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.65%)</title><rect x="602" y="1156" width="43" height="15" fill="rgb(230,41,17)"/><text x="605.00" y="1166.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.65%)</title><rect x="602" y="1172" width="43" height="15" fill="rgb(213,4,16)"/><text x="605.00" y="1182.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.65%)</title><rect x="602" y="1188" width="43" height="15" fill="rgb(245,36,37)"/><text x="605.00" y="1198.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.65%)</title><rect x="602" y="1204" width="43" height="15" fill="rgb(254,169,39)"/><text x="605.00" y="1214.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.65%)</title><rect x="602" y="1220" width="43" height="15" fill="rgb(237,44,36)"/><text x="605.00" y="1230.50">_cal..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (8 samples, 3.65%)</title><rect x="602" y="1236" width="43" height="15" fill="rgb(214,171,8)"/><text x="605.00" y="1246.50">&lt;mod..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (8 samples, 3.65%)</title><rect x="602" y="1252" width="43" height="15" fill="rgb(238,79,44)"/><text x="605.00" y="1262.50">_han..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.65%)</title><rect x="602" y="1268" width="43" height="15" fill="rgb(207,79,52)"/><text x="605.00" y="1278.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.65%)</title><rect x="602" y="1284" width="43" height="15" fill="rgb(208,66,4)"/><text x="605.00" y="1294.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.65%)</title><rect x="602" y="1300" width="43" height="15" fill="rgb(212,20,25)"/><text x="605.00" y="1310.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.65%)</title><rect x="602" y="1316" width="43" height="15" fill="rgb(241,61,31)"/><text x="605.00" y="1326.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.65%)</title><rect x="602" y="1332" width="43" height="15" fill="rgb(207,174,14)"/><text x="605.00" y="1342.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.65%)</title><rect x="602" y="1348" width="43" height="15" fill="rgb(220,128,43)"/><text x="605.00" y="1358.50">_cal..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (8 samples, 3.65%)</title><rect x="602" y="1364" width="43" height="15" fill="rgb(232,129,30)"/><text x="605.00" y="1374.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.65%)</title><rect x="602" y="1380" width="43" height="15" fill="rgb(241,194,38)"/><text x="605.00" y="1390.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.65%)</title><rect x="602" y="1396" width="43" height="15" fill="rgb(209,84,46)"/><text x="605.00" y="1406.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.65%)</title><rect x="602" y="1412" width="43" height="15" fill="rgb(242,90,23)"/><text x="605.00" y="1422.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.65%)</title><rect x="602" y="1428" width="43" height="15" fill="rgb(251,197,5)"/><text x="605.00" y="1438.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.65%)</title><rect x="602" y="1444" width="43" height="15" fill="rgb(227,76,4)"/><text x="605.00" y="1454.50">_cal..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (3 samples, 1.37%)</title><rect x="629" y="1460" width="16" height="15" fill="rgb(226,174,23)"/><text x="632.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="629" y="1476" width="16" height="15" fill="rgb(247,169,25)"/><text x="632.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="629" y="1492" width="16" height="15" fill="rgb(235,111,30)"/><text x="632.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="629" y="1508" width="16" height="15" fill="rgb(234,224,34)"/><text x="632.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="629" y="1524" width="16" height="15" fill="rgb(224,76,41)"/><text x="632.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="629" y="1540" width="16" height="15" fill="rgb(213,98,16)"/><text x="632.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (3 samples, 1.37%)</title><rect x="629" y="1556" width="16" height="15" fill="rgb(235,136,37)"/><text x="632.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (3 samples, 1.37%)</title><rect x="629" y="1572" width="16" height="15" fill="rgb(223,169,24)"/><text x="632.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.37%)</title><rect x="629" y="1588" width="16" height="15" fill="rgb(220,78,28)"/><text x="632.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.37%)</title><rect x="629" y="1604" width="16" height="15" fill="rgb(232,140,5)"/><text x="632.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.37%)</title><rect x="629" y="1620" width="16" height="15" fill="rgb(220,56,34)"/><text x="632.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.37%)</title><rect x="629" y="1636" width="16" height="15" fill="rgb(230,19,45)"/><text x="632.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.37%)</title><rect x="629" y="1652" width="16" height="15" fill="rgb(236,23,14)"/><text x="632.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (2 samples, 0.91%)</title><rect x="635" y="1668" width="10" height="15" fill="rgb(207,102,47)"/><text x="638.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (2 samples, 0.91%)</title><rect x="635" y="1684" width="10" height="15" fill="rgb(248,67,33)"/><text x="638.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="635" y="1700" width="10" height="15" fill="rgb(228,142,46)"/><text x="638.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="635" y="1716" width="10" height="15" fill="rgb(235,100,29)"/><text x="638.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="635" y="1732" width="10" height="15" fill="rgb(220,61,20)"/><text x="638.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="635" y="1748" width="10" height="15" fill="rgb(210,188,3)"/><text x="638.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="635" y="1764" width="10" height="15" fill="rgb(206,75,5)"/><text x="638.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (2 samples, 0.91%)</title><rect x="635" y="1780" width="10" height="15" fill="rgb(220,204,37)"/><text x="638.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="635" y="1796" width="10" height="15" fill="rgb(247,44,33)"/><text x="638.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="635" y="1812" width="10" height="15" fill="rgb(212,63,41)"/><text x="638.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="635" y="1828" width="10" height="15" fill="rgb(244,100,14)"/><text x="638.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="635" y="1844" width="10" height="15" fill="rgb(253,146,27)"/><text x="638.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="635" y="1860" width="10" height="15" fill="rgb(244,116,23)"/><text x="638.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (2 samples, 0.91%)</title><rect x="635" y="1876" width="10" height="15" fill="rgb(252,84,29)"/><text x="638.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="635" y="1892" width="10" height="15" fill="rgb(248,74,13)"/><text x="638.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.91%)</title><rect x="635" y="1908" width="10" height="15" fill="rgb(225,46,45)"/><text x="638.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.91%)</title><rect x="635" y="1924" width="10" height="15" fill="rgb(230,204,3)"/><text x="638.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.91%)</title><rect x="635" y="1940" width="10" height="15" fill="rgb(219,160,12)"/><text x="638.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="635" y="1956" width="10" height="15" fill="rgb(233,57,19)"/><text x="638.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:42) (2 samples, 0.91%)</title><rect x="635" y="1972" width="10" height="15" fill="rgb(219,21,0)"/><text x="638.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.91%)</title><rect x="635" y="1988" width="10" height="15" fill="rgb(215,204,31)"/><text x="638.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.91%)</title><rect x="635" y="2004" width="10" height="15" fill="rgb(249,170,15)"/><text x="638.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.91%)</title><rect x="635" y="2020" width="10" height="15" fill="rgb(224,184,6)"/><text x="638.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="640" y="2036" width="5" height="15" fill="rgb(241,162,13)"/><text x="643.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="640" y="2052" width="5" height="15" fill="rgb(238,77,52)"/><text x="643.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="640" y="2068" width="5" height="15" fill="rgb(227,219,50)"/><text x="643.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="640" y="2084" width="5" height="15" fill="rgb(225,7,8)"/><text x="643.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/sslproto.py:11) (1 samples, 0.46%)</title><rect x="640" y="2100" width="5" height="15" fill="rgb(231,123,6)"/><text x="643.00" y="2110.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.46%)</title><rect x="640" y="2116" width="5" height="15" fill="rgb(231,148,32)"/><text x="643.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="640" y="2132" width="5" height="15" fill="rgb(244,24,19)"/><text x="643.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="640" y="2148" width="5" height="15" fill="rgb(239,111,3)"/><text x="643.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="640" y="2164" width="5" height="15" fill="rgb(246,223,16)"/><text x="643.00" y="2174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="640" y="2180" width="5" height="15" fill="rgb(254,191,30)"/><text x="643.00" y="2190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.46%)</title><rect x="640" y="2196" width="5" height="15" fill="rgb(224,133,15)"/><text x="643.00" y="2206.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.46%)</title><rect x="640" y="2212" width="5" height="15" fill="rgb(220,48,32)"/><text x="643.00" y="2222.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.46%)</title><rect x="640" y="2228" width="5" height="15" fill="rgb(216,117,17)"/><text x="643.00" y="2238.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:28) (1 samples, 0.46%)</title><rect x="645" y="84" width="6" height="15" fill="rgb(244,34,5)"/><text x="648.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.46%)</title><rect x="645" y="100" width="6" height="15" fill="rgb(231,28,53)"/><text x="648.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:255) (1 samples, 0.46%)</title><rect x="645" y="116" width="6" height="15" fill="rgb(212,110,31)"/><text x="648.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.46%)</title><rect x="645" y="132" width="6" height="15" fill="rgb(216,49,4)"/><text x="648.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.46%)</title><rect x="645" y="148" width="6" height="15" fill="rgb(227,164,2)"/><text x="648.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.46%)</title><rect x="645" y="164" width="6" height="15" fill="rgb(215,145,29)"/><text x="648.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.46%)</title><rect x="645" y="180" width="6" height="15" fill="rgb(230,84,49)"/><text x="648.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.46%)</title><rect x="645" y="196" width="6" height="15" fill="rgb(226,2,39)"/><text x="648.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="645" y="212" width="6" height="15" fill="rgb(244,193,38)"/><text x="648.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="645" y="228" width="6" height="15" fill="rgb(222,162,26)"/><text x="648.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="645" y="244" width="6" height="15" fill="rgb(212,76,3)"/><text x="648.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="645" y="260" width="6" height="15" fill="rgb(224,119,37)"/><text x="648.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="645" y="276" width="6" height="15" fill="rgb(239,140,49)"/><text x="648.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.46%)</title><rect x="645" y="292" width="6" height="15" fill="rgb(241,122,24)"/><text x="648.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="645" y="308" width="6" height="15" fill="rgb(242,30,40)"/><text x="648.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="645" y="324" width="6" height="15" fill="rgb(232,123,12)"/><text x="648.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="645" y="340" width="6" height="15" fill="rgb(210,212,30)"/><text x="648.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="645" y="356" width="6" height="15" fill="rgb(206,128,14)"/><text x="648.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="645" y="372" width="6" height="15" fill="rgb(217,73,43)"/><text x="648.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.46%)</title><rect x="645" y="388" width="6" height="15" fill="rgb(253,77,54)"/><text x="648.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="645" y="404" width="6" height="15" fill="rgb(232,206,45)"/><text x="648.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="645" y="420" width="6" height="15" fill="rgb(248,208,40)"/><text x="648.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="645" y="436" width="6" height="15" fill="rgb(247,185,10)"/><text x="648.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="645" y="452" width="6" height="15" fill="rgb(242,20,48)"/><text x="648.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="645" y="468" width="6" height="15" fill="rgb(217,190,26)"/><text x="648.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.46%)</title><rect x="645" y="484" width="6" height="15" fill="rgb(221,204,1)"/><text x="648.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.46%)</title><rect x="645" y="500" width="6" height="15" fill="rgb(210,225,28)"/><text x="648.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.46%)</title><rect x="645" y="516" width="6" height="15" fill="rgb(241,118,37)"/><text x="648.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.46%)</title><rect x="645" y="532" width="6" height="15" fill="rgb(225,227,43)"/><text x="648.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:588) (1 samples, 0.46%)</title><rect x="645" y="548" width="6" height="15" fill="rgb(243,129,50)"/><text x="648.00" y="558.50"></text></g><g><title>_compile (jinja2/environment.py:551) (1 samples, 0.46%)</title><rect x="645" y="564" width="6" height="15" fill="rgb(217,144,29)"/><text x="648.00" y="574.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.46%)</title><rect x="651" y="180" width="5" height="15" fill="rgb(212,111,5)"/><text x="654.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:18) (2 samples, 0.91%)</title><rect x="651" y="100" width="10" height="15" fill="rgb(228,135,2)"/><text x="654.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.91%)</title><rect x="651" y="116" width="10" height="15" fill="rgb(244,228,48)"/><text x="654.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (2 samples, 0.91%)</title><rect x="651" y="132" width="10" height="15" fill="rgb(249,70,44)"/><text x="654.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.91%)</title><rect x="651" y="148" width="10" height="15" fill="rgb(209,83,19)"/><text x="654.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.91%)</title><rect x="651" y="164" width="10" height="15" fill="rgb(209,188,37)"/><text x="654.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.46%)</title><rect x="656" y="180" width="5" height="15" fill="rgb(232,204,38)"/><text x="659.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.46%)</title><rect x="656" y="196" width="5" height="15" fill="rgb(213,16,1)"/><text x="659.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.46%)</title><rect x="656" y="212" width="5" height="15" fill="rgb(206,36,27)"/><text x="659.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.46%)</title><rect x="656" y="228" width="5" height="15" fill="rgb(214,167,24)"/><text x="659.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.46%)</title><rect x="667" y="132" width="5" height="15" fill="rgb(249,21,47)"/><text x="670.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.46%)</title><rect x="672" y="148" width="6" height="15" fill="rgb(224,221,27)"/><text x="675.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.37%)</title><rect x="667" y="116" width="16" height="15" fill="rgb(243,78,33)"/><text x="670.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.91%)</title><rect x="672" y="132" width="11" height="15" fill="rgb(238,82,18)"/><text x="675.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.46%)</title><rect x="678" y="148" width="5" height="15" fill="rgb(217,140,5)"/><text x="681.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.46%)</title><rect x="710" y="148" width="5" height="15" fill="rgb(241,202,6)"/><text x="713.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.46%)</title><rect x="715" y="148" width="6" height="15" fill="rgb(237,178,31)"/><text x="718.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.46%)</title><rect x="726" y="164" width="6" height="15" fill="rgb(207,182,44)"/><text x="729.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.91%)</title><rect x="732" y="180" width="10" height="15" fill="rgb(208,159,3)"/><text x="735.00" y="190.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.46%)</title><rect x="764" y="260" width="5" height="15" fill="rgb(250,11,26)"/><text x="767.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:792) (1 samples, 0.46%)</title><rect x="764" y="276" width="5" height="15" fill="rgb(252,119,40)"/><text x="767.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:1062) (1 samples, 0.46%)</title><rect x="775" y="308" width="5" height="15" fill="rgb(240,116,7)"/><text x="778.00" y="318.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.46%)</title><rect x="780" y="308" width="5" height="15" fill="rgb(233,103,52)"/><text x="783.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2089) (1 samples, 0.46%)</title><rect x="780" y="324" width="5" height="15" fill="rgb(252,181,50)"/><text x="783.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.37%)</title><rect x="775" y="276" width="16" height="15" fill="rgb(235,158,47)"/><text x="778.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 1.37%)</title><rect x="775" y="292" width="16" height="15" fill="rgb(242,116,27)"/><text x="778.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.46%)</title><rect x="785" y="308" width="6" height="15" fill="rgb(232,46,24)"/><text x="788.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.46%)</title><rect x="785" y="324" width="6" height="15" fill="rgb(224,46,2)"/><text x="788.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="785" y="340" width="6" height="15" fill="rgb(251,10,16)"/><text x="788.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (6 samples, 2.74%)</title><rect x="764" y="228" width="32" height="15" fill="rgb(247,84,12)"/><text x="767.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (6 samples, 2.74%)</title><rect x="764" y="244" width="32" height="15" fill="rgb(243,84,12)"/><text x="767.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 2.28%)</title><rect x="769" y="260" width="27" height="15" fill="rgb(205,17,5)"/><text x="772.00" y="270.50">d..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.46%)</title><rect x="791" y="276" width="5" height="15" fill="rgb(213,81,22)"/><text x="794.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.46%)</title><rect x="791" y="292" width="5" height="15" fill="rgb(238,70,18)"/><text x="794.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.46%)</title><rect x="791" y="308" width="5" height="15" fill="rgb(239,66,9)"/><text x="794.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.46%)</title><rect x="802" y="260" width="5" height="15" fill="rgb(210,195,3)"/><text x="805.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.46%)</title><rect x="802" y="276" width="5" height="15" fill="rgb(248,1,47)"/><text x="805.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1621) (1 samples, 0.46%)</title><rect x="807" y="276" width="5" height="15" fill="rgb(222,62,19)"/><text x="810.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.46%)</title><rect x="812" y="308" width="6" height="15" fill="rgb(230,215,17)"/><text x="815.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.46%)</title><rect x="812" y="324" width="6" height="15" fill="rgb(217,27,10)"/><text x="815.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1059) (1 samples, 0.46%)</title><rect x="812" y="340" width="6" height="15" fill="rgb(234,217,10)"/><text x="815.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.91%)</title><rect x="812" y="292" width="11" height="15" fill="rgb(207,99,52)"/><text x="815.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.46%)</title><rect x="818" y="308" width="5" height="15" fill="rgb(220,175,8)"/><text x="821.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1672) (1 samples, 0.46%)</title><rect x="818" y="324" width="5" height="15" fill="rgb(238,46,50)"/><text x="821.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.46%)</title><rect x="823" y="292" width="5" height="15" fill="rgb(239,94,45)"/><text x="826.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.46%)</title><rect x="823" y="308" width="5" height="15" fill="rgb(213,100,41)"/><text x="826.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.46%)</title><rect x="823" y="324" width="5" height="15" fill="rgb(249,138,24)"/><text x="826.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.74%)</title><rect x="802" y="244" width="32" height="15" fill="rgb(249,77,52)"/><text x="805.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 2.28%)</title><rect x="807" y="260" width="27" height="15" fill="rgb(212,162,8)"/><text x="810.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.83%)</title><rect x="812" y="276" width="22" height="15" fill="rgb(238,112,28)"/><text x="815.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.46%)</title><rect x="828" y="292" width="6" height="15" fill="rgb(253,149,34)"/><text x="831.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.46%)</title><rect x="828" y="308" width="6" height="15" fill="rgb(237,184,45)"/><text x="831.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (8 samples, 3.65%)</title><rect x="796" y="228" width="43" height="15" fill="rgb(205,37,51)"/><text x="799.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.46%)</title><rect x="834" y="244" width="5" height="15" fill="rgb(239,8,11)"/><text x="837.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.46%)</title><rect x="834" y="260" width="5" height="15" fill="rgb(241,42,1)"/><text x="837.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.91%)</title><rect x="845" y="244" width="10" height="15" fill="rgb(230,133,6)"/><text x="848.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.46%)</title><rect x="861" y="292" width="5" height="15" fill="rgb(247,31,21)"/><text x="864.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.46%)</title><rect x="866" y="308" width="6" height="15" fill="rgb(227,29,25)"/><text x="869.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.46%)</title><rect x="872" y="340" width="5" height="15" fill="rgb(234,220,6)"/><text x="875.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (24 samples, 10.96%)</title><rect x="753" y="196" width="129" height="15" fill="rgb(220,181,32)"/><text x="756.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (23 samples, 10.50%)</title><rect x="758" y="212" width="124" height="15" fill="rgb(249,69,4)"/><text x="761.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (8 samples, 3.65%)</title><rect x="839" y="228" width="43" height="15" fill="rgb(220,25,4)"/><text x="842.00" y="238.50">_run..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 2.28%)</title><rect x="855" y="244" width="27" height="15" fill="rgb(231,198,31)"/><text x="858.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 2.28%)</title><rect x="855" y="260" width="27" height="15" fill="rgb(206,212,16)"/><text x="858.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 2.28%)</title><rect x="855" y="276" width="27" height="15" fill="rgb(239,147,11)"/><text x="858.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.37%)</title><rect x="866" y="292" width="16" height="15" fill="rgb(247,102,32)"/><text x="869.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.91%)</title><rect x="872" y="308" width="10" height="15" fill="rgb(240,118,46)"/><text x="875.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (2 samples, 0.91%)</title><rect x="872" y="324" width="10" height="15" fill="rgb(237,169,2)"/><text x="875.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.46%)</title><rect x="877" y="340" width="5" height="15" fill="rgb(243,156,49)"/><text x="880.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1600) (1 samples, 0.46%)</title><rect x="877" y="356" width="5" height="15" fill="rgb(250,53,24)"/><text x="880.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (28 samples, 12.79%)</title><rect x="742" y="180" width="151" height="15" fill="rgb(218,7,25)"/><text x="745.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.91%)</title><rect x="882" y="196" width="11" height="15" fill="rgb(225,98,35)"/><text x="885.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.46%)</title><rect x="893" y="180" width="6" height="15" fill="rgb(231,169,6)"/><text x="896.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.91%)</title><rect x="899" y="180" width="10" height="15" fill="rgb(237,162,21)"/><text x="902.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 1.37%)</title><rect x="909" y="180" width="16" height="15" fill="rgb(214,61,32)"/><text x="912.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (37 samples, 16.89%)</title><rect x="732" y="164" width="199" height="15" fill="rgb(250,1,26)"/><text x="735.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.46%)</title><rect x="925" y="180" width="6" height="15" fill="rgb(209,196,30)"/><text x="928.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (48 samples, 21.92%)</title><rect x="694" y="132" width="258" height="15" fill="rgb(245,80,52)"/><text x="697.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (43 samples, 19.63%)</title><rect x="721" y="148" width="231" height="15" fill="rgb(246,222,32)"/><text x="724.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.83%)</title><rect x="931" y="164" width="21" height="15" fill="rgb(251,10,10)"/><text x="934.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:45) (60 samples, 27.40%)</title><rect x="645" y="52" width="324" height="15" fill="rgb(232,24,35)"/><text x="648.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinea..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:44) (60 samples, 27.40%)</title><rect x="645" y="68" width="324" height="15" fill="rgb(208,61,22)"/><text x="648.00" y="78.50">profile_pyrt (bench_LogisticRegression_libl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:29) (59 samples, 26.94%)</title><rect x="651" y="84" width="318" height="15" fill="rgb(212,227,37)"/><text x="654.00" y="94.50">setup_profile (bench_LogisticRegression_li..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:23) (57 samples, 26.03%)</title><rect x="661" y="100" width="308" height="15" fill="rgb(228,177,15)"/><text x="664.00" y="110.50">profile (bench_LogisticRegression_libline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (53 samples, 24.20%)</title><rect x="683" y="116" width="286" height="15" fill="rgb(235,163,3)"/><text x="686.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>unicode_concatenate (python3.7) (3 samples, 1.37%)</title><rect x="952" y="132" width="17" height="15" fill="rgb(252,38,42)"/><text x="955.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.46%)</title><rect x="974" y="116" width="5" height="15" fill="rgb(220,33,5)"/><text x="977.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.46%)</title><rect x="979" y="116" width="6" height="15" fill="rgb(218,117,33)"/><text x="982.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.46%)</title><rect x="979" y="132" width="6" height="15" fill="rgb(214,58,22)"/><text x="982.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.46%)</title><rect x="979" y="148" width="6" height="15" fill="rgb(252,116,36)"/><text x="982.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.46%)</title><rect x="1006" y="148" width="6" height="15" fill="rgb(230,140,42)"/><text x="1009.00" y="158.50"></text></g><g><title>0x7f1a4a135001 (?) (1 samples, 0.46%)</title><rect x="1033" y="228" width="6" height="15" fill="rgb(205,220,43)"/><text x="1036.00" y="238.50"></text></g><g><title>0x7f1a4a13e054 (?) (1 samples, 0.46%)</title><rect x="1033" y="244" width="6" height="15" fill="rgb(228,116,29)"/><text x="1036.00" y="254.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (4 samples, 1.83%)</title><rect x="1022" y="196" width="22" height="15" fill="rgb(232,180,51)"/><text x="1025.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 1.37%)</title><rect x="1028" y="212" width="16" height="15" fill="rgb(234,212,53)"/><text x="1031.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1039" y="228" width="5" height="15" fill="rgb(230,43,13)"/><text x="1042.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="1039" y="244" width="5" height="15" fill="rgb(206,153,6)"/><text x="1042.00" y="254.50"></text></g><g><title>0x7f1a79b90d50 (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="1039" y="260" width="5" height="15" fill="rgb(229,141,33)"/><text x="1042.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1076" y="292" width="6" height="15" fill="rgb(231,161,10)"/><text x="1079.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1076" y="308" width="6" height="15" fill="rgb(214,100,18)"/><text x="1079.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1082" y="292" width="5" height="15" fill="rgb(249,120,46)"/><text x="1085.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1082" y="308" width="5" height="15" fill="rgb(233,121,31)"/><text x="1085.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="1082" y="324" width="5" height="15" fill="rgb(245,39,4)"/><text x="1085.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1082" y="340" width="5" height="15" fill="rgb(218,177,18)"/><text x="1085.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1087" y="340" width="6" height="15" fill="rgb(235,47,24)"/><text x="1090.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1087" y="356" width="6" height="15" fill="rgb(254,14,39)"/><text x="1090.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="1087" y="372" width="6" height="15" fill="rgb(221,147,34)"/><text x="1090.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.74%)</title><rect x="1066" y="260" width="32" height="15" fill="rgb(250,161,28)"/><text x="1069.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.28%)</title><rect x="1071" y="276" width="27" height="15" fill="rgb(237,104,13)"/><text x="1074.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.91%)</title><rect x="1087" y="292" width="11" height="15" fill="rgb(219,73,43)"/><text x="1090.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.91%)</title><rect x="1087" y="308" width="11" height="15" fill="rgb(245,84,49)"/><text x="1090.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.91%)</title><rect x="1087" y="324" width="11" height="15" fill="rgb(244,43,53)"/><text x="1090.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1093" y="340" width="5" height="15" fill="rgb(247,138,51)"/><text x="1096.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1093" y="356" width="5" height="15" fill="rgb(230,27,32)"/><text x="1096.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1093" y="372" width="5" height="15" fill="rgb(216,44,27)"/><text x="1096.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1093" y="388" width="5" height="15" fill="rgb(219,170,32)"/><text x="1096.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1093" y="404" width="5" height="15" fill="rgb(212,147,34)"/><text x="1096.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1093" y="420" width="5" height="15" fill="rgb(239,173,20)"/><text x="1096.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1093" y="436" width="5" height="15" fill="rgb(221,163,1)"/><text x="1096.00" y="446.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.83%)</title><rect x="1098" y="260" width="21" height="15" fill="rgb(233,66,25)"/><text x="1101.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1114" y="276" width="5" height="15" fill="rgb(212,211,21)"/><text x="1117.00" y="286.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1119" y="276" width="6" height="15" fill="rgb(208,26,14)"/><text x="1122.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.91%)</title><rect x="1119" y="260" width="11" height="15" fill="rgb(223,93,3)"/><text x="1122.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1125" y="276" width="5" height="15" fill="rgb(205,221,20)"/><text x="1128.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="1125" y="292" width="5" height="15" fill="rgb(235,117,17)"/><text x="1128.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1125" y="308" width="5" height="15" fill="rgb(208,226,49)"/><text x="1128.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 6.39%)</title><rect x="1060" y="244" width="76" height="15" fill="rgb(222,180,42)"/><text x="1063.00" y="254.50">onnxrunt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="260" width="6" height="15" fill="rgb(213,138,48)"/><text x="1133.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="276" width="6" height="15" fill="rgb(231,195,11)"/><text x="1133.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="292" width="6" height="15" fill="rgb(239,216,48)"/><text x="1133.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="308" width="6" height="15" fill="rgb(210,155,4)"/><text x="1133.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="324" width="6" height="15" fill="rgb(211,192,43)"/><text x="1133.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="340" width="6" height="15" fill="rgb(246,51,13)"/><text x="1133.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="356" width="6" height="15" fill="rgb(231,16,18)"/><text x="1133.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="372" width="6" height="15" fill="rgb(227,70,43)"/><text x="1133.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RegionManager::RegionFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="388" width="6" height="15" fill="rgb(244,158,30)"/><text x="1133.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.91%)</title><rect x="1136" y="244" width="10" height="15" fill="rgb(212,45,39)"/><text x="1139.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1141" y="260" width="5" height="15" fill="rgb(209,25,41)"/><text x="1144.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="1141" y="276" width="5" height="15" fill="rgb(218,199,19)"/><text x="1144.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (26 samples, 11.87%)</title><rect x="1012" y="164" width="140" height="15" fill="rgb(244,126,44)"/><text x="1015.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (26 samples, 11.87%)</title><rect x="1012" y="180" width="140" height="15" fill="rgb(233,175,31)"/><text x="1015.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (onnxruntime/capi/session.py:136) (20 samples, 9.13%)</title><rect x="1044" y="196" width="108" height="15" fill="rgb(235,126,29)"/><text x="1047.00" y="206.50">run (onnxrunt..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 7.76%)</title><rect x="1060" y="212" width="92" height="15" fill="rgb(229,161,39)"/><text x="1063.00" y="222.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 7.76%)</title><rect x="1060" y="228" width="92" height="15" fill="rgb(221,102,46)"/><text x="1063.00" y="238.50">void pybin..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1146" y="244" width="6" height="15" fill="rgb(233,77,3)"/><text x="1149.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (33 samples, 15.07%)</title><rect x="1001" y="132" width="178" height="15" fill="rgb(238,6,53)"/><text x="1004.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (31 samples, 14.16%)</title><rect x="1012" y="148" width="167" height="15" fill="rgb(212,3,44)"/><text x="1015.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (5 samples, 2.28%)</title><rect x="1152" y="164" width="27" height="15" fill="rgb(216,201,21)"/><text x="1155.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.37%)</title><rect x="1163" y="180" width="16" height="15" fill="rgb(205,59,22)"/><text x="1166.00" y="190.50"></text></g><g><title>all (219 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,2,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:52) (41 samples, 18.72%)</title><rect x="969" y="52" width="221" height="15" fill="rgb(230,180,10)"/><text x="972.00" y="62.50">&lt;module&gt; (bench_LogisticRegre..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:51) (41 samples, 18.72%)</title><rect x="969" y="68" width="221" height="15" fill="rgb(214,174,33)"/><text x="972.00" y="78.50">profile_ort (bench_LogisticRe..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:29) (41 samples, 18.72%)</title><rect x="969" y="84" width="221" height="15" fill="rgb(242,30,20)"/><text x="972.00" y="94.50">setup_profile (bench_Logistic..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py:23) (41 samples, 18.72%)</title><rect x="969" y="100" width="221" height="15" fill="rgb(245,181,31)"/><text x="972.00" y="110.50">profile (bench_LogisticRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (38 samples, 17.35%)</title><rect x="985" y="116" width="205" height="15" fill="rgb(235,165,8)"/><text x="988.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.91%)</title><rect x="1179" y="132" width="11" height="15" fill="rgb(229,94,3)"/><text x="1182.00" y="142.50"></text></g></g></svg>