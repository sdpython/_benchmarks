<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(251,190,2)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(240,30,41)"/><text x="13.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(241,76,39)"/><text x="13.00" y="942.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.10%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(209,179,46)"/><text x="13.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(210,183,1)"/><text x="13.00" y="974.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.10%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(247,49,48)"/><text x="13.00" y="990.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(232,131,12)"/><text x="13.00" y="1006.50"></text></g><g><title>0x7f0e3d8fe659 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(207,144,29)"/><text x="13.00" y="1022.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(248,108,46)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(240,172,28)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="11" y="900" width="1" height="15" fill="rgb(234,73,32)"/><text x="14.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(206,116,44)"/><text x="14.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(249,84,23)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(247,170,48)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(209,167,26)"/><text x="14.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(229,126,28)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(206,208,14)"/><text x="14.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(218,85,19)"/><text x="14.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="11" y="1028" width="1" height="15" fill="rgb(242,157,37)"/><text x="14.00" y="1038.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(209,159,21)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(224,182,31)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(219,225,19)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(210,124,0)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(207,49,9)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(230,123,45)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.31%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(231,228,49)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(229,162,45)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(251,83,34)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(214,159,3)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(212,207,12)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(235,69,35)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.31%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(231,219,30)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(249,172,53)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(239,41,4)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(229,9,17)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(223,152,36)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(214,64,18)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.31%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(207,131,33)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(223,12,18)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(252,3,9)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(220,202,31)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(210,216,49)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(230,182,15)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(242,84,31)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(208,121,33)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(238,23,34)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(228,54,32)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(243,205,31)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(210,33,9)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(236,53,10)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(229,97,47)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(233,225,10)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(246,110,23)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(234,161,38)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(224,157,43)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="868" width="1" height="15" fill="rgb(210,44,2)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(251,185,21)"/><text x="15.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(209,215,6)"/><text x="15.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(251,5,10)"/><text x="15.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(207,108,48)"/><text x="15.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(226,63,35)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(230,65,34)"/><text x="15.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(243,4,20)"/><text x="15.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(233,116,45)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(225,20,46)"/><text x="16.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(214,11,1)"/><text x="16.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(222,86,50)"/><text x="16.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(210,224,0)"/><text x="16.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.10%)</title><rect x="13" y="996" width="1" height="15" fill="rgb(242,186,40)"/><text x="16.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1012" width="1" height="15" fill="rgb(229,178,15)"/><text x="16.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1028" width="1" height="15" fill="rgb(227,74,42)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1044" width="1" height="15" fill="rgb(208,146,15)"/><text x="16.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1060" width="1" height="15" fill="rgb(249,56,13)"/><text x="16.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1076" width="1" height="15" fill="rgb(228,69,21)"/><text x="16.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="13" y="1092" width="1" height="15" fill="rgb(206,86,44)"/><text x="16.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1108" width="1" height="15" fill="rgb(210,137,22)"/><text x="16.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="1124" width="1" height="15" fill="rgb(249,68,20)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1140" width="1" height="15" fill="rgb(230,31,10)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1156" width="1" height="15" fill="rgb(205,127,31)"/><text x="16.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1172" width="1" height="15" fill="rgb(221,75,38)"/><text x="16.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="13" y="1188" width="1" height="15" fill="rgb(216,199,40)"/><text x="16.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1204" width="1" height="15" fill="rgb(230,189,19)"/><text x="16.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py) (1 samples, 0.10%)</title><rect x="13" y="1220" width="1" height="15" fill="rgb(246,44,35)"/><text x="16.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1236" width="1" height="15" fill="rgb(247,218,15)"/><text x="16.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1252" width="1" height="15" fill="rgb(221,227,26)"/><text x="16.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1268" width="1" height="15" fill="rgb(238,116,6)"/><text x="16.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1284" width="1" height="15" fill="rgb(244,191,32)"/><text x="16.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1300" width="1" height="15" fill="rgb(227,25,25)"/><text x="16.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="13" y="1316" width="1" height="15" fill="rgb(230,29,46)"/><text x="16.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1332" width="1" height="15" fill="rgb(243,63,19)"/><text x="16.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="1348" width="1" height="15" fill="rgb(243,10,32)"/><text x="16.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1364" width="1" height="15" fill="rgb(229,190,23)"/><text x="16.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1380" width="1" height="15" fill="rgb(238,122,48)"/><text x="16.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1396" width="1" height="15" fill="rgb(220,16,43)"/><text x="16.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="13" y="1412" width="1" height="15" fill="rgb(212,41,12)"/><text x="16.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1428" width="1" height="15" fill="rgb(228,83,0)"/><text x="16.00" y="1438.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/_spherical_voronoi.py) (1 samples, 0.10%)</title><rect x="13" y="1444" width="1" height="15" fill="rgb(217,102,42)"/><text x="16.00" y="1454.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1460" width="1" height="15" fill="rgb(244,8,45)"/><text x="16.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1476" width="1" height="15" fill="rgb(229,61,50)"/><text x="16.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1492" width="1" height="15" fill="rgb(231,130,19)"/><text x="16.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1508" width="1" height="15" fill="rgb(230,0,6)"/><text x="16.00" y="1518.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="13" y="1524" width="1" height="15" fill="rgb(232,36,41)"/><text x="16.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.51%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(216,172,2)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.51%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(230,47,32)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.51%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(211,46,9)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.51%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(226,228,49)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.51%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(217,31,6)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.51%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(238,70,2)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.21%)</title><rect x="13" y="292" width="3" height="15" fill="rgb(224,140,21)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="308" width="3" height="15" fill="rgb(235,93,42)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="324" width="3" height="15" fill="rgb(227,223,50)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="340" width="3" height="15" fill="rgb(247,28,9)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="13" y="356" width="3" height="15" fill="rgb(239,71,8)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="372" width="3" height="15" fill="rgb(209,94,43)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.21%)</title><rect x="13" y="388" width="3" height="15" fill="rgb(230,92,50)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="404" width="3" height="15" fill="rgb(224,97,31)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="420" width="3" height="15" fill="rgb(211,157,5)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="436" width="3" height="15" fill="rgb(243,101,23)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="13" y="452" width="3" height="15" fill="rgb(211,175,41)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="468" width="3" height="15" fill="rgb(205,194,32)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.21%)</title><rect x="13" y="484" width="3" height="15" fill="rgb(226,24,22)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="500" width="3" height="15" fill="rgb(214,221,50)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="516" width="3" height="15" fill="rgb(243,137,28)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="532" width="3" height="15" fill="rgb(244,181,51)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="13" y="548" width="3" height="15" fill="rgb(237,161,17)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="564" width="3" height="15" fill="rgb(253,174,13)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.21%)</title><rect x="13" y="580" width="3" height="15" fill="rgb(247,30,28)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="596" width="3" height="15" fill="rgb(240,208,54)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="612" width="3" height="15" fill="rgb(250,212,48)"/><text x="16.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="628" width="3" height="15" fill="rgb(207,125,48)"/><text x="16.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="13" y="644" width="3" height="15" fill="rgb(245,105,22)"/><text x="16.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="660" width="3" height="15" fill="rgb(249,183,41)"/><text x="16.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.21%)</title><rect x="13" y="676" width="3" height="15" fill="rgb(234,85,18)"/><text x="16.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="692" width="3" height="15" fill="rgb(246,4,1)"/><text x="16.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="708" width="3" height="15" fill="rgb(215,132,25)"/><text x="16.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="724" width="3" height="15" fill="rgb(241,47,39)"/><text x="16.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="13" y="740" width="3" height="15" fill="rgb(237,14,25)"/><text x="16.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="756" width="3" height="15" fill="rgb(249,50,40)"/><text x="16.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.21%)</title><rect x="13" y="772" width="3" height="15" fill="rgb(222,30,51)"/><text x="16.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="788" width="3" height="15" fill="rgb(227,142,12)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="804" width="3" height="15" fill="rgb(241,147,13)"/><text x="16.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="820" width="3" height="15" fill="rgb(226,166,20)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="836" width="3" height="15" fill="rgb(228,102,21)"/><text x="16.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(219,142,26)"/><text x="16.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(214,14,20)"/><text x="16.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(218,172,6)"/><text x="16.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.21%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(246,195,36)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(230,70,7)"/><text x="17.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(235,226,49)"/><text x="17.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(214,115,51)"/><text x="17.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(234,154,23)"/><text x="17.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(225,145,5)"/><text x="17.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(245,9,18)"/><text x="17.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(239,65,11)"/><text x="17.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.10%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(242,36,29)"/><text x="17.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.10%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(236,225,53)"/><text x="17.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.10%)</title><rect x="14" y="1060" width="2" height="15" fill="rgb(236,1,1)"/><text x="17.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.10%)</title><rect x="14" y="1076" width="2" height="15" fill="rgb(234,62,47)"/><text x="17.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.10%)</title><rect x="14" y="1092" width="2" height="15" fill="rgb(218,100,15)"/><text x="17.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.10%)</title><rect x="14" y="1108" width="2" height="15" fill="rgb(233,23,18)"/><text x="17.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.10%)</title><rect x="14" y="1124" width="2" height="15" fill="rgb(233,28,42)"/><text x="17.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.10%)</title><rect x="14" y="1140" width="2" height="15" fill="rgb(239,17,35)"/><text x="17.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.10%)</title><rect x="14" y="1156" width="2" height="15" fill="rgb(222,162,22)"/><text x="17.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1124" width="1" height="15" fill="rgb(254,112,26)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1140" width="1" height="15" fill="rgb(234,162,7)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1156" width="1" height="15" fill="rgb(208,130,42)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="16" y="1172" width="1" height="15" fill="rgb(244,171,19)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1188" width="1" height="15" fill="rgb(237,14,45)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.10%)</title><rect x="16" y="1204" width="1" height="15" fill="rgb(243,34,4)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1220" width="1" height="15" fill="rgb(247,143,9)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1236" width="1" height="15" fill="rgb(213,114,19)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1252" width="1" height="15" fill="rgb(228,22,8)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="16" y="1268" width="1" height="15" fill="rgb(248,147,19)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1284" width="1" height="15" fill="rgb(247,210,25)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.10%)</title><rect x="16" y="1300" width="1" height="15" fill="rgb(214,80,12)"/><text x="19.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.10%)</title><rect x="16" y="1316" width="1" height="15" fill="rgb(223,15,24)"/><text x="19.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.10%)</title><rect x="16" y="1332" width="1" height="15" fill="rgb(248,66,21)"/><text x="19.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.10%)</title><rect x="16" y="1348" width="1" height="15" fill="rgb(231,183,9)"/><text x="19.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.10%)</title><rect x="16" y="1364" width="1" height="15" fill="rgb(235,95,50)"/><text x="19.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.10%)</title><rect x="16" y="1380" width="1" height="15" fill="rgb(229,229,44)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.10%)</title><rect x="17" y="1236" width="1" height="15" fill="rgb(227,148,38)"/><text x="20.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1252" width="1" height="15" fill="rgb(235,222,36)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1268" width="1" height="15" fill="rgb(229,13,15)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1284" width="1" height="15" fill="rgb(239,136,32)"/><text x="20.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1300" width="1" height="15" fill="rgb(225,9,11)"/><text x="20.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1316" width="1" height="15" fill="rgb(240,144,53)"/><text x="20.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="1332" width="1" height="15" fill="rgb(205,178,37)"/><text x="20.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1348" width="1" height="15" fill="rgb(210,174,11)"/><text x="20.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.10%)</title><rect x="17" y="1364" width="1" height="15" fill="rgb(209,137,37)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1380" width="1" height="15" fill="rgb(231,208,23)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1396" width="1" height="15" fill="rgb(216,44,24)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1412" width="1" height="15" fill="rgb(250,79,20)"/><text x="20.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="1428" width="1" height="15" fill="rgb(210,124,33)"/><text x="20.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1444" width="1" height="15" fill="rgb(219,43,22)"/><text x="20.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="17" y="1460" width="1" height="15" fill="rgb(239,188,18)"/><text x="20.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="17" y="1476" width="1" height="15" fill="rgb(235,118,30)"/><text x="20.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="17" y="1492" width="1" height="15" fill="rgb(220,168,12)"/><text x="20.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.10%)</title><rect x="17" y="1508" width="1" height="15" fill="rgb(247,89,24)"/><text x="20.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.10%)</title><rect x="17" y="1524" width="1" height="15" fill="rgb(233,185,17)"/><text x="20.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.10%)</title><rect x="17" y="1540" width="1" height="15" fill="rgb(232,118,48)"/><text x="20.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.10%)</title><rect x="17" y="1556" width="1" height="15" fill="rgb(241,228,4)"/><text x="20.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.10%)</title><rect x="17" y="1572" width="1" height="15" fill="rgb(205,65,42)"/><text x="20.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.10%)</title><rect x="17" y="1588" width="1" height="15" fill="rgb(215,112,29)"/><text x="20.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="484" width="3" height="15" fill="rgb(210,69,28)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="500" width="3" height="15" fill="rgb(221,50,30)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="516" width="3" height="15" fill="rgb(245,118,10)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="532" width="3" height="15" fill="rgb(245,229,13)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="16" y="548" width="3" height="15" fill="rgb(211,113,11)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="564" width="3" height="15" fill="rgb(252,139,45)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.31%)</title><rect x="16" y="580" width="3" height="15" fill="rgb(232,6,17)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="596" width="3" height="15" fill="rgb(211,42,52)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="612" width="3" height="15" fill="rgb(251,41,45)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="628" width="3" height="15" fill="rgb(223,216,5)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="16" y="644" width="3" height="15" fill="rgb(221,20,51)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="660" width="3" height="15" fill="rgb(222,0,27)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.31%)</title><rect x="16" y="676" width="3" height="15" fill="rgb(235,94,27)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="692" width="3" height="15" fill="rgb(207,44,5)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="708" width="3" height="15" fill="rgb(215,225,27)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="724" width="3" height="15" fill="rgb(235,86,34)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="16" y="740" width="3" height="15" fill="rgb(209,205,10)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="756" width="3" height="15" fill="rgb(245,128,10)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.31%)</title><rect x="16" y="772" width="3" height="15" fill="rgb(247,39,17)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="788" width="3" height="15" fill="rgb(251,119,5)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="804" width="3" height="15" fill="rgb(226,101,2)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="820" width="3" height="15" fill="rgb(224,202,48)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(242,79,14)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(234,156,37)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.31%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(235,223,7)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(225,104,26)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(229,148,8)"/><text x="19.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(226,47,21)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(224,27,41)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(252,123,37)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(230,179,32)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(234,145,34)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(236,99,22)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.31%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(224,123,54)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(229,209,53)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(214,75,22)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(233,214,12)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(224,179,22)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="16" y="1092" width="3" height="15" fill="rgb(218,96,31)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.31%)</title><rect x="16" y="1108" width="3" height="15" fill="rgb(229,56,36)"/><text x="19.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(234,142,52)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(240,139,32)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(250,123,22)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(253,224,0)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(240,96,46)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(237,41,15)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(216,110,19)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py) (1 samples, 0.10%)</title><rect x="18" y="1236" width="1" height="15" fill="rgb(235,89,26)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1252" width="1" height="15" fill="rgb(227,99,14)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1268" width="1" height="15" fill="rgb(213,126,53)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1284" width="1" height="15" fill="rgb(253,141,50)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1300" width="1" height="15" fill="rgb(222,191,12)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1316" width="1" height="15" fill="rgb(228,199,6)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1332" width="1" height="15" fill="rgb(246,29,35)"/><text x="21.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1348" width="1" height="15" fill="rgb(243,119,8)"/><text x="21.00" y="1358.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1364" width="1" height="15" fill="rgb(226,125,23)"/><text x="21.00" y="1374.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="18" y="1380" width="1" height="15" fill="rgb(240,57,6)"/><text x="21.00" y="1390.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.10%)</title><rect x="19" y="1588" width="1" height="15" fill="rgb(228,181,16)"/><text x="22.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1604" width="1" height="15" fill="rgb(218,61,5)"/><text x="22.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1620" width="1" height="15" fill="rgb(232,28,17)"/><text x="22.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1636" width="1" height="15" fill="rgb(220,123,8)"/><text x="22.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="1652" width="1" height="15" fill="rgb(227,193,31)"/><text x="22.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1668" width="1" height="15" fill="rgb(243,80,8)"/><text x="22.00" y="1678.50"></text></g><g><title>&lt;module&gt; (matplotlib/transforms.py) (1 samples, 0.10%)</title><rect x="19" y="1684" width="1" height="15" fill="rgb(221,12,11)"/><text x="22.00" y="1694.50"></text></g><g><title>Transform (matplotlib/transforms.py) (1 samples, 0.10%)</title><rect x="19" y="1700" width="1" height="15" fill="rgb(226,174,37)"/><text x="22.00" y="1710.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.10%)</title><rect x="20" y="1684" width="2" height="15" fill="rgb(217,115,34)"/><text x="23.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1700" width="2" height="15" fill="rgb(205,189,43)"/><text x="23.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1716" width="2" height="15" fill="rgb(233,37,1)"/><text x="23.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1732" width="2" height="15" fill="rgb(205,208,26)"/><text x="23.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1748" width="2" height="15" fill="rgb(251,50,8)"/><text x="23.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1764" width="2" height="15" fill="rgb(216,91,15)"/><text x="23.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.10%)</title><rect x="20" y="1780" width="2" height="15" fill="rgb(208,225,17)"/><text x="23.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.10%)</title><rect x="20" y="1796" width="2" height="15" fill="rgb(205,130,27)"/><text x="23.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.10%)</title><rect x="20" y="1812" width="2" height="15" fill="rgb(208,155,19)"/><text x="23.00" y="1822.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (1 samples, 0.10%)</title><rect x="20" y="1828" width="2" height="15" fill="rgb(253,159,29)"/><text x="23.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.10%)</title><rect x="20" y="1844" width="2" height="15" fill="rgb(236,183,50)"/><text x="23.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (1 samples, 0.10%)</title><rect x="20" y="1860" width="2" height="15" fill="rgb(231,187,8)"/><text x="23.00" y="1870.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 0.62%)</title><rect x="16" y="340" width="7" height="15" fill="rgb(241,172,50)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.62%)</title><rect x="16" y="356" width="7" height="15" fill="rgb(209,218,13)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.62%)</title><rect x="16" y="372" width="7" height="15" fill="rgb(248,128,28)"/><text x="19.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.62%)</title><rect x="16" y="388" width="7" height="15" fill="rgb(214,100,54)"/><text x="19.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.62%)</title><rect x="16" y="404" width="7" height="15" fill="rgb(247,156,20)"/><text x="19.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.62%)</title><rect x="16" y="420" width="7" height="15" fill="rgb(226,113,36)"/><text x="19.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 0.62%)</title><rect x="16" y="436" width="7" height="15" fill="rgb(232,112,37)"/><text x="19.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.62%)</title><rect x="16" y="452" width="7" height="15" fill="rgb(210,216,1)"/><text x="19.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.62%)</title><rect x="16" y="468" width="7" height="15" fill="rgb(242,201,23)"/><text x="19.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="484" width="4" height="15" fill="rgb(245,229,51)"/><text x="22.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="500" width="4" height="15" fill="rgb(230,227,42)"/><text x="22.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="516" width="4" height="15" fill="rgb(254,157,24)"/><text x="22.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.31%)</title><rect x="19" y="532" width="4" height="15" fill="rgb(218,175,54)"/><text x="22.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="548" width="4" height="15" fill="rgb(245,168,14)"/><text x="22.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="564" width="4" height="15" fill="rgb(208,67,43)"/><text x="22.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="580" width="4" height="15" fill="rgb(213,215,36)"/><text x="22.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="596" width="4" height="15" fill="rgb(236,215,14)"/><text x="22.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="612" width="4" height="15" fill="rgb(208,61,44)"/><text x="22.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.31%)</title><rect x="19" y="628" width="4" height="15" fill="rgb(227,17,23)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="644" width="4" height="15" fill="rgb(227,183,10)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="660" width="4" height="15" fill="rgb(234,214,18)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="676" width="4" height="15" fill="rgb(248,37,10)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="692" width="4" height="15" fill="rgb(216,88,32)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="708" width="4" height="15" fill="rgb(250,186,14)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.31%)</title><rect x="19" y="724" width="4" height="15" fill="rgb(206,225,39)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="740" width="4" height="15" fill="rgb(238,138,34)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="756" width="4" height="15" fill="rgb(208,65,48)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="772" width="4" height="15" fill="rgb(238,142,43)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="788" width="4" height="15" fill="rgb(223,95,19)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="804" width="4" height="15" fill="rgb(222,145,47)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.31%)</title><rect x="19" y="820" width="4" height="15" fill="rgb(213,111,9)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(241,25,44)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(211,114,34)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(218,27,10)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="884" width="4" height="15" fill="rgb(248,21,39)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="900" width="4" height="15" fill="rgb(209,164,18)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.31%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(250,133,15)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(228,34,51)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="948" width="4" height="15" fill="rgb(218,204,51)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="964" width="4" height="15" fill="rgb(206,172,13)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="980" width="4" height="15" fill="rgb(219,123,12)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="996" width="4" height="15" fill="rgb(234,54,30)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.31%)</title><rect x="19" y="1012" width="4" height="15" fill="rgb(238,124,31)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1028" width="4" height="15" fill="rgb(217,132,43)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1044" width="4" height="15" fill="rgb(232,2,15)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1060" width="4" height="15" fill="rgb(207,27,33)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="1076" width="4" height="15" fill="rgb(209,72,19)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1092" width="4" height="15" fill="rgb(207,218,6)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.31%)</title><rect x="19" y="1108" width="4" height="15" fill="rgb(254,190,45)"/><text x="22.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1124" width="4" height="15" fill="rgb(224,2,7)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1140" width="4" height="15" fill="rgb(228,186,52)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1156" width="4" height="15" fill="rgb(208,137,51)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="1172" width="4" height="15" fill="rgb(221,49,45)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1188" width="4" height="15" fill="rgb(237,46,22)"/><text x="22.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.31%)</title><rect x="19" y="1204" width="4" height="15" fill="rgb(210,65,0)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1220" width="4" height="15" fill="rgb(206,90,14)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1236" width="4" height="15" fill="rgb(218,154,27)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1252" width="4" height="15" fill="rgb(246,215,5)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="1268" width="4" height="15" fill="rgb(226,41,25)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1284" width="4" height="15" fill="rgb(219,194,42)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.31%)</title><rect x="19" y="1300" width="4" height="15" fill="rgb(239,63,54)"/><text x="22.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1316" width="4" height="15" fill="rgb(212,182,7)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1332" width="4" height="15" fill="rgb(247,19,3)"/><text x="22.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1348" width="4" height="15" fill="rgb(230,173,46)"/><text x="22.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="1364" width="4" height="15" fill="rgb(208,40,2)"/><text x="22.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1380" width="4" height="15" fill="rgb(238,229,10)"/><text x="22.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.31%)</title><rect x="19" y="1396" width="4" height="15" fill="rgb(237,46,35)"/><text x="22.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1412" width="4" height="15" fill="rgb(224,109,46)"/><text x="22.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1428" width="4" height="15" fill="rgb(207,111,39)"/><text x="22.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1444" width="4" height="15" fill="rgb(224,170,44)"/><text x="22.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="1460" width="4" height="15" fill="rgb(224,205,7)"/><text x="22.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1476" width="4" height="15" fill="rgb(212,148,19)"/><text x="22.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.31%)</title><rect x="19" y="1492" width="4" height="15" fill="rgb(229,39,29)"/><text x="22.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1508" width="4" height="15" fill="rgb(209,206,40)"/><text x="22.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1524" width="4" height="15" fill="rgb(229,137,16)"/><text x="22.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1540" width="4" height="15" fill="rgb(220,41,49)"/><text x="22.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="19" y="1556" width="4" height="15" fill="rgb(230,144,24)"/><text x="22.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="19" y="1572" width="4" height="15" fill="rgb(232,14,20)"/><text x="22.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.21%)</title><rect x="20" y="1588" width="3" height="15" fill="rgb(219,210,29)"/><text x="23.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1604" width="3" height="15" fill="rgb(219,172,47)"/><text x="23.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1620" width="3" height="15" fill="rgb(224,119,48)"/><text x="23.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1636" width="3" height="15" fill="rgb(235,222,15)"/><text x="23.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="1652" width="3" height="15" fill="rgb(217,144,47)"/><text x="23.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1668" width="3" height="15" fill="rgb(246,21,8)"/><text x="23.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.10%)</title><rect x="22" y="1684" width="1" height="15" fill="rgb(221,207,17)"/><text x="25.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1700" width="1" height="15" fill="rgb(206,191,35)"/><text x="25.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1716" width="1" height="15" fill="rgb(236,116,46)"/><text x="25.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1732" width="1" height="15" fill="rgb(227,78,20)"/><text x="25.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="1748" width="1" height="15" fill="rgb(223,12,49)"/><text x="25.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1764" width="1" height="15" fill="rgb(206,55,11)"/><text x="25.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.10%)</title><rect x="22" y="1780" width="1" height="15" fill="rgb(232,79,6)"/><text x="25.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1796" width="1" height="15" fill="rgb(205,190,53)"/><text x="25.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1812" width="1" height="15" fill="rgb(229,97,14)"/><text x="25.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1828" width="1" height="15" fill="rgb(211,150,40)"/><text x="25.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="1844" width="1" height="15" fill="rgb(221,168,45)"/><text x="25.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1860" width="1" height="15" fill="rgb(213,115,35)"/><text x="25.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.10%)</title><rect x="22" y="1876" width="1" height="15" fill="rgb(215,214,42)"/><text x="25.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.10%)</title><rect x="22" y="1892" width="1" height="15" fill="rgb(254,161,38)"/><text x="25.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.10%)</title><rect x="22" y="1908" width="1" height="15" fill="rgb(212,98,39)"/><text x="25.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.10%)</title><rect x="22" y="1924" width="1" height="15" fill="rgb(227,5,47)"/><text x="25.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.10%)</title><rect x="22" y="1940" width="1" height="15" fill="rgb(249,30,54)"/><text x="25.00" y="1950.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.10%)</title><rect x="22" y="1956" width="1" height="15" fill="rgb(229,23,39)"/><text x="25.00" y="1966.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.10%)</title><rect x="22" y="1972" width="1" height="15" fill="rgb(212,97,52)"/><text x="25.00" y="1982.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="980" width="1" height="15" fill="rgb(232,212,34)"/><text x="26.00" y="990.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="996" width="1" height="15" fill="rgb(250,207,34)"/><text x="26.00" y="1006.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.10%)</title><rect x="23" y="1012" width="1" height="15" fill="rgb(226,28,26)"/><text x="26.00" y="1022.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.10%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(205,103,4)"/><text x="26.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 0.82%)</title><rect x="16" y="244" width="9" height="15" fill="rgb(221,19,5)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.82%)</title><rect x="16" y="260" width="9" height="15" fill="rgb(217,156,34)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.82%)</title><rect x="16" y="276" width="9" height="15" fill="rgb(227,189,3)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.82%)</title><rect x="16" y="292" width="9" height="15" fill="rgb(251,35,23)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.82%)</title><rect x="16" y="308" width="9" height="15" fill="rgb(239,142,19)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.82%)</title><rect x="16" y="324" width="9" height="15" fill="rgb(254,81,17)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.21%)</title><rect x="23" y="340" width="2" height="15" fill="rgb(236,188,34)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="356" width="2" height="15" fill="rgb(249,69,10)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="372" width="2" height="15" fill="rgb(215,56,50)"/><text x="26.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="388" width="2" height="15" fill="rgb(252,146,28)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="404" width="2" height="15" fill="rgb(233,176,11)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="420" width="2" height="15" fill="rgb(205,217,9)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="436" width="2" height="15" fill="rgb(214,181,29)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="23" y="452" width="2" height="15" fill="rgb(239,49,9)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="468" width="2" height="15" fill="rgb(246,115,16)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.21%)</title><rect x="23" y="484" width="2" height="15" fill="rgb(220,112,14)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="500" width="2" height="15" fill="rgb(241,57,6)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="516" width="2" height="15" fill="rgb(226,66,26)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="532" width="2" height="15" fill="rgb(216,173,50)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="23" y="548" width="2" height="15" fill="rgb(251,186,3)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="564" width="2" height="15" fill="rgb(207,217,20)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.21%)</title><rect x="23" y="580" width="2" height="15" fill="rgb(251,153,9)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="596" width="2" height="15" fill="rgb(215,151,54)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="612" width="2" height="15" fill="rgb(248,216,24)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="628" width="2" height="15" fill="rgb(237,5,33)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="23" y="644" width="2" height="15" fill="rgb(240,43,52)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="660" width="2" height="15" fill="rgb(222,119,27)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.21%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(208,191,37)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(214,18,18)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(232,90,22)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(236,87,52)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(209,36,39)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(224,163,35)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.21%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(244,214,44)"/><text x="26.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(206,22,6)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(234,52,0)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(207,0,32)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(250,130,38)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(242,124,29)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(253,144,52)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(207,38,42)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.21%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(232,168,46)"/><text x="26.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(223,221,5)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(222,132,34)"/><text x="26.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(213,136,3)"/><text x="26.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(243,77,29)"/><text x="26.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="980" width="1" height="15" fill="rgb(222,157,53)"/><text x="27.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="996" width="1" height="15" fill="rgb(237,138,15)"/><text x="27.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1012" width="1" height="15" fill="rgb(249,186,10)"/><text x="27.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1028" width="1" height="15" fill="rgb(234,73,52)"/><text x="27.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="1044" width="1" height="15" fill="rgb(235,92,14)"/><text x="27.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1060" width="1" height="15" fill="rgb(243,153,51)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1076" width="1" height="15" fill="rgb(225,81,39)"/><text x="27.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1092" width="1" height="15" fill="rgb(234,114,42)"/><text x="27.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1108" width="1" height="15" fill="rgb(206,67,35)"/><text x="27.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1124" width="1" height="15" fill="rgb(211,83,54)"/><text x="27.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1140" width="1" height="15" fill="rgb(248,4,49)"/><text x="27.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1156" width="1" height="15" fill="rgb(228,103,5)"/><text x="27.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.10%)</title><rect x="24" y="1172" width="1" height="15" fill="rgb(213,122,35)"/><text x="27.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1188" width="1" height="15" fill="rgb(254,110,9)"/><text x="27.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1204" width="1" height="15" fill="rgb(211,48,13)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1220" width="1" height="15" fill="rgb(212,136,54)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1236" width="1" height="15" fill="rgb(224,56,11)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1252" width="1" height="15" fill="rgb(216,18,48)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1268" width="1" height="15" fill="rgb(253,80,0)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1284" width="1" height="15" fill="rgb(215,29,37)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="1300" width="1" height="15" fill="rgb(226,84,54)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1316" width="1" height="15" fill="rgb(222,228,19)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1332" width="1" height="15" fill="rgb(226,22,22)"/><text x="27.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1348" width="1" height="15" fill="rgb(208,75,32)"/><text x="27.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1364" width="1" height="15" fill="rgb(250,101,22)"/><text x="27.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1380" width="1" height="15" fill="rgb(250,14,31)"/><text x="27.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.10%)</title><rect x="24" y="1396" width="1" height="15" fill="rgb(219,52,27)"/><text x="27.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1412" width="1" height="15" fill="rgb(213,136,43)"/><text x="27.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1428" width="1" height="15" fill="rgb(251,54,28)"/><text x="27.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1444" width="1" height="15" fill="rgb(209,82,30)"/><text x="27.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1460" width="1" height="15" fill="rgb(230,158,38)"/><text x="27.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1476" width="1" height="15" fill="rgb(219,61,14)"/><text x="27.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1492" width="1" height="15" fill="rgb(225,15,20)"/><text x="27.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1508" width="1" height="15" fill="rgb(223,179,39)"/><text x="27.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/rsa.py) (1 samples, 0.10%)</title><rect x="24" y="1524" width="1" height="15" fill="rgb(230,219,52)"/><text x="27.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1540" width="1" height="15" fill="rgb(243,68,30)"/><text x="27.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1556" width="1" height="15" fill="rgb(248,93,53)"/><text x="27.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1572" width="1" height="15" fill="rgb(226,16,40)"/><text x="27.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1588" width="1" height="15" fill="rgb(246,223,17)"/><text x="27.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1604" width="1" height="15" fill="rgb(209,117,40)"/><text x="27.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1620" width="1" height="15" fill="rgb(252,6,41)"/><text x="27.00" y="1630.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1636" width="1" height="15" fill="rgb(243,131,43)"/><text x="27.00" y="1646.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1652" width="1" height="15" fill="rgb(246,78,50)"/><text x="27.00" y="1662.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1668" width="1" height="15" fill="rgb(231,67,41)"/><text x="27.00" y="1678.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1684" width="1" height="15" fill="rgb(226,76,12)"/><text x="27.00" y="1694.50"></text></g><g><title>0x7f0e17814373 (?) (1 samples, 0.10%)</title><rect x="25" y="628" width="1" height="15" fill="rgb(216,40,44)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="644" width="1" height="15" fill="rgb(239,206,23)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="660" width="1" height="15" fill="rgb(230,80,16)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="676" width="1" height="15" fill="rgb(207,219,28)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="25" y="692" width="1" height="15" fill="rgb(211,219,18)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="708" width="1" height="15" fill="rgb(207,89,18)"/><text x="28.00" y="718.50"></text></g><g><title>0x7f0e175d7eea (?) (1 samples, 0.10%)</title><rect x="25" y="724" width="1" height="15" fill="rgb(247,44,10)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="740" width="1" height="15" fill="rgb(244,166,54)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="756" width="1" height="15" fill="rgb(210,123,45)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="772" width="1" height="15" fill="rgb(217,217,34)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="25" y="788" width="1" height="15" fill="rgb(223,15,31)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="804" width="1" height="15" fill="rgb(212,38,13)"/><text x="28.00" y="814.50"></text></g><g><title>0x7f0e17370887 (?) (1 samples, 0.10%)</title><rect x="25" y="820" width="1" height="15" fill="rgb(229,70,52)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="836" width="1" height="15" fill="rgb(209,65,33)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="852" width="1" height="15" fill="rgb(213,172,14)"/><text x="28.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="868" width="1" height="15" fill="rgb(232,186,43)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="884" width="1" height="15" fill="rgb(250,162,6)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="900" width="1" height="15" fill="rgb(205,23,5)"/><text x="28.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="916" width="1" height="15" fill="rgb(223,130,44)"/><text x="28.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="25" y="932" width="1" height="15" fill="rgb(221,206,37)"/><text x="28.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="948" width="1" height="15" fill="rgb(229,51,16)"/><text x="28.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.10%)</title><rect x="25" y="964" width="1" height="15" fill="rgb(211,155,16)"/><text x="28.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="980" width="1" height="15" fill="rgb(205,53,45)"/><text x="28.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="996" width="1" height="15" fill="rgb(222,37,15)"/><text x="28.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="1012" width="1" height="15" fill="rgb(250,85,28)"/><text x="28.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="25" y="1028" width="1" height="15" fill="rgb(214,64,32)"/><text x="28.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="25" y="1044" width="1" height="15" fill="rgb(242,161,8)"/><text x="28.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_lof.py) (1 samples, 0.10%)</title><rect x="25" y="1060" width="1" height="15" fill="rgb(223,184,10)"/><text x="28.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.54%)</title><rect x="10" y="68" width="18" height="15" fill="rgb(208,127,18)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.54%)</title><rect x="10" y="84" width="18" height="15" fill="rgb(227,187,49)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.54%)</title><rect x="10" y="100" width="18" height="15" fill="rgb(253,45,5)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.54%)</title><rect x="10" y="116" width="18" height="15" fill="rgb(214,4,16)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.54%)</title><rect x="10" y="132" width="18" height="15" fill="rgb(224,129,24)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (15 samples, 1.54%)</title><rect x="10" y="148" width="18" height="15" fill="rgb(252,104,12)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.54%)</title><rect x="10" y="164" width="18" height="15" fill="rgb(238,73,29)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.54%)</title><rect x="10" y="180" width="18" height="15" fill="rgb(219,138,48)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.03%)</title><rect x="16" y="196" width="12" height="15" fill="rgb(239,181,44)"/><text x="19.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.03%)</title><rect x="16" y="212" width="12" height="15" fill="rgb(216,142,49)"/><text x="19.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.03%)</title><rect x="16" y="228" width="12" height="15" fill="rgb(243,135,22)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (2 samples, 0.21%)</title><rect x="25" y="244" width="3" height="15" fill="rgb(208,89,35)"/><text x="28.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="260" width="3" height="15" fill="rgb(205,187,49)"/><text x="28.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="276" width="3" height="15" fill="rgb(232,68,19)"/><text x="28.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="292" width="3" height="15" fill="rgb(220,85,36)"/><text x="28.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="25" y="308" width="3" height="15" fill="rgb(253,167,53)"/><text x="28.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="324" width="3" height="15" fill="rgb(216,16,47)"/><text x="28.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.21%)</title><rect x="25" y="340" width="3" height="15" fill="rgb(241,146,6)"/><text x="28.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="356" width="3" height="15" fill="rgb(232,221,4)"/><text x="28.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="372" width="3" height="15" fill="rgb(239,88,38)"/><text x="28.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="388" width="3" height="15" fill="rgb(252,16,27)"/><text x="28.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="25" y="404" width="3" height="15" fill="rgb(242,120,27)"/><text x="28.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="420" width="3" height="15" fill="rgb(254,193,42)"/><text x="28.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (2 samples, 0.21%)</title><rect x="25" y="436" width="3" height="15" fill="rgb(235,218,12)"/><text x="28.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="452" width="3" height="15" fill="rgb(231,31,24)"/><text x="28.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="468" width="3" height="15" fill="rgb(228,198,15)"/><text x="28.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="484" width="3" height="15" fill="rgb(205,180,10)"/><text x="28.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="25" y="500" width="3" height="15" fill="rgb(245,118,14)"/><text x="28.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="516" width="3" height="15" fill="rgb(229,59,5)"/><text x="28.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (2 samples, 0.21%)</title><rect x="25" y="532" width="3" height="15" fill="rgb(241,138,48)"/><text x="28.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="548" width="3" height="15" fill="rgb(220,52,9)"/><text x="28.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="564" width="3" height="15" fill="rgb(207,156,48)"/><text x="28.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="580" width="3" height="15" fill="rgb(230,224,41)"/><text x="28.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="25" y="596" width="3" height="15" fill="rgb(236,39,8)"/><text x="28.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="25" y="612" width="3" height="15" fill="rgb(236,118,42)"/><text x="28.00" y="622.50"></text></g><g><title>0x7f0e17814373 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(221,10,29)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(241,115,11)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(219,150,13)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(250,71,13)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(212,143,28)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(223,152,51)"/><text x="29.00" y="718.50"></text></g><g><title>0x7f0e175d7eea (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(229,225,27)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(239,76,44)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(253,33,34)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(215,136,8)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(244,119,17)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(226,3,7)"/><text x="29.00" y="814.50"></text></g><g><title>0x7f0e17370887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(219,149,46)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(210,71,0)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(253,92,30)"/><text x="29.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(235,132,24)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(211,167,52)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(226,41,11)"/><text x="29.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(207,151,53)"/><text x="29.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(252,167,28)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(233,140,23)"/><text x="29.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.10%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(239,125,33)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(205,177,10)"/><text x="29.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(232,206,1)"/><text x="29.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(237,166,28)"/><text x="29.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(222,94,31)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(247,82,26)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.10%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(216,3,52)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(233,27,10)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(244,80,49)"/><text x="29.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(243,82,22)"/><text x="29.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(242,58,22)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(228,189,27)"/><text x="29.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.10%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(251,181,46)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1172" width="2" height="15" fill="rgb(233,140,0)"/><text x="29.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1188" width="2" height="15" fill="rgb(243,224,54)"/><text x="29.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1204" width="2" height="15" fill="rgb(231,12,20)"/><text x="29.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1220" width="2" height="15" fill="rgb(235,142,28)"/><text x="29.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1236" width="2" height="15" fill="rgb(209,88,13)"/><text x="29.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.10%)</title><rect x="26" y="1252" width="2" height="15" fill="rgb(242,70,22)"/><text x="29.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1268" width="2" height="15" fill="rgb(225,47,39)"/><text x="29.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1284" width="2" height="15" fill="rgb(223,192,54)"/><text x="29.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1300" width="2" height="15" fill="rgb(218,158,7)"/><text x="29.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1316" width="2" height="15" fill="rgb(224,158,36)"/><text x="29.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1332" width="2" height="15" fill="rgb(248,33,25)"/><text x="29.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.10%)</title><rect x="26" y="1348" width="2" height="15" fill="rgb(230,160,37)"/><text x="29.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1364" width="2" height="15" fill="rgb(228,90,3)"/><text x="29.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1380" width="2" height="15" fill="rgb(213,166,33)"/><text x="29.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1396" width="2" height="15" fill="rgb(206,73,28)"/><text x="29.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1412" width="2" height="15" fill="rgb(212,136,29)"/><text x="29.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1428" width="2" height="15" fill="rgb(233,205,51)"/><text x="29.00" y="1438.50"></text></g><g><title>0x7f0dfd60bff9 (?) (1 samples, 0.10%)</title><rect x="31" y="212" width="2" height="15" fill="rgb(225,137,46)"/><text x="34.00" y="222.50"></text></g><g><title>0x7f0dfd606ef6 (?) (1 samples, 0.10%)</title><rect x="31" y="228" width="2" height="15" fill="rgb(219,37,7)"/><text x="34.00" y="238.50"></text></g><g><title>0x7f0dfd5fb962 (?) (1 samples, 0.10%)</title><rect x="31" y="244" width="2" height="15" fill="rgb(217,151,52)"/><text x="34.00" y="254.50"></text></g><g><title>0x7f0dfd62f7a7 (?) (1 samples, 0.10%)</title><rect x="31" y="260" width="2" height="15" fill="rgb(238,53,38)"/><text x="34.00" y="270.50"></text></g><g><title>0x7f0dfd62f379 (?) (1 samples, 0.10%)</title><rect x="31" y="276" width="2" height="15" fill="rgb(238,195,40)"/><text x="34.00" y="286.50"></text></g><g><title>0x7f0dfda8d8b8 (?) (1 samples, 0.10%)</title><rect x="31" y="292" width="2" height="15" fill="rgb(228,208,17)"/><text x="34.00" y="302.50"></text></g><g><title>0x7f0dfda8bc7f (?) (1 samples, 0.10%)</title><rect x="31" y="308" width="2" height="15" fill="rgb(230,176,27)"/><text x="34.00" y="318.50"></text></g><g><title>0x7f0dfda9e99c (?) (1 samples, 0.10%)</title><rect x="31" y="324" width="2" height="15" fill="rgb(234,33,52)"/><text x="34.00" y="334.50"></text></g><g><title>0x7f0dfd7bc396 (?) (1 samples, 0.10%)</title><rect x="31" y="340" width="2" height="15" fill="rgb(205,205,45)"/><text x="34.00" y="350.50"></text></g><g><title>0x7f0dfd5e9e08 (?) (1 samples, 0.10%)</title><rect x="31" y="356" width="2" height="15" fill="rgb(250,75,39)"/><text x="34.00" y="366.50"></text></g><g><title>0x7f0e3d94d991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(215,165,50)"/><text x="34.00" y="382.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="340" width="1" height="15" fill="rgb(250,141,22)"/><text x="36.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="356" width="1" height="15" fill="rgb(229,165,41)"/><text x="36.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="372" width="1" height="15" fill="rgb(251,188,35)"/><text x="36.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="388" width="1" height="15" fill="rgb(251,75,49)"/><text x="36.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="404" width="1" height="15" fill="rgb(215,117,23)"/><text x="36.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="420" width="1" height="15" fill="rgb(241,185,30)"/><text x="36.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="436" width="1" height="15" fill="rgb(252,109,4)"/><text x="36.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="452" width="1" height="15" fill="rgb(218,117,23)"/><text x="36.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="468" width="1" height="15" fill="rgb(208,79,49)"/><text x="36.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="33" y="484" width="1" height="15" fill="rgb(237,72,48)"/><text x="36.00" y="494.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="34" y="340" width="1" height="15" fill="rgb(214,88,17)"/><text x="37.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="34" y="356" width="1" height="15" fill="rgb(232,154,16)"/><text x="37.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="34" y="372" width="1" height="15" fill="rgb(207,106,46)"/><text x="37.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="35" y="340" width="1" height="15" fill="rgb(250,21,9)"/><text x="38.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="35" y="356" width="1" height="15" fill="rgb(208,120,32)"/><text x="38.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="35" y="372" width="1" height="15" fill="rgb(220,163,13)"/><text x="38.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="35" y="388" width="1" height="15" fill="rgb(223,104,43)"/><text x="38.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="35" y="404" width="1" height="15" fill="rgb(223,145,38)"/><text x="38.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="36" y="340" width="3" height="15" fill="rgb(209,161,8)"/><text x="39.00" y="350.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="37" y="356" width="2" height="15" fill="rgb(206,11,20)"/><text x="40.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="37" y="372" width="2" height="15" fill="rgb(209,108,25)"/><text x="40.00" y="382.50"></text></g><g><title>0x7f0e3d94dd07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="37" y="388" width="2" height="15" fill="rgb(234,106,38)"/><text x="40.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.23%)</title><rect x="39" y="340" width="14" height="15" fill="rgb(243,167,41)"/><text x="42.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="52" y="356" width="1" height="15" fill="rgb(232,85,38)"/><text x="55.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="52" y="372" width="1" height="15" fill="rgb(241,202,14)"/><text x="55.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="52" y="388" width="1" height="15" fill="rgb(253,93,53)"/><text x="55.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="52" y="404" width="1" height="15" fill="rgb(223,200,50)"/><text x="55.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="52" y="420" width="1" height="15" fill="rgb(216,18,49)"/><text x="55.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="52" y="436" width="1" height="15" fill="rgb(209,161,37)"/><text x="55.00" y="446.50"></text></g><g><title>0x7f0e3d95c6c2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="52" y="452" width="1" height="15" fill="rgb(220,4,54)"/><text x="55.00" y="462.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.75%)</title><rect x="53" y="372" width="21" height="15" fill="rgb(249,148,7)"/><text x="56.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.62%)</title><rect x="67" y="388" width="7" height="15" fill="rgb(225,63,50)"/><text x="70.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.85%)</title><rect x="53" y="340" width="22" height="15" fill="rgb(215,90,26)"/><text x="56.00" y="350.50">o..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.85%)</title><rect x="53" y="356" width="22" height="15" fill="rgb(211,51,13)"/><text x="56.00" y="366.50">o..</text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="74" y="372" width="1" height="15" fill="rgb(212,174,38)"/><text x="77.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="74" y="388" width="1" height="15" fill="rgb(223,211,54)"/><text x="77.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastIterator::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="74" y="404" width="1" height="15" fill="rgb(218,171,50)"/><text x="77.00" y="414.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="75" y="340" width="2" height="15" fill="rgb(252,89,53)"/><text x="78.00" y="350.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="340" width="2" height="15" fill="rgb(240,73,36)"/><text x="80.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="356" width="2" height="15" fill="rgb(225,218,5)"/><text x="80.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="372" width="2" height="15" fill="rgb(246,80,4)"/><text x="80.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="388" width="2" height="15" fill="rgb(211,161,28)"/><text x="80.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="404" width="2" height="15" fill="rgb(253,14,14)"/><text x="80.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="420" width="2" height="15" fill="rgb(214,131,5)"/><text x="80.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="436" width="2" height="15" fill="rgb(217,154,26)"/><text x="80.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="452" width="2" height="15" fill="rgb(249,50,22)"/><text x="80.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="468" width="2" height="15" fill="rgb(218,85,12)"/><text x="80.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="484" width="2" height="15" fill="rgb(238,196,37)"/><text x="80.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="77" y="500" width="2" height="15" fill="rgb(247,180,28)"/><text x="80.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="77" y="516" width="2" height="15" fill="rgb(215,146,44)"/><text x="80.00" y="526.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.54%)</title><rect x="79" y="340" width="18" height="15" fill="rgb(214,143,15)"/><text x="82.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.54%)</title><rect x="79" y="356" width="18" height="15" fill="rgb(226,117,21)"/><text x="82.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.54%)</title><rect x="79" y="372" width="18" height="15" fill="rgb(254,0,34)"/><text x="82.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="86" y="388" width="11" height="15" fill="rgb(230,139,17)"/><text x="89.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="97" y="340" width="1" height="15" fill="rgb(248,60,41)"/><text x="100.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="97" y="356" width="1" height="15" fill="rgb(233,155,22)"/><text x="100.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="97" y="372" width="1" height="15" fill="rgb(249,50,35)"/><text x="100.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="158" y="356" width="1" height="15" fill="rgb(221,214,20)"/><text x="161.00" y="366.50"></text></g><g><title>0x7f0e2d419d50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="250" y="404" width="1" height="15" fill="rgb(242,123,9)"/><text x="253.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (27 samples, 2.78%)</title><rect x="239" y="388" width="33" height="15" fill="rgb(249,117,14)"/><text x="242.00" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (17 samples, 1.75%)</title><rect x="251" y="404" width="21" height="15" fill="rgb(215,100,49)"/><text x="254.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 11.01%)</title><rect x="159" y="356" width="130" height="15" fill="rgb(215,47,54)"/><text x="162.00" y="366.50">onnxruntime::ml:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 5.66%)</title><rect x="222" y="372" width="67" height="15" fill="rgb(222,4,46)"/><text x="225.00" y="382.50">std::_R..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (14 samples, 1.44%)</title><rect x="272" y="388" width="17" height="15" fill="rgb(251,171,50)"/><text x="275.00" y="398.50"></text></g><g><title>0x7f0e3d96ddbb (libc-2.29.so) (1 samples, 0.10%)</title><rect x="303" y="372" width="2" height="15" fill="rgb(235,61,16)"/><text x="306.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.44%)</title><rect x="289" y="356" width="17" height="15" fill="rgb(235,187,22)"/><text x="292.00" y="366.50"></text></g><g><title>0x7f0e3d96ddbe (libc-2.29.so) (1 samples, 0.10%)</title><rect x="305" y="372" width="1" height="15" fill="rgb(243,37,7)"/><text x="308.00" y="382.50"></text></g><g><title>0x7f0e3d94d90e (libc-2.29.so) (2 samples, 0.21%)</title><rect x="307" y="372" width="2" height="15" fill="rgb(241,82,20)"/><text x="310.00" y="382.50"></text></g><g><title>0x7f0e3d94d91e (libc-2.29.so) (2 samples, 0.21%)</title><rect x="309" y="372" width="3" height="15" fill="rgb(235,132,40)"/><text x="312.00" y="382.50"></text></g><g><title>0x7f0e3d94d922 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="312" y="372" width="1" height="15" fill="rgb(227,200,29)"/><text x="315.00" y="382.50"></text></g><g><title>0x7f0e3d94d991 (libc-2.29.so) (5 samples, 0.51%)</title><rect x="313" y="372" width="6" height="15" fill="rgb(205,188,14)"/><text x="316.00" y="382.50"></text></g><g><title>0x7f0e3d94d998 (libc-2.29.so) (3 samples, 0.31%)</title><rect x="319" y="372" width="4" height="15" fill="rgb(236,118,22)"/><text x="322.00" y="382.50"></text></g><g><title>0x7f0e3d94da38 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(251,220,10)"/><text x="326.00" y="382.50"></text></g><g><title>0x7f0e3d94da4d (libc-2.29.so) (2 samples, 0.21%)</title><rect x="324" y="372" width="2" height="15" fill="rgb(223,153,27)"/><text x="327.00" y="382.50"></text></g><g><title>0x7f0e3d94dbd4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="326" y="372" width="2" height="15" fill="rgb(233,69,54)"/><text x="329.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.51%)</title><rect x="328" y="372" width="6" height="15" fill="rgb(236,40,40)"/><text x="331.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="334" y="372" width="1" height="15" fill="rgb(206,149,33)"/><text x="337.00" y="382.50"></text></g><g><title>0x7f0e3d94d902 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="349" y="388" width="2" height="15" fill="rgb(210,89,30)"/><text x="352.00" y="398.50"></text></g><g><title>0x7f0e3d94d908 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="351" y="388" width="1" height="15" fill="rgb(237,2,36)"/><text x="354.00" y="398.50"></text></g><g><title>0x7f0e3d94d929 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="352" y="388" width="1" height="15" fill="rgb(222,197,12)"/><text x="355.00" y="398.50"></text></g><g><title>0x7f0e3d94d965 (libc-2.29.so) (3 samples, 0.31%)</title><rect x="353" y="388" width="4" height="15" fill="rgb(212,45,28)"/><text x="356.00" y="398.50"></text></g><g><title>0x7f0e3d94d991 (libc-2.29.so) (4 samples, 0.41%)</title><rect x="357" y="388" width="5" height="15" fill="rgb(208,211,28)"/><text x="360.00" y="398.50"></text></g><g><title>0x7f0e3d94da4d (libc-2.29.so) (3 samples, 0.31%)</title><rect x="362" y="388" width="3" height="15" fill="rgb(207,208,1)"/><text x="365.00" y="398.50"></text></g><g><title>0x7f0e3d94da55 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="365" y="388" width="1" height="15" fill="rgb(225,66,13)"/><text x="368.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 5.25%)</title><rect x="306" y="356" width="62" height="15" fill="rgb(252,16,16)"/><text x="309.00" y="366.50">std::_..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 2.78%)</title><rect x="335" y="372" width="33" height="15" fill="rgb(248,39,4)"/><text x="338.00" y="382.50">st..</text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="366" y="388" width="2" height="15" fill="rgb(248,38,12)"/><text x="369.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (231 samples, 23.77%)</title><rect x="98" y="340" width="281" height="15" fill="rgb(225,118,12)"/><text x="101.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifi..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (9 samples, 0.93%)</title><rect x="368" y="356" width="11" height="15" fill="rgb(243,174,51)"/><text x="371.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 29.63%)</title><rect x="33" y="260" width="349" height="15" fill="rgb(249,84,13)"/><text x="36.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 29.63%)</title><rect x="33" y="276" width="349" height="15" fill="rgb(243,166,54)"/><text x="36.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 29.63%)</title><rect x="33" y="292" width="349" height="15" fill="rgb(230,114,6)"/><text x="36.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 29.63%)</title><rect x="33" y="308" width="349" height="15" fill="rgb(227,190,35)"/><text x="36.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 29.63%)</title><rect x="33" y="324" width="349" height="15" fill="rgb(231,223,44)"/><text x="36.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxr..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="379" y="340" width="3" height="15" fill="rgb(252,38,21)"/><text x="382.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.31%)</title><rect x="379" y="356" width="3" height="15" fill="rgb(223,81,32)"/><text x="382.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="380" y="372" width="2" height="15" fill="rgb(250,183,50)"/><text x="383.00" y="382.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (298 samples, 30.66%)</title><rect x="28" y="100" width="361" height="15" fill="rgb(227,207,37)"/><text x="31.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (295 samples, 30.35%)</title><rect x="31" y="116" width="358" height="15" fill="rgb(251,51,9)"/><text x="34.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (295 samples, 30.35%)</title><rect x="31" y="132" width="358" height="15" fill="rgb(227,45,22)"/><text x="34.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (295 samples, 30.35%)</title><rect x="31" y="148" width="358" height="15" fill="rgb(205,82,13)"/><text x="34.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (295 samples, 30.35%)</title><rect x="31" y="164" width="358" height="15" fill="rgb(221,72,18)"/><text x="34.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (295 samples, 30.35%)</title><rect x="31" y="180" width="358" height="15" fill="rgb(227,130,41)"/><text x="34.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (295 samples, 30.35%)</title><rect x="31" y="196" width="358" height="15" fill="rgb(250,23,20)"/><text x="34.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (294 samples, 30.25%)</title><rect x="33" y="212" width="356" height="15" fill="rgb(242,213,2)"/><text x="36.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (294 samples, 30.25%)</title><rect x="33" y="228" width="356" height="15" fill="rgb(228,72,18)"/><text x="36.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (294 samples, 30.25%)</title><rect x="33" y="244" width="356" height="15" fill="rgb(239,159,12)"/><text x="36.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.62%)</title><rect x="382" y="260" width="7" height="15" fill="rgb(253,89,16)"/><text x="385.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="387" y="276" width="2" height="15" fill="rgb(228,186,27)"/><text x="390.00" y="286.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="389" y="132" width="3" height="15" fill="rgb(243,212,37)"/><text x="392.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="389" y="148" width="3" height="15" fill="rgb(252,32,43)"/><text x="392.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="389" y="164" width="3" height="15" fill="rgb(212,81,30)"/><text x="392.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="389" y="180" width="3" height="15" fill="rgb(243,111,14)"/><text x="392.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (2 samples, 0.21%)</title><rect x="389" y="196" width="3" height="15" fill="rgb(239,91,11)"/><text x="392.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.10%)</title><rect x="391" y="212" width="1" height="15" fill="rgb(231,75,6)"/><text x="394.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.10%)</title><rect x="391" y="228" width="1" height="15" fill="rgb(234,33,45)"/><text x="394.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.10%)</title><rect x="391" y="244" width="1" height="15" fill="rgb(245,29,0)"/><text x="394.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.10%)</title><rect x="391" y="260" width="1" height="15" fill="rgb(232,2,36)"/><text x="394.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.10%)</title><rect x="391" y="276" width="1" height="15" fill="rgb(216,45,14)"/><text x="394.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.10%)</title><rect x="391" y="292" width="1" height="15" fill="rgb(239,193,27)"/><text x="394.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.10%)</title><rect x="391" y="308" width="1" height="15" fill="rgb(219,134,41)"/><text x="394.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.10%)</title><rect x="391" y="324" width="1" height="15" fill="rgb(236,132,6)"/><text x="394.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h) (1 samples, 0.10%)</title><rect x="391" y="340" width="1" height="15" fill="rgb(213,139,23)"/><text x="394.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.10%)</title><rect x="391" y="356" width="1" height="15" fill="rgb(244,156,26)"/><text x="394.00" y="366.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.10%)</title><rect x="392" y="196" width="1" height="15" fill="rgb(222,16,19)"/><text x="395.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.10%)</title><rect x="392" y="212" width="1" height="15" fill="rgb(246,181,38)"/><text x="395.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.10%)</title><rect x="392" y="228" width="1" height="15" fill="rgb(236,221,54)"/><text x="395.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.10%)</title><rect x="392" y="244" width="1" height="15" fill="rgb(207,109,5)"/><text x="395.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.10%)</title><rect x="392" y="260" width="1" height="15" fill="rgb(206,224,17)"/><text x="395.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.10%)</title><rect x="392" y="276" width="1" height="15" fill="rgb(231,161,49)"/><text x="395.00" y="286.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.10%)</title><rect x="392" y="292" width="1" height="15" fill="rgb(205,149,44)"/><text x="395.00" y="302.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.10%)</title><rect x="392" y="308" width="1" height="15" fill="rgb(240,177,39)"/><text x="395.00" y="318.50"></text></g><g><title>checkcache (linecache.py) (1 samples, 0.10%)</title><rect x="392" y="324" width="1" height="15" fill="rgb(212,189,2)"/><text x="395.00" y="334.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (302 samples, 31.07%)</title><rect x="28" y="68" width="366" height="15" fill="rgb(232,122,37)"/><text x="31.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (302 samples, 31.07%)</title><rect x="28" y="84" width="366" height="15" fill="rgb(250,83,8)"/><text x="31.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.41%)</title><rect x="389" y="100" width="5" height="15" fill="rgb(230,53,4)"/><text x="392.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.41%)</title><rect x="389" y="116" width="5" height="15" fill="rgb(231,158,11)"/><text x="392.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="392" y="132" width="2" height="15" fill="rgb(250,182,53)"/><text x="395.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.21%)</title><rect x="392" y="148" width="2" height="15" fill="rgb(205,21,33)"/><text x="395.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.21%)</title><rect x="392" y="164" width="2" height="15" fill="rgb(225,194,10)"/><text x="395.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.21%)</title><rect x="392" y="180" width="2" height="15" fill="rgb(252,124,50)"/><text x="395.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.10%)</title><rect x="393" y="196" width="1" height="15" fill="rgb(208,206,29)"/><text x="396.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.10%)</title><rect x="393" y="212" width="1" height="15" fill="rgb(236,206,17)"/><text x="396.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.10%)</title><rect x="393" y="228" width="1" height="15" fill="rgb(248,212,35)"/><text x="396.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="393" y="244" width="1" height="15" fill="rgb(234,132,9)"/><text x="396.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.10%)</title><rect x="393" y="260" width="1" height="15" fill="rgb(252,85,42)"/><text x="396.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.10%)</title><rect x="393" y="276" width="1" height="15" fill="rgb(230,98,30)"/><text x="396.00" y="286.50"></text></g><g><title>0x7f0e3d96e1d6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="444" y="196" width="1" height="15" fill="rgb(231,54,14)"/><text x="447.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.21%)</title><rect x="445" y="196" width="3" height="15" fill="rgb(232,9,1)"/><text x="448.00" y="206.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.10%)</title><rect x="451" y="228" width="2" height="15" fill="rgb(230,194,9)"/><text x="454.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.10%)</title><rect x="451" y="244" width="2" height="15" fill="rgb(234,53,39)"/><text x="454.00" y="254.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.10%)</title><rect x="453" y="276" width="1" height="15" fill="rgb(242,95,13)"/><text x="456.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.10%)</title><rect x="453" y="292" width="1" height="15" fill="rgb(252,25,9)"/><text x="456.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.10%)</title><rect x="453" y="308" width="1" height="15" fill="rgb(222,95,30)"/><text x="456.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.10%)</title><rect x="453" y="324" width="1" height="15" fill="rgb(234,75,43)"/><text x="456.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (7 samples, 0.72%)</title><rect x="451" y="212" width="9" height="15" fill="rgb(250,225,20)"/><text x="454.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (6 samples, 0.62%)</title><rect x="453" y="228" width="7" height="15" fill="rgb(207,54,28)"/><text x="456.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (6 samples, 0.62%)</title><rect x="453" y="244" width="7" height="15" fill="rgb(243,226,11)"/><text x="456.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (6 samples, 0.62%)</title><rect x="453" y="260" width="7" height="15" fill="rgb(214,24,11)"/><text x="456.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (5 samples, 0.51%)</title><rect x="454" y="276" width="6" height="15" fill="rgb(220,66,22)"/><text x="457.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (5 samples, 0.51%)</title><rect x="454" y="292" width="6" height="15" fill="rgb(239,223,30)"/><text x="457.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (5 samples, 0.51%)</title><rect x="454" y="308" width="6" height="15" fill="rgb(208,1,44)"/><text x="457.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (5 samples, 0.51%)</title><rect x="454" y="324" width="6" height="15" fill="rgb(248,222,32)"/><text x="457.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.10%)</title><rect x="459" y="340" width="1" height="15" fill="rgb(237,102,0)"/><text x="462.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (4 samples, 0.41%)</title><rect x="460" y="212" width="5" height="15" fill="rgb(246,51,35)"/><text x="463.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.41%)</title><rect x="460" y="228" width="5" height="15" fill="rgb(225,80,43)"/><text x="463.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (3 samples, 0.31%)</title><rect x="461" y="244" width="4" height="15" fill="rgb(250,38,20)"/><text x="464.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (3 samples, 0.31%)</title><rect x="461" y="260" width="4" height="15" fill="rgb(208,11,33)"/><text x="464.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (2 samples, 0.21%)</title><rect x="462" y="276" width="3" height="15" fill="rgb(234,116,37)"/><text x="465.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (2 samples, 0.21%)</title><rect x="462" y="292" width="3" height="15" fill="rgb(232,108,12)"/><text x="465.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (1 samples, 0.10%)</title><rect x="465" y="212" width="1" height="15" fill="rgb(231,198,12)"/><text x="468.00" y="222.50"></text></g><g><title>array_add (number.c) (1 samples, 0.10%)</title><rect x="465" y="228" width="1" height="15" fill="rgb(250,58,51)"/><text x="468.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.10%)</title><rect x="465" y="244" width="1" height="15" fill="rgb(254,225,25)"/><text x="468.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.10%)</title><rect x="465" y="260" width="1" height="15" fill="rgb(239,88,15)"/><text x="468.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.10%)</title><rect x="465" y="276" width="1" height="15" fill="rgb(212,146,44)"/><text x="468.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.10%)</title><rect x="465" y="292" width="1" height="15" fill="rgb(232,74,5)"/><text x="468.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="465" y="308" width="1" height="15" fill="rgb(220,10,26)"/><text x="468.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.10%)</title><rect x="478" y="292" width="1" height="15" fill="rgb(213,149,54)"/><text x="481.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="479" y="308" width="2" height="15" fill="rgb(227,44,33)"/><text x="482.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.31%)</title><rect x="478" y="260" width="4" height="15" fill="rgb(241,45,5)"/><text x="481.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.31%)</title><rect x="478" y="276" width="4" height="15" fill="rgb(235,177,46)"/><text x="481.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.21%)</title><rect x="479" y="292" width="3" height="15" fill="rgb(248,193,14)"/><text x="482.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="481" y="308" width="1" height="15" fill="rgb(213,65,19)"/><text x="484.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.10%)</title><rect x="483" y="276" width="1" height="15" fill="rgb(241,201,1)"/><text x="486.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.10%)</title><rect x="483" y="292" width="1" height="15" fill="rgb(216,107,22)"/><text x="486.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.10%)</title><rect x="484" y="276" width="1" height="15" fill="rgb(229,62,3)"/><text x="487.00" y="286.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.10%)</title><rect x="485" y="356" width="2" height="15" fill="rgb(251,103,21)"/><text x="488.00" y="366.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (2 samples, 0.21%)</title><rect x="485" y="308" width="3" height="15" fill="rgb(248,131,23)"/><text x="488.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (2 samples, 0.21%)</title><rect x="485" y="324" width="3" height="15" fill="rgb(220,131,4)"/><text x="488.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src) (2 samples, 0.21%)</title><rect x="485" y="340" width="3" height="15" fill="rgb(207,226,11)"/><text x="488.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h) (1 samples, 0.10%)</title><rect x="487" y="356" width="1" height="15" fill="rgb(216,137,39)"/><text x="490.00" y="366.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.10%)</title><rect x="489" y="324" width="1" height="15" fill="rgb(228,77,51)"/><text x="492.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.10%)</title><rect x="490" y="324" width="1" height="15" fill="rgb(209,165,37)"/><text x="493.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.10%)</title><rect x="491" y="324" width="2" height="15" fill="rgb(247,96,15)"/><text x="494.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.51%)</title><rect x="488" y="308" width="6" height="15" fill="rgb(245,83,21)"/><text x="491.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.10%)</title><rect x="493" y="324" width="1" height="15" fill="rgb(232,130,0)"/><text x="496.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.10%)</title><rect x="493" y="340" width="1" height="15" fill="rgb(249,115,45)"/><text x="496.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.10%)</title><rect x="493" y="356" width="1" height="15" fill="rgb(222,90,7)"/><text x="496.00" y="366.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.10%)</title><rect x="493" y="372" width="1" height="15" fill="rgb(245,225,42)"/><text x="496.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.10%)</title><rect x="494" y="308" width="1" height="15" fill="rgb(228,59,19)"/><text x="497.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="494" y="324" width="1" height="15" fill="rgb(228,101,49)"/><text x="497.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.10%)</title><rect x="495" y="324" width="1" height="15" fill="rgb(212,5,34)"/><text x="498.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.51%)</title><rect x="495" y="308" width="6" height="15" fill="rgb(232,229,19)"/><text x="498.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.41%)</title><rect x="496" y="324" width="5" height="15" fill="rgb(215,48,3)"/><text x="499.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.41%)</title><rect x="496" y="340" width="5" height="15" fill="rgb(226,6,39)"/><text x="499.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.21%)</title><rect x="499" y="356" width="2" height="15" fill="rgb(253,54,50)"/><text x="502.00" y="366.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.10%)</title><rect x="501" y="308" width="1" height="15" fill="rgb(238,187,4)"/><text x="504.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.10%)</title><rect x="501" y="324" width="1" height="15" fill="rgb(221,177,49)"/><text x="504.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 1.54%)</title><rect x="485" y="276" width="19" height="15" fill="rgb(227,197,32)"/><text x="488.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 1.54%)</title><rect x="485" y="292" width="19" height="15" fill="rgb(244,160,21)"/><text x="488.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (1 samples, 0.10%)</title><rect x="502" y="308" width="2" height="15" fill="rgb(215,44,45)"/><text x="505.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (29 samples, 2.98%)</title><rect x="471" y="228" width="35" height="15" fill="rgb(213,103,33)"/><text x="474.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (24 samples, 2.47%)</title><rect x="477" y="244" width="29" height="15" fill="rgb(237,3,27)"/><text x="480.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 2.06%)</title><rect x="482" y="260" width="24" height="15" fill="rgb(242,39,6)"/><text x="485.00" y="270.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.21%)</title><rect x="504" y="276" width="2" height="15" fill="rgb(232,208,18)"/><text x="507.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.10%)</title><rect x="505" y="292" width="1" height="15" fill="rgb(222,85,33)"/><text x="508.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.10%)</title><rect x="507" y="260" width="1" height="15" fill="rgb(208,229,0)"/><text x="510.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.10%)</title><rect x="507" y="276" width="1" height="15" fill="rgb(215,144,50)"/><text x="510.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.10%)</title><rect x="507" y="292" width="1" height="15" fill="rgb(226,90,36)"/><text x="510.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.10%)</title><rect x="508" y="276" width="2" height="15" fill="rgb(219,132,7)"/><text x="511.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.10%)</title><rect x="510" y="340" width="1" height="15" fill="rgb(254,132,1)"/><text x="513.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.10%)</title><rect x="510" y="356" width="1" height="15" fill="rgb(213,226,28)"/><text x="513.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.10%)</title><rect x="510" y="372" width="1" height="15" fill="rgb(216,26,21)"/><text x="513.00" y="382.50"></text></g><g><title>0x7f0e3d94f6f1 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="511" y="356" width="1" height="15" fill="rgb(209,16,10)"/><text x="514.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.31%)</title><rect x="510" y="292" width="3" height="15" fill="rgb(217,60,39)"/><text x="513.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.31%)</title><rect x="510" y="308" width="3" height="15" fill="rgb(239,170,19)"/><text x="513.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.31%)</title><rect x="510" y="324" width="3" height="15" fill="rgb(246,92,52)"/><text x="513.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="511" y="340" width="2" height="15" fill="rgb(239,216,41)"/><text x="514.00" y="350.50"></text></g><g><title>0x7f0e3d94f78d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="512" y="356" width="1" height="15" fill="rgb(234,173,8)"/><text x="515.00" y="366.50"></text></g><g><title>0x7f0e3da99170 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="513" y="324" width="2" height="15" fill="rgb(237,144,35)"/><text x="516.00" y="334.50"></text></g><g><title>0x7f0e3dacf960 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="515" y="324" width="2" height="15" fill="rgb(253,107,26)"/><text x="518.00" y="334.50"></text></g><g><title>0x7f0e3dacf9af (libm-2.29.so) (1 samples, 0.10%)</title><rect x="517" y="324" width="1" height="15" fill="rgb(234,194,5)"/><text x="520.00" y="334.50"></text></g><g><title>0x7f0e3dacf9cc (libm-2.29.so) (1 samples, 0.10%)</title><rect x="518" y="324" width="1" height="15" fill="rgb(226,46,30)"/><text x="521.00" y="334.50"></text></g><g><title>0x7f0e3dacfa04 (libm-2.29.so) (3 samples, 0.31%)</title><rect x="519" y="324" width="4" height="15" fill="rgb(218,88,54)"/><text x="522.00" y="334.50"></text></g><g><title>0x7f0e3dacfa15 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="523" y="324" width="2" height="15" fill="rgb(241,111,23)"/><text x="526.00" y="334.50"></text></g><g><title>0x7f0e3dacfa1d (libm-2.29.so) (5 samples, 0.51%)</title><rect x="525" y="324" width="7" height="15" fill="rgb(222,208,22)"/><text x="528.00" y="334.50"></text></g><g><title>0x7f0e3dacfa21 (libm-2.29.so) (5 samples, 0.51%)</title><rect x="532" y="324" width="6" height="15" fill="rgb(206,198,50)"/><text x="535.00" y="334.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.21%)</title><rect x="538" y="324" width="2" height="15" fill="rgb(216,191,4)"/><text x="541.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (26 samples, 2.67%)</title><rect x="510" y="276" width="31" height="15" fill="rgb(251,73,26)"/><text x="513.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (23 samples, 2.37%)</title><rect x="513" y="292" width="28" height="15" fill="rgb(209,128,7)"/><text x="516.00" y="302.50">t..</text></g><g><title>FLOAT_log (loops.c.src) (23 samples, 2.37%)</title><rect x="513" y="308" width="28" height="15" fill="rgb(245,13,42)"/><text x="516.00" y="318.50">F..</text></g><g><title>npy_logf (npy_math_internal.h.src) (1 samples, 0.10%)</title><rect x="540" y="324" width="1" height="15" fill="rgb(238,61,4)"/><text x="543.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (30 samples, 3.09%)</title><rect x="506" y="228" width="36" height="15" fill="rgb(220,101,18)"/><text x="509.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (30 samples, 3.09%)</title><rect x="506" y="244" width="36" height="15" fill="rgb(245,199,35)"/><text x="509.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (28 samples, 2.88%)</title><rect x="508" y="260" width="34" height="15" fill="rgb(238,27,51)"/><text x="511.00" y="270.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="541" y="276" width="1" height="15" fill="rgb(244,83,20)"/><text x="544.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.10%)</title><rect x="549" y="308" width="1" height="15" fill="rgb(244,11,4)"/><text x="552.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.10%)</title><rect x="550" y="324" width="1" height="15" fill="rgb(211,200,15)"/><text x="553.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.10%)</title><rect x="550" y="340" width="1" height="15" fill="rgb(253,140,1)"/><text x="553.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.10%)</title><rect x="550" y="356" width="1" height="15" fill="rgb(215,142,1)"/><text x="553.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.10%)</title><rect x="550" y="372" width="1" height="15" fill="rgb(214,79,34)"/><text x="553.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.10%)</title><rect x="550" y="388" width="1" height="15" fill="rgb(231,216,3)"/><text x="553.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.10%)</title><rect x="552" y="388" width="1" height="15" fill="rgb(206,115,11)"/><text x="555.00" y="398.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.10%)</title><rect x="553" y="388" width="2" height="15" fill="rgb(230,78,1)"/><text x="556.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.31%)</title><rect x="552" y="372" width="4" height="15" fill="rgb(234,189,26)"/><text x="555.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.10%)</title><rect x="555" y="388" width="1" height="15" fill="rgb(225,75,16)"/><text x="558.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.10%)</title><rect x="555" y="404" width="1" height="15" fill="rgb(234,35,54)"/><text x="558.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.10%)</title><rect x="556" y="372" width="1" height="15" fill="rgb(223,3,46)"/><text x="559.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.10%)</title><rect x="556" y="388" width="1" height="15" fill="rgb(243,89,32)"/><text x="559.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="558" y="420" width="1" height="15" fill="rgb(240,172,6)"/><text x="561.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.31%)</title><rect x="557" y="372" width="4" height="15" fill="rgb(237,202,1)"/><text x="560.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.21%)</title><rect x="558" y="388" width="3" height="15" fill="rgb(211,124,31)"/><text x="561.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.21%)</title><rect x="558" y="404" width="3" height="15" fill="rgb(252,64,32)"/><text x="561.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="559" y="420" width="2" height="15" fill="rgb(248,22,15)"/><text x="562.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (13 samples, 1.34%)</title><rect x="564" y="388" width="16" height="15" fill="rgb(242,153,1)"/><text x="567.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (5 samples, 0.51%)</title><rect x="574" y="404" width="6" height="15" fill="rgb(205,217,53)"/><text x="577.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (32 samples, 3.29%)</title><rect x="552" y="356" width="39" height="15" fill="rgb(209,21,49)"/><text x="555.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (25 samples, 2.57%)</title><rect x="561" y="372" width="30" height="15" fill="rgb(215,12,6)"/><text x="564.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (9 samples, 0.93%)</title><rect x="580" y="388" width="11" height="15" fill="rgb(208,37,48)"/><text x="583.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (34 samples, 3.50%)</title><rect x="552" y="340" width="41" height="15" fill="rgb(236,150,9)"/><text x="555.00" y="350.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.21%)</title><rect x="591" y="356" width="2" height="15" fill="rgb(210,45,51)"/><text x="594.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="591" y="372" width="2" height="15" fill="rgb(241,21,19)"/><text x="594.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="591" y="388" width="2" height="15" fill="rgb(246,199,39)"/><text x="594.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="591" y="404" width="2" height="15" fill="rgb(234,53,42)"/><text x="594.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.10%)</title><rect x="592" y="420" width="1" height="15" fill="rgb(211,205,43)"/><text x="595.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (43 samples, 4.42%)</title><rect x="542" y="228" width="53" height="15" fill="rgb(230,175,50)"/><text x="545.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (42 samples, 4.32%)</title><rect x="544" y="244" width="51" height="15" fill="rgb(230,220,20)"/><text x="547.00" y="254.50">sum (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (42 samples, 4.32%)</title><rect x="544" y="260" width="51" height="15" fill="rgb(223,76,4)"/><text x="547.00" y="270.50">array..</text></g><g><title>sum (numpy/core/fromnumeric.py) (42 samples, 4.32%)</title><rect x="544" y="276" width="51" height="15" fill="rgb(249,48,16)"/><text x="547.00" y="286.50">sum (..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (41 samples, 4.22%)</title><rect x="545" y="292" width="50" height="15" fill="rgb(216,191,16)"/><text x="548.00" y="302.50">_wrap..</text></g><g><title>ufunc_reduce (ufunc_object.c) (37 samples, 3.81%)</title><rect x="550" y="308" width="45" height="15" fill="rgb(222,208,8)"/><text x="553.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (36 samples, 3.70%)</title><rect x="551" y="324" width="44" height="15" fill="rgb(227,177,43)"/><text x="554.00" y="334.50">PyUF..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="593" y="340" width="2" height="15" fill="rgb(226,148,31)"/><text x="596.00" y="350.50"></text></g><g><title>0x7f0e3da2b130 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="593" y="356" width="2" height="15" fill="rgb(250,71,47)"/><text x="596.00" y="366.50"></text></g><g><title>0x7f0dfe4ab422 (?) (1 samples, 0.10%)</title><rect x="596" y="244" width="1" height="15" fill="rgb(250,19,23)"/><text x="599.00" y="254.50"></text></g><g><title>0x7f0dfe4b189e (?) (1 samples, 0.10%)</title><rect x="596" y="260" width="1" height="15" fill="rgb(212,103,47)"/><text x="599.00" y="270.50"></text></g><g><title>0x7f0dfe4b174f (?) (1 samples, 0.10%)</title><rect x="596" y="276" width="1" height="15" fill="rgb(217,135,18)"/><text x="599.00" y="286.50"></text></g><g><title>0x7f0dfe4b7a3a (?) (1 samples, 0.10%)</title><rect x="596" y="292" width="1" height="15" fill="rgb(210,35,48)"/><text x="599.00" y="302.50"></text></g><g><title>0x7f0e07913ab9 (?) (1 samples, 0.10%)</title><rect x="596" y="308" width="1" height="15" fill="rgb(241,72,35)"/><text x="599.00" y="318.50"></text></g><g><title>0x7f0e07914ea9 (?) (1 samples, 0.10%)</title><rect x="596" y="324" width="1" height="15" fill="rgb(242,114,52)"/><text x="599.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h) (1 samples, 0.10%)</title><rect x="597" y="436" width="1" height="15" fill="rgb(241,54,26)"/><text x="600.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.10%)</title><rect x="597" y="452" width="1" height="15" fill="rgb(246,128,48)"/><text x="600.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.10%)</title><rect x="597" y="468" width="1" height="15" fill="rgb(224,74,35)"/><text x="600.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h) (1 samples, 0.10%)</title><rect x="597" y="484" width="1" height="15" fill="rgb(213,66,14)"/><text x="600.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.10%)</title><rect x="597" y="500" width="1" height="15" fill="rgb(212,120,43)"/><text x="600.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.10%)</title><rect x="597" y="516" width="1" height="15" fill="rgb(235,146,17)"/><text x="600.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.10%)</title><rect x="597" y="532" width="1" height="15" fill="rgb(222,113,15)"/><text x="600.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.10%)</title><rect x="597" y="548" width="1" height="15" fill="rgb(221,211,1)"/><text x="600.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.10%)</title><rect x="597" y="564" width="1" height="15" fill="rgb(247,115,40)"/><text x="600.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="597" y="580" width="1" height="15" fill="rgb(243,192,14)"/><text x="600.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="597" y="596" width="1" height="15" fill="rgb(242,42,39)"/><text x="600.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="597" y="612" width="1" height="15" fill="rgb(251,136,17)"/><text x="600.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.10%)</title><rect x="597" y="628" width="1" height="15" fill="rgb(240,227,54)"/><text x="600.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="597" y="644" width="1" height="15" fill="rgb(243,100,13)"/><text x="600.00" y="654.50"></text></g><g><title>0x7f0e3d94ee07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="597" y="660" width="1" height="15" fill="rgb(222,145,21)"/><text x="600.00" y="670.50"></text></g><g><title>0x7f0e07914ea0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="598" y="468" width="2" height="15" fill="rgb(218,31,7)"/><text x="601.00" y="478.50"></text></g><g><title>0x7f0e07914ea9 (libgomp.so.1.0.0) (14 samples, 1.44%)</title><rect x="600" y="468" width="16" height="15" fill="rgb(253,52,13)"/><text x="603.00" y="478.50"></text></g><g><title>0x7f0e07914eab (libgomp.so.1.0.0) (19 samples, 1.95%)</title><rect x="616" y="468" width="24" height="15" fill="rgb(229,72,40)"/><text x="619.00" y="478.50">0..</text></g><g><title>0x7f0e07913ab9 (libgomp.so.1.0.0) (46 samples, 4.73%)</title><rect x="598" y="452" width="56" height="15" fill="rgb(236,218,44)"/><text x="601.00" y="462.50">0x7f0..</text></g><g><title>0x7f0e07914ead (libgomp.so.1.0.0) (12 samples, 1.23%)</title><rect x="640" y="468" width="14" height="15" fill="rgb(241,34,11)"/><text x="643.00" y="478.50"></text></g><g><title>0x7f0e07914cf0 (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="654" y="484" width="3" height="15" fill="rgb(247,102,22)"/><text x="657.00" y="494.50"></text></g><g><title>0x7f0e07914cf9 (libgomp.so.1.0.0) (6 samples, 0.62%)</title><rect x="657" y="484" width="7" height="15" fill="rgb(206,172,19)"/><text x="660.00" y="494.50"></text></g><g><title>0x7f0e07914cfb (libgomp.so.1.0.0) (8 samples, 0.82%)</title><rect x="664" y="484" width="10" height="15" fill="rgb(223,57,25)"/><text x="667.00" y="494.50"></text></g><g><title>0x7f0e07914cfd (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="674" y="484" width="12" height="15" fill="rgb(205,208,36)"/><text x="677.00" y="494.50"></text></g><g><title>0x7f0e07914d1e (libgomp.so.1.0.0) (3 samples, 0.31%)</title><rect x="686" y="484" width="3" height="15" fill="rgb(236,211,35)"/><text x="689.00" y="494.50"></text></g><g><title>0x7f0e07912daa (libgomp.so.1.0.0) (30 samples, 3.09%)</title><rect x="654" y="468" width="37" height="15" fill="rgb(223,55,24)"/><text x="657.00" y="478.50">0x7..</text></g><g><title>0x7f0e07914d6d (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="689" y="484" width="2" height="15" fill="rgb(230,204,29)"/><text x="692.00" y="494.50"></text></g><g><title>get_max_weight&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (1 samples, 0.10%)</title><rect x="691" y="484" width="1" height="15" fill="rgb(247,32,36)"/><text x="694.00" y="494.50"></text></g><g><title>std::_Bit_const_iterator::operator* (stl_bvector.h) (1 samples, 0.10%)</title><rect x="691" y="500" width="1" height="15" fill="rgb(223,24,15)"/><text x="694.00" y="510.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (stl_bvector.h) (1 samples, 0.10%)</title><rect x="692" y="484" width="1" height="15" fill="rgb(206,80,19)"/><text x="695.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (stl_bvector.h) (1 samples, 0.10%)</title><rect x="692" y="500" width="1" height="15" fill="rgb(229,43,48)"/><text x="695.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator+ (stl_bvector.h) (1 samples, 0.10%)</title><rect x="692" y="516" width="1" height="15" fill="rgb(212,34,15)"/><text x="695.00" y="526.50"></text></g><g><title>std::_Bit_iterator::operator+= (stl_bvector.h) (1 samples, 0.10%)</title><rect x="692" y="532" width="1" height="15" fill="rgb(216,92,4)"/><text x="695.00" y="542.50"></text></g><g><title>std::_Bit_iterator_base::_M_incr (stl_bvector.h) (1 samples, 0.10%)</title><rect x="692" y="548" width="1" height="15" fill="rgb(228,133,34)"/><text x="695.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="692" y="564" width="1" height="15" fill="rgb(223,2,17)"/><text x="695.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="692" y="580" width="1" height="15" fill="rgb(211,120,50)"/><text x="695.00" y="590.50"></text></g><g><title>0x7f0e3d94eb51 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="692" y="596" width="1" height="15" fill="rgb(217,175,29)"/><text x="695.00" y="606.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (82 samples, 8.44%)</title><rect x="595" y="228" width="99" height="15" fill="rgb(216,58,48)"/><text x="598.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (80 samples, 8.23%)</title><rect x="597" y="244" width="97" height="15" fill="rgb(216,158,44)"/><text x="600.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (80 samples, 8.23%)</title><rect x="597" y="260" width="97" height="15" fill="rgb(242,84,48)"/><text x="600.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (80 samples, 8.23%)</title><rect x="597" y="276" width="97" height="15" fill="rgb(218,154,54)"/><text x="600.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (80 samples, 8.23%)</title><rect x="597" y="292" width="97" height="15" fill="rgb(227,142,0)"/><text x="600.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (80 samples, 8.23%)</title><rect x="597" y="308" width="97" height="15" fill="rgb(235,94,36)"/><text x="600.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (80 samples, 8.23%)</title><rect x="597" y="324" width="97" height="15" fill="rgb(205,135,19)"/><text x="600.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (80 samples, 8.23%)</title><rect x="597" y="340" width="97" height="15" fill="rgb(230,0,32)"/><text x="600.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h) (80 samples, 8.23%)</title><rect x="597" y="356" width="97" height="15" fill="rgb(238,28,38)"/><text x="600.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (80 samples, 8.23%)</title><rect x="597" y="372" width="97" height="15" fill="rgb(222,80,51)"/><text x="600.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h) (80 samples, 8.23%)</title><rect x="597" y="388" width="97" height="15" fill="rgb(233,0,21)"/><text x="600.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (80 samples, 8.23%)</title><rect x="597" y="404" width="97" height="15" fill="rgb(252,211,10)"/><text x="600.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (80 samples, 8.23%)</title><rect x="597" y="420" width="97" height="15" fill="rgb(221,165,12)"/><text x="600.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (79 samples, 8.13%)</title><rect x="598" y="436" width="96" height="15" fill="rgb(222,228,43)"/><text x="601.00" y="446.50">pybind11::g..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (33 samples, 3.40%)</title><rect x="654" y="452" width="40" height="15" fill="rgb(228,95,14)"/><text x="657.00" y="462.50">GOM..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (3 samples, 0.31%)</title><rect x="691" y="468" width="3" height="15" fill="rgb(236,191,41)"/><text x="694.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.10%)</title><rect x="693" y="484" width="1" height="15" fill="rgb(225,7,44)"/><text x="696.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="693" y="500" width="1" height="15" fill="rgb(227,139,27)"/><text x="696.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (204 samples, 20.99%)</title><rect x="448" y="196" width="247" height="15" fill="rgb(215,77,42)"/><text x="451.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (189 samples, 19.44%)</title><rect x="466" y="212" width="229" height="15" fill="rgb(229,67,44)"/><text x="469.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.10%)</title><rect x="694" y="228" width="1" height="15" fill="rgb(251,174,20)"/><text x="697.00" y="238.50"></text></g><g><title>0x7f0e3cb703c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="701" y="260" width="2" height="15" fill="rgb(234,39,35)"/><text x="704.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.21%)</title><rect x="710" y="372" width="2" height="15" fill="rgb(239,163,28)"/><text x="713.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.21%)</title><rect x="710" y="388" width="2" height="15" fill="rgb(234,76,45)"/><text x="713.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.10%)</title><rect x="711" y="404" width="1" height="15" fill="rgb(223,143,21)"/><text x="714.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="715" y="388" width="1" height="15" fill="rgb(249,104,2)"/><text x="718.00" y="398.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.10%)</title><rect x="716" y="388" width="1" height="15" fill="rgb(248,148,50)"/><text x="719.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (7 samples, 0.72%)</title><rect x="720" y="420" width="8" height="15" fill="rgb(227,41,23)"/><text x="723.00" y="430.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.21%)</title><rect x="728" y="420" width="3" height="15" fill="rgb(239,178,51)"/><text x="731.00" y="430.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="729" y="436" width="2" height="15" fill="rgb(221,34,52)"/><text x="732.00" y="446.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.41%)</title><rect x="731" y="420" width="4" height="15" fill="rgb(219,194,42)"/><text x="734.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.41%)</title><rect x="731" y="436" width="4" height="15" fill="rgb(213,82,26)"/><text x="734.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.41%)</title><rect x="731" y="452" width="4" height="15" fill="rgb(247,91,12)"/><text x="734.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (4 samples, 0.41%)</title><rect x="731" y="468" width="4" height="15" fill="rgb(250,13,3)"/><text x="734.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 1.65%)</title><rect x="717" y="388" width="20" height="15" fill="rgb(250,90,44)"/><text x="720.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (16 samples, 1.65%)</title><rect x="717" y="404" width="20" height="15" fill="rgb(250,64,26)"/><text x="720.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.10%)</title><rect x="735" y="420" width="2" height="15" fill="rgb(248,122,7)"/><text x="738.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.10%)</title><rect x="735" y="436" width="2" height="15" fill="rgb(240,3,48)"/><text x="738.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (1 samples, 0.10%)</title><rect x="735" y="452" width="2" height="15" fill="rgb(212,128,19)"/><text x="738.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.10%)</title><rect x="735" y="468" width="2" height="15" fill="rgb(229,149,48)"/><text x="738.00" y="478.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="738" y="420" width="1" height="15" fill="rgb(232,96,13)"/><text x="741.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.31%)</title><rect x="737" y="388" width="3" height="15" fill="rgb(206,206,20)"/><text x="740.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.21%)</title><rect x="738" y="404" width="2" height="15" fill="rgb(246,156,48)"/><text x="741.00" y="414.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.10%)</title><rect x="739" y="420" width="1" height="15" fill="rgb(248,97,0)"/><text x="742.00" y="430.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.10%)</title><rect x="739" y="436" width="1" height="15" fill="rgb(236,146,54)"/><text x="742.00" y="446.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.10%)</title><rect x="739" y="452" width="1" height="15" fill="rgb(239,71,46)"/><text x="742.00" y="462.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (29 samples, 2.98%)</title><rect x="706" y="340" width="36" height="15" fill="rgb(248,160,21)"/><text x="709.00" y="350.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (26 samples, 2.67%)</title><rect x="710" y="356" width="32" height="15" fill="rgb(234,141,14)"/><text x="713.00" y="366.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (24 samples, 2.47%)</title><rect x="712" y="372" width="30" height="15" fill="rgb(248,100,32)"/><text x="715.00" y="382.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.10%)</title><rect x="740" y="388" width="2" height="15" fill="rgb(253,148,47)"/><text x="743.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.10%)</title><rect x="740" y="404" width="2" height="15" fill="rgb(242,118,45)"/><text x="743.00" y="414.50"></text></g><g><title>0x7f0e3cb6fe80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="740" y="420" width="2" height="15" fill="rgb(250,190,20)"/><text x="743.00" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="746" y="356" width="4" height="15" fill="rgb(250,168,22)"/><text x="749.00" y="366.50"></text></g><g><title>0x7f0e3d963e7a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="749" y="372" width="1" height="15" fill="rgb(213,91,47)"/><text x="752.00" y="382.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (4 samples, 0.41%)</title><rect x="750" y="356" width="5" height="15" fill="rgb(209,184,48)"/><text x="753.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.31%)</title><rect x="751" y="372" width="4" height="15" fill="rgb(220,176,16)"/><text x="754.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (3 samples, 0.31%)</title><rect x="751" y="388" width="4" height="15" fill="rgb(236,223,29)"/><text x="754.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.10%)</title><rect x="754" y="404" width="1" height="15" fill="rgb(226,73,46)"/><text x="757.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.10%)</title><rect x="754" y="420" width="1" height="15" fill="rgb(207,170,25)"/><text x="757.00" y="430.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.10%)</title><rect x="757" y="388" width="2" height="15" fill="rgb(242,47,44)"/><text x="760.00" y="398.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (301 samples, 30.97%)</title><rect x="394" y="164" width="366" height="15" fill="rgb(220,189,7)"/><text x="397.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (296 samples, 30.45%)</title><rect x="400" y="180" width="360" height="15" fill="rgb(207,121,23)"/><text x="403.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (53 samples, 5.45%)</title><rect x="695" y="196" width="65" height="15" fill="rgb(251,100,35)"/><text x="698.00" y="206.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (53 samples, 5.45%)</title><rect x="695" y="212" width="65" height="15" fill="rgb(211,62,17)"/><text x="698.00" y="222.50">_run (m..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (49 samples, 5.04%)</title><rect x="700" y="228" width="60" height="15" fill="rgb(210,21,13)"/><text x="703.00" y="238.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (48 samples, 4.94%)</title><rect x="701" y="244" width="59" height="15" fill="rgb(239,36,38)"/><text x="704.00" y="254.50">array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (47 samples, 4.84%)</title><rect x="703" y="260" width="57" height="15" fill="rgb(231,57,44)"/><text x="706.00" y="270.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (44 samples, 4.53%)</title><rect x="706" y="276" width="54" height="15" fill="rgb(213,99,37)"/><text x="709.00" y="286.50">_wrap..</text></g><g><title>array_clip (methods.c) (44 samples, 4.53%)</title><rect x="706" y="292" width="54" height="15" fill="rgb(209,2,5)"/><text x="709.00" y="302.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (44 samples, 4.53%)</title><rect x="706" y="308" width="54" height="15" fill="rgb(221,27,36)"/><text x="709.00" y="318.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (44 samples, 4.53%)</title><rect x="706" y="324" width="54" height="15" fill="rgb(223,157,48)"/><text x="709.00" y="334.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (15 samples, 1.54%)</title><rect x="742" y="340" width="18" height="15" fill="rgb(207,96,36)"/><text x="745.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.41%)</title><rect x="755" y="356" width="5" height="15" fill="rgb(248,167,24)"/><text x="758.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.21%)</title><rect x="757" y="372" width="3" height="15" fill="rgb(254,85,50)"/><text x="760.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="759" y="388" width="1" height="15" fill="rgb(224,211,7)"/><text x="762.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="759" y="404" width="1" height="15" fill="rgb(214,94,46)"/><text x="762.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.10%)</title><rect x="760" y="180" width="1" height="15" fill="rgb(235,146,47)"/><text x="763.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="760" y="196" width="1" height="15" fill="rgb(244,181,28)"/><text x="763.00" y="206.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (303 samples, 31.17%)</title><rect x="394" y="68" width="368" height="15" fill="rgb(237,180,48)"/><text x="397.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (303 samples, 31.17%)</title><rect x="394" y="84" width="368" height="15" fill="rgb(226,21,29)"/><text x="397.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (303 samples, 31.17%)</title><rect x="394" y="100" width="368" height="15" fill="rgb(208,141,43)"/><text x="397.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_10..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (303 samples, 31.17%)</title><rect x="394" y="116" width="368" height="15" fill="rgb(219,83,51)"/><text x="397.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (303 samples, 31.17%)</title><rect x="394" y="132" width="368" height="15" fill="rgb(224,219,47)"/><text x="397.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (303 samples, 31.17%)</title><rect x="394" y="148" width="368" height="15" fill="rgb(253,221,45)"/><text x="397.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.21%)</title><rect x="760" y="164" width="2" height="15" fill="rgb(253,212,7)"/><text x="763.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="761" y="180" width="1" height="15" fill="rgb(231,117,52)"/><text x="764.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="761" y="196" width="1" height="15" fill="rgb(248,143,38)"/><text x="764.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="761" y="212" width="1" height="15" fill="rgb(209,113,21)"/><text x="764.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.10%)</title><rect x="761" y="228" width="1" height="15" fill="rgb(226,158,2)"/><text x="764.00" y="238.50"></text></g><g><title>0x7f0e3d94d90e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="761" y="244" width="1" height="15" fill="rgb(239,36,53)"/><text x="764.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="762" y="116" width="1" height="15" fill="rgb(239,169,3)"/><text x="765.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="762" y="132" width="1" height="15" fill="rgb(227,87,33)"/><text x="765.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="762" y="148" width="1" height="15" fill="rgb(226,107,8)"/><text x="765.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.10%)</title><rect x="762" y="164" width="1" height="15" fill="rgb(237,132,1)"/><text x="765.00" y="174.50"></text></g><g><title>0x7f0e3d94daf0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="762" y="180" width="1" height="15" fill="rgb(245,94,12)"/><text x="765.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.10%)</title><rect x="763" y="196" width="2" height="15" fill="rgb(221,107,34)"/><text x="766.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.10%)</title><rect x="763" y="212" width="2" height="15" fill="rgb(208,216,36)"/><text x="766.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.10%)</title><rect x="763" y="228" width="2" height="15" fill="rgb(218,218,12)"/><text x="766.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.10%)</title><rect x="763" y="244" width="2" height="15" fill="rgb(206,21,40)"/><text x="766.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.10%)</title><rect x="763" y="260" width="2" height="15" fill="rgb(226,106,18)"/><text x="766.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.10%)</title><rect x="763" y="276" width="2" height="15" fill="rgb(244,18,31)"/><text x="766.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.10%)</title><rect x="763" y="292" width="2" height="15" fill="rgb(239,23,46)"/><text x="766.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.10%)</title><rect x="763" y="308" width="2" height="15" fill="rgb(221,106,35)"/><text x="766.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.10%)</title><rect x="763" y="324" width="2" height="15" fill="rgb(218,202,29)"/><text x="766.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (1 samples, 0.10%)</title><rect x="763" y="340" width="2" height="15" fill="rgb(216,92,7)"/><text x="766.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (1 samples, 0.10%)</title><rect x="763" y="356" width="2" height="15" fill="rgb(208,192,31)"/><text x="766.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (1 samples, 0.10%)</title><rect x="763" y="372" width="2" height="15" fill="rgb(207,55,25)"/><text x="766.00" y="382.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.10%)</title><rect x="765" y="260" width="1" height="15" fill="rgb(254,135,46)"/><text x="768.00" y="270.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (2 samples, 0.21%)</title><rect x="765" y="196" width="2" height="15" fill="rgb(243,74,10)"/><text x="768.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.21%)</title><rect x="765" y="212" width="2" height="15" fill="rgb(217,73,42)"/><text x="768.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (2 samples, 0.21%)</title><rect x="765" y="228" width="2" height="15" fill="rgb(215,51,49)"/><text x="768.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (2 samples, 0.21%)</title><rect x="765" y="244" width="2" height="15" fill="rgb(207,220,44)"/><text x="768.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.10%)</title><rect x="766" y="260" width="1" height="15" fill="rgb(213,153,53)"/><text x="769.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.10%)</title><rect x="766" y="276" width="1" height="15" fill="rgb(224,79,31)"/><text x="769.00" y="286.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.10%)</title><rect x="766" y="292" width="1" height="15" fill="rgb(231,3,27)"/><text x="769.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.10%)</title><rect x="767" y="244" width="1" height="15" fill="rgb(234,83,27)"/><text x="770.00" y="254.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.10%)</title><rect x="767" y="260" width="1" height="15" fill="rgb(220,156,24)"/><text x="770.00" y="270.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.10%)</title><rect x="767" y="276" width="1" height="15" fill="rgb(226,224,31)"/><text x="770.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.10%)</title><rect x="767" y="292" width="1" height="15" fill="rgb(214,83,5)"/><text x="770.00" y="302.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.10%)</title><rect x="767" y="308" width="1" height="15" fill="rgb(228,204,49)"/><text x="770.00" y="318.50"></text></g><g><title>0x7f0e3db1fbfc (libm-2.29.so) (1 samples, 0.10%)</title><rect x="768" y="292" width="1" height="15" fill="rgb(227,13,39)"/><text x="771.00" y="302.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.21%)</title><rect x="768" y="276" width="3" height="15" fill="rgb(229,127,26)"/><text x="771.00" y="286.50"></text></g><g><title>0x7f0e3db1fc0c (libm-2.29.so) (1 samples, 0.10%)</title><rect x="769" y="292" width="2" height="15" fill="rgb(216,89,9)"/><text x="772.00" y="302.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (7 samples, 0.72%)</title><rect x="763" y="164" width="9" height="15" fill="rgb(223,122,49)"/><text x="766.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (7 samples, 0.72%)</title><rect x="763" y="180" width="9" height="15" fill="rgb(211,78,7)"/><text x="766.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.41%)</title><rect x="767" y="196" width="5" height="15" fill="rgb(234,185,52)"/><text x="770.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.41%)</title><rect x="767" y="212" width="5" height="15" fill="rgb(243,214,2)"/><text x="770.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.41%)</title><rect x="767" y="228" width="5" height="15" fill="rgb(211,28,53)"/><text x="770.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 0.31%)</title><rect x="768" y="244" width="4" height="15" fill="rgb(242,129,39)"/><text x="771.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (3 samples, 0.31%)</title><rect x="768" y="260" width="4" height="15" fill="rgb(217,15,1)"/><text x="771.00" y="270.50"></text></g><g><title>npy_exp (npy_math_internal.h.src) (1 samples, 0.10%)</title><rect x="771" y="276" width="1" height="15" fill="rgb(249,63,25)"/><text x="774.00" y="286.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.10%)</title><rect x="772" y="164" width="1" height="15" fill="rgb(219,40,54)"/><text x="775.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="772" y="180" width="1" height="15" fill="rgb(252,78,25)"/><text x="775.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.10%)</title><rect x="772" y="196" width="1" height="15" fill="rgb(230,49,29)"/><text x="775.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="773" y="164" width="1" height="15" fill="rgb(242,211,25)"/><text x="776.00" y="174.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.10%)</title><rect x="773" y="180" width="1" height="15" fill="rgb(213,152,33)"/><text x="776.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="773" y="196" width="1" height="15" fill="rgb(251,75,24)"/><text x="776.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="774" y="164" width="2" height="15" fill="rgb(246,56,37)"/><text x="777.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="774" y="180" width="2" height="15" fill="rgb(244,41,16)"/><text x="777.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.10%)</title><rect x="774" y="196" width="2" height="15" fill="rgb(228,192,44)"/><text x="777.00" y="206.50"></text></g><g><title>0x7f0e17391d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="795" y="212" width="1" height="15" fill="rgb(232,86,20)"/><text x="798.00" y="222.50"></text></g><g><title>0x7f0e17390fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="795" y="228" width="1" height="15" fill="rgb(218,150,48)"/><text x="798.00" y="238.50"></text></g><g><title>0x7f0e173a0540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="795" y="244" width="1" height="15" fill="rgb(209,229,54)"/><text x="798.00" y="254.50"></text></g><g><title>0x7f0e173752f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="795" y="260" width="1" height="15" fill="rgb(238,42,33)"/><text x="798.00" y="270.50"></text></g><g><title>0x7f0e17374530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="795" y="276" width="1" height="15" fill="rgb(237,64,26)"/><text x="798.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (1 samples, 0.10%)</title><rect x="795" y="292" width="1" height="15" fill="rgb(248,215,33)"/><text x="798.00" y="302.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="797" y="260" width="2" height="15" fill="rgb(228,24,23)"/><text x="800.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.21%)</title><rect x="799" y="276" width="2" height="15" fill="rgb(245,137,3)"/><text x="802.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.10%)</title><rect x="800" y="292" width="1" height="15" fill="rgb(233,138,4)"/><text x="803.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.31%)</title><rect x="799" y="260" width="3" height="15" fill="rgb(223,112,32)"/><text x="802.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="801" y="276" width="1" height="15" fill="rgb(214,207,44)"/><text x="804.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.10%)</title><rect x="801" y="292" width="1" height="15" fill="rgb(251,183,41)"/><text x="804.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.10%)</title><rect x="801" y="308" width="1" height="15" fill="rgb(248,198,7)"/><text x="804.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.10%)</title><rect x="801" y="324" width="1" height="15" fill="rgb(239,18,41)"/><text x="804.00" y="334.50"></text></g><g><title>_mm_mul_pd (emmintrin.h) (1 samples, 0.10%)</title><rect x="806" y="308" width="1" height="15" fill="rgb(221,8,40)"/><text x="809.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.51%)</title><rect x="802" y="260" width="6" height="15" fill="rgb(207,15,47)"/><text x="805.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (5 samples, 0.51%)</title><rect x="802" y="276" width="6" height="15" fill="rgb(229,95,19)"/><text x="805.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (5 samples, 0.51%)</title><rect x="802" y="292" width="6" height="15" fill="rgb(250,158,38)"/><text x="805.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.10%)</title><rect x="807" y="308" width="1" height="15" fill="rgb(207,52,11)"/><text x="810.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.21%)</title><rect x="808" y="260" width="3" height="15" fill="rgb(205,168,5)"/><text x="811.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.10%)</title><rect x="810" y="276" width="1" height="15" fill="rgb(222,99,26)"/><text x="813.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.10%)</title><rect x="810" y="292" width="1" height="15" fill="rgb(239,191,37)"/><text x="813.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.10%)</title><rect x="810" y="308" width="1" height="15" fill="rgb(247,35,0)"/><text x="813.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.10%)</title><rect x="810" y="324" width="1" height="15" fill="rgb(208,192,14)"/><text x="813.00" y="334.50"></text></g><g><title>array_multiply (number.c) (14 samples, 1.44%)</title><rect x="796" y="212" width="17" height="15" fill="rgb(220,125,37)"/><text x="799.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 1.44%)</title><rect x="796" y="228" width="17" height="15" fill="rgb(234,19,7)"/><text x="799.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 1.44%)</title><rect x="796" y="244" width="17" height="15" fill="rgb(253,30,2)"/><text x="799.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.21%)</title><rect x="811" y="260" width="2" height="15" fill="rgb(206,19,34)"/><text x="814.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.21%)</title><rect x="811" y="276" width="2" height="15" fill="rgb(207,43,42)"/><text x="814.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.21%)</title><rect x="811" y="292" width="2" height="15" fill="rgb(231,92,52)"/><text x="814.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.10%)</title><rect x="813" y="212" width="1" height="15" fill="rgb(222,19,33)"/><text x="816.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.10%)</title><rect x="813" y="228" width="1" height="15" fill="rgb(211,171,23)"/><text x="816.00" y="238.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.10%)</title><rect x="817" y="340" width="1" height="15" fill="rgb(230,24,13)"/><text x="820.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (3 samples, 0.31%)</title><rect x="816" y="292" width="3" height="15" fill="rgb(215,145,16)"/><text x="819.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (2 samples, 0.21%)</title><rect x="817" y="308" width="2" height="15" fill="rgb(219,131,45)"/><text x="820.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (2 samples, 0.21%)</title><rect x="817" y="324" width="2" height="15" fill="rgb(234,212,34)"/><text x="820.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.10%)</title><rect x="818" y="340" width="1" height="15" fill="rgb(212,176,42)"/><text x="821.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.10%)</title><rect x="819" y="292" width="1" height="15" fill="rgb(214,69,3)"/><text x="822.00" y="302.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.10%)</title><rect x="819" y="308" width="1" height="15" fill="rgb(227,127,8)"/><text x="822.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 0.93%)</title><rect x="820" y="292" width="11" height="15" fill="rgb(243,122,39)"/><text x="823.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (9 samples, 0.93%)</title><rect x="820" y="308" width="11" height="15" fill="rgb(232,104,10)"/><text x="823.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (9 samples, 0.93%)</title><rect x="820" y="324" width="11" height="15" fill="rgb(209,53,6)"/><text x="823.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (6 samples, 0.62%)</title><rect x="824" y="340" width="7" height="15" fill="rgb(219,60,2)"/><text x="827.00" y="350.50"></text></g><g><title>array_subtract (number.c) (15 samples, 1.54%)</title><rect x="814" y="212" width="19" height="15" fill="rgb(222,75,28)"/><text x="817.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 1.54%)</title><rect x="814" y="228" width="19" height="15" fill="rgb(241,8,44)"/><text x="817.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 1.54%)</title><rect x="814" y="244" width="19" height="15" fill="rgb(230,167,0)"/><text x="817.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 1.44%)</title><rect x="816" y="260" width="17" height="15" fill="rgb(249,146,7)"/><text x="819.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (14 samples, 1.44%)</title><rect x="816" y="276" width="17" height="15" fill="rgb(244,192,6)"/><text x="819.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="831" y="292" width="2" height="15" fill="rgb(235,106,13)"/><text x="834.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.31%)</title><rect x="833" y="276" width="3" height="15" fill="rgb(240,217,45)"/><text x="836.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.31%)</title><rect x="833" y="292" width="3" height="15" fill="rgb(245,5,2)"/><text x="836.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.31%)</title><rect x="833" y="308" width="3" height="15" fill="rgb(225,172,33)"/><text x="836.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.31%)</title><rect x="833" y="324" width="3" height="15" fill="rgb(221,54,33)"/><text x="836.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.31%)</title><rect x="833" y="340" width="3" height="15" fill="rgb(241,219,35)"/><text x="836.00" y="350.50"></text></g><g><title>0x7f0e3d963e7a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="835" y="356" width="1" height="15" fill="rgb(216,72,40)"/><text x="838.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.21%)</title><rect x="837" y="324" width="3" height="15" fill="rgb(223,186,11)"/><text x="840.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (2 samples, 0.21%)</title><rect x="837" y="340" width="3" height="15" fill="rgb(212,177,10)"/><text x="840.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.10%)</title><rect x="839" y="356" width="1" height="15" fill="rgb(209,193,10)"/><text x="842.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.21%)</title><rect x="840" y="324" width="2" height="15" fill="rgb(223,80,21)"/><text x="843.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="840" y="340" width="2" height="15" fill="rgb(215,179,53)"/><text x="843.00" y="350.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.10%)</title><rect x="842" y="356" width="2" height="15" fill="rgb(247,134,47)"/><text x="845.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.10%)</title><rect x="842" y="372" width="2" height="15" fill="rgb(242,189,1)"/><text x="845.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.10%)</title><rect x="842" y="388" width="2" height="15" fill="rgb(240,70,36)"/><text x="845.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.10%)</title><rect x="842" y="404" width="2" height="15" fill="rgb(233,97,48)"/><text x="845.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.10%)</title><rect x="844" y="372" width="1" height="15" fill="rgb(219,175,38)"/><text x="847.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.31%)</title><rect x="842" y="324" width="4" height="15" fill="rgb(221,17,29)"/><text x="845.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.31%)</title><rect x="842" y="340" width="4" height="15" fill="rgb(240,158,53)"/><text x="845.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.21%)</title><rect x="844" y="356" width="2" height="15" fill="rgb(248,184,28)"/><text x="847.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.10%)</title><rect x="845" y="372" width="1" height="15" fill="rgb(217,64,51)"/><text x="848.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.10%)</title><rect x="846" y="324" width="1" height="15" fill="rgb(244,176,2)"/><text x="849.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.10%)</title><rect x="846" y="340" width="1" height="15" fill="rgb(249,146,4)"/><text x="849.00" y="350.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.10%)</title><rect x="847" y="324" width="1" height="15" fill="rgb(217,66,53)"/><text x="850.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (7 samples, 0.72%)</title><rect x="853" y="340" width="9" height="15" fill="rgb(243,136,12)"/><text x="856.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (2 samples, 0.21%)</title><rect x="859" y="356" width="3" height="15" fill="rgb(234,72,14)"/><text x="862.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="862" y="340" width="1" height="15" fill="rgb(206,226,51)"/><text x="865.00" y="350.50"></text></g><g><title>array_sum (methods.c) (31 samples, 3.19%)</title><rect x="833" y="212" width="37" height="15" fill="rgb(243,37,51)"/><text x="836.00" y="222.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (31 samples, 3.19%)</title><rect x="833" y="228" width="37" height="15" fill="rgb(223,156,46)"/><text x="836.00" y="238.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (31 samples, 3.19%)</title><rect x="833" y="244" width="37" height="15" fill="rgb(214,37,33)"/><text x="836.00" y="254.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (31 samples, 3.19%)</title><rect x="833" y="260" width="37" height="15" fill="rgb(250,22,5)"/><text x="836.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (28 samples, 2.88%)</title><rect x="836" y="276" width="34" height="15" fill="rgb(236,128,4)"/><text x="839.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (28 samples, 2.88%)</title><rect x="836" y="292" width="34" height="15" fill="rgb(207,94,51)"/><text x="839.00" y="302.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (27 samples, 2.78%)</title><rect x="837" y="308" width="33" height="15" fill="rgb(225,65,47)"/><text x="840.00" y="318.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (18 samples, 1.85%)</title><rect x="848" y="324" width="22" height="15" fill="rgb(221,206,19)"/><text x="851.00" y="334.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.62%)</title><rect x="863" y="340" width="7" height="15" fill="rgb(251,119,3)"/><text x="866.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.10%)</title><rect x="879" y="356" width="1" height="15" fill="rgb(225,87,53)"/><text x="882.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.10%)</title><rect x="879" y="372" width="1" height="15" fill="rgb(236,178,52)"/><text x="882.00" y="382.50"></text></g><g><title>0x7f0e3d96e13e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="880" y="372" width="1" height="15" fill="rgb(237,169,48)"/><text x="883.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.10%)</title><rect x="881" y="388" width="1" height="15" fill="rgb(227,65,34)"/><text x="884.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.10%)</title><rect x="881" y="404" width="1" height="15" fill="rgb(205,103,38)"/><text x="884.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.10%)</title><rect x="881" y="420" width="1" height="15" fill="rgb(252,176,42)"/><text x="884.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.10%)</title><rect x="881" y="436" width="1" height="15" fill="rgb(240,152,2)"/><text x="884.00" y="446.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.10%)</title><rect x="881" y="452" width="1" height="15" fill="rgb(253,89,27)"/><text x="884.00" y="462.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.10%)</title><rect x="881" y="468" width="1" height="15" fill="rgb(228,214,19)"/><text x="884.00" y="478.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (4 samples, 0.41%)</title><rect x="884" y="404" width="4" height="15" fill="rgb(220,16,54)"/><text x="887.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.72%)</title><rect x="881" y="372" width="9" height="15" fill="rgb(226,155,36)"/><text x="884.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (6 samples, 0.62%)</title><rect x="882" y="388" width="8" height="15" fill="rgb(217,193,4)"/><text x="885.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="888" y="404" width="2" height="15" fill="rgb(215,116,0)"/><text x="891.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (10 samples, 1.03%)</title><rect x="879" y="324" width="12" height="15" fill="rgb(237,41,49)"/><text x="882.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.03%)</title><rect x="879" y="340" width="12" height="15" fill="rgb(230,194,41)"/><text x="882.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 0.93%)</title><rect x="880" y="356" width="11" height="15" fill="rgb(213,82,19)"/><text x="883.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.10%)</title><rect x="890" y="372" width="1" height="15" fill="rgb(235,39,30)"/><text x="893.00" y="382.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.10%)</title><rect x="891" y="324" width="1" height="15" fill="rgb(205,59,53)"/><text x="894.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.51%)</title><rect x="897" y="340" width="6" height="15" fill="rgb(240,51,6)"/><text x="900.00" y="350.50"></text></g><g><title>0x7f0e3d963ed2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="902" y="356" width="1" height="15" fill="rgb(227,115,49)"/><text x="905.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (4 samples, 0.41%)</title><rect x="905" y="372" width="5" height="15" fill="rgb(250,127,12)"/><text x="908.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (4 samples, 0.41%)</title><rect x="905" y="388" width="5" height="15" fill="rgb(207,211,47)"/><text x="908.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 0.41%)</title><rect x="905" y="404" width="5" height="15" fill="rgb(252,34,48)"/><text x="908.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 0.41%)</title><rect x="905" y="420" width="5" height="15" fill="rgb(226,212,48)"/><text x="908.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="909" y="436" width="1" height="15" fill="rgb(238,84,17)"/><text x="912.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="914" y="388" width="1" height="15" fill="rgb(215,191,52)"/><text x="917.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.10%)</title><rect x="914" y="404" width="1" height="15" fill="rgb(242,179,2)"/><text x="917.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="914" y="420" width="1" height="15" fill="rgb(214,107,13)"/><text x="917.00" y="430.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.10%)</title><rect x="915" y="388" width="1" height="15" fill="rgb(243,141,18)"/><text x="918.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.10%)</title><rect x="915" y="404" width="1" height="15" fill="rgb(228,188,48)"/><text x="918.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.10%)</title><rect x="915" y="420" width="1" height="15" fill="rgb(226,10,49)"/><text x="918.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.10%)</title><rect x="915" y="436" width="1" height="15" fill="rgb(238,169,7)"/><text x="918.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.10%)</title><rect x="915" y="452" width="1" height="15" fill="rgb(211,142,13)"/><text x="918.00" y="462.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (12 samples, 1.23%)</title><rect x="903" y="340" width="15" height="15" fill="rgb(215,220,3)"/><text x="906.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.03%)</title><rect x="905" y="356" width="13" height="15" fill="rgb(249,15,21)"/><text x="908.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (6 samples, 0.62%)</title><rect x="910" y="372" width="8" height="15" fill="rgb(214,175,17)"/><text x="913.00" y="382.50"></text></g><g><title>gentype_ndim_get (scalartypes.c.src) (1 samples, 0.10%)</title><rect x="916" y="388" width="2" height="15" fill="rgb(234,92,20)"/><text x="919.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.10%)</title><rect x="918" y="356" width="1" height="15" fill="rgb(252,185,14)"/><text x="921.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.10%)</title><rect x="918" y="372" width="1" height="15" fill="rgb(205,205,24)"/><text x="921.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.10%)</title><rect x="918" y="388" width="1" height="15" fill="rgb(224,139,40)"/><text x="921.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.10%)</title><rect x="918" y="404" width="1" height="15" fill="rgb(216,146,21)"/><text x="921.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.10%)</title><rect x="918" y="420" width="1" height="15" fill="rgb(233,89,11)"/><text x="921.00" y="430.50"></text></g><g><title>0x7f0e3cb701c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="921" y="420" width="1" height="15" fill="rgb(242,42,23)"/><text x="924.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.31%)</title><rect x="920" y="372" width="4" height="15" fill="rgb(234,26,10)"/><text x="923.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.21%)</title><rect x="921" y="388" width="3" height="15" fill="rgb(214,223,36)"/><text x="924.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (2 samples, 0.21%)</title><rect x="921" y="404" width="3" height="15" fill="rgb(252,82,43)"/><text x="924.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.10%)</title><rect x="922" y="420" width="2" height="15" fill="rgb(225,38,2)"/><text x="925.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="922" y="436" width="2" height="15" fill="rgb(237,55,38)"/><text x="925.00" y="446.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="922" y="452" width="2" height="15" fill="rgb(212,169,27)"/><text x="925.00" y="462.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="922" y="468" width="2" height="15" fill="rgb(252,215,45)"/><text x="925.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.51%)</title><rect x="919" y="356" width="6" height="15" fill="rgb(231,126,24)"/><text x="922.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="924" y="372" width="1" height="15" fill="rgb(253,207,53)"/><text x="927.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.10%)</title><rect x="924" y="388" width="1" height="15" fill="rgb(215,169,25)"/><text x="927.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.10%)</title><rect x="924" y="404" width="1" height="15" fill="rgb(233,226,22)"/><text x="927.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (47 samples, 4.84%)</title><rect x="870" y="244" width="57" height="15" fill="rgb(232,180,24)"/><text x="873.00" y="254.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (46 samples, 4.73%)</title><rect x="871" y="260" width="56" height="15" fill="rgb(230,24,37)"/><text x="874.00" y="270.50">_wrap..</text></g><g><title>array_clip (methods.c) (44 samples, 4.53%)</title><rect x="874" y="276" width="53" height="15" fill="rgb(247,69,26)"/><text x="877.00" y="286.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (44 samples, 4.53%)</title><rect x="874" y="292" width="53" height="15" fill="rgb(243,187,0)"/><text x="877.00" y="302.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (44 samples, 4.53%)</title><rect x="874" y="308" width="53" height="15" fill="rgb(230,62,21)"/><text x="877.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (29 samples, 2.98%)</title><rect x="892" y="324" width="35" height="15" fill="rgb(219,4,4)"/><text x="895.00" y="334.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 0.82%)</title><rect x="918" y="340" width="9" height="15" fill="rgb(230,12,45)"/><text x="921.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.21%)</title><rect x="925" y="356" width="2" height="15" fill="rgb(239,217,42)"/><text x="928.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.21%)</title><rect x="925" y="372" width="2" height="15" fill="rgb(244,150,49)"/><text x="928.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.21%)</title><rect x="925" y="388" width="2" height="15" fill="rgb(206,178,21)"/><text x="928.00" y="398.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (49 samples, 5.04%)</title><rect x="870" y="212" width="60" height="15" fill="rgb(236,101,2)"/><text x="873.00" y="222.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (49 samples, 5.04%)</title><rect x="870" y="228" width="60" height="15" fill="rgb(244,2,52)"/><text x="873.00" y="238.50">array_..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.21%)</title><rect x="927" y="244" width="3" height="15" fill="rgb(216,55,45)"/><text x="930.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.21%)</title><rect x="927" y="260" width="3" height="15" fill="rgb(214,225,7)"/><text x="930.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.21%)</title><rect x="927" y="276" width="3" height="15" fill="rgb(222,221,34)"/><text x="930.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.21%)</title><rect x="927" y="292" width="3" height="15" fill="rgb(205,151,50)"/><text x="930.00" y="302.50"></text></g><g><title>0x7f0e17390f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="932" y="244" width="1" height="15" fill="rgb(247,65,20)"/><text x="935.00" y="254.50"></text></g><g><title>0x7f0e17380d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="932" y="260" width="1" height="15" fill="rgb(243,172,26)"/><text x="935.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.10%)</title><rect x="932" y="276" width="1" height="15" fill="rgb(228,168,44)"/><text x="935.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="932" y="292" width="1" height="15" fill="rgb(246,187,8)"/><text x="935.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.10%)</title><rect x="932" y="308" width="1" height="15" fill="rgb(212,205,47)"/><text x="935.00" y="318.50"></text></g><g><title>0x7f0e17390f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="933" y="244" width="2" height="15" fill="rgb(248,201,4)"/><text x="936.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.10%)</title><rect x="938" y="372" width="1" height="15" fill="rgb(214,4,9)"/><text x="941.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.10%)</title><rect x="939" y="372" width="2" height="15" fill="rgb(251,17,46)"/><text x="942.00" y="382.50"></text></g><g><title>0x7f0e3d94d902 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="939" y="388" width="2" height="15" fill="rgb(247,196,46)"/><text x="942.00" y="398.50"></text></g><g><title>0x7f0e1739f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="935" y="276" width="7" height="15" fill="rgb(208,72,42)"/><text x="938.00" y="286.50"></text></g><g><title>0x7f0e17383d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="935" y="292" width="7" height="15" fill="rgb(240,68,24)"/><text x="938.00" y="302.50"></text></g><g><title>0x7f0e17383666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="935" y="308" width="7" height="15" fill="rgb(224,175,53)"/><text x="938.00" y="318.50"></text></g><g><title>0x7f0e173792fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.51%)</title><rect x="936" y="324" width="6" height="15" fill="rgb(239,54,47)"/><text x="939.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 0.51%)</title><rect x="936" y="340" width="6" height="15" fill="rgb(236,188,36)"/><text x="939.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.31%)</title><rect x="938" y="356" width="4" height="15" fill="rgb(236,223,41)"/><text x="941.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.10%)</title><rect x="941" y="372" width="1" height="15" fill="rgb(221,25,21)"/><text x="944.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.10%)</title><rect x="941" y="388" width="1" height="15" fill="rgb(249,11,32)"/><text x="944.00" y="398.50"></text></g><g><title>0x7f0e1739f364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="942" y="276" width="1" height="15" fill="rgb(225,26,13)"/><text x="945.00" y="286.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.10%)</title><rect x="942" y="292" width="1" height="15" fill="rgb(231,183,41)"/><text x="945.00" y="302.50"></text></g><g><title>0x7f0e1739f511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="943" y="276" width="1" height="15" fill="rgb(243,210,40)"/><text x="946.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.21%)</title><rect x="945" y="308" width="3" height="15" fill="rgb(214,141,6)"/><text x="948.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.10%)</title><rect x="947" y="324" width="1" height="15" fill="rgb(231,185,52)"/><text x="950.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.10%)</title><rect x="947" y="340" width="1" height="15" fill="rgb(207,96,42)"/><text x="950.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.10%)</title><rect x="947" y="356" width="1" height="15" fill="rgb(237,195,13)"/><text x="950.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="948" y="388" width="1" height="15" fill="rgb(215,200,50)"/><text x="951.00" y="398.50"></text></g><g><title>0x7f0e1739f592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.51%)</title><rect x="944" y="276" width="6" height="15" fill="rgb(217,41,1)"/><text x="947.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 0.51%)</title><rect x="944" y="292" width="6" height="15" fill="rgb(215,132,3)"/><text x="947.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.21%)</title><rect x="948" y="308" width="2" height="15" fill="rgb(206,123,20)"/><text x="951.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.21%)</title><rect x="948" y="324" width="2" height="15" fill="rgb(242,126,17)"/><text x="951.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="948" y="340" width="2" height="15" fill="rgb(241,187,12)"/><text x="951.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.21%)</title><rect x="948" y="356" width="2" height="15" fill="rgb(234,36,32)"/><text x="951.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.21%)</title><rect x="948" y="372" width="2" height="15" fill="rgb(239,198,51)"/><text x="951.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="949" y="388" width="1" height="15" fill="rgb(206,198,11)"/><text x="952.00" y="398.50"></text></g><g><title>0x7f0e1739f693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="950" y="276" width="2" height="15" fill="rgb(239,171,38)"/><text x="953.00" y="286.50"></text></g><g><title>0x7f0e1739f698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="952" y="276" width="1" height="15" fill="rgb(223,161,38)"/><text x="955.00" y="286.50"></text></g><g><title>0x7f0e1739f6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="953" y="276" width="2" height="15" fill="rgb(225,153,12)"/><text x="956.00" y="286.50"></text></g><g><title>0x7f0e1739f6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="955" y="276" width="1" height="15" fill="rgb(238,44,9)"/><text x="958.00" y="286.50"></text></g><g><title>0x7f0e1739f6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="956" y="276" width="3" height="15" fill="rgb(210,76,27)"/><text x="959.00" y="286.50"></text></g><g><title>0x7f0e1739f7ac (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="959" y="276" width="1" height="15" fill="rgb(207,2,35)"/><text x="962.00" y="286.50"></text></g><g><title>0x7f0e1739f7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="960" y="276" width="1" height="15" fill="rgb(241,149,18)"/><text x="963.00" y="286.50"></text></g><g><title>0x7f0e1739f92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="961" y="276" width="1" height="15" fill="rgb(237,76,37)"/><text x="964.00" y="286.50"></text></g><g><title>0x7f0e17374a05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="961" y="292" width="1" height="15" fill="rgb(228,98,10)"/><text x="964.00" y="302.50"></text></g><g><title>0x7f0e17377529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="962" y="292" width="2" height="15" fill="rgb(227,71,49)"/><text x="965.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.10%)</title><rect x="962" y="308" width="2" height="15" fill="rgb(253,97,2)"/><text x="965.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.10%)</title><rect x="962" y="324" width="2" height="15" fill="rgb(206,156,40)"/><text x="965.00" y="334.50"></text></g><g><title>0x7f0e173a0405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 2.57%)</title><rect x="935" y="260" width="30" height="15" fill="rgb(227,76,7)"/><text x="938.00" y="270.50">0x..</text></g><g><title>0x7f0e1739fc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="962" y="276" width="3" height="15" fill="rgb(247,88,41)"/><text x="965.00" y="286.50"></text></g><g><title>0x7f0e173775f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="964" y="292" width="1" height="15" fill="rgb(254,94,39)"/><text x="967.00" y="302.50"></text></g><g><title>0x7f0e17376f4f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="964" y="308" width="1" height="15" fill="rgb(238,167,6)"/><text x="967.00" y="318.50"></text></g><g><title>0x7f0e17390fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 2.67%)</title><rect x="935" y="244" width="31" height="15" fill="rgb(212,133,12)"/><text x="938.00" y="254.50">0x..</text></g><g><title>0x7f0e173a0540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="965" y="260" width="1" height="15" fill="rgb(219,8,2)"/><text x="968.00" y="270.50"></text></g><g><title>0x7f0e173752f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="965" y="276" width="1" height="15" fill="rgb(209,90,32)"/><text x="968.00" y="286.50"></text></g><g><title>0x7f0e17374530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="965" y="292" width="1" height="15" fill="rgb(209,76,44)"/><text x="968.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.10%)</title><rect x="965" y="308" width="1" height="15" fill="rgb(214,15,24)"/><text x="968.00" y="318.50"></text></g><g><title>0x7f0e17391035 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="966" y="244" width="1" height="15" fill="rgb(208,16,4)"/><text x="969.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="967" y="276" width="2" height="15" fill="rgb(230,82,44)"/><text x="970.00" y="286.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="967" y="292" width="2" height="15" fill="rgb(253,37,22)"/><text x="970.00" y="302.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (9 samples, 0.93%)</title><rect x="969" y="292" width="10" height="15" fill="rgb(217,162,15)"/><text x="972.00" y="302.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (2 samples, 0.21%)</title><rect x="979" y="292" width="3" height="15" fill="rgb(226,119,2)"/><text x="982.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.10%)</title><rect x="981" y="308" width="1" height="15" fill="rgb(214,86,24)"/><text x="984.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.10%)</title><rect x="981" y="324" width="1" height="15" fill="rgb(205,66,11)"/><text x="984.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.10%)</title><rect x="981" y="340" width="1" height="15" fill="rgb(249,9,49)"/><text x="984.00" y="350.50"></text></g><g><title>0x7f0e1739105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.44%)</title><rect x="967" y="244" width="17" height="15" fill="rgb(213,211,5)"/><text x="970.00" y="254.50"></text></g><g><title>array_take (methods.c) (14 samples, 1.44%)</title><rect x="967" y="260" width="17" height="15" fill="rgb(236,147,12)"/><text x="970.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (13 samples, 1.34%)</title><rect x="969" y="276" width="15" height="15" fill="rgb(237,55,27)"/><text x="972.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.21%)</title><rect x="982" y="292" width="2" height="15" fill="rgb(215,62,34)"/><text x="985.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="982" y="308" width="2" height="15" fill="rgb(209,197,11)"/><text x="985.00" y="318.50"></text></g><g><title>0x7f0e1739113a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="984" y="244" width="2" height="15" fill="rgb(216,223,1)"/><text x="987.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="984" y="260" width="2" height="15" fill="rgb(219,13,54)"/><text x="987.00" y="270.50"></text></g><g><title>0x7f0e1739114f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="986" y="244" width="2" height="15" fill="rgb(229,34,37)"/><text x="989.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="987" y="260" width="1" height="15" fill="rgb(231,122,3)"/><text x="990.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.10%)</title><rect x="987" y="276" width="1" height="15" fill="rgb(233,85,1)"/><text x="990.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="987" y="292" width="1" height="15" fill="rgb(239,65,1)"/><text x="990.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (2 samples, 0.21%)</title><rect x="989" y="276" width="3" height="15" fill="rgb(220,55,54)"/><text x="992.00" y="286.50"></text></g><g><title>0x7f0e3d96373f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="990" y="292" width="2" height="15" fill="rgb(244,86,24)"/><text x="993.00" y="302.50"></text></g><g><title>0x7f0e17391d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (50 samples, 5.14%)</title><rect x="932" y="228" width="61" height="15" fill="rgb(216,183,45)"/><text x="935.00" y="238.50">0x7f0e..</text></g><g><title>0x7f0e17391328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="988" y="244" width="5" height="15" fill="rgb(215,25,5)"/><text x="991.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.41%)</title><rect x="988" y="260" width="5" height="15" fill="rgb(235,133,42)"/><text x="991.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.10%)</title><rect x="992" y="276" width="1" height="15" fill="rgb(229,8,45)"/><text x="995.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.10%)</title><rect x="992" y="292" width="1" height="15" fill="rgb(229,146,15)"/><text x="995.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="992" y="308" width="1" height="15" fill="rgb(228,89,45)"/><text x="995.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.10%)</title><rect x="992" y="324" width="1" height="15" fill="rgb(230,190,36)"/><text x="995.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.31%)</title><rect x="1003" y="260" width="3" height="15" fill="rgb(250,12,28)"/><text x="1006.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="1010" y="276" width="2" height="15" fill="rgb(254,145,47)"/><text x="1013.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 0.62%)</title><rect x="1006" y="260" width="7" height="15" fill="rgb(226,35,4)"/><text x="1009.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="1012" y="276" width="1" height="15" fill="rgb(220,6,7)"/><text x="1015.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="1013" y="260" width="2" height="15" fill="rgb(225,136,47)"/><text x="1016.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1021" y="276" width="1" height="15" fill="rgb(231,118,27)"/><text x="1024.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 0.82%)</title><rect x="1015" y="260" width="9" height="15" fill="rgb(224,53,11)"/><text x="1018.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.21%)</title><rect x="1022" y="276" width="2" height="15" fill="rgb(243,66,49)"/><text x="1025.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 0.31%)</title><rect x="1024" y="260" width="4" height="15" fill="rgb(245,32,23)"/><text x="1027.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.10%)</title><rect x="1027" y="276" width="1" height="15" fill="rgb(214,48,47)"/><text x="1030.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.10%)</title><rect x="1027" y="292" width="1" height="15" fill="rgb(205,1,46)"/><text x="1030.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.10%)</title><rect x="1027" y="308" width="1" height="15" fill="rgb(239,49,26)"/><text x="1030.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.10%)</title><rect x="1027" y="324" width="1" height="15" fill="rgb(219,28,9)"/><text x="1030.00" y="334.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.21%)</title><rect x="1028" y="260" width="2" height="15" fill="rgb(215,100,3)"/><text x="1031.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.21%)</title><rect x="1028" y="276" width="2" height="15" fill="rgb(242,27,51)"/><text x="1031.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (41 samples, 4.22%)</title><rect x="993" y="228" width="50" height="15" fill="rgb(209,72,50)"/><text x="996.00" y="238.50">_vali..</text></g><g><title>check_array (sklearn/utils/validation.py) (41 samples, 4.22%)</title><rect x="993" y="244" width="50" height="15" fill="rgb(247,77,33)"/><text x="996.00" y="254.50">check..</text></g><g><title>simplefilter (warnings.py) (10 samples, 1.03%)</title><rect x="1030" y="260" width="13" height="15" fill="rgb(244,42,39)"/><text x="1033.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (8 samples, 0.82%)</title><rect x="1033" y="276" width="10" height="15" fill="rgb(215,103,43)"/><text x="1036.00" y="286.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.10%)</title><rect x="1043" y="308" width="1" height="15" fill="rgb(222,217,40)"/><text x="1046.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (1 samples, 0.10%)</title><rect x="1043" y="324" width="1" height="15" fill="rgb(205,90,32)"/><text x="1046.00" y="334.50"></text></g><g><title>array_richcompare (arrayobject.c) (2 samples, 0.21%)</title><rect x="1043" y="228" width="2" height="15" fill="rgb(230,44,32)"/><text x="1046.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.21%)</title><rect x="1043" y="244" width="2" height="15" fill="rgb(240,225,27)"/><text x="1046.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.21%)</title><rect x="1043" y="260" width="2" height="15" fill="rgb(249,92,21)"/><text x="1046.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="1043" y="276" width="2" height="15" fill="rgb(208,84,2)"/><text x="1046.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="1043" y="292" width="2" height="15" fill="rgb(209,143,19)"/><text x="1046.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="1044" y="308" width="1" height="15" fill="rgb(246,37,21)"/><text x="1047.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.10%)</title><rect x="1046" y="292" width="1" height="15" fill="rgb(248,81,13)"/><text x="1049.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.10%)</title><rect x="1046" y="308" width="1" height="15" fill="rgb(231,174,5)"/><text x="1049.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.10%)</title><rect x="1046" y="324" width="1" height="15" fill="rgb(248,11,43)"/><text x="1049.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.10%)</title><rect x="1046" y="340" width="1" height="15" fill="rgb(216,51,3)"/><text x="1049.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.10%)</title><rect x="1046" y="356" width="1" height="15" fill="rgb(206,75,24)"/><text x="1049.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.10%)</title><rect x="1052" y="356" width="2" height="15" fill="rgb(219,101,34)"/><text x="1055.00" y="366.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.10%)</title><rect x="1054" y="356" width="1" height="15" fill="rgb(226,114,5)"/><text x="1057.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.10%)</title><rect x="1055" y="356" width="1" height="15" fill="rgb(211,210,41)"/><text x="1058.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 0.62%)</title><rect x="1050" y="340" width="7" height="15" fill="rgb(241,38,0)"/><text x="1053.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.10%)</title><rect x="1056" y="356" width="1" height="15" fill="rgb(234,44,4)"/><text x="1059.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.10%)</title><rect x="1057" y="340" width="1" height="15" fill="rgb(216,63,16)"/><text x="1060.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.10%)</title><rect x="1058" y="388" width="2" height="15" fill="rgb(206,10,26)"/><text x="1061.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.31%)</title><rect x="1058" y="340" width="4" height="15" fill="rgb(217,50,43)"/><text x="1061.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.31%)</title><rect x="1058" y="356" width="4" height="15" fill="rgb(206,0,28)"/><text x="1061.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.31%)</title><rect x="1058" y="372" width="4" height="15" fill="rgb(234,75,45)"/><text x="1061.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.21%)</title><rect x="1060" y="388" width="2" height="15" fill="rgb(219,54,11)"/><text x="1063.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (11 samples, 1.13%)</title><rect x="1067" y="356" width="13" height="15" fill="rgb(216,216,36)"/><text x="1070.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 0.41%)</title><rect x="1075" y="372" width="5" height="15" fill="rgb(210,56,26)"/><text x="1078.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="1080" y="356" width="1" height="15" fill="rgb(245,164,43)"/><text x="1083.00" y="366.50"></text></g><g><title>array_sum (methods.c) (36 samples, 3.70%)</title><rect x="1045" y="228" width="44" height="15" fill="rgb(234,114,34)"/><text x="1048.00" y="238.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (36 samples, 3.70%)</title><rect x="1045" y="244" width="44" height="15" fill="rgb(221,53,31)"/><text x="1048.00" y="254.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (35 samples, 3.60%)</title><rect x="1046" y="260" width="43" height="15" fill="rgb(239,25,36)"/><text x="1049.00" y="270.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (35 samples, 3.60%)</title><rect x="1046" y="276" width="43" height="15" fill="rgb(208,47,12)"/><text x="1049.00" y="286.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (34 samples, 3.50%)</title><rect x="1047" y="292" width="42" height="15" fill="rgb(214,86,16)"/><text x="1050.00" y="302.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (33 samples, 3.40%)</title><rect x="1049" y="308" width="40" height="15" fill="rgb(206,33,28)"/><text x="1052.00" y="318.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (33 samples, 3.40%)</title><rect x="1049" y="324" width="40" height="15" fill="rgb(205,65,37)"/><text x="1052.00" y="334.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (22 samples, 2.26%)</title><rect x="1062" y="340" width="27" height="15" fill="rgb(242,221,41)"/><text x="1065.00" y="350.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.62%)</title><rect x="1081" y="356" width="8" height="15" fill="rgb(231,197,22)"/><text x="1084.00" y="366.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.21%)</title><rect x="1098" y="260" width="3" height="15" fill="rgb(243,48,44)"/><text x="1101.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (13 samples, 1.34%)</title><rect x="1089" y="228" width="16" height="15" fill="rgb(214,167,29)"/><text x="1092.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 1.34%)</title><rect x="1089" y="244" width="16" height="15" fill="rgb(232,101,25)"/><text x="1092.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.31%)</title><rect x="1101" y="260" width="4" height="15" fill="rgb(234,19,38)"/><text x="1104.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.10%)</title><rect x="1105" y="244" width="1" height="15" fill="rgb(222,102,48)"/><text x="1108.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.10%)</title><rect x="1105" y="260" width="1" height="15" fill="rgb(215,9,21)"/><text x="1108.00" y="270.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.10%)</title><rect x="1107" y="324" width="1" height="15" fill="rgb(251,139,4)"/><text x="1110.00" y="334.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (6 samples, 0.62%)</title><rect x="1107" y="292" width="7" height="15" fill="rgb(241,179,4)"/><text x="1110.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (6 samples, 0.62%)</title><rect x="1107" y="308" width="7" height="15" fill="rgb(228,139,10)"/><text x="1110.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (5 samples, 0.51%)</title><rect x="1108" y="324" width="6" height="15" fill="rgb(247,168,13)"/><text x="1111.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (5 samples, 0.51%)</title><rect x="1108" y="340" width="6" height="15" fill="rgb(249,157,33)"/><text x="1111.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.10%)</title><rect x="1114" y="292" width="1" height="15" fill="rgb(252,95,36)"/><text x="1117.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.10%)</title><rect x="1114" y="308" width="1" height="15" fill="rgb(208,200,39)"/><text x="1117.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.10%)</title><rect x="1115" y="292" width="2" height="15" fill="rgb(242,55,38)"/><text x="1118.00" y="302.50"></text></g><g><title>0x7f0e3d94da33 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1115" y="308" width="2" height="15" fill="rgb(205,189,13)"/><text x="1118.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.10%)</title><rect x="1117" y="308" width="1" height="15" fill="rgb(231,166,3)"/><text x="1120.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1117" y="324" width="1" height="15" fill="rgb(238,35,1)"/><text x="1120.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 0.93%)</title><rect x="1117" y="292" width="11" height="15" fill="rgb(216,144,6)"/><text x="1120.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (8 samples, 0.82%)</title><rect x="1118" y="308" width="10" height="15" fill="rgb(212,18,17)"/><text x="1121.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (8 samples, 0.82%)</title><rect x="1118" y="324" width="10" height="15" fill="rgb(205,17,22)"/><text x="1121.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.21%)</title><rect x="1125" y="340" width="3" height="15" fill="rgb(241,23,29)"/><text x="1128.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 1.95%)</title><rect x="1106" y="244" width="23" height="15" fill="rgb(243,94,46)"/><text x="1109.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (19 samples, 1.95%)</title><rect x="1106" y="260" width="23" height="15" fill="rgb(225,3,9)"/><text x="1109.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (19 samples, 1.95%)</title><rect x="1106" y="276" width="23" height="15" fill="rgb(250,142,1)"/><text x="1109.00" y="286.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.10%)</title><rect x="1128" y="292" width="1" height="15" fill="rgb(249,192,33)"/><text x="1131.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (165 samples, 16.98%)</title><rect x="930" y="212" width="200" height="15" fill="rgb(245,161,54)"/><text x="933.00" y="222.50">predict_proba (sklearn/tre..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 2.16%)</title><rect x="1105" y="228" width="25" height="15" fill="rgb(209,47,40)"/><text x="1108.00" y="238.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.10%)</title><rect x="1129" y="244" width="1" height="15" fill="rgb(225,78,6)"/><text x="1132.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.10%)</title><rect x="1130" y="244" width="1" height="15" fill="rgb(248,160,41)"/><text x="1133.00" y="254.50"></text></g><g><title>0x7f0e3db1fdd0 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1132" y="292" width="2" height="15" fill="rgb(215,173,28)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7f0e3db1fdee (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1134" y="292" width="1" height="15" fill="rgb(253,138,51)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7f0e3db1fe4d (libm-2.29.so) (3 samples, 0.31%)</title><rect x="1135" y="292" width="4" height="15" fill="rgb(211,148,36)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7f0e3db1fe61 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1139" y="292" width="1" height="15" fill="rgb(215,167,32)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7f0e3db1fe6e (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1140" y="292" width="2" height="15" fill="rgb(240,167,6)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7f0e3db1fe8d (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1142" y="292" width="3" height="15" fill="rgb(219,211,7)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7f0e3db1fea2 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1145" y="292" width="2" height="15" fill="rgb(212,13,6)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7f0e3db1feb6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1147" y="292" width="1" height="15" fill="rgb(212,190,44)"/><text x="1150.00" y="302.50"></text></g><g><title>0x7f0e3db1feca (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1148" y="292" width="1" height="15" fill="rgb(213,90,43)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f0e3db1fed2 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1149" y="292" width="2" height="15" fill="rgb(236,5,39)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7f0e3db1feda (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1151" y="292" width="1" height="15" fill="rgb(224,121,6)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f0e3db1feee (libm-2.29.so) (4 samples, 0.41%)</title><rect x="1152" y="292" width="5" height="15" fill="rgb(254,131,19)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7f0e3db1fef6 (libm-2.29.so) (6 samples, 0.62%)</title><rect x="1157" y="292" width="7" height="15" fill="rgb(227,43,54)"/><text x="1160.00" y="302.50"></text></g><g><title>0x7f0e3db1fefa (libm-2.29.so) (4 samples, 0.41%)</title><rect x="1164" y="292" width="5" height="15" fill="rgb(222,103,29)"/><text x="1167.00" y="302.50"></text></g><g><title>0x7f0e3db1ff2b (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1169" y="292" width="1" height="15" fill="rgb(238,201,31)"/><text x="1172.00" y="302.50"></text></g><g><title>0x7f0e3db1ff97 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1170" y="292" width="1" height="15" fill="rgb(206,42,30)"/><text x="1173.00" y="302.50"></text></g><g><title>0x7f0e3db1fff3 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1171" y="292" width="2" height="15" fill="rgb(240,186,50)"/><text x="1174.00" y="302.50"></text></g><g><title>0x7f0e3db2000f (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1173" y="292" width="1" height="15" fill="rgb(227,55,40)"/><text x="1176.00" y="302.50"></text></g><g><title>0x7f0e3db20013 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1174" y="292" width="1" height="15" fill="rgb(254,88,31)"/><text x="1177.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1175" y="292" width="1" height="15" fill="rgb(249,128,23)"/><text x="1178.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (329 samples, 33.85%)</title><rect x="778" y="196" width="399" height="15" fill="rgb(251,112,53)"/><text x="781.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (39 samples, 4.01%)</title><rect x="1130" y="212" width="47" height="15" fill="rgb(219,109,15)"/><text x="1133.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (39 samples, 4.01%)</title><rect x="1130" y="228" width="47" height="15" fill="rgb(206,195,0)"/><text x="1133.00" y="238.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (38 samples, 3.91%)</title><rect x="1131" y="244" width="46" height="15" fill="rgb(242,219,34)"/><text x="1134.00" y="254.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (38 samples, 3.91%)</title><rect x="1131" y="260" width="46" height="15" fill="rgb(231,178,36)"/><text x="1134.00" y="270.50">triv..</text></g><g><title>PyUFunc_d_d (loops.c.src) (38 samples, 3.91%)</title><rect x="1131" y="276" width="46" height="15" fill="rgb(239,2,30)"/><text x="1134.00" y="286.50">PyUF..</text></g><g><title>npy_log (npy_math_internal.h.src) (1 samples, 0.10%)</title><rect x="1176" y="292" width="1" height="15" fill="rgb(230,102,43)"/><text x="1179.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (333 samples, 34.26%)</title><rect x="776" y="180" width="404" height="15" fill="rgb(234,122,48)"/><text x="779.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.21%)</title><rect x="1177" y="196" width="3" height="15" fill="rgb(232,174,32)"/><text x="1180.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.10%)</title><rect x="1180" y="180" width="1" height="15" fill="rgb(205,8,49)"/><text x="1183.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="1180" y="196" width="1" height="15" fill="rgb(244,15,37)"/><text x="1183.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="1180" y="212" width="1" height="15" fill="rgb(247,215,17)"/><text x="1183.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.10%)</title><rect x="1181" y="212" width="1" height="15" fill="rgb(249,63,18)"/><text x="1184.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.10%)</title><rect x="1181" y="228" width="1" height="15" fill="rgb(247,216,14)"/><text x="1184.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.10%)</title><rect x="1181" y="244" width="1" height="15" fill="rgb(248,106,14)"/><text x="1184.00" y="254.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.10%)</title><rect x="1182" y="308" width="1" height="15" fill="rgb(211,71,54)"/><text x="1185.00" y="318.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (4 samples, 0.41%)</title><rect x="1182" y="292" width="5" height="15" fill="rgb(237,49,24)"/><text x="1185.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.31%)</title><rect x="1183" y="308" width="4" height="15" fill="rgb(238,142,27)"/><text x="1186.00" y="318.50"></text></g><g><title>array_add (number.c) (6 samples, 0.62%)</title><rect x="1181" y="180" width="7" height="15" fill="rgb(226,169,18)"/><text x="1184.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.62%)</title><rect x="1181" y="196" width="7" height="15" fill="rgb(210,42,10)"/><text x="1184.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.51%)</title><rect x="1182" y="212" width="6" height="15" fill="rgb(226,169,43)"/><text x="1185.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.51%)</title><rect x="1182" y="228" width="6" height="15" fill="rgb(220,214,21)"/><text x="1185.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (5 samples, 0.51%)</title><rect x="1182" y="244" width="6" height="15" fill="rgb(252,190,40)"/><text x="1185.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (5 samples, 0.51%)</title><rect x="1182" y="260" width="6" height="15" fill="rgb(236,158,30)"/><text x="1185.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (5 samples, 0.51%)</title><rect x="1182" y="276" width="6" height="15" fill="rgb(205,208,30)"/><text x="1185.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_add_DOUBLE (simd.inc.src) (1 samples, 0.10%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(210,87,6)"/><text x="1190.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.10%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(234,74,3)"/><text x="1190.00" y="318.50"></text></g><g><title>all (972 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(233,141,21)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (972 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(249,54,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (352 samples, 36.21%)</title><rect x="762" y="68" width="428" height="15" fill="rgb(240,71,15)"/><text x="765.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_4_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (352 samples, 36.21%)</title><rect x="762" y="84" width="428" height="15" fill="rgb(217,225,8)"/><text x="765.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py) (352 samples, 36.21%)</title><rect x="762" y="100" width="428" height="15" fill="rgb(238,113,12)"/><text x="765.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (351 samples, 36.11%)</title><rect x="763" y="116" width="427" height="15" fill="rgb(246,79,14)"/><text x="766.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (351 samples, 36.11%)</title><rect x="763" y="132" width="427" height="15" fill="rgb(212,179,6)"/><text x="766.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (351 samples, 36.11%)</title><rect x="763" y="148" width="427" height="15" fill="rgb(215,224,53)"/><text x="766.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (341 samples, 35.08%)</title><rect x="776" y="164" width="414" height="15" fill="rgb(241,71,52)"/><text x="779.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(247,25,41)"/><text x="1191.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(253,2,9)"/><text x="1191.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(238,40,43)"/><text x="1191.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.10%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(254,201,38)"/><text x="1191.00" y="238.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(223,117,54)"/><text x="1191.00" y="254.50"></text></g></g></svg>