<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>&lt;module&gt; (onnx/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(246,192,53)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(216,120,48)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(226,52,48)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(226,56,20)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(247,14,19)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(215,228,0)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (1 samples, 0.29%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(227,62,35)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(222,141,15)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(209,186,2)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(252,106,2)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(237,221,47)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(226,221,46)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (1 samples, 0.29%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(213,119,52)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(228,158,53)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(238,152,8)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(223,130,41)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(234,121,41)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(232,131,2)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (1 samples, 0.29%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(212,67,42)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(214,54,28)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(213,45,23)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(205,221,36)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(234,87,25)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(253,213,9)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(245,22,13)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(242,189,31)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(246,82,12)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(236,89,26)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(219,61,53)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(235,145,24)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(241,157,52)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(216,208,30)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(232,95,37)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(216,165,38)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(245,69,51)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(241,127,18)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(242,86,26)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(207,115,33)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(238,219,44)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(227,225,26)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(219,104,33)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(246,175,46)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(210,32,43)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(240,14,20)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(254,156,31)"/><text x="13.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(235,0,38)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(253,50,8)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(249,39,51)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(240,128,38)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(236,18,8)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(254,35,18)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="292" width="3" height="15" fill="rgb(246,194,49)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="308" width="3" height="15" fill="rgb(238,179,26)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="324" width="3" height="15" fill="rgb(251,211,51)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="340" width="3" height="15" fill="rgb(223,212,19)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="356" width="3" height="15" fill="rgb(222,212,34)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="372" width="3" height="15" fill="rgb(205,194,7)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.29%)</title><rect x="13" y="388" width="3" height="15" fill="rgb(219,7,22)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="404" width="3" height="15" fill="rgb(250,25,45)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="420" width="3" height="15" fill="rgb(250,13,5)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="436" width="3" height="15" fill="rgb(208,31,3)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="452" width="3" height="15" fill="rgb(205,193,23)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="468" width="3" height="15" fill="rgb(239,208,8)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="484" width="3" height="15" fill="rgb(217,89,6)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="500" width="3" height="15" fill="rgb(224,165,38)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="516" width="3" height="15" fill="rgb(236,136,22)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="532" width="3" height="15" fill="rgb(218,148,4)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="548" width="3" height="15" fill="rgb(237,162,52)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="564" width="3" height="15" fill="rgb(212,15,0)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.29%)</title><rect x="13" y="580" width="3" height="15" fill="rgb(213,207,54)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="596" width="3" height="15" fill="rgb(240,229,39)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="612" width="3" height="15" fill="rgb(232,189,48)"/><text x="16.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="628" width="3" height="15" fill="rgb(254,108,23)"/><text x="16.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="644" width="3" height="15" fill="rgb(238,107,28)"/><text x="16.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="660" width="3" height="15" fill="rgb(253,192,9)"/><text x="16.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="676" width="3" height="15" fill="rgb(241,160,42)"/><text x="16.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="692" width="3" height="15" fill="rgb(246,81,16)"/><text x="16.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="708" width="3" height="15" fill="rgb(213,117,53)"/><text x="16.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="724" width="3" height="15" fill="rgb(240,210,40)"/><text x="16.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="740" width="3" height="15" fill="rgb(245,148,34)"/><text x="16.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="756" width="3" height="15" fill="rgb(249,60,32)"/><text x="16.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.29%)</title><rect x="13" y="772" width="3" height="15" fill="rgb(220,50,42)"/><text x="16.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="788" width="3" height="15" fill="rgb(211,136,46)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="804" width="3" height="15" fill="rgb(210,95,46)"/><text x="16.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="820" width="3" height="15" fill="rgb(212,74,23)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="836" width="3" height="15" fill="rgb(254,49,36)"/><text x="16.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(232,165,45)"/><text x="16.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(220,3,49)"/><text x="16.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(234,104,32)"/><text x="16.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.29%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(214,75,44)"/><text x="16.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(217,48,0)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(249,25,49)"/><text x="16.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(214,106,42)"/><text x="16.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(243,177,54)"/><text x="16.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(228,147,53)"/><text x="16.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.29%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(221,123,5)"/><text x="16.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(251,164,52)"/><text x="16.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(220,48,27)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1044" width="3" height="15" fill="rgb(208,83,35)"/><text x="16.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1060" width="3" height="15" fill="rgb(226,69,4)"/><text x="16.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1076" width="3" height="15" fill="rgb(243,172,49)"/><text x="16.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="1092" width="3" height="15" fill="rgb(208,68,8)"/><text x="16.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1108" width="3" height="15" fill="rgb(243,102,17)"/><text x="16.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="1124" width="3" height="15" fill="rgb(211,7,30)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1140" width="3" height="15" fill="rgb(215,94,12)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1156" width="3" height="15" fill="rgb(225,176,9)"/><text x="16.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="13" y="1172" width="3" height="15" fill="rgb(228,148,29)"/><text x="16.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="1188" width="3" height="15" fill="rgb(220,177,44)"/><text x="16.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="1204" width="3" height="15" fill="rgb(210,143,39)"/><text x="16.00" y="1214.50"></text></g><g><title>_check_name_wrapper (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="13" y="1220" width="3" height="15" fill="rgb(247,0,5)"/><text x="16.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.29%)</title><rect x="16" y="724" width="4" height="15" fill="rgb(239,112,29)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="740" width="4" height="15" fill="rgb(209,154,31)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="756" width="4" height="15" fill="rgb(238,39,50)"/><text x="19.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="772" width="4" height="15" fill="rgb(232,211,22)"/><text x="19.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="788" width="4" height="15" fill="rgb(254,41,14)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="804" width="4" height="15" fill="rgb(243,213,41)"/><text x="19.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.29%)</title><rect x="16" y="820" width="4" height="15" fill="rgb(218,15,49)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="836" width="4" height="15" fill="rgb(206,147,51)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="852" width="4" height="15" fill="rgb(236,135,25)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="868" width="4" height="15" fill="rgb(239,152,37)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="884" width="4" height="15" fill="rgb(220,49,36)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="900" width="4" height="15" fill="rgb(246,187,47)"/><text x="19.00" y="910.50"></text></g><g><title>0x7fd7e4d0c40e (?) (1 samples, 0.29%)</title><rect x="16" y="916" width="4" height="15" fill="rgb(208,53,34)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="932" width="4" height="15" fill="rgb(235,0,27)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="948" width="4" height="15" fill="rgb(227,120,19)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="964" width="4" height="15" fill="rgb(238,163,28)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="980" width="4" height="15" fill="rgb(245,99,16)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="996" width="4" height="15" fill="rgb(250,225,43)"/><text x="19.00" y="1006.50"></text></g><g><title>0x7fd7e4ac5cd2 (?) (1 samples, 0.29%)</title><rect x="16" y="1012" width="4" height="15" fill="rgb(250,73,31)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1028" width="4" height="15" fill="rgb(227,109,25)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1044" width="4" height="15" fill="rgb(212,116,50)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1060" width="4" height="15" fill="rgb(242,146,8)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="1076" width="4" height="15" fill="rgb(248,54,29)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1092" width="4" height="15" fill="rgb(205,134,27)"/><text x="19.00" y="1102.50"></text></g><g><title>0x7fd7e41bb0e5 (?) (1 samples, 0.29%)</title><rect x="16" y="1108" width="4" height="15" fill="rgb(252,153,19)"/><text x="19.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1124" width="4" height="15" fill="rgb(225,42,0)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1140" width="4" height="15" fill="rgb(209,92,37)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1156" width="4" height="15" fill="rgb(224,199,2)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="1172" width="4" height="15" fill="rgb(212,128,24)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1188" width="4" height="15" fill="rgb(244,199,5)"/><text x="19.00" y="1198.50"></text></g><g><title>0x7fd7e3f3fe68 (?) (1 samples, 0.29%)</title><rect x="16" y="1204" width="4" height="15" fill="rgb(217,25,13)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1220" width="4" height="15" fill="rgb(216,14,15)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1236" width="4" height="15" fill="rgb(251,44,3)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1252" width="4" height="15" fill="rgb(207,182,51)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="1268" width="4" height="15" fill="rgb(220,23,42)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1284" width="4" height="15" fill="rgb(254,44,4)"/><text x="19.00" y="1294.50"></text></g><g><title>0x7fd7e3cd02fb (?) (1 samples, 0.29%)</title><rect x="16" y="1300" width="4" height="15" fill="rgb(207,114,28)"/><text x="19.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1316" width="4" height="15" fill="rgb(237,14,20)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1332" width="4" height="15" fill="rgb(221,225,38)"/><text x="19.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1348" width="4" height="15" fill="rgb(232,31,10)"/><text x="19.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="1364" width="4" height="15" fill="rgb(211,194,49)"/><text x="19.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1380" width="4" height="15" fill="rgb(225,53,23)"/><text x="19.00" y="1390.50"></text></g><g><title>0x7fd7e3ab4153 (?) (1 samples, 0.29%)</title><rect x="16" y="1396" width="4" height="15" fill="rgb(238,159,11)"/><text x="19.00" y="1406.50"></text></g><g><title>0x7fd7e3ab2c13 (?) (1 samples, 0.29%)</title><rect x="16" y="1412" width="4" height="15" fill="rgb(237,133,15)"/><text x="19.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1428" width="4" height="15" fill="rgb(236,192,15)"/><text x="19.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1444" width="4" height="15" fill="rgb(221,142,19)"/><text x="19.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1460" width="4" height="15" fill="rgb(241,164,23)"/><text x="19.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="16" y="1476" width="4" height="15" fill="rgb(216,7,35)"/><text x="19.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="16" y="1492" width="4" height="15" fill="rgb(253,4,51)"/><text x="19.00" y="1502.50"></text></g><g><title>0x7fd7e380f181 (?) (1 samples, 0.29%)</title><rect x="16" y="1508" width="4" height="15" fill="rgb(219,117,9)"/><text x="19.00" y="1518.50"></text></g><g><title>0x7fd7e38121c9 (?) (1 samples, 0.29%)</title><rect x="16" y="1524" width="4" height="15" fill="rgb(206,6,53)"/><text x="19.00" y="1534.50"></text></g><g><title>0x7fd7e383e167 (?) (1 samples, 0.29%)</title><rect x="16" y="1540" width="4" height="15" fill="rgb(239,63,50)"/><text x="19.00" y="1550.50"></text></g><g><title>0x7fd7e3839b64 (?) (1 samples, 0.29%)</title><rect x="16" y="1556" width="4" height="15" fill="rgb(206,70,43)"/><text x="19.00" y="1566.50"></text></g><g><title>0x7fd7e381d07b (?) (1 samples, 0.29%)</title><rect x="16" y="1572" width="4" height="15" fill="rgb(205,199,5)"/><text x="19.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.29%)</title><rect x="16" y="1588" width="4" height="15" fill="rgb(206,215,33)"/><text x="19.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="16" y="1604" width="4" height="15" fill="rgb(212,18,25)"/><text x="19.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="16" y="1620" width="4" height="15" fill="rgb(221,58,44)"/><text x="19.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="16" y="1636" width="4" height="15" fill="rgb(244,200,3)"/><text x="19.00" y="1646.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.29%)</title><rect x="16" y="1652" width="4" height="15" fill="rgb(213,199,33)"/><text x="19.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="772" width="3" height="15" fill="rgb(246,26,1)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="788" width="3" height="15" fill="rgb(219,31,21)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="804" width="3" height="15" fill="rgb(208,48,19)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="820" width="3" height="15" fill="rgb(233,87,49)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="20" y="836" width="3" height="15" fill="rgb(249,179,14)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="852" width="3" height="15" fill="rgb(241,141,33)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(212,49,0)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(226,74,36)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(218,22,53)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(242,212,51)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(247,82,34)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(252,51,46)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.29%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(247,2,28)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(216,104,46)"/><text x="23.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="996" width="3" height="15" fill="rgb(234,129,17)"/><text x="23.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="1012" width="3" height="15" fill="rgb(247,154,51)"/><text x="23.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="20" y="1028" width="3" height="15" fill="rgb(205,98,35)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="20" y="1044" width="3" height="15" fill="rgb(227,102,45)"/><text x="23.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.29%)</title><rect x="20" y="1060" width="3" height="15" fill="rgb(229,198,37)"/><text x="23.00" y="1070.50"></text></g><g><title>Index (pandas/core/indexes/base.py) (1 samples, 0.29%)</title><rect x="20" y="1076" width="3" height="15" fill="rgb(248,119,22)"/><text x="23.00" y="1086.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.29%)</title><rect x="20" y="1092" width="3" height="15" fill="rgb(215,31,36)"/><text x="23.00" y="1102.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.29%)</title><rect x="20" y="1108" width="3" height="15" fill="rgb(217,81,54)"/><text x="23.00" y="1118.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="20" y="1124" width="3" height="15" fill="rgb(254,57,15)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="16" y="644" width="11" height="15" fill="rgb(224,173,23)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="16" y="660" width="11" height="15" fill="rgb(211,89,12)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="16" y="676" width="11" height="15" fill="rgb(220,109,8)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="16" y="692" width="11" height="15" fill="rgb(244,131,2)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="16" y="708" width="11" height="15" fill="rgb(246,171,43)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.58%)</title><rect x="20" y="724" width="7" height="15" fill="rgb(220,48,23)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="20" y="740" width="7" height="15" fill="rgb(212,175,35)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="20" y="756" width="7" height="15" fill="rgb(220,122,11)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="772" width="4" height="15" fill="rgb(226,151,16)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="23" y="788" width="4" height="15" fill="rgb(244,30,27)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="804" width="4" height="15" fill="rgb(233,37,27)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.29%)</title><rect x="23" y="820" width="4" height="15" fill="rgb(217,185,4)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="836" width="4" height="15" fill="rgb(247,71,17)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="852" width="4" height="15" fill="rgb(231,140,2)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="868" width="4" height="15" fill="rgb(212,36,22)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="23" y="884" width="4" height="15" fill="rgb(223,85,27)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="900" width="4" height="15" fill="rgb(238,175,45)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.29%)</title><rect x="23" y="916" width="4" height="15" fill="rgb(208,156,26)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(228,71,32)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="948" width="4" height="15" fill="rgb(207,210,26)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="964" width="4" height="15" fill="rgb(219,48,52)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="23" y="980" width="4" height="15" fill="rgb(209,79,34)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="996" width="4" height="15" fill="rgb(236,191,39)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.29%)</title><rect x="23" y="1012" width="4" height="15" fill="rgb(221,204,16)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1028" width="4" height="15" fill="rgb(211,28,25)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1044" width="4" height="15" fill="rgb(243,15,45)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1060" width="4" height="15" fill="rgb(211,152,50)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="23" y="1076" width="4" height="15" fill="rgb(240,175,46)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1092" width="4" height="15" fill="rgb(238,119,21)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.29%)</title><rect x="23" y="1108" width="4" height="15" fill="rgb(213,137,16)"/><text x="26.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.29%)</title><rect x="23" y="1124" width="4" height="15" fill="rgb(238,137,22)"/><text x="26.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1140" width="4" height="15" fill="rgb(214,88,7)"/><text x="26.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1156" width="4" height="15" fill="rgb(243,169,37)"/><text x="26.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1172" width="4" height="15" fill="rgb(247,181,48)"/><text x="26.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1188" width="4" height="15" fill="rgb(254,153,50)"/><text x="26.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1204" width="4" height="15" fill="rgb(244,162,16)"/><text x="26.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="23" y="1220" width="4" height="15" fill="rgb(213,201,3)"/><text x="26.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="1236" width="4" height="15" fill="rgb(235,127,37)"/><text x="26.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.29%)</title><rect x="23" y="1252" width="4" height="15" fill="rgb(215,228,6)"/><text x="26.00" y="1262.50"></text></g><g><title>Rolling (pandas/core/window.py) (1 samples, 0.29%)</title><rect x="23" y="1268" width="4" height="15" fill="rgb(206,166,53)"/><text x="26.00" y="1278.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.29%)</title><rect x="23" y="1284" width="4" height="15" fill="rgb(250,12,18)"/><text x="26.00" y="1294.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.29%)</title><rect x="23" y="1300" width="4" height="15" fill="rgb(228,60,53)"/><text x="26.00" y="1310.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.29%)</title><rect x="23" y="1316" width="4" height="15" fill="rgb(252,223,16)"/><text x="26.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.16%)</title><rect x="16" y="436" width="14" height="15" fill="rgb(222,158,49)"/><text x="19.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="452" width="14" height="15" fill="rgb(214,143,14)"/><text x="19.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="468" width="14" height="15" fill="rgb(216,95,26)"/><text x="19.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="484" width="14" height="15" fill="rgb(206,69,3)"/><text x="19.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.16%)</title><rect x="16" y="500" width="14" height="15" fill="rgb(244,70,44)"/><text x="19.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="516" width="14" height="15" fill="rgb(245,109,48)"/><text x="19.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.16%)</title><rect x="16" y="532" width="14" height="15" fill="rgb(220,97,18)"/><text x="19.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="548" width="14" height="15" fill="rgb(228,156,19)"/><text x="19.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="564" width="14" height="15" fill="rgb(217,59,27)"/><text x="19.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="580" width="14" height="15" fill="rgb(228,13,29)"/><text x="19.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.16%)</title><rect x="16" y="596" width="14" height="15" fill="rgb(244,82,49)"/><text x="19.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="16" y="612" width="14" height="15" fill="rgb(248,193,34)"/><text x="19.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.16%)</title><rect x="16" y="628" width="14" height="15" fill="rgb(237,214,10)"/><text x="19.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="644" width="3" height="15" fill="rgb(226,149,34)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="660" width="3" height="15" fill="rgb(219,216,47)"/><text x="30.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="676" width="3" height="15" fill="rgb(241,167,37)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="692" width="3" height="15" fill="rgb(226,62,13)"/><text x="30.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="708" width="3" height="15" fill="rgb(222,189,11)"/><text x="30.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="27" y="724" width="3" height="15" fill="rgb(232,153,54)"/><text x="30.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="740" width="3" height="15" fill="rgb(233,64,33)"/><text x="30.00" y="750.50"></text></g><g><title>0x7fd7e229f2ff (pandas/_libs/lib.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="27" y="756" width="3" height="15" fill="rgb(230,21,23)"/><text x="30.00" y="766.50"></text></g><g><title>0x7fd7e22a552a (pandas/_libs/lib.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="27" y="772" width="3" height="15" fill="rgb(220,143,35)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="788" width="3" height="15" fill="rgb(224,182,24)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="804" width="3" height="15" fill="rgb(212,46,20)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="820" width="3" height="15" fill="rgb(237,229,42)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="27" y="836" width="3" height="15" fill="rgb(225,118,25)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="852" width="3" height="15" fill="rgb(207,106,1)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (fractions.py) (1 samples, 0.29%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(221,77,14)"/><text x="30.00" y="878.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(222,88,54)"/><text x="30.00" y="894.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(248,187,38)"/><text x="30.00" y="910.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(206,124,20)"/><text x="30.00" y="926.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(218,15,19)"/><text x="30.00" y="942.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(212,147,25)"/><text x="30.00" y="958.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(250,48,11)"/><text x="30.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 1.45%)</title><rect x="16" y="244" width="18" height="15" fill="rgb(246,26,22)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="260" width="18" height="15" fill="rgb(214,225,24)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="276" width="18" height="15" fill="rgb(209,57,19)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="292" width="18" height="15" fill="rgb(212,42,45)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.45%)</title><rect x="16" y="308" width="18" height="15" fill="rgb(221,157,15)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="324" width="18" height="15" fill="rgb(210,135,42)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.45%)</title><rect x="16" y="340" width="18" height="15" fill="rgb(254,115,32)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="356" width="18" height="15" fill="rgb(252,173,26)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="372" width="18" height="15" fill="rgb(218,43,6)"/><text x="19.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="388" width="18" height="15" fill="rgb(252,88,25)"/><text x="19.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.45%)</title><rect x="16" y="404" width="18" height="15" fill="rgb(238,124,14)"/><text x="19.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="16" y="420" width="18" height="15" fill="rgb(227,46,16)"/><text x="19.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.29%)</title><rect x="30" y="436" width="4" height="15" fill="rgb(230,83,51)"/><text x="33.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="452" width="4" height="15" fill="rgb(228,8,28)"/><text x="33.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="468" width="4" height="15" fill="rgb(241,193,12)"/><text x="33.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="484" width="4" height="15" fill="rgb(243,37,34)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="500" width="4" height="15" fill="rgb(236,0,38)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="516" width="4" height="15" fill="rgb(206,127,7)"/><text x="33.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.29%)</title><rect x="30" y="532" width="4" height="15" fill="rgb(220,223,42)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="548" width="4" height="15" fill="rgb(254,118,23)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="564" width="4" height="15" fill="rgb(253,116,42)"/><text x="33.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="580" width="4" height="15" fill="rgb(216,213,12)"/><text x="33.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="596" width="4" height="15" fill="rgb(233,92,53)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="612" width="4" height="15" fill="rgb(225,142,24)"/><text x="33.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.29%)</title><rect x="30" y="628" width="4" height="15" fill="rgb(212,112,47)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="644" width="4" height="15" fill="rgb(236,114,32)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="660" width="4" height="15" fill="rgb(254,110,47)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="676" width="4" height="15" fill="rgb(244,109,31)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="692" width="4" height="15" fill="rgb(218,188,44)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="708" width="4" height="15" fill="rgb(213,171,40)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.29%)</title><rect x="30" y="724" width="4" height="15" fill="rgb(253,151,14)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="740" width="4" height="15" fill="rgb(254,152,27)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="756" width="4" height="15" fill="rgb(246,185,25)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="772" width="4" height="15" fill="rgb(221,72,45)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="788" width="4" height="15" fill="rgb(224,20,0)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="804" width="4" height="15" fill="rgb(248,35,5)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py) (1 samples, 0.29%)</title><rect x="30" y="820" width="4" height="15" fill="rgb(233,98,33)"/><text x="33.00" y="830.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.29%)</title><rect x="30" y="836" width="4" height="15" fill="rgb(242,42,18)"/><text x="33.00" y="846.50"></text></g><g><title>&lt;listcomp&gt; (enum.py) (1 samples, 0.29%)</title><rect x="30" y="852" width="4" height="15" fill="rgb(208,131,1)"/><text x="33.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.33%)</title><rect x="10" y="68" width="27" height="15" fill="rgb(214,156,30)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.33%)</title><rect x="10" y="84" width="27" height="15" fill="rgb(245,126,52)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.33%)</title><rect x="10" y="100" width="27" height="15" fill="rgb(210,27,6)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.33%)</title><rect x="10" y="116" width="27" height="15" fill="rgb(208,9,37)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.33%)</title><rect x="10" y="132" width="27" height="15" fill="rgb(217,90,32)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (8 samples, 2.33%)</title><rect x="10" y="148" width="27" height="15" fill="rgb(254,207,38)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.33%)</title><rect x="10" y="164" width="27" height="15" fill="rgb(217,163,4)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.33%)</title><rect x="10" y="180" width="27" height="15" fill="rgb(251,166,13)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="16" y="196" width="21" height="15" fill="rgb(235,53,1)"/><text x="19.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.74%)</title><rect x="16" y="212" width="21" height="15" fill="rgb(237,208,49)"/><text x="19.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="16" y="228" width="21" height="15" fill="rgb(212,177,9)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="244" width="3" height="15" fill="rgb(240,229,19)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="260" width="3" height="15" fill="rgb(238,127,30)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="276" width="3" height="15" fill="rgb(216,55,52)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="292" width="3" height="15" fill="rgb(220,86,47)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="308" width="3" height="15" fill="rgb(209,185,49)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="324" width="3" height="15" fill="rgb(238,146,17)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.29%)</title><rect x="34" y="340" width="3" height="15" fill="rgb(247,28,6)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="356" width="3" height="15" fill="rgb(245,153,25)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="372" width="3" height="15" fill="rgb(238,210,22)"/><text x="37.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="388" width="3" height="15" fill="rgb(206,198,27)"/><text x="37.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="404" width="3" height="15" fill="rgb(231,128,29)"/><text x="37.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="420" width="3" height="15" fill="rgb(221,224,21)"/><text x="37.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="436" width="3" height="15" fill="rgb(237,214,7)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="452" width="3" height="15" fill="rgb(213,55,18)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="468" width="3" height="15" fill="rgb(232,182,19)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="484" width="3" height="15" fill="rgb(234,132,25)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="500" width="3" height="15" fill="rgb(235,156,7)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="516" width="3" height="15" fill="rgb(223,49,9)"/><text x="37.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py) (1 samples, 0.29%)</title><rect x="34" y="532" width="3" height="15" fill="rgb(235,79,15)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="548" width="3" height="15" fill="rgb(210,13,19)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="564" width="3" height="15" fill="rgb(231,62,9)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="580" width="3" height="15" fill="rgb(220,36,23)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="596" width="3" height="15" fill="rgb(212,167,7)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="612" width="3" height="15" fill="rgb(248,38,50)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="628" width="3" height="15" fill="rgb(213,191,51)"/><text x="37.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="644" width="3" height="15" fill="rgb(233,74,32)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="660" width="3" height="15" fill="rgb(233,75,43)"/><text x="37.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="676" width="3" height="15" fill="rgb(214,9,14)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="692" width="3" height="15" fill="rgb(216,19,21)"/><text x="37.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="708" width="3" height="15" fill="rgb(205,3,30)"/><text x="37.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="724" width="3" height="15" fill="rgb(245,124,26)"/><text x="37.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="740" width="3" height="15" fill="rgb(205,106,29)"/><text x="37.00" y="750.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/__init__.py) (1 samples, 0.29%)</title><rect x="34" y="756" width="3" height="15" fill="rgb(235,225,2)"/><text x="37.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="772" width="3" height="15" fill="rgb(219,189,35)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="788" width="3" height="15" fill="rgb(211,125,14)"/><text x="37.00" y="798.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="34" y="804" width="3" height="15" fill="rgb(231,19,1)"/><text x="37.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="820" width="3" height="15" fill="rgb(239,191,35)"/><text x="37.00" y="830.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="836" width="3" height="15" fill="rgb(219,0,36)"/><text x="37.00" y="846.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="852" width="3" height="15" fill="rgb(244,123,13)"/><text x="37.00" y="862.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="868" width="3" height="15" fill="rgb(217,82,33)"/><text x="37.00" y="878.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="884" width="3" height="15" fill="rgb(211,9,39)"/><text x="37.00" y="894.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="900" width="3" height="15" fill="rgb(222,97,40)"/><text x="37.00" y="910.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="34" y="916" width="3" height="15" fill="rgb(252,122,38)"/><text x="37.00" y="926.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="34" y="932" width="3" height="15" fill="rgb(226,71,15)"/><text x="37.00" y="942.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.87%)</title><rect x="44" y="116" width="10" height="15" fill="rgb(208,145,22)"/><text x="47.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.87%)</title><rect x="44" y="132" width="10" height="15" fill="rgb(227,12,45)"/><text x="47.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.87%)</title><rect x="44" y="148" width="10" height="15" fill="rgb(230,165,33)"/><text x="47.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="92" y="180" width="3" height="15" fill="rgb(218,125,21)"/><text x="95.00" y="190.50"></text></g><g><title>0x7fd7cdbf5ff9 (?) (1 samples, 0.29%)</title><rect x="123" y="212" width="3" height="15" fill="rgb(247,45,44)"/><text x="126.00" y="222.50"></text></g><g><title>0x7fd7cdbf0ef6 (?) (1 samples, 0.29%)</title><rect x="123" y="228" width="3" height="15" fill="rgb(254,181,8)"/><text x="126.00" y="238.50"></text></g><g><title>0x7fd7cdbe5962 (?) (1 samples, 0.29%)</title><rect x="123" y="244" width="3" height="15" fill="rgb(234,121,16)"/><text x="126.00" y="254.50"></text></g><g><title>0x7fd7cdc197a7 (?) (1 samples, 0.29%)</title><rect x="123" y="260" width="3" height="15" fill="rgb(232,217,51)"/><text x="126.00" y="270.50"></text></g><g><title>0x7fd7cdc19379 (?) (1 samples, 0.29%)</title><rect x="123" y="276" width="3" height="15" fill="rgb(248,208,46)"/><text x="126.00" y="286.50"></text></g><g><title>0x7fd7ce0778b8 (?) (1 samples, 0.29%)</title><rect x="123" y="292" width="3" height="15" fill="rgb(219,198,12)"/><text x="126.00" y="302.50"></text></g><g><title>0x7fd7ce075c7f (?) (1 samples, 0.29%)</title><rect x="123" y="308" width="3" height="15" fill="rgb(239,215,26)"/><text x="126.00" y="318.50"></text></g><g><title>0x7fd7ce088c94 (?) (1 samples, 0.29%)</title><rect x="123" y="324" width="3" height="15" fill="rgb(223,28,45)"/><text x="126.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.58%)</title><rect x="126" y="212" width="7" height="15" fill="rgb(235,116,3)"/><text x="129.00" y="222.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="136" y="228" width="4" height="15" fill="rgb(207,28,15)"/><text x="139.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="147" y="292" width="3" height="15" fill="rgb(251,175,52)"/><text x="150.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="147" y="308" width="3" height="15" fill="rgb(212,48,31)"/><text x="150.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="147" y="324" width="3" height="15" fill="rgb(221,48,17)"/><text x="150.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="147" y="340" width="3" height="15" fill="rgb(217,37,17)"/><text x="150.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="150" y="292" width="4" height="15" fill="rgb(221,158,27)"/><text x="153.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="150" y="308" width="4" height="15" fill="rgb(246,23,11)"/><text x="153.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="150" y="324" width="4" height="15" fill="rgb(247,173,14)"/><text x="153.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="150" y="340" width="4" height="15" fill="rgb(214,101,37)"/><text x="153.00" y="350.50"></text></g><g><title>0x7fd80db86b68 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="150" y="356" width="4" height="15" fill="rgb(242,224,39)"/><text x="153.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="154" y="292" width="3" height="15" fill="rgb(216,94,41)"/><text x="157.00" y="302.50"></text></g><g><title>0x7fd7cdbbc930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="160" y="356" width="4" height="15" fill="rgb(228,93,21)"/><text x="163.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="164" y="356" width="3" height="15" fill="rgb(219,31,14)"/><text x="167.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="164" y="372" width="3" height="15" fill="rgb(225,57,20)"/><text x="167.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="167" y="356" width="4" height="15" fill="rgb(253,217,4)"/><text x="170.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="167" y="372" width="4" height="15" fill="rgb(238,21,33)"/><text x="170.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="167" y="388" width="4" height="15" fill="rgb(226,35,11)"/><text x="170.00" y="398.50"></text></g><g><title>0x7fd80db946a2 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="167" y="404" width="4" height="15" fill="rgb(213,217,35)"/><text x="170.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.16%)</title><rect x="160" y="340" width="14" height="15" fill="rgb(227,91,42)"/><text x="163.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="171" y="356" width="3" height="15" fill="rgb(243,121,4)"/><text x="174.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="171" y="372" width="3" height="15" fill="rgb(220,160,38)"/><text x="174.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="171" y="388" width="3" height="15" fill="rgb(212,181,2)"/><text x="174.00" y="398.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="340" width="4" height="15" fill="rgb(235,114,38)"/><text x="177.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="356" width="4" height="15" fill="rgb(227,19,15)"/><text x="177.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="372" width="4" height="15" fill="rgb(208,159,33)"/><text x="177.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="388" width="4" height="15" fill="rgb(247,224,22)"/><text x="177.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="404" width="4" height="15" fill="rgb(234,45,25)"/><text x="177.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="420" width="4" height="15" fill="rgb(226,89,14)"/><text x="177.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="436" width="4" height="15" fill="rgb(226,44,10)"/><text x="177.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="174" y="452" width="4" height="15" fill="rgb(223,145,52)"/><text x="177.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="174" y="468" width="4" height="15" fill="rgb(249,65,27)"/><text x="177.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="174" y="484" width="4" height="15" fill="rgb(240,198,39)"/><text x="177.00" y="494.50"></text></g><g><title>0x7fd80db86c34 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="174" y="500" width="4" height="15" fill="rgb(246,99,23)"/><text x="177.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.91%)</title><rect x="147" y="260" width="34" height="15" fill="rgb(212,7,11)"/><text x="150.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.91%)</title><rect x="147" y="276" width="34" height="15" fill="rgb(221,164,31)"/><text x="150.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.03%)</title><rect x="157" y="292" width="24" height="15" fill="rgb(213,181,17)"/><text x="160.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.03%)</title><rect x="157" y="308" width="24" height="15" fill="rgb(223,41,32)"/><text x="160.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.03%)</title><rect x="157" y="324" width="24" height="15" fill="rgb(217,104,3)"/><text x="160.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="340" width="3" height="15" fill="rgb(232,124,53)"/><text x="181.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="356" width="3" height="15" fill="rgb(214,186,10)"/><text x="181.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="372" width="3" height="15" fill="rgb(249,68,11)"/><text x="181.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="388" width="3" height="15" fill="rgb(230,153,24)"/><text x="181.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="404" width="3" height="15" fill="rgb(214,152,30)"/><text x="181.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="420" width="3" height="15" fill="rgb(253,76,11)"/><text x="181.00" y="430.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="181" y="260" width="7" height="15" fill="rgb(218,136,13)"/><text x="184.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="184" y="276" width="4" height="15" fill="rgb(235,172,13)"/><text x="187.00" y="286.50"></text></g><g><title>0x7fd80dc63151 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="184" y="292" width="4" height="15" fill="rgb(245,144,4)"/><text x="187.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.29%)</title><rect x="191" y="292" width="4" height="15" fill="rgb(251,140,42)"/><text x="194.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="195" y="308" width="3" height="15" fill="rgb(225,95,14)"/><text x="198.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.29%)</title><rect x="198" y="308" width="4" height="15" fill="rgb(250,73,51)"/><text x="201.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.45%)</title><rect x="188" y="260" width="17" height="15" fill="rgb(233,31,15)"/><text x="191.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (4 samples, 1.16%)</title><rect x="191" y="276" width="14" height="15" fill="rgb(239,139,36)"/><text x="194.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.87%)</title><rect x="195" y="292" width="10" height="15" fill="rgb(211,31,49)"/><text x="198.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.29%)</title><rect x="202" y="308" width="3" height="15" fill="rgb(253,64,44)"/><text x="205.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 5.81%)</title><rect x="140" y="244" width="68" height="15" fill="rgb(235,74,38)"/><text x="143.00" y="254.50">onnxrun..</text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="205" y="260" width="3" height="15" fill="rgb(253,25,1)"/><text x="208.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="208" y="244" width="7" height="15" fill="rgb(229,188,38)"/><text x="211.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="208" y="260" width="7" height="15" fill="rgb(215,114,30)"/><text x="211.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="212" y="276" width="3" height="15" fill="rgb(237,132,13)"/><text x="215.00" y="286.50"></text></g><g><title>0x7fd80dba5d50 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="212" y="292" width="3" height="15" fill="rgb(219,130,43)"/><text x="215.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (53 samples, 15.41%)</title><rect x="37" y="100" width="182" height="15" fill="rgb(247,153,24)"/><text x="40.00" y="110.50">profile (bench_Logistic..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 13.95%)</title><rect x="54" y="116" width="165" height="15" fill="rgb(251,63,44)"/><text x="57.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (46 samples, 13.37%)</title><rect x="61" y="132" width="158" height="15" fill="rgb(232,154,34)"/><text x="64.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (42 samples, 12.21%)</title><rect x="75" y="148" width="144" height="15" fill="rgb(238,61,38)"/><text x="78.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (40 samples, 11.63%)</title><rect x="82" y="164" width="137" height="15" fill="rgb(232,222,42)"/><text x="85.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (36 samples, 10.47%)</title><rect x="95" y="180" width="124" height="15" fill="rgb(250,79,2)"/><text x="98.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py) (34 samples, 9.88%)</title><rect x="102" y="196" width="117" height="15" fill="rgb(238,119,7)"/><text x="105.00" y="206.50">run (onnxrunti..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 7.27%)</title><rect x="133" y="212" width="86" height="15" fill="rgb(245,185,37)"/><text x="136.00" y="222.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 6.69%)</title><rect x="140" y="228" width="79" height="15" fill="rgb(246,142,34)"/><text x="143.00" y="238.50">void pybi..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="215" y="244" width="4" height="15" fill="rgb(254,153,19)"/><text x="218.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="215" y="260" width="4" height="15" fill="rgb(228,152,46)"/><text x="218.00" y="270.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (54 samples, 15.70%)</title><rect x="37" y="68" width="185" height="15" fill="rgb(215,89,0)"/><text x="40.00" y="78.50">profile_ort (bench_Logis..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (54 samples, 15.70%)</title><rect x="37" y="84" width="185" height="15" fill="rgb(231,187,47)"/><text x="40.00" y="94.50">setup_profile (bench_Log..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="219" y="100" width="3" height="15" fill="rgb(236,33,37)"/><text x="222.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="219" y="116" width="3" height="15" fill="rgb(213,124,14)"/><text x="222.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="219" y="132" width="3" height="15" fill="rgb(214,174,50)"/><text x="222.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="219" y="148" width="3" height="15" fill="rgb(243,9,13)"/><text x="222.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="219" y="164" width="3" height="15" fill="rgb(228,216,35)"/><text x="222.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="180" width="3" height="15" fill="rgb(214,78,47)"/><text x="222.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="196" width="3" height="15" fill="rgb(253,141,17)"/><text x="222.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="212" width="3" height="15" fill="rgb(250,22,23)"/><text x="222.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="219" y="228" width="3" height="15" fill="rgb(236,39,26)"/><text x="222.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="244" width="3" height="15" fill="rgb(233,79,23)"/><text x="222.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.29%)</title><rect x="219" y="260" width="3" height="15" fill="rgb(214,117,3)"/><text x="222.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="276" width="3" height="15" fill="rgb(226,95,7)"/><text x="222.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="292" width="3" height="15" fill="rgb(237,35,10)"/><text x="222.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="308" width="3" height="15" fill="rgb(222,175,48)"/><text x="222.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="219" y="324" width="3" height="15" fill="rgb(242,157,23)"/><text x="222.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="219" y="340" width="3" height="15" fill="rgb(225,151,1)"/><text x="222.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.29%)</title><rect x="219" y="356" width="3" height="15" fill="rgb(207,24,35)"/><text x="222.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.29%)</title><rect x="219" y="372" width="3" height="15" fill="rgb(234,169,33)"/><text x="222.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.29%)</title><rect x="219" y="388" width="3" height="15" fill="rgb(247,180,40)"/><text x="222.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.29%)</title><rect x="219" y="404" width="3" height="15" fill="rgb(215,29,29)"/><text x="222.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.29%)</title><rect x="219" y="420" width="3" height="15" fill="rgb(217,144,40)"/><text x="222.00" y="430.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.29%)</title><rect x="335" y="196" width="4" height="15" fill="rgb(227,120,54)"/><text x="338.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.58%)</title><rect x="353" y="212" width="6" height="15" fill="rgb(238,41,7)"/><text x="356.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.29%)</title><rect x="356" y="228" width="3" height="15" fill="rgb(209,225,22)"/><text x="359.00" y="238.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.58%)</title><rect x="414" y="324" width="7" height="15" fill="rgb(233,168,21)"/><text x="417.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="418" y="340" width="3" height="15" fill="rgb(206,51,16)"/><text x="421.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 2.03%)</title><rect x="401" y="244" width="24" height="15" fill="rgb(228,221,29)"/><text x="404.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.74%)</title><rect x="404" y="260" width="21" height="15" fill="rgb(225,15,45)"/><text x="407.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 1.45%)</title><rect x="407" y="276" width="18" height="15" fill="rgb(213,21,11)"/><text x="410.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.16%)</title><rect x="411" y="292" width="14" height="15" fill="rgb(236,16,3)"/><text x="414.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (4 samples, 1.16%)</title><rect x="411" y="308" width="14" height="15" fill="rgb(219,66,3)"/><text x="414.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.29%)</title><rect x="421" y="324" width="4" height="15" fill="rgb(212,13,13)"/><text x="424.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.29%)</title><rect x="421" y="340" width="4" height="15" fill="rgb(221,218,34)"/><text x="424.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.29%)</title><rect x="421" y="356" width="4" height="15" fill="rgb(223,20,7)"/><text x="424.00" y="366.50"></text></g><g><title>0x7fd80dba614f (libc-2.29.so) (1 samples, 0.29%)</title><rect x="442" y="276" width="3" height="15" fill="rgb(249,227,41)"/><text x="445.00" y="286.50"></text></g><g><title>0x7fd80db9b757 (libc-2.29.so) (2 samples, 0.58%)</title><rect x="445" y="308" width="7" height="15" fill="rgb(208,52,32)"/><text x="448.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="452" y="324" width="3" height="15" fill="rgb(205,66,20)"/><text x="455.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.29%)</title><rect x="452" y="340" width="3" height="15" fill="rgb(206,179,32)"/><text x="455.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.29%)</title><rect x="452" y="356" width="3" height="15" fill="rgb(232,177,0)"/><text x="455.00" y="366.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 0.87%)</title><rect x="452" y="308" width="10" height="15" fill="rgb(217,217,38)"/><text x="455.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.58%)</title><rect x="455" y="324" width="7" height="15" fill="rgb(218,22,23)"/><text x="458.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (2 samples, 0.58%)</title><rect x="455" y="340" width="7" height="15" fill="rgb(242,82,39)"/><text x="458.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="459" y="356" width="3" height="15" fill="rgb(211,92,3)"/><text x="462.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="459" y="372" width="3" height="15" fill="rgb(231,173,20)"/><text x="462.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (12 samples, 3.49%)</title><rect x="425" y="244" width="41" height="15" fill="rgb(254,175,54)"/><text x="428.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 2.33%)</title><rect x="438" y="260" width="28" height="15" fill="rgb(212,182,33)"/><text x="441.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.74%)</title><rect x="445" y="276" width="21" height="15" fill="rgb(225,120,42)"/><text x="448.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (6 samples, 1.74%)</title><rect x="445" y="292" width="21" height="15" fill="rgb(225,173,21)"/><text x="448.00" y="302.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.29%)</title><rect x="462" y="308" width="4" height="15" fill="rgb(249,131,43)"/><text x="465.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.29%)</title><rect x="466" y="260" width="3" height="15" fill="rgb(245,221,21)"/><text x="469.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.29%)</title><rect x="466" y="276" width="3" height="15" fill="rgb(251,50,11)"/><text x="469.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.29%)</title><rect x="466" y="292" width="3" height="15" fill="rgb(243,203,15)"/><text x="469.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.29%)</title><rect x="476" y="324" width="3" height="15" fill="rgb(241,107,23)"/><text x="479.00" y="334.50"></text></g><g><title>safe_add (npy_extint128.h) (1 samples, 0.29%)</title><rect x="476" y="340" width="3" height="15" fill="rgb(223,194,30)"/><text x="479.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.58%)</title><rect x="476" y="292" width="7" height="15" fill="rgb(240,151,35)"/><text x="479.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.58%)</title><rect x="476" y="308" width="7" height="15" fill="rgb(231,5,42)"/><text x="479.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.29%)</title><rect x="479" y="324" width="4" height="15" fill="rgb(226,162,21)"/><text x="482.00" y="334.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.29%)</title><rect x="483" y="308" width="3" height="15" fill="rgb(240,39,21)"/><text x="486.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="486" y="324" width="4" height="15" fill="rgb(213,229,9)"/><text x="489.00" y="334.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c) (1 samples, 0.29%)</title><rect x="490" y="324" width="3" height="15" fill="rgb(242,83,10)"/><text x="493.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.29%)</title><rect x="490" y="340" width="3" height="15" fill="rgb(221,41,40)"/><text x="493.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.87%)</title><rect x="486" y="308" width="11" height="15" fill="rgb(233,61,3)"/><text x="489.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.29%)</title><rect x="493" y="324" width="4" height="15" fill="rgb(238,150,43)"/><text x="496.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.45%)</title><rect x="483" y="292" width="17" height="15" fill="rgb(220,167,1)"/><text x="486.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.29%)</title><rect x="497" y="308" width="3" height="15" fill="rgb(208,135,49)"/><text x="500.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.29%)</title><rect x="497" y="324" width="3" height="15" fill="rgb(233,40,53)"/><text x="500.00" y="334.50"></text></g><g><title>0x7fd7f8e6d302 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="500" y="308" width="3" height="15" fill="rgb(226,15,5)"/><text x="503.00" y="318.50"></text></g><g><title>0x7fd7f8e8f20c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="503" y="324" width="4" height="15" fill="rgb(235,192,3)"/><text x="506.00" y="334.50"></text></g><g><title>0x7fd7f8e4d890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="507" y="340" width="3" height="15" fill="rgb(243,9,54)"/><text x="510.00" y="350.50"></text></g><g><title>0x7fd7f8e6d33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="503" y="308" width="11" height="15" fill="rgb(208,170,38)"/><text x="506.00" y="318.50"></text></g><g><title>0x7fd7f8e8f214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="507" y="324" width="7" height="15" fill="rgb(235,167,48)"/><text x="510.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.29%)</title><rect x="510" y="340" width="4" height="15" fill="rgb(222,150,53)"/><text x="513.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 3.49%)</title><rect x="476" y="276" width="41" height="15" fill="rgb(212,75,38)"/><text x="479.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (5 samples, 1.45%)</title><rect x="500" y="292" width="17" height="15" fill="rgb(227,10,33)"/><text x="503.00" y="302.50"></text></g><g><title>0x7fd7f8e8f13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="514" y="308" width="3" height="15" fill="rgb(238,52,2)"/><text x="517.00" y="318.50"></text></g><g><title>0x7fd7f8e8eef7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="514" y="324" width="3" height="15" fill="rgb(241,140,19)"/><text x="517.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.29%)</title><rect x="517" y="276" width="4" height="15" fill="rgb(224,51,19)"/><text x="520.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="521" y="276" width="3" height="15" fill="rgb(205,205,53)"/><text x="524.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (45 samples, 13.08%)</title><rect x="373" y="228" width="154" height="15" fill="rgb(219,85,23)"/><text x="376.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 5.23%)</title><rect x="466" y="244" width="61" height="15" fill="rgb(243,46,34)"/><text x="469.00" y="254.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 4.94%)</title><rect x="469" y="260" width="58" height="15" fill="rgb(215,210,50)"/><text x="472.00" y="270.50">PyUFun..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.29%)</title><rect x="524" y="276" width="3" height="15" fill="rgb(246,183,21)"/><text x="527.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.29%)</title><rect x="551" y="276" width="4" height="15" fill="rgb(248,199,36)"/><text x="554.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="551" y="292" width="4" height="15" fill="rgb(254,163,7)"/><text x="554.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.87%)</title><rect x="548" y="260" width="10" height="15" fill="rgb(248,65,30)"/><text x="551.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="555" y="276" width="3" height="15" fill="rgb(233,52,28)"/><text x="558.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.29%)</title><rect x="555" y="292" width="3" height="15" fill="rgb(254,125,5)"/><text x="558.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="555" y="308" width="3" height="15" fill="rgb(249,179,16)"/><text x="558.00" y="318.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (2 samples, 0.58%)</title><rect x="558" y="276" width="7" height="15" fill="rgb(226,184,30)"/><text x="561.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.87%)</title><rect x="558" y="260" width="11" height="15" fill="rgb(216,42,44)"/><text x="561.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.29%)</title><rect x="565" y="276" width="4" height="15" fill="rgb(238,179,11)"/><text x="568.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.29%)</title><rect x="565" y="292" width="4" height="15" fill="rgb(245,76,39)"/><text x="568.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.29%)</title><rect x="565" y="308" width="4" height="15" fill="rgb(224,170,49)"/><text x="568.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.87%)</title><rect x="572" y="324" width="10" height="15" fill="rgb(243,170,39)"/><text x="575.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.87%)</title><rect x="572" y="340" width="10" height="15" fill="rgb(239,197,3)"/><text x="575.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.87%)</title><rect x="572" y="356" width="10" height="15" fill="rgb(205,138,11)"/><text x="575.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.87%)</title><rect x="572" y="372" width="10" height="15" fill="rgb(237,26,30)"/><text x="575.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.87%)</title><rect x="572" y="388" width="10" height="15" fill="rgb(208,84,10)"/><text x="575.00" y="398.50"></text></g><g><title>0x7fd80db9be54 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="579" y="404" width="3" height="15" fill="rgb(219,206,26)"/><text x="582.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.29%)</title><rect x="589" y="372" width="4" height="15" fill="rgb(233,16,46)"/><text x="592.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.29%)</title><rect x="589" y="388" width="4" height="15" fill="rgb(250,159,37)"/><text x="592.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.29%)</title><rect x="589" y="404" width="4" height="15" fill="rgb(243,220,0)"/><text x="592.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.29%)</title><rect x="589" y="420" width="4" height="15" fill="rgb(223,220,3)"/><text x="592.00" y="430.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.87%)</title><rect x="589" y="340" width="11" height="15" fill="rgb(222,133,47)"/><text x="592.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.87%)</title><rect x="589" y="356" width="11" height="15" fill="rgb(244,188,23)"/><text x="592.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.58%)</title><rect x="593" y="372" width="7" height="15" fill="rgb(224,74,45)"/><text x="596.00" y="382.50"></text></g><g><title>array_sum (methods.c) (10 samples, 2.91%)</title><rect x="569" y="260" width="34" height="15" fill="rgb(211,86,42)"/><text x="572.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (10 samples, 2.91%)</title><rect x="569" y="276" width="34" height="15" fill="rgb(227,78,26)"/><text x="572.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (9 samples, 2.62%)</title><rect x="572" y="292" width="31" height="15" fill="rgb(212,213,36)"/><text x="575.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 2.62%)</title><rect x="572" y="308" width="31" height="15" fill="rgb(226,87,40)"/><text x="575.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 1.74%)</title><rect x="582" y="324" width="21" height="15" fill="rgb(213,81,46)"/><text x="585.00" y="334.50"></text></g><g><title>_wheremask_converter (ufunc_object.c) (1 samples, 0.29%)</title><rect x="600" y="340" width="3" height="15" fill="rgb(219,138,38)"/><text x="603.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.29%)</title><rect x="603" y="276" width="3" height="15" fill="rgb(226,4,0)"/><text x="606.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.29%)</title><rect x="603" y="292" width="3" height="15" fill="rgb(242,56,17)"/><text x="606.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.29%)</title><rect x="603" y="308" width="3" height="15" fill="rgb(207,214,35)"/><text x="606.00" y="318.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="606" y="292" width="4" height="15" fill="rgb(254,7,7)"/><text x="609.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.29%)</title><rect x="610" y="292" width="3" height="15" fill="rgb(242,114,23)"/><text x="613.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="613" y="292" width="4" height="15" fill="rgb(210,208,32)"/><text x="616.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="613" y="308" width="4" height="15" fill="rgb(216,76,36)"/><text x="616.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.58%)</title><rect x="617" y="340" width="7" height="15" fill="rgb(230,183,3)"/><text x="620.00" y="350.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.29%)</title><rect x="620" y="356" width="4" height="15" fill="rgb(217,169,24)"/><text x="623.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.87%)</title><rect x="617" y="324" width="10" height="15" fill="rgb(225,154,52)"/><text x="620.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="624" y="340" width="3" height="15" fill="rgb(211,29,29)"/><text x="627.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.29%)</title><rect x="624" y="356" width="3" height="15" fill="rgb(206,131,19)"/><text x="627.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="624" y="372" width="3" height="15" fill="rgb(240,170,3)"/><text x="627.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.29%)</title><rect x="627" y="324" width="3" height="15" fill="rgb(233,49,14)"/><text x="630.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.45%)</title><rect x="617" y="292" width="17" height="15" fill="rgb(218,69,31)"/><text x="620.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.45%)</title><rect x="617" y="308" width="17" height="15" fill="rgb(214,135,42)"/><text x="620.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.29%)</title><rect x="630" y="324" width="4" height="15" fill="rgb(226,165,42)"/><text x="633.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.29%)</title><rect x="634" y="292" width="3" height="15" fill="rgb(213,85,5)"/><text x="637.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.58%)</title><rect x="637" y="292" width="7" height="15" fill="rgb(249,14,19)"/><text x="640.00" y="302.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="641" y="308" width="3" height="15" fill="rgb(241,126,51)"/><text x="644.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (122 samples, 35.47%)</title><rect x="229" y="132" width="419" height="15" fill="rgb(208,14,26)"/><text x="232.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (119 samples, 34.59%)</title><rect x="239" y="148" width="409" height="15" fill="rgb(244,80,7)"/><text x="242.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (117 samples, 34.01%)</title><rect x="246" y="164" width="402" height="15" fill="rgb(233,106,43)"/><text x="249.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (109 samples, 31.69%)</title><rect x="274" y="180" width="374" height="15" fill="rgb(242,53,47)"/><text x="277.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (90 samples, 26.16%)</title><rect x="339" y="196" width="309" height="15" fill="rgb(232,132,36)"/><text x="342.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (84 samples, 24.42%)</title><rect x="359" y="212" width="289" height="15" fill="rgb(251,57,30)"/><text x="362.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (35 samples, 10.17%)</title><rect x="527" y="228" width="121" height="15" fill="rgb(240,69,24)"/><text x="530.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (33 samples, 9.59%)</title><rect x="534" y="244" width="114" height="15" fill="rgb(244,109,24)"/><text x="537.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.78%)</title><rect x="603" y="260" width="45" height="15" fill="rgb(220,5,0)"/><text x="606.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.49%)</title><rect x="606" y="276" width="42" height="15" fill="rgb(211,182,37)"/><text x="609.00" y="286.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.29%)</title><rect x="644" y="292" width="4" height="15" fill="rgb(209,8,37)"/><text x="647.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (125 samples, 36.34%)</title><rect x="222" y="100" width="429" height="15" fill="rgb(251,18,22)"/><text x="225.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverlib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (125 samples, 36.34%)</title><rect x="222" y="116" width="429" height="15" fill="rgb(221,142,18)"/><text x="225.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.29%)</title><rect x="648" y="132" width="3" height="15" fill="rgb(252,77,13)"/><text x="651.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (126 samples, 36.63%)</title><rect x="222" y="68" width="432" height="15" fill="rgb(235,195,31)"/><text x="225.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (126 samples, 36.63%)</title><rect x="222" y="84" width="432" height="15" fill="rgb(243,114,53)"/><text x="225.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="651" y="100" width="3" height="15" fill="rgb(218,36,40)"/><text x="654.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="651" y="116" width="3" height="15" fill="rgb(238,178,17)"/><text x="654.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="651" y="132" width="3" height="15" fill="rgb(241,85,34)"/><text x="654.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="651" y="148" width="3" height="15" fill="rgb(220,137,11)"/><text x="654.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="651" y="164" width="3" height="15" fill="rgb(212,178,35)"/><text x="654.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.29%)</title><rect x="651" y="180" width="3" height="15" fill="rgb(209,162,35)"/><text x="654.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.29%)</title><rect x="651" y="196" width="3" height="15" fill="rgb(250,202,16)"/><text x="654.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="212" width="3" height="15" fill="rgb(242,220,46)"/><text x="654.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="228" width="3" height="15" fill="rgb(235,170,47)"/><text x="654.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="244" width="3" height="15" fill="rgb(224,90,36)"/><text x="654.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="651" y="260" width="3" height="15" fill="rgb(239,34,39)"/><text x="654.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="276" width="3" height="15" fill="rgb(214,170,22)"/><text x="654.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.29%)</title><rect x="651" y="292" width="3" height="15" fill="rgb(206,164,36)"/><text x="654.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="308" width="3" height="15" fill="rgb(253,110,11)"/><text x="654.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="324" width="3" height="15" fill="rgb(241,102,3)"/><text x="654.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="340" width="3" height="15" fill="rgb(234,89,26)"/><text x="654.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="651" y="356" width="3" height="15" fill="rgb(246,91,38)"/><text x="654.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="651" y="372" width="3" height="15" fill="rgb(251,91,32)"/><text x="654.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.29%)</title><rect x="651" y="388" width="3" height="15" fill="rgb(211,62,54)"/><text x="654.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="651" y="404" width="3" height="15" fill="rgb(227,204,29)"/><text x="654.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.29%)</title><rect x="651" y="420" width="3" height="15" fill="rgb(205,166,5)"/><text x="654.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="651" y="436" width="3" height="15" fill="rgb(224,133,5)"/><text x="654.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.29%)</title><rect x="651" y="452" width="3" height="15" fill="rgb(221,224,23)"/><text x="654.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.29%)</title><rect x="651" y="468" width="3" height="15" fill="rgb(241,128,26)"/><text x="654.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.29%)</title><rect x="651" y="484" width="3" height="15" fill="rgb(208,48,47)"/><text x="654.00" y="494.50"></text></g><g><title>type_mapping (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="651" y="500" width="3" height="15" fill="rgb(239,123,23)"/><text x="654.00" y="510.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (2 samples, 0.58%)</title><rect x="702" y="196" width="7" height="15" fill="rgb(245,160,19)"/><text x="705.00" y="206.50"></text></g><g><title>0x7fd80db9b734 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="706" y="212" width="3" height="15" fill="rgb(207,66,14)"/><text x="709.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="709" y="228" width="4" height="15" fill="rgb(243,69,25)"/><text x="712.00" y="238.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.29%)</title><rect x="709" y="244" width="4" height="15" fill="rgb(247,1,21)"/><text x="712.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 1.45%)</title><rect x="699" y="180" width="17" height="15" fill="rgb(225,175,51)"/><text x="702.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.58%)</title><rect x="709" y="196" width="7" height="15" fill="rgb(249,39,27)"/><text x="712.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.58%)</title><rect x="709" y="212" width="7" height="15" fill="rgb(250,111,46)"/><text x="712.00" y="222.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.29%)</title><rect x="713" y="228" width="3" height="15" fill="rgb(226,11,49)"/><text x="716.00" y="238.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="726" y="324" width="4" height="15" fill="rgb(244,207,45)"/><text x="729.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.87%)</title><rect x="726" y="292" width="11" height="15" fill="rgb(228,80,48)"/><text x="729.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.87%)</title><rect x="726" y="308" width="11" height="15" fill="rgb(213,153,44)"/><text x="729.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.58%)</title><rect x="730" y="324" width="7" height="15" fill="rgb(206,102,7)"/><text x="733.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.29%)</title><rect x="733" y="340" width="4" height="15" fill="rgb(219,136,40)"/><text x="736.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="733" y="356" width="4" height="15" fill="rgb(242,102,14)"/><text x="736.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="733" y="372" width="4" height="15" fill="rgb(236,52,29)"/><text x="736.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.16%)</title><rect x="726" y="276" width="14" height="15" fill="rgb(213,165,40)"/><text x="729.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="737" y="292" width="3" height="15" fill="rgb(254,179,5)"/><text x="740.00" y="302.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.29%)</title><rect x="737" y="308" width="3" height="15" fill="rgb(234,90,29)"/><text x="740.00" y="318.50"></text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.29%)</title><rect x="740" y="276" width="4" height="15" fill="rgb(228,9,28)"/><text x="743.00" y="286.50"></text></g><g><title>array_sum (methods.c) (9 samples, 2.62%)</title><rect x="716" y="180" width="31" height="15" fill="rgb(217,11,41)"/><text x="719.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (9 samples, 2.62%)</title><rect x="716" y="196" width="31" height="15" fill="rgb(236,221,11)"/><text x="719.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 2.03%)</title><rect x="723" y="212" width="24" height="15" fill="rgb(209,162,24)"/><text x="726.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 1.74%)</title><rect x="726" y="228" width="21" height="15" fill="rgb(219,152,14)"/><text x="729.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 1.74%)</title><rect x="726" y="244" width="21" height="15" fill="rgb(228,224,20)"/><text x="729.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.74%)</title><rect x="726" y="260" width="21" height="15" fill="rgb(244,175,40)"/><text x="729.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.29%)</title><rect x="744" y="276" width="3" height="15" fill="rgb(226,84,43)"/><text x="747.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.58%)</title><rect x="757" y="196" width="7" height="15" fill="rgb(250,88,51)"/><text x="760.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.29%)</title><rect x="761" y="212" width="3" height="15" fill="rgb(206,6,50)"/><text x="764.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="761" y="228" width="3" height="15" fill="rgb(205,29,12)"/><text x="764.00" y="238.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.29%)</title><rect x="761" y="244" width="3" height="15" fill="rgb(229,62,23)"/><text x="764.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.29%)</title><rect x="764" y="212" width="4" height="15" fill="rgb(243,27,53)"/><text x="767.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.29%)</title><rect x="764" y="228" width="4" height="15" fill="rgb(224,4,16)"/><text x="767.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.58%)</title><rect x="768" y="292" width="6" height="15" fill="rgb(220,218,4)"/><text x="771.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.58%)</title><rect x="768" y="308" width="6" height="15" fill="rgb(245,211,44)"/><text x="771.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.58%)</title><rect x="768" y="324" width="6" height="15" fill="rgb(217,69,24)"/><text x="771.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.58%)</title><rect x="768" y="340" width="6" height="15" fill="rgb(217,221,9)"/><text x="771.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.58%)</title><rect x="768" y="356" width="6" height="15" fill="rgb(219,125,3)"/><text x="771.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.29%)</title><rect x="771" y="372" width="3" height="15" fill="rgb(249,18,46)"/><text x="774.00" y="382.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (2 samples, 0.58%)</title><rect x="774" y="292" width="7" height="15" fill="rgb(210,93,33)"/><text x="777.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.45%)</title><rect x="768" y="276" width="17" height="15" fill="rgb(240,106,50)"/><text x="771.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="781" y="292" width="4" height="15" fill="rgb(211,183,18)"/><text x="784.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.29%)</title><rect x="785" y="276" width="3" height="15" fill="rgb(249,187,11)"/><text x="788.00" y="286.50"></text></g><g><title>array_add (number.c) (8 samples, 2.33%)</title><rect x="764" y="196" width="28" height="15" fill="rgb(209,194,25)"/><text x="767.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.03%)</title><rect x="768" y="212" width="24" height="15" fill="rgb(229,114,42)"/><text x="771.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.03%)</title><rect x="768" y="228" width="24" height="15" fill="rgb(209,219,21)"/><text x="771.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.03%)</title><rect x="768" y="244" width="24" height="15" fill="rgb(216,121,25)"/><text x="771.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.03%)</title><rect x="768" y="260" width="24" height="15" fill="rgb(242,214,49)"/><text x="771.00" y="270.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.29%)</title><rect x="788" y="276" width="4" height="15" fill="rgb(240,107,34)"/><text x="791.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.29%)</title><rect x="788" y="292" width="4" height="15" fill="rgb(215,188,19)"/><text x="791.00" y="302.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.58%)</title><rect x="857" y="212" width="7" height="15" fill="rgb(230,127,20)"/><text x="860.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (5 samples, 1.45%)</title><rect x="864" y="212" width="17" height="15" fill="rgb(221,46,7)"/><text x="867.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 2.03%)</title><rect x="881" y="212" width="24" height="15" fill="rgb(222,179,44)"/><text x="884.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="901" y="228" width="4" height="15" fill="rgb(228,33,8)"/><text x="904.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.87%)</title><rect x="905" y="212" width="10" height="15" fill="rgb(245,67,20)"/><text x="908.00" y="222.50"></text></g><g><title>0x7fd80dc63163 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="912" y="228" width="3" height="15" fill="rgb(242,82,19)"/><text x="915.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 3.49%)</title><rect x="915" y="212" width="41" height="15" fill="rgb(218,0,37)"/><text x="918.00" y="222.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.29%)</title><rect x="953" y="228" width="3" height="15" fill="rgb(251,135,43)"/><text x="956.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.58%)</title><rect x="956" y="212" width="7" height="15" fill="rgb(230,169,33)"/><text x="959.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="960" y="228" width="3" height="15" fill="rgb(206,158,51)"/><text x="963.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.29%)</title><rect x="963" y="212" width="4" height="15" fill="rgb(235,223,23)"/><text x="966.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.29%)</title><rect x="967" y="228" width="3" height="15" fill="rgb(212,168,7)"/><text x="970.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.58%)</title><rect x="967" y="212" width="6" height="15" fill="rgb(246,47,43)"/><text x="970.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.29%)</title><rect x="970" y="228" width="3" height="15" fill="rgb(215,97,36)"/><text x="973.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (64 samples, 18.60%)</title><rect x="792" y="196" width="219" height="15" fill="rgb(241,111,40)"/><text x="795.00" y="206.50">check_array (sklearn/utils/v..</text></g><g><title>simplefilter (warnings.py) (11 samples, 3.20%)</title><rect x="973" y="212" width="38" height="15" fill="rgb(240,122,7)"/><text x="976.00" y="222.50">sim..</text></g><g><title>_add_filter (warnings.py) (10 samples, 2.91%)</title><rect x="977" y="228" width="34" height="15" fill="rgb(217,223,20)"/><text x="980.00" y="238.50">_a..</text></g><g><title>0x7fd80db9be54 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1008" y="244" width="3" height="15" fill="rgb(234,30,38)"/><text x="1011.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.87%)</title><rect x="1025" y="228" width="10" height="15" fill="rgb(236,185,32)"/><text x="1028.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 2.03%)</title><rect x="1015" y="212" width="24" height="15" fill="rgb(223,223,36)"/><text x="1018.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="1035" y="228" width="4" height="15" fill="rgb(236,171,3)"/><text x="1038.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 2.62%)</title><rect x="1011" y="196" width="31" height="15" fill="rgb(254,44,7)"/><text x="1014.00" y="206.50">ch..</text></g><g><title>isclass (inspect.py) (1 samples, 0.29%)</title><rect x="1039" y="212" width="3" height="15" fill="rgb(246,72,14)"/><text x="1042.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.29%)</title><rect x="1052" y="260" width="4" height="15" fill="rgb(229,222,26)"/><text x="1055.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.29%)</title><rect x="1052" y="276" width="4" height="15" fill="rgb(207,176,20)"/><text x="1055.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="1052" y="292" width="4" height="15" fill="rgb(217,162,0)"/><text x="1055.00" y="302.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="1052" y="308" width="4" height="15" fill="rgb(224,195,0)"/><text x="1055.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.58%)</title><rect x="1063" y="324" width="6" height="15" fill="rgb(237,142,24)"/><text x="1066.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1066" y="340" width="3" height="15" fill="rgb(206,89,7)"/><text x="1069.00" y="350.50"></text></g><g><title>0x7fd80db3da19 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1066" y="356" width="3" height="15" fill="rgb(242,169,43)"/><text x="1069.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.29%)</title><rect x="1066" y="372" width="3" height="15" fill="rgb(246,145,13)"/><text x="1069.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.45%)</title><rect x="1056" y="292" width="17" height="15" fill="rgb(239,100,9)"/><text x="1059.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.45%)</title><rect x="1056" y="308" width="17" height="15" fill="rgb(216,123,24)"/><text x="1059.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="1069" y="324" width="4" height="15" fill="rgb(207,221,34)"/><text x="1072.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (6 samples, 1.74%)</title><rect x="1056" y="276" width="20" height="15" fill="rgb(247,16,44)"/><text x="1059.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1073" y="292" width="3" height="15" fill="rgb(206,85,42)"/><text x="1076.00" y="302.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (2 samples, 0.58%)</title><rect x="1076" y="276" width="7" height="15" fill="rgb(212,215,31)"/><text x="1079.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 2.62%)</title><rect x="1056" y="260" width="31" height="15" fill="rgb(244,142,30)"/><text x="1059.00" y="270.50">Np..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1083" y="276" width="4" height="15" fill="rgb(249,37,2)"/><text x="1086.00" y="286.50"></text></g><g><title>0x7fd80cda77c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1087" y="308" width="3" height="15" fill="rgb(211,124,48)"/><text x="1090.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.58%)</title><rect x="1087" y="260" width="6" height="15" fill="rgb(245,172,49)"/><text x="1090.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.58%)</title><rect x="1087" y="276" width="6" height="15" fill="rgb(233,32,40)"/><text x="1090.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.58%)</title><rect x="1087" y="292" width="6" height="15" fill="rgb(251,44,41)"/><text x="1090.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="1090" y="308" width="3" height="15" fill="rgb(228,102,38)"/><text x="1093.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.58%)</title><rect x="1093" y="260" width="7" height="15" fill="rgb(254,228,26)"/><text x="1096.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (104 samples, 30.23%)</title><rect x="747" y="180" width="357" height="15" fill="rgb(231,108,22)"/><text x="750.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 5.23%)</title><rect x="1042" y="196" width="62" height="15" fill="rgb(206,8,14)"/><text x="1045.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 4.94%)</title><rect x="1045" y="212" width="59" height="15" fill="rgb(254,132,10)"/><text x="1048.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 4.94%)</title><rect x="1045" y="228" width="59" height="15" fill="rgb(224,76,8)"/><text x="1048.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (16 samples, 4.65%)</title><rect x="1049" y="244" width="55" height="15" fill="rgb(242,212,3)"/><text x="1052.00" y="254.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1100" y="260" width="4" height="15" fill="rgb(208,62,0)"/><text x="1103.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.29%)</title><rect x="1111" y="228" width="3" height="15" fill="rgb(223,161,20)"/><text x="1114.00" y="238.50"></text></g><g><title>0x7fd80db9be50 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1114" y="244" width="3" height="15" fill="rgb(241,144,35)"/><text x="1117.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.45%)</title><rect x="1104" y="196" width="17" height="15" fill="rgb(226,192,37)"/><text x="1107.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 1.45%)</title><rect x="1104" y="212" width="17" height="15" fill="rgb(217,51,13)"/><text x="1107.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.58%)</title><rect x="1114" y="228" width="7" height="15" fill="rgb(252,194,41)"/><text x="1117.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="1117" y="244" width="4" height="15" fill="rgb(223,206,11)"/><text x="1120.00" y="254.50"></text></g><g><title>0x7fd80dc63ff4 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1117" y="260" width="4" height="15" fill="rgb(247,65,38)"/><text x="1120.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1121" y="212" width="3" height="15" fill="rgb(205,95,28)"/><text x="1124.00" y="222.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.29%)</title><rect x="1124" y="260" width="4" height="15" fill="rgb(223,49,29)"/><text x="1127.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1124" y="276" width="4" height="15" fill="rgb(245,17,19)"/><text x="1127.00" y="286.50"></text></g><g><title>0x7fd80db3d7a5 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1124" y="292" width="4" height="15" fill="rgb(247,228,10)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7fd80db3d8c0 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1124" y="308" width="4" height="15" fill="rgb(254,131,23)"/><text x="1127.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.87%)</title><rect x="1124" y="228" width="11" height="15" fill="rgb(244,189,9)"/><text x="1127.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.87%)</title><rect x="1124" y="244" width="11" height="15" fill="rgb(237,6,54)"/><text x="1127.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.58%)</title><rect x="1128" y="260" width="7" height="15" fill="rgb(242,128,35)"/><text x="1131.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.58%)</title><rect x="1128" y="276" width="7" height="15" fill="rgb(231,221,52)"/><text x="1131.00" y="286.50"></text></g><g><title>to_64 (npy_extint128.h) (1 samples, 0.29%)</title><rect x="1131" y="292" width="4" height="15" fill="rgb(243,92,25)"/><text x="1134.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1135" y="260" width="3" height="15" fill="rgb(225,118,17)"/><text x="1138.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.45%)</title><rect x="1124" y="212" width="17" height="15" fill="rgb(217,58,48)"/><text x="1127.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.58%)</title><rect x="1135" y="228" width="6" height="15" fill="rgb(224,119,18)"/><text x="1138.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.58%)</title><rect x="1135" y="244" width="6" height="15" fill="rgb(252,177,9)"/><text x="1138.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1138" y="260" width="3" height="15" fill="rgb(220,39,30)"/><text x="1141.00" y="270.50"></text></g><g><title>0x7fd80cda7e80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1141" y="244" width="4" height="15" fill="rgb(210,120,24)"/><text x="1144.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (134 samples, 38.95%)</title><rect x="689" y="164" width="459" height="15" fill="rgb(254,130,8)"/><text x="692.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.78%)</title><rect x="1104" y="180" width="44" height="15" fill="rgb(253,104,27)"/><text x="1107.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 2.33%)</title><rect x="1121" y="196" width="27" height="15" fill="rgb(207,43,29)"/><text x="1124.00" y="206.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.58%)</title><rect x="1141" y="212" width="7" height="15" fill="rgb(244,99,25)"/><text x="1144.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.58%)</title><rect x="1141" y="228" width="7" height="15" fill="rgb(242,46,21)"/><text x="1144.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1145" y="244" width="3" height="15" fill="rgb(251,226,38)"/><text x="1148.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.29%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(221,217,0)"/><text x="1186.00" y="206.50"></text></g><g><title>all (344 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(232,26,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (344 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(243,219,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (156 samples, 45.35%)</title><rect x="654" y="68" width="536" height="15" fill="rgb(245,147,16)"/><text x="657.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (156 samples, 45.35%)</title><rect x="654" y="84" width="536" height="15" fill="rgb(244,117,23)"/><text x="657.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_nozipmap.py) (156 samples, 45.35%)</title><rect x="654" y="100" width="536" height="15" fill="rgb(253,145,38)"/><text x="657.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 43.90%)</title><rect x="672" y="116" width="518" height="15" fill="rgb(213,132,36)"/><text x="675.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 43.90%)</title><rect x="672" y="132" width="518" height="15" fill="rgb(227,144,8)"/><text x="675.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (150 samples, 43.60%)</title><rect x="675" y="148" width="515" height="15" fill="rgb(253,213,9)"/><text x="678.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 3.49%)</title><rect x="1148" y="164" width="42" height="15" fill="rgb(223,55,0)"/><text x="1151.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 2.91%)</title><rect x="1155" y="180" width="35" height="15" fill="rgb(254,119,30)"/><text x="1158.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(205,228,30)"/><text x="1189.00" y="206.50"></text></g></g></svg>