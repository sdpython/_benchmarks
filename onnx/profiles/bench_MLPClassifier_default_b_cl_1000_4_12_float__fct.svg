<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1430" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1413.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1413.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(226,95,44)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(242,118,41)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(215,198,32)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(211,40,15)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(242,214,32)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(253,143,43)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(241,49,25)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(252,37,38)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(214,140,46)"/><text x="13.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(251,12,6)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(224,24,51)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(219,56,51)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(205,91,12)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(242,11,7)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(226,178,12)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.30%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(226,130,19)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(250,175,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(212,210,3)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(212,169,7)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(228,196,48)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(206,2,12)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.30%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(220,98,34)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(229,129,44)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(237,143,33)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(252,5,3)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(229,64,11)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(221,73,39)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.30%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(227,122,16)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(227,209,28)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(254,78,10)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(236,24,37)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(240,226,53)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(247,36,10)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.30%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(215,134,22)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(214,101,41)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(248,11,45)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(221,79,4)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(216,33,34)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(233,50,33)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(251,58,11)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(221,214,26)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(240,190,48)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.30%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(249,113,16)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(239,220,5)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(227,90,11)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(244,123,43)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(228,85,30)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(213,56,26)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(220,82,5)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(228,30,4)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(228,145,42)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(219,175,53)"/><text x="14.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(223,181,24)"/><text x="14.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(229,13,17)"/><text x="14.00" y="910.50"></text></g><g><title>__getattr__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(239,180,15)"/><text x="14.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1188" width="2" height="15" fill="rgb(246,9,51)"/><text x="16.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.15%)</title><rect x="13" y="1204" width="2" height="15" fill="rgb(239,132,3)"/><text x="16.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1220" width="2" height="15" fill="rgb(219,148,35)"/><text x="16.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1236" width="2" height="15" fill="rgb(219,94,8)"/><text x="16.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1252" width="2" height="15" fill="rgb(227,44,22)"/><text x="16.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="1268" width="2" height="15" fill="rgb(207,62,33)"/><text x="16.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1284" width="2" height="15" fill="rgb(229,162,32)"/><text x="16.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.15%)</title><rect x="13" y="1300" width="2" height="15" fill="rgb(240,4,22)"/><text x="16.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.15%)</title><rect x="13" y="1316" width="2" height="15" fill="rgb(209,11,25)"/><text x="16.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.15%)</title><rect x="13" y="1332" width="2" height="15" fill="rgb(231,107,51)"/><text x="16.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.15%)</title><rect x="13" y="1348" width="2" height="15" fill="rgb(217,211,50)"/><text x="16.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.15%)</title><rect x="13" y="1364" width="2" height="15" fill="rgb(226,33,10)"/><text x="16.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.15%)</title><rect x="13" y="1380" width="2" height="15" fill="rgb(240,205,3)"/><text x="16.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="484" width="4" height="15" fill="rgb(233,20,26)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="500" width="4" height="15" fill="rgb(221,51,28)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="516" width="4" height="15" fill="rgb(214,182,52)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="532" width="4" height="15" fill="rgb(233,123,42)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="13" y="548" width="4" height="15" fill="rgb(217,106,12)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="564" width="4" height="15" fill="rgb(231,138,18)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.30%)</title><rect x="13" y="580" width="4" height="15" fill="rgb(209,204,31)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="596" width="4" height="15" fill="rgb(242,16,35)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="612" width="4" height="15" fill="rgb(219,224,9)"/><text x="16.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="628" width="4" height="15" fill="rgb(235,222,44)"/><text x="16.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="13" y="644" width="4" height="15" fill="rgb(219,130,46)"/><text x="16.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="660" width="4" height="15" fill="rgb(239,218,37)"/><text x="16.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.30%)</title><rect x="13" y="676" width="4" height="15" fill="rgb(250,227,15)"/><text x="16.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="692" width="4" height="15" fill="rgb(236,229,22)"/><text x="16.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="708" width="4" height="15" fill="rgb(206,209,44)"/><text x="16.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="724" width="4" height="15" fill="rgb(221,212,54)"/><text x="16.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="13" y="740" width="4" height="15" fill="rgb(252,225,31)"/><text x="16.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="756" width="4" height="15" fill="rgb(227,112,4)"/><text x="16.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.30%)</title><rect x="13" y="772" width="4" height="15" fill="rgb(234,225,19)"/><text x="16.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="788" width="4" height="15" fill="rgb(250,58,9)"/><text x="16.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="804" width="4" height="15" fill="rgb(250,194,16)"/><text x="16.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="820" width="4" height="15" fill="rgb(212,142,14)"/><text x="16.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="13" y="836" width="4" height="15" fill="rgb(249,208,4)"/><text x="16.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="852" width="4" height="15" fill="rgb(239,17,24)"/><text x="16.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.30%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(233,193,4)"/><text x="16.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(208,66,20)"/><text x="16.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(239,183,42)"/><text x="16.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(213,88,38)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(208,219,12)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="948" width="4" height="15" fill="rgb(218,79,40)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="964" width="4" height="15" fill="rgb(229,113,23)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(234,224,12)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(207,143,46)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.30%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(216,20,25)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="1028" width="4" height="15" fill="rgb(248,106,50)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="1044" width="4" height="15" fill="rgb(242,192,31)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="1060" width="4" height="15" fill="rgb(254,83,41)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="13" y="1076" width="4" height="15" fill="rgb(243,192,26)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="1092" width="4" height="15" fill="rgb(234,104,5)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.30%)</title><rect x="13" y="1108" width="4" height="15" fill="rgb(238,21,43)"/><text x="16.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="1124" width="4" height="15" fill="rgb(222,52,13)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="1140" width="4" height="15" fill="rgb(235,93,0)"/><text x="16.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="13" y="1156" width="4" height="15" fill="rgb(212,216,35)"/><text x="16.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="13" y="1172" width="4" height="15" fill="rgb(212,166,20)"/><text x="16.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(231,15,41)"/><text x="18.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(220,31,32)"/><text x="18.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.46%)</title><rect x="13" y="340" width="5" height="15" fill="rgb(232,193,40)"/><text x="16.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="356" width="5" height="15" fill="rgb(252,193,32)"/><text x="16.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="372" width="5" height="15" fill="rgb(230,24,46)"/><text x="16.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="388" width="5" height="15" fill="rgb(220,206,45)"/><text x="16.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="13" y="404" width="5" height="15" fill="rgb(211,114,11)"/><text x="16.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="420" width="5" height="15" fill="rgb(246,152,45)"/><text x="16.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.46%)</title><rect x="13" y="436" width="5" height="15" fill="rgb(247,212,47)"/><text x="16.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="452" width="5" height="15" fill="rgb(243,214,23)"/><text x="16.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="468" width="5" height="15" fill="rgb(221,99,42)"/><text x="16.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="484" width="1" height="15" fill="rgb(226,108,4)"/><text x="20.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="500" width="1" height="15" fill="rgb(254,188,42)"/><text x="20.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="516" width="1" height="15" fill="rgb(220,15,31)"/><text x="20.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.15%)</title><rect x="17" y="532" width="1" height="15" fill="rgb(239,128,3)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="548" width="1" height="15" fill="rgb(207,129,45)"/><text x="20.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="564" width="1" height="15" fill="rgb(218,165,45)"/><text x="20.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="580" width="1" height="15" fill="rgb(206,114,42)"/><text x="20.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="596" width="1" height="15" fill="rgb(239,40,27)"/><text x="20.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="612" width="1" height="15" fill="rgb(212,120,25)"/><text x="20.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.15%)</title><rect x="17" y="628" width="1" height="15" fill="rgb(221,140,28)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="644" width="1" height="15" fill="rgb(221,130,54)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="660" width="1" height="15" fill="rgb(206,100,1)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="676" width="1" height="15" fill="rgb(208,166,19)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="692" width="1" height="15" fill="rgb(241,120,47)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="708" width="1" height="15" fill="rgb(207,120,27)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/reshape/api.py) (1 samples, 0.15%)</title><rect x="17" y="724" width="1" height="15" fill="rgb(219,84,24)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="740" width="1" height="15" fill="rgb(232,22,41)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="756" width="1" height="15" fill="rgb(252,155,35)"/><text x="20.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="772" width="1" height="15" fill="rgb(253,218,7)"/><text x="20.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="788" width="1" height="15" fill="rgb(237,35,36)"/><text x="20.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="804" width="1" height="15" fill="rgb(211,92,19)"/><text x="20.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="820" width="1" height="15" fill="rgb(244,207,8)"/><text x="20.00" y="830.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.15%)</title><rect x="18" y="580" width="2" height="15" fill="rgb(241,62,30)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="596" width="2" height="15" fill="rgb(214,81,18)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="612" width="2" height="15" fill="rgb(214,92,2)"/><text x="21.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="628" width="2" height="15" fill="rgb(220,89,15)"/><text x="21.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="644" width="2" height="15" fill="rgb(221,169,38)"/><text x="21.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="660" width="2" height="15" fill="rgb(227,127,45)"/><text x="21.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="676" width="2" height="15" fill="rgb(242,197,17)"/><text x="21.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="692" width="2" height="15" fill="rgb(231,143,4)"/><text x="21.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="708" width="2" height="15" fill="rgb(225,76,26)"/><text x="21.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.15%)</title><rect x="18" y="724" width="2" height="15" fill="rgb(249,153,49)"/><text x="21.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="740" width="2" height="15" fill="rgb(245,76,49)"/><text x="21.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="756" width="2" height="15" fill="rgb(214,110,26)"/><text x="21.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="772" width="2" height="15" fill="rgb(210,42,14)"/><text x="21.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="788" width="2" height="15" fill="rgb(252,211,29)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="804" width="2" height="15" fill="rgb(214,33,4)"/><text x="21.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.15%)</title><rect x="18" y="820" width="2" height="15" fill="rgb(235,34,47)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="836" width="2" height="15" fill="rgb(207,89,35)"/><text x="21.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="852" width="2" height="15" fill="rgb(208,215,33)"/><text x="21.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="868" width="2" height="15" fill="rgb(240,159,15)"/><text x="21.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="884" width="2" height="15" fill="rgb(210,198,38)"/><text x="21.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(254,48,38)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.15%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(205,163,44)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(252,21,20)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(228,100,16)"/><text x="21.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(252,113,4)"/><text x="21.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(227,169,16)"/><text x="21.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(216,108,51)"/><text x="21.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(247,23,25)"/><text x="21.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(225,54,6)"/><text x="21.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(240,97,8)"/><text x="21.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.15%)</title><rect x="18" y="1060" width="2" height="15" fill="rgb(216,71,47)"/><text x="21.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1076" width="2" height="15" fill="rgb(237,53,23)"/><text x="21.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1092" width="2" height="15" fill="rgb(244,169,44)"/><text x="21.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1108" width="2" height="15" fill="rgb(227,142,36)"/><text x="21.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(210,103,22)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(237,218,32)"/><text x="21.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (1 samples, 0.15%)</title><rect x="18" y="1156" width="2" height="15" fill="rgb(210,137,13)"/><text x="21.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1172" width="2" height="15" fill="rgb(240,87,41)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1188" width="2" height="15" fill="rgb(211,68,26)"/><text x="21.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1204" width="2" height="15" fill="rgb(231,134,28)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1220" width="2" height="15" fill="rgb(224,157,47)"/><text x="21.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1236" width="2" height="15" fill="rgb(211,156,23)"/><text x="21.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(251,130,36)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(232,160,2)"/><text x="21.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pysvn_helper.py) (1 samples, 0.15%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(218,145,14)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(209,187,2)"/><text x="21.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(220,189,50)"/><text x="21.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(254,120,18)"/><text x="21.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1348" width="2" height="15" fill="rgb(224,157,7)"/><text x="21.00" y="1358.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1364" width="2" height="15" fill="rgb(233,138,26)"/><text x="21.00" y="1374.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1380" width="2" height="15" fill="rgb(242,156,28)"/><text x="21.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(233,123,37)"/><text x="23.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.15%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(252,175,24)"/><text x="23.00" y="1182.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.91%)</title><rect x="13" y="244" width="11" height="15" fill="rgb(246,107,39)"/><text x="16.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.91%)</title><rect x="13" y="260" width="11" height="15" fill="rgb(215,77,36)"/><text x="16.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.91%)</title><rect x="13" y="276" width="11" height="15" fill="rgb(240,26,20)"/><text x="16.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.91%)</title><rect x="13" y="292" width="11" height="15" fill="rgb(218,26,52)"/><text x="16.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.91%)</title><rect x="13" y="308" width="11" height="15" fill="rgb(237,68,48)"/><text x="16.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.91%)</title><rect x="13" y="324" width="11" height="15" fill="rgb(248,32,11)"/><text x="16.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.46%)</title><rect x="18" y="340" width="6" height="15" fill="rgb(218,130,22)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="356" width="6" height="15" fill="rgb(245,115,25)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="372" width="6" height="15" fill="rgb(231,97,43)"/><text x="21.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="388" width="6" height="15" fill="rgb(235,76,3)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="404" width="6" height="15" fill="rgb(208,63,30)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="420" width="6" height="15" fill="rgb(226,119,37)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="436" width="6" height="15" fill="rgb(251,133,47)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="18" y="452" width="6" height="15" fill="rgb(252,214,21)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="468" width="6" height="15" fill="rgb(249,221,43)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.46%)</title><rect x="18" y="484" width="6" height="15" fill="rgb(222,202,16)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="500" width="6" height="15" fill="rgb(217,147,32)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="516" width="6" height="15" fill="rgb(242,56,16)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="532" width="6" height="15" fill="rgb(241,222,48)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="18" y="548" width="6" height="15" fill="rgb(226,47,14)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="18" y="564" width="6" height="15" fill="rgb(246,200,24)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.30%)</title><rect x="20" y="580" width="4" height="15" fill="rgb(211,187,6)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="596" width="4" height="15" fill="rgb(244,164,19)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="612" width="4" height="15" fill="rgb(234,82,48)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="628" width="4" height="15" fill="rgb(207,223,26)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="20" y="644" width="4" height="15" fill="rgb(244,7,27)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="660" width="4" height="15" fill="rgb(209,80,36)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.30%)</title><rect x="20" y="676" width="4" height="15" fill="rgb(206,76,11)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="692" width="4" height="15" fill="rgb(214,92,10)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="708" width="4" height="15" fill="rgb(244,50,50)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="724" width="4" height="15" fill="rgb(221,91,2)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="20" y="740" width="4" height="15" fill="rgb(254,18,26)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="756" width="4" height="15" fill="rgb(226,59,47)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.30%)</title><rect x="20" y="772" width="4" height="15" fill="rgb(239,126,4)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="788" width="4" height="15" fill="rgb(226,32,32)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="804" width="4" height="15" fill="rgb(218,80,16)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="820" width="4" height="15" fill="rgb(233,135,25)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="836" width="4" height="15" fill="rgb(246,163,9)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="852" width="4" height="15" fill="rgb(239,10,30)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="20" y="868" width="4" height="15" fill="rgb(248,117,12)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="884" width="4" height="15" fill="rgb(215,56,47)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.30%)</title><rect x="20" y="900" width="4" height="15" fill="rgb(240,78,34)"/><text x="23.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(254,191,46)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(247,199,54)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(232,169,32)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="964" width="4" height="15" fill="rgb(212,12,28)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="980" width="4" height="15" fill="rgb(233,113,16)"/><text x="23.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="996" width="4" height="15" fill="rgb(214,89,27)"/><text x="23.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="20" y="1012" width="4" height="15" fill="rgb(251,87,39)"/><text x="23.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="1028" width="4" height="15" fill="rgb(212,78,3)"/><text x="23.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (2 samples, 0.30%)</title><rect x="20" y="1044" width="4" height="15" fill="rgb(231,76,53)"/><text x="23.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="1060" width="4" height="15" fill="rgb(227,126,19)"/><text x="23.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="1076" width="4" height="15" fill="rgb(221,197,32)"/><text x="23.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="1092" width="4" height="15" fill="rgb(250,207,44)"/><text x="23.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="1108" width="4" height="15" fill="rgb(207,136,23)"/><text x="23.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="20" y="1124" width="4" height="15" fill="rgb(239,42,52)"/><text x="23.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="20" y="1140" width="4" height="15" fill="rgb(217,89,8)"/><text x="23.00" y="1150.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(226,12,25)"/><text x="25.00" y="1166.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(222,201,42)"/><text x="25.00" y="1182.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.15%)</title><rect x="24" y="500" width="2" height="15" fill="rgb(253,42,52)"/><text x="27.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.15%)</title><rect x="24" y="516" width="2" height="15" fill="rgb(215,97,27)"/><text x="27.00" y="526.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.15%)</title><rect x="24" y="532" width="2" height="15" fill="rgb(229,3,38)"/><text x="27.00" y="542.50"></text></g><g><title>sub (re.py) (1 samples, 0.15%)</title><rect x="24" y="548" width="2" height="15" fill="rgb(208,184,21)"/><text x="27.00" y="558.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.15%)</title><rect x="24" y="564" width="2" height="15" fill="rgb(244,148,15)"/><text x="27.00" y="574.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.15%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(210,10,15)"/><text x="27.00" y="590.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(245,82,0)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.52%)</title><rect x="10" y="68" width="17" height="15" fill="rgb(232,205,39)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.52%)</title><rect x="10" y="84" width="17" height="15" fill="rgb(220,147,17)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.52%)</title><rect x="10" y="100" width="17" height="15" fill="rgb(233,121,14)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.52%)</title><rect x="10" y="116" width="17" height="15" fill="rgb(232,56,1)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.52%)</title><rect x="10" y="132" width="17" height="15" fill="rgb(229,76,18)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py) (10 samples, 1.52%)</title><rect x="10" y="148" width="17" height="15" fill="rgb(217,187,34)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.52%)</title><rect x="10" y="164" width="17" height="15" fill="rgb(254,117,41)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.52%)</title><rect x="10" y="180" width="17" height="15" fill="rgb(215,82,14)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="13" y="196" width="14" height="15" fill="rgb(228,205,7)"/><text x="16.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.22%)</title><rect x="13" y="212" width="14" height="15" fill="rgb(221,217,22)"/><text x="16.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="13" y="228" width="14" height="15" fill="rgb(233,64,42)"/><text x="16.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.30%)</title><rect x="24" y="244" width="3" height="15" fill="rgb(210,90,46)"/><text x="27.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="260" width="3" height="15" fill="rgb(238,52,13)"/><text x="27.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="276" width="3" height="15" fill="rgb(227,72,27)"/><text x="27.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="292" width="3" height="15" fill="rgb(239,77,44)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="308" width="3" height="15" fill="rgb(225,27,54)"/><text x="27.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="324" width="3" height="15" fill="rgb(246,76,39)"/><text x="27.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="24" y="340" width="3" height="15" fill="rgb(225,25,30)"/><text x="27.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="356" width="3" height="15" fill="rgb(217,38,49)"/><text x="27.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.30%)</title><rect x="24" y="372" width="3" height="15" fill="rgb(232,146,17)"/><text x="27.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="388" width="3" height="15" fill="rgb(244,221,16)"/><text x="27.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="404" width="3" height="15" fill="rgb(225,154,46)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="420" width="3" height="15" fill="rgb(251,163,5)"/><text x="27.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="436" width="3" height="15" fill="rgb(239,59,32)"/><text x="27.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="452" width="3" height="15" fill="rgb(242,153,44)"/><text x="27.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="24" y="468" width="3" height="15" fill="rgb(250,59,19)"/><text x="27.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="24" y="484" width="3" height="15" fill="rgb(232,66,40)"/><text x="27.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numerictypes.py) (1 samples, 0.15%)</title><rect x="26" y="500" width="1" height="15" fill="rgb(210,154,9)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="516" width="1" height="15" fill="rgb(206,126,50)"/><text x="29.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="532" width="1" height="15" fill="rgb(235,71,36)"/><text x="29.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="548" width="1" height="15" fill="rgb(207,21,18)"/><text x="29.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="564" width="1" height="15" fill="rgb(224,218,32)"/><text x="29.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="580" width="1" height="15" fill="rgb(235,107,37)"/><text x="29.00" y="590.50"></text></g><g><title>&lt;module&gt; (numpy/core/_type_aliases.py) (1 samples, 0.15%)</title><rect x="26" y="596" width="1" height="15" fill="rgb(214,109,14)"/><text x="29.00" y="606.50"></text></g><g><title>_add_integer_aliases (numpy/core/_type_aliases.py) (1 samples, 0.15%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(218,217,8)"/><text x="29.00" y="622.50"></text></g><g><title>0x7f1dd7b59bc0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="62" y="132" width="1" height="15" fill="rgb(206,62,48)"/><text x="65.00" y="142.50"></text></g><g><title>0x7f1dd7b59bc6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="63" y="132" width="2" height="15" fill="rgb(213,194,18)"/><text x="66.00" y="142.50"></text></g><g><title>0x7f1dd7b59bd1 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="65" y="132" width="2" height="15" fill="rgb(244,21,17)"/><text x="68.00" y="142.50"></text></g><g><title>0x7f1dd7b59bfd (libc-2.29.so) (1 samples, 0.15%)</title><rect x="67" y="132" width="2" height="15" fill="rgb(248,45,47)"/><text x="70.00" y="142.50"></text></g><g><title>0x7f1dd7b59c3d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="69" y="132" width="2" height="15" fill="rgb(229,173,20)"/><text x="72.00" y="142.50"></text></g><g><title>0x7f1dd7b59c49 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="71" y="132" width="1" height="15" fill="rgb(226,94,2)"/><text x="74.00" y="142.50"></text></g><g><title>0x7f1dd7b59c73 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="72" y="132" width="2" height="15" fill="rgb(249,27,50)"/><text x="75.00" y="142.50"></text></g><g><title>0x7f1dd7b5aeb0 (libc-2.29.so) (8 samples, 1.22%)</title><rect x="62" y="116" width="14" height="15" fill="rgb(233,164,53)"/><text x="65.00" y="126.50"></text></g><g><title>0x7f1dd7b59ca7 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="74" y="132" width="2" height="15" fill="rgb(230,60,36)"/><text x="77.00" y="142.50"></text></g><g><title>0x7f1dd7b59ab9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="74" y="148" width="2" height="15" fill="rgb(210,109,43)"/><text x="77.00" y="158.50"></text></g><g><title>0x7f1d95b9dff9 (?) (1 samples, 0.15%)</title><rect x="78" y="212" width="2" height="15" fill="rgb(252,123,1)"/><text x="81.00" y="222.50"></text></g><g><title>0x7f1d95b98ef6 (?) (1 samples, 0.15%)</title><rect x="78" y="228" width="2" height="15" fill="rgb(252,124,38)"/><text x="81.00" y="238.50"></text></g><g><title>0x7f1d95b8dd49 (?) (1 samples, 0.15%)</title><rect x="78" y="244" width="2" height="15" fill="rgb(232,126,15)"/><text x="81.00" y="254.50"></text></g><g><title>0x7f1d95b9bc1a (?) (1 samples, 0.15%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(219,153,21)"/><text x="81.00" y="270.50"></text></g><g><title>0x7f1d95fc4678 (?) (1 samples, 0.15%)</title><rect x="78" y="276" width="2" height="15" fill="rgb(232,198,7)"/><text x="81.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="78" y="292" width="2" height="15" fill="rgb(238,4,53)"/><text x="81.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.15%)</title><rect x="80" y="212" width="1" height="15" fill="rgb(243,156,54)"/><text x="83.00" y="222.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (9 samples, 1.37%)</title><rect x="81" y="212" width="17" height="15" fill="rgb(227,101,31)"/><text x="84.00" y="222.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="106" y="372" width="2" height="15" fill="rgb(229,33,23)"/><text x="109.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.76%)</title><rect x="101" y="340" width="9" height="15" fill="rgb(222,25,16)"/><text x="104.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="103" y="356" width="7" height="15" fill="rgb(238,26,6)"/><text x="106.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="108" y="372" width="2" height="15" fill="rgb(241,80,13)"/><text x="111.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(236,192,12)"/><text x="113.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="112" y="340" width="3" height="15" fill="rgb(233,97,35)"/><text x="115.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="114" y="356" width="1" height="15" fill="rgb(231,93,51)"/><text x="117.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="114" y="372" width="1" height="15" fill="rgb(222,11,27)"/><text x="117.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="115" y="340" width="4" height="15" fill="rgb(222,212,54)"/><text x="118.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="115" y="356" width="4" height="15" fill="rgb(230,128,44)"/><text x="118.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="117" y="372" width="2" height="15" fill="rgb(248,40,50)"/><text x="120.00" y="382.50"></text></g><g><title>mkl_blas_avx_sgemm_get_optimal_kernel (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="139" y="468" width="2" height="15" fill="rgb(205,47,47)"/><text x="142.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (31 samples, 4.72%)</title><rect x="141" y="468" width="55" height="15" fill="rgb(208,166,6)"/><text x="144.00" y="478.50">mkl_b..</text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="196" y="484" width="2" height="15" fill="rgb(225,162,5)"/><text x="199.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="198" y="484" width="2" height="15" fill="rgb(240,173,34)"/><text x="201.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="198" y="500" width="2" height="15" fill="rgb(230,166,50)"/><text x="201.00" y="510.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (46 samples, 7.00%)</title><rect x="119" y="340" width="83" height="15" fill="rgb(208,228,23)"/><text x="122.00" y="350.50">onnxrunti..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 5.33%)</title><rect x="139" y="356" width="63" height="15" fill="rgb(219,3,30)"/><text x="142.00" y="366.50">onnxru..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (35 samples, 5.33%)</title><rect x="139" y="372" width="63" height="15" fill="rgb(205,23,11)"/><text x="142.00" y="382.50">cblas_..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (35 samples, 5.33%)</title><rect x="139" y="388" width="63" height="15" fill="rgb(243,169,2)"/><text x="142.00" y="398.50">sgemm_..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (35 samples, 5.33%)</title><rect x="139" y="404" width="63" height="15" fill="rgb(239,126,31)"/><text x="142.00" y="414.50">mkl_bl..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (35 samples, 5.33%)</title><rect x="139" y="420" width="63" height="15" fill="rgb(254,188,4)"/><text x="142.00" y="430.50">mkl_bl..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (35 samples, 5.33%)</title><rect x="139" y="436" width="63" height="15" fill="rgb(235,129,32)"/><text x="142.00" y="446.50">mkl_bl..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (35 samples, 5.33%)</title><rect x="139" y="452" width="63" height="15" fill="rgb(213,224,39)"/><text x="142.00" y="462.50">mkl_bl..</text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.46%)</title><rect x="196" y="468" width="6" height="15" fill="rgb(209,109,14)"/><text x="199.00" y="478.50"></text></g><g><title>mkl_serv_check_ptr_and_warn (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="200" y="484" width="2" height="15" fill="rgb(207,136,50)"/><text x="203.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="202" y="340" width="1" height="15" fill="rgb(242,153,9)"/><text x="205.00" y="350.50"></text></g><g><title>0x7f1dd7b5aa55 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="202" y="356" width="1" height="15" fill="rgb(237,214,22)"/><text x="205.00" y="366.50"></text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.98%)</title><rect x="203" y="340" width="24" height="15" fill="rgb(215,145,10)"/><text x="206.00" y="350.50">o..</text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="227" y="420" width="5" height="15" fill="rgb(252,27,35)"/><text x="230.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal20scalar_difference_opIKfS4_EEKNS_9TensorMapINS_6TensorIS4_Li2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS2_10MaxReducerIfEEKNSD_ISF_JEEESB_S9_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="232" y="420" width="6" height="15" fill="rgb(254,24,1)"/><text x="235.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="232" y="436" width="6" height="15" fill="rgb(238,44,13)"/><text x="235.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNSY_IlLi4EEES14_S14_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="232" y="452" width="6" height="15" fill="rgb(228,164,17)"/><text x="235.00" y="462.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="232" y="468" width="6" height="15" fill="rgb(241,85,20)"/><text x="235.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="232" y="484" width="6" height="15" fill="rgb(221,197,16)"/><text x="235.00" y="494.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.07%)</title><rect x="227" y="372" width="12" height="15" fill="rgb(217,59,33)"/><text x="230.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.07%)</title><rect x="227" y="388" width="12" height="15" fill="rgb(223,162,37)"/><text x="230.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.07%)</title><rect x="227" y="404" width="12" height="15" fill="rgb(233,104,39)"/><text x="230.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="238" y="420" width="1" height="15" fill="rgb(254,147,22)"/><text x="241.00" y="430.50"></text></g><g><title>0x7f1dd7b5c6df (libc-2.29.so) (1 samples, 0.15%)</title><rect x="238" y="436" width="1" height="15" fill="rgb(208,36,15)"/><text x="241.00" y="446.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="239" y="372" width="8" height="15" fill="rgb(208,173,43)"/><text x="242.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="239" y="388" width="8" height="15" fill="rgb(240,73,48)"/><text x="242.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run(Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&amp;, Eigen::ThreadPoolDevice const&amp;)::{lambda(long, long)#1}&gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="239" y="404" width="8" height="15" fill="rgb(233,22,31)"/><text x="242.00" y="414.50"></text></g><g><title>Eigen::internal::aligned_malloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="247" y="452" width="1" height="15" fill="rgb(228,97,7)"/><text x="250.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="247" y="468" width="1" height="15" fill="rgb(251,108,9)"/><text x="250.00" y="478.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="247" y="388" width="5" height="15" fill="rgb(254,107,15)"/><text x="250.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="247" y="404" width="5" height="15" fill="rgb(239,179,0)"/><text x="250.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_19TensorCwiseBinaryOpINS2_17scalar_product_opIffEEKS9_KNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSF_IiJSH_EEEKNS1_18TensorForcedEvalOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNSF_ISH_JEEESD_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS19_RKS1A_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1K_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="247" y="420" width="5" height="15" fill="rgb(252,176,6)"/><text x="250.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal17scalar_product_opIffEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSC_IiJSE_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS2_10SumReducerIfEEKNSC_ISE_JEEESA_S8_EEEEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="247" y="436" width="5" height="15" fill="rgb(242,157,15)"/><text x="250.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="248" y="452" width="4" height="15" fill="rgb(235,97,50)"/><text x="251.00" y="462.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNS12_IlLi4EEES18_S18_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="248" y="468" width="4" height="15" fill="rgb(216,159,46)"/><text x="251.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="248" y="484" width="4" height="15" fill="rgb(215,60,35)"/><text x="251.00" y="494.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="250" y="500" width="2" height="15" fill="rgb(221,128,29)"/><text x="253.00" y="510.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.44%)</title><rect x="227" y="340" width="29" height="15" fill="rgb(220,223,29)"/><text x="230.00" y="350.50">on..</text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.44%)</title><rect x="227" y="356" width="29" height="15" fill="rgb(216,100,48)"/><text x="230.00" y="366.50">on..</text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.76%)</title><rect x="247" y="372" width="9" height="15" fill="rgb(217,5,13)"/><text x="250.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="252" y="388" width="4" height="15" fill="rgb(206,118,12)"/><text x="255.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="252" y="404" width="4" height="15" fill="rgb(251,167,3)"/><text x="255.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="252" y="420" width="4" height="15" fill="rgb(234,116,38)"/><text x="255.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="256" y="340" width="1" height="15" fill="rgb(254,51,33)"/><text x="259.00" y="350.50"></text></g><g><title>0x7f1d95b64930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="265" y="356" width="1" height="15" fill="rgb(214,224,22)"/><text x="268.00" y="366.50"></text></g><g><title>0x7f1dd7b5bb1c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="297" y="388" width="2" height="15" fill="rgb(236,78,23)"/><text x="300.00" y="398.50"></text></g><g><title>0x7f1dd7b5bb49 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="299" y="388" width="1" height="15" fill="rgb(213,86,10)"/><text x="302.00" y="398.50"></text></g><g><title>0x7f1dd7b5bb61 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="300" y="388" width="2" height="15" fill="rgb(237,66,14)"/><text x="303.00" y="398.50"></text></g><g><title>0x7f1dd7b5bd48 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="302" y="388" width="4" height="15" fill="rgb(207,51,27)"/><text x="305.00" y="398.50"></text></g><g><title>0x7f1dd7b5bd81 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="306" y="388" width="2" height="15" fill="rgb(212,104,27)"/><text x="309.00" y="398.50"></text></g><g><title>0x7f1dd7b5bd9f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="308" y="388" width="1" height="15" fill="rgb(205,229,48)"/><text x="311.00" y="398.50"></text></g><g><title>0x7f1dd7b5c040 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="309" y="388" width="4" height="15" fill="rgb(253,209,33)"/><text x="312.00" y="398.50"></text></g><g><title>0x7f1dd7b5c06d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="313" y="388" width="2" height="15" fill="rgb(249,229,48)"/><text x="316.00" y="398.50"></text></g><g><title>0x7f1dd7b5c07f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="315" y="388" width="2" height="15" fill="rgb(243,171,21)"/><text x="318.00" y="398.50"></text></g><g><title>0x7f1dd7b5c368 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="317" y="388" width="3" height="15" fill="rgb(249,223,26)"/><text x="320.00" y="398.50"></text></g><g><title>0x7f1dd7b5c3ae (libc-2.29.so) (2 samples, 0.30%)</title><rect x="320" y="388" width="4" height="15" fill="rgb(215,87,38)"/><text x="323.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (33 samples, 5.02%)</title><rect x="266" y="356" width="60" height="15" fill="rgb(232,118,26)"/><text x="269.00" y="366.50">operat..</text></g><g><title>malloc (libc-2.29.so) (33 samples, 5.02%)</title><rect x="266" y="372" width="60" height="15" fill="rgb(230,215,43)"/><text x="269.00" y="382.50">malloc..</text></g><g><title>0x7f1dd7b5c3c4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="324" y="388" width="2" height="15" fill="rgb(221,134,27)"/><text x="327.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="326" y="356" width="1" height="15" fill="rgb(247,214,47)"/><text x="329.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.91%)</title><rect x="327" y="356" width="11" height="15" fill="rgb(221,223,44)"/><text x="330.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.46%)</title><rect x="338" y="356" width="6" height="15" fill="rgb(212,138,30)"/><text x="341.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (138 samples, 21.00%)</title><rect x="98" y="260" width="247" height="15" fill="rgb(225,95,44)"/><text x="101.00" y="270.50">onnxruntime::InferenceSession::R..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 20.85%)</title><rect x="99" y="276" width="246" height="15" fill="rgb(252,81,14)"/><text x="102.00" y="286.50">onnxruntime::InferenceSession::R..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 20.85%)</title><rect x="99" y="292" width="246" height="15" fill="rgb(226,197,0)"/><text x="102.00" y="302.50">onnxruntime::utils::ExecuteGraph..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 20.85%)</title><rect x="99" y="308" width="246" height="15" fill="rgb(231,170,21)"/><text x="102.00" y="318.50">onnxruntime::utils::ExecuteGraph..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 20.85%)</title><rect x="99" y="324" width="246" height="15" fill="rgb(217,112,18)"/><text x="102.00" y="334.50">onnxruntime::SequentialExecutor:..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 7.46%)</title><rect x="257" y="340" width="88" height="15" fill="rgb(235,65,27)"/><text x="260.00" y="350.50">onnxruntim..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="344" y="356" width="1" height="15" fill="rgb(224,193,0)"/><text x="347.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="345" y="260" width="2" height="15" fill="rgb(214,40,3)"/><text x="348.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="345" y="276" width="2" height="15" fill="rgb(213,114,50)"/><text x="348.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.67%)</title><rect x="408" y="276" width="20" height="15" fill="rgb(234,116,4)"/><text x="411.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (46 samples, 7.00%)</title><rect x="347" y="260" width="83" height="15" fill="rgb(209,27,37)"/><text x="350.00" y="270.50">pybind11:..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="428" y="276" width="2" height="15" fill="rgb(250,32,34)"/><text x="431.00" y="286.50"></text></g><g><title>0x7f1dd7b5a90e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="430" y="292" width="2" height="15" fill="rgb(217,87,52)"/><text x="433.00" y="302.50"></text></g><g><title>0x7f1dd7b5a961 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="432" y="292" width="1" height="15" fill="rgb(233,211,42)"/><text x="435.00" y="302.50"></text></g><g><title>0x7f1dd7b5aa4b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="433" y="292" width="2" height="15" fill="rgb(217,136,43)"/><text x="436.00" y="302.50"></text></g><g><title>0x7f1dd7b5ad07 (libc-2.29.so) (4 samples, 0.61%)</title><rect x="435" y="292" width="7" height="15" fill="rgb(253,90,43)"/><text x="438.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="442" y="292" width="2" height="15" fill="rgb(231,31,49)"/><text x="445.00" y="302.50"></text></g><g><title>profile_ort (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (233 samples, 35.46%)</title><rect x="27" y="68" width="419" height="15" fill="rgb(216,22,35)"/><text x="30.00" y="78.50">profile_ort (bench_MLPClassifier_default_b_cl_1000_4_12_f..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (233 samples, 35.46%)</title><rect x="27" y="84" width="419" height="15" fill="rgb(253,3,21)"/><text x="30.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1000_4_12..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (233 samples, 35.46%)</title><rect x="27" y="100" width="419" height="15" fill="rgb(225,38,40)"/><text x="30.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1000_4_12_float..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (206 samples, 31.35%)</title><rect x="76" y="116" width="370" height="15" fill="rgb(235,47,32)"/><text x="79.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (206 samples, 31.35%)</title><rect x="76" y="132" width="370" height="15" fill="rgb(225,170,42)"/><text x="79.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (206 samples, 31.35%)</title><rect x="76" y="148" width="370" height="15" fill="rgb(223,229,42)"/><text x="79.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (206 samples, 31.35%)</title><rect x="76" y="164" width="370" height="15" fill="rgb(230,42,28)"/><text x="79.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (206 samples, 31.35%)</title><rect x="76" y="180" width="370" height="15" fill="rgb(248,104,54)"/><text x="79.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (206 samples, 31.35%)</title><rect x="76" y="196" width="370" height="15" fill="rgb(240,1,6)"/><text x="79.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 29.53%)</title><rect x="98" y="212" width="348" height="15" fill="rgb(242,33,19)"/><text x="101.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 29.53%)</title><rect x="98" y="228" width="348" height="15" fill="rgb(208,90,16)"/><text x="101.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrun..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 29.53%)</title><rect x="98" y="244" width="348" height="15" fill="rgb(205,80,6)"/><text x="101.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.37%)</title><rect x="430" y="260" width="16" height="15" fill="rgb(243,52,2)"/><text x="433.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.37%)</title><rect x="430" y="276" width="16" height="15" fill="rgb(206,212,54)"/><text x="433.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="444" y="292" width="2" height="15" fill="rgb(229,70,44)"/><text x="447.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="444" y="308" width="2" height="15" fill="rgb(248,197,20)"/><text x="447.00" y="318.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.15%)</title><rect x="446" y="180" width="2" height="15" fill="rgb(228,116,46)"/><text x="449.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.30%)</title><rect x="471" y="196" width="4" height="15" fill="rgb(211,37,35)"/><text x="474.00" y="206.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="482" y="260" width="2" height="15" fill="rgb(215,120,51)"/><text x="485.00" y="270.50"></text></g><g><title>0x7f1dd7b5bc99 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="482" y="276" width="2" height="15" fill="rgb(232,16,17)"/><text x="485.00" y="286.50"></text></g><g><title>PyArray_ToList (convert.c) (2 samples, 0.30%)</title><rect x="482" y="228" width="3" height="15" fill="rgb(244,10,30)"/><text x="485.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (2 samples, 0.30%)</title><rect x="482" y="244" width="3" height="15" fill="rgb(247,122,2)"/><text x="485.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.15%)</title><rect x="484" y="260" width="1" height="15" fill="rgb(219,195,42)"/><text x="487.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="485" y="228" width="2" height="15" fill="rgb(215,226,19)"/><text x="488.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="485" y="244" width="2" height="15" fill="rgb(247,3,46)"/><text x="488.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="485" y="260" width="2" height="15" fill="rgb(205,14,14)"/><text x="488.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.30%)</title><rect x="487" y="244" width="4" height="15" fill="rgb(209,153,23)"/><text x="490.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.30%)</title><rect x="487" y="260" width="4" height="15" fill="rgb(226,37,22)"/><text x="490.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.30%)</title><rect x="487" y="276" width="4" height="15" fill="rgb(210,72,28)"/><text x="490.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="491" y="244" width="2" height="15" fill="rgb(248,177,3)"/><text x="494.00" y="254.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (11 samples, 1.67%)</title><rect x="493" y="276" width="19" height="15" fill="rgb(240,115,31)"/><text x="496.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (11 samples, 1.67%)</title><rect x="493" y="292" width="19" height="15" fill="rgb(210,148,8)"/><text x="496.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (7 samples, 1.07%)</title><rect x="500" y="308" width="12" height="15" fill="rgb(246,37,34)"/><text x="503.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (7 samples, 1.07%)</title><rect x="500" y="324" width="12" height="15" fill="rgb(248,197,40)"/><text x="503.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (5 samples, 0.76%)</title><rect x="503" y="340" width="9" height="15" fill="rgb(248,134,31)"/><text x="506.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (3 samples, 0.46%)</title><rect x="521" y="340" width="6" height="15" fill="rgb(238,90,48)"/><text x="524.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (10 samples, 1.52%)</title><rect x="512" y="292" width="18" height="15" fill="rgb(207,118,12)"/><text x="515.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (10 samples, 1.52%)</title><rect x="512" y="308" width="18" height="15" fill="rgb(206,5,37)"/><text x="515.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (10 samples, 1.52%)</title><rect x="512" y="324" width="18" height="15" fill="rgb(250,42,3)"/><text x="515.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (2 samples, 0.30%)</title><rect x="527" y="340" width="3" height="15" fill="rgb(254,118,19)"/><text x="530.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="529" y="356" width="1" height="15" fill="rgb(210,178,8)"/><text x="532.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (34 samples, 5.18%)</title><rect x="480" y="212" width="61" height="15" fill="rgb(227,81,17)"/><text x="483.00" y="222.50">_run (..</text></g><g><title>array_subscript (mapping.c) (30 samples, 4.57%)</title><rect x="487" y="228" width="54" height="15" fill="rgb(212,110,12)"/><text x="490.00" y="238.50">array..</text></g><g><title>prepare_index (mapping.c) (27 samples, 4.11%)</title><rect x="493" y="244" width="48" height="15" fill="rgb(227,76,29)"/><text x="496.00" y="254.50">prep..</text></g><g><title>PyArray_FromAny (ctors.c) (27 samples, 4.11%)</title><rect x="493" y="260" width="48" height="15" fill="rgb(222,3,36)"/><text x="496.00" y="270.50">PyAr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (16 samples, 2.44%)</title><rect x="512" y="276" width="29" height="15" fill="rgb(224,36,3)"/><text x="515.00" y="286.50">Py..</text></g><g><title>discover_dimensions (ctors.c) (6 samples, 0.91%)</title><rect x="530" y="292" width="11" height="15" fill="rgb(254,71,20)"/><text x="533.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (5 samples, 0.76%)</title><rect x="532" y="308" width="9" height="15" fill="rgb(236,196,10)"/><text x="535.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.15%)</title><rect x="541" y="260" width="2" height="15" fill="rgb(225,186,24)"/><text x="544.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.15%)</title><rect x="541" y="276" width="2" height="15" fill="rgb(212,82,39)"/><text x="544.00" y="286.50"></text></g><g><title>0x7f1dd7b7ad94 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="541" y="292" width="2" height="15" fill="rgb(207,112,10)"/><text x="544.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.30%)</title><rect x="541" y="212" width="4" height="15" fill="rgb(240,89,17)"/><text x="544.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.30%)</title><rect x="541" y="228" width="4" height="15" fill="rgb(244,102,45)"/><text x="544.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.30%)</title><rect x="541" y="244" width="4" height="15" fill="rgb(253,13,11)"/><text x="544.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.15%)</title><rect x="543" y="260" width="2" height="15" fill="rgb(248,228,27)"/><text x="546.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="543" y="276" width="2" height="15" fill="rgb(250,81,27)"/><text x="546.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.15%)</title><rect x="543" y="292" width="2" height="15" fill="rgb(254,105,53)"/><text x="546.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="543" y="308" width="2" height="15" fill="rgb(215,1,10)"/><text x="546.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="543" y="324" width="2" height="15" fill="rgb(250,212,21)"/><text x="546.00" y="334.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.15%)</title><rect x="545" y="356" width="2" height="15" fill="rgb(209,145,19)"/><text x="548.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.46%)</title><rect x="545" y="308" width="5" height="15" fill="rgb(213,151,52)"/><text x="548.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (3 samples, 0.46%)</title><rect x="545" y="324" width="5" height="15" fill="rgb(209,18,22)"/><text x="548.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (3 samples, 0.46%)</title><rect x="545" y="340" width="5" height="15" fill="rgb(235,96,5)"/><text x="548.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.30%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(214,28,25)"/><text x="550.00" y="366.50"></text></g><g><title>0x7f1dd7b7aef4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="550" y="356" width="2" height="15" fill="rgb(218,78,5)"/><text x="553.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (5 samples, 0.76%)</title><rect x="545" y="228" width="9" height="15" fill="rgb(233,160,16)"/><text x="548.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.76%)</title><rect x="545" y="244" width="9" height="15" fill="rgb(237,163,28)"/><text x="548.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.76%)</title><rect x="545" y="260" width="9" height="15" fill="rgb(240,134,27)"/><text x="548.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.76%)</title><rect x="545" y="276" width="9" height="15" fill="rgb(228,58,13)"/><text x="548.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.76%)</title><rect x="545" y="292" width="9" height="15" fill="rgb(206,189,9)"/><text x="548.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.30%)</title><rect x="550" y="308" width="4" height="15" fill="rgb(226,88,11)"/><text x="553.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.30%)</title><rect x="550" y="324" width="4" height="15" fill="rgb(238,143,20)"/><text x="553.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.30%)</title><rect x="550" y="340" width="4" height="15" fill="rgb(252,91,33)"/><text x="553.00" y="350.50"></text></g><g><title>0x7f1dd7b7af4a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="552" y="356" width="2" height="15" fill="rgb(249,136,8)"/><text x="555.00" y="366.50"></text></g><g><title>0x7f1dd7b70730 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="555" y="356" width="2" height="15" fill="rgb(243,65,28)"/><text x="558.00" y="366.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 0.46%)</title><rect x="554" y="276" width="5" height="15" fill="rgb(214,75,13)"/><text x="557.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.46%)</title><rect x="554" y="292" width="5" height="15" fill="rgb(230,134,4)"/><text x="557.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.46%)</title><rect x="554" y="308" width="5" height="15" fill="rgb(222,170,45)"/><text x="557.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.46%)</title><rect x="554" y="324" width="5" height="15" fill="rgb(209,211,53)"/><text x="557.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.46%)</title><rect x="554" y="340" width="5" height="15" fill="rgb(209,65,33)"/><text x="557.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.15%)</title><rect x="557" y="356" width="2" height="15" fill="rgb(247,33,28)"/><text x="560.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="557" y="372" width="2" height="15" fill="rgb(231,3,0)"/><text x="560.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="557" y="388" width="2" height="15" fill="rgb(217,156,44)"/><text x="560.00" y="398.50"></text></g><g><title>0x7f1dd7b7adbb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="557" y="404" width="2" height="15" fill="rgb(205,10,27)"/><text x="560.00" y="414.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.15%)</title><rect x="559" y="292" width="2" height="15" fill="rgb(221,29,38)"/><text x="562.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.15%)</title><rect x="559" y="308" width="2" height="15" fill="rgb(247,163,33)"/><text x="562.00" y="318.50"></text></g><g><title>0x7f1dd7b7b120 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="559" y="324" width="2" height="15" fill="rgb(216,0,15)"/><text x="562.00" y="334.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.30%)</title><rect x="559" y="276" width="4" height="15" fill="rgb(215,24,19)"/><text x="562.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.15%)</title><rect x="561" y="292" width="2" height="15" fill="rgb(240,20,13)"/><text x="564.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.15%)</title><rect x="561" y="308" width="2" height="15" fill="rgb(230,35,31)"/><text x="564.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="561" y="324" width="2" height="15" fill="rgb(206,62,42)"/><text x="564.00" y="334.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="561" y="340" width="2" height="15" fill="rgb(207,217,51)"/><text x="564.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (6 samples, 0.91%)</title><rect x="554" y="228" width="10" height="15" fill="rgb(240,39,8)"/><text x="557.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (6 samples, 0.91%)</title><rect x="554" y="244" width="10" height="15" fill="rgb(248,100,54)"/><text x="557.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (6 samples, 0.91%)</title><rect x="554" y="260" width="10" height="15" fill="rgb(210,79,16)"/><text x="557.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="563" y="276" width="1" height="15" fill="rgb(215,211,33)"/><text x="566.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="563" y="292" width="1" height="15" fill="rgb(254,135,39)"/><text x="566.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.15%)</title><rect x="563" y="308" width="1" height="15" fill="rgb(248,10,29)"/><text x="566.00" y="318.50"></text></g><g><title>0x7f1dd7b7b103 (libc-2.29.so) (6 samples, 0.91%)</title><rect x="566" y="340" width="11" height="15" fill="rgb(245,152,1)"/><text x="569.00" y="350.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="577" y="420" width="2" height="15" fill="rgb(248,91,17)"/><text x="580.00" y="430.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="577" y="436" width="2" height="15" fill="rgb(225,228,28)"/><text x="580.00" y="446.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (32 samples, 4.87%)</title><rect x="579" y="420" width="57" height="15" fill="rgb(225,156,29)"/><text x="582.00" y="430.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (32 samples, 4.87%)</title><rect x="579" y="436" width="57" height="15" fill="rgb(224,192,44)"/><text x="582.00" y="446.50">sched_..</text></g><g><title>gemm (cblasfuncs.c) (37 samples, 5.63%)</title><rect x="577" y="340" width="67" height="15" fill="rgb(252,209,4)"/><text x="580.00" y="350.50">gemm (c..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 5.63%)</title><rect x="577" y="356" width="67" height="15" fill="rgb(222,155,54)"/><text x="580.00" y="366.50">cblas_s..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 5.63%)</title><rect x="577" y="372" width="67" height="15" fill="rgb(243,100,40)"/><text x="580.00" y="382.50">sgemm_t..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 5.63%)</title><rect x="577" y="388" width="67" height="15" fill="rgb(205,91,7)"/><text x="580.00" y="398.50">gemm_dr..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 5.63%)</title><rect x="577" y="404" width="67" height="15" fill="rgb(254,107,40)"/><text x="580.00" y="414.50">exec_bl..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.61%)</title><rect x="636" y="420" width="8" height="15" fill="rgb(238,204,40)"/><text x="639.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.46%)</title><rect x="638" y="436" width="6" height="15" fill="rgb(246,56,30)"/><text x="641.00" y="446.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (44 samples, 6.70%)</title><rect x="566" y="292" width="79" height="15" fill="rgb(221,38,52)"/><text x="569.00" y="302.50">array_mat..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (44 samples, 6.70%)</title><rect x="566" y="308" width="79" height="15" fill="rgb(207,35,27)"/><text x="569.00" y="318.50">PyArray_M..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (44 samples, 6.70%)</title><rect x="566" y="324" width="79" height="15" fill="rgb(249,53,18)"/><text x="569.00" y="334.50">cblas_mat..</text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.15%)</title><rect x="644" y="340" width="1" height="15" fill="rgb(248,162,2)"/><text x="647.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.15%)</title><rect x="644" y="356" width="1" height="15" fill="rgb(221,149,0)"/><text x="647.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="644" y="372" width="1" height="15" fill="rgb(244,149,15)"/><text x="647.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="644" y="388" width="1" height="15" fill="rgb(236,213,40)"/><text x="647.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="644" y="404" width="1" height="15" fill="rgb(215,46,25)"/><text x="647.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.15%)</title><rect x="644" y="420" width="1" height="15" fill="rgb(208,89,13)"/><text x="647.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="644" y="436" width="1" height="15" fill="rgb(211,215,39)"/><text x="647.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (45 samples, 6.85%)</title><rect x="566" y="276" width="81" height="15" fill="rgb(239,25,34)"/><text x="569.00" y="286.50">array_imp..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="645" y="292" width="2" height="15" fill="rgb(250,30,28)"/><text x="648.00" y="302.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="645" y="308" width="2" height="15" fill="rgb(235,137,44)"/><text x="648.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="645" y="324" width="2" height="15" fill="rgb(217,7,1)"/><text x="648.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.15%)</title><rect x="645" y="340" width="2" height="15" fill="rgb(245,84,42)"/><text x="648.00" y="350.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.22%)</title><rect x="647" y="276" width="14" height="15" fill="rgb(222,126,32)"/><text x="650.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (74 samples, 11.26%)</title><rect x="564" y="228" width="133" height="15" fill="rgb(222,23,26)"/><text x="567.00" y="238.50">_run (mlprodict/..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (74 samples, 11.26%)</title><rect x="564" y="244" width="133" height="15" fill="rgb(236,24,1)"/><text x="567.00" y="254.50">numpy_dot_inplac..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (73 samples, 11.11%)</title><rect x="566" y="260" width="131" height="15" fill="rgb(233,124,0)"/><text x="569.00" y="270.50">dot (&lt;__array_fu..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 3.04%)</title><rect x="661" y="276" width="36" height="15" fill="rgb(250,24,5)"/><text x="664.00" y="286.50">sge..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (39 samples, 5.94%)</title><rect x="697" y="228" width="70" height="15" fill="rgb(237,149,51)"/><text x="700.00" y="238.50">_run (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (39 samples, 5.94%)</title><rect x="697" y="244" width="70" height="15" fill="rgb(211,204,7)"/><text x="700.00" y="254.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (39 samples, 5.94%)</title><rect x="697" y="260" width="70" height="15" fill="rgb(249,87,35)"/><text x="700.00" y="270.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (39 samples, 5.94%)</title><rect x="697" y="276" width="70" height="15" fill="rgb(213,83,42)"/><text x="700.00" y="286.50">execute..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (39 samples, 5.94%)</title><rect x="697" y="292" width="70" height="15" fill="rgb(221,95,27)"/><text x="700.00" y="302.50">trivial..</text></g><g><title>FLOAT_maximum (loops.c.src) (39 samples, 5.94%)</title><rect x="697" y="308" width="70" height="15" fill="rgb(242,138,31)"/><text x="700.00" y="318.50">FLOAT_m..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.15%)</title><rect x="771" y="356" width="2" height="15" fill="rgb(227,145,21)"/><text x="774.00" y="366.50"></text></g><g><title>0x7f1dd7b5a929 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="771" y="372" width="2" height="15" fill="rgb(240,204,0)"/><text x="774.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (3 samples, 0.46%)</title><rect x="773" y="388" width="5" height="15" fill="rgb(253,56,28)"/><text x="776.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (3 samples, 0.46%)</title><rect x="773" y="404" width="5" height="15" fill="rgb(209,172,6)"/><text x="776.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (3 samples, 0.46%)</title><rect x="773" y="420" width="5" height="15" fill="rgb(234,130,24)"/><text x="776.00" y="430.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (1 samples, 0.15%)</title><rect x="780" y="420" width="2" height="15" fill="rgb(243,154,13)"/><text x="783.00" y="430.50"></text></g><g><title>0x7f1dd6d7ce80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="784" y="452" width="1" height="15" fill="rgb(254,152,3)"/><text x="787.00" y="462.50"></text></g><g><title>array_max (methods.c) (11 samples, 1.67%)</title><rect x="769" y="244" width="20" height="15" fill="rgb(206,175,25)"/><text x="772.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 1.67%)</title><rect x="769" y="260" width="20" height="15" fill="rgb(216,210,31)"/><text x="772.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py) (10 samples, 1.52%)</title><rect x="771" y="276" width="18" height="15" fill="rgb(205,51,41)"/><text x="774.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 1.52%)</title><rect x="771" y="292" width="18" height="15" fill="rgb(241,194,34)"/><text x="774.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 1.52%)</title><rect x="771" y="308" width="18" height="15" fill="rgb(243,92,32)"/><text x="774.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 1.52%)</title><rect x="771" y="324" width="18" height="15" fill="rgb(210,18,20)"/><text x="774.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 1.52%)</title><rect x="771" y="340" width="18" height="15" fill="rgb(251,96,38)"/><text x="774.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (9 samples, 1.37%)</title><rect x="773" y="356" width="16" height="15" fill="rgb(206,78,45)"/><text x="776.00" y="366.50"></text></g><g><title>FLOAT_maximum (loops.c.src) (9 samples, 1.37%)</title><rect x="773" y="372" width="16" height="15" fill="rgb(244,112,36)"/><text x="776.00" y="382.50"></text></g><g><title>run_unary_reduce_simd_maximum_FLOAT (simd.inc.src) (6 samples, 0.91%)</title><rect x="778" y="388" width="11" height="15" fill="rgb(253,124,39)"/><text x="781.00" y="398.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src) (5 samples, 0.76%)</title><rect x="780" y="404" width="9" height="15" fill="rgb(208,62,28)"/><text x="783.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (4 samples, 0.61%)</title><rect x="782" y="420" width="7" height="15" fill="rgb(210,14,6)"/><text x="785.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (4 samples, 0.61%)</title><rect x="782" y="436" width="7" height="15" fill="rgb(250,124,42)"/><text x="785.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.30%)</title><rect x="785" y="452" width="4" height="15" fill="rgb(253,35,39)"/><text x="788.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="789" y="356" width="2" height="15" fill="rgb(216,185,25)"/><text x="792.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="789" y="372" width="2" height="15" fill="rgb(233,136,22)"/><text x="792.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="789" y="388" width="2" height="15" fill="rgb(244,186,22)"/><text x="792.00" y="398.50"></text></g><g><title>0x7f1dd7b5c21f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="789" y="404" width="2" height="15" fill="rgb(217,3,25)"/><text x="792.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.46%)</title><rect x="794" y="372" width="6" height="15" fill="rgb(225,145,28)"/><text x="797.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.30%)</title><rect x="796" y="388" width="4" height="15" fill="rgb(209,26,26)"/><text x="799.00" y="398.50"></text></g><g><title>array_sum (methods.c) (8 samples, 1.22%)</title><rect x="789" y="244" width="14" height="15" fill="rgb(222,187,24)"/><text x="792.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 1.22%)</title><rect x="789" y="260" width="14" height="15" fill="rgb(207,204,41)"/><text x="792.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py) (8 samples, 1.22%)</title><rect x="789" y="276" width="14" height="15" fill="rgb(241,100,46)"/><text x="792.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.22%)</title><rect x="789" y="292" width="14" height="15" fill="rgb(239,188,12)"/><text x="792.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 1.22%)</title><rect x="789" y="308" width="14" height="15" fill="rgb(245,60,5)"/><text x="792.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.22%)</title><rect x="789" y="324" width="14" height="15" fill="rgb(241,93,30)"/><text x="792.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 1.22%)</title><rect x="789" y="340" width="14" height="15" fill="rgb(208,26,43)"/><text x="792.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 1.07%)</title><rect x="791" y="356" width="12" height="15" fill="rgb(253,102,42)"/><text x="794.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.30%)</title><rect x="800" y="372" width="3" height="15" fill="rgb(236,92,3)"/><text x="803.00" y="382.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (1 samples, 0.15%)</title><rect x="805" y="308" width="2" height="15" fill="rgb(228,118,15)"/><text x="808.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="805" y="324" width="2" height="15" fill="rgb(240,119,41)"/><text x="808.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="805" y="340" width="2" height="15" fill="rgb(238,165,48)"/><text x="808.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.15%)</title><rect x="805" y="356" width="2" height="15" fill="rgb(232,137,47)"/><text x="808.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.15%)</title><rect x="807" y="308" width="2" height="15" fill="rgb(243,218,11)"/><text x="810.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 0.91%)</title><rect x="805" y="292" width="11" height="15" fill="rgb(211,142,53)"/><text x="808.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.61%)</title><rect x="809" y="308" width="7" height="15" fill="rgb(227,47,53)"/><text x="812.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.61%)</title><rect x="809" y="324" width="7" height="15" fill="rgb(231,63,10)"/><text x="812.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.61%)</title><rect x="809" y="340" width="7" height="15" fill="rgb(205,71,36)"/><text x="812.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="814" y="356" width="2" height="15" fill="rgb(236,2,41)"/><text x="817.00" y="366.50"></text></g><g><title>0x7f1dd7cd9e37 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="823" y="340" width="4" height="15" fill="rgb(215,128,18)"/><text x="826.00" y="350.50"></text></g><g><title>0x7f1dd7cd9e62 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="827" y="340" width="1" height="15" fill="rgb(234,203,6)"/><text x="830.00" y="350.50"></text></g><g><title>0x7f1dd7cd9ea2 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="828" y="340" width="4" height="15" fill="rgb(246,119,25)"/><text x="831.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 2.44%)</title><rect x="805" y="276" width="29" height="15" fill="rgb(246,105,49)"/><text x="808.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (10 samples, 1.52%)</title><rect x="816" y="292" width="18" height="15" fill="rgb(246,61,45)"/><text x="819.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (10 samples, 1.52%)</title><rect x="816" y="308" width="18" height="15" fill="rgb(245,22,2)"/><text x="819.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (10 samples, 1.52%)</title><rect x="816" y="324" width="18" height="15" fill="rgb(232,54,12)"/><text x="819.00" y="334.50"></text></g><g><title>0x7f1dd7cd9ea6 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="832" y="340" width="2" height="15" fill="rgb(232,11,25)"/><text x="835.00" y="350.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (217 samples, 33.03%)</title><rect x="446" y="164" width="390" height="15" fill="rgb(228,169,28)"/><text x="449.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (216 samples, 32.88%)</title><rect x="448" y="180" width="388" height="15" fill="rgb(240,196,7)"/><text x="451.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (201 samples, 30.59%)</title><rect x="475" y="196" width="361" height="15" fill="rgb(245,124,28)"/><text x="478.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (162 samples, 24.66%)</title><rect x="545" y="212" width="291" height="15" fill="rgb(243,111,24)"/><text x="548.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py) (38 samples, 5.78%)</title><rect x="767" y="228" width="69" height="15" fill="rgb(245,147,8)"/><text x="770.00" y="238.50">_run (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 2.74%)</title><rect x="803" y="244" width="33" height="15" fill="rgb(230,115,23)"/><text x="806.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 2.74%)</title><rect x="803" y="260" width="33" height="15" fill="rgb(237,202,46)"/><text x="806.00" y="270.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="834" y="276" width="2" height="15" fill="rgb(220,74,22)"/><text x="837.00" y="286.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="834" y="292" width="2" height="15" fill="rgb(254,170,23)"/><text x="837.00" y="302.50"></text></g><g><title>profile_pyrt (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (218 samples, 33.18%)</title><rect x="446" y="68" width="391" height="15" fill="rgb(218,158,24)"/><text x="449.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_b_cl_1000_4..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (218 samples, 33.18%)</title><rect x="446" y="84" width="391" height="15" fill="rgb(238,214,33)"/><text x="449.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1000_..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (218 samples, 33.18%)</title><rect x="446" y="100" width="391" height="15" fill="rgb(220,57,25)"/><text x="449.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1000_4_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (218 samples, 33.18%)</title><rect x="446" y="116" width="391" height="15" fill="rgb(213,22,31)"/><text x="449.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (218 samples, 33.18%)</title><rect x="446" y="132" width="391" height="15" fill="rgb(211,152,5)"/><text x="449.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (218 samples, 33.18%)</title><rect x="446" y="148" width="391" height="15" fill="rgb(209,49,42)"/><text x="449.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="836" y="164" width="1" height="15" fill="rgb(244,206,47)"/><text x="839.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="836" y="180" width="1" height="15" fill="rgb(217,161,24)"/><text x="839.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="836" y="196" width="1" height="15" fill="rgb(233,58,50)"/><text x="839.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="846" y="196" width="2" height="15" fill="rgb(240,7,22)"/><text x="849.00" y="206.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (45 samples, 6.85%)</title><rect x="857" y="404" width="81" height="15" fill="rgb(253,139,0)"/><text x="860.00" y="414.50">DOUBLE_cl..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="938" y="404" width="2" height="15" fill="rgb(222,167,21)"/><text x="941.00" y="414.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.15%)</title><rect x="938" y="420" width="2" height="15" fill="rgb(245,25,5)"/><text x="941.00" y="430.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (48 samples, 7.31%)</title><rect x="855" y="324" width="87" height="15" fill="rgb(228,153,9)"/><text x="858.00" y="334.50">_clip_dep_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (47 samples, 7.15%)</title><rect x="857" y="340" width="85" height="15" fill="rgb(218,180,39)"/><text x="860.00" y="350.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (47 samples, 7.15%)</title><rect x="857" y="356" width="85" height="15" fill="rgb(249,78,6)"/><text x="860.00" y="366.50">PyUFunc_Ge..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (47 samples, 7.15%)</title><rect x="857" y="372" width="85" height="15" fill="rgb(237,88,21)"/><text x="860.00" y="382.50">execute_le..</text></g><g><title>iterator_loop (ufunc_object.c) (47 samples, 7.15%)</title><rect x="857" y="388" width="85" height="15" fill="rgb(236,219,20)"/><text x="860.00" y="398.50">iterator_l..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="940" y="404" width="2" height="15" fill="rgb(237,142,23)"/><text x="943.00" y="414.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.30%)</title><rect x="942" y="324" width="3" height="15" fill="rgb(224,131,36)"/><text x="945.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (3 samples, 0.46%)</title><rect x="947" y="340" width="5" height="15" fill="rgb(241,159,7)"/><text x="950.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.46%)</title><rect x="947" y="356" width="5" height="15" fill="rgb(246,96,13)"/><text x="950.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (3 samples, 0.46%)</title><rect x="947" y="372" width="5" height="15" fill="rgb(216,184,7)"/><text x="950.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.30%)</title><rect x="949" y="388" width="3" height="15" fill="rgb(254,20,28)"/><text x="952.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="951" y="404" width="1" height="15" fill="rgb(220,24,8)"/><text x="954.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.15%)</title><rect x="951" y="420" width="1" height="15" fill="rgb(236,178,30)"/><text x="954.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="951" y="436" width="1" height="15" fill="rgb(233,45,25)"/><text x="954.00" y="446.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="951" y="452" width="1" height="15" fill="rgb(224,89,48)"/><text x="954.00" y="462.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="951" y="468" width="1" height="15" fill="rgb(229,100,21)"/><text x="954.00" y="478.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="951" y="484" width="1" height="15" fill="rgb(207,162,48)"/><text x="954.00" y="494.50"></text></g><g><title>0x7f1dd6d7c600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="951" y="500" width="1" height="15" fill="rgb(251,27,30)"/><text x="954.00" y="510.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="952" y="372" width="2" height="15" fill="rgb(207,192,32)"/><text x="955.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="952" y="388" width="2" height="15" fill="rgb(246,216,32)"/><text x="955.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="952" y="404" width="2" height="15" fill="rgb(223,13,32)"/><text x="955.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="952" y="420" width="2" height="15" fill="rgb(234,118,16)"/><text x="955.00" y="430.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (60 samples, 9.13%)</title><rect x="848" y="196" width="108" height="15" fill="rgb(205,2,39)"/><text x="851.00" y="206.50">relu (sklearn..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (59 samples, 8.98%)</title><rect x="850" y="212" width="106" height="15" fill="rgb(251,119,19)"/><text x="853.00" y="222.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (58 samples, 8.83%)</title><rect x="852" y="228" width="104" height="15" fill="rgb(241,196,33)"/><text x="855.00" y="238.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py) (58 samples, 8.83%)</title><rect x="852" y="244" width="104" height="15" fill="rgb(211,30,3)"/><text x="855.00" y="254.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (58 samples, 8.83%)</title><rect x="852" y="260" width="104" height="15" fill="rgb(207,91,50)"/><text x="855.00" y="270.50">_wrapfunc (n..</text></g><g><title>array_clip (methods.c) (58 samples, 8.83%)</title><rect x="852" y="276" width="104" height="15" fill="rgb(245,129,21)"/><text x="855.00" y="286.50">array_clip (..</text></g><g><title>forward_ndarray_method (methods.c) (58 samples, 8.83%)</title><rect x="852" y="292" width="104" height="15" fill="rgb(207,116,34)"/><text x="855.00" y="302.50">forward_ndar..</text></g><g><title>_clip (numpy/core/_methods.py) (58 samples, 8.83%)</title><rect x="852" y="308" width="104" height="15" fill="rgb(228,184,10)"/><text x="855.00" y="318.50">_clip (numpy..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (6 samples, 0.91%)</title><rect x="945" y="324" width="11" height="15" fill="rgb(227,58,46)"/><text x="948.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.30%)</title><rect x="952" y="340" width="4" height="15" fill="rgb(248,23,27)"/><text x="955.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.30%)</title><rect x="952" y="356" width="4" height="15" fill="rgb(254,176,18)"/><text x="955.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.15%)</title><rect x="954" y="372" width="2" height="15" fill="rgb(222,154,14)"/><text x="957.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="954" y="388" width="2" height="15" fill="rgb(212,149,22)"/><text x="957.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.15%)</title><rect x="954" y="404" width="2" height="15" fill="rgb(246,107,39)"/><text x="957.00" y="414.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.15%)</title><rect x="954" y="420" width="2" height="15" fill="rgb(239,198,24)"/><text x="957.00" y="430.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.76%)</title><rect x="958" y="212" width="9" height="15" fill="rgb(240,5,8)"/><text x="961.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.44%)</title><rect x="967" y="212" width="29" height="15" fill="rgb(251,106,2)"/><text x="970.00" y="222.50">dg..</text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="996" y="292" width="1" height="15" fill="rgb(239,34,0)"/><text x="999.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="997" y="356" width="2" height="15" fill="rgb(215,60,11)"/><text x="1000.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="997" y="372" width="2" height="15" fill="rgb(225,87,45)"/><text x="1000.00" y="382.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (33 samples, 5.02%)</title><rect x="997" y="340" width="60" height="15" fill="rgb(209,79,21)"/><text x="1000.00" y="350.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (32 samples, 4.87%)</title><rect x="999" y="356" width="58" height="15" fill="rgb(220,61,7)"/><text x="1002.00" y="366.50">sched_..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.30%)</title><rect x="1057" y="356" width="3" height="15" fill="rgb(233,15,3)"/><text x="1060.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (40 samples, 6.09%)</title><rect x="996" y="260" width="71" height="15" fill="rgb(216,0,23)"/><text x="999.00" y="270.50">DOUBLE_m..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (40 samples, 6.09%)</title><rect x="996" y="276" width="71" height="15" fill="rgb(248,169,46)"/><text x="999.00" y="286.50">cblas_dg..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.94%)</title><rect x="997" y="292" width="70" height="15" fill="rgb(240,6,30)"/><text x="1000.00" y="302.50">dgemm_t..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.94%)</title><rect x="997" y="308" width="70" height="15" fill="rgb(249,107,18)"/><text x="1000.00" y="318.50">gemm_dr..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.94%)</title><rect x="997" y="324" width="70" height="15" fill="rgb(224,89,38)"/><text x="1000.00" y="334.50">exec_bl..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.91%)</title><rect x="1057" y="340" width="10" height="15" fill="rgb(208,85,28)"/><text x="1060.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.61%)</title><rect x="1060" y="356" width="7" height="15" fill="rgb(241,191,36)"/><text x="1063.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1067" y="260" width="2" height="15" fill="rgb(216,6,29)"/><text x="1070.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1067" y="276" width="2" height="15" fill="rgb(246,140,40)"/><text x="1070.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (64 samples, 9.74%)</title><rect x="956" y="196" width="115" height="15" fill="rgb(210,25,25)"/><text x="959.00" y="206.50">safe_sparse_do..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (42 samples, 6.39%)</title><rect x="996" y="212" width="75" height="15" fill="rgb(247,1,6)"/><text x="999.00" y="222.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 6.39%)</title><rect x="996" y="228" width="75" height="15" fill="rgb(253,104,11)"/><text x="999.00" y="238.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (42 samples, 6.39%)</title><rect x="996" y="244" width="75" height="15" fill="rgb(253,34,31)"/><text x="999.00" y="254.50">PyUFunc_..</text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1069" y="260" width="2" height="15" fill="rgb(205,40,40)"/><text x="1072.00" y="270.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.15%)</title><rect x="1071" y="372" width="2" height="15" fill="rgb(254,109,0)"/><text x="1074.00" y="382.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (5 samples, 0.76%)</title><rect x="1071" y="340" width="9" height="15" fill="rgb(227,167,48)"/><text x="1074.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (5 samples, 0.76%)</title><rect x="1071" y="356" width="9" height="15" fill="rgb(228,20,6)"/><text x="1074.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (4 samples, 0.61%)</title><rect x="1073" y="372" width="7" height="15" fill="rgb(227,191,40)"/><text x="1076.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="1078" y="388" width="2" height="15" fill="rgb(253,159,37)"/><text x="1081.00" y="398.50"></text></g><g><title>array_max (methods.c) (6 samples, 0.91%)</title><rect x="1071" y="212" width="11" height="15" fill="rgb(234,72,53)"/><text x="1074.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (6 samples, 0.91%)</title><rect x="1071" y="228" width="11" height="15" fill="rgb(224,220,3)"/><text x="1074.00" y="238.50"></text></g><g><title>_amax (numpy/core/_methods.py) (6 samples, 0.91%)</title><rect x="1071" y="244" width="11" height="15" fill="rgb(250,119,7)"/><text x="1074.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 0.91%)</title><rect x="1071" y="260" width="11" height="15" fill="rgb(250,140,36)"/><text x="1074.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 0.91%)</title><rect x="1071" y="276" width="11" height="15" fill="rgb(224,32,4)"/><text x="1074.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 0.91%)</title><rect x="1071" y="292" width="11" height="15" fill="rgb(222,36,1)"/><text x="1074.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 0.91%)</title><rect x="1071" y="308" width="11" height="15" fill="rgb(209,38,53)"/><text x="1074.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 0.91%)</title><rect x="1071" y="324" width="11" height="15" fill="rgb(224,99,9)"/><text x="1074.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.15%)</title><rect x="1080" y="340" width="2" height="15" fill="rgb(238,79,0)"/><text x="1083.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.15%)</title><rect x="1082" y="292" width="2" height="15" fill="rgb(236,104,31)"/><text x="1085.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="1082" y="308" width="2" height="15" fill="rgb(222,112,4)"/><text x="1085.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="1082" y="324" width="2" height="15" fill="rgb(235,39,27)"/><text x="1085.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.15%)</title><rect x="1082" y="340" width="2" height="15" fill="rgb(205,51,15)"/><text x="1085.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1084" y="308" width="1" height="15" fill="rgb(253,106,3)"/><text x="1087.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1084" y="324" width="1" height="15" fill="rgb(210,221,17)"/><text x="1087.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.30%)</title><rect x="1084" y="292" width="3" height="15" fill="rgb(232,147,48)"/><text x="1087.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1085" y="308" width="2" height="15" fill="rgb(240,107,16)"/><text x="1088.00" y="318.50"></text></g><g><title>array_subtract (number.c) (4 samples, 0.61%)</title><rect x="1082" y="212" width="7" height="15" fill="rgb(244,10,46)"/><text x="1085.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1082" y="228" width="7" height="15" fill="rgb(218,39,33)"/><text x="1085.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1082" y="244" width="7" height="15" fill="rgb(217,41,30)"/><text x="1085.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1082" y="260" width="7" height="15" fill="rgb(211,105,2)"/><text x="1085.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1082" y="276" width="7" height="15" fill="rgb(246,110,28)"/><text x="1085.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1087" y="292" width="2" height="15" fill="rgb(228,135,18)"/><text x="1090.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1087" y="308" width="2" height="15" fill="rgb(249,209,39)"/><text x="1090.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1087" y="324" width="2" height="15" fill="rgb(240,223,15)"/><text x="1090.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1087" y="340" width="2" height="15" fill="rgb(213,195,34)"/><text x="1090.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="1089" y="276" width="2" height="15" fill="rgb(215,209,34)"/><text x="1092.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="1089" y="292" width="2" height="15" fill="rgb(251,31,11)"/><text x="1092.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.15%)</title><rect x="1089" y="308" width="2" height="15" fill="rgb(243,204,2)"/><text x="1092.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="1089" y="324" width="2" height="15" fill="rgb(217,98,1)"/><text x="1092.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.15%)</title><rect x="1089" y="340" width="2" height="15" fill="rgb(231,226,33)"/><text x="1092.00" y="350.50"></text></g><g><title>0x7f1dd7c38fc2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1089" y="356" width="2" height="15" fill="rgb(251,90,50)"/><text x="1092.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1091" y="324" width="2" height="15" fill="rgb(220,183,51)"/><text x="1094.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1091" y="340" width="2" height="15" fill="rgb(227,15,54)"/><text x="1094.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.15%)</title><rect x="1093" y="324" width="1" height="15" fill="rgb(220,56,39)"/><text x="1096.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="1093" y="340" width="1" height="15" fill="rgb(213,123,31)"/><text x="1096.00" y="350.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="1093" y="356" width="1" height="15" fill="rgb(235,106,46)"/><text x="1096.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="1093" y="372" width="1" height="15" fill="rgb(249,107,13)"/><text x="1096.00" y="382.50"></text></g><g><title>array_sum (methods.c) (7 samples, 1.07%)</title><rect x="1089" y="212" width="12" height="15" fill="rgb(218,12,5)"/><text x="1092.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (7 samples, 1.07%)</title><rect x="1089" y="228" width="12" height="15" fill="rgb(227,35,9)"/><text x="1092.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 1.07%)</title><rect x="1089" y="244" width="12" height="15" fill="rgb(254,40,19)"/><text x="1092.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 1.07%)</title><rect x="1089" y="260" width="12" height="15" fill="rgb(209,49,8)"/><text x="1092.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 0.91%)</title><rect x="1091" y="276" width="10" height="15" fill="rgb(237,125,30)"/><text x="1094.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 0.91%)</title><rect x="1091" y="292" width="10" height="15" fill="rgb(247,54,25)"/><text x="1094.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 0.91%)</title><rect x="1091" y="308" width="10" height="15" fill="rgb(216,175,50)"/><text x="1094.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1094" y="324" width="7" height="15" fill="rgb(229,27,24)"/><text x="1097.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.61%)</title><rect x="1094" y="340" width="7" height="15" fill="rgb(207,195,49)"/><text x="1097.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (2 samples, 0.30%)</title><rect x="1098" y="356" width="3" height="15" fill="rgb(241,0,4)"/><text x="1101.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (2 samples, 0.30%)</title><rect x="1101" y="276" width="4" height="15" fill="rgb(213,86,31)"/><text x="1104.00" y="286.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (2 samples, 0.30%)</title><rect x="1101" y="292" width="4" height="15" fill="rgb(234,116,41)"/><text x="1104.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (2 samples, 0.30%)</title><rect x="1101" y="308" width="4" height="15" fill="rgb(209,74,50)"/><text x="1104.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.30%)</title><rect x="1101" y="324" width="4" height="15" fill="rgb(218,99,25)"/><text x="1104.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1105" y="276" width="2" height="15" fill="rgb(236,173,9)"/><text x="1108.00" y="286.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1105" y="292" width="2" height="15" fill="rgb(227,14,29)"/><text x="1108.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1101" y="260" width="8" height="15" fill="rgb(219,21,22)"/><text x="1104.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1107" y="276" width="2" height="15" fill="rgb(215,121,13)"/><text x="1110.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1107" y="292" width="2" height="15" fill="rgb(235,22,52)"/><text x="1110.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1107" y="308" width="2" height="15" fill="rgb(217,140,47)"/><text x="1110.00" y="318.50"></text></g><g><title>0x7f1dd7d2cba0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1116" y="308" width="2" height="15" fill="rgb(235,152,21)"/><text x="1119.00" y="318.50"></text></g><g><title>0x7f1dd7d2cbeb (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1118" y="308" width="1" height="15" fill="rgb(233,6,8)"/><text x="1121.00" y="318.50"></text></g><g><title>0x7f1dd7d2cbf9 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1119" y="308" width="2" height="15" fill="rgb(206,229,27)"/><text x="1122.00" y="318.50"></text></g><g><title>0x7f1dd7d2cc04 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1121" y="308" width="2" height="15" fill="rgb(213,206,13)"/><text x="1124.00" y="318.50"></text></g><g><title>0x7f1dd7d2cc18 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1123" y="308" width="2" height="15" fill="rgb(214,13,7)"/><text x="1126.00" y="318.50"></text></g><g><title>0x7f1dd7d2cc32 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1125" y="308" width="2" height="15" fill="rgb(225,41,37)"/><text x="1128.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 2.28%)</title><rect x="1101" y="244" width="27" height="15" fill="rgb(207,161,24)"/><text x="1104.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (11 samples, 1.67%)</title><rect x="1109" y="260" width="19" height="15" fill="rgb(254,79,11)"/><text x="1112.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (11 samples, 1.67%)</title><rect x="1109" y="276" width="19" height="15" fill="rgb(235,142,30)"/><text x="1112.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (10 samples, 1.52%)</title><rect x="1110" y="292" width="18" height="15" fill="rgb(219,34,13)"/><text x="1113.00" y="302.50"></text></g><g><title>0x7f1dd7d2cc6e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1127" y="308" width="1" height="15" fill="rgb(231,66,19)"/><text x="1130.00" y="318.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1128" y="244" width="2" height="15" fill="rgb(231,34,27)"/><text x="1131.00" y="254.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (34 samples, 5.18%)</title><rect x="1071" y="196" width="61" height="15" fill="rgb(207,112,27)"/><text x="1074.00" y="206.50">softma..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 2.59%)</title><rect x="1101" y="212" width="31" height="15" fill="rgb(223,222,54)"/><text x="1104.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 2.59%)</title><rect x="1101" y="228" width="31" height="15" fill="rgb(212,20,24)"/><text x="1104.00" y="238.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1130" y="244" width="2" height="15" fill="rgb(221,14,39)"/><text x="1133.00" y="254.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (7 samples, 1.07%)</title><rect x="1132" y="308" width="13" height="15" fill="rgb(215,154,22)"/><text x="1135.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 1.22%)</title><rect x="1132" y="260" width="14" height="15" fill="rgb(239,97,4)"/><text x="1135.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (8 samples, 1.22%)</title><rect x="1132" y="276" width="14" height="15" fill="rgb(218,186,40)"/><text x="1135.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (8 samples, 1.22%)</title><rect x="1132" y="292" width="14" height="15" fill="rgb(218,48,21)"/><text x="1135.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.15%)</title><rect x="1145" y="308" width="1" height="15" fill="rgb(246,166,9)"/><text x="1148.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1146" y="260" width="2" height="15" fill="rgb(253,37,4)"/><text x="1149.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1148" y="260" width="2" height="15" fill="rgb(235,222,1)"/><text x="1151.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1148" y="276" width="2" height="15" fill="rgb(213,117,34)"/><text x="1151.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(229,19,10)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f1dd7b7aef4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1150" y="308" width="2" height="15" fill="rgb(253,151,19)"/><text x="1153.00" y="318.50"></text></g><g><title>0x7f1dd7b7af3e (libc-2.29.so) (2 samples, 0.30%)</title><rect x="1152" y="308" width="3" height="15" fill="rgb(208,13,22)"/><text x="1155.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.61%)</title><rect x="1150" y="276" width="7" height="15" fill="rgb(217,133,21)"/><text x="1153.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.61%)</title><rect x="1150" y="292" width="7" height="15" fill="rgb(220,5,37)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7f1dd7b7af58 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1155" y="308" width="2" height="15" fill="rgb(211,213,19)"/><text x="1158.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 2.28%)</title><rect x="1132" y="212" width="27" height="15" fill="rgb(239,182,16)"/><text x="1135.00" y="222.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 2.28%)</title><rect x="1132" y="228" width="27" height="15" fill="rgb(245,110,28)"/><text x="1135.00" y="238.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 2.28%)</title><rect x="1132" y="244" width="27" height="15" fill="rgb(232,50,44)"/><text x="1135.00" y="254.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (5 samples, 0.76%)</title><rect x="1150" y="260" width="9" height="15" fill="rgb(208,69,50)"/><text x="1153.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.15%)</title><rect x="1157" y="276" width="2" height="15" fill="rgb(218,153,33)"/><text x="1160.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (178 samples, 27.09%)</title><rect x="841" y="180" width="320" height="15" fill="rgb(224,191,8)"/><text x="844.00" y="190.50">_forward_pass (sklearn/neural_network/_mult..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.44%)</title><rect x="1132" y="196" width="29" height="15" fill="rgb(216,56,7)"/><text x="1135.00" y="206.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1159" y="212" width="2" height="15" fill="rgb(235,35,3)"/><text x="1162.00" y="222.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="1161" y="180" width="2" height="15" fill="rgb(221,181,3)"/><text x="1164.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.15%)</title><rect x="1170" y="196" width="2" height="15" fill="rgb(210,201,34)"/><text x="1173.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (186 samples, 28.31%)</title><rect x="839" y="164" width="334" height="15" fill="rgb(238,159,19)"/><text x="842.00" y="174.50">_predict (sklearn/neural_network/_multilayer_..</text></g><g><title>check_array (sklearn/utils/validation.py) (6 samples, 0.91%)</title><rect x="1163" y="180" width="10" height="15" fill="rgb(205,51,42)"/><text x="1166.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.15%)</title><rect x="1172" y="196" width="1" height="15" fill="rgb(229,47,23)"/><text x="1175.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.15%)</title><rect x="1172" y="212" width="1" height="15" fill="rgb(237,24,32)"/><text x="1175.00" y="222.50"></text></g><g><title>profile_skl (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (193 samples, 29.38%)</title><rect x="837" y="68" width="347" height="15" fill="rgb(247,189,52)"/><text x="840.00" y="78.50">profile_skl (bench_MLPClassifier_default_b_cl_1..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (193 samples, 29.38%)</title><rect x="837" y="84" width="347" height="15" fill="rgb(241,34,43)"/><text x="840.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (193 samples, 29.38%)</title><rect x="837" y="100" width="347" height="15" fill="rgb(229,229,11)"/><text x="840.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (193 samples, 29.38%)</title><rect x="837" y="116" width="347" height="15" fill="rgb(248,139,11)"/><text x="840.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (192 samples, 29.22%)</title><rect x="839" y="132" width="345" height="15" fill="rgb(240,89,40)"/><text x="842.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py) (192 samples, 29.22%)</title><rect x="839" y="148" width="345" height="15" fill="rgb(205,37,11)"/><text x="842.00" y="158.50">predict_proba (sklearn/neural_network/_multila..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.91%)</title><rect x="1173" y="164" width="11" height="15" fill="rgb(234,46,49)"/><text x="1176.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 0.91%)</title><rect x="1173" y="180" width="11" height="15" fill="rgb(225,202,3)"/><text x="1176.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.30%)</title><rect x="1181" y="196" width="3" height="15" fill="rgb(243,168,54)"/><text x="1184.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1186" y="212" width="2" height="15" fill="rgb(238,222,43)"/><text x="1189.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="1186" y="228" width="2" height="15" fill="rgb(206,49,53)"/><text x="1189.00" y="238.50"></text></g><g><title>all (657 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,217,12)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (657 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(238,72,12)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py)</text></g><g><title>start (bench_MLPClassifier_default_b_cl_1000_4_12_float_.py) (3 samples, 0.46%)</title><rect x="1184" y="68" width="6" height="15" fill="rgb(241,74,50)"/><text x="1187.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py) (3 samples, 0.46%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(208,79,31)"/><text x="1187.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.46%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(236,189,47)"/><text x="1187.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.46%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(253,160,46)"/><text x="1187.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.46%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(250,122,51)"/><text x="1187.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.46%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(243,14,0)"/><text x="1187.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py) (3 samples, 0.46%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(236,168,6)"/><text x="1187.00" y="174.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py) (3 samples, 0.46%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(228,119,54)"/><text x="1187.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py) (3 samples, 0.46%)</title><rect x="1184" y="196" width="6" height="15" fill="rgb(247,161,1)"/><text x="1187.00" y="206.50"></text></g><g><title>array_power (number.c) (1 samples, 0.15%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(209,146,23)"/><text x="1191.00" y="222.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.15%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(207,143,1)"/><text x="1191.00" y="238.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(243,99,45)"/><text x="1191.00" y="254.50"></text></g></g></svg>