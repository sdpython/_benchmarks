<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:31) (1 samples, 0.40%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(216,168,23)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:11) (1 samples, 0.40%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(238,188,45)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:39) (1 samples, 0.40%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(247,201,52)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.40%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(240,5,18)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:87) (1 samples, 0.40%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(227,143,38)"/><text x="13.00" y="126.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:179) (1 samples, 0.40%)</title><rect x="14" y="116" width="5" height="15" fill="rgb(228,63,13)"/><text x="17.00" y="126.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.40%)</title><rect x="24" y="164" width="4" height="15" fill="rgb(228,142,11)"/><text x="27.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.80%)</title><rect x="43" y="180" width="9" height="15" fill="rgb(253,22,4)"/><text x="46.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (6 samples, 2.40%)</title><rect x="76" y="196" width="28" height="15" fill="rgb(210,208,52)"/><text x="79.00" y="206.50">u..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 4.80%)</title><rect x="52" y="180" width="57" height="15" fill="rgb(236,5,4)"/><text x="55.00" y="190.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.40%)</title><rect x="104" y="196" width="5" height="15" fill="rgb(215,99,10)"/><text x="107.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (20 samples, 8.00%)</title><rect x="19" y="148" width="94" height="15" fill="rgb(234,117,33)"/><text x="22.00" y="158.50">decision_fu..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (18 samples, 7.20%)</title><rect x="28" y="164" width="85" height="15" fill="rgb(232,7,43)"/><text x="31.00" y="174.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.40%)</title><rect x="109" y="180" width="4" height="15" fill="rgb(216,129,33)"/><text x="112.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.80%)</title><rect x="113" y="164" width="10" height="15" fill="rgb(235,56,43)"/><text x="116.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.40%)</title><rect x="123" y="164" width="5" height="15" fill="rgb(253,98,23)"/><text x="126.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.80%)</title><rect x="128" y="164" width="9" height="15" fill="rgb(206,133,52)"/><text x="131.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.80%)</title><rect x="128" y="180" width="9" height="15" fill="rgb(241,118,33)"/><text x="131.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (4 samples, 1.60%)</title><rect x="137" y="180" width="19" height="15" fill="rgb(224,122,54)"/><text x="140.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.40%)</title><rect x="156" y="180" width="5" height="15" fill="rgb(205,114,14)"/><text x="159.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.40%)</title><rect x="161" y="180" width="4" height="15" fill="rgb(233,0,7)"/><text x="164.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.80%)</title><rect x="165" y="180" width="10" height="15" fill="rgb(223,124,6)"/><text x="168.00" y="190.50"></text></g><g><title>0x7f60ca02a14f (libc-2.29.so) (1 samples, 0.40%)</title><rect x="170" y="196" width="5" height="15" fill="rgb(212,219,1)"/><text x="173.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 4.40%)</title><rect x="137" y="164" width="52" height="15" fill="rgb(244,102,14)"/><text x="140.00" y="174.50">check..</text></g><g><title>__init__ (warnings.py:462) (3 samples, 1.20%)</title><rect x="175" y="180" width="14" height="15" fill="rgb(227,66,32)"/><text x="178.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:184) (1 samples, 0.40%)</title><rect x="189" y="196" width="5" height="15" fill="rgb(205,109,28)"/><text x="192.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 2.00%)</title><rect x="194" y="196" width="23" height="15" fill="rgb(221,79,40)"/><text x="197.00" y="206.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 2.80%)</title><rect x="189" y="164" width="33" height="15" fill="rgb(211,31,36)"/><text x="192.00" y="174.50">ch..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 2.80%)</title><rect x="189" y="180" width="33" height="15" fill="rgb(253,135,53)"/><text x="192.00" y="190.50">si..</text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.40%)</title><rect x="217" y="196" width="5" height="15" fill="rgb(238,197,31)"/><text x="220.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.80%)</title><rect x="222" y="164" width="9" height="15" fill="rgb(219,180,7)"/><text x="225.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:493) (1 samples, 0.40%)</title><rect x="236" y="180" width="5" height="15" fill="rgb(246,16,38)"/><text x="239.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.60%)</title><rect x="231" y="164" width="19" height="15" fill="rgb(207,136,9)"/><text x="234.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.80%)</title><rect x="241" y="180" width="9" height="15" fill="rgb(207,75,5)"/><text x="244.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.40%)</title><rect x="250" y="180" width="5" height="15" fill="rgb(236,70,21)"/><text x="253.00" y="190.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.40%)</title><rect x="250" y="196" width="5" height="15" fill="rgb(219,165,34)"/><text x="253.00" y="206.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.40%)</title><rect x="250" y="212" width="5" height="15" fill="rgb(220,185,23)"/><text x="253.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.40%)</title><rect x="255" y="180" width="5" height="15" fill="rgb(247,142,37)"/><text x="258.00" y="190.50"></text></g><g><title>0x7f60ca0e713a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="255" y="196" width="5" height="15" fill="rgb(242,38,0)"/><text x="258.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.20%)</title><rect x="250" y="164" width="14" height="15" fill="rgb(210,112,42)"/><text x="253.00" y="174.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:336) (1 samples, 0.40%)</title><rect x="260" y="180" width="4" height="15" fill="rgb(216,54,13)"/><text x="263.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.80%)</title><rect x="274" y="196" width="9" height="15" fill="rgb(216,31,19)"/><text x="277.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 2.00%)</title><rect x="264" y="164" width="24" height="15" fill="rgb(208,180,36)"/><text x="267.00" y="174.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 1.60%)</title><rect x="269" y="180" width="19" height="15" fill="rgb(248,35,54)"/><text x="272.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.40%)</title><rect x="283" y="196" width="5" height="15" fill="rgb(214,116,15)"/><text x="286.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.40%)</title><rect x="288" y="164" width="5" height="15" fill="rgb(220,24,26)"/><text x="291.00" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.20%)</title><rect x="330" y="196" width="15" height="15" fill="rgb(212,182,40)"/><text x="333.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.40%)</title><rect x="345" y="196" width="4" height="15" fill="rgb(208,180,30)"/><text x="348.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (14 samples, 5.60%)</title><rect x="293" y="164" width="66" height="15" fill="rgb(233,126,28)"/><text x="296.00" y="174.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (13 samples, 5.20%)</title><rect x="297" y="180" width="62" height="15" fill="rgb(212,117,30)"/><text x="300.00" y="190.50">_asser..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.80%)</title><rect x="349" y="196" width="10" height="15" fill="rgb(216,18,40)"/><text x="352.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.40%)</title><rect x="359" y="180" width="5" height="15" fill="rgb(230,186,39)"/><text x="362.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.80%)</title><rect x="364" y="180" width="9" height="15" fill="rgb(207,126,5)"/><text x="367.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.80%)</title><rect x="373" y="180" width="9" height="15" fill="rgb(220,103,41)"/><text x="376.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1189) (1 samples, 0.40%)</title><rect x="378" y="196" width="4" height="15" fill="rgb(224,80,48)"/><text x="381.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 4.80%)</title><rect x="359" y="164" width="56" height="15" fill="rgb(232,129,23)"/><text x="362.00" y="174.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (7 samples, 2.80%)</title><rect x="382" y="180" width="33" height="15" fill="rgb(246,45,39)"/><text x="385.00" y="190.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.60%)</title><rect x="397" y="196" width="18" height="15" fill="rgb(214,129,32)"/><text x="400.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.40%)</title><rect x="411" y="212" width="4" height="15" fill="rgb(208,21,43)"/><text x="414.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (65 samples, 26.00%)</title><rect x="113" y="148" width="307" height="15" fill="rgb(253,210,49)"/><text x="116.00" y="158.50">decision_function (sklearn/linear_model/_..</text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.40%)</title><rect x="415" y="164" width="5" height="15" fill="rgb(222,25,12)"/><text x="418.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.40%)</title><rect x="420" y="148" width="5" height="15" fill="rgb(233,123,40)"/><text x="423.00" y="158.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.40%)</title><rect x="434" y="196" width="5" height="15" fill="rgb(232,76,28)"/><text x="437.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.40%)</title><rect x="434" y="212" width="5" height="15" fill="rgb(246,144,51)"/><text x="437.00" y="222.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.40%)</title><rect x="434" y="228" width="5" height="15" fill="rgb(240,45,4)"/><text x="437.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.40%)</title><rect x="439" y="212" width="5" height="15" fill="rgb(237,72,16)"/><text x="442.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.40%)</title><rect x="439" y="228" width="5" height="15" fill="rgb(221,91,1)"/><text x="442.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.40%)</title><rect x="444" y="244" width="4" height="15" fill="rgb(250,147,11)"/><text x="447.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.40%)</title><rect x="444" y="260" width="4" height="15" fill="rgb(205,132,24)"/><text x="447.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1064) (1 samples, 0.40%)</title><rect x="444" y="276" width="4" height="15" fill="rgb(239,39,50)"/><text x="447.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.40%)</title><rect x="448" y="244" width="5" height="15" fill="rgb(245,196,48)"/><text x="451.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1432) (1 samples, 0.40%)</title><rect x="448" y="260" width="5" height="15" fill="rgb(224,148,34)"/><text x="451.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.40%)</title><rect x="453" y="244" width="5" height="15" fill="rgb(214,226,29)"/><text x="456.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.40%)</title><rect x="453" y="260" width="5" height="15" fill="rgb(239,218,8)"/><text x="456.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.40%)</title><rect x="453" y="276" width="5" height="15" fill="rgb(229,205,33)"/><text x="456.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.40%)</title><rect x="453" y="292" width="5" height="15" fill="rgb(254,32,24)"/><text x="456.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.40%)</title><rect x="453" y="308" width="5" height="15" fill="rgb(241,158,8)"/><text x="456.00" y="318.50"></text></g><g><title>array_add (number.c:330) (7 samples, 2.80%)</title><rect x="430" y="164" width="33" height="15" fill="rgb(239,186,26)"/><text x="433.00" y="174.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.40%)</title><rect x="434" y="180" width="29" height="15" fill="rgb(243,193,51)"/><text x="437.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 2.00%)</title><rect x="439" y="196" width="24" height="15" fill="rgb(245,88,29)"/><text x="442.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.60%)</title><rect x="444" y="212" width="19" height="15" fill="rgb(215,24,38)"/><text x="447.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.60%)</title><rect x="444" y="228" width="19" height="15" fill="rgb(230,176,26)"/><text x="447.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.40%)</title><rect x="458" y="244" width="5" height="15" fill="rgb(250,112,15)"/><text x="461.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3265) (1 samples, 0.40%)</title><rect x="458" y="260" width="5" height="15" fill="rgb(206,113,50)"/><text x="461.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.40%)</title><rect x="463" y="164" width="4" height="15" fill="rgb(216,61,29)"/><text x="466.00" y="174.50"></text></g><g><title>0x7fffffffffffffff (?) (1 samples, 0.40%)</title><rect x="472" y="180" width="5" height="15" fill="rgb(225,172,35)"/><text x="475.00" y="190.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.40%)</title><rect x="472" y="196" width="5" height="15" fill="rgb(227,185,40)"/><text x="475.00" y="206.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.40%)</title><rect x="472" y="212" width="5" height="15" fill="rgb(246,131,49)"/><text x="475.00" y="222.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="472" y="228" width="5" height="15" fill="rgb(232,174,22)"/><text x="475.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.40%)</title><rect x="477" y="212" width="5" height="15" fill="rgb(244,138,27)"/><text x="480.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.80%)</title><rect x="477" y="180" width="9" height="15" fill="rgb(234,139,47)"/><text x="480.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.80%)</title><rect x="477" y="196" width="9" height="15" fill="rgb(237,112,43)"/><text x="480.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.40%)</title><rect x="482" y="212" width="4" height="15" fill="rgb(233,7,41)"/><text x="485.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.40%)</title><rect x="482" y="228" width="4" height="15" fill="rgb(218,76,28)"/><text x="485.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2592) (1 samples, 0.40%)</title><rect x="486" y="212" width="5" height="15" fill="rgb(244,46,46)"/><text x="489.00" y="222.50"></text></g><g><title>_initialize_variable_parts (ufunc_object.c:2511) (1 samples, 0.40%)</title><rect x="486" y="228" width="5" height="15" fill="rgb(210,103,43)"/><text x="489.00" y="238.50"></text></g><g><title>0x7f60ca029d97 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="486" y="244" width="5" height="15" fill="rgb(210,76,11)"/><text x="489.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.40%)</title><rect x="491" y="212" width="5" height="15" fill="rgb(222,4,10)"/><text x="494.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1081) (1 samples, 0.40%)</title><rect x="491" y="228" width="5" height="15" fill="rgb(236,70,0)"/><text x="494.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.40%)</title><rect x="496" y="228" width="4" height="15" fill="rgb(238,123,21)"/><text x="499.00" y="238.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.40%)</title><rect x="500" y="276" width="5" height="15" fill="rgb(248,88,13)"/><text x="503.00" y="286.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.40%)</title><rect x="500" y="292" width="5" height="15" fill="rgb(209,56,34)"/><text x="503.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (3 samples, 1.20%)</title><rect x="496" y="212" width="14" height="15" fill="rgb(228,210,26)"/><text x="499.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (2 samples, 0.80%)</title><rect x="500" y="228" width="10" height="15" fill="rgb(237,52,21)"/><text x="503.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (2 samples, 0.80%)</title><rect x="500" y="244" width="10" height="15" fill="rgb(242,69,13)"/><text x="503.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (2 samples, 0.80%)</title><rect x="500" y="260" width="10" height="15" fill="rgb(222,121,29)"/><text x="503.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.40%)</title><rect x="505" y="276" width="5" height="15" fill="rgb(251,118,22)"/><text x="508.00" y="286.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:564) (1 samples, 0.40%)</title><rect x="505" y="292" width="5" height="15" fill="rgb(228,172,40)"/><text x="508.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.40%)</title><rect x="510" y="212" width="5" height="15" fill="rgb(235,10,39)"/><text x="513.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.40%)</title><rect x="510" y="228" width="5" height="15" fill="rgb(224,104,44)"/><text x="513.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.40%)</title><rect x="515" y="228" width="4" height="15" fill="rgb(215,169,41)"/><text x="518.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.40%)</title><rect x="519" y="244" width="5" height="15" fill="rgb(240,175,43)"/><text x="522.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.40%)</title><rect x="519" y="260" width="5" height="15" fill="rgb(211,2,51)"/><text x="522.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.40%)</title><rect x="519" y="276" width="5" height="15" fill="rgb(235,153,32)"/><text x="522.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.40%)</title><rect x="519" y="292" width="5" height="15" fill="rgb(224,4,12)"/><text x="522.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.40%)</title><rect x="524" y="260" width="5" height="15" fill="rgb(221,102,53)"/><text x="527.00" y="270.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3998) (1 samples, 0.40%)</title><rect x="529" y="292" width="4" height="15" fill="rgb(232,89,20)"/><text x="532.00" y="302.50"></text></g><g><title>0x7f60c9fc1a74 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="533" y="324" width="5" height="15" fill="rgb(208,183,16)"/><text x="536.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 1.60%)</title><rect x="524" y="244" width="19" height="15" fill="rgb(241,209,0)"/><text x="527.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.20%)</title><rect x="529" y="260" width="14" height="15" fill="rgb(217,149,6)"/><text x="532.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (3 samples, 1.20%)</title><rect x="529" y="276" width="14" height="15" fill="rgb(231,219,18)"/><text x="532.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (2 samples, 0.80%)</title><rect x="533" y="292" width="10" height="15" fill="rgb(235,86,17)"/><text x="536.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.80%)</title><rect x="533" y="308" width="10" height="15" fill="rgb(240,76,32)"/><text x="536.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="538" y="324" width="5" height="15" fill="rgb(244,172,42)"/><text x="541.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 2.80%)</title><rect x="515" y="212" width="33" height="15" fill="rgb(240,123,23)"/><text x="518.00" y="222.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (6 samples, 2.40%)</title><rect x="519" y="228" width="29" height="15" fill="rgb(242,49,6)"/><text x="522.00" y="238.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.40%)</title><rect x="543" y="244" width="5" height="15" fill="rgb(215,45,50)"/><text x="546.00" y="254.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1961) (1 samples, 0.40%)</title><rect x="543" y="260" width="5" height="15" fill="rgb(215,41,35)"/><text x="546.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2916) (1 samples, 0.40%)</title><rect x="548" y="212" width="4" height="15" fill="rgb(224,80,33)"/><text x="551.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.40%)</title><rect x="552" y="212" width="5" height="15" fill="rgb(205,225,0)"/><text x="555.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.40%)</title><rect x="552" y="228" width="5" height="15" fill="rgb(240,59,20)"/><text x="555.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2995) (1 samples, 0.40%)</title><rect x="557" y="212" width="5" height="15" fill="rgb(210,127,36)"/><text x="560.00" y="222.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:461) (1 samples, 0.40%)</title><rect x="557" y="228" width="5" height="15" fill="rgb(210,204,5)"/><text x="560.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3002) (1 samples, 0.40%)</title><rect x="562" y="212" width="4" height="15" fill="rgb(229,225,1)"/><text x="565.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:392) (1 samples, 0.40%)</title><rect x="566" y="228" width="5" height="15" fill="rgb(251,52,23)"/><text x="569.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.80%)</title><rect x="566" y="212" width="10" height="15" fill="rgb(226,225,34)"/><text x="569.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.40%)</title><rect x="571" y="228" width="5" height="15" fill="rgb(221,52,5)"/><text x="574.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.40%)</title><rect x="571" y="244" width="5" height="15" fill="rgb(254,53,5)"/><text x="574.00" y="254.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="571" y="260" width="5" height="15" fill="rgb(221,191,52)"/><text x="574.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.40%)</title><rect x="576" y="212" width="5" height="15" fill="rgb(229,107,14)"/><text x="579.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.40%)</title><rect x="581" y="244" width="4" height="15" fill="rgb(229,207,31)"/><text x="584.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.40%)</title><rect x="581" y="260" width="4" height="15" fill="rgb(214,180,6)"/><text x="584.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.40%)</title><rect x="581" y="276" width="4" height="15" fill="rgb(235,3,34)"/><text x="584.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.40%)</title><rect x="585" y="244" width="5" height="15" fill="rgb(219,158,33)"/><text x="588.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.40%)</title><rect x="585" y="260" width="5" height="15" fill="rgb(209,18,34)"/><text x="588.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (36 samples, 14.40%)</title><rect x="425" y="148" width="170" height="15" fill="rgb(254,189,41)"/><text x="428.00" y="158.50">decision_function (skl..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (27 samples, 10.80%)</title><rect x="467" y="164" width="128" height="15" fill="rgb(206,93,52)"/><text x="470.00" y="174.50">safe_sparse_dot ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (23 samples, 9.20%)</title><rect x="486" y="180" width="109" height="15" fill="rgb(221,193,7)"/><text x="489.00" y="190.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (23 samples, 9.20%)</title><rect x="486" y="196" width="109" height="15" fill="rgb(243,71,16)"/><text x="489.00" y="206.50">PyUFunc_Gener..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (3 samples, 1.20%)</title><rect x="581" y="212" width="14" height="15" fill="rgb(238,174,27)"/><text x="584.00" y="222.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (3 samples, 1.20%)</title><rect x="581" y="228" width="14" height="15" fill="rgb(217,188,30)"/><text x="584.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.40%)</title><rect x="590" y="244" width="5" height="15" fill="rgb(252,139,22)"/><text x="593.00" y="254.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.40%)</title><rect x="590" y="260" width="5" height="15" fill="rgb(219,117,3)"/><text x="593.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:106) (1 samples, 0.40%)</title><rect x="590" y="276" width="5" height="15" fill="rgb(243,18,54)"/><text x="593.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (123 samples, 49.20%)</title><rect x="19" y="132" width="581" height="15" fill="rgb(205,20,50)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.40%)</title><rect x="595" y="148" width="5" height="15" fill="rgb(210,188,1)"/><text x="598.00" y="158.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:38) (125 samples, 50.00%)</title><rect x="14" y="52" width="590" height="15" fill="rgb(213,228,30)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:37) (125 samples, 50.00%)</title><rect x="14" y="68" width="590" height="15" fill="rgb(238,17,29)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:29) (125 samples, 50.00%)</title><rect x="14" y="84" width="590" height="15" fill="rgb(220,112,43)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:23) (125 samples, 50.00%)</title><rect x="14" y="100" width="590" height="15" fill="rgb(252,37,47)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (124 samples, 49.60%)</title><rect x="19" y="116" width="585" height="15" fill="rgb(243,139,53)"/><text x="22.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.40%)</title><rect x="600" y="132" width="4" height="15" fill="rgb(226,39,45)"/><text x="603.00" y="142.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.40%)</title><rect x="604" y="244" width="5" height="15" fill="rgb(209,62,34)"/><text x="607.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="604" y="260" width="5" height="15" fill="rgb(233,62,0)"/><text x="607.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="604" y="276" width="5" height="15" fill="rgb(211,207,8)"/><text x="607.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="604" y="292" width="5" height="15" fill="rgb(221,117,38)"/><text x="607.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="604" y="308" width="5" height="15" fill="rgb(222,172,32)"/><text x="607.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="604" y="324" width="5" height="15" fill="rgb(213,171,53)"/><text x="607.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="604" y="340" width="5" height="15" fill="rgb(251,47,40)"/><text x="607.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="604" y="356" width="5" height="15" fill="rgb(243,225,28)"/><text x="607.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:80) (1 samples, 0.40%)</title><rect x="604" y="372" width="5" height="15" fill="rgb(235,88,11)"/><text x="607.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="604" y="388" width="5" height="15" fill="rgb(220,76,10)"/><text x="607.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="604" y="404" width="5" height="15" fill="rgb(207,14,44)"/><text x="607.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="604" y="420" width="5" height="15" fill="rgb(245,29,31)"/><text x="607.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="604" y="436" width="5" height="15" fill="rgb(238,93,17)"/><text x="607.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="604" y="452" width="5" height="15" fill="rgb(243,89,44)"/><text x="607.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="604" y="468" width="5" height="15" fill="rgb(236,81,3)"/><text x="607.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="604" y="484" width="5" height="15" fill="rgb(226,200,54)"/><text x="607.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/function_base.py:189) (1 samples, 0.40%)</title><rect x="604" y="500" width="5" height="15" fill="rgb(249,173,48)"/><text x="607.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.40%)</title><rect x="604" y="516" width="5" height="15" fill="rgb(229,208,3)"/><text x="607.00" y="526.50"></text></g><g><title>0x7f60bc8d0585 (?) (1 samples, 0.40%)</title><rect x="609" y="596" width="5" height="15" fill="rgb(230,153,48)"/><text x="612.00" y="606.50"></text></g><g><title>0x7f60bc8d6075 (?) (1 samples, 0.40%)</title><rect x="609" y="612" width="5" height="15" fill="rgb(226,18,11)"/><text x="612.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="609" y="628" width="5" height="15" fill="rgb(218,52,28)"/><text x="612.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="609" y="644" width="5" height="15" fill="rgb(250,222,16)"/><text x="612.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="609" y="660" width="5" height="15" fill="rgb(219,137,39)"/><text x="612.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="609" y="676" width="5" height="15" fill="rgb(249,173,18)"/><text x="612.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="609" y="692" width="5" height="15" fill="rgb(224,117,1)"/><text x="612.00" y="702.50"></text></g><g><title>0x7f60bc20d543 (?) (1 samples, 0.40%)</title><rect x="609" y="708" width="5" height="15" fill="rgb(213,50,53)"/><text x="612.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="609" y="724" width="5" height="15" fill="rgb(234,228,17)"/><text x="612.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="609" y="740" width="5" height="15" fill="rgb(227,201,36)"/><text x="612.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="609" y="756" width="5" height="15" fill="rgb(252,159,13)"/><text x="612.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="609" y="772" width="5" height="15" fill="rgb(211,48,14)"/><text x="612.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="609" y="788" width="5" height="15" fill="rgb(237,190,40)"/><text x="612.00" y="798.50"></text></g><g><title>0x7f60bbfe2b9c (?) (1 samples, 0.40%)</title><rect x="609" y="804" width="5" height="15" fill="rgb(218,128,44)"/><text x="612.00" y="814.50"></text></g><g><title>0x7f60bbfe6885 (?) (1 samples, 0.40%)</title><rect x="609" y="820" width="5" height="15" fill="rgb(220,215,45)"/><text x="612.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="609" y="836" width="5" height="15" fill="rgb(207,34,37)"/><text x="612.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="609" y="852" width="5" height="15" fill="rgb(243,125,10)"/><text x="612.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="609" y="868" width="5" height="15" fill="rgb(205,161,20)"/><text x="612.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="609" y="884" width="5" height="15" fill="rgb(236,182,9)"/><text x="612.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="609" y="900" width="5" height="15" fill="rgb(244,173,31)"/><text x="612.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:19) (1 samples, 0.40%)</title><rect x="609" y="916" width="5" height="15" fill="rgb(206,0,46)"/><text x="612.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="609" y="932" width="5" height="15" fill="rgb(212,174,43)"/><text x="612.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="609" y="948" width="5" height="15" fill="rgb(245,213,52)"/><text x="612.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="609" y="964" width="5" height="15" fill="rgb(246,125,1)"/><text x="612.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="609" y="980" width="5" height="15" fill="rgb(233,200,50)"/><text x="612.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="609" y="996" width="5" height="15" fill="rgb(216,21,3)"/><text x="612.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py:9) (1 samples, 0.40%)</title><rect x="609" y="1012" width="5" height="15" fill="rgb(241,84,23)"/><text x="612.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="609" y="1028" width="5" height="15" fill="rgb(213,12,51)"/><text x="612.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="609" y="1044" width="5" height="15" fill="rgb(250,101,33)"/><text x="612.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.40%)</title><rect x="609" y="1060" width="5" height="15" fill="rgb(227,126,23)"/><text x="612.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.40%)</title><rect x="609" y="1076" width="5" height="15" fill="rgb(236,39,4)"/><text x="612.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.40%)</title><rect x="609" y="1092" width="5" height="15" fill="rgb(209,207,28)"/><text x="612.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="609" y="1108" width="5" height="15" fill="rgb(213,178,36)"/><text x="612.00" y="1118.50"></text></g><g><title>0x7f60bbb8f20d (?) (1 samples, 0.40%)</title><rect x="609" y="1124" width="5" height="15" fill="rgb(210,170,19)"/><text x="612.00" y="1134.50"></text></g><g><title>0x7f60bb99881b (?) (1 samples, 0.40%)</title><rect x="609" y="1140" width="5" height="15" fill="rgb(219,131,1)"/><text x="612.00" y="1150.50"></text></g><g><title>0x7f60bba025a9 (?) (1 samples, 0.40%)</title><rect x="609" y="1156" width="5" height="15" fill="rgb(227,224,35)"/><text x="612.00" y="1166.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="609" y="1172" width="5" height="15" fill="rgb(230,20,34)"/><text x="612.00" y="1182.50"></text></g><g><title>0x7f60bb998359 (?) (1 samples, 0.40%)</title><rect x="609" y="1188" width="5" height="15" fill="rgb(207,38,16)"/><text x="612.00" y="1198.50"></text></g><g><title>0x7f60bb97a17c (?) (1 samples, 0.40%)</title><rect x="609" y="1204" width="5" height="15" fill="rgb(224,101,9)"/><text x="612.00" y="1214.50"></text></g><g><title>0x7f60bb913d38 (?) (1 samples, 0.40%)</title><rect x="609" y="1220" width="5" height="15" fill="rgb(240,58,29)"/><text x="612.00" y="1230.50"></text></g><g><title>0x7f60bb978f39 (?) (1 samples, 0.40%)</title><rect x="609" y="1236" width="5" height="15" fill="rgb(241,194,10)"/><text x="612.00" y="1246.50"></text></g><g><title>0x7f60bb978cec (?) (1 samples, 0.40%)</title><rect x="609" y="1252" width="5" height="15" fill="rgb(246,81,7)"/><text x="612.00" y="1262.50"></text></g><g><title>0x7f60bb978b33 (?) (1 samples, 0.40%)</title><rect x="609" y="1268" width="5" height="15" fill="rgb(242,129,26)"/><text x="612.00" y="1278.50"></text></g><g><title>0x7f60bb99abb6 (?) (1 samples, 0.40%)</title><rect x="609" y="1284" width="5" height="15" fill="rgb(212,111,42)"/><text x="612.00" y="1294.50"></text></g><g><title>0x7f60bb99a839 (?) (1 samples, 0.40%)</title><rect x="609" y="1300" width="5" height="15" fill="rgb(219,166,19)"/><text x="612.00" y="1310.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:1) (3 samples, 1.20%)</title><rect x="604" y="148" width="14" height="15" fill="rgb(233,111,7)"/><text x="607.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="604" y="164" width="14" height="15" fill="rgb(233,170,39)"/><text x="607.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="604" y="180" width="14" height="15" fill="rgb(254,9,46)"/><text x="607.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="604" y="196" width="14" height="15" fill="rgb(232,42,45)"/><text x="607.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="604" y="212" width="14" height="15" fill="rgb(215,90,40)"/><text x="607.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="604" y="228" width="14" height="15" fill="rgb(225,148,13)"/><text x="607.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (2 samples, 0.80%)</title><rect x="609" y="244" width="9" height="15" fill="rgb(208,179,21)"/><text x="612.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.80%)</title><rect x="609" y="260" width="9" height="15" fill="rgb(227,65,7)"/><text x="612.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="609" y="276" width="9" height="15" fill="rgb(246,59,38)"/><text x="612.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="609" y="292" width="9" height="15" fill="rgb(230,170,18)"/><text x="612.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="609" y="308" width="9" height="15" fill="rgb(251,22,32)"/><text x="612.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="609" y="324" width="9" height="15" fill="rgb(224,55,9)"/><text x="612.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="609" y="340" width="9" height="15" fill="rgb(215,165,33)"/><text x="612.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="609" y="356" width="9" height="15" fill="rgb(209,174,44)"/><text x="612.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (2 samples, 0.80%)</title><rect x="609" y="372" width="9" height="15" fill="rgb(253,30,47)"/><text x="612.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.80%)</title><rect x="609" y="388" width="9" height="15" fill="rgb(215,113,48)"/><text x="612.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="609" y="404" width="9" height="15" fill="rgb(229,39,22)"/><text x="612.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="609" y="420" width="9" height="15" fill="rgb(221,218,34)"/><text x="612.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="609" y="436" width="9" height="15" fill="rgb(221,184,53)"/><text x="612.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="609" y="452" width="9" height="15" fill="rgb(221,130,49)"/><text x="612.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="609" y="468" width="9" height="15" fill="rgb(251,17,41)"/><text x="612.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="609" y="484" width="9" height="15" fill="rgb(244,40,16)"/><text x="612.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (2 samples, 0.80%)</title><rect x="609" y="500" width="9" height="15" fill="rgb(249,9,19)"/><text x="612.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="609" y="516" width="9" height="15" fill="rgb(218,75,14)"/><text x="612.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="609" y="532" width="9" height="15" fill="rgb(205,179,47)"/><text x="612.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="609" y="548" width="9" height="15" fill="rgb(239,43,39)"/><text x="612.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.80%)</title><rect x="609" y="564" width="9" height="15" fill="rgb(236,27,2)"/><text x="612.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="609" y="580" width="9" height="15" fill="rgb(205,120,53)"/><text x="612.00" y="590.50"></text></g><g><title>__pyx_pymod_exec_mtrand (mtrand.c:24362) (1 samples, 0.40%)</title><rect x="614" y="596" width="4" height="15" fill="rgb(236,201,5)"/><text x="617.00" y="606.50"></text></g><g><title>__Pyx_Import (mtrand.c:26199) (1 samples, 0.40%)</title><rect x="614" y="612" width="4" height="15" fill="rgb(234,5,39)"/><text x="617.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="614" y="628" width="4" height="15" fill="rgb(244,222,38)"/><text x="617.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="614" y="644" width="4" height="15" fill="rgb(226,160,54)"/><text x="617.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="614" y="660" width="4" height="15" fill="rgb(215,166,32)"/><text x="617.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="614" y="676" width="4" height="15" fill="rgb(206,106,10)"/><text x="617.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="614" y="692" width="4" height="15" fill="rgb(253,148,12)"/><text x="617.00" y="702.50"></text></g><g><title>__pyx_pymod_exec_mt19937 (mt19937.c:7465) (1 samples, 0.40%)</title><rect x="614" y="708" width="4" height="15" fill="rgb(250,165,18)"/><text x="617.00" y="718.50"></text></g><g><title>__Pyx_modinit_type_init_code (mt19937.c:7178) (1 samples, 0.40%)</title><rect x="614" y="724" width="4" height="15" fill="rgb(222,16,50)"/><text x="617.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="614" y="740" width="4" height="15" fill="rgb(252,112,24)"/><text x="617.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="614" y="756" width="4" height="15" fill="rgb(206,187,12)"/><text x="617.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="614" y="772" width="4" height="15" fill="rgb(218,54,50)"/><text x="617.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="614" y="788" width="4" height="15" fill="rgb(246,168,54)"/><text x="617.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="614" y="804" width="4" height="15" fill="rgb(210,22,0)"/><text x="617.00" y="814.50"></text></g><g><title>__pyx_pymod_exec_bit_generator (bit_generator.c:12906) (1 samples, 0.40%)</title><rect x="614" y="820" width="4" height="15" fill="rgb(225,187,15)"/><text x="617.00" y="830.50"></text></g><g><title>__Pyx_Import (bit_generator.c:15271) (1 samples, 0.40%)</title><rect x="614" y="836" width="4" height="15" fill="rgb(217,30,38)"/><text x="617.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="614" y="852" width="4" height="15" fill="rgb(254,146,52)"/><text x="617.00" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="614" y="868" width="4" height="15" fill="rgb(250,64,4)"/><text x="617.00" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="614" y="884" width="4" height="15" fill="rgb(225,210,21)"/><text x="617.00" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="614" y="900" width="4" height="15" fill="rgb(213,19,43)"/><text x="617.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="614" y="916" width="4" height="15" fill="rgb(208,21,29)"/><text x="617.00" y="926.50"></text></g><g><title>&lt;module&gt; (secrets.py:19) (1 samples, 0.40%)</title><rect x="614" y="932" width="4" height="15" fill="rgb(217,190,41)"/><text x="617.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="614" y="948" width="4" height="15" fill="rgb(220,70,36)"/><text x="617.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="614" y="964" width="4" height="15" fill="rgb(246,57,45)"/><text x="617.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="614" y="980" width="4" height="15" fill="rgb(237,74,32)"/><text x="617.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="614" y="996" width="4" height="15" fill="rgb(212,218,49)"/><text x="617.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="614" y="1012" width="4" height="15" fill="rgb(208,219,48)"/><text x="617.00" y="1022.50"></text></g><g><title>&lt;module&gt; (hmac.py:9) (1 samples, 0.40%)</title><rect x="614" y="1028" width="4" height="15" fill="rgb(225,67,48)"/><text x="617.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="614" y="1044" width="4" height="15" fill="rgb(219,130,46)"/><text x="617.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="614" y="1060" width="4" height="15" fill="rgb(243,142,41)"/><text x="617.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.40%)</title><rect x="614" y="1076" width="4" height="15" fill="rgb(229,192,36)"/><text x="617.00" y="1086.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.40%)</title><rect x="614" y="1092" width="4" height="15" fill="rgb(205,114,4)"/><text x="617.00" y="1102.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.40%)</title><rect x="614" y="1108" width="4" height="15" fill="rgb(250,195,8)"/><text x="617.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="614" y="1124" width="4" height="15" fill="rgb(244,106,6)"/><text x="617.00" y="1134.50"></text></g><g><title>PyInit__hashlib (_hashopenssl.c:1085) (1 samples, 0.40%)</title><rect x="614" y="1140" width="4" height="15" fill="rgb(247,77,41)"/><text x="617.00" y="1150.50"></text></g><g><title>OPENSSL_init_crypto (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1156" width="4" height="15" fill="rgb(209,99,31)"/><text x="617.00" y="1166.50"></text></g><g><title>CRYPTO_THREAD_run_once (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1172" width="4" height="15" fill="rgb(233,15,16)"/><text x="617.00" y="1182.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="614" y="1188" width="4" height="15" fill="rgb(211,48,46)"/><text x="617.00" y="1198.50"></text></g><g><title>0x7f60bb998359 (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1204" width="4" height="15" fill="rgb(238,109,5)"/><text x="617.00" y="1214.50"></text></g><g><title>0x7f60bb97a18e (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1220" width="4" height="15" fill="rgb(230,219,40)"/><text x="617.00" y="1230.50"></text></g><g><title>ERR_load_ASN1_strings (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1236" width="4" height="15" fill="rgb(235,73,35)"/><text x="617.00" y="1246.50"></text></g><g><title>ERR_load_strings_const (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1252" width="4" height="15" fill="rgb(210,138,26)"/><text x="617.00" y="1262.50"></text></g><g><title>ERR_load_ERR_strings (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1268" width="4" height="15" fill="rgb(251,8,22)"/><text x="617.00" y="1278.50"></text></g><g><title>0x7f60bb978b33 (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1284" width="4" height="15" fill="rgb(217,119,16)"/><text x="617.00" y="1294.50"></text></g><g><title>OPENSSL_LH_insert (libcrypto.so.1.1) (1 samples, 0.40%)</title><rect x="614" y="1300" width="4" height="15" fill="rgb(217,52,20)"/><text x="617.00" y="1310.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.40%)</title><rect x="623" y="948" width="5" height="15" fill="rgb(247,194,27)"/><text x="626.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:66) (1 samples, 0.40%)</title><rect x="623" y="964" width="5" height="15" fill="rgb(241,148,20)"/><text x="626.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.20%)</title><rect x="618" y="852" width="15" height="15" fill="rgb(245,168,45)"/><text x="621.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.20%)</title><rect x="618" y="868" width="15" height="15" fill="rgb(242,28,11)"/><text x="621.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.20%)</title><rect x="618" y="884" width="15" height="15" fill="rgb(239,208,38)"/><text x="621.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.20%)</title><rect x="618" y="900" width="15" height="15" fill="rgb(237,215,6)"/><text x="621.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 1.20%)</title><rect x="618" y="916" width="15" height="15" fill="rgb(205,121,46)"/><text x="621.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 1.20%)</title><rect x="618" y="932" width="15" height="15" fill="rgb(252,140,37)"/><text x="621.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.40%)</title><rect x="628" y="948" width="5" height="15" fill="rgb(253,110,48)"/><text x="631.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.40%)</title><rect x="628" y="964" width="5" height="15" fill="rgb(220,159,0)"/><text x="631.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.40%)</title><rect x="628" y="980" width="5" height="15" fill="rgb(214,114,9)"/><text x="631.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.40%)</title><rect x="628" y="996" width="5" height="15" fill="rgb(246,2,27)"/><text x="631.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.40%)</title><rect x="628" y="1012" width="5" height="15" fill="rgb(230,170,46)"/><text x="631.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:121) (1 samples, 0.40%)</title><rect x="628" y="1028" width="5" height="15" fill="rgb(210,117,6)"/><text x="631.00" y="1038.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.40%)</title><rect x="633" y="964" width="4" height="15" fill="rgb(213,89,13)"/><text x="636.00" y="974.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.80%)</title><rect x="633" y="884" width="9" height="15" fill="rgb(227,179,24)"/><text x="636.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.80%)</title><rect x="633" y="900" width="9" height="15" fill="rgb(225,57,29)"/><text x="636.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.80%)</title><rect x="633" y="916" width="9" height="15" fill="rgb(207,31,41)"/><text x="636.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.80%)</title><rect x="633" y="932" width="9" height="15" fill="rgb(211,169,23)"/><text x="636.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.80%)</title><rect x="633" y="948" width="9" height="15" fill="rgb(238,180,52)"/><text x="636.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.40%)</title><rect x="637" y="964" width="5" height="15" fill="rgb(221,63,25)"/><text x="640.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 1.20%)</title><rect x="633" y="852" width="14" height="15" fill="rgb(226,18,46)"/><text x="636.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 1.20%)</title><rect x="633" y="868" width="14" height="15" fill="rgb(252,130,44)"/><text x="636.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.40%)</title><rect x="642" y="884" width="5" height="15" fill="rgb(225,147,12)"/><text x="645.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.40%)</title><rect x="642" y="900" width="5" height="15" fill="rgb(243,161,39)"/><text x="645.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.40%)</title><rect x="642" y="916" width="5" height="15" fill="rgb(227,20,6)"/><text x="645.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.40%)</title><rect x="642" y="932" width="5" height="15" fill="rgb(252,188,1)"/><text x="645.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:2) (7 samples, 2.80%)</title><rect x="618" y="148" width="33" height="15" fill="rgb(221,70,22)"/><text x="621.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="164" width="33" height="15" fill="rgb(220,15,9)"/><text x="621.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.80%)</title><rect x="618" y="180" width="33" height="15" fill="rgb(226,39,33)"/><text x="621.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="196" width="33" height="15" fill="rgb(211,143,6)"/><text x="621.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="212" width="33" height="15" fill="rgb(254,93,46)"/><text x="621.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.80%)</title><rect x="618" y="228" width="33" height="15" fill="rgb(213,67,15)"/><text x="621.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.80%)</title><rect x="618" y="244" width="33" height="15" fill="rgb(214,225,41)"/><text x="621.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.80%)</title><rect x="618" y="260" width="33" height="15" fill="rgb(218,31,39)"/><text x="621.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="276" width="33" height="15" fill="rgb(234,99,28)"/><text x="621.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 2.80%)</title><rect x="618" y="292" width="33" height="15" fill="rgb(208,55,30)"/><text x="621.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="308" width="33" height="15" fill="rgb(246,180,51)"/><text x="621.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.80%)</title><rect x="618" y="324" width="33" height="15" fill="rgb(223,93,27)"/><text x="621.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.80%)</title><rect x="618" y="340" width="33" height="15" fill="rgb(223,143,13)"/><text x="621.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.80%)</title><rect x="618" y="356" width="33" height="15" fill="rgb(242,199,42)"/><text x="621.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="372" width="33" height="15" fill="rgb(223,147,1)"/><text x="621.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 2.80%)</title><rect x="618" y="388" width="33" height="15" fill="rgb(241,173,37)"/><text x="621.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="404" width="33" height="15" fill="rgb(214,153,17)"/><text x="621.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.80%)</title><rect x="618" y="420" width="33" height="15" fill="rgb(212,10,30)"/><text x="621.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.80%)</title><rect x="618" y="436" width="33" height="15" fill="rgb(224,206,47)"/><text x="621.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.80%)</title><rect x="618" y="452" width="33" height="15" fill="rgb(251,61,52)"/><text x="621.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="468" width="33" height="15" fill="rgb(240,31,1)"/><text x="621.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 2.80%)</title><rect x="618" y="484" width="33" height="15" fill="rgb(237,195,6)"/><text x="621.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="500" width="33" height="15" fill="rgb(249,102,5)"/><text x="621.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.80%)</title><rect x="618" y="516" width="33" height="15" fill="rgb(234,131,2)"/><text x="621.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.80%)</title><rect x="618" y="532" width="33" height="15" fill="rgb(213,58,34)"/><text x="621.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.80%)</title><rect x="618" y="548" width="33" height="15" fill="rgb(233,228,22)"/><text x="621.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="564" width="33" height="15" fill="rgb(218,19,15)"/><text x="621.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.80%)</title><rect x="618" y="580" width="33" height="15" fill="rgb(214,203,26)"/><text x="621.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="596" width="33" height="15" fill="rgb(215,133,53)"/><text x="621.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.80%)</title><rect x="618" y="612" width="33" height="15" fill="rgb(222,44,25)"/><text x="621.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="628" width="33" height="15" fill="rgb(210,106,52)"/><text x="621.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="644" width="33" height="15" fill="rgb(208,77,24)"/><text x="621.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.80%)</title><rect x="618" y="660" width="33" height="15" fill="rgb(205,208,32)"/><text x="621.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.80%)</title><rect x="618" y="676" width="33" height="15" fill="rgb(228,18,43)"/><text x="621.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.80%)</title><rect x="618" y="692" width="33" height="15" fill="rgb(252,132,11)"/><text x="621.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="708" width="33" height="15" fill="rgb(218,171,36)"/><text x="621.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 2.80%)</title><rect x="618" y="724" width="33" height="15" fill="rgb(240,131,33)"/><text x="621.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.80%)</title><rect x="618" y="740" width="33" height="15" fill="rgb(206,161,18)"/><text x="621.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.80%)</title><rect x="618" y="756" width="33" height="15" fill="rgb(224,201,36)"/><text x="621.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.80%)</title><rect x="618" y="772" width="33" height="15" fill="rgb(243,79,2)"/><text x="621.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.80%)</title><rect x="618" y="788" width="33" height="15" fill="rgb(253,52,1)"/><text x="621.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.80%)</title><rect x="618" y="804" width="33" height="15" fill="rgb(218,186,18)"/><text x="621.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 2.80%)</title><rect x="618" y="820" width="33" height="15" fill="rgb(232,226,37)"/><text x="621.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 2.80%)</title><rect x="618" y="836" width="33" height="15" fill="rgb(251,194,5)"/><text x="621.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.40%)</title><rect x="647" y="852" width="4" height="15" fill="rgb(217,99,21)"/><text x="650.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.40%)</title><rect x="647" y="868" width="4" height="15" fill="rgb(234,83,15)"/><text x="650.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.40%)</title><rect x="647" y="884" width="4" height="15" fill="rgb(205,114,3)"/><text x="650.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.40%)</title><rect x="647" y="900" width="4" height="15" fill="rgb(210,112,17)"/><text x="650.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2585) (1 samples, 0.40%)</title><rect x="647" y="916" width="4" height="15" fill="rgb(237,159,1)"/><text x="650.00" y="926.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.40%)</title><rect x="647" y="932" width="4" height="15" fill="rgb(225,195,20)"/><text x="650.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.40%)</title><rect x="651" y="1268" width="5" height="15" fill="rgb(206,221,34)"/><text x="654.00" y="1278.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:897) (1 samples, 0.40%)</title><rect x="651" y="1284" width="5" height="15" fill="rgb(233,229,42)"/><text x="654.00" y="1294.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:4) (2 samples, 0.80%)</title><rect x="651" y="148" width="10" height="15" fill="rgb(243,201,18)"/><text x="654.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="164" width="10" height="15" fill="rgb(251,100,34)"/><text x="654.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.80%)</title><rect x="651" y="180" width="10" height="15" fill="rgb(230,89,39)"/><text x="654.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="196" width="10" height="15" fill="rgb(214,178,26)"/><text x="654.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="212" width="10" height="15" fill="rgb(233,158,46)"/><text x="654.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="228" width="10" height="15" fill="rgb(225,214,29)"/><text x="654.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="244" width="10" height="15" fill="rgb(211,187,19)"/><text x="654.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="260" width="10" height="15" fill="rgb(245,149,54)"/><text x="654.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="276" width="10" height="15" fill="rgb(220,133,42)"/><text x="654.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.80%)</title><rect x="651" y="292" width="10" height="15" fill="rgb(206,125,49)"/><text x="654.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="308" width="10" height="15" fill="rgb(215,5,38)"/><text x="654.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="324" width="10" height="15" fill="rgb(218,106,43)"/><text x="654.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="340" width="10" height="15" fill="rgb(238,96,52)"/><text x="654.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="356" width="10" height="15" fill="rgb(216,161,25)"/><text x="654.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="372" width="10" height="15" fill="rgb(229,172,13)"/><text x="654.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.80%)</title><rect x="651" y="388" width="10" height="15" fill="rgb(252,169,19)"/><text x="654.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="404" width="10" height="15" fill="rgb(253,89,0)"/><text x="654.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="420" width="10" height="15" fill="rgb(238,64,35)"/><text x="654.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="436" width="10" height="15" fill="rgb(233,184,54)"/><text x="654.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="452" width="10" height="15" fill="rgb(222,143,12)"/><text x="654.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="468" width="10" height="15" fill="rgb(210,134,20)"/><text x="654.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.80%)</title><rect x="651" y="484" width="10" height="15" fill="rgb(213,74,2)"/><text x="654.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.80%)</title><rect x="651" y="500" width="10" height="15" fill="rgb(245,15,20)"/><text x="654.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="516" width="10" height="15" fill="rgb(228,155,14)"/><text x="654.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="532" width="10" height="15" fill="rgb(251,60,6)"/><text x="654.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="548" width="10" height="15" fill="rgb(213,27,26)"/><text x="654.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="564" width="10" height="15" fill="rgb(239,92,13)"/><text x="654.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="580" width="10" height="15" fill="rgb(220,221,38)"/><text x="654.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="596" width="10" height="15" fill="rgb(216,224,46)"/><text x="654.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.80%)</title><rect x="651" y="612" width="10" height="15" fill="rgb(239,135,39)"/><text x="654.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="628" width="10" height="15" fill="rgb(230,229,29)"/><text x="654.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="644" width="10" height="15" fill="rgb(248,136,1)"/><text x="654.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="660" width="10" height="15" fill="rgb(251,20,33)"/><text x="654.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="676" width="10" height="15" fill="rgb(215,106,18)"/><text x="654.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="692" width="10" height="15" fill="rgb(237,43,13)"/><text x="654.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.80%)</title><rect x="651" y="708" width="10" height="15" fill="rgb(229,185,33)"/><text x="654.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="724" width="10" height="15" fill="rgb(226,48,51)"/><text x="654.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="740" width="10" height="15" fill="rgb(206,155,50)"/><text x="654.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="756" width="10" height="15" fill="rgb(205,89,40)"/><text x="654.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="772" width="10" height="15" fill="rgb(228,215,45)"/><text x="654.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="788" width="10" height="15" fill="rgb(254,40,34)"/><text x="654.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.80%)</title><rect x="651" y="804" width="10" height="15" fill="rgb(212,85,27)"/><text x="654.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="820" width="10" height="15" fill="rgb(205,13,35)"/><text x="654.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="836" width="10" height="15" fill="rgb(213,21,18)"/><text x="654.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="852" width="10" height="15" fill="rgb(242,0,44)"/><text x="654.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="868" width="10" height="15" fill="rgb(229,160,24)"/><text x="654.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="884" width="10" height="15" fill="rgb(252,9,46)"/><text x="654.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.80%)</title><rect x="651" y="900" width="10" height="15" fill="rgb(218,20,21)"/><text x="654.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="916" width="10" height="15" fill="rgb(252,83,17)"/><text x="654.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="932" width="10" height="15" fill="rgb(223,156,38)"/><text x="654.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="948" width="10" height="15" fill="rgb(213,77,53)"/><text x="654.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="964" width="10" height="15" fill="rgb(227,215,16)"/><text x="654.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="980" width="10" height="15" fill="rgb(246,105,31)"/><text x="654.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.80%)</title><rect x="651" y="996" width="10" height="15" fill="rgb(207,12,1)"/><text x="654.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="1012" width="10" height="15" fill="rgb(216,162,42)"/><text x="654.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.80%)</title><rect x="651" y="1028" width="10" height="15" fill="rgb(217,75,42)"/><text x="654.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="1044" width="10" height="15" fill="rgb(233,20,22)"/><text x="654.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="1060" width="10" height="15" fill="rgb(229,159,13)"/><text x="654.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="1076" width="10" height="15" fill="rgb(226,124,49)"/><text x="654.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="1092" width="10" height="15" fill="rgb(238,105,41)"/><text x="654.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="1108" width="10" height="15" fill="rgb(233,89,54)"/><text x="654.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="1124" width="10" height="15" fill="rgb(208,38,5)"/><text x="654.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (2 samples, 0.80%)</title><rect x="651" y="1140" width="10" height="15" fill="rgb(236,128,20)"/><text x="654.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="1156" width="10" height="15" fill="rgb(212,47,46)"/><text x="654.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="651" y="1172" width="10" height="15" fill="rgb(226,13,54)"/><text x="654.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="651" y="1188" width="10" height="15" fill="rgb(212,154,20)"/><text x="654.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="651" y="1204" width="10" height="15" fill="rgb(248,79,18)"/><text x="654.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="651" y="1220" width="10" height="15" fill="rgb(220,195,25)"/><text x="654.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (2 samples, 0.80%)</title><rect x="651" y="1236" width="10" height="15" fill="rgb(218,14,9)"/><text x="654.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="651" y="1252" width="10" height="15" fill="rgb(217,61,44)"/><text x="654.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="656" y="1268" width="5" height="15" fill="rgb(248,82,46)"/><text x="659.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="656" y="1284" width="5" height="15" fill="rgb(214,86,11)"/><text x="659.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="656" y="1300" width="5" height="15" fill="rgb(224,202,14)"/><text x="659.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="656" y="1316" width="5" height="15" fill="rgb(221,54,41)"/><text x="659.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.40%)</title><rect x="656" y="1332" width="5" height="15" fill="rgb(205,87,37)"/><text x="659.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="656" y="1348" width="5" height="15" fill="rgb(241,108,43)"/><text x="659.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="656" y="1364" width="5" height="15" fill="rgb(226,190,51)"/><text x="659.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="656" y="1380" width="5" height="15" fill="rgb(232,73,24)"/><text x="659.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="656" y="1396" width="5" height="15" fill="rgb(234,11,38)"/><text x="659.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="656" y="1412" width="5" height="15" fill="rgb(221,134,31)"/><text x="659.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.40%)</title><rect x="656" y="1428" width="5" height="15" fill="rgb(213,112,20)"/><text x="659.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="656" y="1444" width="5" height="15" fill="rgb(211,53,50)"/><text x="659.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="656" y="1460" width="5" height="15" fill="rgb(237,145,49)"/><text x="659.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="656" y="1476" width="5" height="15" fill="rgb(215,78,44)"/><text x="659.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="656" y="1492" width="5" height="15" fill="rgb(230,107,34)"/><text x="659.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="656" y="1508" width="5" height="15" fill="rgb(219,144,15)"/><text x="659.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:96) (1 samples, 0.40%)</title><rect x="656" y="1524" width="5" height="15" fill="rgb(230,205,47)"/><text x="659.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="656" y="1540" width="5" height="15" fill="rgb(218,17,48)"/><text x="659.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="656" y="1556" width="5" height="15" fill="rgb(229,18,53)"/><text x="659.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="656" y="1572" width="5" height="15" fill="rgb(215,208,15)"/><text x="659.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="656" y="1588" width="5" height="15" fill="rgb(220,6,48)"/><text x="659.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="656" y="1604" width="5" height="15" fill="rgb(219,87,22)"/><text x="659.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="656" y="1620" width="5" height="15" fill="rgb(212,210,40)"/><text x="659.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="656" y="1636" width="5" height="15" fill="rgb(214,84,14)"/><text x="659.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_pslinux.py:122) (1 samples, 0.40%)</title><rect x="656" y="1652" width="5" height="15" fill="rgb(207,101,13)"/><text x="659.00" y="1662.50"></text></g><g><title>__new__ (enum.py:147) (1 samples, 0.40%)</title><rect x="656" y="1668" width="5" height="15" fill="rgb(215,121,27)"/><text x="659.00" y="1678.50"></text></g><g><title>_find_new_ (enum.py:495) (1 samples, 0.40%)</title><rect x="656" y="1684" width="5" height="15" fill="rgb(222,98,41)"/><text x="659.00" y="1694.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.40%)</title><rect x="661" y="340" width="5" height="15" fill="rgb(209,16,33)"/><text x="664.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="661" y="356" width="5" height="15" fill="rgb(254,31,3)"/><text x="664.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="661" y="372" width="5" height="15" fill="rgb(222,118,34)"/><text x="664.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="661" y="388" width="5" height="15" fill="rgb(212,11,2)"/><text x="664.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="661" y="404" width="5" height="15" fill="rgb(207,67,19)"/><text x="664.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="661" y="420" width="5" height="15" fill="rgb(226,192,30)"/><text x="664.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.40%)</title><rect x="661" y="436" width="5" height="15" fill="rgb(248,223,12)"/><text x="664.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="661" y="452" width="5" height="15" fill="rgb(225,221,22)"/><text x="664.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="661" y="468" width="5" height="15" fill="rgb(245,100,25)"/><text x="664.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="661" y="484" width="5" height="15" fill="rgb(248,229,6)"/><text x="664.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="661" y="500" width="5" height="15" fill="rgb(213,112,31)"/><text x="664.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="661" y="516" width="5" height="15" fill="rgb(236,25,29)"/><text x="664.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.40%)</title><rect x="661" y="532" width="5" height="15" fill="rgb(249,157,5)"/><text x="664.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="661" y="548" width="5" height="15" fill="rgb(223,156,32)"/><text x="664.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.40%)</title><rect x="661" y="564" width="5" height="15" fill="rgb(240,173,17)"/><text x="664.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="661" y="580" width="5" height="15" fill="rgb(213,212,16)"/><text x="664.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="661" y="596" width="5" height="15" fill="rgb(222,41,31)"/><text x="664.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="661" y="612" width="5" height="15" fill="rgb(247,81,44)"/><text x="664.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="661" y="628" width="5" height="15" fill="rgb(226,140,21)"/><text x="664.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="661" y="644" width="5" height="15" fill="rgb(232,190,18)"/><text x="664.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="661" y="660" width="5" height="15" fill="rgb(208,153,13)"/><text x="664.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:105) (1 samples, 0.40%)</title><rect x="661" y="676" width="5" height="15" fill="rgb(237,168,19)"/><text x="664.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="661" y="692" width="5" height="15" fill="rgb(244,126,52)"/><text x="664.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="661" y="708" width="5" height="15" fill="rgb(217,196,30)"/><text x="664.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="661" y="724" width="5" height="15" fill="rgb(252,101,36)"/><text x="664.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="661" y="740" width="5" height="15" fill="rgb(215,194,53)"/><text x="664.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="661" y="756" width="5" height="15" fill="rgb(246,163,7)"/><text x="664.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/mmio.py:105) (1 samples, 0.40%)</title><rect x="661" y="772" width="5" height="15" fill="rgb(210,203,0)"/><text x="664.00" y="782.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.40%)</title><rect x="666" y="628" width="4" height="15" fill="rgb(239,142,52)"/><text x="669.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="644" width="4" height="15" fill="rgb(254,97,8)"/><text x="669.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="660" width="4" height="15" fill="rgb(211,209,16)"/><text x="669.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="676" width="4" height="15" fill="rgb(226,4,47)"/><text x="669.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="666" y="692" width="4" height="15" fill="rgb(221,178,15)"/><text x="669.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="708" width="4" height="15" fill="rgb(232,217,50)"/><text x="669.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.40%)</title><rect x="666" y="724" width="4" height="15" fill="rgb(249,221,2)"/><text x="669.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="740" width="4" height="15" fill="rgb(217,121,36)"/><text x="669.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="756" width="4" height="15" fill="rgb(234,175,41)"/><text x="669.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="772" width="4" height="15" fill="rgb(227,187,46)"/><text x="669.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="666" y="788" width="4" height="15" fill="rgb(249,125,10)"/><text x="669.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="804" width="4" height="15" fill="rgb(245,78,12)"/><text x="669.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.40%)</title><rect x="666" y="820" width="4" height="15" fill="rgb(213,184,51)"/><text x="669.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="836" width="4" height="15" fill="rgb(224,32,20)"/><text x="669.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="852" width="4" height="15" fill="rgb(225,219,31)"/><text x="669.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="868" width="4" height="15" fill="rgb(252,36,40)"/><text x="669.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="666" y="884" width="4" height="15" fill="rgb(232,1,18)"/><text x="669.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="900" width="4" height="15" fill="rgb(225,220,43)"/><text x="669.00" y="910.50"></text></g><g><title>0x7f60a119040e (?) (1 samples, 0.40%)</title><rect x="666" y="916" width="4" height="15" fill="rgb(249,225,4)"/><text x="669.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="932" width="4" height="15" fill="rgb(226,37,7)"/><text x="669.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="948" width="4" height="15" fill="rgb(231,87,42)"/><text x="669.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="964" width="4" height="15" fill="rgb(224,125,26)"/><text x="669.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="666" y="980" width="4" height="15" fill="rgb(226,139,4)"/><text x="669.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="996" width="4" height="15" fill="rgb(215,50,23)"/><text x="669.00" y="1006.50"></text></g><g><title>0x7f60a0f49cd2 (?) (1 samples, 0.40%)</title><rect x="666" y="1012" width="4" height="15" fill="rgb(222,77,32)"/><text x="669.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="1028" width="4" height="15" fill="rgb(217,42,45)"/><text x="669.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="1044" width="4" height="15" fill="rgb(216,134,39)"/><text x="669.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="1060" width="4" height="15" fill="rgb(213,108,31)"/><text x="669.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="666" y="1076" width="4" height="15" fill="rgb(217,194,45)"/><text x="669.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="1092" width="4" height="15" fill="rgb(247,175,49)"/><text x="669.00" y="1102.50"></text></g><g><title>0x7f60a063f0e5 (?) (1 samples, 0.40%)</title><rect x="666" y="1108" width="4" height="15" fill="rgb(213,58,0)"/><text x="669.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="1124" width="4" height="15" fill="rgb(251,169,34)"/><text x="669.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="1140" width="4" height="15" fill="rgb(213,152,37)"/><text x="669.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="1156" width="4" height="15" fill="rgb(247,169,48)"/><text x="669.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="666" y="1172" width="4" height="15" fill="rgb(239,111,30)"/><text x="669.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="1188" width="4" height="15" fill="rgb(222,110,12)"/><text x="669.00" y="1198.50"></text></g><g><title>0x7f60a03c3e68 (?) (1 samples, 0.40%)</title><rect x="666" y="1204" width="4" height="15" fill="rgb(207,58,44)"/><text x="669.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="1220" width="4" height="15" fill="rgb(211,66,34)"/><text x="669.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="1236" width="4" height="15" fill="rgb(226,24,5)"/><text x="669.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="1252" width="4" height="15" fill="rgb(243,85,7)"/><text x="669.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="666" y="1268" width="4" height="15" fill="rgb(239,13,14)"/><text x="669.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="1284" width="4" height="15" fill="rgb(246,199,34)"/><text x="669.00" y="1294.50"></text></g><g><title>0x7f60a01542fb (?) (1 samples, 0.40%)</title><rect x="666" y="1300" width="4" height="15" fill="rgb(214,200,20)"/><text x="669.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="1316" width="4" height="15" fill="rgb(231,75,30)"/><text x="669.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="1332" width="4" height="15" fill="rgb(243,0,40)"/><text x="669.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="1348" width="4" height="15" fill="rgb(215,19,16)"/><text x="669.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="666" y="1364" width="4" height="15" fill="rgb(209,124,54)"/><text x="669.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="1380" width="4" height="15" fill="rgb(218,110,36)"/><text x="669.00" y="1390.50"></text></g><g><title>0x7f609ff38153 (?) (1 samples, 0.40%)</title><rect x="666" y="1396" width="4" height="15" fill="rgb(248,146,35)"/><text x="669.00" y="1406.50"></text></g><g><title>0x7f609ff36c13 (?) (1 samples, 0.40%)</title><rect x="666" y="1412" width="4" height="15" fill="rgb(245,184,10)"/><text x="669.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="666" y="1428" width="4" height="15" fill="rgb(245,37,28)"/><text x="669.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="666" y="1444" width="4" height="15" fill="rgb(236,226,7)"/><text x="669.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="666" y="1460" width="4" height="15" fill="rgb(239,25,31)"/><text x="669.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.40%)</title><rect x="666" y="1476" width="4" height="15" fill="rgb(234,147,47)"/><text x="669.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="666" y="1492" width="4" height="15" fill="rgb(235,117,32)"/><text x="669.00" y="1502.50"></text></g><g><title>0x7f609fc93181 (?) (1 samples, 0.40%)</title><rect x="666" y="1508" width="4" height="15" fill="rgb(254,105,25)"/><text x="669.00" y="1518.50"></text></g><g><title>0x7f609fc961c9 (?) (1 samples, 0.40%)</title><rect x="666" y="1524" width="4" height="15" fill="rgb(254,70,0)"/><text x="669.00" y="1534.50"></text></g><g><title>0x7f609fcc2167 (?) (1 samples, 0.40%)</title><rect x="666" y="1540" width="4" height="15" fill="rgb(224,183,52)"/><text x="669.00" y="1550.50"></text></g><g><title>0x7f609fcbdb64 (?) (1 samples, 0.40%)</title><rect x="666" y="1556" width="4" height="15" fill="rgb(247,86,28)"/><text x="669.00" y="1566.50"></text></g><g><title>0x7f609fca107b (?) (1 samples, 0.40%)</title><rect x="666" y="1572" width="4" height="15" fill="rgb(209,101,9)"/><text x="669.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.40%)</title><rect x="666" y="1588" width="4" height="15" fill="rgb(212,224,11)"/><text x="669.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.40%)</title><rect x="666" y="1604" width="4" height="15" fill="rgb(236,163,8)"/><text x="669.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.40%)</title><rect x="666" y="1620" width="4" height="15" fill="rgb(245,199,49)"/><text x="669.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:97) (1 samples, 0.40%)</title><rect x="666" y="1636" width="4" height="15" fill="rgb(212,203,7)"/><text x="669.00" y="1646.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.40%)</title><rect x="666" y="1652" width="4" height="15" fill="rgb(231,42,4)"/><text x="669.00" y="1662.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.40%)</title><rect x="666" y="1668" width="4" height="15" fill="rgb(205,100,54)"/><text x="669.00" y="1678.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.40%)</title><rect x="666" y="1684" width="4" height="15" fill="rgb(216,133,26)"/><text x="669.00" y="1694.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:1353) (1 samples, 0.40%)</title><rect x="670" y="916" width="5" height="15" fill="rgb(207,85,19)"/><text x="673.00" y="926.50"></text></g><g><title>DataFrameGroupBy (pandas/core/groupby/generic.py:1360) (1 samples, 0.40%)</title><rect x="670" y="932" width="5" height="15" fill="rgb(211,79,20)"/><text x="673.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.20%)</title><rect x="666" y="436" width="14" height="15" fill="rgb(217,176,36)"/><text x="669.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="666" y="452" width="14" height="15" fill="rgb(207,32,22)"/><text x="669.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="666" y="468" width="14" height="15" fill="rgb(243,1,15)"/><text x="669.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="666" y="484" width="14" height="15" fill="rgb(242,166,33)"/><text x="669.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="666" y="500" width="14" height="15" fill="rgb(253,39,27)"/><text x="669.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="666" y="516" width="14" height="15" fill="rgb(247,108,43)"/><text x="669.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.20%)</title><rect x="666" y="532" width="14" height="15" fill="rgb(240,31,6)"/><text x="669.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="666" y="548" width="14" height="15" fill="rgb(209,98,12)"/><text x="669.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="666" y="564" width="14" height="15" fill="rgb(236,55,51)"/><text x="669.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="666" y="580" width="14" height="15" fill="rgb(210,142,20)"/><text x="669.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="666" y="596" width="14" height="15" fill="rgb(226,7,14)"/><text x="669.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="666" y="612" width="14" height="15" fill="rgb(210,26,45)"/><text x="669.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.80%)</title><rect x="670" y="628" width="10" height="15" fill="rgb(219,82,20)"/><text x="673.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="670" y="644" width="10" height="15" fill="rgb(238,118,19)"/><text x="673.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="670" y="660" width="10" height="15" fill="rgb(211,212,33)"/><text x="673.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="670" y="676" width="10" height="15" fill="rgb(229,223,48)"/><text x="673.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="670" y="692" width="10" height="15" fill="rgb(235,82,42)"/><text x="673.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="670" y="708" width="10" height="15" fill="rgb(208,21,0)"/><text x="673.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.80%)</title><rect x="670" y="724" width="10" height="15" fill="rgb(215,182,20)"/><text x="673.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="670" y="740" width="10" height="15" fill="rgb(219,130,25)"/><text x="673.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="670" y="756" width="10" height="15" fill="rgb(233,11,5)"/><text x="673.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="670" y="772" width="10" height="15" fill="rgb(225,137,34)"/><text x="673.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="670" y="788" width="10" height="15" fill="rgb(235,50,52)"/><text x="673.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="670" y="804" width="10" height="15" fill="rgb(234,124,17)"/><text x="673.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.80%)</title><rect x="670" y="820" width="10" height="15" fill="rgb(238,181,13)"/><text x="673.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="670" y="836" width="10" height="15" fill="rgb(226,211,5)"/><text x="673.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="670" y="852" width="10" height="15" fill="rgb(241,38,39)"/><text x="673.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="670" y="868" width="10" height="15" fill="rgb(220,212,32)"/><text x="673.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="670" y="884" width="10" height="15" fill="rgb(223,59,35)"/><text x="673.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="670" y="900" width="10" height="15" fill="rgb(243,210,44)"/><text x="673.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.40%)</title><rect x="675" y="916" width="5" height="15" fill="rgb(235,207,46)"/><text x="678.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="932" width="5" height="15" fill="rgb(242,79,18)"/><text x="678.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="675" y="948" width="5" height="15" fill="rgb(251,132,23)"/><text x="678.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="675" y="964" width="5" height="15" fill="rgb(246,98,6)"/><text x="678.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="675" y="980" width="5" height="15" fill="rgb(220,204,45)"/><text x="678.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="675" y="996" width="5" height="15" fill="rgb(245,205,54)"/><text x="678.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.40%)</title><rect x="675" y="1012" width="5" height="15" fill="rgb(221,227,54)"/><text x="678.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="1028" width="5" height="15" fill="rgb(226,156,44)"/><text x="678.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="675" y="1044" width="5" height="15" fill="rgb(211,64,29)"/><text x="678.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="675" y="1060" width="5" height="15" fill="rgb(223,152,51)"/><text x="678.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="675" y="1076" width="5" height="15" fill="rgb(216,137,9)"/><text x="678.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="675" y="1092" width="5" height="15" fill="rgb(250,147,50)"/><text x="678.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.40%)</title><rect x="675" y="1108" width="5" height="15" fill="rgb(210,134,33)"/><text x="678.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="1124" width="5" height="15" fill="rgb(252,9,0)"/><text x="678.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="675" y="1140" width="5" height="15" fill="rgb(211,90,23)"/><text x="678.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="675" y="1156" width="5" height="15" fill="rgb(254,140,25)"/><text x="678.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="675" y="1172" width="5" height="15" fill="rgb(240,7,52)"/><text x="678.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="675" y="1188" width="5" height="15" fill="rgb(223,159,32)"/><text x="678.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.40%)</title><rect x="675" y="1204" width="5" height="15" fill="rgb(236,211,25)"/><text x="678.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="1220" width="5" height="15" fill="rgb(248,35,45)"/><text x="678.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="675" y="1236" width="5" height="15" fill="rgb(230,113,15)"/><text x="678.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="675" y="1252" width="5" height="15" fill="rgb(206,52,47)"/><text x="678.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="675" y="1268" width="5" height="15" fill="rgb(232,118,30)"/><text x="678.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="675" y="1284" width="5" height="15" fill="rgb(222,170,48)"/><text x="678.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.40%)</title><rect x="675" y="1300" width="5" height="15" fill="rgb(252,180,51)"/><text x="678.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="1316" width="5" height="15" fill="rgb(223,17,30)"/><text x="678.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="675" y="1332" width="5" height="15" fill="rgb(239,115,38)"/><text x="678.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="675" y="1348" width="5" height="15" fill="rgb(222,190,27)"/><text x="678.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="675" y="1364" width="5" height="15" fill="rgb(225,222,45)"/><text x="678.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="675" y="1380" width="5" height="15" fill="rgb(245,200,40)"/><text x="678.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.40%)</title><rect x="675" y="1396" width="5" height="15" fill="rgb(226,84,25)"/><text x="678.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="1412" width="5" height="15" fill="rgb(212,201,38)"/><text x="678.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="675" y="1428" width="5" height="15" fill="rgb(237,151,8)"/><text x="678.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="675" y="1444" width="5" height="15" fill="rgb(251,153,40)"/><text x="678.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="675" y="1460" width="5" height="15" fill="rgb(205,112,1)"/><text x="678.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="675" y="1476" width="5" height="15" fill="rgb(240,185,53)"/><text x="678.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.40%)</title><rect x="675" y="1492" width="5" height="15" fill="rgb(235,109,35)"/><text x="678.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="1508" width="5" height="15" fill="rgb(254,29,13)"/><text x="678.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.40%)</title><rect x="675" y="1524" width="5" height="15" fill="rgb(216,156,31)"/><text x="678.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="675" y="1540" width="5" height="15" fill="rgb(249,222,25)"/><text x="678.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="675" y="1556" width="5" height="15" fill="rgb(217,159,26)"/><text x="678.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="675" y="1572" width="5" height="15" fill="rgb(232,26,6)"/><text x="678.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="675" y="1588" width="5" height="15" fill="rgb(248,189,10)"/><text x="678.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.40%)</title><rect x="675" y="1604" width="5" height="15" fill="rgb(243,139,20)"/><text x="678.00" y="1614.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.40%)</title><rect x="675" y="1620" width="5" height="15" fill="rgb(213,27,12)"/><text x="678.00" y="1630.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.40%)</title><rect x="675" y="1636" width="5" height="15" fill="rgb(206,138,14)"/><text x="678.00" y="1646.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.40%)</title><rect x="680" y="1396" width="4" height="15" fill="rgb(252,81,54)"/><text x="683.00" y="1406.50"></text></g><g><title>_tokenize (tokenize.py:583) (2 samples, 0.80%)</title><rect x="680" y="1380" width="9" height="15" fill="rgb(227,210,6)"/><text x="683.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.40%)</title><rect x="684" y="1396" width="5" height="15" fill="rgb(211,131,20)"/><text x="687.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.40%)</title><rect x="684" y="1412" width="5" height="15" fill="rgb(248,109,0)"/><text x="687.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 1.20%)</title><rect x="680" y="1108" width="14" height="15" fill="rgb(246,104,53)"/><text x="683.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="680" y="1124" width="14" height="15" fill="rgb(237,60,5)"/><text x="683.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="680" y="1140" width="14" height="15" fill="rgb(251,214,37)"/><text x="683.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="680" y="1156" width="14" height="15" fill="rgb(231,92,9)"/><text x="683.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="680" y="1172" width="14" height="15" fill="rgb(214,170,49)"/><text x="683.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="680" y="1188" width="14" height="15" fill="rgb(246,55,43)"/><text x="683.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (3 samples, 1.20%)</title><rect x="680" y="1204" width="14" height="15" fill="rgb(244,173,34)"/><text x="683.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="680" y="1220" width="14" height="15" fill="rgb(242,189,51)"/><text x="683.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="680" y="1236" width="14" height="15" fill="rgb(235,141,31)"/><text x="683.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="680" y="1252" width="14" height="15" fill="rgb(214,214,6)"/><text x="683.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="680" y="1268" width="14" height="15" fill="rgb(207,126,26)"/><text x="683.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="680" y="1284" width="14" height="15" fill="rgb(231,82,43)"/><text x="683.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (3 samples, 1.20%)</title><rect x="680" y="1300" width="14" height="15" fill="rgb(245,46,53)"/><text x="683.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (3 samples, 1.20%)</title><rect x="680" y="1316" width="14" height="15" fill="rgb(240,94,33)"/><text x="683.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (3 samples, 1.20%)</title><rect x="680" y="1332" width="14" height="15" fill="rgb(218,47,40)"/><text x="683.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (3 samples, 1.20%)</title><rect x="680" y="1348" width="14" height="15" fill="rgb(249,103,52)"/><text x="683.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (3 samples, 1.20%)</title><rect x="680" y="1364" width="14" height="15" fill="rgb(251,134,33)"/><text x="683.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:656) (1 samples, 0.40%)</title><rect x="689" y="1380" width="5" height="15" fill="rgb(246,69,38)"/><text x="692.00" y="1390.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.40%)</title><rect x="694" y="1572" width="5" height="15" fill="rgb(243,38,46)"/><text x="697.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.40%)</title><rect x="694" y="1588" width="5" height="15" fill="rgb(205,99,22)"/><text x="697.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.40%)</title><rect x="694" y="1604" width="5" height="15" fill="rgb(241,222,27)"/><text x="697.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:438) (1 samples, 0.40%)</title><rect x="694" y="1620" width="5" height="15" fill="rgb(228,149,30)"/><text x="697.00" y="1630.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.40%)</title><rect x="694" y="1636" width="5" height="15" fill="rgb(211,119,18)"/><text x="697.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:4) (21 samples, 8.40%)</title><rect x="604" y="52" width="99" height="15" fill="rgb(246,202,24)"/><text x="607.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 8.40%)</title><rect x="604" y="68" width="99" height="15" fill="rgb(246,41,1)"/><text x="607.00" y="78.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 8.40%)</title><rect x="604" y="84" width="99" height="15" fill="rgb(216,103,25)"/><text x="607.00" y="94.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 8.40%)</title><rect x="604" y="100" width="99" height="15" fill="rgb(240,149,51)"/><text x="607.00" y="110.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 8.40%)</title><rect x="604" y="116" width="99" height="15" fill="rgb(251,60,25)"/><text x="607.00" y="126.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 8.40%)</title><rect x="604" y="132" width="99" height="15" fill="rgb(234,134,0)"/><text x="607.00" y="142.50">_call_with_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:7) (9 samples, 3.60%)</title><rect x="661" y="148" width="42" height="15" fill="rgb(238,108,50)"/><text x="664.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.60%)</title><rect x="661" y="164" width="42" height="15" fill="rgb(213,1,7)"/><text x="664.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.60%)</title><rect x="661" y="180" width="42" height="15" fill="rgb(240,183,39)"/><text x="664.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.60%)</title><rect x="661" y="196" width="42" height="15" fill="rgb(211,200,40)"/><text x="664.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.60%)</title><rect x="661" y="212" width="42" height="15" fill="rgb(250,123,36)"/><text x="664.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.60%)</title><rect x="661" y="228" width="42" height="15" fill="rgb(245,209,47)"/><text x="664.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 3.60%)</title><rect x="661" y="244" width="42" height="15" fill="rgb(241,203,1)"/><text x="664.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.60%)</title><rect x="661" y="260" width="42" height="15" fill="rgb(251,14,0)"/><text x="664.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.60%)</title><rect x="661" y="276" width="42" height="15" fill="rgb(235,128,20)"/><text x="664.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.60%)</title><rect x="661" y="292" width="42" height="15" fill="rgb(215,66,7)"/><text x="664.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.60%)</title><rect x="661" y="308" width="42" height="15" fill="rgb(247,51,28)"/><text x="664.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.60%)</title><rect x="661" y="324" width="42" height="15" fill="rgb(220,33,4)"/><text x="664.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 3.20%)</title><rect x="666" y="340" width="37" height="15" fill="rgb(212,153,47)"/><text x="669.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.20%)</title><rect x="666" y="356" width="37" height="15" fill="rgb(254,3,35)"/><text x="669.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.20%)</title><rect x="666" y="372" width="37" height="15" fill="rgb(229,176,15)"/><text x="669.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.20%)</title><rect x="666" y="388" width="37" height="15" fill="rgb(253,201,13)"/><text x="669.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.20%)</title><rect x="666" y="404" width="37" height="15" fill="rgb(231,21,1)"/><text x="669.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.20%)</title><rect x="666" y="420" width="37" height="15" fill="rgb(254,34,12)"/><text x="669.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 2.00%)</title><rect x="680" y="436" width="23" height="15" fill="rgb(238,43,20)"/><text x="683.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="452" width="23" height="15" fill="rgb(206,208,4)"/><text x="683.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 2.00%)</title><rect x="680" y="468" width="23" height="15" fill="rgb(231,50,46)"/><text x="683.00" y="478.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="484" width="23" height="15" fill="rgb(215,83,12)"/><text x="683.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="500" width="23" height="15" fill="rgb(233,151,19)"/><text x="683.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.00%)</title><rect x="680" y="516" width="23" height="15" fill="rgb(239,139,25)"/><text x="683.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.00%)</title><rect x="680" y="532" width="23" height="15" fill="rgb(205,68,23)"/><text x="683.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.00%)</title><rect x="680" y="548" width="23" height="15" fill="rgb(212,35,31)"/><text x="683.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="564" width="23" height="15" fill="rgb(210,91,10)"/><text x="683.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 2.00%)</title><rect x="680" y="580" width="23" height="15" fill="rgb(211,64,52)"/><text x="683.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="596" width="23" height="15" fill="rgb(225,193,54)"/><text x="683.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.00%)</title><rect x="680" y="612" width="23" height="15" fill="rgb(235,102,26)"/><text x="683.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.00%)</title><rect x="680" y="628" width="23" height="15" fill="rgb(213,50,0)"/><text x="683.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.00%)</title><rect x="680" y="644" width="23" height="15" fill="rgb(244,104,32)"/><text x="683.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="660" width="23" height="15" fill="rgb(207,157,28)"/><text x="683.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 2.00%)</title><rect x="680" y="676" width="23" height="15" fill="rgb(224,54,28)"/><text x="683.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="692" width="23" height="15" fill="rgb(235,37,42)"/><text x="683.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.00%)</title><rect x="680" y="708" width="23" height="15" fill="rgb(239,20,12)"/><text x="683.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.00%)</title><rect x="680" y="724" width="23" height="15" fill="rgb(244,131,43)"/><text x="683.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.00%)</title><rect x="680" y="740" width="23" height="15" fill="rgb(222,1,18)"/><text x="683.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="756" width="23" height="15" fill="rgb(219,187,4)"/><text x="683.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 2.00%)</title><rect x="680" y="772" width="23" height="15" fill="rgb(242,145,16)"/><text x="683.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="788" width="23" height="15" fill="rgb(228,196,33)"/><text x="683.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.00%)</title><rect x="680" y="804" width="23" height="15" fill="rgb(230,107,31)"/><text x="683.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.00%)</title><rect x="680" y="820" width="23" height="15" fill="rgb(217,111,19)"/><text x="683.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.00%)</title><rect x="680" y="836" width="23" height="15" fill="rgb(253,216,18)"/><text x="683.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="852" width="23" height="15" fill="rgb(246,216,22)"/><text x="683.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 2.00%)</title><rect x="680" y="868" width="23" height="15" fill="rgb(245,144,33)"/><text x="683.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="884" width="23" height="15" fill="rgb(244,105,11)"/><text x="683.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 2.00%)</title><rect x="680" y="900" width="23" height="15" fill="rgb(252,171,47)"/><text x="683.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="916" width="23" height="15" fill="rgb(248,220,4)"/><text x="683.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="932" width="23" height="15" fill="rgb(234,187,38)"/><text x="683.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.00%)</title><rect x="680" y="948" width="23" height="15" fill="rgb(221,23,10)"/><text x="683.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.00%)</title><rect x="680" y="964" width="23" height="15" fill="rgb(226,57,18)"/><text x="683.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.00%)</title><rect x="680" y="980" width="23" height="15" fill="rgb(226,145,45)"/><text x="683.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="996" width="23" height="15" fill="rgb(251,2,25)"/><text x="683.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 2.00%)</title><rect x="680" y="1012" width="23" height="15" fill="rgb(219,220,41)"/><text x="683.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.00%)</title><rect x="680" y="1028" width="23" height="15" fill="rgb(212,182,7)"/><text x="683.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.00%)</title><rect x="680" y="1044" width="23" height="15" fill="rgb(234,27,25)"/><text x="683.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.00%)</title><rect x="680" y="1060" width="23" height="15" fill="rgb(227,8,1)"/><text x="683.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.00%)</title><rect x="680" y="1076" width="23" height="15" fill="rgb(207,192,53)"/><text x="683.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.00%)</title><rect x="680" y="1092" width="23" height="15" fill="rgb(247,93,24)"/><text x="683.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.80%)</title><rect x="694" y="1108" width="9" height="15" fill="rgb(233,84,51)"/><text x="697.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.80%)</title><rect x="694" y="1124" width="9" height="15" fill="rgb(206,92,29)"/><text x="697.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="694" y="1140" width="9" height="15" fill="rgb(240,72,18)"/><text x="697.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="694" y="1156" width="9" height="15" fill="rgb(243,178,3)"/><text x="697.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="694" y="1172" width="9" height="15" fill="rgb(216,164,18)"/><text x="697.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="694" y="1188" width="9" height="15" fill="rgb(240,6,0)"/><text x="697.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="694" y="1204" width="9" height="15" fill="rgb(236,229,28)"/><text x="697.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="694" y="1220" width="9" height="15" fill="rgb(252,23,30)"/><text x="697.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.80%)</title><rect x="694" y="1236" width="9" height="15" fill="rgb(211,5,24)"/><text x="697.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.80%)</title><rect x="694" y="1252" width="9" height="15" fill="rgb(214,23,15)"/><text x="697.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="694" y="1268" width="9" height="15" fill="rgb(251,140,37)"/><text x="697.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="694" y="1284" width="9" height="15" fill="rgb(254,173,43)"/><text x="697.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="694" y="1300" width="9" height="15" fill="rgb(222,132,17)"/><text x="697.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="694" y="1316" width="9" height="15" fill="rgb(223,70,13)"/><text x="697.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="694" y="1332" width="9" height="15" fill="rgb(229,112,27)"/><text x="697.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="694" y="1348" width="9" height="15" fill="rgb(249,24,40)"/><text x="697.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.80%)</title><rect x="694" y="1364" width="9" height="15" fill="rgb(234,88,47)"/><text x="697.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="694" y="1380" width="9" height="15" fill="rgb(239,12,41)"/><text x="697.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="694" y="1396" width="9" height="15" fill="rgb(208,40,3)"/><text x="697.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="694" y="1412" width="9" height="15" fill="rgb(209,85,28)"/><text x="697.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="694" y="1428" width="9" height="15" fill="rgb(227,55,46)"/><text x="697.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="694" y="1444" width="9" height="15" fill="rgb(206,20,32)"/><text x="697.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.80%)</title><rect x="694" y="1460" width="9" height="15" fill="rgb(211,50,2)"/><text x="697.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.80%)</title><rect x="694" y="1476" width="9" height="15" fill="rgb(212,1,1)"/><text x="697.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.80%)</title><rect x="694" y="1492" width="9" height="15" fill="rgb(234,3,29)"/><text x="697.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.80%)</title><rect x="694" y="1508" width="9" height="15" fill="rgb(205,84,37)"/><text x="697.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.80%)</title><rect x="694" y="1524" width="9" height="15" fill="rgb(248,222,29)"/><text x="697.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.80%)</title><rect x="694" y="1540" width="9" height="15" fill="rgb(233,181,38)"/><text x="697.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.80%)</title><rect x="694" y="1556" width="9" height="15" fill="rgb(238,56,10)"/><text x="697.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:73) (1 samples, 0.40%)</title><rect x="699" y="1572" width="4" height="15" fill="rgb(224,115,36)"/><text x="702.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.40%)</title><rect x="699" y="1588" width="4" height="15" fill="rgb(246,126,21)"/><text x="702.00" y="1598.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:28) (1 samples, 0.40%)</title><rect x="703" y="84" width="5" height="15" fill="rgb(224,80,33)"/><text x="706.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.40%)</title><rect x="703" y="100" width="5" height="15" fill="rgb(211,106,21)"/><text x="706.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:255) (1 samples, 0.40%)</title><rect x="703" y="116" width="5" height="15" fill="rgb(229,160,32)"/><text x="706.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.40%)</title><rect x="703" y="132" width="5" height="15" fill="rgb(241,175,15)"/><text x="706.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.40%)</title><rect x="703" y="148" width="5" height="15" fill="rgb(252,102,43)"/><text x="706.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.40%)</title><rect x="703" y="164" width="5" height="15" fill="rgb(227,19,32)"/><text x="706.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.40%)</title><rect x="703" y="180" width="5" height="15" fill="rgb(226,179,21)"/><text x="706.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.40%)</title><rect x="703" y="196" width="5" height="15" fill="rgb(243,107,42)"/><text x="706.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="703" y="212" width="5" height="15" fill="rgb(217,43,15)"/><text x="706.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="703" y="228" width="5" height="15" fill="rgb(237,77,41)"/><text x="706.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="703" y="244" width="5" height="15" fill="rgb(208,130,17)"/><text x="706.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="703" y="260" width="5" height="15" fill="rgb(210,211,32)"/><text x="706.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="703" y="276" width="5" height="15" fill="rgb(206,29,39)"/><text x="706.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.40%)</title><rect x="703" y="292" width="5" height="15" fill="rgb(240,78,10)"/><text x="706.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="703" y="308" width="5" height="15" fill="rgb(253,84,49)"/><text x="706.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="703" y="324" width="5" height="15" fill="rgb(211,107,1)"/><text x="706.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="703" y="340" width="5" height="15" fill="rgb(252,139,35)"/><text x="706.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="703" y="356" width="5" height="15" fill="rgb(234,98,30)"/><text x="706.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="703" y="372" width="5" height="15" fill="rgb(221,52,11)"/><text x="706.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.40%)</title><rect x="703" y="388" width="5" height="15" fill="rgb(232,27,0)"/><text x="706.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.40%)</title><rect x="703" y="404" width="5" height="15" fill="rgb(238,48,54)"/><text x="706.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.40%)</title><rect x="703" y="420" width="5" height="15" fill="rgb(220,48,29)"/><text x="706.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.40%)</title><rect x="703" y="436" width="5" height="15" fill="rgb(230,69,11)"/><text x="706.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.40%)</title><rect x="703" y="452" width="5" height="15" fill="rgb(228,181,46)"/><text x="706.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:44) (1 samples, 0.40%)</title><rect x="703" y="468" width="5" height="15" fill="rgb(230,171,3)"/><text x="706.00" y="478.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:18) (1 samples, 0.40%)</title><rect x="708" y="100" width="5" height="15" fill="rgb(238,74,4)"/><text x="711.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.40%)</title><rect x="708" y="116" width="5" height="15" fill="rgb(209,55,49)"/><text x="711.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (1 samples, 0.40%)</title><rect x="708" y="132" width="5" height="15" fill="rgb(216,72,37)"/><text x="711.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.40%)</title><rect x="708" y="148" width="5" height="15" fill="rgb(238,20,16)"/><text x="711.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.40%)</title><rect x="708" y="164" width="5" height="15" fill="rgb(234,123,0)"/><text x="711.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.40%)</title><rect x="708" y="180" width="5" height="15" fill="rgb(250,153,27)"/><text x="711.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.40%)</title><rect x="708" y="196" width="5" height="15" fill="rgb(236,123,46)"/><text x="711.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.40%)</title><rect x="708" y="212" width="5" height="15" fill="rgb(248,85,37)"/><text x="711.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (1 samples, 0.40%)</title><rect x="708" y="228" width="5" height="15" fill="rgb(245,167,16)"/><text x="711.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.40%)</title><rect x="708" y="244" width="5" height="15" fill="rgb(223,48,53)"/><text x="711.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.40%)</title><rect x="713" y="116" width="5" height="15" fill="rgb(215,89,32)"/><text x="716.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.40%)</title><rect x="713" y="132" width="5" height="15" fill="rgb(243,131,45)"/><text x="716.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.40%)</title><rect x="713" y="148" width="5" height="15" fill="rgb(224,66,24)"/><text x="716.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.40%)</title><rect x="722" y="148" width="5" height="15" fill="rgb(206,142,39)"/><text x="725.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.40%)</title><rect x="732" y="164" width="4" height="15" fill="rgb(219,110,40)"/><text x="735.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.40%)</title><rect x="736" y="164" width="5" height="15" fill="rgb(251,203,16)"/><text x="739.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (2 samples, 0.80%)</title><rect x="741" y="164" width="10" height="15" fill="rgb(207,178,30)"/><text x="744.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.40%)</title><rect x="751" y="164" width="4" height="15" fill="rgb(226,215,11)"/><text x="754.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 2.00%)</title><rect x="765" y="180" width="23" height="15" fill="rgb(254,56,6)"/><text x="768.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.80%)</title><rect x="779" y="196" width="9" height="15" fill="rgb(211,19,12)"/><text x="782.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.40%)</title><rect x="802" y="244" width="5" height="15" fill="rgb(215,143,20)"/><text x="805.00" y="254.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.40%)</title><rect x="812" y="292" width="5" height="15" fill="rgb(230,152,21)"/><text x="815.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.40%)</title><rect x="817" y="308" width="4" height="15" fill="rgb(218,92,7)"/><text x="820.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.40%)</title><rect x="817" y="324" width="4" height="15" fill="rgb(233,148,19)"/><text x="820.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.40%)</title><rect x="817" y="340" width="4" height="15" fill="rgb(246,221,8)"/><text x="820.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.40%)</title><rect x="817" y="356" width="4" height="15" fill="rgb(250,10,35)"/><text x="820.00" y="366.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:858) (1 samples, 0.40%)</title><rect x="817" y="372" width="4" height="15" fill="rgb(222,124,42)"/><text x="820.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.40%)</title><rect x="821" y="324" width="5" height="15" fill="rgb(236,129,44)"/><text x="824.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.40%)</title><rect x="821" y="340" width="5" height="15" fill="rgb(212,226,26)"/><text x="824.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.40%)</title><rect x="821" y="356" width="5" height="15" fill="rgb(216,96,54)"/><text x="824.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.40%)</title><rect x="826" y="324" width="5" height="15" fill="rgb(224,202,10)"/><text x="829.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:588) (1 samples, 0.40%)</title><rect x="831" y="324" width="5" height="15" fill="rgb(225,61,12)"/><text x="834.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.40%)</title><rect x="836" y="324" width="4" height="15" fill="rgb(234,38,26)"/><text x="839.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.40%)</title><rect x="836" y="340" width="4" height="15" fill="rgb(241,207,20)"/><text x="839.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="836" y="356" width="4" height="15" fill="rgb(238,151,53)"/><text x="839.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="836" y="372" width="4" height="15" fill="rgb(253,87,3)"/><text x="839.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (9 samples, 3.60%)</title><rect x="802" y="228" width="43" height="15" fill="rgb(235,63,48)"/><text x="805.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (8 samples, 3.20%)</title><rect x="807" y="244" width="38" height="15" fill="rgb(229,215,1)"/><text x="810.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (8 samples, 3.20%)</title><rect x="807" y="260" width="38" height="15" fill="rgb(224,12,41)"/><text x="810.00" y="270.50">dot..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 3.20%)</title><rect x="807" y="276" width="38" height="15" fill="rgb(232,194,2)"/><text x="810.00" y="286.50">arr..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (6 samples, 2.40%)</title><rect x="817" y="292" width="28" height="15" fill="rgb(209,151,17)"/><text x="820.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 2.00%)</title><rect x="821" y="308" width="24" height="15" fill="rgb(244,118,29)"/><text x="824.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:686) (1 samples, 0.40%)</title><rect x="840" y="324" width="5" height="15" fill="rgb(234,177,34)"/><text x="843.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.40%)</title><rect x="850" y="260" width="4" height="15" fill="rgb(208,60,29)"/><text x="853.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.40%)</title><rect x="850" y="276" width="4" height="15" fill="rgb(219,81,8)"/><text x="853.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.40%)</title><rect x="854" y="260" width="5" height="15" fill="rgb(242,16,54)"/><text x="857.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.40%)</title><rect x="854" y="276" width="5" height="15" fill="rgb(218,188,47)"/><text x="857.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.40%)</title><rect x="854" y="292" width="5" height="15" fill="rgb(238,173,17)"/><text x="857.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.40%)</title><rect x="859" y="292" width="5" height="15" fill="rgb(222,116,20)"/><text x="862.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.40%)</title><rect x="859" y="308" width="5" height="15" fill="rgb(227,45,25)"/><text x="862.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2288) (1 samples, 0.40%)</title><rect x="859" y="324" width="5" height="15" fill="rgb(227,192,37)"/><text x="862.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.40%)</title><rect x="864" y="292" width="5" height="15" fill="rgb(225,61,25)"/><text x="867.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.40%)</title><rect x="864" y="308" width="5" height="15" fill="rgb(214,57,25)"/><text x="867.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2066) (1 samples, 0.40%)</title><rect x="864" y="324" width="5" height="15" fill="rgb(238,205,40)"/><text x="867.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.40%)</title><rect x="869" y="292" width="4" height="15" fill="rgb(237,182,11)"/><text x="872.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.40%)</title><rect x="869" y="308" width="4" height="15" fill="rgb(241,188,17)"/><text x="872.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1581) (1 samples, 0.40%)</title><rect x="873" y="292" width="5" height="15" fill="rgb(225,86,4)"/><text x="876.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 2.00%)</title><rect x="859" y="260" width="24" height="15" fill="rgb(217,105,52)"/><text x="862.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 2.00%)</title><rect x="859" y="276" width="24" height="15" fill="rgb(218,141,49)"/><text x="862.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.40%)</title><rect x="878" y="292" width="5" height="15" fill="rgb(247,147,10)"/><text x="881.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.40%)</title><rect x="878" y="308" width="5" height="15" fill="rgb(248,53,29)"/><text x="881.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (9 samples, 3.60%)</title><rect x="845" y="228" width="42" height="15" fill="rgb(209,215,13)"/><text x="848.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 3.20%)</title><rect x="850" y="244" width="37" height="15" fill="rgb(231,142,14)"/><text x="853.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.40%)</title><rect x="883" y="260" width="4" height="15" fill="rgb(229,86,53)"/><text x="886.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.80%)</title><rect x="897" y="244" width="9" height="15" fill="rgb(207,196,34)"/><text x="900.00" y="254.50"></text></g><g><title>0x7f60ca02a120 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="902" y="260" width="4" height="15" fill="rgb(239,88,18)"/><text x="905.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (10 samples, 4.00%)</title><rect x="887" y="228" width="48" height="15" fill="rgb(231,208,25)"/><text x="890.00" y="238.50">_run..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 2.40%)</title><rect x="906" y="244" width="29" height="15" fill="rgb(247,100,3)"/><text x="909.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 2.00%)</title><rect x="911" y="260" width="24" height="15" fill="rgb(249,46,7)"/><text x="914.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 2.00%)</title><rect x="911" y="276" width="24" height="15" fill="rgb(252,100,37)"/><text x="914.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.40%)</title><rect x="930" y="292" width="5" height="15" fill="rgb(226,72,3)"/><text x="933.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.40%)</title><rect x="930" y="308" width="5" height="15" fill="rgb(249,194,46)"/><text x="933.00" y="318.50"></text></g><g><title>0x7f60ca01fe50 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="930" y="324" width="5" height="15" fill="rgb(205,178,2)"/><text x="933.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (31 samples, 12.40%)</title><rect x="793" y="196" width="146" height="15" fill="rgb(221,136,44)"/><text x="796.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 12.00%)</title><rect x="798" y="212" width="141" height="15" fill="rgb(209,115,54)"/><text x="801.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.40%)</title><rect x="935" y="228" width="4" height="15" fill="rgb(236,17,23)"/><text x="938.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (33 samples, 13.20%)</title><rect x="788" y="180" width="156" height="15" fill="rgb(235,15,29)"/><text x="791.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.40%)</title><rect x="939" y="196" width="5" height="15" fill="rgb(247,163,17)"/><text x="942.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (41 samples, 16.40%)</title><rect x="755" y="164" width="194" height="15" fill="rgb(234,137,34)"/><text x="758.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.40%)</title><rect x="944" y="180" width="5" height="15" fill="rgb(212,121,35)"/><text x="947.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (51 samples, 20.40%)</title><rect x="718" y="132" width="240" height="15" fill="rgb(241,128,52)"/><text x="721.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (49 samples, 19.60%)</title><rect x="727" y="148" width="231" height="15" fill="rgb(238,212,9)"/><text x="730.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.80%)</title><rect x="949" y="164" width="9" height="15" fill="rgb(232,105,5)"/><text x="952.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.80%)</title><rect x="949" y="180" width="9" height="15" fill="rgb(231,93,17)"/><text x="952.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:45) (55 samples, 22.00%)</title><rect x="703" y="52" width="260" height="15" fill="rgb(234,151,18)"/><text x="706.00" y="62.50">&lt;module&gt; (bench_LogisticRegression..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:44) (55 samples, 22.00%)</title><rect x="703" y="68" width="260" height="15" fill="rgb(226,66,46)"/><text x="706.00" y="78.50">profile_pyrt (bench_LogisticRegres..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:29) (54 samples, 21.60%)</title><rect x="708" y="84" width="255" height="15" fill="rgb(221,20,5)"/><text x="711.00" y="94.50">setup_profile (bench_LogisticRegre..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:23) (53 samples, 21.20%)</title><rect x="713" y="100" width="250" height="15" fill="rgb(222,94,53)"/><text x="716.00" y="110.50">profile (bench_LogisticRegression..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (52 samples, 20.80%)</title><rect x="718" y="116" width="245" height="15" fill="rgb(221,98,54)"/><text x="721.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="958" y="132" width="5" height="15" fill="rgb(217,94,2)"/><text x="961.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.40%)</title><rect x="982" y="148" width="5" height="15" fill="rgb(211,24,5)"/><text x="985.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.40%)</title><rect x="987" y="148" width="4" height="15" fill="rgb(252,126,10)"/><text x="990.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.40%)</title><rect x="991" y="164" width="5" height="15" fill="rgb(252,40,23)"/><text x="994.00" y="174.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1024" y="244" width="5" height="15" fill="rgb(221,213,37)"/><text x="1027.00" y="254.50"></text></g><g><title>0x7f60ca009a4d (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1024" y="260" width="5" height="15" fill="rgb(220,149,3)"/><text x="1027.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (9 samples, 3.60%)</title><rect x="996" y="196" width="42" height="15" fill="rgb(241,122,24)"/><text x="999.00" y="206.50">run..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (8 samples, 3.20%)</title><rect x="1001" y="212" width="37" height="15" fill="rgb(243,217,24)"/><text x="1004.00" y="222.50">&lt;li..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.40%)</title><rect x="1010" y="228" width="28" height="15" fill="rgb(241,123,22)"/><text x="1013.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1029" y="244" width="9" height="15" fill="rgb(237,39,30)"/><text x="1032.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1029" y="260" width="9" height="15" fill="rgb(243,181,28)"/><text x="1032.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1034" y="276" width="4" height="15" fill="rgb(222,91,21)"/><text x="1037.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1034" y="292" width="4" height="15" fill="rgb(245,4,5)"/><text x="1037.00" y="302.50"></text></g><g><title>0x7f608a079ff9 (?) (1 samples, 0.40%)</title><rect x="1038" y="212" width="5" height="15" fill="rgb(214,138,27)"/><text x="1041.00" y="222.50"></text></g><g><title>0x7f608a074ef6 (?) (1 samples, 0.40%)</title><rect x="1038" y="228" width="5" height="15" fill="rgb(224,148,44)"/><text x="1041.00" y="238.50"></text></g><g><title>0x7f608a069458 (?) (1 samples, 0.40%)</title><rect x="1038" y="244" width="5" height="15" fill="rgb(233,109,30)"/><text x="1041.00" y="254.50"></text></g><g><title>0x7f608a059d1e (?) (1 samples, 0.40%)</title><rect x="1038" y="260" width="5" height="15" fill="rgb(208,170,10)"/><text x="1041.00" y="270.50"></text></g><g><title>0x7f60ca02a124 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1043" y="212" width="5" height="15" fill="rgb(244,198,10)"/><text x="1046.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (2 samples, 0.80%)</title><rect x="1053" y="260" width="9" height="15" fill="rgb(243,99,37)"/><text x="1056.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="1062" y="260" width="5" height="15" fill="rgb(252,40,38)"/><text x="1065.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1072" y="292" width="4" height="15" fill="rgb(206,76,52)"/><text x="1075.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1072" y="308" width="4" height="15" fill="rgb(234,32,23)"/><text x="1075.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1072" y="324" width="4" height="15" fill="rgb(227,215,47)"/><text x="1075.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1076" y="292" width="5" height="15" fill="rgb(216,82,28)"/><text x="1079.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1076" y="308" width="5" height="15" fill="rgb(208,76,45)"/><text x="1079.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1081" y="292" width="5" height="15" fill="rgb(230,3,46)"/><text x="1084.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1081" y="308" width="5" height="15" fill="rgb(217,161,49)"/><text x="1084.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1086" y="292" width="4" height="15" fill="rgb(225,94,18)"/><text x="1089.00" y="302.50"></text></g><g><title>0x7f60ca00992c (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1090" y="340" width="5" height="15" fill="rgb(206,208,12)"/><text x="1093.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="356" width="5" height="15" fill="rgb(240,97,45)"/><text x="1098.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="372" width="5" height="15" fill="rgb(208,159,8)"/><text x="1098.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="388" width="5" height="15" fill="rgb(247,139,22)"/><text x="1098.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1095" y="340" width="10" height="15" fill="rgb(242,219,31)"/><text x="1098.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1100" y="356" width="5" height="15" fill="rgb(218,113,15)"/><text x="1103.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1100" y="372" width="5" height="15" fill="rgb(242,110,28)"/><text x="1103.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1105" y="340" width="4" height="15" fill="rgb(245,22,6)"/><text x="1108.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1114" y="356" width="5" height="15" fill="rgb(208,132,45)"/><text x="1117.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 5.60%)</title><rect x="1067" y="260" width="66" height="15" fill="rgb(254,197,1)"/><text x="1070.00" y="270.50">onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.20%)</title><rect x="1072" y="276" width="61" height="15" fill="rgb(242,35,0)"/><text x="1075.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.60%)</title><rect x="1090" y="292" width="43" height="15" fill="rgb(253,55,5)"/><text x="1093.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.60%)</title><rect x="1090" y="308" width="43" height="15" fill="rgb(235,94,38)"/><text x="1093.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.60%)</title><rect x="1090" y="324" width="43" height="15" fill="rgb(242,118,4)"/><text x="1093.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.00%)</title><rect x="1109" y="340" width="24" height="15" fill="rgb(211,202,20)"/><text x="1112.00" y="350.50">o..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1119" y="356" width="14" height="15" fill="rgb(236,140,21)"/><text x="1122.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1123" y="372" width="10" height="15" fill="rgb(228,24,11)"/><text x="1126.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1123" y="388" width="10" height="15" fill="rgb(218,8,23)"/><text x="1126.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1123" y="404" width="10" height="15" fill="rgb(239,49,25)"/><text x="1126.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1123" y="420" width="10" height="15" fill="rgb(221,185,43)"/><text x="1126.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1123" y="436" width="10" height="15" fill="rgb(225,226,35)"/><text x="1126.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1123" y="452" width="10" height="15" fill="rgb(217,143,3)"/><text x="1126.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1128" y="468" width="5" height="15" fill="rgb(252,191,41)"/><text x="1131.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1128" y="484" width="5" height="15" fill="rgb(222,46,9)"/><text x="1131.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1128" y="500" width="5" height="15" fill="rgb(206,185,29)"/><text x="1131.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1128" y="516" width="5" height="15" fill="rgb(249,80,50)"/><text x="1131.00" y="526.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1133" y="260" width="5" height="15" fill="rgb(205,214,26)"/><text x="1136.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1133" y="276" width="5" height="15" fill="rgb(212,164,12)"/><text x="1136.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1133" y="292" width="5" height="15" fill="rgb(242,207,29)"/><text x="1136.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1133" y="308" width="5" height="15" fill="rgb(249,76,15)"/><text x="1136.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1133" y="324" width="5" height="15" fill="rgb(228,45,19)"/><text x="1136.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1138" y="260" width="4" height="15" fill="rgb(224,38,38)"/><text x="1141.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1142" y="260" width="5" height="15" fill="rgb(253,163,48)"/><text x="1145.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1142" y="276" width="5" height="15" fill="rgb(207,15,39)"/><text x="1145.00" y="286.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1147" y="356" width="5" height="15" fill="rgb(232,24,44)"/><text x="1150.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 9.20%)</title><rect x="1048" y="244" width="108" height="15" fill="rgb(240,19,5)"/><text x="1051.00" y="254.50">onnxruntime::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1147" y="260" width="9" height="15" fill="rgb(221,129,0)"/><text x="1150.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1147" y="276" width="9" height="15" fill="rgb(210,22,52)"/><text x="1150.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1147" y="292" width="9" height="15" fill="rgb(253,158,25)"/><text x="1150.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1147" y="308" width="9" height="15" fill="rgb(231,78,49)"/><text x="1150.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1147" y="324" width="9" height="15" fill="rgb(215,174,44)"/><text x="1150.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1147" y="340" width="9" height="15" fill="rgb(250,47,51)"/><text x="1150.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1152" y="356" width="4" height="15" fill="rgb(220,12,16)"/><text x="1155.00" y="366.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1156" y="244" width="5" height="15" fill="rgb(243,217,53)"/><text x="1159.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1156" y="260" width="5" height="15" fill="rgb(232,172,1)"/><text x="1159.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1156" y="276" width="5" height="15" fill="rgb(241,133,42)"/><text x="1159.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (36 samples, 14.40%)</title><rect x="996" y="164" width="170" height="15" fill="rgb(213,135,29)"/><text x="999.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (36 samples, 14.40%)</title><rect x="996" y="180" width="170" height="15" fill="rgb(253,225,11)"/><text x="999.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (27 samples, 10.80%)</title><rect x="1038" y="196" width="128" height="15" fill="rgb(234,103,23)"/><text x="1041.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 10.00%)</title><rect x="1048" y="212" width="118" height="15" fill="rgb(234,150,46)"/><text x="1051.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 10.00%)</title><rect x="1048" y="228" width="118" height="15" fill="rgb(205,30,37)"/><text x="1051.00" y="238.50">void pybind11:..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1161" y="244" width="5" height="15" fill="rgb(206,80,17)"/><text x="1164.00" y="254.50"></text></g><g><title>0x7f60ca009957 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1161" y="260" width="5" height="15" fill="rgb(230,51,47)"/><text x="1164.00" y="270.50"></text></g><g><title>all (250 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,104,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:52) (48 samples, 19.20%)</title><rect x="963" y="52" width="227" height="15" fill="rgb(247,183,28)"/><text x="966.00" y="62.50">&lt;module&gt; (bench_LogisticRegres..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:51) (48 samples, 19.20%)</title><rect x="963" y="68" width="227" height="15" fill="rgb(254,188,35)"/><text x="966.00" y="78.50">profile_ort (bench_LogisticReg..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:29) (48 samples, 19.20%)</title><rect x="963" y="84" width="227" height="15" fill="rgb(243,74,27)"/><text x="966.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py:23) (48 samples, 19.20%)</title><rect x="963" y="100" width="227" height="15" fill="rgb(237,218,40)"/><text x="966.00" y="110.50">profile (bench_LogisticRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (48 samples, 19.20%)</title><rect x="963" y="116" width="227" height="15" fill="rgb(242,217,23)"/><text x="966.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (47 samples, 18.80%)</title><rect x="968" y="132" width="222" height="15" fill="rgb(252,168,20)"/><text x="971.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (42 samples, 16.80%)</title><rect x="991" y="148" width="199" height="15" fill="rgb(205,188,36)"/><text x="994.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (5 samples, 2.00%)</title><rect x="1166" y="164" width="24" height="15" fill="rgb(238,103,28)"/><text x="1169.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.40%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(248,5,5)"/><text x="1188.00" y="190.50"></text></g></g></svg>