<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:31) (1 samples, 0.28%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(220,13,25)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:11) (1 samples, 0.28%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(253,41,38)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:39) (1 samples, 0.28%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(247,78,35)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.28%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(212,1,41)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:85) (1 samples, 0.28%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(207,0,13)"/><text x="13.00" y="126.50"></text></g><g><title>0x7fea4d857a66 (?) (1 samples, 0.28%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(241,147,31)"/><text x="13.00" y="142.50"></text></g><g><title>0x7fea4d849579 (?) (1 samples, 0.28%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(206,71,24)"/><text x="13.00" y="158.50"></text></g><g><title>0x7fea4d18a017 (?) (1 samples, 0.28%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(240,77,37)"/><text x="13.00" y="174.50"></text></g><g><title>0x7fea4cf61aa9 (?) (1 samples, 0.28%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(207,122,51)"/><text x="13.00" y="190.50"></text></g><g><title>0x7fea4cf52d1f (?) (1 samples, 0.28%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(219,113,30)"/><text x="13.00" y="206.50"></text></g><g><title>0x7fea4cf5976f (?) (1 samples, 0.28%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(241,9,23)"/><text x="13.00" y="222.50"></text></g><g><title>0x7fea4cf6aea3 (?) (1 samples, 0.28%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(217,71,50)"/><text x="13.00" y="238.50"></text></g><g><title>0x7fea4cf622f1 (?) (1 samples, 0.28%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(224,20,4)"/><text x="13.00" y="254.50"></text></g><g><title>0x7fea4cf685b5 (?) (1 samples, 0.28%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(246,167,26)"/><text x="13.00" y="270.50"></text></g><g><title>0x7fea4cf6d016 (?) (1 samples, 0.28%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(217,169,19)"/><text x="13.00" y="286.50"></text></g><g><title>0x7fea4cf52d1f (?) (1 samples, 0.28%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(232,147,4)"/><text x="13.00" y="302.50"></text></g><g><title>0x7fea4cf5976f (?) (1 samples, 0.28%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(234,17,46)"/><text x="13.00" y="318.50"></text></g><g><title>uint_arrtype_new (scalartypes.c.src:2827) (1 samples, 0.28%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(251,160,3)"/><text x="13.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.28%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(213,212,35)"/><text x="13.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:18) (2 samples, 0.55%)</title><rect x="13" y="100" width="6" height="15" fill="rgb(209,35,11)"/><text x="16.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.55%)</title><rect x="13" y="116" width="6" height="15" fill="rgb(212,162,34)"/><text x="16.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.55%)</title><rect x="13" y="132" width="6" height="15" fill="rgb(240,89,45)"/><text x="16.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.55%)</title><rect x="13" y="148" width="6" height="15" fill="rgb(228,148,28)"/><text x="16.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (2 samples, 0.55%)</title><rect x="13" y="164" width="6" height="15" fill="rgb(224,205,33)"/><text x="16.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.55%)</title><rect x="13" y="180" width="6" height="15" fill="rgb(214,144,7)"/><text x="16.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.55%)</title><rect x="13" y="196" width="6" height="15" fill="rgb(247,113,18)"/><text x="16.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.55%)</title><rect x="13" y="212" width="6" height="15" fill="rgb(221,193,34)"/><text x="16.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.55%)</title><rect x="13" y="228" width="6" height="15" fill="rgb(237,38,41)"/><text x="16.00" y="238.50"></text></g><g><title>0x7fea462659dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="13" y="244" width="6" height="15" fill="rgb(251,54,19)"/><text x="16.00" y="254.50"></text></g><g><title>0x7fea46286265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="13" y="260" width="6" height="15" fill="rgb(213,178,2)"/><text x="16.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.55%)</title><rect x="13" y="276" width="6" height="15" fill="rgb(235,85,28)"/><text x="16.00" y="286.50"></text></g><g><title>0x7fea5b14ebb4 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="13" y="292" width="6" height="15" fill="rgb(214,87,37)"/><text x="16.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.28%)</title><rect x="36" y="164" width="3" height="15" fill="rgb(240,209,33)"/><text x="39.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.28%)</title><rect x="39" y="164" width="3" height="15" fill="rgb(247,178,42)"/><text x="42.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 1.65%)</title><rect x="29" y="148" width="20" height="15" fill="rgb(215,40,0)"/><text x="32.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.55%)</title><rect x="42" y="164" width="7" height="15" fill="rgb(233,23,24)"/><text x="45.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.55%)</title><rect x="42" y="180" width="7" height="15" fill="rgb(252,56,49)"/><text x="45.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.55%)</title><rect x="42" y="196" width="7" height="15" fill="rgb(239,4,28)"/><text x="45.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.28%)</title><rect x="49" y="148" width="3" height="15" fill="rgb(246,147,0)"/><text x="52.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.28%)</title><rect x="52" y="196" width="3" height="15" fill="rgb(227,90,2)"/><text x="55.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.55%)</title><rect x="62" y="228" width="6" height="15" fill="rgb(212,63,33)"/><text x="65.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (6 samples, 1.65%)</title><rect x="52" y="180" width="19" height="15" fill="rgb(244,224,39)"/><text x="55.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.38%)</title><rect x="55" y="196" width="16" height="15" fill="rgb(213,207,28)"/><text x="58.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.38%)</title><rect x="55" y="212" width="16" height="15" fill="rgb(231,40,38)"/><text x="58.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.28%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(219,83,39)"/><text x="71.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.55%)</title><rect x="71" y="196" width="7" height="15" fill="rgb(219,217,36)"/><text x="74.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.28%)</title><rect x="75" y="212" width="3" height="15" fill="rgb(254,40,0)"/><text x="78.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.83%)</title><rect x="81" y="228" width="10" height="15" fill="rgb(225,46,38)"/><text x="84.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 1.38%)</title><rect x="78" y="196" width="16" height="15" fill="rgb(252,8,5)"/><text x="81.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.38%)</title><rect x="78" y="212" width="16" height="15" fill="rgb(252,168,2)"/><text x="81.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.28%)</title><rect x="91" y="228" width="3" height="15" fill="rgb(238,205,45)"/><text x="94.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.28%)</title><rect x="94" y="212" width="3" height="15" fill="rgb(243,211,19)"/><text x="97.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.28%)</title><rect x="94" y="228" width="3" height="15" fill="rgb(253,0,38)"/><text x="97.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.55%)</title><rect x="94" y="196" width="7" height="15" fill="rgb(208,140,36)"/><text x="97.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.28%)</title><rect x="97" y="212" width="4" height="15" fill="rgb(212,155,38)"/><text x="100.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.28%)</title><rect x="101" y="196" width="3" height="15" fill="rgb(240,0,52)"/><text x="104.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.28%)</title><rect x="104" y="196" width="3" height="15" fill="rgb(237,127,48)"/><text x="107.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.28%)</title><rect x="104" y="212" width="3" height="15" fill="rgb(235,82,38)"/><text x="107.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.28%)</title><rect x="104" y="228" width="3" height="15" fill="rgb(251,126,49)"/><text x="107.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.83%)</title><rect x="107" y="196" width="10" height="15" fill="rgb(239,51,23)"/><text x="110.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.83%)</title><rect x="107" y="212" width="10" height="15" fill="rgb(220,211,1)"/><text x="110.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.28%)</title><rect x="114" y="228" width="3" height="15" fill="rgb(214,151,26)"/><text x="117.00" y="238.50"></text></g><g><title>0x7fea5af92e6d (libc-2.29.so) (1 samples, 0.28%)</title><rect x="114" y="244" width="3" height="15" fill="rgb(208,166,10)"/><text x="117.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.28%)</title><rect x="117" y="212" width="3" height="15" fill="rgb(224,212,24)"/><text x="120.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.28%)</title><rect x="117" y="228" width="3" height="15" fill="rgb(253,21,0)"/><text x="120.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.38%)</title><rect x="120" y="212" width="16" height="15" fill="rgb(236,99,43)"/><text x="123.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.83%)</title><rect x="127" y="228" width="9" height="15" fill="rgb(210,65,38)"/><text x="130.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.28%)</title><rect x="133" y="244" width="3" height="15" fill="rgb(219,25,24)"/><text x="136.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.93%)</title><rect x="117" y="196" width="23" height="15" fill="rgb(207,97,18)"/><text x="120.00" y="206.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.28%)</title><rect x="136" y="212" width="4" height="15" fill="rgb(240,81,26)"/><text x="139.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="136" y="228" width="4" height="15" fill="rgb(208,195,30)"/><text x="139.00" y="238.50"></text></g><g><title>0x7fea5af9d124 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="136" y="244" width="4" height="15" fill="rgb(209,61,24)"/><text x="139.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (22 samples, 6.06%)</title><rect x="71" y="180" width="72" height="15" fill="rgb(229,210,36)"/><text x="74.00" y="190.50">decision..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.28%)</title><rect x="140" y="196" width="3" height="15" fill="rgb(229,98,51)"/><text x="143.00" y="206.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.28%)</title><rect x="143" y="276" width="3" height="15" fill="rgb(247,190,5)"/><text x="146.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:760) (1 samples, 0.28%)</title><rect x="143" y="292" width="3" height="15" fill="rgb(218,124,6)"/><text x="146.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.55%)</title><rect x="143" y="260" width="6" height="15" fill="rgb(236,147,37)"/><text x="146.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.28%)</title><rect x="146" y="276" width="3" height="15" fill="rgb(232,154,19)"/><text x="149.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.28%)</title><rect x="146" y="292" width="3" height="15" fill="rgb(236,136,2)"/><text x="149.00" y="302.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1015) (1 samples, 0.28%)</title><rect x="146" y="308" width="3" height="15" fill="rgb(213,112,24)"/><text x="149.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.55%)</title><rect x="149" y="308" width="7" height="15" fill="rgb(247,220,47)"/><text x="152.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.83%)</title><rect x="149" y="260" width="10" height="15" fill="rgb(246,145,45)"/><text x="152.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.83%)</title><rect x="149" y="276" width="10" height="15" fill="rgb(234,100,4)"/><text x="152.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.83%)</title><rect x="149" y="292" width="10" height="15" fill="rgb(249,26,1)"/><text x="152.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.28%)</title><rect x="156" y="308" width="3" height="15" fill="rgb(223,39,16)"/><text x="159.00" y="318.50"></text></g><g><title>0x7fea5af9cd5f (libc-2.29.so) (1 samples, 0.28%)</title><rect x="156" y="324" width="3" height="15" fill="rgb(223,14,35)"/><text x="159.00" y="334.50"></text></g><g><title>array_add (number.c:330) (6 samples, 1.65%)</title><rect x="143" y="196" width="19" height="15" fill="rgb(243,67,46)"/><text x="146.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.65%)</title><rect x="143" y="212" width="19" height="15" fill="rgb(208,201,39)"/><text x="146.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.65%)</title><rect x="143" y="228" width="19" height="15" fill="rgb(248,164,10)"/><text x="146.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.65%)</title><rect x="143" y="244" width="19" height="15" fill="rgb(219,204,42)"/><text x="146.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.28%)</title><rect x="159" y="260" width="3" height="15" fill="rgb(238,100,49)"/><text x="162.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.28%)</title><rect x="159" y="276" width="3" height="15" fill="rgb(209,71,18)"/><text x="162.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="159" y="292" width="3" height="15" fill="rgb(244,28,37)"/><text x="162.00" y="302.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="162" y="212" width="4" height="15" fill="rgb(245,168,51)"/><text x="165.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.28%)</title><rect x="166" y="276" width="3" height="15" fill="rgb(227,145,16)"/><text x="169.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.28%)</title><rect x="166" y="292" width="3" height="15" fill="rgb(216,75,27)"/><text x="169.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.28%)</title><rect x="169" y="292" width="3" height="15" fill="rgb(220,195,46)"/><text x="172.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.28%)</title><rect x="169" y="308" width="3" height="15" fill="rgb(237,180,38)"/><text x="172.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.28%)</title><rect x="169" y="324" width="3" height="15" fill="rgb(205,93,1)"/><text x="172.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.28%)</title><rect x="172" y="308" width="3" height="15" fill="rgb(233,43,16)"/><text x="175.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.28%)</title><rect x="172" y="324" width="3" height="15" fill="rgb(225,54,17)"/><text x="175.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (4 samples, 1.10%)</title><rect x="166" y="244" width="13" height="15" fill="rgb(243,136,37)"/><text x="169.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 1.10%)</title><rect x="166" y="260" width="13" height="15" fill="rgb(205,109,27)"/><text x="169.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 0.83%)</title><rect x="169" y="276" width="10" height="15" fill="rgb(245,91,53)"/><text x="172.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.55%)</title><rect x="172" y="292" width="7" height="15" fill="rgb(212,34,37)"/><text x="175.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.28%)</title><rect x="175" y="308" width="4" height="15" fill="rgb(234,71,13)"/><text x="178.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.28%)</title><rect x="175" y="324" width="4" height="15" fill="rgb(223,127,36)"/><text x="178.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="175" y="340" width="4" height="15" fill="rgb(228,7,12)"/><text x="178.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2931) (1 samples, 0.28%)</title><rect x="179" y="244" width="3" height="15" fill="rgb(237,194,12)"/><text x="182.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.28%)</title><rect x="182" y="244" width="3" height="15" fill="rgb(206,173,30)"/><text x="185.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.28%)</title><rect x="182" y="260" width="3" height="15" fill="rgb(240,90,15)"/><text x="185.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1635) (1 samples, 0.28%)</title><rect x="182" y="276" width="3" height="15" fill="rgb(217,115,32)"/><text x="185.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2971) (1 samples, 0.28%)</title><rect x="185" y="244" width="3" height="15" fill="rgb(224,50,0)"/><text x="188.00" y="254.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.28%)</title><rect x="185" y="260" width="3" height="15" fill="rgb(252,227,15)"/><text x="188.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="188" y="308" width="4" height="15" fill="rgb(244,162,24)"/><text x="191.00" y="318.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.55%)</title><rect x="188" y="292" width="7" height="15" fill="rgb(248,174,52)"/><text x="191.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="192" y="308" width="3" height="15" fill="rgb(239,212,5)"/><text x="195.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (4 samples, 1.10%)</title><rect x="188" y="244" width="13" height="15" fill="rgb(208,137,18)"/><text x="191.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (4 samples, 1.10%)</title><rect x="188" y="260" width="13" height="15" fill="rgb(243,203,39)"/><text x="191.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.10%)</title><rect x="188" y="276" width="13" height="15" fill="rgb(224,160,37)"/><text x="191.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.55%)</title><rect x="195" y="292" width="6" height="15" fill="rgb(229,173,38)"/><text x="198.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.55%)</title><rect x="195" y="308" width="6" height="15" fill="rgb(207,55,45)"/><text x="198.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (13 samples, 3.58%)</title><rect x="162" y="196" width="43" height="15" fill="rgb(223,73,7)"/><text x="165.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.31%)</title><rect x="166" y="212" width="39" height="15" fill="rgb(236,184,41)"/><text x="169.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (12 samples, 3.31%)</title><rect x="166" y="228" width="39" height="15" fill="rgb(239,183,43)"/><text x="169.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3011) (1 samples, 0.28%)</title><rect x="201" y="244" width="4" height="15" fill="rgb(218,191,41)"/><text x="204.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="201" y="260" width="4" height="15" fill="rgb(219,219,48)"/><text x="204.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (48 samples, 13.22%)</title><rect x="52" y="164" width="156" height="15" fill="rgb(208,208,48)"/><text x="55.00" y="174.50">_predict_proba_lr (s..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (20 samples, 5.51%)</title><rect x="143" y="180" width="65" height="15" fill="rgb(215,138,47)"/><text x="146.00" y="190.50">decisio..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.28%)</title><rect x="205" y="196" width="3" height="15" fill="rgb(235,47,52)"/><text x="208.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.28%)</title><rect x="205" y="212" width="3" height="15" fill="rgb(242,138,22)"/><text x="208.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.28%)</title><rect x="208" y="180" width="3" height="15" fill="rgb(235,41,10)"/><text x="211.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.28%)</title><rect x="208" y="196" width="3" height="15" fill="rgb(238,10,38)"/><text x="211.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.28%)</title><rect x="208" y="212" width="3" height="15" fill="rgb(253,220,18)"/><text x="211.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.28%)</title><rect x="208" y="228" width="3" height="15" fill="rgb(206,105,28)"/><text x="211.00" y="238.50"></text></g><g><title>0x7fea5af92e50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="208" y="244" width="3" height="15" fill="rgb(231,11,41)"/><text x="211.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.28%)</title><rect x="211" y="212" width="3" height="15" fill="rgb(212,123,13)"/><text x="214.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.28%)</title><rect x="214" y="212" width="4" height="15" fill="rgb(253,33,51)"/><text x="217.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1703) (1 samples, 0.28%)</title><rect x="214" y="228" width="4" height="15" fill="rgb(234,7,46)"/><text x="217.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.28%)</title><rect x="214" y="244" width="4" height="15" fill="rgb(228,80,36)"/><text x="217.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.83%)</title><rect x="211" y="196" width="10" height="15" fill="rgb(237,120,46)"/><text x="214.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.28%)</title><rect x="218" y="212" width="3" height="15" fill="rgb(236,196,0)"/><text x="221.00" y="222.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.28%)</title><rect x="218" y="228" width="3" height="15" fill="rgb(251,47,18)"/><text x="221.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.28%)</title><rect x="221" y="212" width="3" height="15" fill="rgb(224,168,8)"/><text x="224.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.28%)</title><rect x="221" y="228" width="3" height="15" fill="rgb(252,13,27)"/><text x="224.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.28%)</title><rect x="224" y="212" width="3" height="15" fill="rgb(240,10,42)"/><text x="227.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.28%)</title><rect x="224" y="228" width="3" height="15" fill="rgb(238,95,0)"/><text x="227.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.28%)</title><rect x="224" y="244" width="3" height="15" fill="rgb(245,199,46)"/><text x="227.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.28%)</title><rect x="224" y="260" width="3" height="15" fill="rgb(234,16,27)"/><text x="227.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.28%)</title><rect x="224" y="276" width="3" height="15" fill="rgb(223,197,43)"/><text x="227.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.28%)</title><rect x="224" y="292" width="3" height="15" fill="rgb(217,79,25)"/><text x="227.00" y="302.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.28%)</title><rect x="224" y="308" width="3" height="15" fill="rgb(232,201,50)"/><text x="227.00" y="318.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.28%)</title><rect x="224" y="324" width="3" height="15" fill="rgb(249,51,27)"/><text x="227.00" y="334.50"></text></g><g><title>0x7fea462659da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="227" y="244" width="4" height="15" fill="rgb(224,94,7)"/><text x="230.00" y="254.50"></text></g><g><title>0x7fea46286254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="231" y="260" width="3" height="15" fill="rgb(206,178,36)"/><text x="234.00" y="270.50"></text></g><g><title>0x7fea4638f9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="234" y="276" width="3" height="15" fill="rgb(226,64,7)"/><text x="237.00" y="286.50"></text></g><g><title>0x7fea5b0c81b0 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="244" y="292" width="6" height="15" fill="rgb(247,14,27)"/><text x="247.00" y="302.50"></text></g><g><title>0x7fea5b14eba0 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="250" y="292" width="3" height="15" fill="rgb(209,137,47)"/><text x="253.00" y="302.50"></text></g><g><title>0x7fea5b14ebd3 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="253" y="292" width="4" height="15" fill="rgb(245,219,38)"/><text x="256.00" y="302.50"></text></g><g><title>0x7fea5b14ebe7 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="257" y="292" width="3" height="15" fill="rgb(235,95,31)"/><text x="260.00" y="302.50"></text></g><g><title>0x7fea5b14ec18 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="260" y="292" width="3" height="15" fill="rgb(252,65,28)"/><text x="263.00" y="302.50"></text></g><g><title>0x7fea5b14ec2e (libm-2.29.so) (1 samples, 0.28%)</title><rect x="263" y="292" width="3" height="15" fill="rgb(246,33,38)"/><text x="266.00" y="302.50"></text></g><g><title>0x7fea5b14ec3e (libm-2.29.so) (2 samples, 0.55%)</title><rect x="266" y="292" width="7" height="15" fill="rgb(215,41,37)"/><text x="269.00" y="302.50"></text></g><g><title>0x7fea46286265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.58%)</title><rect x="234" y="260" width="42" height="15" fill="rgb(224,101,0)"/><text x="237.00" y="270.50">0x7..</text></g><g><title>exp (libm-2.29.so) (12 samples, 3.31%)</title><rect x="237" y="276" width="39" height="15" fill="rgb(206,114,24)"/><text x="240.00" y="286.50">exp..</text></g><g><title>0x7fea5b14ec56 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="273" y="292" width="3" height="15" fill="rgb(219,170,50)"/><text x="276.00" y="302.50"></text></g><g><title>0x7fea462659dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 6.89%)</title><rect x="231" y="244" width="81" height="15" fill="rgb(211,8,45)"/><text x="234.00" y="254.50">0x7fea462..</text></g><g><title>0x7fea46286279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.03%)</title><rect x="276" y="260" width="36" height="15" fill="rgb(247,195,5)"/><text x="279.00" y="270.50">0x7..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (28 samples, 7.71%)</title><rect x="227" y="228" width="91" height="15" fill="rgb(229,178,12)"/><text x="230.00" y="238.50">trivial_tw..</text></g><g><title>0x7fea462659e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="312" y="244" width="6" height="15" fill="rgb(253,49,48)"/><text x="315.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (35 samples, 9.64%)</title><rect x="208" y="164" width="114" height="15" fill="rgb(222,86,49)"/><text x="211.00" y="174.50">_predict_proba..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (34 samples, 9.37%)</title><rect x="211" y="180" width="111" height="15" fill="rgb(230,23,7)"/><text x="214.00" y="190.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (31 samples, 8.54%)</title><rect x="221" y="196" width="101" height="15" fill="rgb(238,64,11)"/><text x="224.00" y="206.50">PyUFunc_Gene..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (29 samples, 7.99%)</title><rect x="227" y="212" width="95" height="15" fill="rgb(215,223,17)"/><text x="230.00" y="222.50">execute_leg..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.28%)</title><rect x="318" y="228" width="4" height="15" fill="rgb(233,206,13)"/><text x="321.00" y="238.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.28%)</title><rect x="335" y="180" width="3" height="15" fill="rgb(224,59,1)"/><text x="338.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.28%)</title><rect x="338" y="180" width="3" height="15" fill="rgb(223,226,15)"/><text x="341.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.28%)</title><rect x="338" y="196" width="3" height="15" fill="rgb(214,229,12)"/><text x="341.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.28%)</title><rect x="338" y="212" width="3" height="15" fill="rgb(247,173,21)"/><text x="341.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.28%)</title><rect x="338" y="228" width="3" height="15" fill="rgb(223,174,28)"/><text x="341.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.28%)</title><rect x="344" y="228" width="4" height="15" fill="rgb(205,128,52)"/><text x="347.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.28%)</title><rect x="344" y="244" width="4" height="15" fill="rgb(211,118,50)"/><text x="347.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.28%)</title><rect x="344" y="260" width="4" height="15" fill="rgb(226,118,18)"/><text x="347.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.28%)</title><rect x="344" y="276" width="4" height="15" fill="rgb(233,84,44)"/><text x="347.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.28%)</title><rect x="344" y="292" width="4" height="15" fill="rgb(224,182,31)"/><text x="347.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.28%)</title><rect x="344" y="308" width="4" height="15" fill="rgb(223,222,19)"/><text x="347.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4416) (1 samples, 0.28%)</title><rect x="348" y="244" width="3" height="15" fill="rgb(232,18,34)"/><text x="351.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.28%)</title><rect x="351" y="244" width="3" height="15" fill="rgb(220,54,44)"/><text x="354.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.28%)</title><rect x="354" y="260" width="3" height="15" fill="rgb(231,217,22)"/><text x="357.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.28%)</title><rect x="354" y="276" width="3" height="15" fill="rgb(254,105,10)"/><text x="357.00" y="286.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.28%)</title><rect x="357" y="308" width="4" height="15" fill="rgb(251,163,20)"/><text x="360.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="357" y="324" width="4" height="15" fill="rgb(238,184,5)"/><text x="360.00" y="334.50"></text></g><g><title>0x7fea5af349e8 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="357" y="340" width="4" height="15" fill="rgb(238,92,45)"/><text x="360.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.28%)</title><rect x="361" y="340" width="3" height="15" fill="rgb(227,65,50)"/><text x="364.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (3 samples, 0.83%)</title><rect x="357" y="276" width="10" height="15" fill="rgb(239,208,51)"/><text x="360.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (3 samples, 0.83%)</title><rect x="357" y="292" width="10" height="15" fill="rgb(232,94,14)"/><text x="360.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.55%)</title><rect x="361" y="308" width="6" height="15" fill="rgb(247,0,34)"/><text x="364.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.55%)</title><rect x="361" y="324" width="6" height="15" fill="rgb(213,33,35)"/><text x="364.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.28%)</title><rect x="364" y="340" width="3" height="15" fill="rgb(252,104,18)"/><text x="367.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.28%)</title><rect x="364" y="356" width="3" height="15" fill="rgb(205,182,42)"/><text x="367.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.28%)</title><rect x="367" y="292" width="3" height="15" fill="rgb(234,11,41)"/><text x="370.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2304) (1 samples, 0.28%)</title><rect x="367" y="308" width="3" height="15" fill="rgb(241,180,7)"/><text x="370.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.28%)</title><rect x="370" y="292" width="4" height="15" fill="rgb(236,197,41)"/><text x="373.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.28%)</title><rect x="370" y="308" width="4" height="15" fill="rgb(215,45,48)"/><text x="373.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.28%)</title><rect x="370" y="324" width="4" height="15" fill="rgb(224,126,35)"/><text x="373.00" y="334.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.28%)</title><rect x="370" y="340" width="4" height="15" fill="rgb(230,107,20)"/><text x="373.00" y="350.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.28%)</title><rect x="370" y="356" width="4" height="15" fill="rgb(220,65,53)"/><text x="373.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.83%)</title><rect x="367" y="276" width="10" height="15" fill="rgb(253,15,47)"/><text x="370.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.28%)</title><rect x="374" y="292" width="3" height="15" fill="rgb(239,128,6)"/><text x="377.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2260) (1 samples, 0.28%)</title><rect x="374" y="308" width="3" height="15" fill="rgb(219,200,33)"/><text x="377.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.28%)</title><rect x="377" y="292" width="3" height="15" fill="rgb(207,91,43)"/><text x="380.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.55%)</title><rect x="380" y="308" width="7" height="15" fill="rgb(222,113,2)"/><text x="383.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.28%)</title><rect x="387" y="308" width="3" height="15" fill="rgb(229,210,3)"/><text x="390.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 1.10%)</title><rect x="400" y="324" width="13" height="15" fill="rgb(243,107,48)"/><text x="403.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (8 samples, 2.20%)</title><rect x="390" y="308" width="26" height="15" fill="rgb(244,21,26)"/><text x="393.00" y="318.50">D..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.28%)</title><rect x="413" y="324" width="3" height="15" fill="rgb(227,159,21)"/><text x="416.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.28%)</title><rect x="416" y="308" width="3" height="15" fill="rgb(206,144,53)"/><text x="419.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.28%)</title><rect x="419" y="308" width="3" height="15" fill="rgb(240,165,9)"/><text x="422.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.28%)</title><rect x="422" y="308" width="4" height="15" fill="rgb(225,214,25)"/><text x="425.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.28%)</title><rect x="426" y="308" width="3" height="15" fill="rgb(209,147,8)"/><text x="429.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1883) (1 samples, 0.28%)</title><rect x="426" y="324" width="3" height="15" fill="rgb(216,163,30)"/><text x="429.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (17 samples, 4.68%)</title><rect x="377" y="276" width="55" height="15" fill="rgb(239,190,51)"/><text x="380.00" y="286.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (16 samples, 4.41%)</title><rect x="380" y="292" width="52" height="15" fill="rgb(252,8,51)"/><text x="383.00" y="302.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.28%)</title><rect x="429" y="308" width="3" height="15" fill="rgb(221,115,18)"/><text x="432.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (29 samples, 7.99%)</title><rect x="341" y="180" width="94" height="15" fill="rgb(215,88,11)"/><text x="344.00" y="190.50">array_sum (..</text></g><g><title>forward_ndarray_method (methods.c:108) (29 samples, 7.99%)</title><rect x="341" y="196" width="94" height="15" fill="rgb(220,36,22)"/><text x="344.00" y="206.50">forward_nda..</text></g><g><title>_sum (numpy/core/_methods.py:38) (28 samples, 7.71%)</title><rect x="344" y="212" width="91" height="15" fill="rgb(210,11,1)"/><text x="347.00" y="222.50">_sum (nump..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (27 samples, 7.44%)</title><rect x="348" y="228" width="87" height="15" fill="rgb(210,142,0)"/><text x="351.00" y="238.50">ufunc_redu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (25 samples, 6.89%)</title><rect x="354" y="244" width="81" height="15" fill="rgb(231,225,43)"/><text x="357.00" y="254.50">PyUFunc_G..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (24 samples, 6.61%)</title><rect x="357" y="260" width="78" height="15" fill="rgb(208,163,33)"/><text x="360.00" y="270.50">PyUFunc_R..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.28%)</title><rect x="432" y="276" width="3" height="15" fill="rgb(241,229,54)"/><text x="435.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:668) (1 samples, 0.28%)</title><rect x="432" y="292" width="3" height="15" fill="rgb(238,154,48)"/><text x="435.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="435" y="196" width="4" height="15" fill="rgb(208,17,41)"/><text x="438.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.28%)</title><rect x="435" y="212" width="4" height="15" fill="rgb(220,113,44)"/><text x="438.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.28%)</title><rect x="435" y="228" width="4" height="15" fill="rgb(243,60,17)"/><text x="438.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.28%)</title><rect x="435" y="244" width="4" height="15" fill="rgb(224,112,31)"/><text x="438.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.28%)</title><rect x="435" y="260" width="4" height="15" fill="rgb(237,79,26)"/><text x="438.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.28%)</title><rect x="439" y="196" width="3" height="15" fill="rgb(245,141,19)"/><text x="442.00" y="206.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.28%)</title><rect x="439" y="212" width="3" height="15" fill="rgb(247,49,38)"/><text x="442.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.28%)</title><rect x="442" y="228" width="3" height="15" fill="rgb(232,69,39)"/><text x="445.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.28%)</title><rect x="442" y="244" width="3" height="15" fill="rgb(205,25,35)"/><text x="445.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.28%)</title><rect x="442" y="260" width="3" height="15" fill="rgb(216,11,8)"/><text x="445.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.28%)</title><rect x="445" y="244" width="3" height="15" fill="rgb(214,41,25)"/><text x="448.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.28%)</title><rect x="448" y="244" width="4" height="15" fill="rgb(233,41,52)"/><text x="451.00" y="254.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.28%)</title><rect x="448" y="260" width="4" height="15" fill="rgb(246,57,2)"/><text x="451.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="448" y="276" width="4" height="15" fill="rgb(217,116,11)"/><text x="451.00" y="286.50"></text></g><g><title>0x7fea5af7e293 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="448" y="292" width="4" height="15" fill="rgb(206,166,3)"/><text x="451.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.28%)</title><rect x="452" y="276" width="3" height="15" fill="rgb(207,128,45)"/><text x="455.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.83%)</title><rect x="455" y="292" width="10" height="15" fill="rgb(251,152,29)"/><text x="458.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 2.20%)</title><rect x="445" y="228" width="26" height="15" fill="rgb(242,224,43)"/><text x="448.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.65%)</title><rect x="452" y="244" width="19" height="15" fill="rgb(235,1,14)"/><text x="455.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.65%)</title><rect x="452" y="260" width="19" height="15" fill="rgb(238,132,15)"/><text x="455.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 1.38%)</title><rect x="455" y="276" width="16" height="15" fill="rgb(253,103,18)"/><text x="458.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.55%)</title><rect x="465" y="292" width="6" height="15" fill="rgb(219,214,40)"/><text x="468.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 4.68%)</title><rect x="442" y="196" width="55" height="15" fill="rgb(220,70,3)"/><text x="445.00" y="206.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (17 samples, 4.68%)</title><rect x="442" y="212" width="55" height="15" fill="rgb(238,160,9)"/><text x="445.00" y="222.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (8 samples, 2.20%)</title><rect x="471" y="228" width="26" height="15" fill="rgb(235,19,44)"/><text x="474.00" y="238.50">i..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (8 samples, 2.20%)</title><rect x="471" y="244" width="26" height="15" fill="rgb(244,112,19)"/><text x="474.00" y="254.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (8 samples, 2.20%)</title><rect x="471" y="260" width="26" height="15" fill="rgb(230,133,45)"/><text x="474.00" y="270.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (8 samples, 2.20%)</title><rect x="471" y="276" width="26" height="15" fill="rgb(212,100,44)"/><text x="474.00" y="286.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (8 samples, 2.20%)</title><rect x="471" y="292" width="26" height="15" fill="rgb(215,188,2)"/><text x="474.00" y="302.50">_..</text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:38) (150 samples, 41.32%)</title><rect x="13" y="52" width="487" height="15" fill="rgb(222,58,36)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverlibline..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:37) (150 samples, 41.32%)</title><rect x="13" y="68" width="487" height="15" fill="rgb(250,152,44)"/><text x="16.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverlibl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:29) (150 samples, 41.32%)</title><rect x="13" y="84" width="487" height="15" fill="rgb(251,170,36)"/><text x="16.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverli..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:23) (148 samples, 40.77%)</title><rect x="19" y="100" width="481" height="15" fill="rgb(210,139,21)"/><text x="22.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverlibline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (147 samples, 40.50%)</title><rect x="23" y="116" width="477" height="15" fill="rgb(240,109,14)"/><text x="26.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (145 samples, 39.94%)</title><rect x="29" y="132" width="471" height="15" fill="rgb(243,157,36)"/><text x="32.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (138 samples, 38.02%)</title><rect x="52" y="148" width="448" height="15" fill="rgb(248,68,0)"/><text x="55.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (55 samples, 15.15%)</title><rect x="322" y="164" width="178" height="15" fill="rgb(205,43,4)"/><text x="325.00" y="174.50">_predict_proba_lr (skle..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 5.51%)</title><rect x="435" y="180" width="65" height="15" fill="rgb(234,158,14)"/><text x="438.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3281) (1 samples, 0.28%)</title><rect x="497" y="196" width="3" height="15" fill="rgb(228,222,26)"/><text x="500.00" y="206.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:1) (1 samples, 0.28%)</title><rect x="500" y="148" width="4" height="15" fill="rgb(237,127,38)"/><text x="503.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="500" y="164" width="4" height="15" fill="rgb(215,225,36)"/><text x="503.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="500" y="180" width="4" height="15" fill="rgb(234,226,1)"/><text x="503.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="500" y="196" width="4" height="15" fill="rgb(228,197,33)"/><text x="503.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="500" y="212" width="4" height="15" fill="rgb(230,128,7)"/><text x="503.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="500" y="228" width="4" height="15" fill="rgb(254,156,52)"/><text x="503.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:148) (1 samples, 0.28%)</title><rect x="500" y="244" width="4" height="15" fill="rgb(236,27,14)"/><text x="503.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="500" y="260" width="4" height="15" fill="rgb(210,152,39)"/><text x="503.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="500" y="276" width="4" height="15" fill="rgb(229,156,10)"/><text x="503.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="500" y="292" width="4" height="15" fill="rgb(235,26,10)"/><text x="503.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="500" y="308" width="4" height="15" fill="rgb(205,166,49)"/><text x="503.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="500" y="324" width="4" height="15" fill="rgb(210,54,49)"/><text x="503.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="500" y="340" width="4" height="15" fill="rgb(228,91,17)"/><text x="503.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="500" y="356" width="4" height="15" fill="rgb(231,141,39)"/><text x="503.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/fft/__init__.py:188) (1 samples, 0.28%)</title><rect x="500" y="372" width="4" height="15" fill="rgb(253,70,5)"/><text x="503.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="500" y="388" width="4" height="15" fill="rgb(236,193,35)"/><text x="503.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="500" y="404" width="4" height="15" fill="rgb(218,213,26)"/><text x="503.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="500" y="420" width="4" height="15" fill="rgb(234,179,45)"/><text x="503.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="500" y="436" width="4" height="15" fill="rgb(206,50,7)"/><text x="503.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:848) (1 samples, 0.28%)</title><rect x="500" y="452" width="4" height="15" fill="rgb(228,220,21)"/><text x="503.00" y="462.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;:490) (1 samples, 0.28%)</title><rect x="500" y="468" width="4" height="15" fill="rgb(205,117,7)"/><text x="503.00" y="478.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.28%)</title><rect x="504" y="820" width="3" height="15" fill="rgb(214,114,1)"/><text x="507.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.28%)</title><rect x="504" y="836" width="3" height="15" fill="rgb(209,229,2)"/><text x="507.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="504" y="852" width="3" height="15" fill="rgb(254,2,42)"/><text x="507.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="504" y="868" width="3" height="15" fill="rgb(231,39,20)"/><text x="507.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.28%)</title><rect x="504" y="884" width="3" height="15" fill="rgb(206,129,11)"/><text x="507.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.28%)</title><rect x="504" y="900" width="3" height="15" fill="rgb(214,154,39)"/><text x="507.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.28%)</title><rect x="504" y="916" width="3" height="15" fill="rgb(208,173,49)"/><text x="507.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.28%)</title><rect x="504" y="932" width="3" height="15" fill="rgb(218,219,9)"/><text x="507.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.28%)</title><rect x="504" y="948" width="3" height="15" fill="rgb(223,175,51)"/><text x="507.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.28%)</title><rect x="504" y="964" width="3" height="15" fill="rgb(252,197,23)"/><text x="507.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.28%)</title><rect x="504" y="980" width="3" height="15" fill="rgb(246,9,38)"/><text x="507.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.28%)</title><rect x="504" y="996" width="3" height="15" fill="rgb(230,205,3)"/><text x="507.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.28%)</title><rect x="504" y="1012" width="3" height="15" fill="rgb(230,218,32)"/><text x="507.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="504" y="1028" width="3" height="15" fill="rgb(213,121,27)"/><text x="507.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.28%)</title><rect x="504" y="1044" width="3" height="15" fill="rgb(249,47,46)"/><text x="507.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.28%)</title><rect x="507" y="916" width="3" height="15" fill="rgb(209,111,7)"/><text x="510.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.28%)</title><rect x="507" y="932" width="3" height="15" fill="rgb(229,17,37)"/><text x="510.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="507" y="948" width="3" height="15" fill="rgb(247,136,27)"/><text x="510.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="507" y="964" width="3" height="15" fill="rgb(225,207,0)"/><text x="510.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.28%)</title><rect x="507" y="980" width="3" height="15" fill="rgb(209,5,11)"/><text x="510.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.28%)</title><rect x="507" y="996" width="3" height="15" fill="rgb(213,158,54)"/><text x="510.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="507" y="1012" width="3" height="15" fill="rgb(219,41,1)"/><text x="510.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="507" y="1028" width="3" height="15" fill="rgb(245,18,7)"/><text x="510.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="507" y="1044" width="3" height="15" fill="rgb(207,3,19)"/><text x="510.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="507" y="1060" width="3" height="15" fill="rgb(252,151,17)"/><text x="510.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="507" y="1076" width="3" height="15" fill="rgb(235,80,54)"/><text x="510.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.28%)</title><rect x="507" y="1092" width="3" height="15" fill="rgb(210,112,33)"/><text x="510.00" y="1102.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.28%)</title><rect x="507" y="1108" width="3" height="15" fill="rgb(252,127,33)"/><text x="510.00" y="1118.50"></text></g><g><title>__next (sre_parse.py:248) (1 samples, 0.28%)</title><rect x="507" y="1124" width="3" height="15" fill="rgb(209,152,35)"/><text x="510.00" y="1134.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (3 samples, 0.83%)</title><rect x="504" y="148" width="9" height="15" fill="rgb(213,9,9)"/><text x="507.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="164" width="9" height="15" fill="rgb(233,51,30)"/><text x="507.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.83%)</title><rect x="504" y="180" width="9" height="15" fill="rgb(215,225,51)"/><text x="507.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="196" width="9" height="15" fill="rgb(226,120,35)"/><text x="507.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="212" width="9" height="15" fill="rgb(254,29,38)"/><text x="507.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="504" y="228" width="9" height="15" fill="rgb(210,1,26)"/><text x="507.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="504" y="244" width="9" height="15" fill="rgb(253,71,24)"/><text x="507.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="504" y="260" width="9" height="15" fill="rgb(220,98,28)"/><text x="507.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="276" width="9" height="15" fill="rgb(221,11,9)"/><text x="507.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.83%)</title><rect x="504" y="292" width="9" height="15" fill="rgb(207,37,38)"/><text x="507.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="308" width="9" height="15" fill="rgb(252,20,16)"/><text x="507.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="504" y="324" width="9" height="15" fill="rgb(205,181,2)"/><text x="507.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="504" y="340" width="9" height="15" fill="rgb(242,101,4)"/><text x="507.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="504" y="356" width="9" height="15" fill="rgb(253,34,33)"/><text x="507.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="372" width="9" height="15" fill="rgb(228,186,10)"/><text x="507.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.83%)</title><rect x="504" y="388" width="9" height="15" fill="rgb(216,161,44)"/><text x="507.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="404" width="9" height="15" fill="rgb(230,97,22)"/><text x="507.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="504" y="420" width="9" height="15" fill="rgb(233,199,11)"/><text x="507.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="504" y="436" width="9" height="15" fill="rgb(228,5,52)"/><text x="507.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="504" y="452" width="9" height="15" fill="rgb(211,143,50)"/><text x="507.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="468" width="9" height="15" fill="rgb(212,139,31)"/><text x="507.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.83%)</title><rect x="504" y="484" width="9" height="15" fill="rgb(246,14,44)"/><text x="507.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="500" width="9" height="15" fill="rgb(207,51,41)"/><text x="507.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="504" y="516" width="9" height="15" fill="rgb(222,223,10)"/><text x="507.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="504" y="532" width="9" height="15" fill="rgb(225,90,17)"/><text x="507.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="504" y="548" width="9" height="15" fill="rgb(210,187,26)"/><text x="507.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="564" width="9" height="15" fill="rgb(227,155,13)"/><text x="507.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.83%)</title><rect x="504" y="580" width="9" height="15" fill="rgb(234,140,35)"/><text x="507.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="596" width="9" height="15" fill="rgb(216,31,30)"/><text x="507.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.83%)</title><rect x="504" y="612" width="9" height="15" fill="rgb(247,53,7)"/><text x="507.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="628" width="9" height="15" fill="rgb(205,191,51)"/><text x="507.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="644" width="9" height="15" fill="rgb(252,114,37)"/><text x="507.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="504" y="660" width="9" height="15" fill="rgb(253,119,51)"/><text x="507.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="504" y="676" width="9" height="15" fill="rgb(218,208,52)"/><text x="507.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="504" y="692" width="9" height="15" fill="rgb(231,71,41)"/><text x="507.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="708" width="9" height="15" fill="rgb(220,123,21)"/><text x="507.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.83%)</title><rect x="504" y="724" width="9" height="15" fill="rgb(237,146,34)"/><text x="507.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="504" y="740" width="9" height="15" fill="rgb(246,68,2)"/><text x="507.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="504" y="756" width="9" height="15" fill="rgb(215,11,2)"/><text x="507.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="504" y="772" width="9" height="15" fill="rgb(211,50,28)"/><text x="507.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="504" y="788" width="9" height="15" fill="rgb(221,223,20)"/><text x="507.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="504" y="804" width="9" height="15" fill="rgb(209,209,47)"/><text x="507.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (2 samples, 0.55%)</title><rect x="507" y="820" width="6" height="15" fill="rgb(238,221,29)"/><text x="510.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="507" y="836" width="6" height="15" fill="rgb(225,49,47)"/><text x="510.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="507" y="852" width="6" height="15" fill="rgb(254,194,34)"/><text x="510.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="507" y="868" width="6" height="15" fill="rgb(215,184,13)"/><text x="510.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="507" y="884" width="6" height="15" fill="rgb(235,111,0)"/><text x="510.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="507" y="900" width="6" height="15" fill="rgb(254,126,19)"/><text x="510.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.28%)</title><rect x="510" y="916" width="3" height="15" fill="rgb(240,94,47)"/><text x="513.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="510" y="932" width="3" height="15" fill="rgb(249,153,3)"/><text x="513.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="510" y="948" width="3" height="15" fill="rgb(223,15,23)"/><text x="513.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.28%)</title><rect x="510" y="964" width="3" height="15" fill="rgb(242,122,52)"/><text x="513.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.28%)</title><rect x="510" y="980" width="3" height="15" fill="rgb(253,120,2)"/><text x="513.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.28%)</title><rect x="510" y="996" width="3" height="15" fill="rgb(236,95,14)"/><text x="513.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="510" y="1012" width="3" height="15" fill="rgb(210,210,35)"/><text x="513.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="510" y="1028" width="3" height="15" fill="rgb(229,39,4)"/><text x="513.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="510" y="1044" width="3" height="15" fill="rgb(208,27,31)"/><text x="513.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="510" y="1060" width="3" height="15" fill="rgb(210,18,13)"/><text x="513.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="510" y="1076" width="3" height="15" fill="rgb(224,192,13)"/><text x="513.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.28%)</title><rect x="510" y="1092" width="3" height="15" fill="rgb(220,122,28)"/><text x="513.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5639) (1 samples, 0.28%)</title><rect x="510" y="1108" width="3" height="15" fill="rgb(235,163,42)"/><text x="513.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.28%)</title><rect x="510" y="1124" width="3" height="15" fill="rgb(206,97,21)"/><text x="513.00" y="1134.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="510" y="1140" width="3" height="15" fill="rgb(244,121,47)"/><text x="513.00" y="1150.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="510" y="1156" width="3" height="15" fill="rgb(244,205,8)"/><text x="513.00" y="1166.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.28%)</title><rect x="510" y="1172" width="3" height="15" fill="rgb(251,221,22)"/><text x="513.00" y="1182.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.28%)</title><rect x="510" y="1188" width="3" height="15" fill="rgb(233,183,43)"/><text x="513.00" y="1198.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="510" y="1204" width="3" height="15" fill="rgb(214,125,12)"/><text x="513.00" y="1214.50"></text></g><g><title>_parse (sre_parse.py:682) (1 samples, 0.28%)</title><rect x="510" y="1220" width="3" height="15" fill="rgb(232,98,12)"/><text x="513.00" y="1230.50"></text></g><g><title>getuntil (sre_parse.py:271) (1 samples, 0.28%)</title><rect x="510" y="1236" width="3" height="15" fill="rgb(232,175,26)"/><text x="513.00" y="1246.50"></text></g><g><title>__next (sre_parse.py:248) (1 samples, 0.28%)</title><rect x="510" y="1252" width="3" height="15" fill="rgb(228,140,21)"/><text x="513.00" y="1262.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.28%)</title><rect x="513" y="484" width="4" height="15" fill="rgb(211,98,28)"/><text x="516.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="513" y="500" width="4" height="15" fill="rgb(253,150,3)"/><text x="516.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="513" y="516" width="4" height="15" fill="rgb(238,204,33)"/><text x="516.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="513" y="532" width="4" height="15" fill="rgb(230,29,29)"/><text x="516.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="513" y="548" width="4" height="15" fill="rgb(254,27,33)"/><text x="516.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="564" width="4" height="15" fill="rgb(227,50,31)"/><text x="516.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:230) (1 samples, 0.28%)</title><rect x="513" y="580" width="4" height="15" fill="rgb(238,202,26)"/><text x="516.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="513" y="596" width="4" height="15" fill="rgb(226,26,17)"/><text x="516.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="513" y="612" width="4" height="15" fill="rgb(232,206,51)"/><text x="516.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="513" y="628" width="4" height="15" fill="rgb(242,218,3)"/><text x="516.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="513" y="644" width="4" height="15" fill="rgb(248,16,17)"/><text x="516.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="660" width="4" height="15" fill="rgb(206,207,6)"/><text x="516.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py:17) (1 samples, 0.28%)</title><rect x="513" y="676" width="4" height="15" fill="rgb(235,145,52)"/><text x="516.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="513" y="692" width="4" height="15" fill="rgb(240,167,32)"/><text x="516.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="513" y="708" width="4" height="15" fill="rgb(221,150,38)"/><text x="516.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="513" y="724" width="4" height="15" fill="rgb(249,192,13)"/><text x="516.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="513" y="740" width="4" height="15" fill="rgb(235,110,7)"/><text x="516.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="756" width="4" height="15" fill="rgb(221,111,18)"/><text x="516.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py:11) (1 samples, 0.28%)</title><rect x="513" y="772" width="4" height="15" fill="rgb(227,149,31)"/><text x="516.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="513" y="788" width="4" height="15" fill="rgb(230,137,16)"/><text x="516.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="513" y="804" width="4" height="15" fill="rgb(209,184,54)"/><text x="516.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="513" y="820" width="4" height="15" fill="rgb(241,10,21)"/><text x="516.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="513" y="836" width="4" height="15" fill="rgb(240,184,33)"/><text x="516.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="852" width="4" height="15" fill="rgb(221,80,13)"/><text x="516.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_util.py:9) (1 samples, 0.28%)</title><rect x="513" y="868" width="4" height="15" fill="rgb(245,24,1)"/><text x="516.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="513" y="884" width="4" height="15" fill="rgb(237,51,24)"/><text x="516.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="513" y="900" width="4" height="15" fill="rgb(205,158,7)"/><text x="516.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="513" y="916" width="4" height="15" fill="rgb(249,16,12)"/><text x="516.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="513" y="932" width="4" height="15" fill="rgb(220,148,50)"/><text x="516.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="948" width="4" height="15" fill="rgb(223,65,34)"/><text x="516.00" y="958.50"></text></g><g><title>&lt;module&gt; (multiprocessing/__init__.py:16) (1 samples, 0.28%)</title><rect x="513" y="964" width="4" height="15" fill="rgb(241,91,35)"/><text x="516.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="513" y="980" width="4" height="15" fill="rgb(210,156,44)"/><text x="516.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="996" width="4" height="15" fill="rgb(232,157,2)"/><text x="516.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="513" y="1012" width="4" height="15" fill="rgb(254,196,21)"/><text x="516.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="513" y="1028" width="4" height="15" fill="rgb(211,57,14)"/><text x="516.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="513" y="1044" width="4" height="15" fill="rgb(206,67,52)"/><text x="516.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="513" y="1060" width="4" height="15" fill="rgb(207,6,36)"/><text x="516.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="1076" width="4" height="15" fill="rgb(242,48,43)"/><text x="516.00" y="1086.50"></text></g><g><title>&lt;module&gt; (multiprocessing/context.py:5) (1 samples, 0.28%)</title><rect x="513" y="1092" width="4" height="15" fill="rgb(219,79,21)"/><text x="516.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="513" y="1108" width="4" height="15" fill="rgb(229,187,20)"/><text x="516.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="513" y="1124" width="4" height="15" fill="rgb(231,141,34)"/><text x="516.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="513" y="1140" width="4" height="15" fill="rgb(245,131,15)"/><text x="516.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="513" y="1156" width="4" height="15" fill="rgb(206,148,10)"/><text x="516.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.28%)</title><rect x="513" y="1172" width="4" height="15" fill="rgb(218,67,31)"/><text x="516.00" y="1182.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.28%)</title><rect x="513" y="1188" width="4" height="15" fill="rgb(207,224,43)"/><text x="516.00" y="1198.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (2 samples, 0.55%)</title><rect x="513" y="148" width="7" height="15" fill="rgb(238,117,52)"/><text x="516.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="513" y="164" width="7" height="15" fill="rgb(242,152,39)"/><text x="516.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.55%)</title><rect x="513" y="180" width="7" height="15" fill="rgb(223,181,6)"/><text x="516.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="513" y="196" width="7" height="15" fill="rgb(229,127,41)"/><text x="516.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="513" y="212" width="7" height="15" fill="rgb(254,105,30)"/><text x="516.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="513" y="228" width="7" height="15" fill="rgb(242,101,44)"/><text x="516.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="513" y="244" width="7" height="15" fill="rgb(222,130,4)"/><text x="516.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="513" y="260" width="7" height="15" fill="rgb(241,92,4)"/><text x="516.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="513" y="276" width="7" height="15" fill="rgb(237,103,29)"/><text x="516.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.55%)</title><rect x="513" y="292" width="7" height="15" fill="rgb(227,111,50)"/><text x="516.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="513" y="308" width="7" height="15" fill="rgb(248,28,34)"/><text x="516.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="513" y="324" width="7" height="15" fill="rgb(208,223,28)"/><text x="516.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="513" y="340" width="7" height="15" fill="rgb(237,9,16)"/><text x="516.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="513" y="356" width="7" height="15" fill="rgb(254,129,21)"/><text x="516.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="513" y="372" width="7" height="15" fill="rgb(219,39,44)"/><text x="516.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.55%)</title><rect x="513" y="388" width="7" height="15" fill="rgb(211,45,30)"/><text x="516.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="513" y="404" width="7" height="15" fill="rgb(226,214,10)"/><text x="516.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="513" y="420" width="7" height="15" fill="rgb(207,71,4)"/><text x="516.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="513" y="436" width="7" height="15" fill="rgb(252,225,51)"/><text x="516.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="513" y="452" width="7" height="15" fill="rgb(226,48,9)"/><text x="516.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="513" y="468" width="7" height="15" fill="rgb(235,63,21)"/><text x="516.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.28%)</title><rect x="517" y="484" width="3" height="15" fill="rgb(250,187,18)"/><text x="520.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="517" y="500" width="3" height="15" fill="rgb(245,199,1)"/><text x="520.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="517" y="516" width="3" height="15" fill="rgb(205,76,5)"/><text x="520.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="517" y="532" width="3" height="15" fill="rgb(232,224,18)"/><text x="520.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="517" y="548" width="3" height="15" fill="rgb(217,13,1)"/><text x="520.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="517" y="564" width="3" height="15" fill="rgb(234,201,31)"/><text x="520.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.28%)</title><rect x="517" y="580" width="3" height="15" fill="rgb(205,112,11)"/><text x="520.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="517" y="596" width="3" height="15" fill="rgb(253,211,9)"/><text x="520.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="517" y="612" width="3" height="15" fill="rgb(205,79,46)"/><text x="520.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="517" y="628" width="3" height="15" fill="rgb(212,161,2)"/><text x="520.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="517" y="644" width="3" height="15" fill="rgb(245,72,9)"/><text x="520.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="517" y="660" width="3" height="15" fill="rgb(244,111,17)"/><text x="520.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.28%)</title><rect x="517" y="676" width="3" height="15" fill="rgb(218,208,22)"/><text x="520.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="517" y="692" width="3" height="15" fill="rgb(240,71,42)"/><text x="520.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="517" y="708" width="3" height="15" fill="rgb(234,49,39)"/><text x="520.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="517" y="724" width="3" height="15" fill="rgb(219,52,49)"/><text x="520.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="517" y="740" width="3" height="15" fill="rgb(224,129,25)"/><text x="520.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="517" y="756" width="3" height="15" fill="rgb(226,111,15)"/><text x="520.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.28%)</title><rect x="517" y="772" width="3" height="15" fill="rgb(247,6,52)"/><text x="520.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="517" y="788" width="3" height="15" fill="rgb(220,16,22)"/><text x="520.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="517" y="804" width="3" height="15" fill="rgb(218,105,12)"/><text x="520.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="517" y="820" width="3" height="15" fill="rgb(244,63,19)"/><text x="520.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="517" y="836" width="3" height="15" fill="rgb(214,194,27)"/><text x="520.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="517" y="852" width="3" height="15" fill="rgb(229,181,8)"/><text x="520.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="517" y="868" width="3" height="15" fill="rgb(215,132,26)"/><text x="520.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="517" y="884" width="3" height="15" fill="rgb(221,28,17)"/><text x="520.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.28%)</title><rect x="517" y="900" width="3" height="15" fill="rgb(207,114,2)"/><text x="520.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="517" y="916" width="3" height="15" fill="rgb(205,173,19)"/><text x="520.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="517" y="932" width="3" height="15" fill="rgb(244,171,47)"/><text x="520.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="517" y="948" width="3" height="15" fill="rgb(245,219,40)"/><text x="520.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="517" y="964" width="3" height="15" fill="rgb(211,216,7)"/><text x="520.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="517" y="980" width="3" height="15" fill="rgb(247,26,0)"/><text x="520.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="517" y="996" width="3" height="15" fill="rgb(220,59,22)"/><text x="520.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="517" y="1012" width="3" height="15" fill="rgb(254,108,9)"/><text x="520.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:7129) (1 samples, 0.28%)</title><rect x="517" y="1028" width="3" height="15" fill="rgb(226,90,48)"/><text x="520.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.28%)</title><rect x="517" y="1044" width="3" height="15" fill="rgb(237,86,51)"/><text x="520.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:694) (1 samples, 0.28%)</title><rect x="517" y="1060" width="3" height="15" fill="rgb(222,216,11)"/><text x="520.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.28%)</title><rect x="520" y="436" width="3" height="15" fill="rgb(232,120,8)"/><text x="523.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="452" width="3" height="15" fill="rgb(237,140,30)"/><text x="523.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="468" width="3" height="15" fill="rgb(235,212,39)"/><text x="523.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="484" width="3" height="15" fill="rgb(240,167,53)"/><text x="523.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="500" width="3" height="15" fill="rgb(224,148,7)"/><text x="523.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="516" width="3" height="15" fill="rgb(214,155,7)"/><text x="523.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.28%)</title><rect x="520" y="532" width="3" height="15" fill="rgb(244,99,48)"/><text x="523.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="548" width="3" height="15" fill="rgb(218,159,29)"/><text x="523.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="564" width="3" height="15" fill="rgb(227,62,3)"/><text x="523.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="580" width="3" height="15" fill="rgb(210,54,16)"/><text x="523.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="596" width="3" height="15" fill="rgb(241,169,8)"/><text x="523.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="612" width="3" height="15" fill="rgb(229,38,52)"/><text x="523.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.28%)</title><rect x="520" y="628" width="3" height="15" fill="rgb(241,126,12)"/><text x="523.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="644" width="3" height="15" fill="rgb(242,151,29)"/><text x="523.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="660" width="3" height="15" fill="rgb(236,56,3)"/><text x="523.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="676" width="3" height="15" fill="rgb(242,214,8)"/><text x="523.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="692" width="3" height="15" fill="rgb(254,71,22)"/><text x="523.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="708" width="3" height="15" fill="rgb(224,171,25)"/><text x="523.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.28%)</title><rect x="520" y="724" width="3" height="15" fill="rgb(254,72,49)"/><text x="523.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="740" width="3" height="15" fill="rgb(209,58,1)"/><text x="523.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="756" width="3" height="15" fill="rgb(212,66,19)"/><text x="523.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="772" width="3" height="15" fill="rgb(236,200,34)"/><text x="523.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="788" width="3" height="15" fill="rgb(219,7,20)"/><text x="523.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="804" width="3" height="15" fill="rgb(213,78,43)"/><text x="523.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.28%)</title><rect x="520" y="820" width="3" height="15" fill="rgb(211,119,31)"/><text x="523.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="836" width="3" height="15" fill="rgb(208,137,40)"/><text x="523.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="852" width="3" height="15" fill="rgb(211,216,18)"/><text x="523.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="868" width="3" height="15" fill="rgb(221,153,47)"/><text x="523.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="884" width="3" height="15" fill="rgb(213,116,42)"/><text x="523.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="900" width="3" height="15" fill="rgb(250,57,17)"/><text x="523.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.28%)</title><rect x="520" y="916" width="3" height="15" fill="rgb(227,5,48)"/><text x="523.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="932" width="3" height="15" fill="rgb(220,192,9)"/><text x="523.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="948" width="3" height="15" fill="rgb(206,33,36)"/><text x="523.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="964" width="3" height="15" fill="rgb(218,218,2)"/><text x="523.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="980" width="3" height="15" fill="rgb(252,109,54)"/><text x="523.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="996" width="3" height="15" fill="rgb(214,51,47)"/><text x="523.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.28%)</title><rect x="520" y="1012" width="3" height="15" fill="rgb(236,22,36)"/><text x="523.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="1028" width="3" height="15" fill="rgb(220,113,4)"/><text x="523.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="1044" width="3" height="15" fill="rgb(239,81,54)"/><text x="523.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="1060" width="3" height="15" fill="rgb(244,200,20)"/><text x="523.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="1076" width="3" height="15" fill="rgb(246,28,40)"/><text x="523.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="1092" width="3" height="15" fill="rgb(223,24,24)"/><text x="523.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.28%)</title><rect x="520" y="1108" width="3" height="15" fill="rgb(209,137,7)"/><text x="523.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="1124" width="3" height="15" fill="rgb(218,229,41)"/><text x="523.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="1140" width="3" height="15" fill="rgb(236,48,33)"/><text x="523.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="1156" width="3" height="15" fill="rgb(227,85,44)"/><text x="523.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="1172" width="3" height="15" fill="rgb(251,34,3)"/><text x="523.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="1188" width="3" height="15" fill="rgb(212,92,26)"/><text x="523.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.28%)</title><rect x="520" y="1204" width="3" height="15" fill="rgb(251,57,53)"/><text x="523.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="1220" width="3" height="15" fill="rgb(243,200,27)"/><text x="523.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="1236" width="3" height="15" fill="rgb(231,99,6)"/><text x="523.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="1252" width="3" height="15" fill="rgb(216,113,19)"/><text x="523.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="1268" width="3" height="15" fill="rgb(233,124,40)"/><text x="523.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="1284" width="3" height="15" fill="rgb(241,168,2)"/><text x="523.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.28%)</title><rect x="520" y="1300" width="3" height="15" fill="rgb(225,188,51)"/><text x="523.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="1316" width="3" height="15" fill="rgb(207,92,20)"/><text x="523.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="1332" width="3" height="15" fill="rgb(205,182,2)"/><text x="523.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="1348" width="3" height="15" fill="rgb(241,176,51)"/><text x="523.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="520" y="1364" width="3" height="15" fill="rgb(207,135,25)"/><text x="523.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="520" y="1380" width="3" height="15" fill="rgb(238,187,18)"/><text x="523.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:29) (1 samples, 0.28%)</title><rect x="520" y="1396" width="3" height="15" fill="rgb(225,148,10)"/><text x="523.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="520" y="1412" width="3" height="15" fill="rgb(216,191,43)"/><text x="523.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="520" y="1428" width="3" height="15" fill="rgb(215,223,47)"/><text x="523.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="520" y="1444" width="3" height="15" fill="rgb(223,52,34)"/><text x="523.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="520" y="1460" width="3" height="15" fill="rgb(236,11,45)"/><text x="523.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="520" y="1476" width="3" height="15" fill="rgb(234,1,7)"/><text x="523.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="520" y="1492" width="3" height="15" fill="rgb(253,16,19)"/><text x="523.00" y="1502.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="520" y="1508" width="3" height="15" fill="rgb(239,198,11)"/><text x="523.00" y="1518.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.28%)</title><rect x="523" y="1108" width="3" height="15" fill="rgb(244,71,17)"/><text x="526.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="523" y="1124" width="3" height="15" fill="rgb(210,149,29)"/><text x="526.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="523" y="1140" width="3" height="15" fill="rgb(225,201,54)"/><text x="526.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="523" y="1156" width="3" height="15" fill="rgb(248,26,2)"/><text x="526.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="523" y="1172" width="3" height="15" fill="rgb(208,78,17)"/><text x="526.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="523" y="1188" width="3" height="15" fill="rgb(228,43,14)"/><text x="526.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.28%)</title><rect x="523" y="1204" width="3" height="15" fill="rgb(206,38,29)"/><text x="526.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="523" y="1220" width="3" height="15" fill="rgb(229,57,34)"/><text x="526.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="523" y="1236" width="3" height="15" fill="rgb(212,100,9)"/><text x="526.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="523" y="1252" width="3" height="15" fill="rgb(249,41,43)"/><text x="526.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="523" y="1268" width="3" height="15" fill="rgb(207,144,9)"/><text x="526.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="523" y="1284" width="3" height="15" fill="rgb(208,191,40)"/><text x="526.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.28%)</title><rect x="523" y="1300" width="3" height="15" fill="rgb(247,65,15)"/><text x="526.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.28%)</title><rect x="523" y="1316" width="3" height="15" fill="rgb(218,201,25)"/><text x="526.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.28%)</title><rect x="523" y="1332" width="3" height="15" fill="rgb(229,15,53)"/><text x="526.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.28%)</title><rect x="523" y="1348" width="3" height="15" fill="rgb(227,102,32)"/><text x="526.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.28%)</title><rect x="523" y="1364" width="3" height="15" fill="rgb(232,75,42)"/><text x="526.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:589) (1 samples, 0.28%)</title><rect x="523" y="1380" width="3" height="15" fill="rgb(229,115,2)"/><text x="526.00" y="1390.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.28%)</title><rect x="523" y="1396" width="3" height="15" fill="rgb(216,148,38)"/><text x="526.00" y="1406.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.28%)</title><rect x="526" y="1764" width="4" height="15" fill="rgb(237,76,1)"/><text x="529.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="526" y="1780" width="4" height="15" fill="rgb(218,194,10)"/><text x="529.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="526" y="1796" width="4" height="15" fill="rgb(222,116,6)"/><text x="529.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="526" y="1812" width="4" height="15" fill="rgb(252,209,44)"/><text x="529.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="526" y="1828" width="4" height="15" fill="rgb(207,126,20)"/><text x="529.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="526" y="1844" width="4" height="15" fill="rgb(206,20,17)"/><text x="529.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="526" y="1860" width="4" height="15" fill="rgb(243,61,54)"/><text x="529.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="526" y="1876" width="4" height="15" fill="rgb(212,47,47)"/><text x="529.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.28%)</title><rect x="526" y="1892" width="4" height="15" fill="rgb(208,164,21)"/><text x="529.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="526" y="1908" width="4" height="15" fill="rgb(211,55,50)"/><text x="529.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="526" y="1924" width="4" height="15" fill="rgb(226,47,23)"/><text x="529.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="526" y="1940" width="4" height="15" fill="rgb(246,57,40)"/><text x="529.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="526" y="1956" width="4" height="15" fill="rgb(223,96,3)"/><text x="529.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="526" y="1972" width="4" height="15" fill="rgb(212,150,20)"/><text x="529.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:24) (1 samples, 0.28%)</title><rect x="526" y="1988" width="4" height="15" fill="rgb(238,225,5)"/><text x="529.00" y="1998.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="526" y="2004" width="4" height="15" fill="rgb(210,215,18)"/><text x="529.00" y="2014.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="526" y="2020" width="4" height="15" fill="rgb(215,65,22)"/><text x="529.00" y="2030.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.28%)</title><rect x="526" y="2036" width="4" height="15" fill="rgb(210,8,22)"/><text x="529.00" y="2046.50"></text></g><g><title>parse (sre_parse.py:925) (1 samples, 0.28%)</title><rect x="526" y="2052" width="4" height="15" fill="rgb(241,144,32)"/><text x="529.00" y="2062.50"></text></g><g><title>__init__ (sre_parse.py:77) (1 samples, 0.28%)</title><rect x="526" y="2068" width="4" height="15" fill="rgb(230,196,19)"/><text x="529.00" y="2078.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (2 samples, 0.55%)</title><rect x="526" y="1668" width="7" height="15" fill="rgb(252,217,30)"/><text x="529.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="526" y="1684" width="7" height="15" fill="rgb(208,133,49)"/><text x="529.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="526" y="1700" width="7" height="15" fill="rgb(230,44,15)"/><text x="529.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="526" y="1716" width="7" height="15" fill="rgb(223,128,31)"/><text x="529.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="526" y="1732" width="7" height="15" fill="rgb(214,54,18)"/><text x="529.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="526" y="1748" width="7" height="15" fill="rgb(241,36,7)"/><text x="529.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:25) (1 samples, 0.28%)</title><rect x="530" y="1764" width="3" height="15" fill="rgb(226,205,42)"/><text x="533.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="530" y="1780" width="3" height="15" fill="rgb(227,12,19)"/><text x="533.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="530" y="1796" width="3" height="15" fill="rgb(232,224,31)"/><text x="533.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="530" y="1812" width="3" height="15" fill="rgb(209,184,43)"/><text x="533.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="530" y="1828" width="3" height="15" fill="rgb(245,132,23)"/><text x="533.00" y="1838.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="530" y="1844" width="3" height="15" fill="rgb(209,220,12)"/><text x="533.00" y="1854.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="530" y="1860" width="3" height="15" fill="rgb(222,147,54)"/><text x="533.00" y="1870.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.28%)</title><rect x="533" y="2100" width="3" height="15" fill="rgb(222,179,51)"/><text x="536.00" y="2110.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="533" y="2116" width="3" height="15" fill="rgb(231,199,10)"/><text x="536.00" y="2126.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:4) (12 samples, 3.31%)</title><rect x="500" y="52" width="39" height="15" fill="rgb(207,110,35)"/><text x="503.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 3.31%)</title><rect x="500" y="68" width="39" height="15" fill="rgb(214,78,11)"/><text x="503.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 3.31%)</title><rect x="500" y="84" width="39" height="15" fill="rgb(207,180,1)"/><text x="503.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 3.31%)</title><rect x="500" y="100" width="39" height="15" fill="rgb(226,4,39)"/><text x="503.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 3.31%)</title><rect x="500" y="116" width="39" height="15" fill="rgb(208,176,29)"/><text x="503.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 3.31%)</title><rect x="500" y="132" width="39" height="15" fill="rgb(215,67,13)"/><text x="503.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (6 samples, 1.65%)</title><rect x="520" y="148" width="19" height="15" fill="rgb(221,64,34)"/><text x="523.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.65%)</title><rect x="520" y="164" width="19" height="15" fill="rgb(241,64,52)"/><text x="523.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.65%)</title><rect x="520" y="180" width="19" height="15" fill="rgb(215,128,38)"/><text x="523.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.65%)</title><rect x="520" y="196" width="19" height="15" fill="rgb(207,116,24)"/><text x="523.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.65%)</title><rect x="520" y="212" width="19" height="15" fill="rgb(210,94,52)"/><text x="523.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.65%)</title><rect x="520" y="228" width="19" height="15" fill="rgb(228,127,29)"/><text x="523.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.65%)</title><rect x="520" y="244" width="19" height="15" fill="rgb(211,229,24)"/><text x="523.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.65%)</title><rect x="520" y="260" width="19" height="15" fill="rgb(248,115,24)"/><text x="523.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.65%)</title><rect x="520" y="276" width="19" height="15" fill="rgb(236,200,9)"/><text x="523.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.65%)</title><rect x="520" y="292" width="19" height="15" fill="rgb(225,99,46)"/><text x="523.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.65%)</title><rect x="520" y="308" width="19" height="15" fill="rgb(232,140,29)"/><text x="523.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.65%)</title><rect x="520" y="324" width="19" height="15" fill="rgb(254,178,42)"/><text x="523.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.65%)</title><rect x="520" y="340" width="19" height="15" fill="rgb(236,50,0)"/><text x="523.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.65%)</title><rect x="520" y="356" width="19" height="15" fill="rgb(233,88,40)"/><text x="523.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.65%)</title><rect x="520" y="372" width="19" height="15" fill="rgb(239,78,19)"/><text x="523.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.65%)</title><rect x="520" y="388" width="19" height="15" fill="rgb(237,132,49)"/><text x="523.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.65%)</title><rect x="520" y="404" width="19" height="15" fill="rgb(222,8,6)"/><text x="523.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.65%)</title><rect x="520" y="420" width="19" height="15" fill="rgb(249,126,14)"/><text x="523.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.38%)</title><rect x="523" y="436" width="16" height="15" fill="rgb(246,191,47)"/><text x="526.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="452" width="16" height="15" fill="rgb(242,17,1)"/><text x="526.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.38%)</title><rect x="523" y="468" width="16" height="15" fill="rgb(217,133,37)"/><text x="526.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="484" width="16" height="15" fill="rgb(216,218,30)"/><text x="526.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="500" width="16" height="15" fill="rgb(240,15,35)"/><text x="526.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.38%)</title><rect x="523" y="516" width="16" height="15" fill="rgb(249,57,25)"/><text x="526.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.38%)</title><rect x="523" y="532" width="16" height="15" fill="rgb(221,147,18)"/><text x="526.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.38%)</title><rect x="523" y="548" width="16" height="15" fill="rgb(254,150,44)"/><text x="526.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="564" width="16" height="15" fill="rgb(218,14,29)"/><text x="526.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.38%)</title><rect x="523" y="580" width="16" height="15" fill="rgb(254,191,18)"/><text x="526.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="596" width="16" height="15" fill="rgb(249,52,6)"/><text x="526.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.38%)</title><rect x="523" y="612" width="16" height="15" fill="rgb(251,54,24)"/><text x="526.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.38%)</title><rect x="523" y="628" width="16" height="15" fill="rgb(251,95,50)"/><text x="526.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.38%)</title><rect x="523" y="644" width="16" height="15" fill="rgb(238,50,46)"/><text x="526.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="660" width="16" height="15" fill="rgb(244,195,50)"/><text x="526.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.38%)</title><rect x="523" y="676" width="16" height="15" fill="rgb(244,221,43)"/><text x="526.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="692" width="16" height="15" fill="rgb(207,49,2)"/><text x="526.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.38%)</title><rect x="523" y="708" width="16" height="15" fill="rgb(246,188,45)"/><text x="526.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.38%)</title><rect x="523" y="724" width="16" height="15" fill="rgb(209,167,45)"/><text x="526.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.38%)</title><rect x="523" y="740" width="16" height="15" fill="rgb(209,87,21)"/><text x="526.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="756" width="16" height="15" fill="rgb(227,31,47)"/><text x="526.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.38%)</title><rect x="523" y="772" width="16" height="15" fill="rgb(240,90,2)"/><text x="526.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="788" width="16" height="15" fill="rgb(243,24,54)"/><text x="526.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.38%)</title><rect x="523" y="804" width="16" height="15" fill="rgb(254,207,17)"/><text x="526.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.38%)</title><rect x="523" y="820" width="16" height="15" fill="rgb(206,114,30)"/><text x="526.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.38%)</title><rect x="523" y="836" width="16" height="15" fill="rgb(223,118,47)"/><text x="526.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="852" width="16" height="15" fill="rgb(230,134,29)"/><text x="526.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.38%)</title><rect x="523" y="868" width="16" height="15" fill="rgb(244,104,28)"/><text x="526.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="884" width="16" height="15" fill="rgb(254,67,54)"/><text x="526.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.38%)</title><rect x="523" y="900" width="16" height="15" fill="rgb(239,165,51)"/><text x="526.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="916" width="16" height="15" fill="rgb(211,36,9)"/><text x="526.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="932" width="16" height="15" fill="rgb(226,103,42)"/><text x="526.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.38%)</title><rect x="523" y="948" width="16" height="15" fill="rgb(253,199,32)"/><text x="526.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.38%)</title><rect x="523" y="964" width="16" height="15" fill="rgb(228,137,42)"/><text x="526.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.38%)</title><rect x="523" y="980" width="16" height="15" fill="rgb(238,31,52)"/><text x="526.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="996" width="16" height="15" fill="rgb(235,220,23)"/><text x="526.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.38%)</title><rect x="523" y="1012" width="16" height="15" fill="rgb(249,46,38)"/><text x="526.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.38%)</title><rect x="523" y="1028" width="16" height="15" fill="rgb(238,196,26)"/><text x="526.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.38%)</title><rect x="523" y="1044" width="16" height="15" fill="rgb(231,76,20)"/><text x="526.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.38%)</title><rect x="523" y="1060" width="16" height="15" fill="rgb(210,16,20)"/><text x="526.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.38%)</title><rect x="523" y="1076" width="16" height="15" fill="rgb(221,77,24)"/><text x="526.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.38%)</title><rect x="523" y="1092" width="16" height="15" fill="rgb(206,121,16)"/><text x="526.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.10%)</title><rect x="526" y="1108" width="13" height="15" fill="rgb(212,73,52)"/><text x="529.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.10%)</title><rect x="526" y="1124" width="13" height="15" fill="rgb(206,177,3)"/><text x="529.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="526" y="1140" width="13" height="15" fill="rgb(250,79,54)"/><text x="529.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="526" y="1156" width="13" height="15" fill="rgb(212,110,52)"/><text x="529.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="526" y="1172" width="13" height="15" fill="rgb(253,34,35)"/><text x="529.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="526" y="1188" width="13" height="15" fill="rgb(249,221,36)"/><text x="529.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="526" y="1204" width="13" height="15" fill="rgb(217,124,48)"/><text x="529.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="526" y="1220" width="13" height="15" fill="rgb(233,150,32)"/><text x="529.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.10%)</title><rect x="526" y="1236" width="13" height="15" fill="rgb(210,21,14)"/><text x="529.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.10%)</title><rect x="526" y="1252" width="13" height="15" fill="rgb(231,153,36)"/><text x="529.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="526" y="1268" width="13" height="15" fill="rgb(244,188,38)"/><text x="529.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="526" y="1284" width="13" height="15" fill="rgb(223,26,23)"/><text x="529.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="526" y="1300" width="13" height="15" fill="rgb(250,216,54)"/><text x="529.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="526" y="1316" width="13" height="15" fill="rgb(226,215,7)"/><text x="529.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="526" y="1332" width="13" height="15" fill="rgb(245,72,35)"/><text x="529.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="526" y="1348" width="13" height="15" fill="rgb(226,155,1)"/><text x="529.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.10%)</title><rect x="526" y="1364" width="13" height="15" fill="rgb(217,169,32)"/><text x="529.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="526" y="1380" width="13" height="15" fill="rgb(218,220,48)"/><text x="529.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="526" y="1396" width="13" height="15" fill="rgb(251,17,35)"/><text x="529.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="526" y="1412" width="13" height="15" fill="rgb(249,179,44)"/><text x="529.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="526" y="1428" width="13" height="15" fill="rgb(206,78,48)"/><text x="529.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="526" y="1444" width="13" height="15" fill="rgb(245,186,5)"/><text x="529.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (4 samples, 1.10%)</title><rect x="526" y="1460" width="13" height="15" fill="rgb(214,102,24)"/><text x="529.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="526" y="1476" width="13" height="15" fill="rgb(206,123,5)"/><text x="529.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="526" y="1492" width="13" height="15" fill="rgb(229,79,34)"/><text x="529.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="526" y="1508" width="13" height="15" fill="rgb(209,30,50)"/><text x="529.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="526" y="1524" width="13" height="15" fill="rgb(232,29,11)"/><text x="529.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="526" y="1540" width="13" height="15" fill="rgb(231,224,52)"/><text x="529.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (4 samples, 1.10%)</title><rect x="526" y="1556" width="13" height="15" fill="rgb(237,61,13)"/><text x="529.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (4 samples, 1.10%)</title><rect x="526" y="1572" width="13" height="15" fill="rgb(225,181,5)"/><text x="529.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="526" y="1588" width="13" height="15" fill="rgb(239,31,46)"/><text x="529.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="526" y="1604" width="13" height="15" fill="rgb(237,90,17)"/><text x="529.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="526" y="1620" width="13" height="15" fill="rgb(254,206,38)"/><text x="529.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="526" y="1636" width="13" height="15" fill="rgb(213,158,51)"/><text x="529.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="526" y="1652" width="13" height="15" fill="rgb(210,217,18)"/><text x="529.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (2 samples, 0.55%)</title><rect x="533" y="1668" width="6" height="15" fill="rgb(254,104,44)"/><text x="536.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (2 samples, 0.55%)</title><rect x="533" y="1684" width="6" height="15" fill="rgb(230,35,38)"/><text x="536.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="533" y="1700" width="6" height="15" fill="rgb(211,127,15)"/><text x="536.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="533" y="1716" width="6" height="15" fill="rgb(246,141,13)"/><text x="536.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="533" y="1732" width="6" height="15" fill="rgb(241,210,24)"/><text x="536.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="533" y="1748" width="6" height="15" fill="rgb(234,156,1)"/><text x="536.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="533" y="1764" width="6" height="15" fill="rgb(215,208,15)"/><text x="536.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (2 samples, 0.55%)</title><rect x="533" y="1780" width="6" height="15" fill="rgb(229,216,53)"/><text x="536.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="533" y="1796" width="6" height="15" fill="rgb(212,187,33)"/><text x="536.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="533" y="1812" width="6" height="15" fill="rgb(215,164,41)"/><text x="536.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="533" y="1828" width="6" height="15" fill="rgb(230,59,16)"/><text x="536.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="533" y="1844" width="6" height="15" fill="rgb(234,27,52)"/><text x="536.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="533" y="1860" width="6" height="15" fill="rgb(220,75,0)"/><text x="536.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (2 samples, 0.55%)</title><rect x="533" y="1876" width="6" height="15" fill="rgb(239,5,16)"/><text x="536.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="533" y="1892" width="6" height="15" fill="rgb(210,43,54)"/><text x="536.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="533" y="1908" width="6" height="15" fill="rgb(252,38,33)"/><text x="536.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="533" y="1924" width="6" height="15" fill="rgb(231,96,12)"/><text x="536.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="533" y="1940" width="6" height="15" fill="rgb(228,53,24)"/><text x="536.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="533" y="1956" width="6" height="15" fill="rgb(245,29,23)"/><text x="536.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:41) (2 samples, 0.55%)</title><rect x="533" y="1972" width="6" height="15" fill="rgb(241,114,39)"/><text x="536.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.55%)</title><rect x="533" y="1988" width="6" height="15" fill="rgb(216,154,0)"/><text x="536.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="533" y="2004" width="6" height="15" fill="rgb(224,156,18)"/><text x="536.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="533" y="2020" width="6" height="15" fill="rgb(229,224,52)"/><text x="536.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="533" y="2036" width="6" height="15" fill="rgb(226,181,24)"/><text x="536.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="533" y="2052" width="6" height="15" fill="rgb(240,127,35)"/><text x="536.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.55%)</title><rect x="533" y="2068" width="6" height="15" fill="rgb(215,205,19)"/><text x="536.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (2 samples, 0.55%)</title><rect x="533" y="2084" width="6" height="15" fill="rgb(236,34,12)"/><text x="536.00" y="2094.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.28%)</title><rect x="536" y="2100" width="3" height="15" fill="rgb(251,5,37)"/><text x="539.00" y="2110.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="536" y="2116" width="3" height="15" fill="rgb(217,91,25)"/><text x="539.00" y="2126.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:28) (1 samples, 0.28%)</title><rect x="539" y="84" width="4" height="15" fill="rgb(238,84,35)"/><text x="542.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="539" y="100" width="4" height="15" fill="rgb(231,104,7)"/><text x="542.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.28%)</title><rect x="539" y="116" width="4" height="15" fill="rgb(231,191,45)"/><text x="542.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.28%)</title><rect x="539" y="132" width="4" height="15" fill="rgb(213,205,44)"/><text x="542.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.28%)</title><rect x="539" y="148" width="4" height="15" fill="rgb(232,36,41)"/><text x="542.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.28%)</title><rect x="539" y="164" width="4" height="15" fill="rgb(223,157,2)"/><text x="542.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.28%)</title><rect x="539" y="180" width="4" height="15" fill="rgb(218,224,9)"/><text x="542.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.28%)</title><rect x="539" y="196" width="4" height="15" fill="rgb(220,118,11)"/><text x="542.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="539" y="212" width="4" height="15" fill="rgb(223,173,5)"/><text x="542.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="539" y="228" width="4" height="15" fill="rgb(228,108,20)"/><text x="542.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="539" y="244" width="4" height="15" fill="rgb(219,207,48)"/><text x="542.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="539" y="260" width="4" height="15" fill="rgb(210,128,13)"/><text x="542.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="539" y="276" width="4" height="15" fill="rgb(220,34,3)"/><text x="542.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.28%)</title><rect x="539" y="292" width="4" height="15" fill="rgb(205,207,8)"/><text x="542.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="539" y="308" width="4" height="15" fill="rgb(212,189,28)"/><text x="542.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="539" y="324" width="4" height="15" fill="rgb(251,90,13)"/><text x="542.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="539" y="340" width="4" height="15" fill="rgb(243,213,0)"/><text x="542.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="539" y="356" width="4" height="15" fill="rgb(211,34,15)"/><text x="542.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="539" y="372" width="4" height="15" fill="rgb(231,20,33)"/><text x="542.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.28%)</title><rect x="539" y="388" width="4" height="15" fill="rgb(214,101,38)"/><text x="542.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="539" y="404" width="4" height="15" fill="rgb(237,82,31)"/><text x="542.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="539" y="420" width="4" height="15" fill="rgb(206,37,43)"/><text x="542.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="539" y="436" width="4" height="15" fill="rgb(235,132,23)"/><text x="542.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="539" y="452" width="4" height="15" fill="rgb(228,138,50)"/><text x="542.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="539" y="468" width="4" height="15" fill="rgb(205,98,5)"/><text x="542.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="539" y="484" width="4" height="15" fill="rgb(209,153,41)"/><text x="542.00" y="494.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:18) (1 samples, 0.28%)</title><rect x="543" y="100" width="3" height="15" fill="rgb(242,193,48)"/><text x="546.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.28%)</title><rect x="543" y="116" width="3" height="15" fill="rgb(227,207,41)"/><text x="546.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.28%)</title><rect x="543" y="132" width="3" height="15" fill="rgb(217,204,27)"/><text x="546.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.28%)</title><rect x="543" y="148" width="3" height="15" fill="rgb(236,102,36)"/><text x="546.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.28%)</title><rect x="543" y="164" width="3" height="15" fill="rgb(248,226,34)"/><text x="546.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.28%)</title><rect x="543" y="180" width="3" height="15" fill="rgb(215,2,36)"/><text x="546.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.28%)</title><rect x="543" y="196" width="3" height="15" fill="rgb(249,73,0)"/><text x="546.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.28%)</title><rect x="543" y="212" width="3" height="15" fill="rgb(235,184,54)"/><text x="546.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (1 samples, 0.28%)</title><rect x="543" y="228" width="3" height="15" fill="rgb(233,178,35)"/><text x="546.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="543" y="244" width="3" height="15" fill="rgb(242,56,20)"/><text x="546.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="543" y="260" width="3" height="15" fill="rgb(220,81,48)"/><text x="546.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.28%)</title><rect x="543" y="276" width="3" height="15" fill="rgb(205,184,31)"/><text x="546.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.28%)</title><rect x="543" y="292" width="3" height="15" fill="rgb(232,212,4)"/><text x="546.00" y="302.50"></text></g><g><title>0x7fea4626433d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="543" y="308" width="3" height="15" fill="rgb(222,19,32)"/><text x="546.00" y="318.50"></text></g><g><title>0x7fea46286214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="543" y="324" width="3" height="15" fill="rgb(237,27,52)"/><text x="546.00" y="334.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.28%)</title><rect x="549" y="164" width="3" height="15" fill="rgb(228,134,41)"/><text x="552.00" y="174.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:58) (1 samples, 0.28%)</title><rect x="552" y="228" width="4" height="15" fill="rgb(231,178,37)"/><text x="555.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.28%)</title><rect x="569" y="356" width="3" height="15" fill="rgb(225,9,44)"/><text x="572.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.55%)</title><rect x="569" y="308" width="6" height="15" fill="rgb(228,145,36)"/><text x="572.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.55%)</title><rect x="569" y="324" width="6" height="15" fill="rgb(251,194,47)"/><text x="572.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.55%)</title><rect x="569" y="340" width="6" height="15" fill="rgb(216,124,33)"/><text x="572.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.28%)</title><rect x="572" y="356" width="3" height="15" fill="rgb(211,123,7)"/><text x="575.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.28%)</title><rect x="572" y="372" width="3" height="15" fill="rgb(252,43,22)"/><text x="575.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.28%)</title><rect x="572" y="388" width="3" height="15" fill="rgb(215,112,24)"/><text x="575.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.28%)</title><rect x="575" y="340" width="3" height="15" fill="rgb(229,150,2)"/><text x="578.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.28%)</title><rect x="575" y="356" width="3" height="15" fill="rgb(233,87,34)"/><text x="578.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.28%)</title><rect x="575" y="372" width="3" height="15" fill="rgb(232,77,30)"/><text x="578.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.28%)</title><rect x="575" y="388" width="3" height="15" fill="rgb(211,86,22)"/><text x="578.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1401) (1 samples, 0.28%)</title><rect x="575" y="404" width="3" height="15" fill="rgb(213,19,15)"/><text x="578.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.28%)</title><rect x="578" y="356" width="4" height="15" fill="rgb(235,24,21)"/><text x="581.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.28%)</title><rect x="578" y="372" width="4" height="15" fill="rgb(250,210,15)"/><text x="581.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.28%)</title><rect x="578" y="388" width="4" height="15" fill="rgb(250,134,50)"/><text x="581.00" y="398.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.28%)</title><rect x="578" y="404" width="4" height="15" fill="rgb(246,153,28)"/><text x="581.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.28%)</title><rect x="582" y="356" width="3" height="15" fill="rgb(245,169,2)"/><text x="585.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.28%)</title><rect x="582" y="372" width="3" height="15" fill="rgb(237,197,16)"/><text x="585.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.28%)</title><rect x="582" y="388" width="3" height="15" fill="rgb(222,220,12)"/><text x="585.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3773) (1 samples, 0.28%)</title><rect x="582" y="404" width="3" height="15" fill="rgb(223,189,18)"/><text x="585.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.28%)</title><rect x="585" y="356" width="3" height="15" fill="rgb(215,166,34)"/><text x="588.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.28%)</title><rect x="585" y="372" width="3" height="15" fill="rgb(224,7,29)"/><text x="588.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.28%)</title><rect x="585" y="388" width="3" height="15" fill="rgb(211,223,37)"/><text x="588.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (2 samples, 0.55%)</title><rect x="588" y="372" width="7" height="15" fill="rgb(226,97,2)"/><text x="591.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.28%)</title><rect x="595" y="388" width="3" height="15" fill="rgb(223,146,49)"/><text x="598.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (2 samples, 0.55%)</title><rect x="601" y="404" width="7" height="15" fill="rgb(252,15,15)"/><text x="604.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 1.10%)</title><rect x="598" y="388" width="13" height="15" fill="rgb(217,210,33)"/><text x="601.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (1 samples, 0.28%)</title><rect x="608" y="404" width="3" height="15" fill="rgb(235,213,38)"/><text x="611.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.28%)</title><rect x="611" y="388" width="3" height="15" fill="rgb(227,142,45)"/><text x="614.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.28%)</title><rect x="614" y="388" width="3" height="15" fill="rgb(210,169,30)"/><text x="617.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 2.75%)</title><rect x="588" y="356" width="33" height="15" fill="rgb(251,42,17)"/><text x="591.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 2.20%)</title><rect x="595" y="372" width="26" height="15" fill="rgb(230,166,31)"/><text x="598.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.28%)</title><rect x="617" y="388" width="4" height="15" fill="rgb(240,44,26)"/><text x="620.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (21 samples, 5.79%)</title><rect x="556" y="244" width="68" height="15" fill="rgb(218,173,13)"/><text x="559.00" y="254.50">norm_l1..</text></g><g><title>array_sum (methods.c:2215) (19 samples, 5.23%)</title><rect x="562" y="260" width="62" height="15" fill="rgb(211,156,43)"/><text x="565.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 5.23%)</title><rect x="562" y="276" width="62" height="15" fill="rgb(212,176,50)"/><text x="565.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 4.96%)</title><rect x="565" y="292" width="59" height="15" fill="rgb(218,163,2)"/><text x="568.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 4.13%)</title><rect x="575" y="308" width="49" height="15" fill="rgb(205,79,45)"/><text x="578.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (15 samples, 4.13%)</title><rect x="575" y="324" width="49" height="15" fill="rgb(210,33,50)"/><text x="578.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 3.86%)</title><rect x="578" y="340" width="46" height="15" fill="rgb(210,124,49)"/><text x="581.00" y="350.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.28%)</title><rect x="621" y="356" width="3" height="15" fill="rgb(214,32,52)"/><text x="624.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="621" y="372" width="3" height="15" fill="rgb(231,27,5)"/><text x="624.00" y="382.50"></text></g><g><title>0x7fea5af7ca68 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="621" y="388" width="3" height="15" fill="rgb(237,12,46)"/><text x="624.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.28%)</title><rect x="624" y="276" width="3" height="15" fill="rgb(214,151,52)"/><text x="627.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.28%)</title><rect x="624" y="292" width="3" height="15" fill="rgb(218,179,24)"/><text x="627.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.28%)</title><rect x="627" y="324" width="3" height="15" fill="rgb(219,100,54)"/><text x="630.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="627" y="340" width="3" height="15" fill="rgb(235,130,10)"/><text x="630.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.55%)</title><rect x="627" y="308" width="7" height="15" fill="rgb(224,192,51)"/><text x="630.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="630" y="324" width="4" height="15" fill="rgb(229,25,0)"/><text x="633.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1642) (1 samples, 0.28%)</title><rect x="630" y="340" width="4" height="15" fill="rgb(221,58,26)"/><text x="633.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.55%)</title><rect x="634" y="356" width="6" height="15" fill="rgb(213,93,38)"/><text x="637.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.28%)</title><rect x="640" y="372" width="3" height="15" fill="rgb(214,152,52)"/><text x="643.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.28%)</title><rect x="643" y="372" width="4" height="15" fill="rgb(235,68,14)"/><text x="646.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.28%)</title><rect x="647" y="372" width="3" height="15" fill="rgb(209,208,41)"/><text x="650.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.28%)</title><rect x="650" y="372" width="3" height="15" fill="rgb(233,112,16)"/><text x="653.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 1.93%)</title><rect x="634" y="308" width="22" height="15" fill="rgb(240,131,25)"/><text x="637.00" y="318.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 1.93%)</title><rect x="634" y="324" width="22" height="15" fill="rgb(232,134,17)"/><text x="637.00" y="334.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.93%)</title><rect x="634" y="340" width="22" height="15" fill="rgb(247,80,5)"/><text x="637.00" y="350.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 1.38%)</title><rect x="640" y="356" width="16" height="15" fill="rgb(226,209,37)"/><text x="643.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.28%)</title><rect x="653" y="372" width="3" height="15" fill="rgb(237,32,23)"/><text x="656.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.28%)</title><rect x="656" y="308" width="4" height="15" fill="rgb(228,104,29)"/><text x="659.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="656" y="324" width="4" height="15" fill="rgb(249,99,26)"/><text x="659.00" y="334.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:603) (2 samples, 0.55%)</title><rect x="660" y="356" width="6" height="15" fill="rgb(248,21,47)"/><text x="663.00" y="366.50"></text></g><g><title>_mm_div_ps (xmmintrin.h:175) (2 samples, 0.55%)</title><rect x="660" y="372" width="6" height="15" fill="rgb(230,228,23)"/><text x="663.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (16 samples, 4.41%)</title><rect x="624" y="244" width="52" height="15" fill="rgb(233,6,14)"/><text x="627.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 4.41%)</title><rect x="624" y="260" width="52" height="15" fill="rgb(234,161,22)"/><text x="627.00" y="270.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 4.13%)</title><rect x="627" y="276" width="49" height="15" fill="rgb(214,179,34)"/><text x="630.00" y="286.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 4.13%)</title><rect x="627" y="292" width="49" height="15" fill="rgb(224,59,9)"/><text x="630.00" y="302.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 1.38%)</title><rect x="660" y="308" width="16" height="15" fill="rgb(253,158,37)"/><text x="663.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (5 samples, 1.38%)</title><rect x="660" y="324" width="16" height="15" fill="rgb(228,59,18)"/><text x="663.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (5 samples, 1.38%)</title><rect x="660" y="340" width="16" height="15" fill="rgb(236,145,39)"/><text x="663.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (3 samples, 0.83%)</title><rect x="666" y="356" width="10" height="15" fill="rgb(237,53,40)"/><text x="669.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (3 samples, 0.83%)</title><rect x="666" y="372" width="10" height="15" fill="rgb(213,70,22)"/><text x="669.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (39 samples, 10.74%)</title><rect x="552" y="196" width="127" height="15" fill="rgb(249,152,35)"/><text x="555.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (39 samples, 10.74%)</title><rect x="552" y="212" width="127" height="15" fill="rgb(205,162,45)"/><text x="555.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (38 samples, 10.47%)</title><rect x="556" y="228" width="123" height="15" fill="rgb(207,206,1)"/><text x="559.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:44) (1 samples, 0.28%)</title><rect x="676" y="244" width="3" height="15" fill="rgb(242,92,25)"/><text x="679.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.28%)</title><rect x="679" y="308" width="3" height="15" fill="rgb(231,130,31)"/><text x="682.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.28%)</title><rect x="679" y="324" width="3" height="15" fill="rgb(245,107,45)"/><text x="682.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.28%)</title><rect x="679" y="340" width="3" height="15" fill="rgb(224,73,6)"/><text x="682.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:140) (1 samples, 0.28%)</title><rect x="679" y="356" width="3" height="15" fill="rgb(247,31,0)"/><text x="682.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.28%)</title><rect x="682" y="324" width="4" height="15" fill="rgb(251,130,19)"/><text x="685.00" y="334.50"></text></g><g><title>0x7fea5af9d103 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="682" y="340" width="4" height="15" fill="rgb(236,119,54)"/><text x="685.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 0.83%)</title><rect x="686" y="324" width="9" height="15" fill="rgb(244,84,15)"/><text x="689.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (3 samples, 0.83%)</title><rect x="686" y="340" width="9" height="15" fill="rgb(244,70,6)"/><text x="689.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.83%)</title><rect x="686" y="356" width="9" height="15" fill="rgb(237,211,52)"/><text x="689.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.83%)</title><rect x="686" y="372" width="9" height="15" fill="rgb(251,101,29)"/><text x="689.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.83%)</title><rect x="686" y="388" width="9" height="15" fill="rgb(226,141,27)"/><text x="689.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.65%)</title><rect x="679" y="276" width="20" height="15" fill="rgb(217,215,21)"/><text x="682.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (6 samples, 1.65%)</title><rect x="679" y="292" width="20" height="15" fill="rgb(231,14,37)"/><text x="682.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.38%)</title><rect x="682" y="308" width="17" height="15" fill="rgb(225,99,48)"/><text x="685.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:677) (1 samples, 0.28%)</title><rect x="695" y="324" width="4" height="15" fill="rgb(249,228,43)"/><text x="698.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="695" y="340" width="4" height="15" fill="rgb(223,191,3)"/><text x="698.00" y="350.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.55%)</title><rect x="699" y="276" width="6" height="15" fill="rgb(207,11,27)"/><text x="702.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (13 samples, 3.58%)</title><rect x="679" y="228" width="42" height="15" fill="rgb(244,213,43)"/><text x="682.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (13 samples, 3.58%)</title><rect x="679" y="244" width="42" height="15" fill="rgb(254,79,10)"/><text x="682.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (13 samples, 3.58%)</title><rect x="679" y="260" width="42" height="15" fill="rgb(245,140,2)"/><text x="682.00" y="270.50">dot..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.38%)</title><rect x="705" y="276" width="16" height="15" fill="rgb(237,194,40)"/><text x="708.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.28%)</title><rect x="721" y="308" width="4" height="15" fill="rgb(216,181,28)"/><text x="724.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.55%)</title><rect x="721" y="292" width="7" height="15" fill="rgb(226,85,35)"/><text x="724.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="725" y="308" width="3" height="15" fill="rgb(225,189,43)"/><text x="728.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.28%)</title><rect x="725" y="324" width="3" height="15" fill="rgb(253,32,53)"/><text x="728.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.28%)</title><rect x="725" y="340" width="3" height="15" fill="rgb(217,9,44)"/><text x="728.00" y="350.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.28%)</title><rect x="725" y="356" width="3" height="15" fill="rgb(242,62,23)"/><text x="728.00" y="366.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:675) (1 samples, 0.28%)</title><rect x="725" y="372" width="3" height="15" fill="rgb(233,123,39)"/><text x="728.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.83%)</title><rect x="721" y="260" width="10" height="15" fill="rgb(238,109,43)"/><text x="724.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.83%)</title><rect x="721" y="276" width="10" height="15" fill="rgb(223,6,15)"/><text x="724.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.28%)</title><rect x="728" y="292" width="3" height="15" fill="rgb(234,51,40)"/><text x="731.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.28%)</title><rect x="728" y="308" width="3" height="15" fill="rgb(250,196,42)"/><text x="731.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.28%)</title><rect x="728" y="324" width="3" height="15" fill="rgb(236,137,18)"/><text x="731.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.28%)</title><rect x="728" y="340" width="3" height="15" fill="rgb(252,189,20)"/><text x="731.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 1.10%)</title><rect x="721" y="228" width="13" height="15" fill="rgb(236,36,33)"/><text x="724.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.10%)</title><rect x="721" y="244" width="13" height="15" fill="rgb(243,45,1)"/><text x="724.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.28%)</title><rect x="731" y="260" width="3" height="15" fill="rgb(211,110,0)"/><text x="734.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="738" y="260" width="3" height="15" fill="rgb(240,221,3)"/><text x="741.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.28%)</title><rect x="738" y="276" width="3" height="15" fill="rgb(237,103,19)"/><text x="741.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.28%)</title><rect x="738" y="292" width="3" height="15" fill="rgb(245,185,17)"/><text x="741.00" y="302.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.28%)</title><rect x="738" y="308" width="3" height="15" fill="rgb(238,29,38)"/><text x="741.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.28%)</title><rect x="741" y="260" width="3" height="15" fill="rgb(251,2,12)"/><text x="744.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.28%)</title><rect x="741" y="276" width="3" height="15" fill="rgb(246,98,7)"/><text x="744.00" y="286.50"></text></g><g><title>0x7fea46286204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="744" y="324" width="3" height="15" fill="rgb(210,85,30)"/><text x="747.00" y="334.50"></text></g><g><title>0x7fea46244890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="751" y="340" width="3" height="15" fill="rgb(205,40,10)"/><text x="754.00" y="350.50"></text></g><g><title>0x7fea5b0c81a0 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="773" y="356" width="4" height="15" fill="rgb(238,103,35)"/><text x="776.00" y="366.50"></text></g><g><title>0x7fea5b0fbe00 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="777" y="356" width="3" height="15" fill="rgb(222,133,36)"/><text x="780.00" y="366.50"></text></g><g><title>0x7fea5b0fbe37 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="780" y="356" width="3" height="15" fill="rgb(250,8,43)"/><text x="783.00" y="366.50"></text></g><g><title>0x7fea5b0fbe62 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="783" y="356" width="7" height="15" fill="rgb(235,20,31)"/><text x="786.00" y="366.50"></text></g><g><title>0x7fea5b0fbe7e (libm-2.29.so) (3 samples, 0.83%)</title><rect x="790" y="356" width="9" height="15" fill="rgb(215,120,42)"/><text x="793.00" y="366.50"></text></g><g><title>0x7fea46286214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 4.68%)</title><rect x="747" y="324" width="56" height="15" fill="rgb(236,106,51)"/><text x="750.00" y="334.50">0x7fe..</text></g><g><title>expf (libm-2.29.so) (15 samples, 4.13%)</title><rect x="754" y="340" width="49" height="15" fill="rgb(205,173,36)"/><text x="757.00" y="350.50">expf..</text></g><g><title>0x7fea5b0fbea6 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="799" y="356" width="4" height="15" fill="rgb(236,191,54)"/><text x="802.00" y="366.50"></text></g><g><title>0x7fea46286224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.83%)</title><rect x="803" y="324" width="9" height="15" fill="rgb(210,222,2)"/><text x="806.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (32 samples, 8.82%)</title><rect x="734" y="228" width="104" height="15" fill="rgb(225,208,13)"/><text x="737.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (31 samples, 8.54%)</title><rect x="738" y="244" width="100" height="15" fill="rgb(211,146,22)"/><text x="741.00" y="254.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (29 samples, 7.99%)</title><rect x="744" y="260" width="94" height="15" fill="rgb(207,37,2)"/><text x="747.00" y="270.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (29 samples, 7.99%)</title><rect x="744" y="276" width="94" height="15" fill="rgb(253,34,50)"/><text x="747.00" y="286.50">execute_leg..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (29 samples, 7.99%)</title><rect x="744" y="292" width="94" height="15" fill="rgb(232,41,45)"/><text x="747.00" y="302.50">trivial_two..</text></g><g><title>0x7fea4626433d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (29 samples, 7.99%)</title><rect x="744" y="308" width="94" height="15" fill="rgb(253,105,45)"/><text x="747.00" y="318.50">0x7fea46264..</text></g><g><title>0x7fea46286228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.20%)</title><rect x="812" y="324" width="26" height="15" fill="rgb(213,65,50)"/><text x="815.00" y="334.50">0..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.28%)</title><rect x="845" y="244" width="3" height="15" fill="rgb(227,6,5)"/><text x="848.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.28%)</title><rect x="845" y="260" width="3" height="15" fill="rgb(243,222,51)"/><text x="848.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (93 samples, 25.62%)</title><rect x="552" y="180" width="303" height="15" fill="rgb(253,108,51)"/><text x="555.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (54 samples, 14.88%)</title><rect x="679" y="196" width="176" height="15" fill="rgb(221,13,40)"/><text x="682.00" y="206.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (54 samples, 14.88%)</title><rect x="679" y="212" width="176" height="15" fill="rgb(212,99,35)"/><text x="682.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (5 samples, 1.38%)</title><rect x="838" y="228" width="17" height="15" fill="rgb(253,106,11)"/><text x="841.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.55%)</title><rect x="848" y="244" width="7" height="15" fill="rgb(215,48,44)"/><text x="851.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.55%)</title><rect x="848" y="260" width="7" height="15" fill="rgb(215,16,46)"/><text x="851.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (2 samples, 0.55%)</title><rect x="848" y="276" width="7" height="15" fill="rgb(243,64,30)"/><text x="851.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.55%)</title><rect x="848" y="292" width="7" height="15" fill="rgb(245,116,50)"/><text x="851.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.28%)</title><rect x="851" y="308" width="4" height="15" fill="rgb(243,29,16)"/><text x="854.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.28%)</title><rect x="851" y="324" width="4" height="15" fill="rgb(240,73,53)"/><text x="854.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (1 samples, 0.28%)</title><rect x="851" y="340" width="4" height="15" fill="rgb(236,41,17)"/><text x="854.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.55%)</title><rect x="855" y="180" width="6" height="15" fill="rgb(242,165,43)"/><text x="858.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 1.10%)</title><rect x="861" y="180" width="13" height="15" fill="rgb(245,211,14)"/><text x="864.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (100 samples, 27.55%)</title><rect x="552" y="164" width="325" height="15" fill="rgb(250,127,11)"/><text x="555.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.28%)</title><rect x="874" y="180" width="3" height="15" fill="rgb(221,38,2)"/><text x="877.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:45) (106 samples, 29.20%)</title><rect x="539" y="52" width="345" height="15" fill="rgb(253,163,37)"/><text x="542.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:44) (106 samples, 29.20%)</title><rect x="539" y="68" width="345" height="15" fill="rgb(209,128,8)"/><text x="542.00" y="78.50">profile_pyrt (bench_LogisticRegression_libline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:29) (105 samples, 28.93%)</title><rect x="543" y="84" width="341" height="15" fill="rgb(221,10,48)"/><text x="546.00" y="94.50">setup_profile (bench_LogisticRegression_liblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:23) (104 samples, 28.65%)</title><rect x="546" y="100" width="338" height="15" fill="rgb(237,22,49)"/><text x="549.00" y="110.50">profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (104 samples, 28.65%)</title><rect x="546" y="116" width="338" height="15" fill="rgb(220,166,50)"/><text x="549.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (103 samples, 28.37%)</title><rect x="549" y="132" width="335" height="15" fill="rgb(254,160,24)"/><text x="552.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (103 samples, 28.37%)</title><rect x="549" y="148" width="335" height="15" fill="rgb(230,38,45)"/><text x="552.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.55%)</title><rect x="877" y="164" width="7" height="15" fill="rgb(242,4,17)"/><text x="880.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.28%)</title><rect x="881" y="180" width="3" height="15" fill="rgb(242,17,48)"/><text x="884.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.28%)</title><rect x="881" y="196" width="3" height="15" fill="rgb(206,117,5)"/><text x="884.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:18) (1 samples, 0.28%)</title><rect x="884" y="100" width="3" height="15" fill="rgb(228,102,40)"/><text x="887.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.28%)</title><rect x="884" y="116" width="3" height="15" fill="rgb(253,193,35)"/><text x="887.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.28%)</title><rect x="884" y="132" width="3" height="15" fill="rgb(209,27,28)"/><text x="887.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="890" y="116" width="4" height="15" fill="rgb(244,98,17)"/><text x="893.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="890" y="132" width="4" height="15" fill="rgb(214,38,16)"/><text x="893.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="890" y="148" width="4" height="15" fill="rgb(222,108,41)"/><text x="893.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.55%)</title><rect x="894" y="196" width="6" height="15" fill="rgb(241,116,49)"/><text x="897.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.55%)</title><rect x="894" y="212" width="6" height="15" fill="rgb(205,187,31)"/><text x="897.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="894" y="228" width="6" height="15" fill="rgb(210,186,39)"/><text x="897.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="897" y="244" width="3" height="15" fill="rgb(242,37,2)"/><text x="900.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="897" y="260" width="3" height="15" fill="rgb(232,52,14)"/><text x="900.00" y="270.50"></text></g><g><title>0x7fea1afecff9 (?) (1 samples, 0.28%)</title><rect x="903" y="212" width="4" height="15" fill="rgb(253,89,16)"/><text x="906.00" y="222.50"></text></g><g><title>0x7fea1afe7ef6 (?) (1 samples, 0.28%)</title><rect x="903" y="228" width="4" height="15" fill="rgb(205,69,21)"/><text x="906.00" y="238.50"></text></g><g><title>0x7fea1afdc962 (?) (1 samples, 0.28%)</title><rect x="903" y="244" width="4" height="15" fill="rgb(240,78,46)"/><text x="906.00" y="254.50"></text></g><g><title>0x7fea1b0107a7 (?) (1 samples, 0.28%)</title><rect x="903" y="260" width="4" height="15" fill="rgb(231,134,21)"/><text x="906.00" y="270.50"></text></g><g><title>0x7fea1b00ff9c (?) (1 samples, 0.28%)</title><rect x="903" y="276" width="4" height="15" fill="rgb(213,6,30)"/><text x="906.00" y="286.50"></text></g><g><title>0x7fea1b42a98e (?) (1 samples, 0.28%)</title><rect x="903" y="292" width="4" height="15" fill="rgb(251,170,20)"/><text x="906.00" y="302.50"></text></g><g><title>0x7fea1b42a3df (?) (1 samples, 0.28%)</title><rect x="903" y="308" width="4" height="15" fill="rgb(223,5,11)"/><text x="906.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="903" y="324" width="4" height="15" fill="rgb(248,15,31)"/><text x="906.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="903" y="340" width="4" height="15" fill="rgb(214,139,30)"/><text x="906.00" y="350.50"></text></g><g><title>0x7fea5af7ddd6 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="903" y="356" width="4" height="15" fill="rgb(249,17,13)"/><text x="906.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="907" y="260" width="3" height="15" fill="rgb(246,199,31)"/><text x="910.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="910" y="308" width="3" height="15" fill="rgb(227,179,0)"/><text x="913.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="910" y="324" width="3" height="15" fill="rgb(228,18,7)"/><text x="913.00" y="334.50"></text></g><g><title>0x7fea5b05a168 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="910" y="340" width="3" height="15" fill="rgb(216,130,0)"/><text x="913.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="910" y="292" width="6" height="15" fill="rgb(241,20,48)"/><text x="913.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="913" y="308" width="3" height="15" fill="rgb(218,21,39)"/><text x="916.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="913" y="324" width="3" height="15" fill="rgb(205,228,30)"/><text x="916.00" y="334.50"></text></g><g><title>0x7fea5af9cdbe (libc-2.29.so) (1 samples, 0.28%)</title><rect x="913" y="340" width="3" height="15" fill="rgb(223,49,27)"/><text x="916.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="916" y="292" width="7" height="15" fill="rgb(250,79,23)"/><text x="919.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="920" y="308" width="3" height="15" fill="rgb(231,12,54)"/><text x="923.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="920" y="324" width="3" height="15" fill="rgb(250,209,18)"/><text x="923.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="920" y="340" width="3" height="15" fill="rgb(240,94,6)"/><text x="923.00" y="350.50"></text></g><g><title>0x7fea5af7de8c (libc-2.29.so) (1 samples, 0.28%)</title><rect x="920" y="356" width="3" height="15" fill="rgb(240,74,54)"/><text x="923.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="926" y="340" width="3" height="15" fill="rgb(241,214,3)"/><text x="929.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="926" y="356" width="3" height="15" fill="rgb(221,139,54)"/><text x="929.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="926" y="372" width="3" height="15" fill="rgb(234,50,2)"/><text x="929.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="926" y="388" width="3" height="15" fill="rgb(210,107,54)"/><text x="929.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="929" y="340" width="4" height="15" fill="rgb(249,133,14)"/><text x="932.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="929" y="356" width="4" height="15" fill="rgb(241,200,33)"/><text x="932.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="929" y="372" width="4" height="15" fill="rgb(225,38,15)"/><text x="932.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="929" y="388" width="4" height="15" fill="rgb(237,73,10)"/><text x="932.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="929" y="404" width="4" height="15" fill="rgb(237,31,34)"/><text x="932.00" y="414.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="929" y="420" width="4" height="15" fill="rgb(216,74,7)"/><text x="932.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1014" y="356" width="10" height="15" fill="rgb(230,43,53)"/><text x="1017.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1014" y="372" width="10" height="15" fill="rgb(245,53,24)"/><text x="1017.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1014" y="388" width="10" height="15" fill="rgb(229,89,50)"/><text x="1017.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1014" y="404" width="10" height="15" fill="rgb(212,86,49)"/><text x="1017.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1014" y="420" width="10" height="15" fill="rgb(225,201,9)"/><text x="1017.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1014" y="436" width="10" height="15" fill="rgb(217,39,47)"/><text x="1017.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1020" y="452" width="4" height="15" fill="rgb(215,112,22)"/><text x="1023.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1020" y="468" width="4" height="15" fill="rgb(244,146,51)"/><text x="1023.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1020" y="484" width="4" height="15" fill="rgb(225,155,4)"/><text x="1023.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1020" y="500" width="4" height="15" fill="rgb(233,30,6)"/><text x="1023.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1020" y="516" width="4" height="15" fill="rgb(251,169,53)"/><text x="1023.00" y="526.50"></text></g><g><title>0x7fea5af9cd97 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1069" y="372" width="3" height="15" fill="rgb(217,67,3)"/><text x="1072.00" y="382.50"></text></g><g><title>0x7fea5af9cdae (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1072" y="372" width="4" height="15" fill="rgb(219,152,50)"/><text x="1075.00" y="382.50"></text></g><g><title>0x7fea5af9cdb3 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1076" y="372" width="3" height="15" fill="rgb(234,32,18)"/><text x="1079.00" y="382.50"></text></g><g><title>0x7fea5b0fbe0a (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1079" y="372" width="6" height="15" fill="rgb(206,191,31)"/><text x="1082.00" y="382.50"></text></g><g><title>0x7fea5b0fbe14 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1085" y="372" width="4" height="15" fill="rgb(210,1,51)"/><text x="1088.00" y="382.50"></text></g><g><title>0x7fea5b0fbe2f (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1089" y="372" width="6" height="15" fill="rgb(231,163,44)"/><text x="1092.00" y="382.50"></text></g><g><title>0x7fea5b0fbe4a (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1095" y="372" width="7" height="15" fill="rgb(222,209,47)"/><text x="1098.00" y="382.50"></text></g><g><title>0x7fea5b0fbe53 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1102" y="372" width="3" height="15" fill="rgb(232,61,11)"/><text x="1105.00" y="382.50"></text></g><g><title>0x7fea5b0fbe5f (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1105" y="372" width="3" height="15" fill="rgb(231,88,37)"/><text x="1108.00" y="382.50"></text></g><g><title>0x7fea5b0fbe71 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1108" y="372" width="3" height="15" fill="rgb(215,216,5)"/><text x="1111.00" y="382.50"></text></g><g><title>0x7fea5b0fbe76 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1111" y="372" width="7" height="15" fill="rgb(252,153,31)"/><text x="1114.00" y="382.50"></text></g><g><title>0x7fea5b0fbe7a (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1118" y="372" width="3" height="15" fill="rgb(243,26,12)"/><text x="1121.00" y="382.50"></text></g><g><title>0x7fea5b0fbe92 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1121" y="372" width="3" height="15" fill="rgb(223,25,36)"/><text x="1124.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 9.09%)</title><rect x="1024" y="356" width="107" height="15" fill="rgb(241,33,31)"/><text x="1027.00" y="366.50">onnxruntime::..</text></g><g><title>0x7fea5b0fbea2 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1124" y="372" width="7" height="15" fill="rgb(243,214,38)"/><text x="1127.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (62 samples, 17.08%)</title><rect x="933" y="340" width="201" height="15" fill="rgb(206,60,37)"/><text x="936.00" y="350.50">onnxruntime::ml::LinearCla..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1131" y="356" width="3" height="15" fill="rgb(221,81,47)"/><text x="1134.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1131" y="372" width="3" height="15" fill="rgb(215,142,11)"/><text x="1134.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 22.59%)</title><rect x="910" y="260" width="266" height="15" fill="rgb(211,56,8)"/><text x="913.00" y="270.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 22.59%)</title><rect x="910" y="276" width="266" height="15" fill="rgb(226,187,7)"/><text x="913.00" y="286.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 21.49%)</title><rect x="923" y="292" width="253" height="15" fill="rgb(217,57,40)"/><text x="926.00" y="302.50">onnxruntime::utils::ExecuteGraph ..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 21.49%)</title><rect x="923" y="308" width="253" height="15" fill="rgb(242,152,2)"/><text x="926.00" y="318.50">onnxruntime::utils::ExecuteGraphI..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 21.49%)</title><rect x="923" y="324" width="253" height="15" fill="rgb(207,187,30)"/><text x="926.00" y="334.50">onnxruntime::SequentialExecutor::..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.58%)</title><rect x="1134" y="340" width="42" height="15" fill="rgb(211,50,26)"/><text x="1137.00" y="350.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.58%)</title><rect x="1134" y="356" width="42" height="15" fill="rgb(229,130,52)"/><text x="1137.00" y="366.50">onn..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1173" y="372" width="3" height="15" fill="rgb(228,93,31)"/><text x="1176.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1173" y="388" width="3" height="15" fill="rgb(209,75,2)"/><text x="1176.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1173" y="404" width="3" height="15" fill="rgb(209,3,54)"/><text x="1176.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1173" y="420" width="3" height="15" fill="rgb(248,57,1)"/><text x="1176.00" y="430.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1176" y="260" width="4" height="15" fill="rgb(205,211,47)"/><text x="1179.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1176" y="276" width="4" height="15" fill="rgb(235,163,48)"/><text x="1179.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1176" y="292" width="4" height="15" fill="rgb(239,84,7)"/><text x="1179.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1176" y="308" width="4" height="15" fill="rgb(242,207,28)"/><text x="1179.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1176" y="324" width="4" height="15" fill="rgb(239,121,0)"/><text x="1179.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (85 samples, 23.42%)</title><rect x="907" y="244" width="276" height="15" fill="rgb(232,189,1)"/><text x="910.00" y="254.50">onnxruntime::python::addObjectMethod..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1180" y="260" width="3" height="15" fill="rgb(228,185,51)"/><text x="1183.00" y="270.50"></text></g><g><title>0x7fea5af9cd94 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1180" y="276" width="3" height="15" fill="rgb(217,22,10)"/><text x="1183.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:52) (93 samples, 25.62%)</title><rect x="884" y="52" width="302" height="15" fill="rgb(226,44,22)"/><text x="887.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_libli..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:51) (93 samples, 25.62%)</title><rect x="884" y="68" width="302" height="15" fill="rgb(252,38,44)"/><text x="887.00" y="78.50">profile_ort (bench_LogisticRegression_li..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:29) (93 samples, 25.62%)</title><rect x="884" y="84" width="302" height="15" fill="rgb(253,155,8)"/><text x="887.00" y="94.50">setup_profile (bench_LogisticRegression_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py:23) (92 samples, 25.34%)</title><rect x="887" y="100" width="299" height="15" fill="rgb(243,131,10)"/><text x="890.00" y="110.50">profile (bench_LogisticRegression_liblin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (90 samples, 24.79%)</title><rect x="894" y="116" width="292" height="15" fill="rgb(228,190,53)"/><text x="897.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (90 samples, 24.79%)</title><rect x="894" y="132" width="292" height="15" fill="rgb(205,69,45)"/><text x="897.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (90 samples, 24.79%)</title><rect x="894" y="148" width="292" height="15" fill="rgb(225,11,49)"/><text x="897.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (90 samples, 24.79%)</title><rect x="894" y="164" width="292" height="15" fill="rgb(230,66,8)"/><text x="897.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/on..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (90 samples, 24.79%)</title><rect x="894" y="180" width="292" height="15" fill="rgb(234,101,9)"/><text x="897.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session..</text></g><g><title>run (onnxruntime/capi/session.py:136) (88 samples, 24.24%)</title><rect x="900" y="196" width="286" height="15" fill="rgb(212,181,40)"/><text x="903.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 23.69%)</title><rect x="907" y="212" width="279" height="15" fill="rgb(246,58,54)"/><text x="910.00" y="222.50">pybind11::cpp_function::dispatcher (o..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 23.69%)</title><rect x="907" y="228" width="279" height="15" fill="rgb(250,53,14)"/><text x="910.00" y="238.50">void pybind11::cpp_function::initiali..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1183" y="244" width="3" height="15" fill="rgb(224,74,51)"/><text x="1186.00" y="254.50"></text></g><g><title>all (363 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(226,37,30)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.28%)</title><rect x="1186" y="52" width="4" height="15" fill="rgb(222,42,7)"/><text x="1189.00" y="62.50"></text></g></g></svg>