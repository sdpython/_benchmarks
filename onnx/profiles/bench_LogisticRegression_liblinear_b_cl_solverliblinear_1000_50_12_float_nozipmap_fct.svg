<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(239,182,7)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(213,38,6)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(254,15,44)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(238,104,17)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(247,4,46)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(240,173,48)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(205,73,31)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(208,97,53)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(208,173,3)"/><text x="13.00" y="1006.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(223,123,54)"/><text x="15.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(240,74,46)"/><text x="15.00" y="942.50"></text></g><g><title>unicode_lower (python3.7) (1 samples, 0.23%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(209,219,38)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(241,0,50)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="15" y="980" width="3" height="15" fill="rgb(207,136,8)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="15" y="996" width="3" height="15" fill="rgb(219,163,37)"/><text x="18.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.23%)</title><rect x="15" y="1012" width="3" height="15" fill="rgb(207,14,22)"/><text x="18.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.23%)</title><rect x="15" y="1028" width="3" height="15" fill="rgb(219,91,4)"/><text x="18.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="15" y="1044" width="3" height="15" fill="rgb(222,200,39)"/><text x="18.00" y="1054.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.47%)</title><rect x="15" y="932" width="6" height="15" fill="rgb(230,199,17)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.47%)</title><rect x="15" y="948" width="6" height="15" fill="rgb(206,201,24)"/><text x="18.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.23%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(230,153,39)"/><text x="21.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.23%)</title><rect x="18" y="980" width="3" height="15" fill="rgb(254,156,24)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.17%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(223,3,17)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(221,140,46)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(230,146,39)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(253,121,4)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.17%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(206,199,49)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(213,152,20)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.17%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(212,83,29)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(221,218,16)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(234,64,2)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(205,141,0)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.17%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(221,11,17)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(242,55,0)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.17%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(231,203,11)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(229,214,40)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(239,8,27)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(208,207,46)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.17%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(206,221,18)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(218,12,53)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.17%)</title><rect x="10" y="580" width="13" height="15" fill="rgb(245,227,52)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(245,65,27)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(240,202,30)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(239,68,1)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(228,223,25)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(208,3,2)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(233,10,41)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.17%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(221,200,9)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(205,216,14)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.17%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(250,4,27)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(249,134,0)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(248,106,33)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(232,61,28)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.17%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(208,203,40)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(239,158,45)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.17%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(209,156,11)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.17%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(207,58,37)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.17%)</title><rect x="10" y="852" width="13" height="15" fill="rgb(253,134,12)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 0.94%)</title><rect x="12" y="868" width="11" height="15" fill="rgb(219,55,44)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 0.94%)</title><rect x="12" y="884" width="11" height="15" fill="rgb(246,61,1)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 0.94%)</title><rect x="12" y="900" width="11" height="15" fill="rgb(232,28,16)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.70%)</title><rect x="15" y="916" width="8" height="15" fill="rgb(237,10,0)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(252,187,9)"/><text x="24.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(252,122,19)"/><text x="24.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.23%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(219,159,52)"/><text x="24.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.23%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(223,176,5)"/><text x="24.00" y="990.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.23%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(238,70,28)"/><text x="24.00" y="1006.50"></text></g><g><title>0x7f4dd98bb3a0 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(223,194,45)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(234,219,30)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(254,123,35)"/><text x="26.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(249,23,10)"/><text x="26.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(253,50,44)"/><text x="26.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(205,225,26)"/><text x="26.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(235,209,7)"/><text x="26.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(246,41,27)"/><text x="26.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(243,108,1)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(242,160,34)"/><text x="26.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(253,217,37)"/><text x="26.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(253,49,40)"/><text x="26.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(231,42,17)"/><text x="26.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1108" width="3" height="15" fill="rgb(253,213,45)"/><text x="26.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.23%)</title><rect x="23" y="1124" width="3" height="15" fill="rgb(254,151,22)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1140" width="3" height="15" fill="rgb(248,56,6)"/><text x="26.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1156" width="3" height="15" fill="rgb(252,135,38)"/><text x="26.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1172" width="3" height="15" fill="rgb(210,45,45)"/><text x="26.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1188" width="3" height="15" fill="rgb(239,173,6)"/><text x="26.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1204" width="3" height="15" fill="rgb(212,151,48)"/><text x="26.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.23%)</title><rect x="23" y="1220" width="3" height="15" fill="rgb(227,80,17)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1236" width="3" height="15" fill="rgb(220,123,22)"/><text x="26.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1252" width="3" height="15" fill="rgb(251,119,24)"/><text x="26.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1268" width="3" height="15" fill="rgb(240,183,52)"/><text x="26.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1284" width="3" height="15" fill="rgb(217,161,48)"/><text x="26.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1300" width="3" height="15" fill="rgb(211,67,13)"/><text x="26.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.23%)</title><rect x="23" y="1316" width="3" height="15" fill="rgb(219,170,3)"/><text x="26.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1332" width="3" height="15" fill="rgb(205,62,2)"/><text x="26.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1348" width="3" height="15" fill="rgb(238,131,44)"/><text x="26.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1364" width="3" height="15" fill="rgb(233,66,48)"/><text x="26.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1380" width="3" height="15" fill="rgb(206,138,2)"/><text x="26.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1396" width="3" height="15" fill="rgb(238,53,54)"/><text x="26.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.23%)</title><rect x="23" y="1412" width="3" height="15" fill="rgb(217,227,7)"/><text x="26.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1428" width="3" height="15" fill="rgb(217,4,25)"/><text x="26.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1444" width="3" height="15" fill="rgb(206,190,14)"/><text x="26.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1460" width="3" height="15" fill="rgb(246,158,4)"/><text x="26.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1476" width="3" height="15" fill="rgb(224,51,33)"/><text x="26.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1492" width="3" height="15" fill="rgb(234,125,1)"/><text x="26.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.23%)</title><rect x="23" y="1508" width="3" height="15" fill="rgb(242,163,53)"/><text x="26.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1524" width="3" height="15" fill="rgb(219,148,22)"/><text x="26.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1540" width="3" height="15" fill="rgb(205,6,17)"/><text x="26.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1556" width="3" height="15" fill="rgb(239,178,11)"/><text x="26.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1572" width="3" height="15" fill="rgb(251,200,9)"/><text x="26.00" y="1582.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1588" width="3" height="15" fill="rgb(248,203,53)"/><text x="26.00" y="1598.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1604" width="3" height="15" fill="rgb(205,96,2)"/><text x="26.00" y="1614.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="23" y="788" width="6" height="15" fill="rgb(226,59,34)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="23" y="804" width="6" height="15" fill="rgb(227,33,46)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="23" y="820" width="6" height="15" fill="rgb(241,97,48)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="23" y="836" width="6" height="15" fill="rgb(234,70,23)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="23" y="852" width="6" height="15" fill="rgb(247,187,14)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.47%)</title><rect x="23" y="868" width="6" height="15" fill="rgb(215,27,41)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="23" y="884" width="6" height="15" fill="rgb(246,162,4)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.47%)</title><rect x="23" y="900" width="6" height="15" fill="rgb(234,12,39)"/><text x="26.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(233,3,2)"/><text x="29.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(248,202,54)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(218,126,20)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(219,197,23)"/><text x="29.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(216,87,24)"/><text x="29.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(228,135,52)"/><text x="29.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(235,137,26)"/><text x="29.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.23%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(249,217,36)"/><text x="29.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(218,0,38)"/><text x="29.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(221,181,45)"/><text x="29.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.23%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(241,85,37)"/><text x="29.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(209,83,32)"/><text x="29.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(229,166,14)"/><text x="29.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(248,154,2)"/><text x="29.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(210,167,6)"/><text x="29.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(245,82,40)"/><text x="29.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(224,32,8)"/><text x="29.00" y="1182.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.23%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(228,189,6)"/><text x="29.00" y="1198.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.23%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(251,176,39)"/><text x="29.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.88%)</title><rect x="10" y="196" width="22" height="15" fill="rgb(240,178,47)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.88%)</title><rect x="10" y="212" width="22" height="15" fill="rgb(254,90,16)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.88%)</title><rect x="10" y="228" width="22" height="15" fill="rgb(233,118,31)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.88%)</title><rect x="10" y="244" width="22" height="15" fill="rgb(219,215,9)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.88%)</title><rect x="10" y="260" width="22" height="15" fill="rgb(231,18,10)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.88%)</title><rect x="10" y="276" width="22" height="15" fill="rgb(246,178,52)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.70%)</title><rect x="23" y="292" width="9" height="15" fill="rgb(212,193,50)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="308" width="9" height="15" fill="rgb(224,32,26)"/><text x="26.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="324" width="9" height="15" fill="rgb(243,43,20)"/><text x="26.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="340" width="9" height="15" fill="rgb(253,217,42)"/><text x="26.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="23" y="356" width="9" height="15" fill="rgb(219,116,25)"/><text x="26.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="372" width="9" height="15" fill="rgb(223,42,24)"/><text x="26.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.70%)</title><rect x="23" y="388" width="9" height="15" fill="rgb(246,60,0)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="404" width="9" height="15" fill="rgb(223,54,47)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="420" width="9" height="15" fill="rgb(211,37,3)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="436" width="9" height="15" fill="rgb(228,146,52)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="23" y="452" width="9" height="15" fill="rgb(241,228,42)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="468" width="9" height="15" fill="rgb(252,49,5)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.70%)</title><rect x="23" y="484" width="9" height="15" fill="rgb(216,27,34)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="500" width="9" height="15" fill="rgb(239,183,9)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="516" width="9" height="15" fill="rgb(251,110,40)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="532" width="9" height="15" fill="rgb(224,94,7)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="23" y="548" width="9" height="15" fill="rgb(251,115,13)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="564" width="9" height="15" fill="rgb(237,196,54)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.70%)</title><rect x="23" y="580" width="9" height="15" fill="rgb(228,131,10)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="596" width="9" height="15" fill="rgb(225,179,44)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="612" width="9" height="15" fill="rgb(213,60,33)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="628" width="9" height="15" fill="rgb(248,114,10)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="23" y="644" width="9" height="15" fill="rgb(241,52,46)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="660" width="9" height="15" fill="rgb(205,0,46)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.70%)</title><rect x="23" y="676" width="9" height="15" fill="rgb(241,108,50)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="692" width="9" height="15" fill="rgb(238,179,52)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="708" width="9" height="15" fill="rgb(218,16,40)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="724" width="9" height="15" fill="rgb(220,9,48)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="23" y="740" width="9" height="15" fill="rgb(229,217,2)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="23" y="756" width="9" height="15" fill="rgb(218,135,1)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.70%)</title><rect x="23" y="772" width="9" height="15" fill="rgb(213,96,29)"/><text x="26.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.23%)</title><rect x="29" y="788" width="3" height="15" fill="rgb(254,173,12)"/><text x="32.00" y="798.50"></text></g><g><title>getconstraint (skl2onnx/algebra/automation.py) (1 samples, 0.23%)</title><rect x="34" y="1604" width="3" height="15" fill="rgb(237,186,13)"/><text x="37.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="34" y="1620" width="3" height="15" fill="rgb(240,123,18)"/><text x="37.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;::def_readonly&lt;onnx::OpSchema::TypeConstraintParam, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::TypeConstraintParam::*, const&amp;)::{lambda(onnx::OpSchema::TypeConstraintParam const&amp;)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::TypeConstraintParam const&amp;, pybind11::is_method&gt;(pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;::def_readonly&lt;onnx::OpSchema::TypeConstraintParam, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::TypeConstraintParam::*, const&amp;)::{lambda(onnx::OpSchema::TypeConstraintParam const&amp;)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema::TypeConstraintParam const&amp;), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="34" y="1636" width="3" height="15" fill="rgb(219,84,33)"/><text x="37.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="34" y="1652" width="3" height="15" fill="rgb(224,168,26)"/><text x="37.00" y="1662.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="34" y="1668" width="3" height="15" fill="rgb(214,71,10)"/><text x="37.00" y="1678.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.994] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="34" y="1684" width="3" height="15" fill="rgb(239,83,20)"/><text x="37.00" y="1694.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.70%)</title><rect x="32" y="1508" width="8" height="15" fill="rgb(232,215,9)"/><text x="35.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.70%)</title><rect x="32" y="1524" width="8" height="15" fill="rgb(208,54,6)"/><text x="35.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.70%)</title><rect x="32" y="1540" width="8" height="15" fill="rgb(225,123,47)"/><text x="35.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.70%)</title><rect x="32" y="1556" width="8" height="15" fill="rgb(221,198,10)"/><text x="35.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.70%)</title><rect x="32" y="1572" width="8" height="15" fill="rgb(221,137,32)"/><text x="35.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (3 samples, 0.70%)</title><rect x="32" y="1588" width="8" height="15" fill="rgb(229,225,26)"/><text x="35.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.23%)</title><rect x="37" y="1604" width="3" height="15" fill="rgb(252,101,27)"/><text x="40.00" y="1614.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.23%)</title><rect x="37" y="1620" width="3" height="15" fill="rgb(253,130,2)"/><text x="40.00" y="1630.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::BitShift_Onnx_ver11&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="40" y="1572" width="3" height="15" fill="rgb(231,226,38)"/><text x="43.00" y="1582.50"></text></g><g><title>onnx::FunctionProto::FunctionProto (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="40" y="1588" width="3" height="15" fill="rgb(210,223,4)"/><text x="43.00" y="1598.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::Loop_Onnx_ver11&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="43" y="1572" width="3" height="15" fill="rgb(208,106,13)"/><text x="46.00" y="1582.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="43" y="1588" width="3" height="15" fill="rgb(239,197,23)"/><text x="46.00" y="1598.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="43" y="1604" width="3" height="15" fill="rgb(231,103,0)"/><text x="46.00" y="1614.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="43" y="1620" width="3" height="15" fill="rgb(224,115,37)"/><text x="46.00" y="1630.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1636" width="3" height="15" fill="rgb(237,211,47)"/><text x="46.00" y="1646.50"></text></g><g><title>0x7f4dd98a18cb (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1652" width="3" height="15" fill="rgb(254,78,9)"/><text x="46.00" y="1662.50"></text></g><g><title>0x7f4dd98a0743 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1668" width="3" height="15" fill="rgb(209,9,35)"/><text x="46.00" y="1678.50"></text></g><g><title>__default_morecore (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1684" width="3" height="15" fill="rgb(212,106,3)"/><text x="46.00" y="1694.50"></text></g><g><title>__sbrk (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1700" width="3" height="15" fill="rgb(246,30,38)"/><text x="46.00" y="1710.50"></text></g><g><title>brk (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1716" width="3" height="15" fill="rgb(206,118,35)"/><text x="46.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="484" width="16" height="15" fill="rgb(216,14,15)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="500" width="16" height="15" fill="rgb(251,177,22)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="516" width="16" height="15" fill="rgb(254,127,9)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="532" width="16" height="15" fill="rgb(229,197,22)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="548" width="16" height="15" fill="rgb(237,189,16)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="564" width="16" height="15" fill="rgb(246,178,40)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 1.41%)</title><rect x="32" y="580" width="16" height="15" fill="rgb(214,167,19)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="596" width="16" height="15" fill="rgb(236,191,22)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="612" width="16" height="15" fill="rgb(231,71,45)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="628" width="16" height="15" fill="rgb(208,89,7)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="644" width="16" height="15" fill="rgb(216,229,18)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="660" width="16" height="15" fill="rgb(237,116,14)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 1.41%)</title><rect x="32" y="676" width="16" height="15" fill="rgb(209,144,45)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="692" width="16" height="15" fill="rgb(253,138,38)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="708" width="16" height="15" fill="rgb(218,88,6)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="724" width="16" height="15" fill="rgb(241,165,12)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="740" width="16" height="15" fill="rgb(221,151,21)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="756" width="16" height="15" fill="rgb(210,41,43)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 1.41%)</title><rect x="32" y="772" width="16" height="15" fill="rgb(252,146,25)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="788" width="16" height="15" fill="rgb(205,76,28)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="804" width="16" height="15" fill="rgb(246,101,31)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="820" width="16" height="15" fill="rgb(209,95,14)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="836" width="16" height="15" fill="rgb(215,112,42)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="852" width="16" height="15" fill="rgb(245,222,2)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (6 samples, 1.41%)</title><rect x="32" y="868" width="16" height="15" fill="rgb(209,48,27)"/><text x="35.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="884" width="16" height="15" fill="rgb(247,26,0)"/><text x="35.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="900" width="16" height="15" fill="rgb(214,46,17)"/><text x="35.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="916" width="16" height="15" fill="rgb(219,9,7)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="932" width="16" height="15" fill="rgb(244,11,37)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="948" width="16" height="15" fill="rgb(234,54,31)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="964" width="16" height="15" fill="rgb(250,63,41)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="980" width="16" height="15" fill="rgb(222,195,6)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="996" width="16" height="15" fill="rgb(253,123,17)"/><text x="35.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (6 samples, 1.41%)</title><rect x="32" y="1012" width="16" height="15" fill="rgb(224,144,37)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1028" width="16" height="15" fill="rgb(206,87,23)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1044" width="16" height="15" fill="rgb(254,194,33)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1060" width="16" height="15" fill="rgb(240,95,39)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="1076" width="16" height="15" fill="rgb(209,188,5)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1092" width="16" height="15" fill="rgb(231,184,30)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (6 samples, 1.41%)</title><rect x="32" y="1108" width="16" height="15" fill="rgb(215,1,23)"/><text x="35.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1124" width="16" height="15" fill="rgb(239,118,31)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1140" width="16" height="15" fill="rgb(209,152,44)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1156" width="16" height="15" fill="rgb(252,76,38)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1172" width="16" height="15" fill="rgb(215,54,1)"/><text x="35.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1188" width="16" height="15" fill="rgb(210,85,7)"/><text x="35.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="1204" width="16" height="15" fill="rgb(250,77,40)"/><text x="35.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1220" width="16" height="15" fill="rgb(240,98,17)"/><text x="35.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (6 samples, 1.41%)</title><rect x="32" y="1236" width="16" height="15" fill="rgb(254,78,41)"/><text x="35.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1252" width="16" height="15" fill="rgb(235,132,0)"/><text x="35.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1268" width="16" height="15" fill="rgb(238,89,47)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1284" width="16" height="15" fill="rgb(224,224,19)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1300" width="16" height="15" fill="rgb(243,72,0)"/><text x="35.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1316" width="16" height="15" fill="rgb(222,129,52)"/><text x="35.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="1332" width="16" height="15" fill="rgb(246,121,38)"/><text x="35.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1348" width="16" height="15" fill="rgb(240,57,30)"/><text x="35.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (6 samples, 1.41%)</title><rect x="32" y="1364" width="16" height="15" fill="rgb(208,222,42)"/><text x="35.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1380" width="16" height="15" fill="rgb(252,125,9)"/><text x="35.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1396" width="16" height="15" fill="rgb(229,124,49)"/><text x="35.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1412" width="16" height="15" fill="rgb(224,140,16)"/><text x="35.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="32" y="1428" width="16" height="15" fill="rgb(252,174,53)"/><text x="35.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="32" y="1444" width="16" height="15" fill="rgb(214,2,36)"/><text x="35.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (6 samples, 1.41%)</title><rect x="32" y="1460" width="16" height="15" fill="rgb(231,143,2)"/><text x="35.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (6 samples, 1.41%)</title><rect x="32" y="1476" width="16" height="15" fill="rgb(215,105,3)"/><text x="35.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (6 samples, 1.41%)</title><rect x="32" y="1492" width="16" height="15" fill="rgb(219,41,1)"/><text x="35.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="40" y="1508" width="8" height="15" fill="rgb(253,178,2)"/><text x="43.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="40" y="1524" width="8" height="15" fill="rgb(238,84,25)"/><text x="43.00" y="1534.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="40" y="1540" width="8" height="15" fill="rgb(246,188,54)"/><text x="43.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver11::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="40" y="1556" width="8" height="15" fill="rgb(228,164,15)"/><text x="43.00" y="1566.50"></text></g><g><title>onnx::RegisterSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="46" y="1572" width="2" height="15" fill="rgb(224,23,54)"/><text x="49.00" y="1582.50"></text></g><g><title>onnx::OpSchemaRegistry::OpSchemaRegisterOnce::OpSchemaRegisterOnce (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="46" y="1588" width="2" height="15" fill="rgb(227,30,24)"/><text x="49.00" y="1598.50"></text></g><g><title>onnx::OpSchema::Finalize (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="46" y="1604" width="2" height="15" fill="rgb(223,181,32)"/><text x="49.00" y="1614.50"></text></g><g><title>onnx::OpSchema::ParseAndSetTypes (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="46" y="1620" width="2" height="15" fill="rgb(229,52,24)"/><text x="49.00" y="1630.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::operator= (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="46" y="1636" width="2" height="15" fill="rgb(239,73,25)"/><text x="49.00" y="1646.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::operator=(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#2}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="46" y="1652" width="2" height="15" fill="rgb(208,183,40)"/><text x="49.00" y="1662.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="46" y="1668" width="2" height="15" fill="rgb(241,112,44)"/><text x="49.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="772" width="3" height="15" fill="rgb(214,131,25)"/><text x="51.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="788" width="3" height="15" fill="rgb(242,168,1)"/><text x="51.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="804" width="3" height="15" fill="rgb(241,164,30)"/><text x="51.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="820" width="3" height="15" fill="rgb(213,105,16)"/><text x="51.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="48" y="836" width="3" height="15" fill="rgb(207,22,22)"/><text x="51.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="852" width="3" height="15" fill="rgb(243,179,49)"/><text x="51.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.23%)</title><rect x="48" y="868" width="3" height="15" fill="rgb(223,3,43)"/><text x="51.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="884" width="3" height="15" fill="rgb(241,0,30)"/><text x="51.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="900" width="3" height="15" fill="rgb(250,224,10)"/><text x="51.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="916" width="3" height="15" fill="rgb(221,69,33)"/><text x="51.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="48" y="932" width="3" height="15" fill="rgb(248,87,32)"/><text x="51.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="948" width="3" height="15" fill="rgb(247,53,28)"/><text x="51.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.23%)</title><rect x="48" y="964" width="3" height="15" fill="rgb(217,204,24)"/><text x="51.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="980" width="3" height="15" fill="rgb(251,89,8)"/><text x="51.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="996" width="3" height="15" fill="rgb(238,213,37)"/><text x="51.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="1012" width="3" height="15" fill="rgb(224,30,17)"/><text x="51.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(249,17,39)"/><text x="51.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(228,148,29)"/><text x="51.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="48" y="1060" width="3" height="15" fill="rgb(234,202,16)"/><text x="51.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.23%)</title><rect x="51" y="1012" width="3" height="15" fill="rgb(253,121,24)"/><text x="54.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1028" width="3" height="15" fill="rgb(207,208,4)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1044" width="3" height="15" fill="rgb(244,148,25)"/><text x="54.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1060" width="3" height="15" fill="rgb(226,132,8)"/><text x="54.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1076" width="3" height="15" fill="rgb(252,207,45)"/><text x="54.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1092" width="3" height="15" fill="rgb(225,97,17)"/><text x="54.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.23%)</title><rect x="51" y="1108" width="3" height="15" fill="rgb(240,224,20)"/><text x="54.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1124" width="3" height="15" fill="rgb(233,144,35)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1140" width="3" height="15" fill="rgb(249,92,28)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1156" width="3" height="15" fill="rgb(211,172,19)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1172" width="3" height="15" fill="rgb(250,55,3)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1188" width="3" height="15" fill="rgb(221,184,38)"/><text x="54.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.23%)</title><rect x="51" y="1204" width="3" height="15" fill="rgb(251,155,48)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1220" width="3" height="15" fill="rgb(250,106,13)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1236" width="3" height="15" fill="rgb(247,89,50)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1252" width="3" height="15" fill="rgb(242,195,37)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1268" width="3" height="15" fill="rgb(222,221,9)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1284" width="3" height="15" fill="rgb(247,131,22)"/><text x="54.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.23%)</title><rect x="51" y="1300" width="3" height="15" fill="rgb(234,170,1)"/><text x="54.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1316" width="3" height="15" fill="rgb(209,134,9)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1332" width="3" height="15" fill="rgb(235,142,2)"/><text x="54.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1348" width="3" height="15" fill="rgb(212,191,29)"/><text x="54.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1364" width="3" height="15" fill="rgb(206,209,30)"/><text x="54.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1380" width="3" height="15" fill="rgb(212,153,14)"/><text x="54.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="51" y="1396" width="3" height="15" fill="rgb(228,169,25)"/><text x="54.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1412" width="3" height="15" fill="rgb(225,211,18)"/><text x="54.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1428" width="3" height="15" fill="rgb(241,102,22)"/><text x="54.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1444" width="3" height="15" fill="rgb(219,101,37)"/><text x="54.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1460" width="3" height="15" fill="rgb(213,168,22)"/><text x="54.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1476" width="3" height="15" fill="rgb(246,51,44)"/><text x="54.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.23%)</title><rect x="51" y="1492" width="3" height="15" fill="rgb(209,112,39)"/><text x="54.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1508" width="3" height="15" fill="rgb(208,57,13)"/><text x="54.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1524" width="3" height="15" fill="rgb(237,37,16)"/><text x="54.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1540" width="3" height="15" fill="rgb(224,94,6)"/><text x="54.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1556" width="3" height="15" fill="rgb(224,9,19)"/><text x="54.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1572" width="3" height="15" fill="rgb(214,154,32)"/><text x="54.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.23%)</title><rect x="51" y="1588" width="3" height="15" fill="rgb(230,90,13)"/><text x="54.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1604" width="3" height="15" fill="rgb(225,226,4)"/><text x="54.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1620" width="3" height="15" fill="rgb(239,189,12)"/><text x="54.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1636" width="3" height="15" fill="rgb(244,43,30)"/><text x="54.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1652" width="3" height="15" fill="rgb(251,86,39)"/><text x="54.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1668" width="3" height="15" fill="rgb(237,176,54)"/><text x="54.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.23%)</title><rect x="51" y="1684" width="3" height="15" fill="rgb(239,185,33)"/><text x="54.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1700" width="3" height="15" fill="rgb(221,185,47)"/><text x="54.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1716" width="3" height="15" fill="rgb(225,136,22)"/><text x="54.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1732" width="3" height="15" fill="rgb(218,23,21)"/><text x="54.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1748" width="3" height="15" fill="rgb(232,184,24)"/><text x="54.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1764" width="3" height="15" fill="rgb(211,142,48)"/><text x="54.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.23%)</title><rect x="51" y="1780" width="3" height="15" fill="rgb(250,82,37)"/><text x="54.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.23%)</title><rect x="51" y="1796" width="3" height="15" fill="rgb(232,174,21)"/><text x="54.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.23%)</title><rect x="51" y="1812" width="3" height="15" fill="rgb(242,134,31)"/><text x="54.00" y="1822.50"></text></g><g><title>__init__ (matplotlib/colors.py) (1 samples, 0.23%)</title><rect x="51" y="1828" width="3" height="15" fill="rgb(240,38,42)"/><text x="54.00" y="1838.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.70%)</title><rect x="48" y="724" width="9" height="15" fill="rgb(239,90,37)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="48" y="740" width="9" height="15" fill="rgb(233,81,39)"/><text x="51.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="48" y="756" width="9" height="15" fill="rgb(227,107,25)"/><text x="51.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="772" width="6" height="15" fill="rgb(222,45,24)"/><text x="54.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.47%)</title><rect x="51" y="788" width="6" height="15" fill="rgb(217,43,49)"/><text x="54.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="804" width="6" height="15" fill="rgb(240,54,40)"/><text x="54.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.47%)</title><rect x="51" y="820" width="6" height="15" fill="rgb(223,84,21)"/><text x="54.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="836" width="6" height="15" fill="rgb(248,145,14)"/><text x="54.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="852" width="6" height="15" fill="rgb(240,61,22)"/><text x="54.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="868" width="6" height="15" fill="rgb(218,150,18)"/><text x="54.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.47%)</title><rect x="51" y="884" width="6" height="15" fill="rgb(229,173,47)"/><text x="54.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="900" width="6" height="15" fill="rgb(213,79,1)"/><text x="54.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.47%)</title><rect x="51" y="916" width="6" height="15" fill="rgb(218,127,17)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="932" width="6" height="15" fill="rgb(239,8,39)"/><text x="54.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="948" width="6" height="15" fill="rgb(243,221,47)"/><text x="54.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="964" width="6" height="15" fill="rgb(252,74,39)"/><text x="54.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.47%)</title><rect x="51" y="980" width="6" height="15" fill="rgb(248,82,25)"/><text x="54.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="51" y="996" width="6" height="15" fill="rgb(211,181,35)"/><text x="54.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.23%)</title><rect x="54" y="1012" width="3" height="15" fill="rgb(236,142,51)"/><text x="57.00" y="1022.50"></text></g><g><title>GroupBy (pandas/core/groupby/groupby.py) (1 samples, 0.23%)</title><rect x="54" y="1028" width="3" height="15" fill="rgb(210,21,1)"/><text x="57.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.23%)</title><rect x="54" y="1044" width="3" height="15" fill="rgb(239,62,4)"/><text x="57.00" y="1054.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.23%)</title><rect x="54" y="1060" width="3" height="15" fill="rgb(238,160,8)"/><text x="57.00" y="1070.50"></text></g><g><title>match (re.py) (1 samples, 0.23%)</title><rect x="57" y="772" width="2" height="15" fill="rgb(237,145,42)"/><text x="60.00" y="782.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.23%)</title><rect x="57" y="788" width="2" height="15" fill="rgb(218,83,52)"/><text x="60.00" y="798.50"></text></g><g><title>0x7f4dd989fe64 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="57" y="804" width="2" height="15" fill="rgb(247,81,25)"/><text x="60.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="48" y="644" width="14" height="15" fill="rgb(233,107,46)"/><text x="51.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="48" y="660" width="14" height="15" fill="rgb(241,147,34)"/><text x="51.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="48" y="676" width="14" height="15" fill="rgb(218,2,12)"/><text x="51.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.17%)</title><rect x="48" y="692" width="14" height="15" fill="rgb(248,55,5)"/><text x="51.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.17%)</title><rect x="48" y="708" width="14" height="15" fill="rgb(233,73,33)"/><text x="51.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/config_init.py) (2 samples, 0.47%)</title><rect x="57" y="724" width="5" height="15" fill="rgb(239,54,28)"/><text x="60.00" y="734.50"></text></g><g><title>inner (pandas/_config/config.py) (2 samples, 0.47%)</title><rect x="57" y="740" width="5" height="15" fill="rgb(241,159,48)"/><text x="60.00" y="750.50"></text></g><g><title>register_option (pandas/_config/config.py) (2 samples, 0.47%)</title><rect x="57" y="756" width="5" height="15" fill="rgb(209,32,1)"/><text x="60.00" y="766.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.23%)</title><rect x="59" y="772" width="3" height="15" fill="rgb(249,47,5)"/><text x="62.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.82%)</title><rect x="32" y="340" width="33" height="15" fill="rgb(227,216,31)"/><text x="35.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.82%)</title><rect x="32" y="356" width="33" height="15" fill="rgb(208,107,33)"/><text x="35.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.82%)</title><rect x="32" y="372" width="33" height="15" fill="rgb(221,35,6)"/><text x="35.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.82%)</title><rect x="32" y="388" width="33" height="15" fill="rgb(232,169,26)"/><text x="35.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.82%)</title><rect x="32" y="404" width="33" height="15" fill="rgb(233,156,46)"/><text x="35.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.82%)</title><rect x="32" y="420" width="33" height="15" fill="rgb(211,94,44)"/><text x="35.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (12 samples, 2.82%)</title><rect x="32" y="436" width="33" height="15" fill="rgb(252,45,17)"/><text x="35.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.82%)</title><rect x="32" y="452" width="33" height="15" fill="rgb(205,157,33)"/><text x="35.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.82%)</title><rect x="32" y="468" width="33" height="15" fill="rgb(233,35,17)"/><text x="35.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="48" y="484" width="17" height="15" fill="rgb(219,56,12)"/><text x="51.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="48" y="500" width="17" height="15" fill="rgb(216,163,13)"/><text x="51.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="48" y="516" width="17" height="15" fill="rgb(237,193,11)"/><text x="51.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 1.41%)</title><rect x="48" y="532" width="17" height="15" fill="rgb(236,1,10)"/><text x="51.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="48" y="548" width="17" height="15" fill="rgb(218,53,25)"/><text x="51.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="48" y="564" width="17" height="15" fill="rgb(235,226,30)"/><text x="51.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="48" y="580" width="17" height="15" fill="rgb(241,152,50)"/><text x="51.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.41%)</title><rect x="48" y="596" width="17" height="15" fill="rgb(208,122,36)"/><text x="51.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.41%)</title><rect x="48" y="612" width="17" height="15" fill="rgb(211,201,2)"/><text x="51.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (6 samples, 1.41%)</title><rect x="48" y="628" width="17" height="15" fill="rgb(215,33,51)"/><text x="51.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="62" y="644" width="3" height="15" fill="rgb(251,13,49)"/><text x="65.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="62" y="660" width="3" height="15" fill="rgb(233,50,1)"/><text x="65.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="62" y="676" width="3" height="15" fill="rgb(210,7,39)"/><text x="65.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="62" y="692" width="3" height="15" fill="rgb(219,149,37)"/><text x="65.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="62" y="708" width="3" height="15" fill="rgb(238,220,1)"/><text x="65.00" y="718.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="62" y="724" width="3" height="15" fill="rgb(210,228,23)"/><text x="65.00" y="734.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="62" y="740" width="3" height="15" fill="rgb(210,32,23)"/><text x="65.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="62" y="756" width="3" height="15" fill="rgb(252,0,50)"/><text x="65.00" y="766.50"></text></g><g><title>0x7f4dadfbd530 (?) (1 samples, 0.23%)</title><rect x="62" y="772" width="3" height="15" fill="rgb(253,13,6)"/><text x="65.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (13 samples, 3.05%)</title><rect x="32" y="244" width="36" height="15" fill="rgb(241,179,32)"/><text x="35.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.05%)</title><rect x="32" y="260" width="36" height="15" fill="rgb(234,228,37)"/><text x="35.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.05%)</title><rect x="32" y="276" width="36" height="15" fill="rgb(206,101,46)"/><text x="35.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.05%)</title><rect x="32" y="292" width="36" height="15" fill="rgb(247,66,10)"/><text x="35.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.05%)</title><rect x="32" y="308" width="36" height="15" fill="rgb(243,33,26)"/><text x="35.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.05%)</title><rect x="32" y="324" width="36" height="15" fill="rgb(250,50,22)"/><text x="35.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.23%)</title><rect x="65" y="340" width="3" height="15" fill="rgb(239,14,37)"/><text x="68.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="356" width="3" height="15" fill="rgb(207,223,42)"/><text x="68.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="372" width="3" height="15" fill="rgb(211,89,49)"/><text x="68.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="388" width="3" height="15" fill="rgb(212,85,44)"/><text x="68.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="404" width="3" height="15" fill="rgb(250,42,0)"/><text x="68.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="420" width="3" height="15" fill="rgb(239,112,41)"/><text x="68.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="436" width="3" height="15" fill="rgb(254,9,44)"/><text x="68.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="65" y="452" width="3" height="15" fill="rgb(235,5,24)"/><text x="68.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="468" width="3" height="15" fill="rgb(243,142,30)"/><text x="68.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.23%)</title><rect x="65" y="484" width="3" height="15" fill="rgb(253,40,53)"/><text x="68.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="500" width="3" height="15" fill="rgb(224,42,6)"/><text x="68.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="516" width="3" height="15" fill="rgb(252,114,1)"/><text x="68.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="532" width="3" height="15" fill="rgb(244,193,16)"/><text x="68.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="65" y="548" width="3" height="15" fill="rgb(214,115,4)"/><text x="68.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="564" width="3" height="15" fill="rgb(234,33,39)"/><text x="68.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.23%)</title><rect x="65" y="580" width="3" height="15" fill="rgb(217,202,41)"/><text x="68.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="596" width="3" height="15" fill="rgb(219,216,28)"/><text x="68.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="612" width="3" height="15" fill="rgb(229,33,8)"/><text x="68.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="628" width="3" height="15" fill="rgb(247,66,29)"/><text x="68.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="65" y="644" width="3" height="15" fill="rgb(226,128,0)"/><text x="68.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="660" width="3" height="15" fill="rgb(209,41,24)"/><text x="68.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.23%)</title><rect x="65" y="676" width="3" height="15" fill="rgb(206,75,27)"/><text x="68.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="692" width="3" height="15" fill="rgb(249,228,1)"/><text x="68.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="708" width="3" height="15" fill="rgb(233,100,17)"/><text x="68.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="724" width="3" height="15" fill="rgb(232,185,39)"/><text x="68.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="65" y="740" width="3" height="15" fill="rgb(213,94,12)"/><text x="68.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="756" width="3" height="15" fill="rgb(205,138,14)"/><text x="68.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.23%)</title><rect x="65" y="772" width="3" height="15" fill="rgb(251,220,40)"/><text x="68.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="788" width="3" height="15" fill="rgb(227,160,52)"/><text x="68.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="804" width="3" height="15" fill="rgb(244,92,49)"/><text x="68.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="820" width="3" height="15" fill="rgb(233,122,4)"/><text x="68.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="836" width="3" height="15" fill="rgb(249,7,43)"/><text x="68.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="852" width="3" height="15" fill="rgb(249,71,25)"/><text x="68.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="65" y="868" width="3" height="15" fill="rgb(217,70,45)"/><text x="68.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="884" width="3" height="15" fill="rgb(212,50,32)"/><text x="68.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.23%)</title><rect x="65" y="900" width="3" height="15" fill="rgb(244,41,52)"/><text x="68.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="916" width="3" height="15" fill="rgb(240,3,53)"/><text x="68.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="932" width="3" height="15" fill="rgb(240,184,20)"/><text x="68.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="948" width="3" height="15" fill="rgb(226,108,46)"/><text x="68.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="65" y="964" width="3" height="15" fill="rgb(228,154,15)"/><text x="68.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="980" width="3" height="15" fill="rgb(205,110,32)"/><text x="68.00" y="990.50"></text></g><g><title>&lt;module&gt; (idna/__init__.py) (1 samples, 0.23%)</title><rect x="65" y="996" width="3" height="15" fill="rgb(205,95,3)"/><text x="68.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="1012" width="3" height="15" fill="rgb(229,97,41)"/><text x="68.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="1028" width="3" height="15" fill="rgb(225,20,48)"/><text x="68.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="1044" width="3" height="15" fill="rgb(248,27,36)"/><text x="68.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="65" y="1060" width="3" height="15" fill="rgb(214,196,17)"/><text x="68.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="65" y="1076" width="3" height="15" fill="rgb(253,153,18)"/><text x="68.00" y="1086.50"></text></g><g><title>&lt;module&gt; (idna/core.py) (1 samples, 0.23%)</title><rect x="65" y="1092" width="3" height="15" fill="rgb(227,45,41)"/><text x="68.00" y="1102.50"></text></g><g><title>compile (re.py) (1 samples, 0.23%)</title><rect x="65" y="1108" width="3" height="15" fill="rgb(224,147,27)"/><text x="68.00" y="1118.50"></text></g><g><title>_compile (re.py) (1 samples, 0.23%)</title><rect x="65" y="1124" width="3" height="15" fill="rgb(205,204,28)"/><text x="68.00" y="1134.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.23%)</title><rect x="65" y="1140" width="3" height="15" fill="rgb(239,192,42)"/><text x="68.00" y="1150.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.23%)</title><rect x="65" y="1156" width="3" height="15" fill="rgb(210,174,37)"/><text x="68.00" y="1166.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.23%)</title><rect x="65" y="1172" width="3" height="15" fill="rgb(209,96,36)"/><text x="68.00" y="1182.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.23%)</title><rect x="65" y="1188" width="3" height="15" fill="rgb(238,151,23)"/><text x="68.00" y="1198.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.23%)</title><rect x="68" y="500" width="2" height="15" fill="rgb(234,224,13)"/><text x="71.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="516" width="2" height="15" fill="rgb(241,184,28)"/><text x="71.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="532" width="2" height="15" fill="rgb(210,188,36)"/><text x="71.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="548" width="2" height="15" fill="rgb(223,160,0)"/><text x="71.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="68" y="564" width="2" height="15" fill="rgb(242,168,38)"/><text x="71.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="580" width="2" height="15" fill="rgb(231,203,23)"/><text x="71.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.23%)</title><rect x="68" y="596" width="2" height="15" fill="rgb(209,150,8)"/><text x="71.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="612" width="2" height="15" fill="rgb(212,30,53)"/><text x="71.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="628" width="2" height="15" fill="rgb(238,89,4)"/><text x="71.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="644" width="2" height="15" fill="rgb(226,223,20)"/><text x="71.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="68" y="660" width="2" height="15" fill="rgb(244,160,35)"/><text x="71.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="676" width="2" height="15" fill="rgb(235,125,24)"/><text x="71.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.23%)</title><rect x="68" y="692" width="2" height="15" fill="rgb(235,132,49)"/><text x="71.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="708" width="2" height="15" fill="rgb(247,206,22)"/><text x="71.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="724" width="2" height="15" fill="rgb(222,50,31)"/><text x="71.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="740" width="2" height="15" fill="rgb(242,209,17)"/><text x="71.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="68" y="756" width="2" height="15" fill="rgb(235,94,53)"/><text x="71.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="772" width="2" height="15" fill="rgb(251,162,23)"/><text x="71.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (1 samples, 0.23%)</title><rect x="68" y="788" width="2" height="15" fill="rgb(216,150,19)"/><text x="71.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="804" width="2" height="15" fill="rgb(238,147,36)"/><text x="71.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="820" width="2" height="15" fill="rgb(236,40,30)"/><text x="71.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="836" width="2" height="15" fill="rgb(210,158,18)"/><text x="71.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="68" y="852" width="2" height="15" fill="rgb(227,148,28)"/><text x="71.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="868" width="2" height="15" fill="rgb(238,53,39)"/><text x="71.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py) (1 samples, 0.23%)</title><rect x="68" y="884" width="2" height="15" fill="rgb(215,52,2)"/><text x="71.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="900" width="2" height="15" fill="rgb(217,32,20)"/><text x="71.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="916" width="2" height="15" fill="rgb(206,169,52)"/><text x="71.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="932" width="2" height="15" fill="rgb(222,219,35)"/><text x="71.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="68" y="948" width="2" height="15" fill="rgb(237,143,32)"/><text x="71.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="964" width="2" height="15" fill="rgb(221,122,29)"/><text x="71.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py) (1 samples, 0.23%)</title><rect x="68" y="980" width="2" height="15" fill="rgb(230,151,38)"/><text x="71.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="996" width="2" height="15" fill="rgb(214,189,16)"/><text x="71.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="1012" width="2" height="15" fill="rgb(232,218,12)"/><text x="71.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="1028" width="2" height="15" fill="rgb(233,187,32)"/><text x="71.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="68" y="1044" width="2" height="15" fill="rgb(227,9,1)"/><text x="71.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="68" y="1060" width="2" height="15" fill="rgb(212,69,18)"/><text x="71.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py) (1 samples, 0.23%)</title><rect x="68" y="1076" width="2" height="15" fill="rgb(234,6,45)"/><text x="71.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.40%)</title><rect x="10" y="68" width="63" height="15" fill="rgb(225,146,40)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.40%)</title><rect x="10" y="84" width="63" height="15" fill="rgb(254,53,48)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.40%)</title><rect x="10" y="100" width="63" height="15" fill="rgb(205,214,16)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (23 samples, 5.40%)</title><rect x="10" y="116" width="63" height="15" fill="rgb(244,161,4)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.40%)</title><rect x="10" y="132" width="63" height="15" fill="rgb(209,179,13)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (23 samples, 5.40%)</title><rect x="10" y="148" width="63" height="15" fill="rgb(243,108,10)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.40%)</title><rect x="10" y="164" width="63" height="15" fill="rgb(222,56,47)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.40%)</title><rect x="10" y="180" width="63" height="15" fill="rgb(212,135,50)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.52%)</title><rect x="32" y="196" width="41" height="15" fill="rgb(217,13,18)"/><text x="35.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 3.52%)</title><rect x="32" y="212" width="41" height="15" fill="rgb(220,125,52)"/><text x="35.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.52%)</title><rect x="32" y="228" width="41" height="15" fill="rgb(213,29,47)"/><text x="35.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.47%)</title><rect x="68" y="244" width="5" height="15" fill="rgb(224,85,16)"/><text x="71.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="260" width="5" height="15" fill="rgb(224,99,31)"/><text x="71.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="276" width="5" height="15" fill="rgb(214,213,51)"/><text x="71.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="292" width="5" height="15" fill="rgb(231,40,11)"/><text x="71.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="308" width="5" height="15" fill="rgb(230,227,11)"/><text x="71.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="324" width="5" height="15" fill="rgb(213,157,25)"/><text x="71.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.47%)</title><rect x="68" y="340" width="5" height="15" fill="rgb(209,179,20)"/><text x="71.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="356" width="5" height="15" fill="rgb(233,51,51)"/><text x="71.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.47%)</title><rect x="68" y="372" width="5" height="15" fill="rgb(251,75,53)"/><text x="71.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="388" width="5" height="15" fill="rgb(227,84,45)"/><text x="71.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="404" width="5" height="15" fill="rgb(239,122,37)"/><text x="71.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="420" width="5" height="15" fill="rgb(239,200,48)"/><text x="71.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="436" width="5" height="15" fill="rgb(211,218,54)"/><text x="71.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="452" width="5" height="15" fill="rgb(250,200,38)"/><text x="71.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.47%)</title><rect x="68" y="468" width="5" height="15" fill="rgb(207,137,39)"/><text x="71.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.47%)</title><rect x="68" y="484" width="5" height="15" fill="rgb(241,131,37)"/><text x="71.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.23%)</title><rect x="70" y="500" width="3" height="15" fill="rgb(246,5,24)"/><text x="73.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="516" width="3" height="15" fill="rgb(216,106,43)"/><text x="73.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="532" width="3" height="15" fill="rgb(252,100,37)"/><text x="73.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="548" width="3" height="15" fill="rgb(234,24,41)"/><text x="73.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="564" width="3" height="15" fill="rgb(225,146,49)"/><text x="73.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="580" width="3" height="15" fill="rgb(247,207,5)"/><text x="73.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="70" y="596" width="3" height="15" fill="rgb(241,65,12)"/><text x="73.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="612" width="3" height="15" fill="rgb(253,68,8)"/><text x="73.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.23%)</title><rect x="70" y="628" width="3" height="15" fill="rgb(239,103,12)"/><text x="73.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="644" width="3" height="15" fill="rgb(224,185,54)"/><text x="73.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="660" width="3" height="15" fill="rgb(244,211,7)"/><text x="73.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="676" width="3" height="15" fill="rgb(218,123,38)"/><text x="73.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="692" width="3" height="15" fill="rgb(214,63,27)"/><text x="73.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="708" width="3" height="15" fill="rgb(227,14,10)"/><text x="73.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="724" width="3" height="15" fill="rgb(230,169,44)"/><text x="73.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="70" y="740" width="3" height="15" fill="rgb(230,81,24)"/><text x="73.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="756" width="3" height="15" fill="rgb(223,203,38)"/><text x="73.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.23%)</title><rect x="70" y="772" width="3" height="15" fill="rgb(228,68,21)"/><text x="73.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="788" width="3" height="15" fill="rgb(220,147,42)"/><text x="73.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="804" width="3" height="15" fill="rgb(210,98,33)"/><text x="73.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="820" width="3" height="15" fill="rgb(213,85,38)"/><text x="73.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="836" width="3" height="15" fill="rgb(247,222,5)"/><text x="73.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="852" width="3" height="15" fill="rgb(212,69,54)"/><text x="73.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="70" y="868" width="3" height="15" fill="rgb(238,20,0)"/><text x="73.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="884" width="3" height="15" fill="rgb(205,128,34)"/><text x="73.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.23%)</title><rect x="70" y="900" width="3" height="15" fill="rgb(239,205,23)"/><text x="73.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="916" width="3" height="15" fill="rgb(238,23,54)"/><text x="73.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="932" width="3" height="15" fill="rgb(208,62,45)"/><text x="73.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="948" width="3" height="15" fill="rgb(252,9,45)"/><text x="73.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="70" y="964" width="3" height="15" fill="rgb(215,154,53)"/><text x="73.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="980" width="3" height="15" fill="rgb(231,159,24)"/><text x="73.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py) (1 samples, 0.23%)</title><rect x="70" y="996" width="3" height="15" fill="rgb(234,109,32)"/><text x="73.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="1012" width="3" height="15" fill="rgb(206,139,35)"/><text x="73.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="1028" width="3" height="15" fill="rgb(214,94,50)"/><text x="73.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="70" y="1044" width="3" height="15" fill="rgb(251,135,51)"/><text x="73.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="70" y="1060" width="3" height="15" fill="rgb(248,111,24)"/><text x="73.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="70" y="1076" width="3" height="15" fill="rgb(214,181,9)"/><text x="73.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="70" y="1092" width="3" height="15" fill="rgb(239,122,51)"/><text x="73.00" y="1102.50"></text></g><g><title>0x7f4d9990fff9 (?) (1 samples, 0.23%)</title><rect x="84" y="212" width="3" height="15" fill="rgb(212,176,40)"/><text x="87.00" y="222.50"></text></g><g><title>0x7f4d9990aef6 (?) (1 samples, 0.23%)</title><rect x="84" y="228" width="3" height="15" fill="rgb(229,146,50)"/><text x="87.00" y="238.50"></text></g><g><title>0x7f4d998ff962 (?) (1 samples, 0.23%)</title><rect x="84" y="244" width="3" height="15" fill="rgb(223,43,22)"/><text x="87.00" y="254.50"></text></g><g><title>0x7f4d999337a7 (?) (1 samples, 0.23%)</title><rect x="84" y="260" width="3" height="15" fill="rgb(212,148,24)"/><text x="87.00" y="270.50"></text></g><g><title>0x7f4d99933379 (?) (1 samples, 0.23%)</title><rect x="84" y="276" width="3" height="15" fill="rgb(219,160,51)"/><text x="87.00" y="286.50"></text></g><g><title>0x7f4d99d918b8 (?) (1 samples, 0.23%)</title><rect x="84" y="292" width="3" height="15" fill="rgb(207,100,19)"/><text x="87.00" y="302.50"></text></g><g><title>0x7f4d99d8fc7f (?) (1 samples, 0.23%)</title><rect x="84" y="308" width="3" height="15" fill="rgb(232,170,27)"/><text x="87.00" y="318.50"></text></g><g><title>0x7f4d99da299c (?) (1 samples, 0.23%)</title><rect x="84" y="324" width="3" height="15" fill="rgb(221,139,7)"/><text x="87.00" y="334.50"></text></g><g><title>0x7f4d99a87d39 (?) (1 samples, 0.23%)</title><rect x="84" y="340" width="3" height="15" fill="rgb(234,213,26)"/><text x="87.00" y="350.50"></text></g><g><title>0x7f4d99a8240d (?) (1 samples, 0.23%)</title><rect x="84" y="356" width="3" height="15" fill="rgb(251,56,11)"/><text x="87.00" y="366.50"></text></g><g><title>0x7f4dd9a1ee6d (libm-2.29.so) (1 samples, 0.23%)</title><rect x="84" y="372" width="3" height="15" fill="rgb(235,20,35)"/><text x="87.00" y="382.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="87" y="292" width="3" height="15" fill="rgb(219,219,12)"/><text x="90.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="87" y="308" width="3" height="15" fill="rgb(249,96,27)"/><text x="90.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="87" y="324" width="3" height="15" fill="rgb(222,73,17)"/><text x="90.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="87" y="340" width="3" height="15" fill="rgb(206,22,1)"/><text x="90.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="90" y="292" width="3" height="15" fill="rgb(212,37,37)"/><text x="93.00" y="302.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="90" y="308" width="3" height="15" fill="rgb(247,220,31)"/><text x="93.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="95" y="340" width="6" height="15" fill="rgb(213,40,8)"/><text x="98.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="98" y="356" width="3" height="15" fill="rgb(214,224,0)"/><text x="101.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="98" y="372" width="3" height="15" fill="rgb(213,184,21)"/><text x="101.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="98" y="388" width="3" height="15" fill="rgb(236,46,44)"/><text x="101.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="98" y="404" width="3" height="15" fill="rgb(232,97,21)"/><text x="101.00" y="414.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="383" y="356" width="9" height="15" fill="rgb(234,36,15)"/><text x="386.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="383" y="372" width="9" height="15" fill="rgb(241,194,37)"/><text x="386.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="386" y="388" width="6" height="15" fill="rgb(220,130,43)"/><text x="389.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="386" y="404" width="6" height="15" fill="rgb(210,112,37)"/><text x="389.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="386" y="420" width="6" height="15" fill="rgb(242,125,0)"/><text x="389.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="386" y="436" width="6" height="15" fill="rgb(232,169,52)"/><text x="389.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="386" y="452" width="6" height="15" fill="rgb(245,91,50)"/><text x="389.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="389" y="468" width="3" height="15" fill="rgb(253,145,31)"/><text x="392.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="389" y="484" width="3" height="15" fill="rgb(217,116,6)"/><text x="392.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="389" y="500" width="3" height="15" fill="rgb(223,39,30)"/><text x="392.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="389" y="516" width="3" height="15" fill="rgb(253,117,42)"/><text x="392.00" y="526.50"></text></g><g><title>0x7f4dd98bfd50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="442" y="372" width="2" height="15" fill="rgb(235,50,0)"/><text x="445.00" y="382.50"></text></g><g><title>0x7f4dd98bfdb3 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="444" y="372" width="3" height="15" fill="rgb(224,5,10)"/><text x="447.00" y="382.50"></text></g><g><title>0x7f4dd9a1ee7a (libm-2.29.so) (2 samples, 0.47%)</title><rect x="447" y="372" width="6" height="15" fill="rgb(250,166,42)"/><text x="450.00" y="382.50"></text></g><g><title>0x7f4dd9a1ee96 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="453" y="372" width="2" height="15" fill="rgb(226,85,46)"/><text x="456.00" y="382.50"></text></g><g><title>0x7f4dd9a1ee9e (libm-2.29.so) (3 samples, 0.70%)</title><rect x="455" y="372" width="9" height="15" fill="rgb(206,7,19)"/><text x="458.00" y="382.50"></text></g><g><title>0x7f4dd9a1eea2 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="464" y="372" width="3" height="15" fill="rgb(253,38,21)"/><text x="467.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 31.46%)</title><rect x="101" y="340" width="371" height="15" fill="rgb(223,0,0)"/><text x="104.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute ..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 6.81%)</title><rect x="392" y="356" width="80" height="15" fill="rgb(209,67,33)"/><text x="395.00" y="366.50">onnxrunti..</text></g><g><title>0x7f4dd9a1eea6 (libm-2.29.so) (2 samples, 0.47%)</title><rect x="467" y="372" width="5" height="15" fill="rgb(217,162,41)"/><text x="470.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 33.80%)</title><rect x="87" y="260" width="399" height="15" fill="rgb(212,161,46)"/><text x="90.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 33.80%)</title><rect x="87" y="276" width="399" height="15" fill="rgb(208,135,40)"/><text x="90.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 33.33%)</title><rect x="93" y="292" width="393" height="15" fill="rgb(236,211,54)"/><text x="96.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 33.33%)</title><rect x="93" y="308" width="393" height="15" fill="rgb(215,20,15)"/><text x="96.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/cap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 33.33%)</title><rect x="93" y="324" width="393" height="15" fill="rgb(205,113,3)"/><text x="96.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.17%)</title><rect x="472" y="340" width="14" height="15" fill="rgb(206,169,33)"/><text x="475.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.17%)</title><rect x="472" y="356" width="14" height="15" fill="rgb(211,61,27)"/><text x="475.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="483" y="372" width="3" height="15" fill="rgb(246,57,47)"/><text x="486.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="483" y="388" width="3" height="15" fill="rgb(247,64,16)"/><text x="486.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="483" y="404" width="3" height="15" fill="rgb(214,70,39)"/><text x="486.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="483" y="420" width="3" height="15" fill="rgb(248,179,11)"/><text x="486.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="483" y="436" width="3" height="15" fill="rgb(229,121,24)"/><text x="486.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="483" y="452" width="3" height="15" fill="rgb(220,207,2)"/><text x="486.00" y="462.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="486" y="260" width="3" height="15" fill="rgb(235,209,36)"/><text x="489.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="486" y="276" width="3" height="15" fill="rgb(216,175,37)"/><text x="489.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="486" y="292" width="3" height="15" fill="rgb(245,71,2)"/><text x="489.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="486" y="308" width="3" height="15" fill="rgb(237,139,32)"/><text x="489.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="486" y="324" width="3" height="15" fill="rgb(245,151,44)"/><text x="489.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.23%)</title><rect x="489" y="308" width="2" height="15" fill="rgb(207,59,1)"/><text x="492.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.23%)</title><rect x="489" y="324" width="2" height="15" fill="rgb(230,40,6)"/><text x="492.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="489" y="340" width="2" height="15" fill="rgb(211,227,46)"/><text x="492.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.47%)</title><rect x="489" y="276" width="5" height="15" fill="rgb(222,202,20)"/><text x="492.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.47%)</title><rect x="489" y="292" width="5" height="15" fill="rgb(252,138,19)"/><text x="492.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="491" y="308" width="3" height="15" fill="rgb(210,221,42)"/><text x="494.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="491" y="324" width="3" height="15" fill="rgb(209,37,5)"/><text x="494.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.23%)</title><rect x="491" y="340" width="3" height="15" fill="rgb(220,224,27)"/><text x="494.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="491" y="356" width="3" height="15" fill="rgb(228,2,20)"/><text x="494.00" y="366.50"></text></g><g><title>0x7f4dd98a0d8a (libc-2.29.so) (1 samples, 0.23%)</title><rect x="491" y="372" width="3" height="15" fill="rgb(244,133,14)"/><text x="494.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (148 samples, 34.74%)</title><rect x="87" y="244" width="410" height="15" fill="rgb(217,40,12)"/><text x="90.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="489" y="260" width="8" height="15" fill="rgb(228,151,9)"/><text x="492.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="494" y="276" width="3" height="15" fill="rgb(215,119,38)"/><text x="497.00" y="286.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="497" y="244" width="3" height="15" fill="rgb(237,4,53)"/><text x="500.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="497" y="260" width="3" height="15" fill="rgb(250,163,52)"/><text x="500.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="497" y="276" width="3" height="15" fill="rgb(205,126,47)"/><text x="500.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (155 samples, 36.38%)</title><rect x="73" y="68" width="430" height="15" fill="rgb(220,88,28)"/><text x="76.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solve..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (155 samples, 36.38%)</title><rect x="73" y="84" width="430" height="15" fill="rgb(247,179,54)"/><text x="76.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (155 samples, 36.38%)</title><rect x="73" y="100" width="430" height="15" fill="rgb(235,84,32)"/><text x="76.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (154 samples, 36.15%)</title><rect x="76" y="116" width="427" height="15" fill="rgb(222,14,20)"/><text x="79.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (154 samples, 36.15%)</title><rect x="76" y="132" width="427" height="15" fill="rgb(216,22,52)"/><text x="79.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (154 samples, 36.15%)</title><rect x="76" y="148" width="427" height="15" fill="rgb(228,226,43)"/><text x="79.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (154 samples, 36.15%)</title><rect x="76" y="164" width="427" height="15" fill="rgb(217,216,33)"/><text x="79.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (153 samples, 35.92%)</title><rect x="79" y="180" width="424" height="15" fill="rgb(251,147,1)"/><text x="82.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (153 samples, 35.92%)</title><rect x="79" y="196" width="424" height="15" fill="rgb(254,178,33)"/><text x="82.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (150 samples, 35.21%)</title><rect x="87" y="212" width="416" height="15" fill="rgb(248,31,19)"/><text x="90.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onn..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (150 samples, 35.21%)</title><rect x="87" y="228" width="416" height="15" fill="rgb(229,114,46)"/><text x="90.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyt..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="500" y="244" width="3" height="15" fill="rgb(254,28,12)"/><text x="503.00" y="254.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="544" y="340" width="3" height="15" fill="rgb(225,160,17)"/><text x="547.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (5 samples, 1.17%)</title><rect x="536" y="244" width="14" height="15" fill="rgb(216,9,22)"/><text x="539.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.94%)</title><rect x="539" y="260" width="11" height="15" fill="rgb(242,141,42)"/><text x="542.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 0.94%)</title><rect x="539" y="276" width="11" height="15" fill="rgb(237,30,47)"/><text x="542.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.70%)</title><rect x="541" y="292" width="9" height="15" fill="rgb(234,98,24)"/><text x="544.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.47%)</title><rect x="544" y="308" width="6" height="15" fill="rgb(207,36,49)"/><text x="547.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.47%)</title><rect x="544" y="324" width="6" height="15" fill="rgb(248,46,33)"/><text x="547.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="547" y="340" width="3" height="15" fill="rgb(216,208,28)"/><text x="550.00" y="350.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.23%)</title><rect x="550" y="244" width="2" height="15" fill="rgb(211,229,24)"/><text x="553.00" y="254.50"></text></g><g><title>0x7f4dd98c0105 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="561" y="340" width="2" height="15" fill="rgb(212,92,5)"/><text x="564.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 3.05%)</title><rect x="558" y="276" width="36" height="15" fill="rgb(230,146,33)"/><text x="561.00" y="286.50">arr..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (13 samples, 3.05%)</title><rect x="558" y="292" width="36" height="15" fill="rgb(226,43,30)"/><text x="561.00" y="302.50">arr..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (12 samples, 2.82%)</title><rect x="561" y="308" width="33" height="15" fill="rgb(240,110,38)"/><text x="564.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (12 samples, 2.82%)</title><rect x="561" y="324" width="33" height="15" fill="rgb(241,75,30)"/><text x="564.00" y="334.50">cb..</text></g><g><title>gemm (cblasfuncs.c) (11 samples, 2.58%)</title><rect x="563" y="340" width="31" height="15" fill="rgb(244,134,9)"/><text x="566.00" y="350.50">ge..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.58%)</title><rect x="563" y="356" width="31" height="15" fill="rgb(252,174,6)"/><text x="566.00" y="366.50">cb..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.58%)</title><rect x="563" y="372" width="31" height="15" fill="rgb(225,12,32)"/><text x="566.00" y="382.50">sg..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.58%)</title><rect x="563" y="388" width="31" height="15" fill="rgb(234,127,14)"/><text x="566.00" y="398.50">sg..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="594" y="276" width="3" height="15" fill="rgb(234,162,11)"/><text x="597.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (53 samples, 12.44%)</title><rect x="552" y="244" width="147" height="15" fill="rgb(234,39,37)"/><text x="555.00" y="254.50">numpy_dot_inplace ..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (52 samples, 12.21%)</title><rect x="555" y="260" width="144" height="15" fill="rgb(219,96,0)"/><text x="558.00" y="270.50">dot (&lt;__array_func..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 8.69%)</title><rect x="597" y="276" width="102" height="15" fill="rgb(252,36,5)"/><text x="600.00" y="286.50">sgemm_kernel..</text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="702" y="276" width="3" height="15" fill="rgb(247,215,49)"/><text x="705.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="705" y="308" width="3" height="15" fill="rgb(222,36,53)"/><text x="708.00" y="318.50"></text></g><g><title>0x7f4dd98bfd50 (libc-2.29.so) (3 samples, 0.70%)</title><rect x="710" y="356" width="9" height="15" fill="rgb(244,197,15)"/><text x="713.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.41%)</title><rect x="705" y="292" width="16" height="15" fill="rgb(233,32,12)"/><text x="708.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.17%)</title><rect x="708" y="308" width="13" height="15" fill="rgb(244,194,38)"/><text x="711.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.17%)</title><rect x="708" y="324" width="13" height="15" fill="rgb(216,226,10)"/><text x="711.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.17%)</title><rect x="708" y="340" width="13" height="15" fill="rgb(241,212,23)"/><text x="711.00" y="350.50"></text></g><g><title>0x7f4dd98bfd97 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="719" y="356" width="2" height="15" fill="rgb(243,214,37)"/><text x="722.00" y="366.50"></text></g><g><title>0x7f4dc4b67890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.47%)</title><rect x="721" y="340" width="6" height="15" fill="rgb(216,196,4)"/><text x="724.00" y="350.50"></text></g><g><title>0x7f4dd9a1ee00 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="735" y="356" width="3" height="15" fill="rgb(218,71,47)"/><text x="738.00" y="366.50"></text></g><g><title>0x7f4dd9a1ee0e (libm-2.29.so) (2 samples, 0.47%)</title><rect x="738" y="356" width="6" height="15" fill="rgb(205,176,12)"/><text x="741.00" y="366.50"></text></g><g><title>0x7f4dd9a1ee4e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="744" y="356" width="2" height="15" fill="rgb(220,143,52)"/><text x="747.00" y="366.50"></text></g><g><title>0x7f4dc4ba9214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.58%)</title><rect x="721" y="324" width="31" height="15" fill="rgb(209,191,30)"/><text x="724.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (9 samples, 2.11%)</title><rect x="727" y="340" width="25" height="15" fill="rgb(231,101,30)"/><text x="730.00" y="350.50">e..</text></g><g><title>0x7f4dd9a1eea6 (libm-2.29.so) (2 samples, 0.47%)</title><rect x="746" y="356" width="6" height="15" fill="rgb(219,20,14)"/><text x="749.00" y="366.50"></text></g><g><title>0x7f4dc4ba9224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="752" y="324" width="3" height="15" fill="rgb(243,124,50)"/><text x="755.00" y="334.50"></text></g><g><title>0x7f4dc4b8733d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.99%)</title><rect x="721" y="308" width="47" height="15" fill="rgb(232,14,48)"/><text x="724.00" y="318.50">0x7f..</text></g><g><title>0x7f4dc4ba9228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.17%)</title><rect x="755" y="324" width="13" height="15" fill="rgb(205,132,22)"/><text x="758.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (24 samples, 5.63%)</title><rect x="705" y="276" width="66" height="15" fill="rgb(218,202,6)"/><text x="708.00" y="286.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (18 samples, 4.23%)</title><rect x="721" y="292" width="50" height="15" fill="rgb(222,167,10)"/><text x="724.00" y="302.50">trivi..</text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="768" y="308" width="3" height="15" fill="rgb(252,77,46)"/><text x="771.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (90 samples, 21.13%)</title><rect x="525" y="228" width="249" height="15" fill="rgb(254,208,3)"/><text x="528.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (27 samples, 6.34%)</title><rect x="699" y="244" width="75" height="15" fill="rgb(223,56,26)"/><text x="702.00" y="254.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (27 samples, 6.34%)</title><rect x="699" y="260" width="75" height="15" fill="rgb(206,199,39)"/><text x="702.00" y="270.50">PyUFunc_..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.23%)</title><rect x="771" y="276" width="3" height="15" fill="rgb(217,34,7)"/><text x="774.00" y="286.50"></text></g><g><title>0x7f4dd8ac2c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="771" y="292" width="3" height="15" fill="rgb(243,224,51)"/><text x="774.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="777" y="388" width="3" height="15" fill="rgb(232,4,32)"/><text x="780.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="777" y="404" width="3" height="15" fill="rgb(250,163,7)"/><text x="780.00" y="414.50"></text></g><g><title>0x7f4dd98a0b12 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="777" y="420" width="3" height="15" fill="rgb(247,134,1)"/><text x="780.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.23%)</title><rect x="780" y="388" width="2" height="15" fill="rgb(223,181,21)"/><text x="783.00" y="398.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="780" y="404" width="2" height="15" fill="rgb(242,146,22)"/><text x="783.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.94%)</title><rect x="774" y="372" width="11" height="15" fill="rgb(237,27,9)"/><text x="777.00" y="382.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.23%)</title><rect x="782" y="388" width="3" height="15" fill="rgb(207,169,8)"/><text x="785.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.23%)</title><rect x="785" y="372" width="3" height="15" fill="rgb(251,89,44)"/><text x="788.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.23%)</title><rect x="785" y="388" width="3" height="15" fill="rgb(229,51,24)"/><text x="788.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="785" y="404" width="3" height="15" fill="rgb(223,127,52)"/><text x="788.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="785" y="420" width="3" height="15" fill="rgb(237,53,30)"/><text x="788.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="785" y="436" width="3" height="15" fill="rgb(236,115,26)"/><text x="788.00" y="446.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.47%)</title><rect x="793" y="388" width="6" height="15" fill="rgb(221,168,46)"/><text x="796.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.47%)</title><rect x="793" y="404" width="6" height="15" fill="rgb(209,50,47)"/><text x="796.00" y="414.50"></text></g><g><title>array_sum (methods.c) (11 samples, 2.58%)</title><rect x="774" y="260" width="30" height="15" fill="rgb(249,201,37)"/><text x="777.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 2.58%)</title><rect x="774" y="276" width="30" height="15" fill="rgb(232,181,23)"/><text x="777.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 2.58%)</title><rect x="774" y="292" width="30" height="15" fill="rgb(240,33,37)"/><text x="777.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 2.58%)</title><rect x="774" y="308" width="30" height="15" fill="rgb(207,94,0)"/><text x="777.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.58%)</title><rect x="774" y="324" width="30" height="15" fill="rgb(223,113,30)"/><text x="777.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 2.58%)</title><rect x="774" y="340" width="30" height="15" fill="rgb(236,153,24)"/><text x="777.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 2.58%)</title><rect x="774" y="356" width="30" height="15" fill="rgb(216,125,18)"/><text x="777.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 1.41%)</title><rect x="788" y="372" width="16" height="15" fill="rgb(232,215,45)"/><text x="791.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.47%)</title><rect x="799" y="388" width="5" height="15" fill="rgb(217,179,50)"/><text x="802.00" y="398.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="804" y="292" width="3" height="15" fill="rgb(232,114,53)"/><text x="807.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="807" y="292" width="3" height="15" fill="rgb(238,105,2)"/><text x="810.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="807" y="308" width="3" height="15" fill="rgb(215,223,14)"/><text x="810.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="810" y="308" width="3" height="15" fill="rgb(251,80,53)"/><text x="813.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="810" y="324" width="3" height="15" fill="rgb(229,56,44)"/><text x="813.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="810" y="340" width="3" height="15" fill="rgb(237,111,25)"/><text x="813.00" y="350.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.23%)</title><rect x="813" y="324" width="3" height="15" fill="rgb(223,200,45)"/><text x="816.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="813" y="340" width="3" height="15" fill="rgb(246,178,29)"/><text x="816.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="813" y="356" width="3" height="15" fill="rgb(237,23,14)"/><text x="816.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.23%)</title><rect x="813" y="372" width="3" height="15" fill="rgb(246,190,17)"/><text x="816.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.47%)</title><rect x="816" y="324" width="5" height="15" fill="rgb(219,138,12)"/><text x="819.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.23%)</title><rect x="818" y="340" width="3" height="15" fill="rgb(235,184,21)"/><text x="821.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.64%)</title><rect x="810" y="292" width="19" height="15" fill="rgb(227,37,40)"/><text x="813.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.41%)</title><rect x="813" y="308" width="16" height="15" fill="rgb(241,211,29)"/><text x="816.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.70%)</title><rect x="821" y="324" width="8" height="15" fill="rgb(230,141,43)"/><text x="824.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.70%)</title><rect x="821" y="340" width="8" height="15" fill="rgb(217,136,0)"/><text x="824.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.70%)</title><rect x="821" y="356" width="8" height="15" fill="rgb(217,196,31)"/><text x="824.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.47%)</title><rect x="824" y="372" width="5" height="15" fill="rgb(208,173,54)"/><text x="827.00" y="382.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (119 samples, 27.93%)</title><rect x="503" y="132" width="329" height="15" fill="rgb(220,28,37)"/><text x="506.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (119 samples, 27.93%)</title><rect x="503" y="148" width="329" height="15" fill="rgb(237,186,42)"/><text x="506.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (119 samples, 27.93%)</title><rect x="503" y="164" width="329" height="15" fill="rgb(230,167,45)"/><text x="506.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (117 samples, 27.46%)</title><rect x="508" y="180" width="324" height="15" fill="rgb(205,144,50)"/><text x="511.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (114 samples, 26.76%)</title><rect x="516" y="196" width="316" height="15" fill="rgb(251,107,48)"/><text x="519.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (111 samples, 26.06%)</title><rect x="525" y="212" width="307" height="15" fill="rgb(227,36,10)"/><text x="528.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (21 samples, 4.93%)</title><rect x="774" y="228" width="58" height="15" fill="rgb(253,88,24)"/><text x="777.00" y="238.50">_run (..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (21 samples, 4.93%)</title><rect x="774" y="244" width="58" height="15" fill="rgb(241,90,51)"/><text x="777.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.35%)</title><rect x="804" y="260" width="28" height="15" fill="rgb(227,193,37)"/><text x="807.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.35%)</title><rect x="804" y="276" width="28" height="15" fill="rgb(226,126,42)"/><text x="807.00" y="286.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="829" y="292" width="3" height="15" fill="rgb(233,135,1)"/><text x="832.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.23%)</title><rect x="829" y="308" width="3" height="15" fill="rgb(211,174,6)"/><text x="832.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (120 samples, 28.17%)</title><rect x="503" y="100" width="332" height="15" fill="rgb(220,9,38)"/><text x="506.00" y="110.50">profile (bench_LogisticRegression_liblinear_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (120 samples, 28.17%)</title><rect x="503" y="116" width="332" height="15" fill="rgb(208,106,6)"/><text x="506.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.23%)</title><rect x="832" y="132" width="3" height="15" fill="rgb(223,71,41)"/><text x="835.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (121 samples, 28.40%)</title><rect x="503" y="68" width="335" height="15" fill="rgb(243,125,6)"/><text x="506.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblin..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (121 samples, 28.40%)</title><rect x="503" y="84" width="335" height="15" fill="rgb(227,24,8)"/><text x="506.00" y="94.50">setup_profile (bench_LogisticRegression_libli..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="835" y="100" width="3" height="15" fill="rgb(232,58,6)"/><text x="838.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="835" y="116" width="3" height="15" fill="rgb(239,193,45)"/><text x="838.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="835" y="132" width="3" height="15" fill="rgb(228,201,52)"/><text x="838.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.23%)</title><rect x="835" y="148" width="3" height="15" fill="rgb(235,88,37)"/><text x="838.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.23%)</title><rect x="835" y="164" width="3" height="15" fill="rgb(249,103,49)"/><text x="838.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.23%)</title><rect x="835" y="180" width="3" height="15" fill="rgb(227,61,53)"/><text x="838.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.23%)</title><rect x="835" y="196" width="3" height="15" fill="rgb(227,213,21)"/><text x="838.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="212" width="3" height="15" fill="rgb(254,99,23)"/><text x="838.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="228" width="3" height="15" fill="rgb(224,43,6)"/><text x="838.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="244" width="3" height="15" fill="rgb(235,45,37)"/><text x="838.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="835" y="260" width="3" height="15" fill="rgb(222,176,22)"/><text x="838.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="276" width="3" height="15" fill="rgb(225,78,30)"/><text x="838.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.23%)</title><rect x="835" y="292" width="3" height="15" fill="rgb(223,81,15)"/><text x="838.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="308" width="3" height="15" fill="rgb(220,115,22)"/><text x="838.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="324" width="3" height="15" fill="rgb(231,167,18)"/><text x="838.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="340" width="3" height="15" fill="rgb(220,71,14)"/><text x="838.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="835" y="356" width="3" height="15" fill="rgb(215,76,21)"/><text x="838.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="372" width="3" height="15" fill="rgb(241,57,10)"/><text x="838.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.23%)</title><rect x="835" y="388" width="3" height="15" fill="rgb(217,93,28)"/><text x="838.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="404" width="3" height="15" fill="rgb(220,93,15)"/><text x="838.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="420" width="3" height="15" fill="rgb(252,6,40)"/><text x="838.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="436" width="3" height="15" fill="rgb(251,63,8)"/><text x="838.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="835" y="452" width="3" height="15" fill="rgb(234,193,17)"/><text x="838.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="835" y="468" width="3" height="15" fill="rgb(248,216,45)"/><text x="838.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.23%)</title><rect x="835" y="484" width="3" height="15" fill="rgb(240,67,36)"/><text x="838.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.23%)</title><rect x="835" y="500" width="3" height="15" fill="rgb(244,59,53)"/><text x="838.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.23%)</title><rect x="835" y="516" width="3" height="15" fill="rgb(210,196,4)"/><text x="838.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.23%)</title><rect x="835" y="532" width="3" height="15" fill="rgb(244,17,23)"/><text x="838.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.23%)</title><rect x="835" y="548" width="3" height="15" fill="rgb(252,151,49)"/><text x="838.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.23%)</title><rect x="835" y="564" width="3" height="15" fill="rgb(239,101,39)"/><text x="838.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="580" width="3" height="15" fill="rgb(221,107,9)"/><text x="838.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="596" width="3" height="15" fill="rgb(229,226,1)"/><text x="838.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="612" width="3" height="15" fill="rgb(206,18,40)"/><text x="838.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="628" width="3" height="15" fill="rgb(208,105,16)"/><text x="838.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="644" width="3" height="15" fill="rgb(233,133,12)"/><text x="838.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="660" width="3" height="15" fill="rgb(223,43,0)"/><text x="838.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="676" width="3" height="15" fill="rgb(234,38,40)"/><text x="838.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="692" width="3" height="15" fill="rgb(251,229,13)"/><text x="838.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="708" width="3" height="15" fill="rgb(209,158,11)"/><text x="838.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.23%)</title><rect x="835" y="724" width="3" height="15" fill="rgb(226,202,19)"/><text x="838.00" y="734.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.23%)</title><rect x="835" y="740" width="3" height="15" fill="rgb(206,97,2)"/><text x="838.00" y="750.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.23%)</title><rect x="835" y="756" width="3" height="15" fill="rgb(222,18,28)"/><text x="838.00" y="766.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.23%)</title><rect x="835" y="772" width="3" height="15" fill="rgb(244,170,8)"/><text x="838.00" y="782.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.23%)</title><rect x="852" y="180" width="2" height="15" fill="rgb(222,104,26)"/><text x="855.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.23%)</title><rect x="852" y="196" width="2" height="15" fill="rgb(240,162,28)"/><text x="855.00" y="206.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.23%)</title><rect x="860" y="308" width="3" height="15" fill="rgb(234,206,24)"/><text x="863.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.47%)</title><rect x="860" y="292" width="5" height="15" fill="rgb(232,164,52)"/><text x="863.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.23%)</title><rect x="863" y="308" width="2" height="15" fill="rgb(244,197,11)"/><text x="866.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.23%)</title><rect x="865" y="292" width="3" height="15" fill="rgb(239,179,51)"/><text x="868.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (5 samples, 1.17%)</title><rect x="871" y="308" width="14" height="15" fill="rgb(242,140,9)"/><text x="874.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (2 samples, 0.47%)</title><rect x="879" y="324" width="6" height="15" fill="rgb(207,184,5)"/><text x="882.00" y="334.50"></text></g><g><title>array_sum (methods.c) (12 samples, 2.82%)</title><rect x="854" y="180" width="34" height="15" fill="rgb(230,175,43)"/><text x="857.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (12 samples, 2.82%)</title><rect x="854" y="196" width="34" height="15" fill="rgb(243,0,10)"/><text x="857.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 2.35%)</title><rect x="860" y="212" width="28" height="15" fill="rgb(248,201,48)"/><text x="863.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 2.35%)</title><rect x="860" y="228" width="28" height="15" fill="rgb(207,106,3)"/><text x="863.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 2.35%)</title><rect x="860" y="244" width="28" height="15" fill="rgb(237,106,6)"/><text x="863.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 2.35%)</title><rect x="860" y="260" width="28" height="15" fill="rgb(246,186,44)"/><text x="863.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 2.35%)</title><rect x="860" y="276" width="28" height="15" fill="rgb(236,114,5)"/><text x="863.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 1.64%)</title><rect x="868" y="292" width="20" height="15" fill="rgb(213,85,10)"/><text x="871.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.23%)</title><rect x="885" y="308" width="3" height="15" fill="rgb(251,185,19)"/><text x="888.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="893" y="276" width="3" height="15" fill="rgb(222,175,6)"/><text x="896.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="893" y="292" width="3" height="15" fill="rgb(243,27,21)"/><text x="896.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.70%)</title><rect x="893" y="244" width="8" height="15" fill="rgb(252,34,45)"/><text x="896.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.70%)</title><rect x="893" y="260" width="8" height="15" fill="rgb(238,84,52)"/><text x="896.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.47%)</title><rect x="896" y="276" width="5" height="15" fill="rgb(227,129,30)"/><text x="899.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.47%)</title><rect x="896" y="292" width="5" height="15" fill="rgb(232,108,14)"/><text x="899.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.47%)</title><rect x="896" y="308" width="5" height="15" fill="rgb(253,35,8)"/><text x="899.00" y="318.50"></text></g><g><title>array_add (number.c) (4 samples, 0.94%)</title><rect x="893" y="196" width="11" height="15" fill="rgb(239,22,25)"/><text x="896.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.94%)</title><rect x="893" y="212" width="11" height="15" fill="rgb(205,75,9)"/><text x="896.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.94%)</title><rect x="893" y="228" width="11" height="15" fill="rgb(236,55,8)"/><text x="896.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.23%)</title><rect x="901" y="244" width="3" height="15" fill="rgb(234,117,46)"/><text x="904.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="904" y="196" width="3" height="15" fill="rgb(238,219,40)"/><text x="907.00" y="206.50"></text></g><g><title>0x7f4dd997d151 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="918" y="212" width="3" height="15" fill="rgb(244,95,29)"/><text x="921.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.23%)</title><rect x="921" y="212" width="3" height="15" fill="rgb(215,115,17)"/><text x="924.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.23%)</title><rect x="924" y="212" width="2" height="15" fill="rgb(211,166,21)"/><text x="927.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.23%)</title><rect x="926" y="212" width="3" height="15" fill="rgb(232,72,51)"/><text x="929.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (10 samples, 2.35%)</title><rect x="907" y="196" width="28" height="15" fill="rgb(237,68,17)"/><text x="910.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.47%)</title><rect x="929" y="212" width="6" height="15" fill="rgb(239,96,3)"/><text x="932.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.47%)</title><rect x="929" y="228" width="6" height="15" fill="rgb(245,220,12)"/><text x="932.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 1.17%)</title><rect x="935" y="196" width="14" height="15" fill="rgb(252,79,35)"/><text x="938.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.70%)</title><rect x="940" y="212" width="9" height="15" fill="rgb(246,29,10)"/><text x="943.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="951" y="212" width="3" height="15" fill="rgb(220,96,20)"/><text x="954.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 3.99%)</title><rect x="954" y="212" width="47" height="15" fill="rgb(245,150,38)"/><text x="957.00" y="222.50">dgem..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.23%)</title><rect x="1001" y="212" width="3" height="15" fill="rgb(227,171,12)"/><text x="1004.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.23%)</title><rect x="1004" y="228" width="3" height="15" fill="rgb(243,56,50)"/><text x="1007.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.23%)</title><rect x="1004" y="244" width="3" height="15" fill="rgb(235,75,14)"/><text x="1007.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.23%)</title><rect x="1004" y="260" width="3" height="15" fill="rgb(253,187,47)"/><text x="1007.00" y="270.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="1009" y="308" width="3" height="15" fill="rgb(240,50,20)"/><text x="1012.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (17 samples, 3.99%)</title><rect x="1009" y="260" width="48" height="15" fill="rgb(210,115,5)"/><text x="1012.00" y="270.50">DOUB..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 3.99%)</title><rect x="1009" y="276" width="48" height="15" fill="rgb(233,156,53)"/><text x="1012.00" y="286.50">cbla..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 3.99%)</title><rect x="1009" y="292" width="48" height="15" fill="rgb(218,17,29)"/><text x="1012.00" y="302.50">dgem..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 3.76%)</title><rect x="1012" y="308" width="45" height="15" fill="rgb(245,176,38)"/><text x="1015.00" y="318.50">dgem..</text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="1057" y="324" width="2" height="15" fill="rgb(238,216,4)"/><text x="1060.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1057" y="340" width="2" height="15" fill="rgb(238,35,39)"/><text x="1060.00" y="350.50"></text></g><g><title>0x7f4dd9857a19 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1057" y="356" width="2" height="15" fill="rgb(242,208,23)"/><text x="1060.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.23%)</title><rect x="1057" y="372" width="2" height="15" fill="rgb(221,86,52)"/><text x="1060.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (11 samples, 2.58%)</title><rect x="1057" y="292" width="30" height="15" fill="rgb(226,35,31)"/><text x="1060.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (11 samples, 2.58%)</title><rect x="1057" y="308" width="30" height="15" fill="rgb(227,94,0)"/><text x="1060.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (10 samples, 2.35%)</title><rect x="1059" y="324" width="28" height="15" fill="rgb(206,182,33)"/><text x="1062.00" y="334.50">_..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (12 samples, 2.82%)</title><rect x="1057" y="260" width="33" height="15" fill="rgb(225,120,49)"/><text x="1060.00" y="270.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (12 samples, 2.82%)</title><rect x="1057" y="276" width="33" height="15" fill="rgb(223,170,17)"/><text x="1060.00" y="286.50">np..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1087" y="292" width="3" height="15" fill="rgb(216,218,43)"/><text x="1090.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1090" y="260" width="3" height="15" fill="rgb(227,129,54)"/><text x="1093.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.23%)</title><rect x="1090" y="276" width="3" height="15" fill="rgb(227,169,25)"/><text x="1093.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (75 samples, 17.61%)</title><rect x="888" y="180" width="207" height="15" fill="rgb(249,72,53)"/><text x="891.00" y="190.50">decision_function (sklearn/..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (53 samples, 12.44%)</title><rect x="949" y="196" width="146" height="15" fill="rgb(234,44,24)"/><text x="952.00" y="206.50">safe_sparse_dot (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (33 samples, 7.75%)</title><rect x="1004" y="212" width="91" height="15" fill="rgb(219,179,29)"/><text x="1007.00" y="222.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (32 samples, 7.51%)</title><rect x="1007" y="228" width="88" height="15" fill="rgb(242,48,18)"/><text x="1010.00" y="238.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (32 samples, 7.51%)</title><rect x="1007" y="244" width="88" height="15" fill="rgb(218,101,15)"/><text x="1010.00" y="254.50">PyUFunc_Ge..</text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.23%)</title><rect x="1093" y="260" width="2" height="15" fill="rgb(220,113,32)"/><text x="1096.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.23%)</title><rect x="1093" y="276" width="2" height="15" fill="rgb(205,63,5)"/><text x="1096.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.23%)</title><rect x="1095" y="196" width="3" height="15" fill="rgb(206,107,8)"/><text x="1098.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.23%)</title><rect x="1095" y="212" width="3" height="15" fill="rgb(222,216,16)"/><text x="1098.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.23%)</title><rect x="1095" y="228" width="3" height="15" fill="rgb(236,135,34)"/><text x="1098.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="1098" y="228" width="3" height="15" fill="rgb(220,55,33)"/><text x="1101.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1098" y="244" width="3" height="15" fill="rgb(254,213,38)"/><text x="1101.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1098" y="260" width="3" height="15" fill="rgb(206,138,43)"/><text x="1101.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (6 samples, 1.41%)</title><rect x="1101" y="244" width="16" height="15" fill="rgb(207,204,32)"/><text x="1104.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (6 samples, 1.41%)</title><rect x="1101" y="260" width="16" height="15" fill="rgb(225,193,4)"/><text x="1104.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (6 samples, 1.41%)</title><rect x="1101" y="276" width="16" height="15" fill="rgb(238,103,25)"/><text x="1104.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 1.41%)</title><rect x="1101" y="292" width="16" height="15" fill="rgb(237,3,11)"/><text x="1104.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1117" y="244" width="3" height="15" fill="rgb(210,226,36)"/><text x="1120.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1117" y="260" width="3" height="15" fill="rgb(208,13,46)"/><text x="1120.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1117" y="276" width="3" height="15" fill="rgb(252,120,26)"/><text x="1120.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.88%)</title><rect x="1101" y="228" width="22" height="15" fill="rgb(231,65,44)"/><text x="1104.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.23%)</title><rect x="1120" y="244" width="3" height="15" fill="rgb(245,54,46)"/><text x="1123.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="1120" y="260" width="3" height="15" fill="rgb(211,44,44)"/><text x="1123.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="1120" y="276" width="3" height="15" fill="rgb(228,164,48)"/><text x="1123.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="1120" y="292" width="3" height="15" fill="rgb(218,173,51)"/><text x="1123.00" y="302.50"></text></g><g><title>0x7f4dc4cb29f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1123" y="276" width="3" height="15" fill="rgb(234,138,9)"/><text x="1126.00" y="286.50"></text></g><g><title>0x7f4dd9a71ba0 (libm-2.29.so) (3 samples, 0.70%)</title><rect x="1137" y="292" width="8" height="15" fill="rgb(237,187,52)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7f4dc4ba9265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.11%)</title><rect x="1123" y="260" width="25" height="15" fill="rgb(244,142,41)"/><text x="1126.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (8 samples, 1.88%)</title><rect x="1126" y="276" width="22" height="15" fill="rgb(206,22,47)"/><text x="1129.00" y="286.50">e..</text></g><g><title>0x7f4dd9a71c2e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1145" y="292" width="3" height="15" fill="rgb(226,73,13)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7f4dc4b889dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (19 samples, 4.46%)</title><rect x="1123" y="244" width="53" height="15" fill="rgb(246,141,28)"/><text x="1126.00" y="254.50">0x7f4..</text></g><g><title>0x7f4dc4ba9279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.35%)</title><rect x="1148" y="260" width="28" height="15" fill="rgb(209,218,44)"/><text x="1151.00" y="270.50">0..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (121 samples, 28.40%)</title><rect x="843" y="164" width="335" height="15" fill="rgb(254,78,15)"/><text x="846.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (30 samples, 7.04%)</title><rect x="1095" y="180" width="83" height="15" fill="rgb(211,227,47)"/><text x="1098.00" y="190.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (29 samples, 6.81%)</title><rect x="1098" y="196" width="80" height="15" fill="rgb(217,139,8)"/><text x="1101.00" y="206.50">PyUFunc_G..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (29 samples, 6.81%)</title><rect x="1098" y="212" width="80" height="15" fill="rgb(248,56,25)"/><text x="1101.00" y="222.50">execute_l..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (20 samples, 4.69%)</title><rect x="1123" y="228" width="55" height="15" fill="rgb(205,67,7)"/><text x="1126.00" y="238.50">trivi..</text></g><g><title>0x7f4dc4b889e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(238,198,35)"/><text x="1179.00" y="254.50"></text></g><g><title>all (426 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,154,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (426 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(241,156,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (127 samples, 29.81%)</title><rect x="838" y="68" width="352" height="15" fill="rgb(208,4,34)"/><text x="841.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (127 samples, 29.81%)</title><rect x="838" y="84" width="352" height="15" fill="rgb(222,214,19)"/><text x="841.00" y="94.50">setup_profile (bench_LogisticRegression_libline..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py) (127 samples, 29.81%)</title><rect x="838" y="100" width="352" height="15" fill="rgb(221,60,22)"/><text x="841.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 29.81%)</title><rect x="838" y="116" width="352" height="15" fill="rgb(252,186,54)"/><text x="841.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 29.81%)</title><rect x="838" y="132" width="352" height="15" fill="rgb(241,27,21)"/><text x="841.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (127 samples, 29.81%)</title><rect x="838" y="148" width="352" height="15" fill="rgb(249,17,53)"/><text x="841.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 0.94%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(207,92,52)"/><text x="1181.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.70%)</title><rect x="1181" y="180" width="9" height="15" fill="rgb(240,13,43)"/><text x="1184.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.23%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(215,102,54)"/><text x="1190.00" y="206.50"></text></g></g></svg>