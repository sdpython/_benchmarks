<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2134" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2117.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2117.00"> </text><g id="frames"><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(249,119,35)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(218,145,13)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(247,130,47)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(231,94,37)"/><text x="13.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(215,182,29)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(220,89,18)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(228,171,24)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(219,111,50)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(206,214,48)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(246,218,33)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(249,68,9)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(242,176,48)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(211,96,37)"/><text x="15.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(245,143,46)"/><text x="15.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="12" y="1028" width="2" height="15" fill="rgb(251,35,9)"/><text x="15.00" y="1038.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(216,209,27)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(227,192,54)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(215,144,49)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(208,2,24)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(209,85,45)"/><text x="17.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.20%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(252,184,19)"/><text x="17.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.20%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(215,11,11)"/><text x="17.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(238,55,41)"/><text x="17.00" y="1054.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="14" y="868" width="5" height="15" fill="rgb(215,137,52)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="14" y="884" width="5" height="15" fill="rgb(252,97,46)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="14" y="900" width="5" height="15" fill="rgb(243,173,1)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(241,27,44)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(206,14,3)"/><text x="19.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(213,28,43)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(223,149,45)"/><text x="19.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(215,191,27)"/><text x="19.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(210,67,22)"/><text x="19.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.20%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(244,209,11)"/><text x="19.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.20%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(224,217,25)"/><text x="19.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(230,204,52)"/><text x="19.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="596" width="11" height="15" fill="rgb(210,2,20)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="612" width="11" height="15" fill="rgb(254,36,40)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="628" width="11" height="15" fill="rgb(245,102,15)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="644" width="11" height="15" fill="rgb(223,71,24)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="660" width="11" height="15" fill="rgb(243,201,20)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="676" width="11" height="15" fill="rgb(216,206,2)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.98%)</title><rect x="10" y="692" width="11" height="15" fill="rgb(215,174,25)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="708" width="11" height="15" fill="rgb(251,208,35)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.98%)</title><rect x="10" y="724" width="11" height="15" fill="rgb(248,7,8)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="740" width="11" height="15" fill="rgb(209,137,48)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="756" width="11" height="15" fill="rgb(210,43,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="772" width="11" height="15" fill="rgb(212,214,23)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.98%)</title><rect x="10" y="788" width="11" height="15" fill="rgb(214,86,38)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="10" y="804" width="11" height="15" fill="rgb(233,54,40)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.98%)</title><rect x="10" y="820" width="11" height="15" fill="rgb(212,121,25)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.98%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(207,187,44)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.98%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(233,197,37)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(250,145,39)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(224,221,41)"/><text x="22.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(227,163,47)"/><text x="22.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(218,153,37)"/><text x="22.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(211,7,42)"/><text x="22.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(250,208,15)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 1.17%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(237,171,10)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(253,52,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(251,4,20)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(240,219,32)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.17%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(240,61,17)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(223,71,17)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.17%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(226,56,41)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(230,198,46)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(208,9,52)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(222,72,51)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.17%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(210,201,17)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(226,29,40)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.17%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(215,54,5)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(213,184,24)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(208,29,28)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(218,44,30)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.17%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(213,142,39)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(241,223,54)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.17%)</title><rect x="10" y="580" width="13" height="15" fill="rgb(242,222,49)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="596" width="2" height="15" fill="rgb(221,58,29)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="612" width="2" height="15" fill="rgb(221,179,28)"/><text x="24.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="628" width="2" height="15" fill="rgb(209,46,48)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="644" width="2" height="15" fill="rgb(254,185,26)"/><text x="24.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="660" width="2" height="15" fill="rgb(252,108,18)"/><text x="24.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="21" y="676" width="2" height="15" fill="rgb(252,171,40)"/><text x="24.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="692" width="2" height="15" fill="rgb(209,200,54)"/><text x="24.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.20%)</title><rect x="21" y="708" width="2" height="15" fill="rgb(211,24,46)"/><text x="24.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="724" width="2" height="15" fill="rgb(223,135,38)"/><text x="24.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="740" width="2" height="15" fill="rgb(218,225,14)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="756" width="2" height="15" fill="rgb(206,83,25)"/><text x="24.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="772" width="2" height="15" fill="rgb(222,155,13)"/><text x="24.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="788" width="2" height="15" fill="rgb(215,85,14)"/><text x="24.00" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="804" width="2" height="15" fill="rgb(213,197,14)"/><text x="24.00" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(214,215,2)"/><text x="24.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(242,25,1)"/><text x="24.00" y="846.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(211,113,15)"/><text x="24.00" y="862.50"></text></g><g><title>0x7fd3b30ee995 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(210,108,9)"/><text x="24.00" y="878.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(231,35,29)"/><text x="24.00" y="894.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(226,222,4)"/><text x="24.00" y="910.50"></text></g><g><title>0x7fd3b30ee258 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(223,214,30)"/><text x="24.00" y="926.50"></text></g><g><title>0x7fd3b313bd7a (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(216,160,46)"/><text x="24.00" y="942.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(225,105,13)"/><text x="24.00" y="958.50"></text></g><g><title>0x7fd3b313c473 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(235,28,11)"/><text x="24.00" y="974.50"></text></g><g><title>0x7fd3b31386b9 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(253,204,21)"/><text x="24.00" y="990.50"></text></g><g><title>0x7fd3b31385ba (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(226,152,8)"/><text x="24.00" y="1006.50"></text></g><g><title>0x7fd3b2e1fb15 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(254,94,53)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="500" width="5" height="15" fill="rgb(220,60,6)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="516" width="5" height="15" fill="rgb(212,19,27)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="532" width="5" height="15" fill="rgb(207,193,33)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="23" y="548" width="5" height="15" fill="rgb(226,162,48)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="564" width="5" height="15" fill="rgb(216,148,45)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.39%)</title><rect x="23" y="580" width="5" height="15" fill="rgb(211,32,35)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="596" width="5" height="15" fill="rgb(231,113,28)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="612" width="5" height="15" fill="rgb(232,62,1)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="628" width="5" height="15" fill="rgb(224,62,53)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="23" y="644" width="5" height="15" fill="rgb(232,204,37)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="660" width="5" height="15" fill="rgb(228,135,23)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.39%)</title><rect x="23" y="676" width="5" height="15" fill="rgb(225,228,26)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="692" width="5" height="15" fill="rgb(205,44,17)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="708" width="5" height="15" fill="rgb(221,194,41)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="724" width="5" height="15" fill="rgb(205,1,38)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="23" y="740" width="5" height="15" fill="rgb(240,37,23)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="756" width="5" height="15" fill="rgb(243,149,37)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.39%)</title><rect x="23" y="772" width="5" height="15" fill="rgb(246,193,53)"/><text x="26.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="788" width="5" height="15" fill="rgb(224,105,0)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="804" width="5" height="15" fill="rgb(215,169,38)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="820" width="5" height="15" fill="rgb(246,189,45)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="836" width="5" height="15" fill="rgb(233,224,6)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="852" width="5" height="15" fill="rgb(250,46,9)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="23" y="868" width="5" height="15" fill="rgb(241,106,34)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="884" width="5" height="15" fill="rgb(229,7,11)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.39%)</title><rect x="23" y="900" width="5" height="15" fill="rgb(245,77,29)"/><text x="26.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="916" width="5" height="15" fill="rgb(247,186,10)"/><text x="26.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="932" width="5" height="15" fill="rgb(205,31,50)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="948" width="5" height="15" fill="rgb(242,141,48)"/><text x="26.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="964" width="5" height="15" fill="rgb(220,177,7)"/><text x="26.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="980" width="5" height="15" fill="rgb(232,223,44)"/><text x="26.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="23" y="996" width="5" height="15" fill="rgb(244,107,35)"/><text x="26.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="23" y="1012" width="5" height="15" fill="rgb(216,125,45)"/><text x="26.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.39%)</title><rect x="23" y="1028" width="5" height="15" fill="rgb(219,160,34)"/><text x="26.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.39%)</title><rect x="23" y="1044" width="5" height="15" fill="rgb(248,166,23)"/><text x="26.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (2 samples, 0.39%)</title><rect x="23" y="1060" width="5" height="15" fill="rgb(247,80,42)"/><text x="26.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.20%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(228,46,26)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="10" y="196" width="20" height="15" fill="rgb(237,65,26)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="10" y="212" width="20" height="15" fill="rgb(250,175,42)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="10" y="228" width="20" height="15" fill="rgb(219,215,18)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="10" y="244" width="20" height="15" fill="rgb(209,115,49)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.76%)</title><rect x="10" y="260" width="20" height="15" fill="rgb(235,197,18)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="10" y="276" width="20" height="15" fill="rgb(218,1,7)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.59%)</title><rect x="23" y="292" width="7" height="15" fill="rgb(215,102,33)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="308" width="7" height="15" fill="rgb(208,145,49)"/><text x="26.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="324" width="7" height="15" fill="rgb(243,189,0)"/><text x="26.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="340" width="7" height="15" fill="rgb(244,82,24)"/><text x="26.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="23" y="356" width="7" height="15" fill="rgb(236,149,44)"/><text x="26.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="372" width="7" height="15" fill="rgb(242,227,11)"/><text x="26.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.59%)</title><rect x="23" y="388" width="7" height="15" fill="rgb(230,60,52)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="404" width="7" height="15" fill="rgb(213,162,9)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="420" width="7" height="15" fill="rgb(235,50,45)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="436" width="7" height="15" fill="rgb(232,41,13)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="23" y="452" width="7" height="15" fill="rgb(217,14,46)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="23" y="468" width="7" height="15" fill="rgb(238,126,51)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.59%)</title><rect x="23" y="484" width="7" height="15" fill="rgb(223,188,27)"/><text x="26.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="500" width="2" height="15" fill="rgb(232,197,0)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="516" width="2" height="15" fill="rgb(252,113,33)"/><text x="31.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="532" width="2" height="15" fill="rgb(250,69,22)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="548" width="2" height="15" fill="rgb(222,111,7)"/><text x="31.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="564" width="2" height="15" fill="rgb(243,32,28)"/><text x="31.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="28" y="580" width="2" height="15" fill="rgb(234,209,37)"/><text x="31.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="596" width="2" height="15" fill="rgb(241,36,23)"/><text x="31.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.20%)</title><rect x="28" y="612" width="2" height="15" fill="rgb(208,205,43)"/><text x="31.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="628" width="2" height="15" fill="rgb(246,180,29)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="644" width="2" height="15" fill="rgb(237,68,10)"/><text x="31.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="660" width="2" height="15" fill="rgb(216,98,27)"/><text x="31.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="28" y="676" width="2" height="15" fill="rgb(218,111,43)"/><text x="31.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="692" width="2" height="15" fill="rgb(238,158,16)"/><text x="31.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.20%)</title><rect x="28" y="708" width="2" height="15" fill="rgb(231,87,1)"/><text x="31.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(240,58,43)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(233,82,14)"/><text x="31.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(247,57,9)"/><text x="31.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(220,203,2)"/><text x="31.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(235,3,26)"/><text x="31.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.20%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(243,90,25)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(232,148,0)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(218,168,32)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(235,1,52)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(205,213,46)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(218,15,10)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.20%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(231,21,45)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(219,14,36)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(215,30,46)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(250,94,1)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(221,125,7)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(254,17,11)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(250,96,44)"/><text x="31.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(229,149,0)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.20%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(217,179,46)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(217,212,31)"/><text x="31.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(219,24,23)"/><text x="31.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(236,73,22)"/><text x="31.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(232,1,30)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(208,218,2)"/><text x="31.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.20%)</title><rect x="28" y="1124" width="2" height="15" fill="rgb(230,138,21)"/><text x="31.00" y="1134.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.20%)</title><rect x="30" y="1300" width="3" height="15" fill="rgb(237,207,25)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1316" width="3" height="15" fill="rgb(223,183,18)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1332" width="3" height="15" fill="rgb(212,23,28)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1348" width="3" height="15" fill="rgb(234,156,11)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="1364" width="3" height="15" fill="rgb(235,51,20)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1380" width="3" height="15" fill="rgb(224,28,29)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="1396" width="3" height="15" fill="rgb(244,59,33)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1412" width="3" height="15" fill="rgb(253,188,3)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1428" width="3" height="15" fill="rgb(247,172,20)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1444" width="3" height="15" fill="rgb(239,108,35)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="1460" width="3" height="15" fill="rgb(227,207,50)"/><text x="33.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="1476" width="3" height="15" fill="rgb(230,91,41)"/><text x="33.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="1492" width="3" height="15" fill="rgb(242,228,44)"/><text x="33.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(221,45,24)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.39%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(212,141,27)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="884" width="5" height="15" fill="rgb(238,157,34)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(210,206,47)"/><text x="33.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(224,61,12)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(229,62,15)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(235,61,32)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(229,160,24)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(237,143,50)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(225,9,52)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.39%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(235,80,6)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(217,189,45)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(240,177,8)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1060" width="5" height="15" fill="rgb(246,167,26)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="1076" width="5" height="15" fill="rgb(244,151,47)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1092" width="5" height="15" fill="rgb(214,177,11)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.39%)</title><rect x="30" y="1108" width="5" height="15" fill="rgb(229,80,25)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1124" width="5" height="15" fill="rgb(254,120,27)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1140" width="5" height="15" fill="rgb(233,124,18)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1156" width="5" height="15" fill="rgb(209,95,51)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="1172" width="5" height="15" fill="rgb(241,217,27)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1188" width="5" height="15" fill="rgb(218,170,51)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.39%)</title><rect x="30" y="1204" width="5" height="15" fill="rgb(234,139,42)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1220" width="5" height="15" fill="rgb(252,218,21)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1236" width="5" height="15" fill="rgb(206,42,28)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1252" width="5" height="15" fill="rgb(216,52,36)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="1268" width="5" height="15" fill="rgb(241,163,54)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1284" width="5" height="15" fill="rgb(211,206,16)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.20%)</title><rect x="33" y="1300" width="2" height="15" fill="rgb(227,124,10)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(212,145,0)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(222,67,24)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(238,229,9)"/><text x="36.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(245,24,22)"/><text x="36.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1380" width="2" height="15" fill="rgb(220,133,48)"/><text x="36.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.20%)</title><rect x="33" y="1396" width="2" height="15" fill="rgb(236,113,1)"/><text x="36.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1412" width="2" height="15" fill="rgb(242,77,39)"/><text x="36.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1428" width="2" height="15" fill="rgb(210,138,18)"/><text x="36.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1444" width="2" height="15" fill="rgb(230,84,49)"/><text x="36.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1460" width="2" height="15" fill="rgb(246,188,54)"/><text x="36.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1476" width="2" height="15" fill="rgb(217,182,40)"/><text x="36.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.20%)</title><rect x="33" y="1492" width="2" height="15" fill="rgb(234,153,19)"/><text x="36.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1508" width="2" height="15" fill="rgb(206,108,21)"/><text x="36.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1524" width="2" height="15" fill="rgb(234,121,54)"/><text x="36.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1540" width="2" height="15" fill="rgb(234,83,25)"/><text x="36.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1556" width="2" height="15" fill="rgb(247,54,24)"/><text x="36.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1572" width="2" height="15" fill="rgb(238,33,10)"/><text x="36.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1588" width="2" height="15" fill="rgb(238,4,28)"/><text x="36.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1604" width="2" height="15" fill="rgb(209,22,16)"/><text x="36.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.20%)</title><rect x="33" y="1620" width="2" height="15" fill="rgb(233,44,16)"/><text x="36.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1636" width="2" height="15" fill="rgb(216,77,41)"/><text x="36.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1652" width="2" height="15" fill="rgb(233,68,38)"/><text x="36.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1668" width="2" height="15" fill="rgb(230,95,41)"/><text x="36.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1684" width="2" height="15" fill="rgb(254,62,45)"/><text x="36.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1700" width="2" height="15" fill="rgb(250,216,14)"/><text x="36.00" y="1710.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1716" width="2" height="15" fill="rgb(254,152,48)"/><text x="36.00" y="1726.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1732" width="2" height="15" fill="rgb(254,157,35)"/><text x="36.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="484" width="7" height="15" fill="rgb(205,190,20)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="500" width="7" height="15" fill="rgb(250,179,24)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="516" width="7" height="15" fill="rgb(253,218,43)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="532" width="7" height="15" fill="rgb(206,163,44)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="30" y="548" width="7" height="15" fill="rgb(229,218,4)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="564" width="7" height="15" fill="rgb(248,7,29)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.59%)</title><rect x="30" y="580" width="7" height="15" fill="rgb(219,117,44)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="596" width="7" height="15" fill="rgb(235,119,50)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="612" width="7" height="15" fill="rgb(224,37,6)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="628" width="7" height="15" fill="rgb(245,143,50)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="30" y="644" width="7" height="15" fill="rgb(222,170,48)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="660" width="7" height="15" fill="rgb(212,99,33)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.59%)</title><rect x="30" y="676" width="7" height="15" fill="rgb(205,159,31)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="692" width="7" height="15" fill="rgb(246,58,37)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="708" width="7" height="15" fill="rgb(234,174,50)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="724" width="7" height="15" fill="rgb(244,24,36)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="30" y="740" width="7" height="15" fill="rgb(225,59,12)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="756" width="7" height="15" fill="rgb(247,151,11)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.59%)</title><rect x="30" y="772" width="7" height="15" fill="rgb(206,86,2)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="788" width="7" height="15" fill="rgb(227,60,15)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="804" width="7" height="15" fill="rgb(245,117,31)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="30" y="820" width="7" height="15" fill="rgb(219,70,7)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="30" y="836" width="7" height="15" fill="rgb(247,108,45)"/><text x="33.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="35" y="852" width="2" height="15" fill="rgb(207,212,21)"/><text x="38.00" y="862.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="35" y="868" width="2" height="15" fill="rgb(242,21,38)"/><text x="38.00" y="878.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="35" y="884" width="2" height="15" fill="rgb(243,49,1)"/><text x="38.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.20%)</title><rect x="37" y="628" width="2" height="15" fill="rgb(254,174,27)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="644" width="2" height="15" fill="rgb(229,76,39)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="660" width="2" height="15" fill="rgb(206,111,11)"/><text x="40.00" y="670.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="676" width="2" height="15" fill="rgb(238,227,8)"/><text x="40.00" y="686.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="37" y="692" width="2" height="15" fill="rgb(214,58,35)"/><text x="40.00" y="702.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="37" y="708" width="2" height="15" fill="rgb(227,153,6)"/><text x="40.00" y="718.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="37" y="724" width="2" height="15" fill="rgb(233,129,50)"/><text x="40.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="772" width="3" height="15" fill="rgb(218,65,52)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="788" width="3" height="15" fill="rgb(219,168,17)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="804" width="3" height="15" fill="rgb(210,35,10)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="820" width="3" height="15" fill="rgb(252,178,39)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="39" y="836" width="3" height="15" fill="rgb(216,166,18)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="852" width="3" height="15" fill="rgb(217,44,50)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.20%)</title><rect x="39" y="868" width="3" height="15" fill="rgb(216,12,33)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="884" width="3" height="15" fill="rgb(248,131,44)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="900" width="3" height="15" fill="rgb(213,141,34)"/><text x="42.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="916" width="3" height="15" fill="rgb(210,121,7)"/><text x="42.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="39" y="932" width="3" height="15" fill="rgb(216,109,4)"/><text x="42.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="948" width="3" height="15" fill="rgb(218,16,24)"/><text x="42.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.20%)</title><rect x="39" y="964" width="3" height="15" fill="rgb(218,55,54)"/><text x="42.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="980" width="3" height="15" fill="rgb(236,192,4)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="996" width="3" height="15" fill="rgb(254,162,33)"/><text x="42.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1012" width="3" height="15" fill="rgb(247,33,54)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1028" width="3" height="15" fill="rgb(221,167,26)"/><text x="42.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1044" width="3" height="15" fill="rgb(216,190,18)"/><text x="42.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="39" y="1060" width="3" height="15" fill="rgb(243,52,26)"/><text x="42.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1076" width="3" height="15" fill="rgb(216,88,3)"/><text x="42.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.20%)</title><rect x="39" y="1092" width="3" height="15" fill="rgb(224,43,15)"/><text x="42.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1108" width="3" height="15" fill="rgb(212,228,27)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(235,221,52)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(237,37,47)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(216,18,18)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(224,30,10)"/><text x="42.00" y="1182.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(215,59,2)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.20%)</title><rect x="42" y="1108" width="2" height="15" fill="rgb(206,54,23)"/><text x="45.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1124" width="2" height="15" fill="rgb(219,60,22)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1140" width="2" height="15" fill="rgb(233,90,27)"/><text x="45.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1156" width="2" height="15" fill="rgb(243,49,32)"/><text x="45.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="42" y="1172" width="2" height="15" fill="rgb(229,224,38)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1188" width="2" height="15" fill="rgb(238,29,0)"/><text x="45.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.20%)</title><rect x="42" y="1204" width="2" height="15" fill="rgb(206,148,20)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1220" width="2" height="15" fill="rgb(250,126,32)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1236" width="2" height="15" fill="rgb(224,205,41)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1252" width="2" height="15" fill="rgb(253,109,48)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="42" y="1268" width="2" height="15" fill="rgb(240,99,5)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1284" width="2" height="15" fill="rgb(229,51,25)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.20%)</title><rect x="42" y="1300" width="2" height="15" fill="rgb(234,160,44)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1316" width="2" height="15" fill="rgb(206,55,35)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1332" width="2" height="15" fill="rgb(225,117,3)"/><text x="45.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1348" width="2" height="15" fill="rgb(234,159,32)"/><text x="45.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="42" y="1364" width="2" height="15" fill="rgb(224,217,4)"/><text x="45.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1380" width="2" height="15" fill="rgb(224,154,25)"/><text x="45.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (1 samples, 0.20%)</title><rect x="42" y="1396" width="2" height="15" fill="rgb(225,142,32)"/><text x="45.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1412" width="2" height="15" fill="rgb(240,214,54)"/><text x="45.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1428" width="2" height="15" fill="rgb(241,75,54)"/><text x="45.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1444" width="2" height="15" fill="rgb(253,141,0)"/><text x="45.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="42" y="1460" width="2" height="15" fill="rgb(228,127,35)"/><text x="45.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1476" width="2" height="15" fill="rgb(224,55,54)"/><text x="45.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/numeric.py) (1 samples, 0.20%)</title><rect x="42" y="1492" width="2" height="15" fill="rgb(249,218,9)"/><text x="45.00" y="1502.50"></text></g><g><title>_add_logical_methods (pandas/core/indexes/base.py) (1 samples, 0.20%)</title><rect x="42" y="1508" width="2" height="15" fill="rgb(240,124,8)"/><text x="45.00" y="1518.50"></text></g><g><title>_make_logical_function (pandas/core/indexes/base.py) (1 samples, 0.20%)</title><rect x="42" y="1524" width="2" height="15" fill="rgb(208,104,21)"/><text x="45.00" y="1534.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.20%)</title><rect x="42" y="1540" width="2" height="15" fill="rgb(217,74,23)"/><text x="45.00" y="1550.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.20%)</title><rect x="42" y="1556" width="2" height="15" fill="rgb(243,172,28)"/><text x="45.00" y="1566.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.20%)</title><rect x="42" y="1572" width="2" height="15" fill="rgb(244,45,54)"/><text x="45.00" y="1582.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="42" y="1588" width="2" height="15" fill="rgb(235,223,24)"/><text x="45.00" y="1598.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="44" y="1828" width="2" height="15" fill="rgb(254,71,26)"/><text x="47.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="44" y="1844" width="2" height="15" fill="rgb(227,113,48)"/><text x="47.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (1 samples, 0.20%)</title><rect x="44" y="1860" width="2" height="15" fill="rgb(254,177,42)"/><text x="47.00" y="1870.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="44" y="1876" width="2" height="15" fill="rgb(239,187,48)"/><text x="47.00" y="1886.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="44" y="1892" width="2" height="15" fill="rgb(206,40,17)"/><text x="47.00" y="1902.50"></text></g><g><title>any (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="44" y="1908" width="2" height="15" fill="rgb(250,33,11)"/><text x="47.00" y="1918.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="44" y="1924" width="2" height="15" fill="rgb(221,170,49)"/><text x="47.00" y="1934.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="44" y="1940" width="2" height="15" fill="rgb(238,44,41)"/><text x="47.00" y="1950.50"></text></g><g><title>array_any (methods.c) (1 samples, 0.20%)</title><rect x="44" y="1956" width="2" height="15" fill="rgb(248,222,46)"/><text x="47.00" y="1966.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.20%)</title><rect x="44" y="1972" width="2" height="15" fill="rgb(233,126,49)"/><text x="47.00" y="1982.50"></text></g><g><title>_any (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="44" y="1988" width="2" height="15" fill="rgb(208,8,46)"/><text x="47.00" y="1998.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.20%)</title><rect x="44" y="2004" width="2" height="15" fill="rgb(249,169,40)"/><text x="47.00" y="2014.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="44" y="2020" width="2" height="15" fill="rgb(249,115,29)"/><text x="47.00" y="2030.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="44" y="2036" width="2" height="15" fill="rgb(250,69,23)"/><text x="47.00" y="2046.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="44" y="2052" width="2" height="15" fill="rgb(220,113,16)"/><text x="47.00" y="2062.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="44" y="2068" width="2" height="15" fill="rgb(249,91,2)"/><text x="47.00" y="2078.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.20%)</title><rect x="44" y="2084" width="2" height="15" fill="rgb(205,168,10)"/><text x="47.00" y="2094.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 0.78%)</title><rect x="39" y="724" width="10" height="15" fill="rgb(210,15,17)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.78%)</title><rect x="39" y="740" width="10" height="15" fill="rgb(239,174,25)"/><text x="42.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.78%)</title><rect x="39" y="756" width="10" height="15" fill="rgb(252,121,4)"/><text x="42.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="772" width="7" height="15" fill="rgb(243,132,29)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="42" y="788" width="7" height="15" fill="rgb(251,148,32)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="804" width="7" height="15" fill="rgb(232,186,16)"/><text x="45.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.59%)</title><rect x="42" y="820" width="7" height="15" fill="rgb(219,199,16)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="836" width="7" height="15" fill="rgb(239,35,49)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="852" width="7" height="15" fill="rgb(243,169,6)"/><text x="45.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="868" width="7" height="15" fill="rgb(209,80,14)"/><text x="45.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="42" y="884" width="7" height="15" fill="rgb(214,219,26)"/><text x="45.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="900" width="7" height="15" fill="rgb(241,119,45)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.59%)</title><rect x="42" y="916" width="7" height="15" fill="rgb(251,3,4)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="932" width="7" height="15" fill="rgb(211,42,20)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="948" width="7" height="15" fill="rgb(250,56,16)"/><text x="45.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="964" width="7" height="15" fill="rgb(231,13,27)"/><text x="45.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="42" y="980" width="7" height="15" fill="rgb(249,116,43)"/><text x="45.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="996" width="7" height="15" fill="rgb(248,24,21)"/><text x="45.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.59%)</title><rect x="42" y="1012" width="7" height="15" fill="rgb(244,108,33)"/><text x="45.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="1028" width="7" height="15" fill="rgb(230,18,2)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="1044" width="7" height="15" fill="rgb(246,205,9)"/><text x="45.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="1060" width="7" height="15" fill="rgb(242,189,45)"/><text x="45.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="42" y="1076" width="7" height="15" fill="rgb(209,23,0)"/><text x="45.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="42" y="1092" width="7" height="15" fill="rgb(237,2,39)"/><text x="45.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.39%)</title><rect x="44" y="1108" width="5" height="15" fill="rgb(232,38,24)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1124" width="5" height="15" fill="rgb(236,56,31)"/><text x="47.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1140" width="5" height="15" fill="rgb(230,189,53)"/><text x="47.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1156" width="5" height="15" fill="rgb(231,196,8)"/><text x="47.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="44" y="1172" width="5" height="15" fill="rgb(238,29,22)"/><text x="47.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1188" width="5" height="15" fill="rgb(218,224,32)"/><text x="47.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.39%)</title><rect x="44" y="1204" width="5" height="15" fill="rgb(248,221,42)"/><text x="47.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1220" width="5" height="15" fill="rgb(226,71,32)"/><text x="47.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1236" width="5" height="15" fill="rgb(205,85,33)"/><text x="47.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1252" width="5" height="15" fill="rgb(226,109,25)"/><text x="47.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="44" y="1268" width="5" height="15" fill="rgb(206,57,28)"/><text x="47.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1284" width="5" height="15" fill="rgb(227,62,27)"/><text x="47.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.39%)</title><rect x="44" y="1300" width="5" height="15" fill="rgb(245,68,25)"/><text x="47.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1316" width="5" height="15" fill="rgb(230,183,39)"/><text x="47.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1332" width="5" height="15" fill="rgb(216,68,26)"/><text x="47.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1348" width="5" height="15" fill="rgb(230,69,5)"/><text x="47.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="44" y="1364" width="5" height="15" fill="rgb(220,193,27)"/><text x="47.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1380" width="5" height="15" fill="rgb(237,94,12)"/><text x="47.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.39%)</title><rect x="44" y="1396" width="5" height="15" fill="rgb(239,103,48)"/><text x="47.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1412" width="5" height="15" fill="rgb(228,133,44)"/><text x="47.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1428" width="5" height="15" fill="rgb(225,115,25)"/><text x="47.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1444" width="5" height="15" fill="rgb(213,108,32)"/><text x="47.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="44" y="1460" width="5" height="15" fill="rgb(223,29,44)"/><text x="47.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1476" width="5" height="15" fill="rgb(237,105,45)"/><text x="47.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.39%)</title><rect x="44" y="1492" width="5" height="15" fill="rgb(240,184,47)"/><text x="47.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1508" width="5" height="15" fill="rgb(216,173,37)"/><text x="47.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1524" width="5" height="15" fill="rgb(245,47,32)"/><text x="47.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1540" width="5" height="15" fill="rgb(247,60,13)"/><text x="47.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="44" y="1556" width="5" height="15" fill="rgb(207,49,11)"/><text x="47.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1572" width="5" height="15" fill="rgb(235,44,32)"/><text x="47.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.39%)</title><rect x="44" y="1588" width="5" height="15" fill="rgb(252,176,50)"/><text x="47.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1604" width="5" height="15" fill="rgb(234,161,42)"/><text x="47.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1620" width="5" height="15" fill="rgb(240,30,42)"/><text x="47.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1636" width="5" height="15" fill="rgb(227,118,31)"/><text x="47.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="44" y="1652" width="5" height="15" fill="rgb(215,123,28)"/><text x="47.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1668" width="5" height="15" fill="rgb(206,70,44)"/><text x="47.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (2 samples, 0.39%)</title><rect x="44" y="1684" width="5" height="15" fill="rgb(239,174,16)"/><text x="47.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1700" width="5" height="15" fill="rgb(249,85,19)"/><text x="47.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1716" width="5" height="15" fill="rgb(249,30,37)"/><text x="47.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1732" width="5" height="15" fill="rgb(224,99,53)"/><text x="47.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="44" y="1748" width="5" height="15" fill="rgb(241,175,43)"/><text x="47.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="44" y="1764" width="5" height="15" fill="rgb(244,0,43)"/><text x="47.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (2 samples, 0.39%)</title><rect x="44" y="1780" width="5" height="15" fill="rgb(225,148,6)"/><text x="47.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (2 samples, 0.39%)</title><rect x="44" y="1796" width="5" height="15" fill="rgb(241,208,15)"/><text x="47.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (2 samples, 0.39%)</title><rect x="44" y="1812" width="5" height="15" fill="rgb(241,193,43)"/><text x="47.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.20%)</title><rect x="46" y="1828" width="3" height="15" fill="rgb(234,222,4)"/><text x="49.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (1 samples, 0.20%)</title><rect x="46" y="1844" width="3" height="15" fill="rgb(236,138,26)"/><text x="49.00" y="1854.50"></text></g><g><title>can_cast (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="46" y="1860" width="3" height="15" fill="rgb(211,9,26)"/><text x="49.00" y="1870.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="46" y="1876" width="3" height="15" fill="rgb(230,8,21)"/><text x="49.00" y="1886.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="46" y="1892" width="3" height="15" fill="rgb(234,112,42)"/><text x="49.00" y="1902.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="46" y="1908" width="3" height="15" fill="rgb(239,211,6)"/><text x="49.00" y="1918.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="46" y="1924" width="3" height="15" fill="rgb(235,81,30)"/><text x="49.00" y="1934.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="46" y="1940" width="3" height="15" fill="rgb(231,184,21)"/><text x="49.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.52%)</title><rect x="10" y="68" width="41" height="15" fill="rgb(236,139,30)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.52%)</title><rect x="10" y="84" width="41" height="15" fill="rgb(218,167,19)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.52%)</title><rect x="10" y="100" width="41" height="15" fill="rgb(231,168,45)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 3.52%)</title><rect x="10" y="116" width="41" height="15" fill="rgb(230,185,15)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.52%)</title><rect x="10" y="132" width="41" height="15" fill="rgb(246,32,11)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py) (18 samples, 3.52%)</title><rect x="10" y="148" width="41" height="15" fill="rgb(248,201,47)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.52%)</title><rect x="10" y="164" width="41" height="15" fill="rgb(225,60,5)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.52%)</title><rect x="10" y="180" width="41" height="15" fill="rgb(206,136,28)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="196" width="21" height="15" fill="rgb(232,117,9)"/><text x="33.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.76%)</title><rect x="30" y="212" width="21" height="15" fill="rgb(233,212,32)"/><text x="33.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="228" width="21" height="15" fill="rgb(216,183,20)"/><text x="33.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 1.76%)</title><rect x="30" y="244" width="21" height="15" fill="rgb(223,162,5)"/><text x="33.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="260" width="21" height="15" fill="rgb(240,110,32)"/><text x="33.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="276" width="21" height="15" fill="rgb(233,5,43)"/><text x="33.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="292" width="21" height="15" fill="rgb(218,167,50)"/><text x="33.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.76%)</title><rect x="30" y="308" width="21" height="15" fill="rgb(246,33,42)"/><text x="33.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="324" width="21" height="15" fill="rgb(221,138,23)"/><text x="33.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 1.76%)</title><rect x="30" y="340" width="21" height="15" fill="rgb(233,22,16)"/><text x="33.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="356" width="21" height="15" fill="rgb(234,123,45)"/><text x="33.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="372" width="21" height="15" fill="rgb(209,147,43)"/><text x="33.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="388" width="21" height="15" fill="rgb(223,180,39)"/><text x="33.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.76%)</title><rect x="30" y="404" width="21" height="15" fill="rgb(211,69,7)"/><text x="33.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="420" width="21" height="15" fill="rgb(218,198,37)"/><text x="33.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 1.76%)</title><rect x="30" y="436" width="21" height="15" fill="rgb(251,209,16)"/><text x="33.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="452" width="21" height="15" fill="rgb(249,122,41)"/><text x="33.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.76%)</title><rect x="30" y="468" width="21" height="15" fill="rgb(249,81,34)"/><text x="33.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="37" y="484" width="14" height="15" fill="rgb(246,201,3)"/><text x="40.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.17%)</title><rect x="37" y="500" width="14" height="15" fill="rgb(246,76,34)"/><text x="40.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="37" y="516" width="14" height="15" fill="rgb(221,5,54)"/><text x="40.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 1.17%)</title><rect x="37" y="532" width="14" height="15" fill="rgb(239,51,41)"/><text x="40.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="37" y="548" width="14" height="15" fill="rgb(230,26,17)"/><text x="40.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="37" y="564" width="14" height="15" fill="rgb(221,74,7)"/><text x="40.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="37" y="580" width="14" height="15" fill="rgb(251,227,40)"/><text x="40.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.17%)</title><rect x="37" y="596" width="14" height="15" fill="rgb(245,141,54)"/><text x="40.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.17%)</title><rect x="37" y="612" width="14" height="15" fill="rgb(252,32,21)"/><text x="40.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 0.98%)</title><rect x="39" y="628" width="12" height="15" fill="rgb(234,15,45)"/><text x="42.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="39" y="644" width="12" height="15" fill="rgb(213,56,30)"/><text x="42.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="39" y="660" width="12" height="15" fill="rgb(229,207,23)"/><text x="42.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="39" y="676" width="12" height="15" fill="rgb(217,99,12)"/><text x="42.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.98%)</title><rect x="39" y="692" width="12" height="15" fill="rgb(209,209,1)"/><text x="42.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.98%)</title><rect x="39" y="708" width="12" height="15" fill="rgb(224,200,25)"/><text x="42.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.20%)</title><rect x="49" y="724" width="2" height="15" fill="rgb(210,86,6)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="740" width="2" height="15" fill="rgb(251,32,53)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="756" width="2" height="15" fill="rgb(226,213,9)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="772" width="2" height="15" fill="rgb(242,211,5)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="49" y="788" width="2" height="15" fill="rgb(229,86,0)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="804" width="2" height="15" fill="rgb(244,75,49)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/stata.py) (1 samples, 0.20%)</title><rect x="49" y="820" width="2" height="15" fill="rgb(251,61,0)"/><text x="52.00" y="830.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="56" y="116" width="4" height="15" fill="rgb(224,184,51)"/><text x="59.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.39%)</title><rect x="56" y="132" width="4" height="15" fill="rgb(205,125,53)"/><text x="59.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.39%)</title><rect x="56" y="148" width="4" height="15" fill="rgb(249,51,19)"/><text x="59.00" y="158.50"></text></g><g><title>0x7fd370ea9ff9 (?) (1 samples, 0.20%)</title><rect x="97" y="212" width="2" height="15" fill="rgb(248,185,26)"/><text x="100.00" y="222.50"></text></g><g><title>0x7fd370ea4ef6 (?) (1 samples, 0.20%)</title><rect x="97" y="228" width="2" height="15" fill="rgb(226,192,20)"/><text x="100.00" y="238.50"></text></g><g><title>0x7fd370e99962 (?) (1 samples, 0.20%)</title><rect x="97" y="244" width="2" height="15" fill="rgb(211,55,41)"/><text x="100.00" y="254.50"></text></g><g><title>0x7fd370ecd7a7 (?) (1 samples, 0.20%)</title><rect x="97" y="260" width="2" height="15" fill="rgb(242,198,46)"/><text x="100.00" y="270.50"></text></g><g><title>0x7fd370ecd379 (?) (1 samples, 0.20%)</title><rect x="97" y="276" width="2" height="15" fill="rgb(224,224,24)"/><text x="100.00" y="286.50"></text></g><g><title>0x7fd37132b8b8 (?) (1 samples, 0.20%)</title><rect x="97" y="292" width="2" height="15" fill="rgb(253,64,15)"/><text x="100.00" y="302.50"></text></g><g><title>0x7fd371329c7f (?) (1 samples, 0.20%)</title><rect x="97" y="308" width="2" height="15" fill="rgb(214,83,11)"/><text x="100.00" y="318.50"></text></g><g><title>0x7fd37133c99c (?) (1 samples, 0.20%)</title><rect x="97" y="324" width="2" height="15" fill="rgb(234,151,4)"/><text x="100.00" y="334.50"></text></g><g><title>0x7fd37112ad5c (?) (1 samples, 0.20%)</title><rect x="97" y="340" width="2" height="15" fill="rgb(205,137,17)"/><text x="100.00" y="350.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="99" y="244" width="3" height="15" fill="rgb(253,33,8)"/><text x="102.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="102" y="260" width="2" height="15" fill="rgb(215,10,53)"/><text x="105.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="104" y="292" width="2" height="15" fill="rgb(229,196,16)"/><text x="107.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 0.78%)</title><rect x="99" y="212" width="10" height="15" fill="rgb(249,83,30)"/><text x="102.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="99" y="228" width="10" height="15" fill="rgb(217,208,43)"/><text x="102.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.59%)</title><rect x="102" y="244" width="7" height="15" fill="rgb(216,115,3)"/><text x="105.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="104" y="260" width="5" height="15" fill="rgb(220,220,18)"/><text x="107.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="104" y="276" width="5" height="15" fill="rgb(206,10,19)"/><text x="107.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="106" y="292" width="3" height="15" fill="rgb(226,12,35)"/><text x="109.00" y="302.50"></text></g><g><title>0x7fd3b2e66d07 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="111" y="260" width="2" height="15" fill="rgb(215,48,2)"/><text x="114.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="113" y="308" width="3" height="15" fill="rgb(211,49,43)"/><text x="116.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="113" y="324" width="3" height="15" fill="rgb(213,190,13)"/><text x="116.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="113" y="292" width="5" height="15" fill="rgb(230,20,11)"/><text x="116.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="116" y="308" width="2" height="15" fill="rgb(218,4,48)"/><text x="119.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="116" y="324" width="2" height="15" fill="rgb(205,204,26)"/><text x="119.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="118" y="292" width="2" height="15" fill="rgb(218,177,35)"/><text x="121.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="118" y="308" width="2" height="15" fill="rgb(254,130,28)"/><text x="121.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="118" y="324" width="2" height="15" fill="rgb(208,110,11)"/><text x="121.00" y="334.50"></text></g><g><title>0x7fd3b2e67c38 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="118" y="340" width="2" height="15" fill="rgb(225,26,48)"/><text x="121.00" y="350.50"></text></g><g><title>0x7fd370e70930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="122" y="372" width="3" height="15" fill="rgb(237,215,36)"/><text x="125.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.59%)</title><rect x="120" y="340" width="7" height="15" fill="rgb(215,203,23)"/><text x="123.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.59%)</title><rect x="120" y="356" width="7" height="15" fill="rgb(209,108,29)"/><text x="123.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="125" y="372" width="2" height="15" fill="rgb(253,151,27)"/><text x="128.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="125" y="388" width="2" height="15" fill="rgb(253,138,29)"/><text x="128.00" y="398.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="127" y="340" width="2" height="15" fill="rgb(253,87,6)"/><text x="130.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="127" y="356" width="2" height="15" fill="rgb(205,49,39)"/><text x="130.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="127" y="372" width="2" height="15" fill="rgb(224,101,36)"/><text x="130.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="129" y="356" width="3" height="15" fill="rgb(248,0,50)"/><text x="132.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::RoundedBytes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="129" y="372" width="3" height="15" fill="rgb(237,17,10)"/><text x="132.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.59%)</title><rect x="129" y="340" width="7" height="15" fill="rgb(243,100,43)"/><text x="132.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="132" y="356" width="4" height="15" fill="rgb(216,157,9)"/><text x="135.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="134" y="372" width="2" height="15" fill="rgb(233,138,15)"/><text x="137.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="134" y="388" width="2" height="15" fill="rgb(215,25,27)"/><text x="137.00" y="398.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="136" y="356" width="3" height="15" fill="rgb(232,163,44)"/><text x="139.00" y="366.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="136" y="340" width="9" height="15" fill="rgb(211,11,36)"/><text x="139.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.59%)</title><rect x="139" y="356" width="6" height="15" fill="rgb(224,4,31)"/><text x="142.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.59%)</title><rect x="139" y="372" width="6" height="15" fill="rgb(227,169,28)"/><text x="142.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.39%)</title><rect x="141" y="388" width="4" height="15" fill="rgb(239,201,23)"/><text x="144.00" y="398.50"></text></g><g><title>mkl_set_xerbla_interface (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.20%)</title><rect x="143" y="404" width="2" height="15" fill="rgb(248,152,21)"/><text x="146.00" y="414.50"></text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="340" width="3" height="15" fill="rgb(251,199,54)"/><text x="148.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="356" width="3" height="15" fill="rgb(205,61,16)"/><text x="148.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="372" width="3" height="15" fill="rgb(224,35,54)"/><text x="148.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="388" width="3" height="15" fill="rgb(234,49,19)"/><text x="148.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="404" width="3" height="15" fill="rgb(229,109,10)"/><text x="148.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="420" width="3" height="15" fill="rgb(222,23,31)"/><text x="148.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="436" width="3" height="15" fill="rgb(225,217,44)"/><text x="148.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="145" y="452" width="3" height="15" fill="rgb(221,86,45)"/><text x="148.00" y="462.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="150" y="372" width="2" height="15" fill="rgb(208,182,43)"/><text x="153.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="150" y="388" width="2" height="15" fill="rgb(232,193,51)"/><text x="153.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="150" y="404" width="2" height="15" fill="rgb(214,37,14)"/><text x="153.00" y="414.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="150" y="420" width="2" height="15" fill="rgb(205,193,0)"/><text x="153.00" y="430.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="152" y="372" width="3" height="15" fill="rgb(207,197,53)"/><text x="155.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="152" y="388" width="3" height="15" fill="rgb(245,208,36)"/><text x="155.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run(Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&amp;, Eigen::ThreadPoolDevice const&amp;)::{lambda(long, long)#1}&gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="152" y="404" width="3" height="15" fill="rgb(251,118,28)"/><text x="155.00" y="414.50"></text></g><g><title>Eigen::internal::manage_caching_sizes [clone .constprop.660] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="155" y="372" width="2" height="15" fill="rgb(247,218,11)"/><text x="158.00" y="382.50"></text></g><g><title>_ZN5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEEC2ERSV_RKSW_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="157" y="372" width="2" height="15" fill="rgb(216,21,48)"/><text x="160.00" y="382.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.17%)</title><rect x="148" y="340" width="14" height="15" fill="rgb(239,226,6)"/><text x="151.00" y="350.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.17%)</title><rect x="148" y="356" width="14" height="15" fill="rgb(241,216,33)"/><text x="151.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="159" y="372" width="3" height="15" fill="rgb(227,39,20)"/><text x="162.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="159" y="388" width="3" height="15" fill="rgb(249,163,33)"/><text x="162.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="159" y="404" width="3" height="15" fill="rgb(237,182,13)"/><text x="162.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_19TensorCwiseBinaryOpINS2_17scalar_product_opIffEEKS9_KNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSF_IiJSH_EEEKNS1_18TensorForcedEvalOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNSF_ISH_JEEESD_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS19_RKS1A_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1K_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="159" y="420" width="3" height="15" fill="rgb(206,197,7)"/><text x="162.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal17scalar_product_opIffEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSC_IiJSE_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS2_10SumReducerIfEEKNSC_ISE_JEEESA_S8_EEEEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="159" y="436" width="3" height="15" fill="rgb(242,224,47)"/><text x="162.00" y="446.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.49%)</title><rect x="113" y="260" width="53" height="15" fill="rgb(242,179,11)"/><text x="116.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.49%)</title><rect x="113" y="276" width="53" height="15" fill="rgb(231,188,37)"/><text x="116.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.91%)</title><rect x="120" y="292" width="46" height="15" fill="rgb(216,102,17)"/><text x="123.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.91%)</title><rect x="120" y="308" width="46" height="15" fill="rgb(239,2,5)"/><text x="123.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.91%)</title><rect x="120" y="324" width="46" height="15" fill="rgb(246,107,40)"/><text x="123.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="162" y="340" width="4" height="15" fill="rgb(230,21,31)"/><text x="165.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="356" width="2" height="15" fill="rgb(214,137,50)"/><text x="167.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="372" width="2" height="15" fill="rgb(215,21,9)"/><text x="167.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="388" width="2" height="15" fill="rgb(235,152,5)"/><text x="167.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="404" width="2" height="15" fill="rgb(254,201,14)"/><text x="167.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="420" width="2" height="15" fill="rgb(236,78,32)"/><text x="167.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="436" width="2" height="15" fill="rgb(236,81,53)"/><text x="167.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="452" width="2" height="15" fill="rgb(244,131,40)"/><text x="167.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="468" width="2" height="15" fill="rgb(243,17,21)"/><text x="167.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="164" y="484" width="2" height="15" fill="rgb(214,196,15)"/><text x="167.00" y="494.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="166" y="260" width="3" height="15" fill="rgb(233,31,12)"/><text x="169.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.20%)</title><rect x="166" y="276" width="3" height="15" fill="rgb(251,119,39)"/><text x="169.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="166" y="292" width="3" height="15" fill="rgb(248,61,41)"/><text x="169.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="169" y="260" width="2" height="15" fill="rgb(241,3,18)"/><text x="172.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="171" y="260" width="2" height="15" fill="rgb(227,116,10)"/><text x="174.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 5.47%)</title><rect x="111" y="244" width="64" height="15" fill="rgb(241,29,29)"/><text x="114.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="173" y="260" width="2" height="15" fill="rgb(228,177,7)"/><text x="176.00" y="270.50"></text></g><g><title>0x7fd3b2e66929 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="173" y="276" width="2" height="15" fill="rgb(219,138,28)"/><text x="176.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (51 samples, 9.96%)</title><rect x="63" y="132" width="117" height="15" fill="rgb(219,56,33)"/><text x="66.00" y="142.50">&lt;lambda&gt; (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (51 samples, 9.96%)</title><rect x="63" y="148" width="117" height="15" fill="rgb(228,173,16)"/><text x="66.00" y="158.50">run (mlprodict..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 9.38%)</title><rect x="69" y="164" width="111" height="15" fill="rgb(215,115,4)"/><text x="72.00" y="174.50">_run_whole_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (42 samples, 8.20%)</title><rect x="83" y="180" width="97" height="15" fill="rgb(236,34,33)"/><text x="86.00" y="190.50">run (mlprod..</text></g><g><title>run (onnxruntime/capi/session.py) (41 samples, 8.01%)</title><rect x="86" y="196" width="94" height="15" fill="rgb(254,129,38)"/><text x="89.00" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 6.05%)</title><rect x="109" y="212" width="71" height="15" fill="rgb(220,59,7)"/><text x="112.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 6.05%)</title><rect x="109" y="228" width="71" height="15" fill="rgb(230,204,38)"/><text x="112.00" y="238.50">void pyb..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="175" y="244" width="5" height="15" fill="rgb(218,174,16)"/><text x="178.00" y="254.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.20%)</title><rect x="180" y="132" width="2" height="15" fill="rgb(223,101,35)"/><text x="183.00" y="142.50"></text></g><g><title>profile_ort (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (58 samples, 11.33%)</title><rect x="51" y="68" width="134" height="15" fill="rgb(213,7,8)"/><text x="54.00" y="78.50">profile_ort (ben..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (58 samples, 11.33%)</title><rect x="51" y="84" width="134" height="15" fill="rgb(253,138,14)"/><text x="54.00" y="94.50">setup_profile (b..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (58 samples, 11.33%)</title><rect x="51" y="100" width="134" height="15" fill="rgb(220,78,13)"/><text x="54.00" y="110.50">profile (bench_M..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (54 samples, 10.55%)</title><rect x="60" y="116" width="125" height="15" fill="rgb(241,195,46)"/><text x="63.00" y="126.50">time_predict (m..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="182" y="132" width="3" height="15" fill="rgb(208,224,12)"/><text x="185.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="185" y="116" width="2" height="15" fill="rgb(219,98,28)"/><text x="188.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="185" y="132" width="2" height="15" fill="rgb(227,210,45)"/><text x="188.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="215" y="180" width="2" height="15" fill="rgb(245,211,47)"/><text x="218.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.39%)</title><rect x="348" y="196" width="5" height="15" fill="rgb(246,114,6)"/><text x="351.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.20%)</title><rect x="385" y="228" width="2" height="15" fill="rgb(238,145,48)"/><text x="388.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.20%)</title><rect x="385" y="244" width="2" height="15" fill="rgb(231,161,50)"/><text x="388.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="385" y="260" width="2" height="15" fill="rgb(207,165,44)"/><text x="388.00" y="270.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.20%)</title><rect x="387" y="228" width="3" height="15" fill="rgb(214,88,35)"/><text x="390.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.20%)</title><rect x="387" y="244" width="3" height="15" fill="rgb(238,165,46)"/><text x="390.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.20%)</title><rect x="387" y="260" width="3" height="15" fill="rgb(250,56,38)"/><text x="390.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="387" y="276" width="3" height="15" fill="rgb(212,8,22)"/><text x="390.00" y="286.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.20%)</title><rect x="387" y="292" width="3" height="15" fill="rgb(230,9,2)"/><text x="390.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.20%)</title><rect x="390" y="228" width="2" height="15" fill="rgb(254,172,11)"/><text x="393.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.20%)</title><rect x="390" y="244" width="2" height="15" fill="rgb(205,227,51)"/><text x="393.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="392" y="276" width="2" height="15" fill="rgb(219,221,44)"/><text x="395.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="392" y="260" width="5" height="15" fill="rgb(248,97,43)"/><text x="395.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.20%)</title><rect x="394" y="276" width="3" height="15" fill="rgb(207,169,15)"/><text x="397.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.20%)</title><rect x="394" y="292" width="3" height="15" fill="rgb(254,212,15)"/><text x="397.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (4 samples, 0.78%)</title><rect x="392" y="244" width="9" height="15" fill="rgb(216,212,44)"/><text x="395.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="397" y="260" width="4" height="15" fill="rgb(219,210,20)"/><text x="400.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="397" y="276" width="4" height="15" fill="rgb(245,125,5)"/><text x="400.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="399" y="292" width="2" height="15" fill="rgb(249,8,30)"/><text x="402.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="401" y="244" width="3" height="15" fill="rgb(221,188,2)"/><text x="404.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="401" y="260" width="3" height="15" fill="rgb(241,128,43)"/><text x="404.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="401" y="276" width="3" height="15" fill="rgb(217,113,34)"/><text x="404.00" y="286.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.20%)</title><rect x="404" y="244" width="2" height="15" fill="rgb(227,177,32)"/><text x="407.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.20%)</title><rect x="404" y="260" width="2" height="15" fill="rgb(227,151,52)"/><text x="407.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="404" y="276" width="2" height="15" fill="rgb(236,226,17)"/><text x="407.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="404" y="292" width="2" height="15" fill="rgb(208,39,24)"/><text x="407.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (2 samples, 0.39%)</title><rect x="406" y="244" width="5" height="15" fill="rgb(213,128,8)"/><text x="409.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.39%)</title><rect x="406" y="260" width="5" height="15" fill="rgb(245,57,39)"/><text x="409.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.20%)</title><rect x="411" y="276" width="2" height="15" fill="rgb(254,84,21)"/><text x="414.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.20%)</title><rect x="411" y="292" width="2" height="15" fill="rgb(251,153,5)"/><text x="414.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (17 samples, 3.32%)</title><rect x="381" y="212" width="39" height="15" fill="rgb(251,57,2)"/><text x="384.00" y="222.50">_ru..</text></g><g><title>array_subscript (mapping.c) (12 samples, 2.34%)</title><rect x="392" y="228" width="28" height="15" fill="rgb(223,113,37)"/><text x="395.00" y="238.50">a..</text></g><g><title>prepare_index (mapping.c) (4 samples, 0.78%)</title><rect x="411" y="244" width="9" height="15" fill="rgb(218,121,17)"/><text x="414.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.78%)</title><rect x="411" y="260" width="9" height="15" fill="rgb(233,172,46)"/><text x="414.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (3 samples, 0.59%)</title><rect x="413" y="276" width="7" height="15" fill="rgb(249,197,12)"/><text x="416.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.20%)</title><rect x="417" y="292" width="3" height="15" fill="rgb(249,187,35)"/><text x="420.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.20%)</title><rect x="417" y="308" width="3" height="15" fill="rgb(242,38,8)"/><text x="420.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.20%)</title><rect x="417" y="324" width="3" height="15" fill="rgb(235,66,50)"/><text x="420.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.20%)</title><rect x="417" y="340" width="3" height="15" fill="rgb(253,195,47)"/><text x="420.00" y="350.50"></text></g><g><title>0x7fd3b2e86d62 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="431" y="292" width="3" height="15" fill="rgb(212,148,51)"/><text x="434.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.59%)</title><rect x="429" y="260" width="7" height="15" fill="rgb(206,108,54)"/><text x="432.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.59%)</title><rect x="429" y="276" width="7" height="15" fill="rgb(210,2,44)"/><text x="432.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="434" y="292" width="2" height="15" fill="rgb(241,26,21)"/><text x="437.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="434" y="308" width="2" height="15" fill="rgb(253,30,48)"/><text x="437.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (8 samples, 1.56%)</title><rect x="420" y="212" width="18" height="15" fill="rgb(237,139,38)"/><text x="423.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (7 samples, 1.37%)</title><rect x="422" y="228" width="16" height="15" fill="rgb(210,72,34)"/><text x="425.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 0.78%)</title><rect x="429" y="244" width="9" height="15" fill="rgb(205,179,23)"/><text x="432.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.20%)</title><rect x="436" y="260" width="2" height="15" fill="rgb(254,1,14)"/><text x="439.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.20%)</title><rect x="436" y="276" width="2" height="15" fill="rgb(214,219,26)"/><text x="439.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="436" y="292" width="2" height="15" fill="rgb(239,26,31)"/><text x="439.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="436" y="308" width="2" height="15" fill="rgb(227,151,33)"/><text x="439.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.59%)</title><rect x="438" y="212" width="7" height="15" fill="rgb(231,166,30)"/><text x="441.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.39%)</title><rect x="440" y="228" width="5" height="15" fill="rgb(236,135,9)"/><text x="443.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="443" y="244" width="2" height="15" fill="rgb(242,76,11)"/><text x="446.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.20%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(224,218,52)"/><text x="446.00" y="270.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.20%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(251,163,43)"/><text x="446.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.20%)</title><rect x="443" y="292" width="2" height="15" fill="rgb(206,51,53)"/><text x="446.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.39%)</title><rect x="445" y="212" width="5" height="15" fill="rgb(229,136,11)"/><text x="448.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.39%)</title><rect x="450" y="212" width="4" height="15" fill="rgb(212,199,37)"/><text x="453.00" y="222.50"></text></g><g><title>0x7fd3b20890a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="452" y="228" width="2" height="15" fill="rgb(209,196,35)"/><text x="455.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="473" y="260" width="2" height="15" fill="rgb(217,52,11)"/><text x="476.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="473" y="276" width="2" height="15" fill="rgb(225,18,50)"/><text x="476.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="473" y="292" width="2" height="15" fill="rgb(214,31,1)"/><text x="476.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="475" y="276" width="2" height="15" fill="rgb(221,103,48)"/><text x="478.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="475" y="292" width="2" height="15" fill="rgb(214,109,51)"/><text x="478.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (3 samples, 0.59%)</title><rect x="477" y="324" width="7" height="15" fill="rgb(208,7,42)"/><text x="480.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.20%)</title><rect x="482" y="340" width="2" height="15" fill="rgb(234,52,26)"/><text x="485.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="484" y="356" width="3" height="15" fill="rgb(232,33,12)"/><text x="487.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="484" y="372" width="3" height="15" fill="rgb(224,109,54)"/><text x="487.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.39%)</title><rect x="484" y="340" width="5" height="15" fill="rgb(248,98,48)"/><text x="487.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="487" y="356" width="2" height="15" fill="rgb(241,13,40)"/><text x="490.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.37%)</title><rect x="475" y="260" width="16" height="15" fill="rgb(238,66,15)"/><text x="478.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.17%)</title><rect x="477" y="276" width="14" height="15" fill="rgb(237,197,21)"/><text x="480.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (6 samples, 1.17%)</title><rect x="477" y="292" width="14" height="15" fill="rgb(210,157,30)"/><text x="480.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (6 samples, 1.17%)</title><rect x="477" y="308" width="14" height="15" fill="rgb(213,103,29)"/><text x="480.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.59%)</title><rect x="484" y="324" width="7" height="15" fill="rgb(233,206,7)"/><text x="487.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="489" y="340" width="2" height="15" fill="rgb(246,2,50)"/><text x="492.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.20%)</title><rect x="491" y="260" width="2" height="15" fill="rgb(236,49,22)"/><text x="494.00" y="270.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.20%)</title><rect x="491" y="276" width="2" height="15" fill="rgb(216,126,9)"/><text x="494.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (13 samples, 2.54%)</title><rect x="466" y="228" width="30" height="15" fill="rgb(228,164,37)"/><text x="469.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.15%)</title><rect x="470" y="244" width="26" height="15" fill="rgb(234,101,46)"/><text x="473.00" y="254.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="493" y="260" width="3" height="15" fill="rgb(230,9,4)"/><text x="496.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.20%)</title><rect x="519" y="356" width="2" height="15" fill="rgb(254,100,8)"/><text x="522.00" y="366.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (11 samples, 2.15%)</title><rect x="498" y="276" width="25" height="15" fill="rgb(224,85,31)"/><text x="501.00" y="286.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 2.15%)</title><rect x="498" y="292" width="25" height="15" fill="rgb(246,31,29)"/><text x="501.00" y="302.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (8 samples, 1.56%)</title><rect x="505" y="308" width="18" height="15" fill="rgb(248,77,21)"/><text x="508.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.17%)</title><rect x="510" y="324" width="13" height="15" fill="rgb(229,222,9)"/><text x="513.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.59%)</title><rect x="517" y="340" width="6" height="15" fill="rgb(216,46,32)"/><text x="520.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="521" y="356" width="2" height="15" fill="rgb(250,124,43)"/><text x="524.00" y="366.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="523" y="308" width="3" height="15" fill="rgb(205,105,11)"/><text x="526.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.39%)</title><rect x="523" y="292" width="5" height="15" fill="rgb(207,133,26)"/><text x="526.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.20%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(205,222,28)"/><text x="529.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.20%)</title><rect x="526" y="324" width="2" height="15" fill="rgb(208,222,45)"/><text x="529.00" y="334.50"></text></g><g><title>array_astype (methods.c) (3 samples, 0.59%)</title><rect x="523" y="276" width="7" height="15" fill="rgb(254,48,25)"/><text x="526.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.20%)</title><rect x="528" y="292" width="2" height="15" fill="rgb(248,8,28)"/><text x="531.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (21 samples, 4.10%)</title><rect x="496" y="228" width="48" height="15" fill="rgb(212,78,43)"/><text x="499.00" y="238.50">_run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (21 samples, 4.10%)</title><rect x="496" y="244" width="48" height="15" fill="rgb(217,176,26)"/><text x="499.00" y="254.50">_run..</text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (21 samples, 4.10%)</title><rect x="496" y="260" width="48" height="15" fill="rgb(228,218,2)"/><text x="499.00" y="270.50">_arg..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (6 samples, 1.17%)</title><rect x="530" y="276" width="14" height="15" fill="rgb(215,3,8)"/><text x="533.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.17%)</title><rect x="530" y="292" width="14" height="15" fill="rgb(212,206,18)"/><text x="533.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (6 samples, 1.17%)</title><rect x="530" y="308" width="14" height="15" fill="rgb(247,101,28)"/><text x="533.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_identity.py) (2 samples, 0.39%)</title><rect x="544" y="228" width="5" height="15" fill="rgb(221,65,6)"/><text x="547.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.39%)</title><rect x="574" y="276" width="5" height="15" fill="rgb(214,161,24)"/><text x="577.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.20%)</title><rect x="576" y="292" width="3" height="15" fill="rgb(215,204,6)"/><text x="579.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="576" y="308" width="3" height="15" fill="rgb(221,148,11)"/><text x="579.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.20%)</title><rect x="576" y="324" width="3" height="15" fill="rgb(253,43,3)"/><text x="579.00" y="334.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="576" y="340" width="3" height="15" fill="rgb(213,29,0)"/><text x="579.00" y="350.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 0.78%)</title><rect x="572" y="260" width="9" height="15" fill="rgb(242,106,40)"/><text x="575.00" y="270.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="579" y="276" width="2" height="15" fill="rgb(218,203,4)"/><text x="582.00" y="286.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (2 samples, 0.39%)</title><rect x="593" y="324" width="4" height="15" fill="rgb(215,48,13)"/><text x="596.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="595" y="340" width="2" height="15" fill="rgb(228,6,3)"/><text x="598.00" y="350.50"></text></g><g><title>0x7fd3b2087c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="600" y="340" width="2" height="15" fill="rgb(246,40,5)"/><text x="603.00" y="350.50"></text></g><g><title>0x7fd3b2088d70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="602" y="340" width="2" height="15" fill="rgb(206,137,18)"/><text x="605.00" y="350.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c) (1 samples, 0.20%)</title><rect x="604" y="340" width="2" height="15" fill="rgb(226,63,19)"/><text x="607.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c) (1 samples, 0.20%)</title><rect x="604" y="356" width="2" height="15" fill="rgb(242,182,31)"/><text x="607.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.20%)</title><rect x="604" y="372" width="2" height="15" fill="rgb(224,15,34)"/><text x="607.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.20%)</title><rect x="604" y="388" width="2" height="15" fill="rgb(239,75,45)"/><text x="607.00" y="398.50"></text></g><g><title>0x7fd3b20892b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="604" y="404" width="2" height="15" fill="rgb(229,132,10)"/><text x="607.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="606" y="340" width="3" height="15" fill="rgb(251,195,46)"/><text x="609.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="606" y="356" width="3" height="15" fill="rgb(227,156,51)"/><text x="609.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="606" y="372" width="3" height="15" fill="rgb(239,169,33)"/><text x="609.00" y="382.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.20%)</title><rect x="609" y="340" width="2" height="15" fill="rgb(253,131,26)"/><text x="612.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="609" y="356" width="2" height="15" fill="rgb(233,210,54)"/><text x="612.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="609" y="372" width="2" height="15" fill="rgb(247,39,30)"/><text x="612.00" y="382.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.20%)</title><rect x="611" y="356" width="2" height="15" fill="rgb(205,223,43)"/><text x="614.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="611" y="372" width="2" height="15" fill="rgb(210,183,49)"/><text x="614.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.20%)</title><rect x="611" y="388" width="2" height="15" fill="rgb(243,208,10)"/><text x="614.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="611" y="404" width="2" height="15" fill="rgb(205,102,11)"/><text x="614.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="611" y="420" width="2" height="15" fill="rgb(214,194,17)"/><text x="614.00" y="430.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (11 samples, 2.15%)</title><rect x="590" y="292" width="26" height="15" fill="rgb(213,35,23)"/><text x="593.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (10 samples, 1.95%)</title><rect x="593" y="308" width="23" height="15" fill="rgb(218,129,8)"/><text x="596.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (8 samples, 1.56%)</title><rect x="597" y="324" width="19" height="15" fill="rgb(242,201,48)"/><text x="600.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.39%)</title><rect x="611" y="340" width="5" height="15" fill="rgb(221,22,34)"/><text x="614.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.20%)</title><rect x="613" y="356" width="3" height="15" fill="rgb(238,56,11)"/><text x="616.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.20%)</title><rect x="613" y="372" width="3" height="15" fill="rgb(220,219,2)"/><text x="616.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.20%)</title><rect x="613" y="388" width="3" height="15" fill="rgb(222,63,1)"/><text x="616.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (30 samples, 5.86%)</title><rect x="549" y="228" width="69" height="15" fill="rgb(221,229,16)"/><text x="552.00" y="238.50">_run (m..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (29 samples, 5.66%)</title><rect x="551" y="244" width="67" height="15" fill="rgb(235,75,16)"/><text x="554.00" y="254.50">numpy_d..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (16 samples, 3.12%)</title><rect x="581" y="260" width="37" height="15" fill="rgb(213,11,51)"/><text x="584.00" y="270.50">dot..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 2.34%)</title><rect x="590" y="276" width="28" height="15" fill="rgb(210,79,0)"/><text x="593.00" y="286.50">a..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(209,73,13)"/><text x="619.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="618" y="260" width="2" height="15" fill="rgb(232,206,23)"/><text x="621.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="618" y="276" width="2" height="15" fill="rgb(208,31,16)"/><text x="621.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.20%)</title><rect x="618" y="292" width="2" height="15" fill="rgb(207,212,6)"/><text x="621.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="618" y="308" width="2" height="15" fill="rgb(231,81,16)"/><text x="621.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="623" y="276" width="2" height="15" fill="rgb(207,122,20)"/><text x="626.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="623" y="292" width="2" height="15" fill="rgb(251,0,6)"/><text x="626.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.20%)</title><rect x="623" y="308" width="2" height="15" fill="rgb(212,150,52)"/><text x="626.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.20%)</title><rect x="623" y="324" width="2" height="15" fill="rgb(240,56,53)"/><text x="626.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="625" y="276" width="4" height="15" fill="rgb(229,213,17)"/><text x="628.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="625" y="292" width="4" height="15" fill="rgb(250,218,47)"/><text x="628.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.39%)</title><rect x="625" y="308" width="4" height="15" fill="rgb(228,72,9)"/><text x="628.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="627" y="324" width="2" height="15" fill="rgb(230,145,1)"/><text x="630.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="629" y="276" width="7" height="15" fill="rgb(240,58,49)"/><text x="632.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="629" y="292" width="7" height="15" fill="rgb(216,200,40)"/><text x="632.00" y="302.50"></text></g><g><title>FLOAT_maximum (loops.c.src) (3 samples, 0.59%)</title><rect x="629" y="308" width="7" height="15" fill="rgb(205,47,8)"/><text x="632.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (10 samples, 1.95%)</title><rect x="618" y="228" width="23" height="15" fill="rgb(237,101,1)"/><text x="621.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.95%)</title><rect x="618" y="244" width="23" height="15" fill="rgb(223,137,38)"/><text x="621.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.76%)</title><rect x="620" y="260" width="21" height="15" fill="rgb(222,1,21)"/><text x="623.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.39%)</title><rect x="636" y="276" width="5" height="15" fill="rgb(246,96,50)"/><text x="639.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.20%)</title><rect x="639" y="292" width="2" height="15" fill="rgb(243,48,34)"/><text x="642.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="655" y="276" width="2" height="15" fill="rgb(251,63,42)"/><text x="658.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.59%)</title><rect x="653" y="244" width="6" height="15" fill="rgb(218,33,19)"/><text x="656.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="655" y="260" width="4" height="15" fill="rgb(230,79,4)"/><text x="658.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="657" y="276" width="2" height="15" fill="rgb(239,56,29)"/><text x="660.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.39%)</title><rect x="662" y="308" width="4" height="15" fill="rgb(233,2,44)"/><text x="665.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.39%)</title><rect x="662" y="324" width="4" height="15" fill="rgb(246,119,9)"/><text x="665.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.39%)</title><rect x="662" y="340" width="4" height="15" fill="rgb(243,121,17)"/><text x="665.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.39%)</title><rect x="662" y="356" width="4" height="15" fill="rgb(249,154,10)"/><text x="665.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.39%)</title><rect x="662" y="372" width="4" height="15" fill="rgb(223,119,6)"/><text x="665.00" y="382.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.20%)</title><rect x="664" y="388" width="2" height="15" fill="rgb(215,60,47)"/><text x="667.00" y="398.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.20%)</title><rect x="666" y="324" width="3" height="15" fill="rgb(229,8,47)"/><text x="669.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="669" y="324" width="2" height="15" fill="rgb(254,76,18)"/><text x="672.00" y="334.50"></text></g><g><title>0x7fd3b20892c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="673" y="372" width="3" height="15" fill="rgb(205,1,15)"/><text x="676.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.20%)</title><rect x="676" y="372" width="2" height="15" fill="rgb(205,72,1)"/><text x="679.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.20%)</title><rect x="678" y="372" width="2" height="15" fill="rgb(209,162,53)"/><text x="681.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.98%)</title><rect x="671" y="356" width="11" height="15" fill="rgb(228,5,36)"/><text x="674.00" y="366.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.20%)</title><rect x="680" y="372" width="2" height="15" fill="rgb(233,57,49)"/><text x="683.00" y="382.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.20%)</title><rect x="682" y="356" width="3" height="15" fill="rgb(221,185,35)"/><text x="685.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.20%)</title><rect x="685" y="356" width="2" height="15" fill="rgb(250,163,14)"/><text x="688.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.20%)</title><rect x="685" y="372" width="2" height="15" fill="rgb(233,177,45)"/><text x="688.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="685" y="388" width="2" height="15" fill="rgb(226,108,1)"/><text x="688.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="685" y="404" width="2" height="15" fill="rgb(208,65,15)"/><text x="688.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="685" y="420" width="2" height="15" fill="rgb(250,68,11)"/><text x="688.00" y="430.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.20%)</title><rect x="685" y="436" width="2" height="15" fill="rgb(218,10,16)"/><text x="688.00" y="446.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="685" y="452" width="2" height="15" fill="rgb(224,201,5)"/><text x="688.00" y="462.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (1 samples, 0.20%)</title><rect x="687" y="356" width="2" height="15" fill="rgb(248,178,43)"/><text x="690.00" y="366.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.20%)</title><rect x="687" y="372" width="2" height="15" fill="rgb(217,198,11)"/><text x="690.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.76%)</title><rect x="671" y="340" width="21" height="15" fill="rgb(206,4,6)"/><text x="674.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="689" y="356" width="3" height="15" fill="rgb(230,209,3)"/><text x="692.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="689" y="372" width="3" height="15" fill="rgb(226,37,3)"/><text x="692.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="689" y="388" width="3" height="15" fill="rgb(208,91,1)"/><text x="692.00" y="398.50"></text></g><g><title>array_max (methods.c) (15 samples, 2.93%)</title><rect x="659" y="244" width="35" height="15" fill="rgb(231,23,27)"/><text x="662.00" y="254.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 2.93%)</title><rect x="659" y="260" width="35" height="15" fill="rgb(219,114,7)"/><text x="662.00" y="270.50">fo..</text></g><g><title>_amax (numpy/core/_methods.py) (14 samples, 2.73%)</title><rect x="662" y="276" width="32" height="15" fill="rgb(210,170,26)"/><text x="665.00" y="286.50">_a..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 2.73%)</title><rect x="662" y="292" width="32" height="15" fill="rgb(211,52,30)"/><text x="665.00" y="302.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (12 samples, 2.34%)</title><rect x="666" y="308" width="28" height="15" fill="rgb(243,216,20)"/><text x="669.00" y="318.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 1.95%)</title><rect x="671" y="324" width="23" height="15" fill="rgb(219,79,19)"/><text x="674.00" y="334.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.20%)</title><rect x="692" y="340" width="2" height="15" fill="rgb(247,222,11)"/><text x="695.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="692" y="356" width="2" height="15" fill="rgb(244,5,33)"/><text x="695.00" y="366.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="692" y="372" width="2" height="15" fill="rgb(223,178,24)"/><text x="695.00" y="382.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.20%)</title><rect x="692" y="388" width="2" height="15" fill="rgb(218,127,47)"/><text x="695.00" y="398.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.59%)</title><rect x="694" y="260" width="7" height="15" fill="rgb(244,106,16)"/><text x="697.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.39%)</title><rect x="696" y="276" width="5" height="15" fill="rgb(214,54,27)"/><text x="699.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="696" y="292" width="5" height="15" fill="rgb(206,33,6)"/><text x="699.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 0.39%)</title><rect x="696" y="308" width="5" height="15" fill="rgb(240,123,47)"/><text x="699.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="699" y="324" width="2" height="15" fill="rgb(248,113,40)"/><text x="702.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 0.78%)</title><rect x="694" y="244" width="9" height="15" fill="rgb(254,43,12)"/><text x="697.00" y="254.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="701" y="260" width="2" height="15" fill="rgb(209,212,4)"/><text x="704.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.20%)</title><rect x="703" y="356" width="3" height="15" fill="rgb(217,184,46)"/><text x="706.00" y="366.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.20%)</title><rect x="703" y="372" width="3" height="15" fill="rgb(215,49,5)"/><text x="706.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="708" y="404" width="2" height="15" fill="rgb(223,12,25)"/><text x="711.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="708" y="420" width="2" height="15" fill="rgb(236,94,41)"/><text x="711.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.78%)</title><rect x="703" y="340" width="9" height="15" fill="rgb(251,175,18)"/><text x="706.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.59%)</title><rect x="706" y="356" width="6" height="15" fill="rgb(240,207,21)"/><text x="709.00" y="366.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.59%)</title><rect x="706" y="372" width="6" height="15" fill="rgb(217,111,11)"/><text x="709.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.59%)</title><rect x="706" y="388" width="6" height="15" fill="rgb(220,210,20)"/><text x="709.00" y="398.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="710" y="404" width="2" height="15" fill="rgb(212,78,37)"/><text x="713.00" y="414.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="710" y="420" width="2" height="15" fill="rgb(242,172,26)"/><text x="713.00" y="430.50"></text></g><g><title>array_sum (methods.c) (7 samples, 1.37%)</title><rect x="703" y="244" width="16" height="15" fill="rgb(232,88,41)"/><text x="706.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (7 samples, 1.37%)</title><rect x="703" y="260" width="16" height="15" fill="rgb(212,205,24)"/><text x="706.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 1.37%)</title><rect x="703" y="276" width="16" height="15" fill="rgb(240,227,48)"/><text x="706.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 1.37%)</title><rect x="703" y="292" width="16" height="15" fill="rgb(246,132,13)"/><text x="706.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.37%)</title><rect x="703" y="308" width="16" height="15" fill="rgb(224,73,45)"/><text x="706.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.37%)</title><rect x="703" y="324" width="16" height="15" fill="rgb(247,102,16)"/><text x="706.00" y="334.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.59%)</title><rect x="712" y="340" width="7" height="15" fill="rgb(247,171,19)"/><text x="715.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="717" y="356" width="2" height="15" fill="rgb(250,117,40)"/><text x="720.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="719" y="260" width="3" height="15" fill="rgb(235,10,23)"/><text x="722.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="719" y="276" width="3" height="15" fill="rgb(208,131,19)"/><text x="722.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.20%)</title><rect x="719" y="292" width="3" height="15" fill="rgb(231,33,51)"/><text x="722.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="724" y="276" width="2" height="15" fill="rgb(231,133,46)"/><text x="727.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.39%)</title><rect x="726" y="292" width="5" height="15" fill="rgb(234,152,23)"/><text x="729.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.39%)</title><rect x="726" y="308" width="5" height="15" fill="rgb(233,181,30)"/><text x="729.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.39%)</title><rect x="726" y="324" width="5" height="15" fill="rgb(212,139,14)"/><text x="729.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.39%)</title><rect x="726" y="340" width="5" height="15" fill="rgb(220,6,22)"/><text x="729.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="729" y="356" width="2" height="15" fill="rgb(217,78,20)"/><text x="732.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="729" y="372" width="2" height="15" fill="rgb(254,123,33)"/><text x="732.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="733" y="324" width="2" height="15" fill="rgb(239,46,15)"/><text x="736.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.59%)</title><rect x="731" y="308" width="7" height="15" fill="rgb(217,62,1)"/><text x="734.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="735" y="324" width="3" height="15" fill="rgb(207,210,10)"/><text x="738.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.20%)</title><rect x="738" y="308" width="2" height="15" fill="rgb(240,146,34)"/><text x="741.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.98%)</title><rect x="731" y="292" width="11" height="15" fill="rgb(236,31,14)"/><text x="734.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.20%)</title><rect x="740" y="308" width="2" height="15" fill="rgb(241,63,52)"/><text x="743.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="740" y="324" width="2" height="15" fill="rgb(242,73,12)"/><text x="743.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.56%)</title><rect x="726" y="276" width="19" height="15" fill="rgb(249,90,17)"/><text x="729.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="742" y="292" width="3" height="15" fill="rgb(243,209,24)"/><text x="745.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (1 samples, 0.20%)</title><rect x="742" y="308" width="3" height="15" fill="rgb(205,56,25)"/><text x="745.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.20%)</title><rect x="742" y="324" width="3" height="15" fill="rgb(205,126,7)"/><text x="745.00" y="334.50"></text></g><g><title>0x7fd3b2fb21a0 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="742" y="340" width="3" height="15" fill="rgb(239,154,47)"/><text x="745.00" y="350.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="745" y="276" width="2" height="15" fill="rgb(253,20,21)"/><text x="748.00" y="286.50"></text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (245 samples, 47.85%)</title><rect x="185" y="100" width="564" height="15" fill="rgb(207,95,38)"/><text x="188.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (244 samples, 47.66%)</title><rect x="187" y="116" width="562" height="15" fill="rgb(218,124,40)"/><text x="190.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (242 samples, 47.27%)</title><rect x="192" y="132" width="557" height="15" fill="rgb(253,120,33)"/><text x="195.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (242 samples, 47.27%)</title><rect x="192" y="148" width="557" height="15" fill="rgb(229,120,49)"/><text x="195.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (241 samples, 47.07%)</title><rect x="194" y="164" width="555" height="15" fill="rgb(227,2,14)"/><text x="197.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (231 samples, 45.12%)</title><rect x="217" y="180" width="532" height="15" fill="rgb(205,122,43)"/><text x="220.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (172 samples, 33.59%)</title><rect x="353" y="196" width="396" height="15" fill="rgb(210,90,1)"/><text x="356.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (128 samples, 25.00%)</title><rect x="454" y="212" width="295" height="15" fill="rgb(206,87,48)"/><text x="457.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py) (47 samples, 9.18%)</title><rect x="641" y="228" width="108" height="15" fill="rgb(231,47,2)"/><text x="644.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.54%)</title><rect x="719" y="244" width="30" height="15" fill="rgb(239,154,22)"/><text x="722.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 2.34%)</title><rect x="722" y="260" width="27" height="15" fill="rgb(211,146,39)"/><text x="725.00" y="270.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="747" y="276" width="2" height="15" fill="rgb(246,185,13)"/><text x="750.00" y="286.50"></text></g><g><title>profile_pyrt (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (246 samples, 48.05%)</title><rect x="185" y="68" width="567" height="15" fill="rgb(220,15,19)"/><text x="188.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (246 samples, 48.05%)</title><rect x="185" y="84" width="567" height="15" fill="rgb(215,43,15)"/><text x="188.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="749" y="100" width="3" height="15" fill="rgb(244,226,29)"/><text x="752.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="749" y="116" width="3" height="15" fill="rgb(253,59,43)"/><text x="752.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="749" y="132" width="3" height="15" fill="rgb(217,111,15)"/><text x="752.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="749" y="148" width="3" height="15" fill="rgb(239,22,7)"/><text x="752.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="749" y="164" width="3" height="15" fill="rgb(242,138,50)"/><text x="752.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.20%)</title><rect x="749" y="180" width="3" height="15" fill="rgb(241,135,25)"/><text x="752.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.20%)</title><rect x="749" y="196" width="3" height="15" fill="rgb(254,64,31)"/><text x="752.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="212" width="3" height="15" fill="rgb(207,18,29)"/><text x="752.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="228" width="3" height="15" fill="rgb(249,29,23)"/><text x="752.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="244" width="3" height="15" fill="rgb(221,222,30)"/><text x="752.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="749" y="260" width="3" height="15" fill="rgb(220,201,1)"/><text x="752.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="276" width="3" height="15" fill="rgb(230,203,50)"/><text x="752.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.20%)</title><rect x="749" y="292" width="3" height="15" fill="rgb(247,83,43)"/><text x="752.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="308" width="3" height="15" fill="rgb(226,154,31)"/><text x="752.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="324" width="3" height="15" fill="rgb(247,68,9)"/><text x="752.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="340" width="3" height="15" fill="rgb(250,33,49)"/><text x="752.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="749" y="356" width="3" height="15" fill="rgb(244,104,4)"/><text x="752.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="372" width="3" height="15" fill="rgb(229,159,39)"/><text x="752.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.20%)</title><rect x="749" y="388" width="3" height="15" fill="rgb(207,184,52)"/><text x="752.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="404" width="3" height="15" fill="rgb(247,42,24)"/><text x="752.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="420" width="3" height="15" fill="rgb(249,191,52)"/><text x="752.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="436" width="3" height="15" fill="rgb(207,120,27)"/><text x="752.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="749" y="452" width="3" height="15" fill="rgb(244,155,23)"/><text x="752.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="749" y="468" width="3" height="15" fill="rgb(226,219,39)"/><text x="752.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.20%)</title><rect x="749" y="484" width="3" height="15" fill="rgb(249,82,13)"/><text x="752.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.20%)</title><rect x="749" y="500" width="3" height="15" fill="rgb(246,135,14)"/><text x="752.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.20%)</title><rect x="749" y="516" width="3" height="15" fill="rgb(215,44,44)"/><text x="752.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.20%)</title><rect x="749" y="532" width="3" height="15" fill="rgb(234,189,22)"/><text x="752.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.20%)</title><rect x="749" y="548" width="3" height="15" fill="rgb(214,194,35)"/><text x="752.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.20%)</title><rect x="749" y="564" width="3" height="15" fill="rgb(229,78,23)"/><text x="752.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="580" width="3" height="15" fill="rgb(226,3,49)"/><text x="752.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.20%)</title><rect x="749" y="596" width="3" height="15" fill="rgb(246,36,50)"/><text x="752.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="612" width="3" height="15" fill="rgb(236,42,32)"/><text x="752.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="628" width="3" height="15" fill="rgb(207,197,43)"/><text x="752.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.20%)</title><rect x="749" y="644" width="3" height="15" fill="rgb(236,90,0)"/><text x="752.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="660" width="3" height="15" fill="rgb(238,78,4)"/><text x="752.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="676" width="3" height="15" fill="rgb(223,167,21)"/><text x="752.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.20%)</title><rect x="749" y="692" width="3" height="15" fill="rgb(245,224,19)"/><text x="752.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="708" width="3" height="15" fill="rgb(235,115,31)"/><text x="752.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="724" width="3" height="15" fill="rgb(216,63,25)"/><text x="752.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.20%)</title><rect x="749" y="740" width="3" height="15" fill="rgb(206,144,26)"/><text x="752.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.20%)</title><rect x="749" y="756" width="3" height="15" fill="rgb(215,38,28)"/><text x="752.00" y="766.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.20%)</title><rect x="749" y="772" width="3" height="15" fill="rgb(233,202,39)"/><text x="752.00" y="782.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.20%)</title><rect x="749" y="788" width="3" height="15" fill="rgb(208,120,38)"/><text x="752.00" y="798.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.20%)</title><rect x="749" y="804" width="3" height="15" fill="rgb(220,77,40)"/><text x="752.00" y="814.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="802" y="196" width="3" height="15" fill="rgb(242,52,38)"/><text x="805.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="802" y="212" width="3" height="15" fill="rgb(217,50,1)"/><text x="805.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (4 samples, 0.78%)</title><rect x="805" y="212" width="9" height="15" fill="rgb(217,26,29)"/><text x="808.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.39%)</title><rect x="809" y="228" width="5" height="15" fill="rgb(239,138,48)"/><text x="812.00" y="238.50"></text></g><g><title>0x7fd3b2e7c730 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="812" y="244" width="2" height="15" fill="rgb(208,31,48)"/><text x="815.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="835" y="372" width="2" height="15" fill="rgb(236,96,28)"/><text x="838.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="835" y="388" width="2" height="15" fill="rgb(216,177,8)"/><text x="838.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.20%)</title><rect x="835" y="404" width="2" height="15" fill="rgb(235,4,37)"/><text x="838.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="835" y="420" width="2" height="15" fill="rgb(223,105,31)"/><text x="838.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="835" y="436" width="2" height="15" fill="rgb(211,75,20)"/><text x="838.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="837" y="372" width="4" height="15" fill="rgb(220,216,32)"/><text x="840.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="837" y="388" width="4" height="15" fill="rgb(243,166,13)"/><text x="840.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="837" y="404" width="4" height="15" fill="rgb(247,126,42)"/><text x="840.00" y="414.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.39%)</title><rect x="837" y="420" width="4" height="15" fill="rgb(220,101,54)"/><text x="840.00" y="430.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (6 samples, 1.17%)</title><rect x="830" y="324" width="14" height="15" fill="rgb(228,60,9)"/><text x="833.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.78%)</title><rect x="835" y="340" width="9" height="15" fill="rgb(246,128,50)"/><text x="838.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.78%)</title><rect x="835" y="356" width="9" height="15" fill="rgb(230,172,35)"/><text x="838.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="841" y="372" width="3" height="15" fill="rgb(242,108,3)"/><text x="844.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="841" y="388" width="3" height="15" fill="rgb(230,163,45)"/><text x="844.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="841" y="404" width="3" height="15" fill="rgb(217,153,24)"/><text x="844.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="841" y="420" width="3" height="15" fill="rgb(254,169,40)"/><text x="844.00" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.78%)</title><rect x="853" y="340" width="9" height="15" fill="rgb(214,94,38)"/><text x="856.00" y="350.50"></text></g><g><title>0x7fd3b2e7cebc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="860" y="356" width="2" height="15" fill="rgb(238,190,0)"/><text x="863.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="865" y="356" width="2" height="15" fill="rgb(242,125,48)"/><text x="868.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="878" y="404" width="3" height="15" fill="rgb(237,162,12)"/><text x="881.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="878" y="388" width="5" height="15" fill="rgb(238,10,31)"/><text x="881.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="881" y="404" width="2" height="15" fill="rgb(218,167,44)"/><text x="884.00" y="414.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 1.95%)</title><rect x="862" y="340" width="23" height="15" fill="rgb(238,29,38)"/><text x="865.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.56%)</title><rect x="867" y="356" width="18" height="15" fill="rgb(238,203,1)"/><text x="870.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 1.37%)</title><rect x="869" y="372" width="16" height="15" fill="rgb(253,122,50)"/><text x="872.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.20%)</title><rect x="883" y="388" width="2" height="15" fill="rgb(244,9,14)"/><text x="886.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="883" y="404" width="2" height="15" fill="rgb(221,145,3)"/><text x="886.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.20%)</title><rect x="883" y="420" width="2" height="15" fill="rgb(217,137,39)"/><text x="886.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="883" y="436" width="2" height="15" fill="rgb(228,43,29)"/><text x="886.00" y="446.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="883" y="452" width="2" height="15" fill="rgb(249,164,45)"/><text x="886.00" y="462.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="883" y="468" width="2" height="15" fill="rgb(209,13,44)"/><text x="886.00" y="478.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="883" y="484" width="2" height="15" fill="rgb(206,133,26)"/><text x="886.00" y="494.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="885" y="372" width="3" height="15" fill="rgb(210,134,42)"/><text x="888.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="885" y="388" width="3" height="15" fill="rgb(238,162,42)"/><text x="888.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.20%)</title><rect x="885" y="404" width="3" height="15" fill="rgb(210,11,7)"/><text x="888.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="885" y="420" width="3" height="15" fill="rgb(211,185,22)"/><text x="888.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="885" y="436" width="3" height="15" fill="rgb(251,167,25)"/><text x="888.00" y="446.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="888" y="388" width="2" height="15" fill="rgb(237,63,10)"/><text x="891.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.98%)</title><rect x="885" y="356" width="12" height="15" fill="rgb(247,58,15)"/><text x="888.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (4 samples, 0.78%)</title><rect x="888" y="372" width="9" height="15" fill="rgb(251,172,24)"/><text x="891.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="890" y="388" width="7" height="15" fill="rgb(250,109,35)"/><text x="893.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (2 samples, 0.39%)</title><rect x="892" y="404" width="5" height="15" fill="rgb(215,97,24)"/><text x="895.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (2 samples, 0.39%)</title><rect x="892" y="420" width="5" height="15" fill="rgb(251,50,2)"/><text x="895.00" y="430.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (37 samples, 7.23%)</title><rect x="814" y="244" width="85" height="15" fill="rgb(205,29,40)"/><text x="817.00" y="254.50">clip (nump..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (35 samples, 6.84%)</title><rect x="818" y="260" width="81" height="15" fill="rgb(205,75,22)"/><text x="821.00" y="270.50">_wrapfunc..</text></g><g><title>array_clip (methods.c) (34 samples, 6.64%)</title><rect x="821" y="276" width="78" height="15" fill="rgb(243,63,1)"/><text x="824.00" y="286.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c) (34 samples, 6.64%)</title><rect x="821" y="292" width="78" height="15" fill="rgb(248,34,28)"/><text x="824.00" y="302.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py) (33 samples, 6.45%)</title><rect x="823" y="308" width="76" height="15" fill="rgb(208,103,38)"/><text x="826.00" y="318.50">_clip (n..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (24 samples, 4.69%)</title><rect x="844" y="324" width="55" height="15" fill="rgb(216,96,48)"/><text x="847.00" y="334.50">_clip..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.17%)</title><rect x="885" y="340" width="14" height="15" fill="rgb(208,14,25)"/><text x="888.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="897" y="356" width="2" height="15" fill="rgb(250,40,14)"/><text x="900.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="897" y="372" width="2" height="15" fill="rgb(227,93,45)"/><text x="900.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="897" y="388" width="2" height="15" fill="rgb(214,78,2)"/><text x="900.00" y="398.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (44 samples, 8.59%)</title><rect x="805" y="196" width="101" height="15" fill="rgb(248,205,21)"/><text x="808.00" y="206.50">relu (sklear..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (40 samples, 7.81%)</title><rect x="814" y="212" width="92" height="15" fill="rgb(211,176,36)"/><text x="817.00" y="222.50">clip (&lt;__a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (40 samples, 7.81%)</title><rect x="814" y="228" width="92" height="15" fill="rgb(207,213,31)"/><text x="817.00" y="238.50">array_impl..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.59%)</title><rect x="899" y="244" width="7" height="15" fill="rgb(205,192,8)"/><text x="902.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.39%)</title><rect x="901" y="260" width="5" height="15" fill="rgb(219,161,39)"/><text x="904.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.39%)</title><rect x="901" y="276" width="5" height="15" fill="rgb(205,26,14)"/><text x="904.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.39%)</title><rect x="901" y="292" width="5" height="15" fill="rgb(209,45,27)"/><text x="904.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.20%)</title><rect x="924" y="212" width="3" height="15" fill="rgb(225,148,30)"/><text x="927.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="927" y="228" width="2" height="15" fill="rgb(219,7,26)"/><text x="930.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.20%)</title><rect x="934" y="260" width="2" height="15" fill="rgb(213,90,36)"/><text x="937.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.20%)</title><rect x="934" y="276" width="2" height="15" fill="rgb(212,196,7)"/><text x="937.00" y="286.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.20%)</title><rect x="934" y="292" width="2" height="15" fill="rgb(221,132,54)"/><text x="937.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.39%)</title><rect x="936" y="292" width="5" height="15" fill="rgb(215,67,11)"/><text x="939.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.39%)</title><rect x="936" y="308" width="5" height="15" fill="rgb(226,69,31)"/><text x="939.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="938" y="324" width="3" height="15" fill="rgb(215,52,18)"/><text x="941.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.20%)</title><rect x="941" y="292" width="2" height="15" fill="rgb(238,182,53)"/><text x="944.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.78%)</title><rect x="936" y="260" width="9" height="15" fill="rgb(231,117,34)"/><text x="939.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 0.78%)</title><rect x="936" y="276" width="9" height="15" fill="rgb(207,44,10)"/><text x="939.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="943" y="292" width="2" height="15" fill="rgb(216,210,2)"/><text x="946.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="945" y="260" width="3" height="15" fill="rgb(229,90,12)"/><text x="948.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="948" y="260" width="2" height="15" fill="rgb(205,223,9)"/><text x="951.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="950" y="260" width="2" height="15" fill="rgb(213,139,43)"/><text x="953.00" y="270.50"></text></g><g><title>0x7fd3b2088820 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="950" y="276" width="2" height="15" fill="rgb(253,215,25)"/><text x="953.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.15%)</title><rect x="929" y="228" width="25" height="15" fill="rgb(220,136,23)"/><text x="932.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (10 samples, 1.95%)</title><rect x="931" y="244" width="23" height="15" fill="rgb(230,49,20)"/><text x="934.00" y="254.50">P..</text></g><g><title>npyiter_iternext_sizeone (nditer_templ.c.src) (1 samples, 0.20%)</title><rect x="952" y="260" width="2" height="15" fill="rgb(217,75,12)"/><text x="955.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (24 samples, 4.69%)</title><rect x="906" y="196" width="55" height="15" fill="rgb(247,53,46)"/><text x="909.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 2.93%)</title><rect x="927" y="212" width="34" height="15" fill="rgb(239,103,41)"/><text x="930.00" y="222.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (3 samples, 0.59%)</title><rect x="954" y="228" width="7" height="15" fill="rgb(207,147,33)"/><text x="957.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="968" y="212" width="3" height="15" fill="rgb(244,170,38)"/><text x="971.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="968" y="228" width="3" height="15" fill="rgb(216,4,42)"/><text x="971.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="968" y="244" width="3" height="15" fill="rgb(212,88,7)"/><text x="971.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.39%)</title><rect x="973" y="276" width="4" height="15" fill="rgb(225,158,53)"/><text x="976.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.39%)</title><rect x="973" y="292" width="4" height="15" fill="rgb(207,180,23)"/><text x="976.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.39%)</title><rect x="973" y="308" width="4" height="15" fill="rgb(221,223,38)"/><text x="976.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.39%)</title><rect x="973" y="324" width="4" height="15" fill="rgb(235,198,23)"/><text x="976.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.39%)</title><rect x="973" y="340" width="4" height="15" fill="rgb(233,146,40)"/><text x="976.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="980" y="340" width="2" height="15" fill="rgb(215,186,24)"/><text x="983.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.20%)</title><rect x="980" y="356" width="2" height="15" fill="rgb(241,34,10)"/><text x="983.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.20%)</title><rect x="980" y="372" width="2" height="15" fill="rgb(233,120,16)"/><text x="983.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.59%)</title><rect x="977" y="324" width="7" height="15" fill="rgb(207,37,7)"/><text x="980.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="982" y="340" width="2" height="15" fill="rgb(252,221,43)"/><text x="985.00" y="350.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.20%)</title><rect x="984" y="324" width="3" height="15" fill="rgb(250,156,6)"/><text x="987.00" y="334.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.20%)</title><rect x="987" y="356" width="2" height="15" fill="rgb(214,118,18)"/><text x="990.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.59%)</title><rect x="987" y="324" width="7" height="15" fill="rgb(207,21,23)"/><text x="990.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.59%)</title><rect x="987" y="340" width="7" height="15" fill="rgb(239,94,26)"/><text x="990.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.39%)</title><rect x="989" y="356" width="5" height="15" fill="rgb(231,39,22)"/><text x="992.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="989" y="372" width="5" height="15" fill="rgb(236,68,34)"/><text x="992.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="991" y="388" width="3" height="15" fill="rgb(233,208,9)"/><text x="994.00" y="398.50"></text></g><g><title>0x7fd3b20892c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="991" y="404" width="3" height="15" fill="rgb(230,130,7)"/><text x="994.00" y="414.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (1 samples, 0.20%)</title><rect x="994" y="324" width="2" height="15" fill="rgb(254,125,37)"/><text x="997.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.20%)</title><rect x="994" y="340" width="2" height="15" fill="rgb(251,8,44)"/><text x="997.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.20%)</title><rect x="994" y="356" width="2" height="15" fill="rgb(216,141,18)"/><text x="997.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="994" y="372" width="2" height="15" fill="rgb(241,20,49)"/><text x="997.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.76%)</title><rect x="977" y="308" width="21" height="15" fill="rgb(244,14,16)"/><text x="980.00" y="318.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.20%)</title><rect x="996" y="324" width="2" height="15" fill="rgb(229,214,10)"/><text x="999.00" y="334.50"></text></g><g><title>array_max (methods.c) (13 samples, 2.54%)</title><rect x="971" y="212" width="30" height="15" fill="rgb(235,37,11)"/><text x="974.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.54%)</title><rect x="971" y="228" width="30" height="15" fill="rgb(230,121,35)"/><text x="974.00" y="238.50">fo..</text></g><g><title>_amax (numpy/core/_methods.py) (12 samples, 2.34%)</title><rect x="973" y="244" width="28" height="15" fill="rgb(241,47,44)"/><text x="976.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 2.34%)</title><rect x="973" y="260" width="28" height="15" fill="rgb(244,156,7)"/><text x="976.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 1.95%)</title><rect x="977" y="276" width="24" height="15" fill="rgb(206,70,12)"/><text x="980.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 1.95%)</title><rect x="977" y="292" width="24" height="15" fill="rgb(221,208,27)"/><text x="980.00" y="302.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.20%)</title><rect x="998" y="308" width="3" height="15" fill="rgb(244,102,41)"/><text x="1001.00" y="318.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.20%)</title><rect x="998" y="324" width="3" height="15" fill="rgb(254,24,7)"/><text x="1001.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.20%)</title><rect x="1001" y="212" width="2" height="15" fill="rgb(235,139,12)"/><text x="1004.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="1001" y="228" width="2" height="15" fill="rgb(253,173,20)"/><text x="1004.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1005" y="308" width="2" height="15" fill="rgb(249,174,27)"/><text x="1008.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1005" y="324" width="2" height="15" fill="rgb(207,193,34)"/><text x="1008.00" y="334.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.59%)</title><rect x="1003" y="212" width="7" height="15" fill="rgb(233,216,15)"/><text x="1006.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1003" y="228" width="7" height="15" fill="rgb(242,36,29)"/><text x="1006.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1003" y="244" width="7" height="15" fill="rgb(209,146,23)"/><text x="1006.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1003" y="260" width="7" height="15" fill="rgb(237,229,16)"/><text x="1006.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1003" y="276" width="7" height="15" fill="rgb(235,206,18)"/><text x="1006.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="1005" y="292" width="5" height="15" fill="rgb(228,56,46)"/><text x="1008.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1007" y="308" width="3" height="15" fill="rgb(238,90,40)"/><text x="1010.00" y="318.50"></text></g><g><title>array_sum (methods.c) (2 samples, 0.39%)</title><rect x="1010" y="212" width="4" height="15" fill="rgb(249,157,6)"/><text x="1013.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.39%)</title><rect x="1010" y="228" width="4" height="15" fill="rgb(213,53,54)"/><text x="1013.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (2 samples, 0.39%)</title><rect x="1010" y="244" width="4" height="15" fill="rgb(251,35,51)"/><text x="1013.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1010" y="260" width="4" height="15" fill="rgb(209,132,16)"/><text x="1013.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="1012" y="276" width="2" height="15" fill="rgb(241,171,18)"/><text x="1015.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="1012" y="292" width="2" height="15" fill="rgb(241,194,20)"/><text x="1015.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="1012" y="308" width="2" height="15" fill="rgb(242,65,48)"/><text x="1015.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="1012" y="324" width="2" height="15" fill="rgb(242,146,3)"/><text x="1015.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="1012" y="340" width="2" height="15" fill="rgb(212,104,48)"/><text x="1015.00" y="350.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1019" y="244" width="2" height="15" fill="rgb(247,148,10)"/><text x="1022.00" y="254.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1019" y="260" width="2" height="15" fill="rgb(238,96,22)"/><text x="1022.00" y="270.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1019" y="276" width="2" height="15" fill="rgb(248,118,52)"/><text x="1022.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.39%)</title><rect x="1021" y="292" width="5" height="15" fill="rgb(229,133,42)"/><text x="1024.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.20%)</title><rect x="1024" y="308" width="2" height="15" fill="rgb(230,187,38)"/><text x="1027.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.59%)</title><rect x="1021" y="276" width="7" height="15" fill="rgb(228,133,33)"/><text x="1024.00" y="286.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.20%)</title><rect x="1026" y="292" width="2" height="15" fill="rgb(218,195,44)"/><text x="1029.00" y="302.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.20%)</title><rect x="1028" y="276" width="2" height="15" fill="rgb(210,49,19)"/><text x="1031.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.98%)</title><rect x="1021" y="260" width="12" height="15" fill="rgb(248,121,17)"/><text x="1024.00" y="270.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c) (1 samples, 0.20%)</title><rect x="1030" y="276" width="3" height="15" fill="rgb(216,141,40)"/><text x="1033.00" y="286.50"></text></g><g><title>0x7fd3b2087b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1033" y="292" width="2" height="15" fill="rgb(231,116,38)"/><text x="1036.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.37%)</title><rect x="1021" y="244" width="16" height="15" fill="rgb(251,63,35)"/><text x="1024.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1033" y="260" width="4" height="15" fill="rgb(208,192,6)"/><text x="1036.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (2 samples, 0.39%)</title><rect x="1033" y="276" width="4" height="15" fill="rgb(223,75,13)"/><text x="1036.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1035" y="292" width="2" height="15" fill="rgb(226,150,24)"/><text x="1038.00" y="302.50"></text></g><g><title>0x7fd3b3038ba5 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1035" y="308" width="2" height="15" fill="rgb(223,178,33)"/><text x="1038.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1037" y="244" width="3" height="15" fill="rgb(239,120,19)"/><text x="1040.00" y="254.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1037" y="260" width="3" height="15" fill="rgb(213,50,30)"/><text x="1040.00" y="270.50"></text></g><g><title>0x7fd3b20885b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1037" y="276" width="3" height="15" fill="rgb(205,105,11)"/><text x="1040.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.15%)</title><rect x="1017" y="228" width="25" height="15" fill="rgb(242,38,50)"/><text x="1020.00" y="238.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1040" y="244" width="2" height="15" fill="rgb(243,190,19)"/><text x="1043.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1040" y="260" width="2" height="15" fill="rgb(234,121,51)"/><text x="1043.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1040" y="276" width="2" height="15" fill="rgb(223,72,9)"/><text x="1043.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1040" y="292" width="2" height="15" fill="rgb(221,75,31)"/><text x="1043.00" y="302.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (36 samples, 7.03%)</title><rect x="961" y="196" width="83" height="15" fill="rgb(218,206,7)"/><text x="964.00" y="206.50">softmax (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.54%)</title><rect x="1014" y="212" width="30" height="15" fill="rgb(215,140,36)"/><text x="1017.00" y="222.50">uf..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1042" y="228" width="2" height="15" fill="rgb(227,213,54)"/><text x="1045.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.39%)</title><rect x="1044" y="212" width="5" height="15" fill="rgb(215,145,23)"/><text x="1047.00" y="222.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.20%)</title><rect x="1049" y="228" width="2" height="15" fill="rgb(227,123,26)"/><text x="1052.00" y="238.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.20%)</title><rect x="1049" y="244" width="2" height="15" fill="rgb(223,206,33)"/><text x="1052.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1051" y="228" width="3" height="15" fill="rgb(212,73,31)"/><text x="1054.00" y="238.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1051" y="244" width="3" height="15" fill="rgb(216,211,26)"/><text x="1054.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1054" y="260" width="2" height="15" fill="rgb(251,134,33)"/><text x="1057.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1054" y="276" width="2" height="15" fill="rgb(250,181,51)"/><text x="1057.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1056" y="260" width="2" height="15" fill="rgb(247,175,20)"/><text x="1059.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1056" y="276" width="2" height="15" fill="rgb(238,34,25)"/><text x="1059.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1054" y="228" width="6" height="15" fill="rgb(250,201,15)"/><text x="1057.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1054" y="244" width="6" height="15" fill="rgb(234,94,0)"/><text x="1057.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="1058" y="260" width="2" height="15" fill="rgb(229,72,53)"/><text x="1061.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="1058" y="276" width="2" height="15" fill="rgb(228,227,40)"/><text x="1061.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.56%)</title><rect x="1044" y="196" width="19" height="15" fill="rgb(234,52,27)"/><text x="1047.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.17%)</title><rect x="1049" y="212" width="14" height="15" fill="rgb(205,104,12)"/><text x="1052.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1060" y="228" width="3" height="15" fill="rgb(223,48,24)"/><text x="1063.00" y="238.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (122 samples, 23.83%)</title><rect x="784" y="180" width="281" height="15" fill="rgb(228,207,51)"/><text x="787.00" y="190.50">_forward_pass (sklearn/neural_network..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="1063" y="196" width="2" height="15" fill="rgb(215,149,26)"/><text x="1066.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1065" y="196" width="2" height="15" fill="rgb(220,224,44)"/><text x="1068.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1065" y="212" width="2" height="15" fill="rgb(220,3,26)"/><text x="1068.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1065" y="228" width="2" height="15" fill="rgb(227,213,43)"/><text x="1068.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1065" y="244" width="2" height="15" fill="rgb(246,200,38)"/><text x="1068.00" y="254.50"></text></g><g><title>array_empty (multiarraymodule.c) (2 samples, 0.39%)</title><rect x="1065" y="180" width="5" height="15" fill="rgb(254,51,29)"/><text x="1068.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.20%)</title><rect x="1067" y="196" width="3" height="15" fill="rgb(246,41,41)"/><text x="1070.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.20%)</title><rect x="1067" y="212" width="3" height="15" fill="rgb(234,106,16)"/><text x="1070.00" y="222.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="1067" y="228" width="3" height="15" fill="rgb(254,189,22)"/><text x="1070.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.39%)</title><rect x="1081" y="196" width="5" height="15" fill="rgb(245,54,35)"/><text x="1084.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.17%)</title><rect x="1086" y="196" width="14" height="15" fill="rgb(214,188,18)"/><text x="1089.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="1095" y="212" width="5" height="15" fill="rgb(228,16,7)"/><text x="1098.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.39%)</title><rect x="1107" y="212" width="4" height="15" fill="rgb(253,1,1)"/><text x="1110.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.20%)</title><rect x="1109" y="228" width="2" height="15" fill="rgb(228,132,47)"/><text x="1112.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 1.17%)</title><rect x="1100" y="196" width="13" height="15" fill="rgb(207,152,43)"/><text x="1103.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="1111" y="212" width="2" height="15" fill="rgb(205,189,31)"/><text x="1114.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.20%)</title><rect x="1113" y="196" width="3" height="15" fill="rgb(206,70,47)"/><text x="1116.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.20%)</title><rect x="1116" y="196" width="2" height="15" fill="rgb(248,96,25)"/><text x="1119.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.39%)</title><rect x="1118" y="196" width="5" height="15" fill="rgb(254,168,14)"/><text x="1121.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.39%)</title><rect x="1118" y="212" width="5" height="15" fill="rgb(226,160,9)"/><text x="1121.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (157 samples, 30.66%)</title><rect x="765" y="164" width="362" height="15" fill="rgb(223,81,25)"/><text x="768.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perc..</text></g><g><title>check_array (sklearn/utils/validation.py) (25 samples, 4.88%)</title><rect x="1070" y="180" width="57" height="15" fill="rgb(218,122,14)"/><text x="1073.00" y="190.50">check_..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.39%)</title><rect x="1123" y="196" width="4" height="15" fill="rgb(246,213,15)"/><text x="1126.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.20%)</title><rect x="1125" y="212" width="2" height="15" fill="rgb(248,196,35)"/><text x="1128.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="1127" y="164" width="5" height="15" fill="rgb(210,20,22)"/><text x="1130.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.39%)</title><rect x="1127" y="180" width="5" height="15" fill="rgb(238,10,47)"/><text x="1130.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.39%)</title><rect x="1127" y="196" width="5" height="15" fill="rgb(210,145,54)"/><text x="1130.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.20%)</title><rect x="1160" y="196" width="2" height="15" fill="rgb(215,221,32)"/><text x="1163.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (178 samples, 34.77%)</title><rect x="761" y="132" width="410" height="15" fill="rgb(228,58,42)"/><text x="764.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py) (178 samples, 34.77%)</title><rect x="761" y="148" width="410" height="15" fill="rgb(221,33,7)"/><text x="764.00" y="158.50">predict_proba (sklearn/neural_network/_multilayer_perce..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 3.32%)</title><rect x="1132" y="164" width="39" height="15" fill="rgb(246,92,14)"/><text x="1135.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 2.93%)</title><rect x="1136" y="180" width="35" height="15" fill="rgb(228,120,9)"/><text x="1139.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 0.78%)</title><rect x="1162" y="196" width="9" height="15" fill="rgb(205,72,13)"/><text x="1165.00" y="206.50"></text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (183 samples, 35.74%)</title><rect x="752" y="100" width="421" height="15" fill="rgb(219,129,46)"/><text x="755.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (182 samples, 35.55%)</title><rect x="754" y="116" width="419" height="15" fill="rgb(232,146,6)"/><text x="757.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="1171" y="132" width="2" height="15" fill="rgb(211,192,51)"/><text x="1174.00" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="1173" y="212" width="3" height="15" fill="rgb(229,209,20)"/><text x="1176.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.20%)</title><rect x="1173" y="228" width="3" height="15" fill="rgb(205,127,36)"/><text x="1176.00" y="238.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="1173" y="244" width="3" height="15" fill="rgb(210,74,34)"/><text x="1176.00" y="254.50"></text></g><g><title>profile_skl (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (185 samples, 36.13%)</title><rect x="752" y="68" width="426" height="15" fill="rgb(217,172,3)"/><text x="755.00" y="78.50">profile_skl (bench_MLPClassifier_default_b_cl_1_4_12_float..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (185 samples, 36.13%)</title><rect x="752" y="84" width="426" height="15" fill="rgb(253,214,20)"/><text x="755.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_flo..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="1173" y="100" width="5" height="15" fill="rgb(220,172,53)"/><text x="1176.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (2 samples, 0.39%)</title><rect x="1173" y="116" width="5" height="15" fill="rgb(209,148,52)"/><text x="1176.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (2 samples, 0.39%)</title><rect x="1173" y="132" width="5" height="15" fill="rgb(224,197,43)"/><text x="1176.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="1173" y="148" width="5" height="15" fill="rgb(230,57,18)"/><text x="1176.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="1173" y="164" width="5" height="15" fill="rgb(227,59,8)"/><text x="1176.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="1173" y="180" width="5" height="15" fill="rgb(209,135,28)"/><text x="1176.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="1173" y="196" width="5" height="15" fill="rgb(248,92,32)"/><text x="1176.00" y="206.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="1176" y="212" width="2" height="15" fill="rgb(248,66,26)"/><text x="1179.00" y="222.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="1176" y="228" width="2" height="15" fill="rgb(232,221,4)"/><text x="1179.00" y="238.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.20%)</title><rect x="1178" y="180" width="2" height="15" fill="rgb(209,168,27)"/><text x="1181.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1178" y="196" width="2" height="15" fill="rgb(206,147,5)"/><text x="1181.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1178" y="212" width="2" height="15" fill="rgb(218,156,49)"/><text x="1181.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1178" y="228" width="2" height="15" fill="rgb(228,49,1)"/><text x="1181.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1178" y="244" width="2" height="15" fill="rgb(205,125,45)"/><text x="1181.00" y="254.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.20%)</title><rect x="1178" y="260" width="2" height="15" fill="rgb(231,90,3)"/><text x="1181.00" y="270.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.20%)</title><rect x="1178" y="276" width="2" height="15" fill="rgb(232,109,15)"/><text x="1181.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.20%)</title><rect x="1180" y="196" width="3" height="15" fill="rgb(239,202,27)"/><text x="1183.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1180" y="212" width="3" height="15" fill="rgb(233,175,11)"/><text x="1183.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1180" y="228" width="3" height="15" fill="rgb(223,227,11)"/><text x="1183.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1180" y="244" width="3" height="15" fill="rgb(231,181,3)"/><text x="1183.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.20%)</title><rect x="1180" y="260" width="3" height="15" fill="rgb(215,69,44)"/><text x="1183.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="1180" y="276" width="3" height="15" fill="rgb(249,108,33)"/><text x="1183.00" y="286.50"></text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="1180" y="292" width="3" height="15" fill="rgb(229,51,30)"/><text x="1183.00" y="302.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="1180" y="308" width="3" height="15" fill="rgb(211,193,20)"/><text x="1183.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="1180" y="324" width="3" height="15" fill="rgb(222,61,0)"/><text x="1183.00" y="334.50"></text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="1180" y="340" width="3" height="15" fill="rgb(217,47,15)"/><text x="1183.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1180" y="356" width="3" height="15" fill="rgb(215,51,40)"/><text x="1183.00" y="366.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (2 samples, 0.39%)</title><rect x="1180" y="180" width="5" height="15" fill="rgb(245,55,25)"/><text x="1183.00" y="190.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (1 samples, 0.20%)</title><rect x="1183" y="196" width="2" height="15" fill="rgb(210,84,2)"/><text x="1186.00" y="206.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.20%)</title><rect x="1183" y="212" width="2" height="15" fill="rgb(230,155,26)"/><text x="1186.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.20%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(217,206,11)"/><text x="1186.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(207,202,12)"/><text x="1186.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(205,112,9)"/><text x="1186.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(236,175,38)"/><text x="1186.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(205,119,34)"/><text x="1186.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.20%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(237,97,54)"/><text x="1186.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1183" y="324" width="2" height="15" fill="rgb(243,149,34)"/><text x="1186.00" y="334.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="1185" y="180" width="2" height="15" fill="rgb(221,89,4)"/><text x="1188.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(212,148,5)"/><text x="1188.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(254,129,15)"/><text x="1188.00" y="222.50"></text></g><g><title>all (512 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(251,153,4)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (512 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(220,149,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>start (bench_MLPClassifier_default_b_cl_1_4_12_float_.py) (5 samples, 0.98%)</title><rect x="1178" y="68" width="12" height="15" fill="rgb(223,136,3)"/><text x="1181.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py) (5 samples, 0.98%)</title><rect x="1178" y="84" width="12" height="15" fill="rgb(246,133,26)"/><text x="1181.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.98%)</title><rect x="1178" y="100" width="12" height="15" fill="rgb(217,158,29)"/><text x="1181.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (5 samples, 0.98%)</title><rect x="1178" y="116" width="12" height="15" fill="rgb(222,224,19)"/><text x="1181.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (5 samples, 0.98%)</title><rect x="1178" y="132" width="12" height="15" fill="rgb(221,2,11)"/><text x="1181.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (5 samples, 0.98%)</title><rect x="1178" y="148" width="12" height="15" fill="rgb(213,134,3)"/><text x="1181.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (5 samples, 0.98%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(208,184,49)"/><text x="1181.00" y="174.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(247,205,48)"/><text x="1190.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(226,197,28)"/><text x="1190.00" y="206.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(237,25,22)"/><text x="1190.00" y="222.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(238,30,29)"/><text x="1190.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(226,137,27)"/><text x="1190.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(206,111,2)"/><text x="1190.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(233,49,45)"/><text x="1190.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(243,116,21)"/><text x="1190.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(234,85,22)"/><text x="1190.00" y="318.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(221,71,40)"/><text x="1190.00" y="334.50"></text></g></g></svg>