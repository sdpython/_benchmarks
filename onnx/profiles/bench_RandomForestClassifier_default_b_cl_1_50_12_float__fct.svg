<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(216,136,48)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(242,118,17)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(240,82,18)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(242,186,26)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(247,111,3)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(230,196,9)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(216,13,5)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(245,219,25)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(217,105,38)"/><text x="16.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(236,54,54)"/><text x="16.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.93%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(228,40,34)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(218,191,33)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(215,153,39)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(225,41,32)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(229,92,10)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(228,114,34)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.93%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(237,77,14)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(235,49,46)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(248,210,54)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(237,67,33)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(225,75,47)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(223,149,13)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.93%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(223,154,11)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(216,229,34)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(227,171,50)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(240,18,15)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(226,52,35)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(238,18,24)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.93%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(235,8,29)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(254,226,43)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(238,105,46)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(234,104,41)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(208,138,3)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(205,158,40)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(251,69,0)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(210,113,18)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(223,54,14)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.93%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(218,9,53)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(240,69,33)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(239,56,1)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(244,86,24)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(220,116,4)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(208,20,24)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(208,82,54)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(231,186,39)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="10" y="852" width="10" height="15" fill="rgb(240,170,9)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="868" width="3" height="15" fill="rgb(206,140,10)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(207,146,37)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(252,16,23)"/><text x="20.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(231,3,50)"/><text x="20.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(210,108,25)"/><text x="20.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(245,178,39)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(239,198,40)"/><text x="20.00" y="974.50"></text></g><g><title>__new__ (&lt;string&gt;) (1 samples, 0.31%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(246,126,54)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="10" y="196" width="14" height="15" fill="rgb(230,212,22)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="10" y="212" width="14" height="15" fill="rgb(214,43,20)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="10" y="228" width="14" height="15" fill="rgb(225,218,34)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="10" y="244" width="14" height="15" fill="rgb(207,122,44)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.24%)</title><rect x="10" y="260" width="14" height="15" fill="rgb(217,136,7)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="10" y="276" width="14" height="15" fill="rgb(206,77,14)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="292" width="4" height="15" fill="rgb(243,101,2)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="308" width="4" height="15" fill="rgb(212,151,1)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="324" width="4" height="15" fill="rgb(223,179,45)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="340" width="4" height="15" fill="rgb(224,50,33)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="20" y="356" width="4" height="15" fill="rgb(236,87,28)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="372" width="4" height="15" fill="rgb(234,162,50)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.31%)</title><rect x="20" y="388" width="4" height="15" fill="rgb(252,60,13)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="404" width="4" height="15" fill="rgb(216,63,31)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="420" width="4" height="15" fill="rgb(239,110,47)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="436" width="4" height="15" fill="rgb(213,89,54)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="20" y="452" width="4" height="15" fill="rgb(237,1,21)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="468" width="4" height="15" fill="rgb(210,169,39)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="484" width="4" height="15" fill="rgb(218,102,39)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="500" width="4" height="15" fill="rgb(222,80,52)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="516" width="4" height="15" fill="rgb(227,19,3)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="532" width="4" height="15" fill="rgb(236,120,51)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="20" y="548" width="4" height="15" fill="rgb(251,183,12)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="564" width="4" height="15" fill="rgb(253,35,36)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.31%)</title><rect x="20" y="580" width="4" height="15" fill="rgb(249,188,54)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="596" width="4" height="15" fill="rgb(248,43,10)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="612" width="4" height="15" fill="rgb(241,67,23)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="628" width="4" height="15" fill="rgb(241,48,40)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="20" y="644" width="4" height="15" fill="rgb(210,20,39)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="660" width="4" height="15" fill="rgb(245,125,27)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="676" width="4" height="15" fill="rgb(206,34,41)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="692" width="4" height="15" fill="rgb(228,37,19)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="708" width="4" height="15" fill="rgb(228,19,38)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="724" width="4" height="15" fill="rgb(213,78,42)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="20" y="740" width="4" height="15" fill="rgb(233,80,2)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="756" width="4" height="15" fill="rgb(219,85,9)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.31%)</title><rect x="20" y="772" width="4" height="15" fill="rgb(243,142,3)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="788" width="4" height="15" fill="rgb(250,220,25)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="804" width="4" height="15" fill="rgb(218,181,48)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="820" width="4" height="15" fill="rgb(254,116,5)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="20" y="836" width="4" height="15" fill="rgb(222,201,39)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="852" width="4" height="15" fill="rgb(214,178,50)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="868" width="4" height="15" fill="rgb(209,34,42)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="884" width="4" height="15" fill="rgb(228,106,36)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="900" width="4" height="15" fill="rgb(216,151,18)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(218,105,7)"/><text x="23.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(253,203,34)"/><text x="23.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(241,156,45)"/><text x="23.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="20" y="964" width="4" height="15" fill="rgb(208,194,16)"/><text x="23.00" y="974.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="980" width="4" height="15" fill="rgb(216,126,29)"/><text x="23.00" y="990.50"></text></g><g><title>0x7f383220b995 (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="996" width="4" height="15" fill="rgb(210,162,45)"/><text x="23.00" y="1006.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1012" width="4" height="15" fill="rgb(243,156,10)"/><text x="23.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1028" width="4" height="15" fill="rgb(216,206,28)"/><text x="23.00" y="1038.50"></text></g><g><title>0x7f383220b258 (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1044" width="4" height="15" fill="rgb(246,98,21)"/><text x="23.00" y="1054.50"></text></g><g><title>0x7f3832258d7a (ld-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1060" width="4" height="15" fill="rgb(228,136,23)"/><text x="23.00" y="1070.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1076" width="4" height="15" fill="rgb(229,123,54)"/><text x="23.00" y="1086.50"></text></g><g><title>0x7f3832259345 (ld-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1092" width="4" height="15" fill="rgb(219,136,32)"/><text x="23.00" y="1102.50"></text></g><g><title>0x7f3832251fec (ld-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1108" width="4" height="15" fill="rgb(206,103,19)"/><text x="23.00" y="1118.50"></text></g><g><title>0x7f3832250491 (ld-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="1124" width="4" height="15" fill="rgb(225,63,2)"/><text x="23.00" y="1134.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="24" y="1572" width="4" height="15" fill="rgb(254,189,54)"/><text x="27.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="24" y="1588" width="4" height="15" fill="rgb(208,176,15)"/><text x="27.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="24" y="1604" width="4" height="15" fill="rgb(212,77,50)"/><text x="27.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="24" y="1620" width="4" height="15" fill="rgb(210,205,23)"/><text x="27.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="24" y="1636" width="4" height="15" fill="rgb(217,166,20)"/><text x="27.00" y="1646.50"></text></g><g><title>__init__ (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="24" y="1652" width="4" height="15" fill="rgb(252,136,12)"/><text x="27.00" y="1662.50"></text></g><g><title>_tokenize (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="24" y="1668" width="4" height="15" fill="rgb(248,171,21)"/><text x="27.00" y="1678.50"></text></g><g><title>get_lexer (jinja2/lexer.py) (1 samples, 0.31%)</title><rect x="24" y="1684" width="4" height="15" fill="rgb(227,62,9)"/><text x="27.00" y="1694.50"></text></g><g><title>__init__ (jinja2/lexer.py) (1 samples, 0.31%)</title><rect x="24" y="1700" width="4" height="15" fill="rgb(217,31,43)"/><text x="27.00" y="1710.50"></text></g><g><title>&lt;lambda&gt; (jinja2/lexer.py) (1 samples, 0.31%)</title><rect x="24" y="1716" width="4" height="15" fill="rgb(219,215,52)"/><text x="27.00" y="1726.50"></text></g><g><title>compile (re.py) (1 samples, 0.31%)</title><rect x="24" y="1732" width="4" height="15" fill="rgb(225,30,32)"/><text x="27.00" y="1742.50"></text></g><g><title>_compile (re.py) (1 samples, 0.31%)</title><rect x="24" y="1748" width="4" height="15" fill="rgb(224,157,42)"/><text x="27.00" y="1758.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="24" y="1764" width="4" height="15" fill="rgb(220,150,38)"/><text x="27.00" y="1774.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.31%)</title><rect x="24" y="1780" width="4" height="15" fill="rgb(220,195,8)"/><text x="27.00" y="1790.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="24" y="1796" width="4" height="15" fill="rgb(219,86,10)"/><text x="27.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="1476" width="7" height="15" fill="rgb(205,163,19)"/><text x="27.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="1492" width="7" height="15" fill="rgb(237,147,42)"/><text x="27.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="1508" width="7" height="15" fill="rgb(215,13,54)"/><text x="27.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="24" y="1524" width="7" height="15" fill="rgb(232,182,52)"/><text x="27.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="1540" width="7" height="15" fill="rgb(247,176,17)"/><text x="27.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.62%)</title><rect x="24" y="1556" width="7" height="15" fill="rgb(249,138,11)"/><text x="27.00" y="1566.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="28" y="1572" width="3" height="15" fill="rgb(210,126,29)"/><text x="31.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="28" y="1588" width="3" height="15" fill="rgb(228,213,44)"/><text x="31.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="28" y="1604" width="3" height="15" fill="rgb(222,132,4)"/><text x="31.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="28" y="1620" width="3" height="15" fill="rgb(250,148,44)"/><text x="31.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="28" y="1636" width="3" height="15" fill="rgb(225,46,52)"/><text x="31.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.31%)</title><rect x="28" y="1652" width="3" height="15" fill="rgb(224,19,39)"/><text x="31.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.31%)</title><rect x="28" y="1668" width="3" height="15" fill="rgb(222,98,25)"/><text x="31.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.31%)</title><rect x="28" y="1684" width="3" height="15" fill="rgb(222,135,54)"/><text x="31.00" y="1694.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.31%)</title><rect x="28" y="1700" width="3" height="15" fill="rgb(239,210,53)"/><text x="31.00" y="1710.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.31%)</title><rect x="28" y="1716" width="3" height="15" fill="rgb(213,133,10)"/><text x="31.00" y="1726.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.31%)</title><rect x="28" y="1732" width="3" height="15" fill="rgb(240,20,15)"/><text x="31.00" y="1742.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.31%)</title><rect x="28" y="1748" width="3" height="15" fill="rgb(239,36,30)"/><text x="31.00" y="1758.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.31%)</title><rect x="28" y="1764" width="3" height="15" fill="rgb(221,205,21)"/><text x="31.00" y="1774.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.31%)</title><rect x="28" y="1780" width="3" height="15" fill="rgb(225,64,36)"/><text x="31.00" y="1790.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.93%)</title><rect x="24" y="1364" width="11" height="15" fill="rgb(223,140,3)"/><text x="27.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="1380" width="11" height="15" fill="rgb(231,97,13)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="1396" width="11" height="15" fill="rgb(233,113,45)"/><text x="27.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="1412" width="11" height="15" fill="rgb(253,41,14)"/><text x="27.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="24" y="1428" width="11" height="15" fill="rgb(215,52,33)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="1444" width="11" height="15" fill="rgb(242,141,49)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.93%)</title><rect x="24" y="1460" width="11" height="15" fill="rgb(244,89,53)"/><text x="27.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.31%)</title><rect x="31" y="1476" width="4" height="15" fill="rgb(218,228,30)"/><text x="34.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.31%)</title><rect x="31" y="1492" width="4" height="15" fill="rgb(225,115,37)"/><text x="34.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="31" y="1508" width="4" height="15" fill="rgb(220,185,19)"/><text x="34.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.31%)</title><rect x="31" y="1524" width="4" height="15" fill="rgb(217,199,34)"/><text x="34.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="31" y="1540" width="4" height="15" fill="rgb(228,37,24)"/><text x="34.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="31" y="1556" width="4" height="15" fill="rgb(250,25,6)"/><text x="34.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.31%)</title><rect x="31" y="1572" width="4" height="15" fill="rgb(235,129,20)"/><text x="34.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.31%)</title><rect x="31" y="1588" width="4" height="15" fill="rgb(221,186,16)"/><text x="34.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="31" y="1604" width="4" height="15" fill="rgb(212,96,41)"/><text x="34.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.31%)</title><rect x="31" y="1620" width="4" height="15" fill="rgb(236,117,32)"/><text x="34.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="31" y="1636" width="4" height="15" fill="rgb(209,65,34)"/><text x="34.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="31" y="1652" width="4" height="15" fill="rgb(212,57,28)"/><text x="34.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="31" y="1668" width="4" height="15" fill="rgb(228,215,10)"/><text x="34.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="24" y="1348" width="15" height="15" fill="rgb(248,136,30)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/naive_bayes.py) (1 samples, 0.31%)</title><rect x="35" y="1364" width="4" height="15" fill="rgb(253,79,17)"/><text x="38.00" y="1374.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1380" width="4" height="15" fill="rgb(250,215,44)"/><text x="38.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="756" width="18" height="15" fill="rgb(223,120,6)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.55%)</title><rect x="24" y="772" width="18" height="15" fill="rgb(210,121,5)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="788" width="18" height="15" fill="rgb(207,89,0)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="804" width="18" height="15" fill="rgb(234,164,31)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="820" width="18" height="15" fill="rgb(225,59,47)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="24" y="836" width="18" height="15" fill="rgb(228,165,11)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="852" width="18" height="15" fill="rgb(229,55,37)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.55%)</title><rect x="24" y="868" width="18" height="15" fill="rgb(218,122,19)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="884" width="18" height="15" fill="rgb(210,227,50)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="900" width="18" height="15" fill="rgb(236,71,54)"/><text x="27.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="916" width="18" height="15" fill="rgb(222,21,6)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="932" width="18" height="15" fill="rgb(235,14,35)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="948" width="18" height="15" fill="rgb(231,44,34)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="964" width="18" height="15" fill="rgb(225,129,12)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="24" y="980" width="18" height="15" fill="rgb(229,177,21)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="996" width="18" height="15" fill="rgb(217,35,51)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.55%)</title><rect x="24" y="1012" width="18" height="15" fill="rgb(253,137,19)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1028" width="18" height="15" fill="rgb(247,41,30)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1044" width="18" height="15" fill="rgb(219,171,18)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1060" width="18" height="15" fill="rgb(216,172,11)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="24" y="1076" width="18" height="15" fill="rgb(234,227,25)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1092" width="18" height="15" fill="rgb(231,145,44)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.55%)</title><rect x="24" y="1108" width="18" height="15" fill="rgb(232,115,29)"/><text x="27.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1124" width="18" height="15" fill="rgb(217,98,15)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1140" width="18" height="15" fill="rgb(207,84,52)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1156" width="18" height="15" fill="rgb(242,51,34)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1172" width="18" height="15" fill="rgb(211,76,21)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1188" width="18" height="15" fill="rgb(240,22,7)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="24" y="1204" width="18" height="15" fill="rgb(241,169,10)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1220" width="18" height="15" fill="rgb(210,69,29)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 1.55%)</title><rect x="24" y="1236" width="18" height="15" fill="rgb(215,44,13)"/><text x="27.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1252" width="18" height="15" fill="rgb(210,191,16)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1268" width="18" height="15" fill="rgb(247,134,5)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1284" width="18" height="15" fill="rgb(253,149,22)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1300" width="18" height="15" fill="rgb(249,179,0)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="24" y="1316" width="18" height="15" fill="rgb(220,215,39)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="24" y="1332" width="18" height="15" fill="rgb(216,175,13)"/><text x="27.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(238,226,27)"/><text x="42.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(209,219,10)"/><text x="42.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="484" width="22" height="15" fill="rgb(220,2,1)"/><text x="27.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="500" width="22" height="15" fill="rgb(221,103,29)"/><text x="27.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="516" width="22" height="15" fill="rgb(226,165,32)"/><text x="27.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="532" width="22" height="15" fill="rgb(228,229,31)"/><text x="27.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="24" y="548" width="22" height="15" fill="rgb(246,148,4)"/><text x="27.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="564" width="22" height="15" fill="rgb(209,86,16)"/><text x="27.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 1.86%)</title><rect x="24" y="580" width="22" height="15" fill="rgb(234,89,22)"/><text x="27.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="596" width="22" height="15" fill="rgb(254,218,44)"/><text x="27.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="612" width="22" height="15" fill="rgb(237,182,19)"/><text x="27.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="628" width="22" height="15" fill="rgb(240,99,11)"/><text x="27.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="24" y="644" width="22" height="15" fill="rgb(248,61,50)"/><text x="27.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="660" width="22" height="15" fill="rgb(207,126,15)"/><text x="27.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 1.86%)</title><rect x="24" y="676" width="22" height="15" fill="rgb(242,211,40)"/><text x="27.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="692" width="22" height="15" fill="rgb(206,42,12)"/><text x="27.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="708" width="22" height="15" fill="rgb(253,123,25)"/><text x="27.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="24" y="724" width="22" height="15" fill="rgb(254,216,23)"/><text x="27.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="24" y="740" width="22" height="15" fill="rgb(240,150,18)"/><text x="27.00" y="750.50">e..</text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="42" y="756" width="4" height="15" fill="rgb(215,143,16)"/><text x="45.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="42" y="772" width="4" height="15" fill="rgb(245,207,26)"/><text x="45.00" y="782.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.31%)</title><rect x="46" y="724" width="4" height="15" fill="rgb(216,148,51)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="740" width="4" height="15" fill="rgb(215,82,49)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="756" width="4" height="15" fill="rgb(250,216,33)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="772" width="4" height="15" fill="rgb(220,72,6)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="788" width="4" height="15" fill="rgb(248,90,20)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="804" width="4" height="15" fill="rgb(248,18,54)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.31%)</title><rect x="46" y="820" width="4" height="15" fill="rgb(227,23,13)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="836" width="4" height="15" fill="rgb(246,225,50)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="852" width="4" height="15" fill="rgb(240,26,13)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="868" width="4" height="15" fill="rgb(214,156,37)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="884" width="4" height="15" fill="rgb(231,115,47)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="900" width="4" height="15" fill="rgb(206,177,7)"/><text x="49.00" y="910.50"></text></g><g><title>0x7f38074b440e (?) (1 samples, 0.31%)</title><rect x="46" y="916" width="4" height="15" fill="rgb(223,192,54)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="932" width="4" height="15" fill="rgb(207,198,7)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="948" width="4" height="15" fill="rgb(228,147,30)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="964" width="4" height="15" fill="rgb(226,221,0)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="980" width="4" height="15" fill="rgb(213,109,34)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="996" width="4" height="15" fill="rgb(240,79,47)"/><text x="49.00" y="1006.50"></text></g><g><title>0x7f380726dcd2 (?) (1 samples, 0.31%)</title><rect x="46" y="1012" width="4" height="15" fill="rgb(205,195,12)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1028" width="4" height="15" fill="rgb(243,87,46)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1044" width="4" height="15" fill="rgb(234,164,1)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1060" width="4" height="15" fill="rgb(217,140,54)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1076" width="4" height="15" fill="rgb(206,106,7)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1092" width="4" height="15" fill="rgb(230,36,41)"/><text x="49.00" y="1102.50"></text></g><g><title>0x7f38069630e5 (?) (1 samples, 0.31%)</title><rect x="46" y="1108" width="4" height="15" fill="rgb(215,30,27)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(207,28,18)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(225,120,15)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(215,155,13)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(237,158,40)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(208,163,44)"/><text x="49.00" y="1198.50"></text></g><g><title>0x7f38066e7e68 (?) (1 samples, 0.31%)</title><rect x="46" y="1204" width="4" height="15" fill="rgb(224,36,33)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1220" width="4" height="15" fill="rgb(242,31,24)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1236" width="4" height="15" fill="rgb(245,132,37)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1252" width="4" height="15" fill="rgb(222,15,3)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1268" width="4" height="15" fill="rgb(236,68,14)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1284" width="4" height="15" fill="rgb(251,228,36)"/><text x="49.00" y="1294.50"></text></g><g><title>0x7f38064782fb (?) (1 samples, 0.31%)</title><rect x="46" y="1300" width="4" height="15" fill="rgb(211,111,19)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1316" width="4" height="15" fill="rgb(214,4,53)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1332" width="4" height="15" fill="rgb(226,131,39)"/><text x="49.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1348" width="4" height="15" fill="rgb(235,100,28)"/><text x="49.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1364" width="4" height="15" fill="rgb(225,34,32)"/><text x="49.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1380" width="4" height="15" fill="rgb(228,38,2)"/><text x="49.00" y="1390.50"></text></g><g><title>0x7f380625c153 (?) (1 samples, 0.31%)</title><rect x="46" y="1396" width="4" height="15" fill="rgb(209,41,28)"/><text x="49.00" y="1406.50"></text></g><g><title>0x7f380625ac13 (?) (1 samples, 0.31%)</title><rect x="46" y="1412" width="4" height="15" fill="rgb(210,128,49)"/><text x="49.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1428" width="4" height="15" fill="rgb(219,171,49)"/><text x="49.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1444" width="4" height="15" fill="rgb(215,144,30)"/><text x="49.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1460" width="4" height="15" fill="rgb(233,43,11)"/><text x="49.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1476" width="4" height="15" fill="rgb(235,175,10)"/><text x="49.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1492" width="4" height="15" fill="rgb(234,126,29)"/><text x="49.00" y="1502.50"></text></g><g><title>0x7f3805ff7181 (?) (1 samples, 0.31%)</title><rect x="46" y="1508" width="4" height="15" fill="rgb(205,221,27)"/><text x="49.00" y="1518.50"></text></g><g><title>0x7f3805ffa1c9 (?) (1 samples, 0.31%)</title><rect x="46" y="1524" width="4" height="15" fill="rgb(241,14,3)"/><text x="49.00" y="1534.50"></text></g><g><title>0x7f3806026167 (?) (1 samples, 0.31%)</title><rect x="46" y="1540" width="4" height="15" fill="rgb(223,68,50)"/><text x="49.00" y="1550.50"></text></g><g><title>0x7f3806021b64 (?) (1 samples, 0.31%)</title><rect x="46" y="1556" width="4" height="15" fill="rgb(227,192,18)"/><text x="49.00" y="1566.50"></text></g><g><title>0x7f380600507b (?) (1 samples, 0.31%)</title><rect x="46" y="1572" width="4" height="15" fill="rgb(225,17,1)"/><text x="49.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.31%)</title><rect x="46" y="1588" width="4" height="15" fill="rgb(242,152,0)"/><text x="49.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.31%)</title><rect x="46" y="1604" width="4" height="15" fill="rgb(221,9,44)"/><text x="49.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.31%)</title><rect x="46" y="1620" width="4" height="15" fill="rgb(235,1,35)"/><text x="49.00" y="1630.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="46" y="1636" width="4" height="15" fill="rgb(241,29,7)"/><text x="49.00" y="1646.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.48%)</title><rect x="24" y="436" width="29" height="15" fill="rgb(242,76,41)"/><text x="27.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="24" y="452" width="29" height="15" fill="rgb(224,52,43)"/><text x="27.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="24" y="468" width="29" height="15" fill="rgb(230,41,51)"/><text x="27.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="484" width="7" height="15" fill="rgb(231,118,2)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="46" y="500" width="7" height="15" fill="rgb(215,143,35)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="516" width="7" height="15" fill="rgb(225,103,49)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.62%)</title><rect x="46" y="532" width="7" height="15" fill="rgb(220,80,1)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="548" width="7" height="15" fill="rgb(232,50,33)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="564" width="7" height="15" fill="rgb(221,170,47)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="580" width="7" height="15" fill="rgb(212,6,44)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="46" y="596" width="7" height="15" fill="rgb(232,12,8)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="612" width="7" height="15" fill="rgb(244,225,18)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.62%)</title><rect x="46" y="628" width="7" height="15" fill="rgb(216,35,49)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="644" width="7" height="15" fill="rgb(230,48,16)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="660" width="7" height="15" fill="rgb(249,29,28)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="676" width="7" height="15" fill="rgb(226,118,35)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="46" y="692" width="7" height="15" fill="rgb(245,79,2)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="708" width="7" height="15" fill="rgb(238,99,24)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.31%)</title><rect x="50" y="724" width="3" height="15" fill="rgb(249,42,4)"/><text x="53.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="740" width="3" height="15" fill="rgb(228,103,25)"/><text x="53.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="756" width="3" height="15" fill="rgb(238,223,7)"/><text x="53.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="772" width="3" height="15" fill="rgb(244,83,45)"/><text x="53.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="788" width="3" height="15" fill="rgb(218,94,25)"/><text x="53.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="804" width="3" height="15" fill="rgb(208,69,10)"/><text x="53.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.31%)</title><rect x="50" y="820" width="3" height="15" fill="rgb(210,128,38)"/><text x="53.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="836" width="3" height="15" fill="rgb(213,18,5)"/><text x="53.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="852" width="3" height="15" fill="rgb(211,0,15)"/><text x="53.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="868" width="3" height="15" fill="rgb(249,81,15)"/><text x="53.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="884" width="3" height="15" fill="rgb(239,56,43)"/><text x="53.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="900" width="3" height="15" fill="rgb(254,57,26)"/><text x="53.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.31%)</title><rect x="50" y="916" width="3" height="15" fill="rgb(224,197,7)"/><text x="53.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="932" width="3" height="15" fill="rgb(242,72,28)"/><text x="53.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="948" width="3" height="15" fill="rgb(232,11,53)"/><text x="53.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="964" width="3" height="15" fill="rgb(214,101,29)"/><text x="53.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="980" width="3" height="15" fill="rgb(231,72,11)"/><text x="53.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="996" width="3" height="15" fill="rgb(247,36,28)"/><text x="53.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.31%)</title><rect x="50" y="1012" width="3" height="15" fill="rgb(240,71,25)"/><text x="53.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1028" width="3" height="15" fill="rgb(214,158,22)"/><text x="53.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1044" width="3" height="15" fill="rgb(251,72,26)"/><text x="53.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1060" width="3" height="15" fill="rgb(223,155,29)"/><text x="53.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1076" width="3" height="15" fill="rgb(224,21,5)"/><text x="53.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1092" width="3" height="15" fill="rgb(225,215,54)"/><text x="53.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.31%)</title><rect x="50" y="1108" width="3" height="15" fill="rgb(239,145,12)"/><text x="53.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.31%)</title><rect x="50" y="1124" width="3" height="15" fill="rgb(238,15,30)"/><text x="53.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1140" width="3" height="15" fill="rgb(224,47,26)"/><text x="53.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1156" width="3" height="15" fill="rgb(230,157,33)"/><text x="53.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1172" width="3" height="15" fill="rgb(223,218,40)"/><text x="53.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1188" width="3" height="15" fill="rgb(242,122,45)"/><text x="53.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1204" width="3" height="15" fill="rgb(206,33,44)"/><text x="53.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1220" width="3" height="15" fill="rgb(218,123,23)"/><text x="53.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1236" width="3" height="15" fill="rgb(248,191,11)"/><text x="53.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1252" width="3" height="15" fill="rgb(208,170,32)"/><text x="53.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 2.79%)</title><rect x="24" y="340" width="33" height="15" fill="rgb(248,144,30)"/><text x="27.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.79%)</title><rect x="24" y="356" width="33" height="15" fill="rgb(217,33,28)"/><text x="27.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.79%)</title><rect x="24" y="372" width="33" height="15" fill="rgb(229,118,47)"/><text x="27.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.79%)</title><rect x="24" y="388" width="33" height="15" fill="rgb(244,35,48)"/><text x="27.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.79%)</title><rect x="24" y="404" width="33" height="15" fill="rgb(230,78,25)"/><text x="27.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.79%)</title><rect x="24" y="420" width="33" height="15" fill="rgb(242,74,36)"/><text x="27.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.31%)</title><rect x="53" y="436" width="4" height="15" fill="rgb(248,133,52)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="452" width="4" height="15" fill="rgb(230,72,3)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="468" width="4" height="15" fill="rgb(213,55,33)"/><text x="56.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="484" width="4" height="15" fill="rgb(249,119,40)"/><text x="56.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="500" width="4" height="15" fill="rgb(254,54,50)"/><text x="56.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="516" width="4" height="15" fill="rgb(249,29,36)"/><text x="56.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.31%)</title><rect x="53" y="532" width="4" height="15" fill="rgb(219,178,39)"/><text x="56.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="548" width="4" height="15" fill="rgb(217,5,27)"/><text x="56.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="564" width="4" height="15" fill="rgb(219,159,30)"/><text x="56.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="580" width="4" height="15" fill="rgb(242,105,21)"/><text x="56.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="596" width="4" height="15" fill="rgb(237,13,32)"/><text x="56.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="612" width="4" height="15" fill="rgb(219,94,19)"/><text x="56.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.31%)</title><rect x="53" y="628" width="4" height="15" fill="rgb(227,32,6)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="644" width="4" height="15" fill="rgb(242,42,29)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="660" width="4" height="15" fill="rgb(231,156,13)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="676" width="4" height="15" fill="rgb(226,95,43)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="692" width="4" height="15" fill="rgb(225,73,7)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="708" width="4" height="15" fill="rgb(236,25,28)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.31%)</title><rect x="53" y="724" width="4" height="15" fill="rgb(247,147,4)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="740" width="4" height="15" fill="rgb(240,170,25)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="756" width="4" height="15" fill="rgb(245,222,22)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="772" width="4" height="15" fill="rgb(214,135,35)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="788" width="4" height="15" fill="rgb(216,25,10)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="804" width="4" height="15" fill="rgb(208,107,9)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py) (1 samples, 0.31%)</title><rect x="53" y="820" width="4" height="15" fill="rgb(215,170,1)"/><text x="56.00" y="830.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.31%)</title><rect x="53" y="836" width="4" height="15" fill="rgb(216,194,12)"/><text x="56.00" y="846.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.31%)</title><rect x="53" y="852" width="4" height="15" fill="rgb(209,141,34)"/><text x="56.00" y="862.50"></text></g><g><title>_create_ (enum.py) (1 samples, 0.31%)</title><rect x="53" y="868" width="4" height="15" fill="rgb(249,213,21)"/><text x="56.00" y="878.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.31%)</title><rect x="53" y="884" width="4" height="15" fill="rgb(218,102,0)"/><text x="56.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 3.10%)</title><rect x="24" y="244" width="37" height="15" fill="rgb(214,42,3)"/><text x="27.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="24" y="260" width="37" height="15" fill="rgb(206,77,35)"/><text x="27.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="24" y="276" width="37" height="15" fill="rgb(246,154,8)"/><text x="27.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="24" y="292" width="37" height="15" fill="rgb(212,208,36)"/><text x="27.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.10%)</title><rect x="24" y="308" width="37" height="15" fill="rgb(222,137,39)"/><text x="27.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="24" y="324" width="37" height="15" fill="rgb(231,40,48)"/><text x="27.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.31%)</title><rect x="57" y="340" width="4" height="15" fill="rgb(240,217,54)"/><text x="60.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="356" width="4" height="15" fill="rgb(247,80,18)"/><text x="60.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="372" width="4" height="15" fill="rgb(216,70,7)"/><text x="60.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="388" width="4" height="15" fill="rgb(237,174,49)"/><text x="60.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="404" width="4" height="15" fill="rgb(220,210,44)"/><text x="60.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="420" width="4" height="15" fill="rgb(244,82,20)"/><text x="60.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="436" width="4" height="15" fill="rgb(235,42,27)"/><text x="60.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="452" width="4" height="15" fill="rgb(254,203,2)"/><text x="60.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="468" width="4" height="15" fill="rgb(230,178,5)"/><text x="60.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="484" width="4" height="15" fill="rgb(244,165,32)"/><text x="60.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="500" width="4" height="15" fill="rgb(209,15,2)"/><text x="60.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="516" width="4" height="15" fill="rgb(235,127,1)"/><text x="60.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="532" width="4" height="15" fill="rgb(208,108,45)"/><text x="60.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="548" width="4" height="15" fill="rgb(218,66,28)"/><text x="60.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="564" width="4" height="15" fill="rgb(252,6,36)"/><text x="60.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.31%)</title><rect x="57" y="580" width="4" height="15" fill="rgb(221,213,19)"/><text x="60.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="596" width="4" height="15" fill="rgb(221,152,24)"/><text x="60.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="612" width="4" height="15" fill="rgb(244,22,37)"/><text x="60.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="628" width="4" height="15" fill="rgb(224,182,39)"/><text x="60.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="644" width="4" height="15" fill="rgb(245,7,43)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="660" width="4" height="15" fill="rgb(253,9,50)"/><text x="60.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.31%)</title><rect x="57" y="676" width="4" height="15" fill="rgb(237,99,1)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="692" width="4" height="15" fill="rgb(207,9,6)"/><text x="60.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="708" width="4" height="15" fill="rgb(208,45,23)"/><text x="60.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="724" width="4" height="15" fill="rgb(235,129,18)"/><text x="60.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="740" width="4" height="15" fill="rgb(242,209,14)"/><text x="60.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="756" width="4" height="15" fill="rgb(240,8,10)"/><text x="60.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="772" width="4" height="15" fill="rgb(243,27,26)"/><text x="60.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="788" width="4" height="15" fill="rgb(243,7,51)"/><text x="60.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="804" width="4" height="15" fill="rgb(207,9,53)"/><text x="60.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="820" width="4" height="15" fill="rgb(209,218,28)"/><text x="60.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="836" width="4" height="15" fill="rgb(236,186,40)"/><text x="60.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="852" width="4" height="15" fill="rgb(218,29,19)"/><text x="60.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="868" width="4" height="15" fill="rgb(230,174,1)"/><text x="60.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="884" width="4" height="15" fill="rgb(234,66,17)"/><text x="60.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.31%)</title><rect x="57" y="900" width="4" height="15" fill="rgb(244,133,41)"/><text x="60.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="916" width="4" height="15" fill="rgb(205,213,54)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="932" width="4" height="15" fill="rgb(230,76,22)"/><text x="60.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="948" width="4" height="15" fill="rgb(224,25,22)"/><text x="60.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="964" width="4" height="15" fill="rgb(248,185,37)"/><text x="60.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="980" width="4" height="15" fill="rgb(227,59,52)"/><text x="60.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="996" width="4" height="15" fill="rgb(238,166,51)"/><text x="60.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1012" width="4" height="15" fill="rgb(213,92,46)"/><text x="60.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1028" width="4" height="15" fill="rgb(236,228,25)"/><text x="60.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1044" width="4" height="15" fill="rgb(212,226,54)"/><text x="60.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="1060" width="4" height="15" fill="rgb(234,48,10)"/><text x="60.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1076" width="4" height="15" fill="rgb(205,105,47)"/><text x="60.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.31%)</title><rect x="57" y="1092" width="4" height="15" fill="rgb(253,14,39)"/><text x="60.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1108" width="4" height="15" fill="rgb(234,27,18)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1124" width="4" height="15" fill="rgb(249,49,12)"/><text x="60.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1140" width="4" height="15" fill="rgb(232,9,42)"/><text x="60.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="1156" width="4" height="15" fill="rgb(215,112,45)"/><text x="60.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1172" width="4" height="15" fill="rgb(211,52,16)"/><text x="60.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py) (1 samples, 0.31%)</title><rect x="57" y="1188" width="4" height="15" fill="rgb(237,105,47)"/><text x="60.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1204" width="4" height="15" fill="rgb(222,145,34)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1220" width="4" height="15" fill="rgb(227,164,13)"/><text x="60.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1236" width="4" height="15" fill="rgb(237,115,17)"/><text x="60.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="1252" width="4" height="15" fill="rgb(237,194,16)"/><text x="60.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1268" width="4" height="15" fill="rgb(229,92,1)"/><text x="60.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/ocsp.py) (1 samples, 0.31%)</title><rect x="57" y="1284" width="4" height="15" fill="rgb(234,89,16)"/><text x="60.00" y="1294.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.31%)</title><rect x="57" y="1300" width="4" height="15" fill="rgb(238,228,41)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="10" y="68" width="54" height="15" fill="rgb(231,133,27)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="10" y="84" width="54" height="15" fill="rgb(229,202,33)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="10" y="100" width="54" height="15" fill="rgb(206,169,2)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.64%)</title><rect x="10" y="116" width="54" height="15" fill="rgb(212,65,52)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="10" y="132" width="54" height="15" fill="rgb(229,165,36)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (15 samples, 4.64%)</title><rect x="10" y="148" width="54" height="15" fill="rgb(242,77,21)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="10" y="164" width="54" height="15" fill="rgb(234,198,38)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="10" y="180" width="54" height="15" fill="rgb(243,68,45)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.41%)</title><rect x="24" y="196" width="40" height="15" fill="rgb(252,60,15)"/><text x="27.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.41%)</title><rect x="24" y="212" width="40" height="15" fill="rgb(229,36,54)"/><text x="27.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.41%)</title><rect x="24" y="228" width="40" height="15" fill="rgb(214,195,31)"/><text x="27.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.31%)</title><rect x="61" y="244" width="3" height="15" fill="rgb(218,166,32)"/><text x="64.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="260" width="3" height="15" fill="rgb(210,46,2)"/><text x="64.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="276" width="3" height="15" fill="rgb(214,186,36)"/><text x="64.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="292" width="3" height="15" fill="rgb(253,18,42)"/><text x="64.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="308" width="3" height="15" fill="rgb(235,54,20)"/><text x="64.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="324" width="3" height="15" fill="rgb(248,17,39)"/><text x="64.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="340" width="3" height="15" fill="rgb(227,168,44)"/><text x="64.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="356" width="3" height="15" fill="rgb(225,171,47)"/><text x="64.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.31%)</title><rect x="61" y="372" width="3" height="15" fill="rgb(207,64,1)"/><text x="64.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="388" width="3" height="15" fill="rgb(213,133,48)"/><text x="64.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="404" width="3" height="15" fill="rgb(210,219,41)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="420" width="3" height="15" fill="rgb(210,146,36)"/><text x="64.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="436" width="3" height="15" fill="rgb(224,48,38)"/><text x="64.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="452" width="3" height="15" fill="rgb(207,127,0)"/><text x="64.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="468" width="3" height="15" fill="rgb(208,157,15)"/><text x="64.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="484" width="3" height="15" fill="rgb(208,8,38)"/><text x="64.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.31%)</title><rect x="61" y="500" width="3" height="15" fill="rgb(226,189,43)"/><text x="64.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="516" width="3" height="15" fill="rgb(215,197,34)"/><text x="64.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="532" width="3" height="15" fill="rgb(211,213,13)"/><text x="64.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="548" width="3" height="15" fill="rgb(241,50,31)"/><text x="64.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="564" width="3" height="15" fill="rgb(252,54,30)"/><text x="64.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="580" width="3" height="15" fill="rgb(245,203,21)"/><text x="64.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="596" width="3" height="15" fill="rgb(229,23,24)"/><text x="64.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="612" width="3" height="15" fill="rgb(205,111,42)"/><text x="64.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.31%)</title><rect x="61" y="628" width="3" height="15" fill="rgb(249,90,39)"/><text x="64.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="644" width="3" height="15" fill="rgb(216,201,37)"/><text x="64.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="660" width="3" height="15" fill="rgb(207,185,33)"/><text x="64.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="676" width="3" height="15" fill="rgb(238,184,13)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="692" width="3" height="15" fill="rgb(253,201,35)"/><text x="64.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="708" width="3" height="15" fill="rgb(215,16,9)"/><text x="64.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="724" width="3" height="15" fill="rgb(244,201,10)"/><text x="64.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="740" width="3" height="15" fill="rgb(218,66,34)"/><text x="64.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="756" width="3" height="15" fill="rgb(227,135,47)"/><text x="64.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.31%)</title><rect x="61" y="772" width="3" height="15" fill="rgb(206,164,3)"/><text x="64.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="788" width="3" height="15" fill="rgb(233,103,10)"/><text x="64.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="804" width="3" height="15" fill="rgb(218,76,36)"/><text x="64.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="820" width="3" height="15" fill="rgb(210,227,32)"/><text x="64.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="836" width="3" height="15" fill="rgb(207,105,51)"/><text x="64.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="852" width="3" height="15" fill="rgb(223,156,42)"/><text x="64.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="868" width="3" height="15" fill="rgb(240,153,1)"/><text x="64.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="884" width="3" height="15" fill="rgb(238,144,41)"/><text x="64.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.31%)</title><rect x="61" y="900" width="3" height="15" fill="rgb(245,35,28)"/><text x="64.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="916" width="3" height="15" fill="rgb(228,109,26)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="932" width="3" height="15" fill="rgb(228,25,3)"/><text x="64.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="948" width="3" height="15" fill="rgb(252,43,2)"/><text x="64.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="964" width="3" height="15" fill="rgb(234,11,37)"/><text x="64.00" y="974.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="980" width="3" height="15" fill="rgb(226,65,15)"/><text x="64.00" y="990.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="996" width="3" height="15" fill="rgb(226,179,45)"/><text x="64.00" y="1006.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (1 samples, 0.31%)</title><rect x="64" y="100" width="4" height="15" fill="rgb(252,147,52)"/><text x="67.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="64" y="116" width="4" height="15" fill="rgb(219,169,37)"/><text x="67.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="64" y="132" width="4" height="15" fill="rgb(243,76,19)"/><text x="67.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="64" y="148" width="4" height="15" fill="rgb(213,38,13)"/><text x="67.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="64" y="164" width="4" height="15" fill="rgb(240,198,31)"/><text x="67.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.31%)</title><rect x="64" y="180" width="4" height="15" fill="rgb(246,31,25)"/><text x="67.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py) (1 samples, 0.31%)</title><rect x="64" y="196" width="4" height="15" fill="rgb(229,105,14)"/><text x="67.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="212" width="4" height="15" fill="rgb(253,174,47)"/><text x="67.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="228" width="4" height="15" fill="rgb(205,28,29)"/><text x="67.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="244" width="4" height="15" fill="rgb(236,89,32)"/><text x="67.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="260" width="4" height="15" fill="rgb(245,158,16)"/><text x="67.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="276" width="4" height="15" fill="rgb(252,151,34)"/><text x="67.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="292" width="4" height="15" fill="rgb(211,140,46)"/><text x="67.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="308" width="4" height="15" fill="rgb(221,212,5)"/><text x="67.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="324" width="4" height="15" fill="rgb(209,44,49)"/><text x="67.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="64" y="340" width="4" height="15" fill="rgb(234,169,20)"/><text x="67.00" y="350.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (2 samples, 0.62%)</title><rect x="64" y="68" width="8" height="15" fill="rgb(214,52,45)"/><text x="67.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (2 samples, 0.62%)</title><rect x="64" y="84" width="8" height="15" fill="rgb(233,130,36)"/><text x="67.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="68" y="100" width="4" height="15" fill="rgb(244,192,42)"/><text x="71.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="68" y="116" width="4" height="15" fill="rgb(208,205,52)"/><text x="71.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="68" y="132" width="4" height="15" fill="rgb(245,77,39)"/><text x="71.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="68" y="148" width="4" height="15" fill="rgb(231,104,31)"/><text x="71.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="68" y="164" width="4" height="15" fill="rgb(218,135,2)"/><text x="71.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.31%)</title><rect x="68" y="180" width="4" height="15" fill="rgb(237,184,23)"/><text x="71.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py) (1 samples, 0.31%)</title><rect x="68" y="196" width="4" height="15" fill="rgb(235,14,0)"/><text x="71.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py) (1 samples, 0.31%)</title><rect x="68" y="212" width="4" height="15" fill="rgb(217,74,23)"/><text x="71.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="228" width="4" height="15" fill="rgb(206,180,28)"/><text x="71.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;)#7}, void, onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, pybind11::name, pybind11::is_method, pybind11::sibling, char [40]&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;)#7}&amp;&amp;, void (*)(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [40])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.539] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="244" width="4" height="15" fill="rgb(254,106,27)"/><text x="71.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="260" width="4" height="15" fill="rgb(247,58,10)"/><text x="71.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="276" width="4" height="15" fill="rgb(246,183,50)"/><text x="71.00" y="286.50"></text></g><g><title>std::_Function_handler&lt;onnxruntime::common::Status(std::shared_ptr&lt;onnxruntime::Model&gt;&amp;), onnxruntime::InferenceSession::Load(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;)::{lambda(std::shared_ptr&lt;onnxruntime::Model&gt;&amp;)#1}&gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="292" width="4" height="15" fill="rgb(239,20,47)"/><text x="71.00" y="302.50"></text></g><g><title>google::protobuf::MessageLite::ParseFromZeroCopyStream (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="308" width="4" height="15" fill="rgb(241,162,14)"/><text x="71.00" y="318.50"></text></g><g><title>google::protobuf::MessageLite::ParseFromCodedStream (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="324" width="4" height="15" fill="rgb(249,136,14)"/><text x="71.00" y="334.50"></text></g><g><title>onnx::ModelProto::MergePartialFromCodedStream (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="340" width="4" height="15" fill="rgb(246,225,16)"/><text x="71.00" y="350.50"></text></g><g><title>google::protobuf::internal::WireFormatLite::ReadMessage&lt;onnx::GraphProto&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="356" width="4" height="15" fill="rgb(224,48,23)"/><text x="71.00" y="366.50"></text></g><g><title>onnx::GraphProto::MergePartialFromCodedStream (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="372" width="4" height="15" fill="rgb(213,48,31)"/><text x="71.00" y="382.50"></text></g><g><title>google::protobuf::internal::WireFormatLite::ReadMessage&lt;onnx::NodeProto&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="388" width="4" height="15" fill="rgb(236,144,14)"/><text x="71.00" y="398.50"></text></g><g><title>onnx::NodeProto::MergePartialFromCodedStream (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="404" width="4" height="15" fill="rgb(229,76,50)"/><text x="71.00" y="414.50"></text></g><g><title>google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="68" y="420" width="4" height="15" fill="rgb(252,74,35)"/><text x="71.00" y="430.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="68" y="436" width="4" height="15" fill="rgb(254,211,48)"/><text x="71.00" y="446.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (1 samples, 0.31%)</title><rect x="72" y="68" width="3" height="15" fill="rgb(219,221,28)"/><text x="75.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (1 samples, 0.31%)</title><rect x="72" y="84" width="3" height="15" fill="rgb(235,69,39)"/><text x="75.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (1 samples, 0.31%)</title><rect x="72" y="100" width="3" height="15" fill="rgb(245,36,50)"/><text x="75.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="72" y="116" width="3" height="15" fill="rgb(249,26,2)"/><text x="75.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="72" y="132" width="3" height="15" fill="rgb(231,167,31)"/><text x="75.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="72" y="148" width="3" height="15" fill="rgb(207,63,19)"/><text x="75.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="72" y="164" width="3" height="15" fill="rgb(224,69,19)"/><text x="75.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.31%)</title><rect x="72" y="180" width="3" height="15" fill="rgb(249,85,51)"/><text x="75.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.31%)</title><rect x="72" y="196" width="3" height="15" fill="rgb(227,102,52)"/><text x="75.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.31%)</title><rect x="72" y="212" width="3" height="15" fill="rgb(241,153,52)"/><text x="75.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.31%)</title><rect x="72" y="228" width="3" height="15" fill="rgb(234,130,35)"/><text x="75.00" y="238.50"></text></g><g><title>0x7f37f2c21422 (?) (1 samples, 0.31%)</title><rect x="72" y="244" width="3" height="15" fill="rgb(248,95,37)"/><text x="75.00" y="254.50"></text></g><g><title>0x7f37f2c2789e (?) (1 samples, 0.31%)</title><rect x="72" y="260" width="3" height="15" fill="rgb(222,39,8)"/><text x="75.00" y="270.50"></text></g><g><title>0x7f37f2c2774f (?) (1 samples, 0.31%)</title><rect x="72" y="276" width="3" height="15" fill="rgb(242,166,31)"/><text x="75.00" y="286.50"></text></g><g><title>0x7f37f2c2da3a (?) (1 samples, 0.31%)</title><rect x="72" y="292" width="3" height="15" fill="rgb(224,129,18)"/><text x="75.00" y="302.50"></text></g><g><title>0x7f37fbf49ab9 (?) (1 samples, 0.31%)</title><rect x="72" y="308" width="3" height="15" fill="rgb(221,23,21)"/><text x="75.00" y="318.50"></text></g><g><title>0x7f37fbf4aeab (?) (1 samples, 0.31%)</title><rect x="72" y="324" width="3" height="15" fill="rgb(205,101,20)"/><text x="75.00" y="334.50"></text></g><g><title>update_wrapper (functools.py) (10 samples, 3.10%)</title><rect x="189" y="228" width="36" height="15" fill="rgb(208,129,17)"/><text x="192.00" y="238.50">upd..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (23 samples, 7.12%)</title><rect x="156" y="196" width="84" height="15" fill="rgb(251,26,33)"/><text x="159.00" y="206.50">&lt;genexpr&gt;..</text></g><g><title>delayed (joblib/parallel.py) (18 samples, 5.57%)</title><rect x="174" y="212" width="66" height="15" fill="rgb(232,195,25)"/><text x="177.00" y="222.50">delayed..</text></g><g><title>wraps (functools.py) (4 samples, 1.24%)</title><rect x="225" y="228" width="15" height="15" fill="rgb(252,227,12)"/><text x="228.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="240" y="196" width="3" height="15" fill="rgb(213,224,40)"/><text x="243.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.62%)</title><rect x="294" y="212" width="8" height="15" fill="rgb(233,225,54)"/><text x="297.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (6 samples, 1.86%)</title><rect x="313" y="228" width="22" height="15" fill="rgb(234,222,3)"/><text x="316.00" y="238.50">_..</text></g><g><title>0x7f3831f99730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="331" y="244" width="4" height="15" fill="rgb(215,97,44)"/><text x="334.00" y="254.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.62%)</title><rect x="378" y="292" width="8" height="15" fill="rgb(241,133,40)"/><text x="381.00" y="302.50"></text></g><g><title>0x7f3831f99734 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="382" y="308" width="4" height="15" fill="rgb(253,116,54)"/><text x="385.00" y="318.50"></text></g><g><title>0x7f380b9b6cd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="441" y="340" width="3" height="15" fill="rgb(212,96,40)"/><text x="444.00" y="350.50"></text></g><g><title>0x7f380b9b6d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="444" y="340" width="4" height="15" fill="rgb(225,166,19)"/><text x="447.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.31%)</title><rect x="444" y="356" width="4" height="15" fill="rgb(244,184,31)"/><text x="447.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="444" y="372" width="4" height="15" fill="rgb(209,205,26)"/><text x="447.00" y="382.50"></text></g><g><title>0x7f380b9c6f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="441" y="324" width="11" height="15" fill="rgb(253,151,36)"/><text x="444.00" y="334.50"></text></g><g><title>0x7f380b9b6d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="448" y="340" width="4" height="15" fill="rgb(230,195,32)"/><text x="451.00" y="350.50"></text></g><g><title>0x7f380b9a3bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="448" y="356" width="4" height="15" fill="rgb(248,160,17)"/><text x="451.00" y="366.50"></text></g><g><title>0x7f380b9aad60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="448" y="372" width="4" height="15" fill="rgb(220,43,52)"/><text x="451.00" y="382.50"></text></g><g><title>0x7f380b9b95d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="452" y="388" width="3" height="15" fill="rgb(207,16,44)"/><text x="455.00" y="398.50"></text></g><g><title>0x7f380b9b9604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="455" y="388" width="4" height="15" fill="rgb(230,197,3)"/><text x="458.00" y="398.50"></text></g><g><title>0x7f3831fa414a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="455" y="404" width="4" height="15" fill="rgb(208,176,11)"/><text x="458.00" y="414.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="463" y="436" width="3" height="15" fill="rgb(234,225,4)"/><text x="466.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.31%)</title><rect x="466" y="452" width="4" height="15" fill="rgb(224,83,44)"/><text x="469.00" y="462.50"></text></g><g><title>0x7f380b9b9666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.24%)</title><rect x="459" y="388" width="14" height="15" fill="rgb(226,165,35)"/><text x="462.00" y="398.50"></text></g><g><title>0x7f380b9af2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.24%)</title><rect x="459" y="404" width="14" height="15" fill="rgb(243,176,44)"/><text x="462.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.93%)</title><rect x="463" y="420" width="10" height="15" fill="rgb(224,17,2)"/><text x="466.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.62%)</title><rect x="466" y="436" width="7" height="15" fill="rgb(253,136,21)"/><text x="469.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.31%)</title><rect x="470" y="452" width="3" height="15" fill="rgb(207,184,40)"/><text x="473.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="470" y="468" width="3" height="15" fill="rgb(242,104,31)"/><text x="473.00" y="478.50"></text></g><g><title>0x7f380b9b9d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.17%)</title><rect x="452" y="372" width="25" height="15" fill="rgb(207,173,20)"/><text x="455.00" y="382.50">0..</text></g><g><title>0x7f380b9b96fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="473" y="388" width="4" height="15" fill="rgb(249,160,5)"/><text x="476.00" y="398.50"></text></g><g><title>0x7f380b9d52df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.48%)</title><rect x="452" y="356" width="29" height="15" fill="rgb(232,42,15)"/><text x="455.00" y="366.50">0x..</text></g><g><title>0x7f380b9b9e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="477" y="372" width="4" height="15" fill="rgb(244,222,0)"/><text x="480.00" y="382.50"></text></g><g><title>0x7f380b9ad2a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="477" y="388" width="4" height="15" fill="rgb(212,186,11)"/><text x="480.00" y="398.50"></text></g><g><title>0x7f380b9d5456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="481" y="356" width="3" height="15" fill="rgb(238,189,19)"/><text x="484.00" y="366.50"></text></g><g><title>0x7f380b9d553e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="484" y="356" width="4" height="15" fill="rgb(211,60,1)"/><text x="487.00" y="366.50"></text></g><g><title>0x7f3831f99e50 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="488" y="388" width="4" height="15" fill="rgb(226,77,45)"/><text x="491.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.31%)</title><rect x="492" y="388" width="3" height="15" fill="rgb(228,52,17)"/><text x="495.00" y="398.50"></text></g><g><title>0x7f380b9d5592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="488" y="356" width="11" height="15" fill="rgb(236,123,46)"/><text x="491.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 0.93%)</title><rect x="488" y="372" width="11" height="15" fill="rgb(240,38,13)"/><text x="491.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="495" y="388" width="4" height="15" fill="rgb(227,111,13)"/><text x="498.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (3 samples, 0.93%)</title><rect x="499" y="372" width="11" height="15" fill="rgb(207,51,43)"/><text x="502.00" y="382.50"></text></g><g><title>0x7f380b9d5644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.24%)</title><rect x="499" y="356" width="15" height="15" fill="rgb(243,49,32)"/><text x="502.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="510" y="372" width="4" height="15" fill="rgb(254,51,38)"/><text x="513.00" y="382.50"></text></g><g><title>0x7f380b9d592f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="514" y="356" width="3" height="15" fill="rgb(213,69,11)"/><text x="517.00" y="366.50"></text></g><g><title>0x7f380b9aaa05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="514" y="372" width="3" height="15" fill="rgb(242,10,46)"/><text x="517.00" y="382.50"></text></g><g><title>0x7f380b9ad529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="517" y="372" width="4" height="15" fill="rgb(235,16,33)"/><text x="520.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.31%)</title><rect x="517" y="388" width="4" height="15" fill="rgb(226,175,22)"/><text x="520.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.31%)</title><rect x="517" y="404" width="4" height="15" fill="rgb(227,42,34)"/><text x="520.00" y="414.50"></text></g><g><title>0x7f380b9c6fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 6.19%)</title><rect x="452" y="324" width="73" height="15" fill="rgb(239,165,27)"/><text x="455.00" y="334.50">0x7f380b..</text></g><g><title>0x7f380b9d6405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 6.19%)</title><rect x="452" y="340" width="73" height="15" fill="rgb(208,219,5)"/><text x="455.00" y="350.50">0x7f380b..</text></g><g><title>0x7f380b9d5c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="517" y="356" width="8" height="15" fill="rgb(221,194,39)"/><text x="520.00" y="366.50"></text></g><g><title>0x7f380b9ad5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="521" y="372" width="4" height="15" fill="rgb(247,137,6)"/><text x="524.00" y="382.50"></text></g><g><title>0x7f380b9ad2a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="521" y="388" width="4" height="15" fill="rgb(210,147,4)"/><text x="524.00" y="398.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="525" y="356" width="3" height="15" fill="rgb(209,209,50)"/><text x="528.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="525" y="372" width="3" height="15" fill="rgb(253,20,44)"/><text x="528.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="525" y="388" width="3" height="15" fill="rgb(244,200,25)"/><text x="528.00" y="398.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="528" y="356" width="4" height="15" fill="rgb(228,56,12)"/><text x="531.00" y="366.50"></text></g><g><title>0x7f38311a5d20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="528" y="372" width="4" height="15" fill="rgb(218,112,32)"/><text x="531.00" y="382.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.31%)</title><rect x="532" y="372" width="4" height="15" fill="rgb(226,21,23)"/><text x="535.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.31%)</title><rect x="532" y="388" width="4" height="15" fill="rgb(247,139,1)"/><text x="535.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="532" y="404" width="4" height="15" fill="rgb(248,184,47)"/><text x="535.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.31%)</title><rect x="532" y="420" width="4" height="15" fill="rgb(210,207,37)"/><text x="535.00" y="430.50"></text></g><g><title>0x7f380b9c705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.24%)</title><rect x="525" y="324" width="14" height="15" fill="rgb(234,126,4)"/><text x="528.00" y="334.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.24%)</title><rect x="525" y="340" width="14" height="15" fill="rgb(224,155,48)"/><text x="528.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.62%)</title><rect x="532" y="356" width="7" height="15" fill="rgb(247,15,26)"/><text x="535.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="536" y="372" width="3" height="15" fill="rgb(207,132,36)"/><text x="539.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="536" y="388" width="3" height="15" fill="rgb(246,75,17)"/><text x="539.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="536" y="404" width="3" height="15" fill="rgb(220,171,25)"/><text x="539.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="536" y="420" width="3" height="15" fill="rgb(222,75,50)"/><text x="539.00" y="430.50"></text></g><g><title>0x7f380b9c713a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="539" y="324" width="8" height="15" fill="rgb(216,126,7)"/><text x="542.00" y="334.50"></text></g><g><title>0x7f38311a69c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="543" y="340" width="4" height="15" fill="rgb(239,62,2)"/><text x="546.00" y="350.50"></text></g><g><title>0x7f380b9c714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="547" y="324" width="3" height="15" fill="rgb(208,123,26)"/><text x="550.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="547" y="340" width="3" height="15" fill="rgb(219,210,37)"/><text x="550.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(248,11,52)"/><text x="550.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="547" y="372" width="3" height="15" fill="rgb(223,136,33)"/><text x="550.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.31%)</title><rect x="547" y="388" width="3" height="15" fill="rgb(218,115,51)"/><text x="550.00" y="398.50"></text></g><g><title>0x7f3831f83902 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="547" y="404" width="3" height="15" fill="rgb(211,137,46)"/><text x="550.00" y="414.50"></text></g><g><title>0x7f380b9c71bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="550" y="324" width="7" height="15" fill="rgb(224,0,37)"/><text x="553.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.62%)</title><rect x="550" y="340" width="7" height="15" fill="rgb(235,15,35)"/><text x="553.00" y="350.50"></text></g><g><title>0x7f380b9c7328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="557" y="324" width="4" height="15" fill="rgb(205,6,9)"/><text x="560.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.31%)</title><rect x="557" y="340" width="4" height="15" fill="rgb(215,217,38)"/><text x="560.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="557" y="356" width="4" height="15" fill="rgb(210,53,22)"/><text x="560.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.31%)</title><rect x="557" y="372" width="4" height="15" fill="rgb(244,158,5)"/><text x="560.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="557" y="388" width="4" height="15" fill="rgb(227,209,39)"/><text x="560.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="557" y="404" width="4" height="15" fill="rgb(244,224,47)"/><text x="560.00" y="414.50"></text></g><g><title>0x7f380b9c7577 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="561" y="324" width="4" height="15" fill="rgb(245,225,13)"/><text x="564.00" y="334.50"></text></g><g><title>0x7f380b9c7d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (35 samples, 10.84%)</title><rect x="441" y="308" width="127" height="15" fill="rgb(248,178,23)"/><text x="444.00" y="318.50">0x7f380b9c7d2e ..</text></g><g><title>0x7f380b9c78d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="565" y="324" width="3" height="15" fill="rgb(242,65,0)"/><text x="568.00" y="334.50"></text></g><g><title>0x7f380b9a3be4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="565" y="340" width="3" height="15" fill="rgb(215,131,34)"/><text x="568.00" y="350.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.31%)</title><rect x="568" y="308" width="4" height="15" fill="rgb(230,219,41)"/><text x="571.00" y="318.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.31%)</title><rect x="568" y="324" width="4" height="15" fill="rgb(238,98,47)"/><text x="571.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="576" y="324" width="3" height="15" fill="rgb(225,77,13)"/><text x="579.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.31%)</title><rect x="576" y="340" width="3" height="15" fill="rgb(216,22,25)"/><text x="579.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 0.93%)</title><rect x="572" y="308" width="11" height="15" fill="rgb(240,224,30)"/><text x="575.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.31%)</title><rect x="579" y="324" width="4" height="15" fill="rgb(228,82,48)"/><text x="582.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.31%)</title><rect x="579" y="340" width="4" height="15" fill="rgb(238,196,26)"/><text x="582.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="579" y="356" width="4" height="15" fill="rgb(239,136,20)"/><text x="582.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="579" y="372" width="4" height="15" fill="rgb(253,150,29)"/><text x="582.00" y="382.50"></text></g><g><title>0x7f3831f3ba48 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="579" y="388" width="4" height="15" fill="rgb(241,23,13)"/><text x="582.00" y="398.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="583" y="356" width="4" height="15" fill="rgb(223,134,5)"/><text x="586.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="583" y="372" width="4" height="15" fill="rgb(244,145,9)"/><text x="586.00" y="382.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.31%)</title><rect x="583" y="388" width="4" height="15" fill="rgb(219,65,35)"/><text x="586.00" y="398.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.31%)</title><rect x="583" y="404" width="4" height="15" fill="rgb(249,150,1)"/><text x="586.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.62%)</title><rect x="587" y="356" width="7" height="15" fill="rgb(234,101,24)"/><text x="590.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.62%)</title><rect x="587" y="372" width="7" height="15" fill="rgb(248,136,40)"/><text x="590.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.62%)</title><rect x="587" y="388" width="7" height="15" fill="rgb(222,68,51)"/><text x="590.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 0.62%)</title><rect x="587" y="404" width="7" height="15" fill="rgb(240,8,26)"/><text x="590.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.62%)</title><rect x="587" y="420" width="7" height="15" fill="rgb(239,72,1)"/><text x="590.00" y="430.50"></text></g><g><title>0x7f38311a5710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="590" y="436" width="4" height="15" fill="rgb(233,49,29)"/><text x="593.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="598" y="388" width="3" height="15" fill="rgb(205,130,51)"/><text x="601.00" y="398.50"></text></g><g><title>array_richcompare (arrayobject.c) (6 samples, 1.86%)</title><rect x="583" y="308" width="22" height="15" fill="rgb(207,173,14)"/><text x="586.00" y="318.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.86%)</title><rect x="583" y="324" width="22" height="15" fill="rgb(208,18,12)"/><text x="586.00" y="334.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.86%)</title><rect x="583" y="340" width="22" height="15" fill="rgb(232,27,24)"/><text x="586.00" y="350.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.93%)</title><rect x="594" y="356" width="11" height="15" fill="rgb(221,223,2)"/><text x="597.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.62%)</title><rect x="598" y="372" width="7" height="15" fill="rgb(248,134,32)"/><text x="601.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="601" y="388" width="4" height="15" fill="rgb(253,19,1)"/><text x="604.00" y="398.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.62%)</title><rect x="612" y="324" width="8" height="15" fill="rgb(245,214,35)"/><text x="615.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 1.55%)</title><rect x="605" y="308" width="18" height="15" fill="rgb(243,97,5)"/><text x="608.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.31%)</title><rect x="620" y="324" width="3" height="15" fill="rgb(207,83,18)"/><text x="623.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.31%)</title><rect x="627" y="436" width="4" height="15" fill="rgb(243,28,9)"/><text x="630.00" y="446.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (7 samples, 2.17%)</title><rect x="627" y="372" width="25" height="15" fill="rgb(217,217,38)"/><text x="630.00" y="382.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c) (7 samples, 2.17%)</title><rect x="627" y="388" width="25" height="15" fill="rgb(249,84,15)"/><text x="630.00" y="398.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (7 samples, 2.17%)</title><rect x="627" y="404" width="25" height="15" fill="rgb(215,13,42)"/><text x="630.00" y="414.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (7 samples, 2.17%)</title><rect x="627" y="420" width="25" height="15" fill="rgb(250,49,37)"/><text x="630.00" y="430.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h) (6 samples, 1.86%)</title><rect x="631" y="436" width="21" height="15" fill="rgb(246,202,18)"/><text x="634.00" y="446.50"></text></g><g><title>0x7f3831f99e7e (libc-2.29.so) (1 samples, 0.31%)</title><rect x="649" y="452" width="3" height="15" fill="rgb(224,14,27)"/><text x="652.00" y="462.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.31%)</title><rect x="674" y="388" width="4" height="15" fill="rgb(230,134,33)"/><text x="677.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.62%)</title><rect x="685" y="436" width="8" height="15" fill="rgb(248,83,42)"/><text x="688.00" y="446.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.62%)</title><rect x="693" y="436" width="7" height="15" fill="rgb(232,210,33)"/><text x="696.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.55%)</title><rect x="685" y="420" width="19" height="15" fill="rgb(231,69,23)"/><text x="688.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="700" y="436" width="4" height="15" fill="rgb(222,108,48)"/><text x="703.00" y="446.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.31%)</title><rect x="704" y="452" width="3" height="15" fill="rgb(232,222,42)"/><text x="707.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="707" y="452" width="4" height="15" fill="rgb(249,125,6)"/><text x="710.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="707" y="468" width="4" height="15" fill="rgb(253,134,51)"/><text x="710.00" y="478.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="707" y="484" width="4" height="15" fill="rgb(226,139,37)"/><text x="710.00" y="494.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.93%)</title><rect x="704" y="420" width="11" height="15" fill="rgb(235,214,10)"/><text x="707.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.93%)</title><rect x="704" y="436" width="11" height="15" fill="rgb(254,15,18)"/><text x="707.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="711" y="452" width="4" height="15" fill="rgb(217,6,38)"/><text x="714.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.93%)</title><rect x="715" y="420" width="11" height="15" fill="rgb(254,214,49)"/><text x="718.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.93%)</title><rect x="715" y="436" width="11" height="15" fill="rgb(220,85,36)"/><text x="718.00" y="446.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (2 samples, 0.62%)</title><rect x="718" y="452" width="8" height="15" fill="rgb(249,84,21)"/><text x="721.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (14 samples, 4.33%)</title><rect x="678" y="404" width="51" height="15" fill="rgb(251,67,47)"/><text x="681.00" y="414.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="726" y="420" width="3" height="15" fill="rgb(227,64,33)"/><text x="729.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="726" y="436" width="3" height="15" fill="rgb(221,90,9)"/><text x="729.00" y="446.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (16 samples, 4.95%)</title><rect x="678" y="388" width="58" height="15" fill="rgb(248,153,7)"/><text x="681.00" y="398.50">PyUFun..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.62%)</title><rect x="729" y="404" width="7" height="15" fill="rgb(243,36,54)"/><text x="732.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.62%)</title><rect x="729" y="420" width="7" height="15" fill="rgb(250,221,30)"/><text x="732.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="733" y="436" width="3" height="15" fill="rgb(244,8,26)"/><text x="736.00" y="446.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.31%)</title><rect x="733" y="452" width="3" height="15" fill="rgb(231,144,41)"/><text x="736.00" y="462.50"></text></g><g><title>array_sum (methods.c) (32 samples, 9.91%)</title><rect x="623" y="308" width="117" height="15" fill="rgb(220,70,50)"/><text x="626.00" y="318.50">array_sum (met..</text></g><g><title>forward_ndarray_method (methods.c) (32 samples, 9.91%)</title><rect x="623" y="324" width="117" height="15" fill="rgb(218,218,53)"/><text x="626.00" y="334.50">forward_ndarra..</text></g><g><title>_sum (numpy/core/_methods.py) (31 samples, 9.60%)</title><rect x="627" y="340" width="113" height="15" fill="rgb(239,113,43)"/><text x="630.00" y="350.50">_sum (numpy/c..</text></g><g><title>ufunc_reduce (ufunc_object.c) (31 samples, 9.60%)</title><rect x="627" y="356" width="113" height="15" fill="rgb(230,78,47)"/><text x="630.00" y="366.50">ufunc_reduce ..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (24 samples, 7.43%)</title><rect x="652" y="372" width="88" height="15" fill="rgb(224,212,8)"/><text x="655.00" y="382.50">PyUFunc_Ge..</text></g><g><title>_wheremask_converter (ufunc_object.c) (1 samples, 0.31%)</title><rect x="736" y="388" width="4" height="15" fill="rgb(218,115,22)"/><text x="739.00" y="398.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.55%)</title><rect x="795" y="340" width="18" height="15" fill="rgb(215,31,33)"/><text x="798.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (21 samples, 6.50%)</title><rect x="755" y="324" width="76" height="15" fill="rgb(246,32,37)"/><text x="758.00" y="334.50">&lt;listcom..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.55%)</title><rect x="813" y="340" width="18" height="15" fill="rgb(221,189,27)"/><text x="816.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (28 samples, 8.67%)</title><rect x="740" y="308" width="102" height="15" fill="rgb(240,39,23)"/><text x="743.00" y="318.50">check_is_fit..</text></g><g><title>isclass (inspect.py) (3 samples, 0.93%)</title><rect x="831" y="324" width="11" height="15" fill="rgb(232,37,2)"/><text x="834.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.31%)</title><rect x="842" y="324" width="4" height="15" fill="rgb(246,201,39)"/><text x="845.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.31%)</title><rect x="842" y="340" width="4" height="15" fill="rgb(243,126,20)"/><text x="845.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="846" y="388" width="4" height="15" fill="rgb(251,91,37)"/><text x="849.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.31%)</title><rect x="846" y="404" width="4" height="15" fill="rgb(248,27,44)"/><text x="849.00" y="414.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.31%)</title><rect x="846" y="420" width="4" height="15" fill="rgb(217,72,32)"/><text x="849.00" y="430.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.31%)</title><rect x="846" y="436" width="4" height="15" fill="rgb(224,21,30)"/><text x="849.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.62%)</title><rect x="846" y="372" width="7" height="15" fill="rgb(222,136,11)"/><text x="849.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.31%)</title><rect x="850" y="388" width="3" height="15" fill="rgb(225,26,12)"/><text x="853.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.31%)</title><rect x="850" y="404" width="3" height="15" fill="rgb(211,172,30)"/><text x="853.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="846" y="340" width="11" height="15" fill="rgb(232,18,7)"/><text x="849.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="846" y="356" width="11" height="15" fill="rgb(253,76,36)"/><text x="849.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.31%)</title><rect x="853" y="372" width="4" height="15" fill="rgb(253,39,18)"/><text x="856.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="853" y="388" width="4" height="15" fill="rgb(248,82,15)"/><text x="856.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.62%)</title><rect x="857" y="340" width="7" height="15" fill="rgb(224,195,20)"/><text x="860.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.62%)</title><rect x="857" y="356" width="7" height="15" fill="rgb(216,169,5)"/><text x="860.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.86%)</title><rect x="846" y="324" width="22" height="15" fill="rgb(248,51,25)"/><text x="849.00" y="334.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="864" y="340" width="4" height="15" fill="rgb(226,214,36)"/><text x="867.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (133 samples, 41.18%)</title><rect x="386" y="292" width="486" height="15" fill="rgb(232,192,53)"/><text x="389.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.48%)</title><rect x="842" y="308" width="30" height="15" fill="rgb(244,158,29)"/><text x="845.00" y="318.50">uf..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.31%)</title><rect x="868" y="324" width="4" height="15" fill="rgb(238,113,52)"/><text x="871.00" y="334.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.31%)</title><rect x="868" y="340" width="4" height="15" fill="rgb(229,110,26)"/><text x="871.00" y="350.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.31%)</title><rect x="872" y="372" width="3" height="15" fill="rgb(246,206,24)"/><text x="875.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.62%)</title><rect x="872" y="324" width="7" height="15" fill="rgb(218,173,47)"/><text x="875.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.62%)</title><rect x="872" y="340" width="7" height="15" fill="rgb(226,84,51)"/><text x="875.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.62%)</title><rect x="872" y="356" width="7" height="15" fill="rgb(207,74,9)"/><text x="875.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.31%)</title><rect x="875" y="372" width="4" height="15" fill="rgb(250,35,27)"/><text x="878.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.31%)</title><rect x="875" y="388" width="4" height="15" fill="rgb(221,67,50)"/><text x="878.00" y="398.50"></text></g><g><title>to_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="875" y="404" width="4" height="15" fill="rgb(214,138,34)"/><text x="878.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (145 samples, 44.89%)</title><rect x="353" y="276" width="530" height="15" fill="rgb(217,57,40)"/><text x="356.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.93%)</title><rect x="872" y="292" width="11" height="15" fill="rgb(220,91,53)"/><text x="875.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.93%)</title><rect x="872" y="308" width="11" height="15" fill="rgb(231,94,46)"/><text x="875.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.31%)</title><rect x="879" y="324" width="4" height="15" fill="rgb(236,110,38)"/><text x="882.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (149 samples, 46.13%)</title><rect x="349" y="260" width="545" height="15" fill="rgb(210,129,21)"/><text x="352.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.93%)</title><rect x="883" y="276" width="11" height="15" fill="rgb(227,77,3)"/><text x="886.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.93%)</title><rect x="883" y="292" width="11" height="15" fill="rgb(251,137,13)"/><text x="886.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.93%)</title><rect x="883" y="308" width="11" height="15" fill="rgb(216,210,45)"/><text x="886.00" y="318.50"></text></g><g><title>__exit__ (joblib/parallel.py) (8 samples, 2.48%)</title><rect x="894" y="260" width="29" height="15" fill="rgb(231,3,7)"/><text x="897.00" y="270.50">__..</text></g><g><title>unregister (joblib/parallel.py) (6 samples, 1.86%)</title><rect x="901" y="276" width="22" height="15" fill="rgb(230,71,52)"/><text x="904.00" y="286.50">u..</text></g><g><title>0x7f3831f99e7a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="945" y="276" width="3" height="15" fill="rgb(225,5,5)"/><text x="948.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (178 samples, 55.11%)</title><rect x="302" y="212" width="650" height="15" fill="rgb(238,7,21)"/><text x="305.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (169 samples, 52.32%)</title><rect x="335" y="228" width="617" height="15" fill="rgb(219,73,52)"/><text x="338.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (168 samples, 52.01%)</title><rect x="338" y="244" width="614" height="15" fill="rgb(251,29,39)"/><text x="341.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (8 samples, 2.48%)</title><rect x="923" y="260" width="29" height="15" fill="rgb(235,54,10)"/><text x="926.00" y="270.50">__..</text></g><g><title>0x7f3831f99ebc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="948" y="276" width="4" height="15" fill="rgb(248,192,13)"/><text x="951.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (195 samples, 60.37%)</title><rect x="243" y="196" width="713" height="15" fill="rgb(243,189,46)"/><text x="246.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (1 samples, 0.31%)</title><rect x="952" y="212" width="4" height="15" fill="rgb(241,14,1)"/><text x="955.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="952" y="228" width="4" height="15" fill="rgb(254,65,7)"/><text x="955.00" y="238.50"></text></g><g><title>__enter__ (threading.py) (4 samples, 1.24%)</title><rect x="978" y="212" width="14" height="15" fill="rgb(249,155,50)"/><text x="981.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.62%)</title><rect x="985" y="228" width="7" height="15" fill="rgb(244,110,12)"/><text x="988.00" y="238.50"></text></g><g><title>0x7f3831f99782 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="989" y="244" width="3" height="15" fill="rgb(249,88,25)"/><text x="992.00" y="254.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.31%)</title><rect x="992" y="212" width="4" height="15" fill="rgb(244,14,6)"/><text x="995.00" y="222.50"></text></g><g><title>get (queue.py) (13 samples, 4.02%)</title><rect x="956" y="196" width="47" height="15" fill="rgb(249,64,11)"/><text x="959.00" y="206.50">get ..</text></g><g><title>notify (threading.py) (2 samples, 0.62%)</title><rect x="996" y="212" width="7" height="15" fill="rgb(240,120,46)"/><text x="999.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="1032" y="212" width="15" height="15" fill="rgb(228,81,40)"/><text x="1035.00" y="222.50"></text></g><g><title>0x7f3831f99e7a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1043" y="228" width="4" height="15" fill="rgb(214,100,22)"/><text x="1046.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (13 samples, 4.02%)</title><rect x="1047" y="212" width="48" height="15" fill="rgb(216,40,35)"/><text x="1050.00" y="222.50">get_..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.24%)</title><rect x="1080" y="228" width="15" height="15" fill="rgb(224,174,40)"/><text x="1083.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="1091" y="244" width="4" height="15" fill="rgb(227,99,28)"/><text x="1094.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="1095" y="212" width="10" height="15" fill="rgb(235,103,28)"/><text x="1098.00" y="222.50"></text></g><g><title>0x7f3831f949a0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1102" y="228" width="3" height="15" fill="rgb(215,36,7)"/><text x="1105.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (30 samples, 9.29%)</title><rect x="1003" y="196" width="110" height="15" fill="rgb(207,117,35)"/><text x="1006.00" y="206.50">get_nested_ba..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.62%)</title><rect x="1105" y="212" width="8" height="15" fill="rgb(242,101,12)"/><text x="1108.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (3 samples, 0.93%)</title><rect x="1131" y="212" width="11" height="15" fill="rgb(214,49,38)"/><text x="1134.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.62%)</title><rect x="1135" y="228" width="7" height="15" fill="rgb(232,2,1)"/><text x="1138.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="1138" y="244" width="4" height="15" fill="rgb(241,189,36)"/><text x="1141.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (291 samples, 90.09%)</title><rect x="86" y="180" width="1063" height="15" fill="rgb(250,226,44)"/><text x="89.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (10 samples, 3.10%)</title><rect x="1113" y="196" width="36" height="15" fill="rgb(222,80,5)"/><text x="1116.00" y="206.50">put..</text></g><g><title>notify (threading.py) (2 samples, 0.62%)</title><rect x="1142" y="212" width="7" height="15" fill="rgb(208,183,26)"/><text x="1145.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.31%)</title><rect x="1146" y="228" width="3" height="15" fill="rgb(251,189,40)"/><text x="1149.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="1146" y="244" width="3" height="15" fill="rgb(210,43,4)"/><text x="1149.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="1146" y="260" width="3" height="15" fill="rgb(233,10,13)"/><text x="1149.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1146" y="276" width="3" height="15" fill="rgb(216,129,39)"/><text x="1149.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py) (294 samples, 91.02%)</title><rect x="83" y="164" width="1074" height="15" fill="rgb(241,88,28)"/><text x="86.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (2 samples, 0.62%)</title><rect x="1149" y="180" width="8" height="15" fill="rgb(222,196,46)"/><text x="1152.00" y="190.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.31%)</title><rect x="1157" y="164" width="3" height="15" fill="rgb(210,36,34)"/><text x="1160.00" y="174.50"></text></g><g><title>full (numpy/core/numeric.py) (1 samples, 0.31%)</title><rect x="1157" y="180" width="3" height="15" fill="rgb(245,174,21)"/><text x="1160.00" y="190.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;) (1 samples, 0.31%)</title><rect x="1157" y="196" width="3" height="15" fill="rgb(225,200,35)"/><text x="1160.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.31%)</title><rect x="1157" y="212" width="3" height="15" fill="rgb(252,49,41)"/><text x="1160.00" y="222.50"></text></g><g><title>array_copyto (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1157" y="228" width="3" height="15" fill="rgb(249,186,53)"/><text x="1160.00" y="238.50"></text></g><g><title>PyArray_CastingConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="1157" y="244" width="3" height="15" fill="rgb(233,2,49)"/><text x="1160.00" y="254.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (298 samples, 92.26%)</title><rect x="75" y="100" width="1089" height="15" fill="rgb(227,50,19)"/><text x="78.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (298 samples, 92.26%)</title><rect x="75" y="116" width="1089" height="15" fill="rgb(211,44,46)"/><text x="78.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (298 samples, 92.26%)</title><rect x="75" y="132" width="1089" height="15" fill="rgb(243,111,9)"/><text x="78.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (298 samples, 92.26%)</title><rect x="75" y="148" width="1089" height="15" fill="rgb(219,190,35)"/><text x="78.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>thread_PyThread_allocate_lock (python3.7) (1 samples, 0.31%)</title><rect x="1160" y="164" width="4" height="15" fill="rgb(231,86,43)"/><text x="1163.00" y="174.50"></text></g><g><title>PyThread_allocate_lock (python3.7) (1 samples, 0.31%)</title><rect x="1160" y="180" width="4" height="15" fill="rgb(252,51,8)"/><text x="1163.00" y="190.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1160" y="196" width="4" height="15" fill="rgb(240,154,26)"/><text x="1163.00" y="206.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (299 samples, 92.57%)</title><rect x="75" y="68" width="1093" height="15" fill="rgb(250,9,40)"/><text x="78.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (299 samples, 92.57%)</title><rect x="75" y="84" width="1093" height="15" fill="rgb(237,153,21)"/><text x="78.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="1164" y="100" width="4" height="15" fill="rgb(244,54,51)"/><text x="1167.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="1164" y="116" width="4" height="15" fill="rgb(242,154,44)"/><text x="1167.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="1164" y="132" width="4" height="15" fill="rgb(243,15,12)"/><text x="1167.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.31%)</title><rect x="1164" y="148" width="4" height="15" fill="rgb(209,37,10)"/><text x="1167.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.31%)</title><rect x="1164" y="164" width="4" height="15" fill="rgb(236,3,38)"/><text x="1167.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="1164" y="180" width="4" height="15" fill="rgb(232,186,14)"/><text x="1167.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.31%)</title><rect x="1164" y="196" width="4" height="15" fill="rgb(232,6,22)"/><text x="1167.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="1164" y="212" width="4" height="15" fill="rgb(208,131,45)"/><text x="1167.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1164" y="228" width="4" height="15" fill="rgb(217,94,45)"/><text x="1167.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1164" y="244" width="4" height="15" fill="rgb(238,115,24)"/><text x="1167.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1164" y="260" width="4" height="15" fill="rgb(217,98,36)"/><text x="1167.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1164" y="276" width="4" height="15" fill="rgb(252,66,7)"/><text x="1167.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1164" y="292" width="4" height="15" fill="rgb(212,95,15)"/><text x="1167.00" y="302.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.31%)</title><rect x="1168" y="164" width="3" height="15" fill="rgb(249,152,0)"/><text x="1171.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.62%)</title><rect x="1168" y="132" width="7" height="15" fill="rgb(205,164,8)"/><text x="1171.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (2 samples, 0.62%)</title><rect x="1168" y="148" width="7" height="15" fill="rgb(246,25,41)"/><text x="1171.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.31%)</title><rect x="1171" y="164" width="4" height="15" fill="rgb(230,158,29)"/><text x="1174.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.31%)</title><rect x="1171" y="180" width="4" height="15" fill="rgb(210,2,6)"/><text x="1174.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.31%)</title><rect x="1171" y="196" width="4" height="15" fill="rgb(244,193,20)"/><text x="1174.00" y="206.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="212" width="4" height="15" fill="rgb(243,135,31)"/><text x="1174.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="228" width="4" height="15" fill="rgb(230,66,8)"/><text x="1174.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="244" width="4" height="15" fill="rgb(205,201,41)"/><text x="1174.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="260" width="4" height="15" fill="rgb(240,34,3)"/><text x="1174.00" y="270.50"></text></g><g><title>0x7f380b9bbb11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="292" width="3" height="15" fill="rgb(215,116,39)"/><text x="1182.00" y="302.50"></text></g><g><title>0x7f380b9ecee8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="308" width="3" height="15" fill="rgb(214,123,48)"/><text x="1182.00" y="318.50"></text></g><g><title>0x7f380bc1d100 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="324" width="3" height="15" fill="rgb(205,211,46)"/><text x="1182.00" y="334.50"></text></g><g><title>0x7f380bc26a47 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="340" width="3" height="15" fill="rgb(248,111,49)"/><text x="1182.00" y="350.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.31%)</title><rect x="1179" y="356" width="3" height="15" fill="rgb(253,167,12)"/><text x="1182.00" y="366.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.31%)</title><rect x="1179" y="372" width="3" height="15" fill="rgb(240,223,29)"/><text x="1182.00" y="382.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c) (1 samples, 0.31%)</title><rect x="1179" y="388" width="3" height="15" fill="rgb(211,129,51)"/><text x="1182.00" y="398.50"></text></g><g><title>arraydescr_name_get (descriptor.c) (1 samples, 0.31%)</title><rect x="1179" y="404" width="3" height="15" fill="rgb(221,227,41)"/><text x="1182.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.31%)</title><rect x="1182" y="292" width="4" height="15" fill="rgb(227,198,16)"/><text x="1185.00" y="302.50"></text></g><g><title>PyArray_CopyObject (arrayobject.c) (1 samples, 0.31%)</title><rect x="1182" y="308" width="4" height="15" fill="rgb(228,113,46)"/><text x="1185.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.31%)</title><rect x="1182" y="324" width="4" height="15" fill="rgb(252,165,22)"/><text x="1185.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.31%)</title><rect x="1182" y="340" width="4" height="15" fill="rgb(239,136,51)"/><text x="1185.00" y="350.50"></text></g><g><title>0x7f3831fa3e5f (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1182" y="356" width="4" height="15" fill="rgb(228,48,42)"/><text x="1185.00" y="366.50"></text></g><g><title>all (323 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,71,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (323 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(250,199,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py) (6 samples, 1.86%)</title><rect x="1168" y="68" width="22" height="15" fill="rgb(233,224,37)"/><text x="1171.00" y="78.50">s..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (6 samples, 1.86%)</title><rect x="1168" y="84" width="22" height="15" fill="rgb(249,49,25)"/><text x="1171.00" y="94.50">s..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.86%)</title><rect x="1168" y="100" width="22" height="15" fill="rgb(214,54,37)"/><text x="1171.00" y="110.50">s..</text></g><g><title>fit (sklearn/ensemble/_forest.py) (6 samples, 1.86%)</title><rect x="1168" y="116" width="22" height="15" fill="rgb(239,91,54)"/><text x="1171.00" y="126.50">f..</text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="132" width="15" height="15" fill="rgb(248,73,4)"/><text x="1178.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="148" width="15" height="15" fill="rgb(216,93,16)"/><text x="1178.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="164" width="15" height="15" fill="rgb(246,109,19)"/><text x="1178.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (4 samples, 1.24%)</title><rect x="1175" y="180" width="15" height="15" fill="rgb(226,182,52)"/><text x="1178.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.24%)</title><rect x="1175" y="196" width="15" height="15" fill="rgb(245,23,19)"/><text x="1178.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="212" width="15" height="15" fill="rgb(243,67,28)"/><text x="1178.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="228" width="15" height="15" fill="rgb(222,186,2)"/><text x="1178.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (4 samples, 1.24%)</title><rect x="1175" y="244" width="15" height="15" fill="rgb(228,126,29)"/><text x="1178.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.93%)</title><rect x="1179" y="260" width="11" height="15" fill="rgb(214,208,1)"/><text x="1182.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.93%)</title><rect x="1179" y="276" width="11" height="15" fill="rgb(245,124,44)"/><text x="1182.00" y="286.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.31%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(247,216,5)"/><text x="1189.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.31%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(237,208,38)"/><text x="1189.00" y="318.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.31%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(233,169,13)"/><text x="1189.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.31%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(241,39,13)"/><text x="1189.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(244,204,48)"/><text x="1189.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(242,71,51)"/><text x="1189.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(229,75,3)"/><text x="1189.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.31%)</title><rect x="1186" y="404" width="4" height="15" fill="rgb(222,225,16)"/><text x="1189.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1186" y="420" width="4" height="15" fill="rgb(244,111,17)"/><text x="1189.00" y="430.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1186" y="436" width="4" height="15" fill="rgb(251,33,26)"/><text x="1189.00" y="446.50"></text></g></g></svg>