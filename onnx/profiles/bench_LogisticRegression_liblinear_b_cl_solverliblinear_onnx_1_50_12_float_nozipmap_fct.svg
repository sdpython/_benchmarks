<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1830" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1813.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1813.00"> </text><g id="frames"><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="628" width="11" height="15" fill="rgb(222,13,13)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="644" width="11" height="15" fill="rgb(219,55,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="660" width="11" height="15" fill="rgb(215,209,20)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="676" width="11" height="15" fill="rgb(227,154,4)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="692" width="11" height="15" fill="rgb(218,217,7)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="708" width="11" height="15" fill="rgb(247,212,33)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 1.00%)</title><rect x="10" y="724" width="11" height="15" fill="rgb(205,48,11)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="740" width="11" height="15" fill="rgb(243,15,40)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="756" width="11" height="15" fill="rgb(254,143,30)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="772" width="11" height="15" fill="rgb(247,184,29)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="788" width="11" height="15" fill="rgb(227,93,11)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="804" width="11" height="15" fill="rgb(230,172,31)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="820" width="11" height="15" fill="rgb(240,4,45)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(209,25,45)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(250,86,46)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="868" width="11" height="15" fill="rgb(206,49,34)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="884" width="11" height="15" fill="rgb(221,179,29)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="900" width="11" height="15" fill="rgb(254,54,40)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="916" width="11" height="15" fill="rgb(245,221,46)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="932" width="11" height="15" fill="rgb(245,205,34)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="948" width="11" height="15" fill="rgb(236,74,38)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 1.00%)</title><rect x="10" y="964" width="11" height="15" fill="rgb(249,160,0)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="980" width="11" height="15" fill="rgb(233,29,37)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="996" width="11" height="15" fill="rgb(231,157,49)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1012" width="11" height="15" fill="rgb(250,188,37)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1028" width="11" height="15" fill="rgb(250,98,27)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1044" width="11" height="15" fill="rgb(210,89,45)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="1060" width="11" height="15" fill="rgb(214,115,22)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1076" width="11" height="15" fill="rgb(253,125,45)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="1092" width="11" height="15" fill="rgb(252,202,0)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1108" width="11" height="15" fill="rgb(208,42,21)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1124" width="11" height="15" fill="rgb(220,20,40)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1140" width="11" height="15" fill="rgb(246,195,5)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1156" width="11" height="15" fill="rgb(214,21,27)"/><text x="13.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1172" width="11" height="15" fill="rgb(244,186,23)"/><text x="13.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="1188" width="11" height="15" fill="rgb(222,158,32)"/><text x="13.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1204" width="11" height="15" fill="rgb(245,69,18)"/><text x="13.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 1.00%)</title><rect x="10" y="1220" width="11" height="15" fill="rgb(243,125,10)"/><text x="13.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1236" width="11" height="15" fill="rgb(249,129,45)"/><text x="13.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1252" width="11" height="15" fill="rgb(249,156,1)"/><text x="13.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1268" width="11" height="15" fill="rgb(237,2,34)"/><text x="13.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="1284" width="11" height="15" fill="rgb(246,45,33)"/><text x="13.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="1300" width="11" height="15" fill="rgb(254,78,24)"/><text x="13.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.00%)</title><rect x="10" y="1316" width="11" height="15" fill="rgb(219,196,27)"/><text x="13.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.00%)</title><rect x="10" y="1332" width="11" height="15" fill="rgb(221,228,43)"/><text x="13.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.00%)</title><rect x="10" y="1348" width="11" height="15" fill="rgb(231,129,20)"/><text x="13.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 1.00%)</title><rect x="10" y="1364" width="11" height="15" fill="rgb(225,0,40)"/><text x="13.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 1.00%)</title><rect x="10" y="1380" width="11" height="15" fill="rgb(209,219,29)"/><text x="13.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 1.00%)</title><rect x="10" y="1396" width="11" height="15" fill="rgb(251,46,37)"/><text x="13.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.00%)</title><rect x="10" y="1412" width="11" height="15" fill="rgb(242,14,49)"/><text x="13.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 1.00%)</title><rect x="10" y="1428" width="11" height="15" fill="rgb(227,178,50)"/><text x="13.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.67%)</title><rect x="13" y="1444" width="8" height="15" fill="rgb(244,91,9)"/><text x="16.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (2 samples, 0.67%)</title><rect x="13" y="1460" width="8" height="15" fill="rgb(234,25,18)"/><text x="16.00" y="1470.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="17" y="1476" width="4" height="15" fill="rgb(237,176,30)"/><text x="20.00" y="1486.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.33%)</title><rect x="21" y="628" width="4" height="15" fill="rgb(242,138,41)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="644" width="4" height="15" fill="rgb(240,143,27)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="660" width="4" height="15" fill="rgb(218,103,0)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="676" width="4" height="15" fill="rgb(240,49,27)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="692" width="4" height="15" fill="rgb(248,115,41)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="708" width="4" height="15" fill="rgb(252,152,3)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="724" width="4" height="15" fill="rgb(206,197,5)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="740" width="4" height="15" fill="rgb(219,77,14)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="756" width="4" height="15" fill="rgb(221,107,42)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="772" width="4" height="15" fill="rgb(220,188,5)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="788" width="4" height="15" fill="rgb(244,30,25)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="804" width="4" height="15" fill="rgb(209,181,25)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.33%)</title><rect x="21" y="820" width="4" height="15" fill="rgb(240,51,37)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="836" width="4" height="15" fill="rgb(226,77,44)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(218,32,16)"/><text x="24.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(216,66,39)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(221,97,31)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(250,104,17)"/><text x="24.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(214,63,30)"/><text x="24.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(219,1,14)"/><text x="24.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(215,25,13)"/><text x="24.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(251,80,31)"/><text x="24.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(217,92,3)"/><text x="24.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(210,7,38)"/><text x="24.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(252,210,22)"/><text x="24.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(216,24,6)"/><text x="24.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1044" width="4" height="15" fill="rgb(205,140,36)"/><text x="24.00" y="1054.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="1060" width="4" height="15" fill="rgb(245,56,39)"/><text x="24.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1076" width="4" height="15" fill="rgb(214,60,12)"/><text x="24.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1092" width="4" height="15" fill="rgb(234,25,29)"/><text x="24.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1108" width="4" height="15" fill="rgb(214,167,51)"/><text x="24.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1124" width="4" height="15" fill="rgb(231,40,1)"/><text x="24.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1140" width="4" height="15" fill="rgb(215,37,31)"/><text x="24.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py) (1 samples, 0.33%)</title><rect x="21" y="1156" width="4" height="15" fill="rgb(235,218,43)"/><text x="24.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1172" width="4" height="15" fill="rgb(247,101,2)"/><text x="24.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1188" width="4" height="15" fill="rgb(220,212,51)"/><text x="24.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1204" width="4" height="15" fill="rgb(209,208,14)"/><text x="24.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1220" width="4" height="15" fill="rgb(220,203,47)"/><text x="24.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1236" width="4" height="15" fill="rgb(207,157,7)"/><text x="24.00" y="1246.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1252" width="4" height="15" fill="rgb(224,69,8)"/><text x="24.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(235,110,36)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="356" width="19" height="15" fill="rgb(236,53,13)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="372" width="19" height="15" fill="rgb(239,7,34)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="388" width="19" height="15" fill="rgb(224,139,43)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="10" y="404" width="19" height="15" fill="rgb(219,75,32)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="420" width="19" height="15" fill="rgb(217,127,34)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.67%)</title><rect x="10" y="436" width="19" height="15" fill="rgb(251,170,40)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="452" width="19" height="15" fill="rgb(225,39,44)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="468" width="19" height="15" fill="rgb(233,15,11)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="484" width="19" height="15" fill="rgb(211,172,18)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="10" y="500" width="19" height="15" fill="rgb(230,111,4)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="516" width="19" height="15" fill="rgb(217,30,42)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.67%)</title><rect x="10" y="532" width="19" height="15" fill="rgb(210,144,14)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="548" width="19" height="15" fill="rgb(226,104,54)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="564" width="19" height="15" fill="rgb(228,182,21)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="580" width="19" height="15" fill="rgb(206,118,33)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="10" y="596" width="19" height="15" fill="rgb(216,22,2)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="612" width="19" height="15" fill="rgb(246,200,39)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="628" width="4" height="15" fill="rgb(248,70,47)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="644" width="4" height="15" fill="rgb(242,103,44)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="660" width="4" height="15" fill="rgb(249,152,53)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="676" width="4" height="15" fill="rgb(247,161,21)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="692" width="4" height="15" fill="rgb(240,146,47)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="708" width="4" height="15" fill="rgb(235,42,12)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.33%)</title><rect x="25" y="724" width="4" height="15" fill="rgb(213,102,21)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="740" width="4" height="15" fill="rgb(247,5,12)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="756" width="4" height="15" fill="rgb(241,170,32)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="772" width="4" height="15" fill="rgb(231,104,9)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="788" width="4" height="15" fill="rgb(234,95,16)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="804" width="4" height="15" fill="rgb(251,24,47)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(241,32,6)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(237,122,0)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(214,35,44)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(217,207,43)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(241,132,17)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(241,90,1)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.33%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(248,203,3)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(206,226,49)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(217,81,34)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(225,212,48)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(251,41,22)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(226,121,9)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(205,196,24)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(244,206,29)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(228,89,38)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(220,33,28)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(252,218,4)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(222,142,52)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.33%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(251,90,39)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1124" width="4" height="15" fill="rgb(236,18,20)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1140" width="4" height="15" fill="rgb(221,25,0)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1156" width="4" height="15" fill="rgb(222,207,24)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1172" width="4" height="15" fill="rgb(223,106,32)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1188" width="4" height="15" fill="rgb(242,7,16)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="1204" width="4" height="15" fill="rgb(234,37,40)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1220" width="4" height="15" fill="rgb(214,214,36)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1236" width="4" height="15" fill="rgb(238,110,24)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1252" width="4" height="15" fill="rgb(233,84,0)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1268" width="4" height="15" fill="rgb(246,204,7)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1284" width="4" height="15" fill="rgb(238,42,14)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.33%)</title><rect x="25" y="1300" width="4" height="15" fill="rgb(243,68,31)"/><text x="28.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1316" width="4" height="15" fill="rgb(246,217,14)"/><text x="28.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1332" width="4" height="15" fill="rgb(222,41,52)"/><text x="28.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1348" width="4" height="15" fill="rgb(220,28,43)"/><text x="28.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1364" width="4" height="15" fill="rgb(242,129,28)"/><text x="28.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1380" width="4" height="15" fill="rgb(253,162,24)"/><text x="28.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1396" width="4" height="15" fill="rgb(218,29,42)"/><text x="28.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1412" width="4" height="15" fill="rgb(231,26,2)"/><text x="28.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.33%)</title><rect x="25" y="1428" width="4" height="15" fill="rgb(231,129,28)"/><text x="28.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1444" width="4" height="15" fill="rgb(214,171,17)"/><text x="28.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1460" width="4" height="15" fill="rgb(212,168,37)"/><text x="28.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1476" width="4" height="15" fill="rgb(250,219,1)"/><text x="28.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1492" width="4" height="15" fill="rgb(236,8,47)"/><text x="28.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1508" width="4" height="15" fill="rgb(232,198,40)"/><text x="28.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1524" width="4" height="15" fill="rgb(234,168,4)"/><text x="28.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1540" width="4" height="15" fill="rgb(230,129,48)"/><text x="28.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="1556" width="4" height="15" fill="rgb(217,223,37)"/><text x="28.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1572" width="4" height="15" fill="rgb(218,185,14)"/><text x="28.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1588" width="4" height="15" fill="rgb(218,54,35)"/><text x="28.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1604" width="4" height="15" fill="rgb(213,151,1)"/><text x="28.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1620" width="4" height="15" fill="rgb(242,199,39)"/><text x="28.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1636" width="4" height="15" fill="rgb(229,20,30)"/><text x="28.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/matfuncs.py) (1 samples, 0.33%)</title><rect x="25" y="1652" width="4" height="15" fill="rgb(250,58,6)"/><text x="28.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1668" width="4" height="15" fill="rgb(243,76,24)"/><text x="28.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1684" width="4" height="15" fill="rgb(253,116,19)"/><text x="28.00" y="1694.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1700" width="4" height="15" fill="rgb(212,141,52)"/><text x="28.00" y="1710.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1716" width="4" height="15" fill="rgb(206,101,11)"/><text x="28.00" y="1726.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1732" width="4" height="15" fill="rgb(234,126,10)"/><text x="28.00" y="1742.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1748" width="4" height="15" fill="rgb(250,174,4)"/><text x="28.00" y="1758.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1764" width="4" height="15" fill="rgb(210,127,3)"/><text x="28.00" y="1774.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1780" width="4" height="15" fill="rgb(212,206,39)"/><text x="28.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="628" width="4" height="15" fill="rgb(237,145,13)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="644" width="4" height="15" fill="rgb(231,169,51)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="660" width="4" height="15" fill="rgb(251,156,29)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="676" width="4" height="15" fill="rgb(241,113,31)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="692" width="4" height="15" fill="rgb(215,72,37)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="708" width="4" height="15" fill="rgb(220,206,4)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.33%)</title><rect x="29" y="724" width="4" height="15" fill="rgb(225,60,27)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="740" width="4" height="15" fill="rgb(219,7,36)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="756" width="4" height="15" fill="rgb(248,149,22)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="772" width="4" height="15" fill="rgb(229,170,23)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="788" width="4" height="15" fill="rgb(214,88,20)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="804" width="4" height="15" fill="rgb(251,122,54)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py) (1 samples, 0.33%)</title><rect x="29" y="820" width="4" height="15" fill="rgb(228,78,8)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="836" width="4" height="15" fill="rgb(205,226,18)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="852" width="4" height="15" fill="rgb(238,42,40)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="868" width="4" height="15" fill="rgb(220,5,36)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="884" width="4" height="15" fill="rgb(244,206,47)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="900" width="4" height="15" fill="rgb(253,172,16)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py) (1 samples, 0.33%)</title><rect x="29" y="916" width="4" height="15" fill="rgb(213,113,51)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="932" width="4" height="15" fill="rgb(209,211,31)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(222,20,34)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(234,155,37)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(221,111,7)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="996" width="4" height="15" fill="rgb(236,119,52)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/nanops.py) (1 samples, 0.33%)</title><rect x="29" y="1012" width="4" height="15" fill="rgb(220,159,53)"/><text x="32.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.67%)</title><rect x="29" y="580" width="8" height="15" fill="rgb(226,121,49)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="29" y="596" width="8" height="15" fill="rgb(227,11,0)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="29" y="612" width="8" height="15" fill="rgb(218,45,41)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="628" width="4" height="15" fill="rgb(247,89,29)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="644" width="4" height="15" fill="rgb(206,150,5)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="660" width="4" height="15" fill="rgb(231,199,36)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.33%)</title><rect x="33" y="676" width="4" height="15" fill="rgb(233,152,20)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="692" width="4" height="15" fill="rgb(247,193,6)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="708" width="4" height="15" fill="rgb(229,10,34)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="724" width="4" height="15" fill="rgb(225,27,9)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="740" width="4" height="15" fill="rgb(221,17,31)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="756" width="4" height="15" fill="rgb(206,31,36)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.33%)</title><rect x="33" y="772" width="4" height="15" fill="rgb(205,67,21)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="788" width="4" height="15" fill="rgb(234,194,41)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="804" width="4" height="15" fill="rgb(207,207,3)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="820" width="4" height="15" fill="rgb(242,146,47)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="836" width="4" height="15" fill="rgb(238,125,21)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="852" width="4" height="15" fill="rgb(222,86,14)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.33%)</title><rect x="33" y="868" width="4" height="15" fill="rgb(227,139,51)"/><text x="36.00" y="878.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.33%)</title><rect x="33" y="884" width="4" height="15" fill="rgb(248,180,43)"/><text x="36.00" y="894.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.33%)</title><rect x="33" y="900" width="4" height="15" fill="rgb(224,79,13)"/><text x="36.00" y="910.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.33%)</title><rect x="33" y="916" width="4" height="15" fill="rgb(228,129,27)"/><text x="36.00" y="926.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.33%)</title><rect x="33" y="932" width="4" height="15" fill="rgb(238,159,19)"/><text x="36.00" y="942.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.33%)</title><rect x="33" y="948" width="4" height="15" fill="rgb(249,113,29)"/><text x="36.00" y="958.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.33%)</title><rect x="33" y="964" width="4" height="15" fill="rgb(242,210,10)"/><text x="36.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.67%)</title><rect x="10" y="292" width="31" height="15" fill="rgb(224,15,18)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="10" y="308" width="31" height="15" fill="rgb(253,126,19)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="10" y="324" width="31" height="15" fill="rgb(246,130,36)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="340" width="12" height="15" fill="rgb(249,0,17)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="29" y="356" width="12" height="15" fill="rgb(208,29,36)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="372" width="12" height="15" fill="rgb(213,57,48)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.00%)</title><rect x="29" y="388" width="12" height="15" fill="rgb(236,220,14)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="404" width="12" height="15" fill="rgb(237,190,27)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="420" width="12" height="15" fill="rgb(248,97,49)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="436" width="12" height="15" fill="rgb(216,29,10)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="29" y="452" width="12" height="15" fill="rgb(223,18,37)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="468" width="12" height="15" fill="rgb(222,170,51)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.00%)</title><rect x="29" y="484" width="12" height="15" fill="rgb(206,24,14)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="500" width="12" height="15" fill="rgb(233,11,28)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="516" width="12" height="15" fill="rgb(219,192,6)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="532" width="12" height="15" fill="rgb(220,139,38)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="29" y="548" width="12" height="15" fill="rgb(248,168,15)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="564" width="12" height="15" fill="rgb(246,154,35)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.33%)</title><rect x="37" y="580" width="4" height="15" fill="rgb(249,44,4)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="596" width="4" height="15" fill="rgb(235,33,4)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="612" width="4" height="15" fill="rgb(247,159,32)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="628" width="4" height="15" fill="rgb(214,190,0)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="37" y="644" width="4" height="15" fill="rgb(248,118,38)"/><text x="40.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="660" width="4" height="15" fill="rgb(246,127,26)"/><text x="40.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/io/packers.py) (1 samples, 0.33%)</title><rect x="37" y="676" width="4" height="15" fill="rgb(233,206,47)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="692" width="4" height="15" fill="rgb(234,25,16)"/><text x="40.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="708" width="4" height="15" fill="rgb(228,19,16)"/><text x="40.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="724" width="4" height="15" fill="rgb(221,174,11)"/><text x="40.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="37" y="740" width="4" height="15" fill="rgb(221,55,37)"/><text x="40.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="756" width="4" height="15" fill="rgb(238,129,4)"/><text x="40.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/io/msgpack/__init__.py) (1 samples, 0.33%)</title><rect x="37" y="772" width="4" height="15" fill="rgb(211,226,19)"/><text x="40.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="788" width="4" height="15" fill="rgb(220,141,33)"/><text x="40.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="804" width="4" height="15" fill="rgb(240,135,23)"/><text x="40.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="820" width="4" height="15" fill="rgb(207,25,16)"/><text x="40.00" y="830.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="37" y="836" width="4" height="15" fill="rgb(219,31,18)"/><text x="40.00" y="846.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="37" y="852" width="4" height="15" fill="rgb(230,191,21)"/><text x="40.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="41" y="868" width="4" height="15" fill="rgb(236,43,47)"/><text x="44.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="41" y="884" width="4" height="15" fill="rgb(209,124,54)"/><text x="44.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="41" y="900" width="4" height="15" fill="rgb(220,137,14)"/><text x="44.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="41" y="916" width="4" height="15" fill="rgb(247,187,16)"/><text x="44.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="41" y="932" width="4" height="15" fill="rgb(215,22,53)"/><text x="44.00" y="942.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.33%)</title><rect x="41" y="948" width="4" height="15" fill="rgb(231,11,30)"/><text x="44.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.33%)</title><rect x="41" y="964" width="4" height="15" fill="rgb(231,8,39)"/><text x="44.00" y="974.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="45" y="964" width="4" height="15" fill="rgb(225,18,8)"/><text x="48.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="45" y="980" width="4" height="15" fill="rgb(240,174,19)"/><text x="48.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="45" y="996" width="4" height="15" fill="rgb(215,203,18)"/><text x="48.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.33%)</title><rect x="45" y="1012" width="4" height="15" fill="rgb(224,220,4)"/><text x="48.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.33%)</title><rect x="45" y="1028" width="4" height="15" fill="rgb(227,181,47)"/><text x="48.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.33%)</title><rect x="45" y="1044" width="4" height="15" fill="rgb(231,106,19)"/><text x="48.00" y="1054.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="45" y="932" width="8" height="15" fill="rgb(224,199,10)"/><text x="48.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="45" y="948" width="8" height="15" fill="rgb(224,46,26)"/><text x="48.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.33%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(235,181,20)"/><text x="52.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.33%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(248,101,29)"/><text x="52.00" y="990.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.33%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(239,217,15)"/><text x="52.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="868" width="12" height="15" fill="rgb(235,223,8)"/><text x="48.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="884" width="12" height="15" fill="rgb(229,46,0)"/><text x="48.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="900" width="12" height="15" fill="rgb(213,15,52)"/><text x="48.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="916" width="12" height="15" fill="rgb(209,40,27)"/><text x="48.00" y="926.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.33%)</title><rect x="53" y="932" width="4" height="15" fill="rgb(213,183,10)"/><text x="56.00" y="942.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.33%)</title><rect x="53" y="948" width="4" height="15" fill="rgb(210,130,14)"/><text x="56.00" y="958.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="916" width="4" height="15" fill="rgb(216,121,18)"/><text x="60.00" y="926.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="932" width="4" height="15" fill="rgb(217,104,13)"/><text x="60.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="57" y="900" width="8" height="15" fill="rgb(232,10,41)"/><text x="60.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="61" y="916" width="4" height="15" fill="rgb(226,38,10)"/><text x="64.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="41" y="356" width="28" height="15" fill="rgb(235,28,9)"/><text x="44.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="372" width="28" height="15" fill="rgb(210,1,8)"/><text x="44.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 2.33%)</title><rect x="41" y="388" width="28" height="15" fill="rgb(205,36,9)"/><text x="44.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="404" width="28" height="15" fill="rgb(213,24,4)"/><text x="44.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="420" width="28" height="15" fill="rgb(227,84,31)"/><text x="44.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="436" width="28" height="15" fill="rgb(214,52,0)"/><text x="44.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="41" y="452" width="28" height="15" fill="rgb(208,65,2)"/><text x="44.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="468" width="28" height="15" fill="rgb(228,13,52)"/><text x="44.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 2.33%)</title><rect x="41" y="484" width="28" height="15" fill="rgb(248,182,26)"/><text x="44.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="500" width="28" height="15" fill="rgb(214,111,19)"/><text x="44.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="516" width="28" height="15" fill="rgb(209,162,36)"/><text x="44.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="532" width="28" height="15" fill="rgb(227,222,13)"/><text x="44.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="41" y="548" width="28" height="15" fill="rgb(222,44,48)"/><text x="44.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="564" width="28" height="15" fill="rgb(240,10,32)"/><text x="44.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 2.33%)</title><rect x="41" y="580" width="28" height="15" fill="rgb(207,39,11)"/><text x="44.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="596" width="28" height="15" fill="rgb(229,120,30)"/><text x="44.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="612" width="28" height="15" fill="rgb(242,52,44)"/><text x="44.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="628" width="28" height="15" fill="rgb(246,11,45)"/><text x="44.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="644" width="28" height="15" fill="rgb(215,165,52)"/><text x="44.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="660" width="28" height="15" fill="rgb(219,58,24)"/><text x="44.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="676" width="28" height="15" fill="rgb(242,54,15)"/><text x="44.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="41" y="692" width="28" height="15" fill="rgb(210,195,48)"/><text x="44.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="708" width="28" height="15" fill="rgb(221,85,39)"/><text x="44.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 2.33%)</title><rect x="41" y="724" width="28" height="15" fill="rgb(212,181,43)"/><text x="44.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="740" width="28" height="15" fill="rgb(253,76,15)"/><text x="44.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="756" width="28" height="15" fill="rgb(237,124,47)"/><text x="44.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="772" width="28" height="15" fill="rgb(248,201,27)"/><text x="44.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="41" y="788" width="28" height="15" fill="rgb(223,157,22)"/><text x="44.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="804" width="28" height="15" fill="rgb(226,148,19)"/><text x="44.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 2.33%)</title><rect x="41" y="820" width="28" height="15" fill="rgb(243,154,42)"/><text x="44.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 2.33%)</title><rect x="41" y="836" width="28" height="15" fill="rgb(240,54,35)"/><text x="44.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 2.33%)</title><rect x="41" y="852" width="28" height="15" fill="rgb(236,195,43)"/><text x="44.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="57" y="868" width="12" height="15" fill="rgb(244,19,25)"/><text x="60.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="57" y="884" width="12" height="15" fill="rgb(241,71,8)"/><text x="60.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="65" y="900" width="4" height="15" fill="rgb(239,40,45)"/><text x="68.00" y="910.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.33%)</title><rect x="65" y="916" width="4" height="15" fill="rgb(213,182,25)"/><text x="68.00" y="926.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.33%)</title><rect x="65" y="932" width="4" height="15" fill="rgb(252,227,5)"/><text x="68.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="196" width="62" height="15" fill="rgb(254,226,0)"/><text x="13.00" y="206.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="212" width="62" height="15" fill="rgb(229,141,38)"/><text x="13.00" y="222.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="228" width="62" height="15" fill="rgb(253,173,19)"/><text x="13.00" y="238.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="244" width="62" height="15" fill="rgb(250,159,16)"/><text x="13.00" y="254.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 5.33%)</title><rect x="10" y="260" width="62" height="15" fill="rgb(246,150,10)"/><text x="13.00" y="270.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="276" width="62" height="15" fill="rgb(245,79,13)"/><text x="13.00" y="286.50">_call_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 2.67%)</title><rect x="41" y="292" width="31" height="15" fill="rgb(234,150,10)"/><text x="44.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="41" y="308" width="31" height="15" fill="rgb(219,188,51)"/><text x="44.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="41" y="324" width="31" height="15" fill="rgb(217,27,31)"/><text x="44.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="41" y="340" width="31" height="15" fill="rgb(241,100,53)"/><text x="44.00" y="350.50">_l..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="356" width="3" height="15" fill="rgb(224,195,12)"/><text x="72.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="372" width="3" height="15" fill="rgb(217,169,36)"/><text x="72.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="388" width="3" height="15" fill="rgb(212,66,11)"/><text x="72.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="404" width="3" height="15" fill="rgb(226,100,7)"/><text x="72.00" y="414.50"></text></g><g><title>0x7fd28c4cf995 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="420" width="3" height="15" fill="rgb(246,106,46)"/><text x="72.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="436" width="3" height="15" fill="rgb(239,75,4)"/><text x="72.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="452" width="3" height="15" fill="rgb(212,167,44)"/><text x="72.00" y="462.50"></text></g><g><title>0x7fd28c4cf258 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="468" width="3" height="15" fill="rgb(240,94,4)"/><text x="72.00" y="478.50"></text></g><g><title>0x7fd28c51cd7a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="484" width="3" height="15" fill="rgb(229,146,8)"/><text x="72.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="500" width="3" height="15" fill="rgb(237,30,13)"/><text x="72.00" y="510.50"></text></g><g><title>0x7fd28c51d345 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="516" width="3" height="15" fill="rgb(219,2,26)"/><text x="72.00" y="526.50"></text></g><g><title>0x7fd28c515f28 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="532" width="3" height="15" fill="rgb(247,163,29)"/><text x="72.00" y="542.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="244" width="4" height="15" fill="rgb(208,99,37)"/><text x="75.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="260" width="4" height="15" fill="rgb(209,229,11)"/><text x="75.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="276" width="4" height="15" fill="rgb(225,170,13)"/><text x="75.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="292" width="4" height="15" fill="rgb(232,104,30)"/><text x="75.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="308" width="4" height="15" fill="rgb(232,143,9)"/><text x="75.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="324" width="4" height="15" fill="rgb(248,59,12)"/><text x="75.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.33%)</title><rect x="72" y="340" width="4" height="15" fill="rgb(212,105,28)"/><text x="75.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="356" width="4" height="15" fill="rgb(222,190,1)"/><text x="75.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="372" width="4" height="15" fill="rgb(211,111,53)"/><text x="75.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="388" width="4" height="15" fill="rgb(248,124,30)"/><text x="75.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="404" width="4" height="15" fill="rgb(237,180,6)"/><text x="75.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="420" width="4" height="15" fill="rgb(247,11,15)"/><text x="75.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="436" width="4" height="15" fill="rgb(246,192,12)"/><text x="75.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="452" width="4" height="15" fill="rgb(226,99,54)"/><text x="75.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="468" width="4" height="15" fill="rgb(229,220,20)"/><text x="75.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="484" width="4" height="15" fill="rgb(233,59,5)"/><text x="75.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="500" width="4" height="15" fill="rgb(223,79,54)"/><text x="75.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="516" width="4" height="15" fill="rgb(223,68,30)"/><text x="75.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="532" width="4" height="15" fill="rgb(235,5,25)"/><text x="75.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="548" width="4" height="15" fill="rgb(253,26,21)"/><text x="75.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="564" width="4" height="15" fill="rgb(244,176,54)"/><text x="75.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.33%)</title><rect x="72" y="580" width="4" height="15" fill="rgb(210,165,3)"/><text x="75.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="596" width="4" height="15" fill="rgb(216,106,11)"/><text x="75.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="612" width="4" height="15" fill="rgb(233,65,5)"/><text x="75.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="628" width="4" height="15" fill="rgb(252,1,28)"/><text x="75.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="644" width="4" height="15" fill="rgb(210,83,36)"/><text x="75.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="660" width="4" height="15" fill="rgb(211,110,38)"/><text x="75.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.33%)</title><rect x="72" y="676" width="4" height="15" fill="rgb(207,42,54)"/><text x="75.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="692" width="4" height="15" fill="rgb(235,23,44)"/><text x="75.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="708" width="4" height="15" fill="rgb(245,181,9)"/><text x="75.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="724" width="4" height="15" fill="rgb(218,187,0)"/><text x="75.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="740" width="4" height="15" fill="rgb(234,117,47)"/><text x="75.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="756" width="4" height="15" fill="rgb(238,194,47)"/><text x="75.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="772" width="4" height="15" fill="rgb(206,92,37)"/><text x="75.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="788" width="4" height="15" fill="rgb(239,149,48)"/><text x="75.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="804" width="4" height="15" fill="rgb(208,151,1)"/><text x="75.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="820" width="4" height="15" fill="rgb(218,127,47)"/><text x="75.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="836" width="4" height="15" fill="rgb(237,71,8)"/><text x="75.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="852" width="4" height="15" fill="rgb(254,186,0)"/><text x="75.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="868" width="4" height="15" fill="rgb(239,24,9)"/><text x="75.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="884" width="4" height="15" fill="rgb(250,127,42)"/><text x="75.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.33%)</title><rect x="72" y="900" width="4" height="15" fill="rgb(219,167,32)"/><text x="75.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.00%)</title><rect x="10" y="68" width="70" height="15" fill="rgb(229,193,7)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.00%)</title><rect x="10" y="84" width="70" height="15" fill="rgb(213,53,13)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.00%)</title><rect x="10" y="100" width="70" height="15" fill="rgb(217,38,45)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 6.00%)</title><rect x="10" y="116" width="70" height="15" fill="rgb(209,210,49)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.00%)</title><rect x="10" y="132" width="70" height="15" fill="rgb(241,173,45)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (18 samples, 6.00%)</title><rect x="10" y="148" width="70" height="15" fill="rgb(211,74,6)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.00%)</title><rect x="10" y="164" width="70" height="15" fill="rgb(218,8,26)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.00%)</title><rect x="10" y="180" width="70" height="15" fill="rgb(227,202,18)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="72" y="196" width="8" height="15" fill="rgb(213,225,32)"/><text x="75.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="72" y="212" width="8" height="15" fill="rgb(254,2,50)"/><text x="75.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="72" y="228" width="8" height="15" fill="rgb(215,1,50)"/><text x="75.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.33%)</title><rect x="76" y="244" width="4" height="15" fill="rgb(254,56,7)"/><text x="79.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="260" width="4" height="15" fill="rgb(215,196,12)"/><text x="79.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="276" width="4" height="15" fill="rgb(214,156,9)"/><text x="79.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="292" width="4" height="15" fill="rgb(210,197,7)"/><text x="79.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="308" width="4" height="15" fill="rgb(230,196,20)"/><text x="79.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="324" width="4" height="15" fill="rgb(234,196,48)"/><text x="79.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="76" y="340" width="4" height="15" fill="rgb(245,204,29)"/><text x="79.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="356" width="4" height="15" fill="rgb(210,52,49)"/><text x="79.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.33%)</title><rect x="76" y="372" width="4" height="15" fill="rgb(231,0,6)"/><text x="79.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="388" width="4" height="15" fill="rgb(249,135,48)"/><text x="79.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="404" width="4" height="15" fill="rgb(213,216,21)"/><text x="79.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="420" width="4" height="15" fill="rgb(208,216,34)"/><text x="79.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="436" width="4" height="15" fill="rgb(207,63,50)"/><text x="79.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="452" width="4" height="15" fill="rgb(241,164,9)"/><text x="79.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="76" y="468" width="4" height="15" fill="rgb(232,75,24)"/><text x="79.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="484" width="4" height="15" fill="rgb(210,212,36)"/><text x="79.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py) (1 samples, 0.33%)</title><rect x="76" y="500" width="4" height="15" fill="rgb(231,15,16)"/><text x="79.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.33%)</title><rect x="76" y="516" width="4" height="15" fill="rgb(225,19,16)"/><text x="79.00" y="526.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="84" y="116" width="4" height="15" fill="rgb(219,194,33)"/><text x="87.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="84" y="132" width="4" height="15" fill="rgb(248,36,36)"/><text x="87.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="84" y="148" width="4" height="15" fill="rgb(239,133,14)"/><text x="87.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="131" y="180" width="4" height="15" fill="rgb(212,117,43)"/><text x="134.00" y="190.50"></text></g><g><title>0x7fd24caf0ff9 (?) (1 samples, 0.33%)</title><rect x="143" y="212" width="4" height="15" fill="rgb(215,166,37)"/><text x="146.00" y="222.50"></text></g><g><title>0x7fd24caec571 (?) (1 samples, 0.33%)</title><rect x="143" y="228" width="4" height="15" fill="rgb(229,151,36)"/><text x="146.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.67%)</title><rect x="147" y="212" width="8" height="15" fill="rgb(206,51,31)"/><text x="150.00" y="222.50"></text></g><g><title>0x7fd24cab81a0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="159" y="228" width="4" height="15" fill="rgb(227,108,35)"/><text x="162.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="163" y="260" width="4" height="15" fill="rgb(229,195,50)"/><text x="166.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="292" width="4" height="15" fill="rgb(236,32,1)"/><text x="174.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="308" width="4" height="15" fill="rgb(236,154,5)"/><text x="174.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="171" y="324" width="4" height="15" fill="rgb(212,16,4)"/><text x="174.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="171" y="340" width="4" height="15" fill="rgb(236,148,11)"/><text x="174.00" y="350.50"></text></g><g><title>0x7fd28c24900a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="171" y="356" width="4" height="15" fill="rgb(240,103,31)"/><text x="174.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="175" y="292" width="4" height="15" fill="rgb(205,15,2)"/><text x="178.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="179" y="356" width="4" height="15" fill="rgb(240,42,26)"/><text x="182.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="179" y="340" width="8" height="15" fill="rgb(207,158,18)"/><text x="182.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="356" width="4" height="15" fill="rgb(229,203,29)"/><text x="186.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.67%)</title><rect x="171" y="276" width="19" height="15" fill="rgb(210,20,0)"/><text x="174.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="179" y="292" width="11" height="15" fill="rgb(241,79,21)"/><text x="182.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="179" y="308" width="11" height="15" fill="rgb(230,36,13)"/><text x="182.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="179" y="324" width="11" height="15" fill="rgb(235,132,12)"/><text x="182.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="340" width="3" height="15" fill="rgb(209,7,45)"/><text x="190.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="356" width="3" height="15" fill="rgb(227,56,38)"/><text x="190.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="372" width="3" height="15" fill="rgb(209,117,45)"/><text x="190.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="388" width="3" height="15" fill="rgb(216,50,38)"/><text x="190.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="404" width="3" height="15" fill="rgb(246,78,23)"/><text x="190.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="420" width="3" height="15" fill="rgb(243,179,54)"/><text x="190.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="436" width="3" height="15" fill="rgb(209,176,42)"/><text x="190.00" y="446.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="452" width="3" height="15" fill="rgb(249,43,54)"/><text x="190.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.33%)</title><rect x="167" y="260" width="27" height="15" fill="rgb(214,54,17)"/><text x="170.00" y="270.50">o..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="190" y="276" width="4" height="15" fill="rgb(240,203,27)"/><text x="193.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="190" y="292" width="4" height="15" fill="rgb(246,205,12)"/><text x="193.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="194" y="260" width="4" height="15" fill="rgb(237,67,29)"/><text x="197.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.67%)</title><rect x="163" y="244" width="43" height="15" fill="rgb(207,207,33)"/><text x="166.00" y="254.50">onnx..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="198" y="260" width="8" height="15" fill="rgb(235,175,10)"/><text x="201.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.67%)</title><rect x="198" y="276" width="8" height="15" fill="rgb(217,18,42)"/><text x="201.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.67%)</title><rect x="198" y="292" width="8" height="15" fill="rgb(235,99,16)"/><text x="201.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.33%)</title><rect x="202" y="308" width="4" height="15" fill="rgb(235,185,23)"/><text x="205.00" y="318.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="206" y="244" width="4" height="15" fill="rgb(206,150,3)"/><text x="209.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 10.33%)</title><rect x="92" y="132" width="122" height="15" fill="rgb(251,101,18)"/><text x="95.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (31 samples, 10.33%)</title><rect x="92" y="148" width="122" height="15" fill="rgb(242,156,37)"/><text x="95.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (27 samples, 9.00%)</title><rect x="108" y="164" width="106" height="15" fill="rgb(234,115,5)"/><text x="111.00" y="174.50">_run_whole_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (20 samples, 6.67%)</title><rect x="135" y="180" width="79" height="15" fill="rgb(248,221,5)"/><text x="138.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py) (20 samples, 6.67%)</title><rect x="135" y="196" width="79" height="15" fill="rgb(214,123,15)"/><text x="138.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.00%)</title><rect x="155" y="212" width="59" height="15" fill="rgb(245,30,29)"/><text x="158.00" y="222.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.33%)</title><rect x="163" y="228" width="51" height="15" fill="rgb(248,109,50)"/><text x="166.00" y="238.50">void ..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="210" y="244" width="4" height="15" fill="rgb(230,94,32)"/><text x="213.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="210" y="260" width="4" height="15" fill="rgb(247,136,31)"/><text x="213.00" y="270.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (35 samples, 11.67%)</title><rect x="80" y="68" width="138" height="15" fill="rgb(251,66,42)"/><text x="83.00" y="78.50">profile_ort (benc..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (35 samples, 11.67%)</title><rect x="80" y="84" width="138" height="15" fill="rgb(209,6,33)"/><text x="83.00" y="94.50">setup_profile (be..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (35 samples, 11.67%)</title><rect x="80" y="100" width="138" height="15" fill="rgb(245,221,13)"/><text x="83.00" y="110.50">profile (bench_Lo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (33 samples, 11.00%)</title><rect x="88" y="116" width="130" height="15" fill="rgb(211,3,18)"/><text x="91.00" y="126.50">time_predict (ml..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="214" y="132" width="4" height="15" fill="rgb(213,96,42)"/><text x="217.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="218" y="132" width="4" height="15" fill="rgb(234,81,5)"/><text x="221.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.67%)</title><rect x="218" y="116" width="8" height="15" fill="rgb(234,161,1)"/><text x="221.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="222" y="132" width="4" height="15" fill="rgb(228,9,32)"/><text x="225.00" y="142.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.33%)</title><rect x="375" y="212" width="4" height="15" fill="rgb(241,205,2)"/><text x="378.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="375" y="228" width="4" height="15" fill="rgb(221,153,1)"/><text x="378.00" y="238.50"></text></g><g><title>0x7fd28c268124 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="399" y="244" width="4" height="15" fill="rgb(253,212,42)"/><text x="402.00" y="254.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.33%)</title><rect x="426" y="324" width="4" height="15" fill="rgb(221,88,14)"/><text x="429.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.33%)</title><rect x="426" y="340" width="4" height="15" fill="rgb(249,123,25)"/><text x="429.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.33%)</title><rect x="426" y="356" width="4" height="15" fill="rgb(207,119,33)"/><text x="429.00" y="366.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (8 samples, 2.67%)</title><rect x="403" y="244" width="31" height="15" fill="rgb(238,73,43)"/><text x="406.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.67%)</title><rect x="415" y="260" width="19" height="15" fill="rgb(241,51,12)"/><text x="418.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 1.67%)</title><rect x="415" y="276" width="19" height="15" fill="rgb(250,90,22)"/><text x="418.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 1.67%)</title><rect x="415" y="292" width="19" height="15" fill="rgb(243,170,47)"/><text x="418.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 1.00%)</title><rect x="423" y="308" width="11" height="15" fill="rgb(234,34,8)"/><text x="426.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="430" y="324" width="4" height="15" fill="rgb(222,68,25)"/><text x="433.00" y="334.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (4 samples, 1.33%)</title><rect x="434" y="244" width="16" height="15" fill="rgb(224,195,53)"/><text x="437.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (2 samples, 0.67%)</title><rect x="442" y="260" width="8" height="15" fill="rgb(226,164,48)"/><text x="445.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.67%)</title><rect x="442" y="276" width="8" height="15" fill="rgb(245,176,43)"/><text x="445.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="446" y="292" width="4" height="15" fill="rgb(214,44,41)"/><text x="449.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="446" y="308" width="4" height="15" fill="rgb(248,152,35)"/><text x="449.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.33%)</title><rect x="446" y="324" width="4" height="15" fill="rgb(220,104,24)"/><text x="449.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="446" y="340" width="4" height="15" fill="rgb(233,188,43)"/><text x="449.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.33%)</title><rect x="454" y="276" width="4" height="15" fill="rgb(219,95,2)"/><text x="457.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.33%)</title><rect x="458" y="356" width="4" height="15" fill="rgb(225,218,1)"/><text x="461.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.33%)</title><rect x="458" y="372" width="4" height="15" fill="rgb(248,2,11)"/><text x="461.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.67%)</title><rect x="458" y="292" width="8" height="15" fill="rgb(246,100,53)"/><text x="461.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.67%)</title><rect x="458" y="308" width="8" height="15" fill="rgb(214,208,46)"/><text x="461.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.67%)</title><rect x="458" y="324" width="8" height="15" fill="rgb(205,135,50)"/><text x="461.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.67%)</title><rect x="458" y="340" width="8" height="15" fill="rgb(216,137,19)"/><text x="461.00" y="350.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.33%)</title><rect x="462" y="356" width="4" height="15" fill="rgb(252,50,38)"/><text x="465.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.33%)</title><rect x="474" y="324" width="4" height="15" fill="rgb(212,162,32)"/><text x="477.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.33%)</title><rect x="478" y="324" width="4" height="15" fill="rgb(217,228,14)"/><text x="481.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.33%)</title><rect x="482" y="324" width="3" height="15" fill="rgb(240,89,25)"/><text x="485.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.67%)</title><rect x="470" y="308" width="19" height="15" fill="rgb(211,19,28)"/><text x="473.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.33%)</title><rect x="485" y="324" width="4" height="15" fill="rgb(233,215,10)"/><text x="488.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.33%)</title><rect x="466" y="292" width="27" height="15" fill="rgb(222,169,14)"/><text x="469.00" y="302.50">i..</text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.33%)</title><rect x="489" y="308" width="4" height="15" fill="rgb(244,46,15)"/><text x="492.00" y="318.50"></text></g><g><title>0x7fd26e64c33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="493" y="308" width="4" height="15" fill="rgb(226,109,35)"/><text x="496.00" y="318.50"></text></g><g><title>0x7fd26e66e214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="493" y="324" width="4" height="15" fill="rgb(228,24,9)"/><text x="496.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.33%)</title><rect x="493" y="340" width="4" height="15" fill="rgb(244,17,47)"/><text x="496.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 3.67%)</title><rect x="458" y="276" width="43" height="15" fill="rgb(236,167,12)"/><text x="461.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="493" y="292" width="8" height="15" fill="rgb(225,43,25)"/><text x="496.00" y="302.50"></text></g><g><title>0x7fd26e66e13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="497" y="308" width="4" height="15" fill="rgb(205,174,11)"/><text x="500.00" y="318.50"></text></g><g><title>0x7fd26e66defe (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="497" y="324" width="4" height="15" fill="rgb(247,180,5)"/><text x="500.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.67%)</title><rect x="450" y="260" width="55" height="15" fill="rgb(228,98,22)"/><text x="453.00" y="270.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="501" y="276" width="4" height="15" fill="rgb(219,209,0)"/><text x="504.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (32 samples, 10.67%)</title><rect x="383" y="228" width="126" height="15" fill="rgb(237,35,16)"/><text x="386.00" y="238.50">_run (mlprodict..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 5.00%)</title><rect x="450" y="244" width="59" height="15" fill="rgb(229,132,51)"/><text x="453.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="505" y="260" width="4" height="15" fill="rgb(233,95,36)"/><text x="508.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="525" y="260" width="4" height="15" fill="rgb(249,68,47)"/><text x="528.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="525" y="276" width="4" height="15" fill="rgb(237,212,32)"/><text x="528.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="525" y="292" width="4" height="15" fill="rgb(208,98,47)"/><text x="528.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.33%)</title><rect x="529" y="324" width="4" height="15" fill="rgb(247,217,43)"/><text x="532.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.67%)</title><rect x="529" y="260" width="8" height="15" fill="rgb(245,105,6)"/><text x="532.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.67%)</title><rect x="529" y="276" width="8" height="15" fill="rgb(206,104,23)"/><text x="532.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.67%)</title><rect x="529" y="292" width="8" height="15" fill="rgb(222,160,8)"/><text x="532.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.67%)</title><rect x="529" y="308" width="8" height="15" fill="rgb(243,31,50)"/><text x="532.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="533" y="324" width="4" height="15" fill="rgb(220,18,27)"/><text x="536.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="533" y="340" width="4" height="15" fill="rgb(234,144,5)"/><text x="536.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.00%)</title><rect x="556" y="324" width="12" height="15" fill="rgb(244,86,27)"/><text x="559.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.00%)</title><rect x="556" y="340" width="12" height="15" fill="rgb(245,122,2)"/><text x="559.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 1.00%)</title><rect x="556" y="356" width="12" height="15" fill="rgb(239,58,36)"/><text x="559.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 1.00%)</title><rect x="556" y="372" width="12" height="15" fill="rgb(233,38,22)"/><text x="559.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 1.00%)</title><rect x="556" y="388" width="12" height="15" fill="rgb(235,59,43)"/><text x="559.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.33%)</title><rect x="572" y="340" width="4" height="15" fill="rgb(209,92,23)"/><text x="575.00" y="350.50"></text></g><g><title>0x7fd28b468c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="584" y="388" width="4" height="15" fill="rgb(248,213,44)"/><text x="587.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.33%)</title><rect x="576" y="372" width="16" height="15" fill="rgb(233,105,30)"/><text x="579.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.33%)</title><rect x="588" y="388" width="4" height="15" fill="rgb(212,206,43)"/><text x="591.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.33%)</title><rect x="592" y="404" width="4" height="15" fill="rgb(228,40,33)"/><text x="595.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 2.00%)</title><rect x="576" y="356" width="24" height="15" fill="rgb(212,102,25)"/><text x="579.00" y="366.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.67%)</title><rect x="592" y="372" width="8" height="15" fill="rgb(230,183,7)"/><text x="595.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.67%)</title><rect x="592" y="388" width="8" height="15" fill="rgb(246,20,43)"/><text x="595.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.33%)</title><rect x="596" y="404" width="4" height="15" fill="rgb(220,27,42)"/><text x="599.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="596" y="420" width="4" height="15" fill="rgb(233,90,50)"/><text x="599.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="596" y="436" width="4" height="15" fill="rgb(241,154,47)"/><text x="599.00" y="446.50"></text></g><g><title>array_sum (methods.c) (17 samples, 5.67%)</title><rect x="537" y="260" width="66" height="15" fill="rgb(253,88,38)"/><text x="540.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c) (17 samples, 5.67%)</title><rect x="537" y="276" width="66" height="15" fill="rgb(214,100,29)"/><text x="540.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 5.00%)</title><rect x="544" y="292" width="59" height="15" fill="rgb(245,48,3)"/><text x="547.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 4.33%)</title><rect x="552" y="308" width="51" height="15" fill="rgb(222,62,47)"/><text x="555.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 3.00%)</title><rect x="568" y="324" width="35" height="15" fill="rgb(224,138,42)"/><text x="571.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 2.33%)</title><rect x="576" y="340" width="27" height="15" fill="rgb(228,82,46)"/><text x="579.00" y="350.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.33%)</title><rect x="600" y="356" width="3" height="15" fill="rgb(232,155,34)"/><text x="603.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="600" y="372" width="3" height="15" fill="rgb(233,62,38)"/><text x="603.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="600" y="388" width="3" height="15" fill="rgb(229,128,14)"/><text x="603.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="600" y="404" width="3" height="15" fill="rgb(207,135,51)"/><text x="603.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.33%)</title><rect x="600" y="420" width="3" height="15" fill="rgb(248,80,9)"/><text x="603.00" y="430.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.33%)</title><rect x="607" y="308" width="4" height="15" fill="rgb(251,69,33)"/><text x="610.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.67%)</title><rect x="607" y="276" width="8" height="15" fill="rgb(230,190,28)"/><text x="610.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.67%)</title><rect x="607" y="292" width="8" height="15" fill="rgb(249,135,11)"/><text x="610.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.33%)</title><rect x="611" y="308" width="4" height="15" fill="rgb(247,91,29)"/><text x="614.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="611" y="324" width="4" height="15" fill="rgb(227,73,1)"/><text x="614.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.33%)</title><rect x="615" y="292" width="4" height="15" fill="rgb(253,136,36)"/><text x="618.00" y="302.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.33%)</title><rect x="615" y="308" width="4" height="15" fill="rgb(251,26,17)"/><text x="618.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="619" y="308" width="4" height="15" fill="rgb(252,28,20)"/><text x="622.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="623" y="324" width="4" height="15" fill="rgb(253,7,41)"/><text x="626.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.33%)</title><rect x="623" y="340" width="4" height="15" fill="rgb(215,211,44)"/><text x="626.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.33%)</title><rect x="623" y="356" width="4" height="15" fill="rgb(230,190,11)"/><text x="626.00" y="366.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.33%)</title><rect x="623" y="372" width="4" height="15" fill="rgb(212,191,19)"/><text x="626.00" y="382.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.33%)</title><rect x="623" y="388" width="4" height="15" fill="rgb(215,26,2)"/><text x="626.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="627" y="324" width="4" height="15" fill="rgb(252,97,29)"/><text x="630.00" y="334.50"></text></g><g><title>0x7fd28c247902 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="627" y="340" width="4" height="15" fill="rgb(229,68,9)"/><text x="630.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.00%)</title><rect x="623" y="308" width="12" height="15" fill="rgb(239,191,40)"/><text x="626.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.33%)</title><rect x="631" y="324" width="4" height="15" fill="rgb(253,75,24)"/><text x="634.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.33%)</title><rect x="631" y="340" width="4" height="15" fill="rgb(222,192,11)"/><text x="634.00" y="350.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.33%)</title><rect x="635" y="324" width="4" height="15" fill="rgb(253,95,10)"/><text x="638.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.33%)</title><rect x="635" y="340" width="4" height="15" fill="rgb(237,105,23)"/><text x="638.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.00%)</title><rect x="619" y="292" width="24" height="15" fill="rgb(213,20,54)"/><text x="622.00" y="302.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="635" y="308" width="8" height="15" fill="rgb(221,169,38)"/><text x="638.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.33%)</title><rect x="639" y="324" width="4" height="15" fill="rgb(213,134,19)"/><text x="642.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.33%)</title><rect x="639" y="340" width="4" height="15" fill="rgb(249,44,53)"/><text x="642.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.33%)</title><rect x="639" y="356" width="4" height="15" fill="rgb(222,6,43)"/><text x="642.00" y="366.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (110 samples, 36.67%)</title><rect x="218" y="68" width="433" height="15" fill="rgb(242,174,15)"/><text x="221.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solve..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (110 samples, 36.67%)</title><rect x="218" y="84" width="433" height="15" fill="rgb(233,103,16)"/><text x="221.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (110 samples, 36.67%)</title><rect x="218" y="100" width="433" height="15" fill="rgb(230,177,27)"/><text x="221.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlibl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (108 samples, 36.00%)</title><rect x="226" y="116" width="425" height="15" fill="rgb(241,132,27)"/><text x="229.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 35.00%)</title><rect x="238" y="132" width="413" height="15" fill="rgb(226,67,18)"/><text x="241.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (101 samples, 33.67%)</title><rect x="253" y="148" width="398" height="15" fill="rgb(217,203,46)"/><text x="256.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (98 samples, 32.67%)</title><rect x="265" y="164" width="386" height="15" fill="rgb(229,165,51)"/><text x="268.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (94 samples, 31.33%)</title><rect x="281" y="180" width="370" height="15" fill="rgb(241,196,23)"/><text x="284.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (73 samples, 24.33%)</title><rect x="364" y="196" width="287" height="15" fill="rgb(252,227,23)"/><text x="367.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (69 samples, 23.00%)</title><rect x="379" y="212" width="272" height="15" fill="rgb(222,158,27)"/><text x="382.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (36 samples, 12.00%)</title><rect x="509" y="228" width="142" height="15" fill="rgb(242,16,49)"/><text x="512.00" y="238.50">_run (mlprodict/on..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (34 samples, 11.33%)</title><rect x="517" y="244" width="134" height="15" fill="rgb(218,33,42)"/><text x="520.00" y="254.50">norm_l1 (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 4.00%)</title><rect x="603" y="260" width="48" height="15" fill="rgb(237,31,36)"/><text x="606.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 3.00%)</title><rect x="615" y="276" width="36" height="15" fill="rgb(207,102,22)"/><text x="618.00" y="286.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.67%)</title><rect x="643" y="292" width="8" height="15" fill="rgb(210,189,52)"/><text x="646.00" y="302.50"></text></g><g><title>0x7fd28c325da2 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="686" y="164" width="4" height="15" fill="rgb(228,63,54)"/><text x="689.00" y="174.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.67%)</title><rect x="718" y="180" width="7" height="15" fill="rgb(227,133,38)"/><text x="721.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.33%)</title><rect x="721" y="196" width="4" height="15" fill="rgb(212,221,45)"/><text x="724.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.33%)</title><rect x="721" y="212" width="4" height="15" fill="rgb(246,179,21)"/><text x="724.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.67%)</title><rect x="729" y="244" width="8" height="15" fill="rgb(232,192,12)"/><text x="732.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.67%)</title><rect x="729" y="260" width="8" height="15" fill="rgb(242,67,28)"/><text x="732.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.67%)</title><rect x="729" y="276" width="8" height="15" fill="rgb(250,41,53)"/><text x="732.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.67%)</title><rect x="729" y="292" width="8" height="15" fill="rgb(236,73,11)"/><text x="732.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.67%)</title><rect x="729" y="308" width="8" height="15" fill="rgb(247,16,54)"/><text x="732.00" y="318.50"></text></g><g><title>0x7fd28c25de50 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="733" y="324" width="4" height="15" fill="rgb(236,103,0)"/><text x="736.00" y="334.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.33%)</title><rect x="741" y="324" width="4" height="15" fill="rgb(206,42,10)"/><text x="744.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.67%)</title><rect x="741" y="292" width="8" height="15" fill="rgb(227,213,0)"/><text x="744.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.67%)</title><rect x="741" y="308" width="8" height="15" fill="rgb(210,82,49)"/><text x="744.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.33%)</title><rect x="745" y="324" width="4" height="15" fill="rgb(245,54,16)"/><text x="748.00" y="334.50"></text></g><g><title>0x7fd28c1ffa86 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="745" y="340" width="4" height="15" fill="rgb(236,102,39)"/><text x="748.00" y="350.50"></text></g><g><title>array_sum (methods.c) (7 samples, 2.33%)</title><rect x="725" y="180" width="28" height="15" fill="rgb(207,42,11)"/><text x="728.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (7 samples, 2.33%)</title><rect x="725" y="196" width="28" height="15" fill="rgb(205,157,42)"/><text x="728.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 2.33%)</title><rect x="725" y="212" width="28" height="15" fill="rgb(246,40,53)"/><text x="728.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 2.00%)</title><rect x="729" y="228" width="24" height="15" fill="rgb(208,44,0)"/><text x="732.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.33%)</title><rect x="737" y="244" width="16" height="15" fill="rgb(205,42,24)"/><text x="740.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.00%)</title><rect x="741" y="260" width="12" height="15" fill="rgb(229,1,37)"/><text x="744.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 1.00%)</title><rect x="741" y="276" width="12" height="15" fill="rgb(228,143,51)"/><text x="744.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.33%)</title><rect x="749" y="292" width="4" height="15" fill="rgb(213,101,42)"/><text x="752.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.33%)</title><rect x="749" y="308" width="4" height="15" fill="rgb(205,122,50)"/><text x="752.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.33%)</title><rect x="749" y="324" width="4" height="15" fill="rgb(212,31,9)"/><text x="752.00" y="334.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="749" y="340" width="4" height="15" fill="rgb(242,115,31)"/><text x="752.00" y="350.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="765" y="196" width="4" height="15" fill="rgb(234,31,40)"/><text x="768.00" y="206.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.33%)</title><rect x="769" y="196" width="4" height="15" fill="rgb(232,155,18)"/><text x="772.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="769" y="212" width="4" height="15" fill="rgb(210,60,37)"/><text x="772.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="769" y="228" width="4" height="15" fill="rgb(218,56,1)"/><text x="772.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.33%)</title><rect x="769" y="244" width="4" height="15" fill="rgb(213,31,7)"/><text x="772.00" y="254.50"></text></g><g><title>0x7fd28c268124 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="773" y="212" width="4" height="15" fill="rgb(235,153,42)"/><text x="776.00" y="222.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.33%)</title><rect x="777" y="212" width="3" height="15" fill="rgb(212,115,25)"/><text x="780.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.33%)</title><rect x="777" y="228" width="3" height="15" fill="rgb(225,129,52)"/><text x="780.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="780" y="244" width="4" height="15" fill="rgb(251,168,37)"/><text x="783.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="780" y="260" width="4" height="15" fill="rgb(208,16,38)"/><text x="783.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.33%)</title><rect x="780" y="276" width="4" height="15" fill="rgb(243,218,2)"/><text x="783.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="784" y="260" width="4" height="15" fill="rgb(243,223,26)"/><text x="787.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.33%)</title><rect x="788" y="276" width="4" height="15" fill="rgb(225,191,40)"/><text x="791.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.33%)</title><rect x="788" y="292" width="4" height="15" fill="rgb(220,178,6)"/><text x="791.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.33%)</title><rect x="788" y="308" width="4" height="15" fill="rgb(228,64,50)"/><text x="791.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.33%)</title><rect x="788" y="324" width="4" height="15" fill="rgb(248,218,43)"/><text x="791.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="792" y="276" width="4" height="15" fill="rgb(207,6,5)"/><text x="795.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.33%)</title><rect x="792" y="292" width="4" height="15" fill="rgb(253,155,50)"/><text x="795.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.33%)</title><rect x="784" y="244" width="16" height="15" fill="rgb(238,37,36)"/><text x="787.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.00%)</title><rect x="788" y="260" width="12" height="15" fill="rgb(208,159,37)"/><text x="791.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.33%)</title><rect x="796" y="276" width="4" height="15" fill="rgb(246,90,31)"/><text x="799.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.33%)</title><rect x="796" y="292" width="4" height="15" fill="rgb(215,179,39)"/><text x="799.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.00%)</title><rect x="780" y="228" width="24" height="15" fill="rgb(239,104,50)"/><text x="783.00" y="238.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="800" y="244" width="4" height="15" fill="rgb(231,54,2)"/><text x="803.00" y="254.50"></text></g><g><title>array_add (number.c) (9 samples, 3.00%)</title><rect x="773" y="196" width="35" height="15" fill="rgb(224,135,47)"/><text x="776.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.33%)</title><rect x="780" y="212" width="28" height="15" fill="rgb(230,164,35)"/><text x="783.00" y="222.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.33%)</title><rect x="804" y="228" width="4" height="15" fill="rgb(238,83,10)"/><text x="807.00" y="238.50"></text></g><g><title>array_transpose_get (getset.c) (1 samples, 0.33%)</title><rect x="808" y="196" width="4" height="15" fill="rgb(216,178,48)"/><text x="811.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.00%)</title><rect x="855" y="212" width="12" height="15" fill="rgb(231,175,26)"/><text x="858.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.67%)</title><rect x="867" y="212" width="8" height="15" fill="rgb(209,118,22)"/><text x="870.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.33%)</title><rect x="875" y="212" width="4" height="15" fill="rgb(245,187,54)"/><text x="878.00" y="222.50"></text></g><g><title>0x7fd28c3260e6 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="883" y="228" width="4" height="15" fill="rgb(253,12,28)"/><text x="886.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="887" y="228" width="19" height="15" fill="rgb(249,22,37)"/><text x="890.00" y="238.50"></text></g><g><title>0x7fd28c25de7a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="902" y="244" width="4" height="15" fill="rgb(230,153,1)"/><text x="905.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.67%)</title><rect x="906" y="228" width="8" height="15" fill="rgb(206,63,8)"/><text x="909.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 3.33%)</title><rect x="879" y="212" width="39" height="15" fill="rgb(219,220,15)"/><text x="882.00" y="222.50">_as..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="914" y="228" width="4" height="15" fill="rgb(230,132,1)"/><text x="917.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.33%)</title><rect x="918" y="212" width="4" height="15" fill="rgb(210,80,42)"/><text x="921.00" y="222.50"></text></g><g><title>0x7fd28c25db64 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="938" y="228" width="4" height="15" fill="rgb(254,40,54)"/><text x="941.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 2.00%)</title><rect x="922" y="212" width="24" height="15" fill="rgb(219,132,3)"/><text x="925.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.33%)</title><rect x="942" y="228" width="4" height="15" fill="rgb(206,132,16)"/><text x="945.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.67%)</title><rect x="946" y="212" width="8" height="15" fill="rgb(234,184,1)"/><text x="949.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.33%)</title><rect x="950" y="228" width="4" height="15" fill="rgb(237,133,9)"/><text x="953.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (42 samples, 14.00%)</title><rect x="812" y="196" width="165" height="15" fill="rgb(234,91,19)"/><text x="815.00" y="206.50">check_array (sklearn/..</text></g><g><title>simplefilter (warnings.py) (6 samples, 2.00%)</title><rect x="954" y="212" width="23" height="15" fill="rgb(246,194,48)"/><text x="957.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py) (5 samples, 1.67%)</title><rect x="957" y="228" width="20" height="15" fill="rgb(218,58,18)"/><text x="960.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.67%)</title><rect x="1016" y="228" width="8" height="15" fill="rgb(244,130,47)"/><text x="1019.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 5.00%)</title><rect x="977" y="196" width="59" height="15" fill="rgb(222,102,10)"/><text x="980.00" y="206.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 3.33%)</title><rect x="997" y="212" width="39" height="15" fill="rgb(212,119,44)"/><text x="1000.00" y="222.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.00%)</title><rect x="1024" y="228" width="12" height="15" fill="rgb(207,3,7)"/><text x="1027.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.33%)</title><rect x="1040" y="212" width="4" height="15" fill="rgb(206,127,31)"/><text x="1043.00" y="222.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="1044" y="324" width="4" height="15" fill="rgb(220,220,3)"/><text x="1047.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1044" y="340" width="4" height="15" fill="rgb(245,59,1)"/><text x="1047.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.67%)</title><rect x="1044" y="292" width="8" height="15" fill="rgb(251,173,54)"/><text x="1047.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.67%)</title><rect x="1044" y="308" width="8" height="15" fill="rgb(211,48,51)"/><text x="1047.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="1048" y="324" width="4" height="15" fill="rgb(241,77,32)"/><text x="1051.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.67%)</title><rect x="1044" y="276" width="20" height="15" fill="rgb(215,11,5)"/><text x="1047.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (3 samples, 1.00%)</title><rect x="1052" y="292" width="12" height="15" fill="rgb(231,76,48)"/><text x="1055.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 1.00%)</title><rect x="1052" y="308" width="12" height="15" fill="rgb(250,103,14)"/><text x="1055.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 1.00%)</title><rect x="1052" y="324" width="12" height="15" fill="rgb(234,135,38)"/><text x="1055.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (3 samples, 1.00%)</title><rect x="1052" y="340" width="12" height="15" fill="rgb(251,71,35)"/><text x="1055.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (3 samples, 1.00%)</title><rect x="1052" y="356" width="12" height="15" fill="rgb(254,8,25)"/><text x="1055.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 1.00%)</title><rect x="1052" y="372" width="12" height="15" fill="rgb(213,226,15)"/><text x="1055.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (4 samples, 1.33%)</title><rect x="1064" y="276" width="15" height="15" fill="rgb(205,16,35)"/><text x="1067.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (10 samples, 3.33%)</title><rect x="1044" y="260" width="39" height="15" fill="rgb(222,194,1)"/><text x="1047.00" y="270.50">Npy..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1079" y="276" width="4" height="15" fill="rgb(247,15,21)"/><text x="1082.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1079" y="292" width="4" height="15" fill="rgb(253,209,52)"/><text x="1082.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1083" y="260" width="4" height="15" fill="rgb(231,219,48)"/><text x="1086.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="1083" y="276" width="4" height="15" fill="rgb(228,53,6)"/><text x="1086.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="1083" y="292" width="4" height="15" fill="rgb(221,7,53)"/><text x="1086.00" y="302.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.33%)</title><rect x="1087" y="260" width="4" height="15" fill="rgb(222,144,50)"/><text x="1090.00" y="270.50"></text></g><g><title>0x7fd28c267d50 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1087" y="276" width="4" height="15" fill="rgb(248,153,34)"/><text x="1090.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1091" y="276" width="4" height="15" fill="rgb(245,93,3)"/><text x="1094.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1091" y="292" width="4" height="15" fill="rgb(221,23,46)"/><text x="1094.00" y="302.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1091" y="308" width="4" height="15" fill="rgb(220,195,51)"/><text x="1094.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (88 samples, 29.33%)</title><rect x="753" y="180" width="346" height="15" fill="rgb(247,176,43)"/><text x="756.00" y="190.50">decision_function (sklearn/linear_model/_base...</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (16 samples, 5.33%)</title><rect x="1036" y="196" width="63" height="15" fill="rgb(210,221,51)"/><text x="1039.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 4.67%)</title><rect x="1044" y="212" width="55" height="15" fill="rgb(231,171,40)"/><text x="1047.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.67%)</title><rect x="1044" y="228" width="55" height="15" fill="rgb(223,19,7)"/><text x="1047.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 4.67%)</title><rect x="1044" y="244" width="55" height="15" fill="rgb(238,97,26)"/><text x="1047.00" y="254.50">PyUFu..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.67%)</title><rect x="1091" y="260" width="8" height="15" fill="rgb(215,90,21)"/><text x="1094.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1095" y="276" width="4" height="15" fill="rgb(228,176,48)"/><text x="1098.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1095" y="292" width="4" height="15" fill="rgb(220,223,43)"/><text x="1098.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="1111" y="244" width="4" height="15" fill="rgb(217,82,18)"/><text x="1114.00" y="254.50"></text></g><g><title>0x7fd28c325130 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1111" y="260" width="4" height="15" fill="rgb(245,228,0)"/><text x="1114.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.67%)</title><rect x="1099" y="196" width="20" height="15" fill="rgb(205,178,26)"/><text x="1102.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 1.67%)</title><rect x="1099" y="212" width="20" height="15" fill="rgb(250,5,45)"/><text x="1102.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (5 samples, 1.67%)</title><rect x="1099" y="228" width="20" height="15" fill="rgb(219,68,4)"/><text x="1102.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="1115" y="244" width="4" height="15" fill="rgb(247,57,32)"/><text x="1118.00" y="254.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.33%)</title><rect x="1119" y="228" width="4" height="15" fill="rgb(249,124,36)"/><text x="1122.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.33%)</title><rect x="1119" y="244" width="4" height="15" fill="rgb(228,129,28)"/><text x="1122.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.33%)</title><rect x="1119" y="260" width="4" height="15" fill="rgb(239,198,14)"/><text x="1122.00" y="270.50"></text></g><g><title>0x7fd28c247bcd (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1119" y="276" width="4" height="15" fill="rgb(242,153,13)"/><text x="1122.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1123" y="228" width="4" height="15" fill="rgb(244,164,6)"/><text x="1126.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1123" y="244" width="4" height="15" fill="rgb(242,7,35)"/><text x="1126.00" y="254.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1123" y="260" width="4" height="15" fill="rgb(223,168,44)"/><text x="1126.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1119" y="212" width="12" height="15" fill="rgb(208,89,16)"/><text x="1122.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1127" y="228" width="4" height="15" fill="rgb(224,226,48)"/><text x="1130.00" y="238.50"></text></g><g><title>0x7fd26e64d9dd (?) (1 samples, 0.33%)</title><rect x="1127" y="244" width="4" height="15" fill="rgb(219,175,35)"/><text x="1130.00" y="254.50"></text></g><g><title>0x7fd26e66e265 (?) (1 samples, 0.33%)</title><rect x="1127" y="260" width="4" height="15" fill="rgb(236,3,41)"/><text x="1130.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1127" y="276" width="4" height="15" fill="rgb(236,20,14)"/><text x="1130.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (113 samples, 37.67%)</title><rect x="690" y="164" width="444" height="15" fill="rgb(247,53,26)"/><text x="693.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 3.00%)</title><rect x="1099" y="180" width="35" height="15" fill="rgb(214,204,10)"/><text x="1102.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.33%)</title><rect x="1119" y="196" width="15" height="15" fill="rgb(209,171,6)"/><text x="1122.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1131" y="212" width="3" height="15" fill="rgb(245,204,27)"/><text x="1134.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.67%)</title><rect x="1162" y="196" width="8" height="15" fill="rgb(243,189,16)"/><text x="1165.00" y="206.50"></text></g><g><title>0x7fd28c325130 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1166" y="212" width="4" height="15" fill="rgb(231,126,42)"/><text x="1169.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 44.00%)</title><rect x="666" y="132" width="520" height="15" fill="rgb(229,216,40)"/><text x="669.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (131 samples, 43.67%)</title><rect x="670" y="148" width="516" height="15" fill="rgb(236,177,20)"/><text x="673.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (13 samples, 4.33%)</title><rect x="1134" y="164" width="52" height="15" fill="rgb(228,187,6)"/><text x="1137.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 3.00%)</title><rect x="1150" y="180" width="36" height="15" fill="rgb(215,82,53)"/><text x="1153.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.33%)</title><rect x="1170" y="196" width="16" height="15" fill="rgb(211,73,36)"/><text x="1173.00" y="206.50"></text></g><g><title>all (300 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,27,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (300 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(248,181,37)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (137 samples, 45.67%)</title><rect x="651" y="68" width="539" height="15" fill="rgb(234,6,12)"/><text x="654.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (137 samples, 45.67%)</title><rect x="651" y="84" width="539" height="15" fill="rgb(251,178,24)"/><text x="654.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onn..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (137 samples, 45.67%)</title><rect x="651" y="100" width="539" height="15" fill="rgb(235,19,29)"/><text x="654.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (136 samples, 45.33%)</title><rect x="655" y="116" width="535" height="15" fill="rgb(248,85,54)"/><text x="658.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(210,50,54)"/><text x="1189.00" y="142.50"></text></g></g></svg>