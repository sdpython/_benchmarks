<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(213,72,2)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(218,152,42)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(236,37,24)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(249,50,40)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(223,1,41)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(209,87,11)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(249,105,52)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(234,204,16)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(220,70,21)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(229,50,39)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(227,28,24)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(224,158,43)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(229,68,35)"/><text x="13.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.27%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(244,138,8)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.27%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(244,32,30)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(235,108,21)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(220,104,51)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(213,128,3)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(235,125,28)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(229,224,4)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.27%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(217,166,15)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(227,192,4)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1044" width="3" height="15" fill="rgb(216,126,41)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1060" width="3" height="15" fill="rgb(205,156,20)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="1076" width="3" height="15" fill="rgb(229,141,38)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1092" width="3" height="15" fill="rgb(241,191,2)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.27%)</title><rect x="13" y="1108" width="3" height="15" fill="rgb(224,159,33)"/><text x="16.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1124" width="3" height="15" fill="rgb(208,113,14)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1140" width="3" height="15" fill="rgb(221,207,1)"/><text x="16.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1156" width="3" height="15" fill="rgb(209,73,28)"/><text x="16.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="1172" width="3" height="15" fill="rgb(230,127,30)"/><text x="16.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1188" width="3" height="15" fill="rgb(212,196,5)"/><text x="16.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.27%)</title><rect x="13" y="1204" width="3" height="15" fill="rgb(212,134,23)"/><text x="16.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1220" width="3" height="15" fill="rgb(222,202,21)"/><text x="16.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1236" width="3" height="15" fill="rgb(222,210,38)"/><text x="16.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1252" width="3" height="15" fill="rgb(219,167,31)"/><text x="16.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="1268" width="3" height="15" fill="rgb(234,78,23)"/><text x="16.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1284" width="3" height="15" fill="rgb(246,85,37)"/><text x="16.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py) (1 samples, 0.27%)</title><rect x="13" y="1300" width="3" height="15" fill="rgb(208,217,31)"/><text x="16.00" y="1310.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.27%)</title><rect x="13" y="1316" width="3" height="15" fill="rgb(233,138,4)"/><text x="16.00" y="1326.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.27%)</title><rect x="13" y="1332" width="3" height="15" fill="rgb(206,19,22)"/><text x="16.00" y="1342.50"></text></g><g><title>_create_ (enum.py) (1 samples, 0.27%)</title><rect x="13" y="1348" width="3" height="15" fill="rgb(240,14,46)"/><text x="16.00" y="1358.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.27%)</title><rect x="13" y="1364" width="3" height="15" fill="rgb(221,142,25)"/><text x="16.00" y="1374.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.27%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(218,181,16)"/><text x="19.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.27%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(251,219,54)"/><text x="19.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.27%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(208,128,19)"/><text x="19.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.27%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(253,52,15)"/><text x="19.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.27%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(216,35,12)"/><text x="19.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.27%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(212,37,39)"/><text x="19.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.27%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(224,181,35)"/><text x="19.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.27%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(247,100,13)"/><text x="19.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.27%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(233,148,7)"/><text x="19.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.27%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(215,13,17)"/><text x="19.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.27%)</title><rect x="16" y="1092" width="3" height="15" fill="rgb(219,35,4)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.10%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(212,157,1)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(251,202,26)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(219,168,54)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="340" width="12" height="15" fill="rgb(215,98,27)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="356" width="12" height="15" fill="rgb(253,84,40)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="372" width="12" height="15" fill="rgb(239,157,7)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.10%)</title><rect x="10" y="388" width="12" height="15" fill="rgb(229,205,36)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="404" width="12" height="15" fill="rgb(218,182,19)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="420" width="12" height="15" fill="rgb(248,168,1)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="436" width="12" height="15" fill="rgb(234,130,36)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="452" width="12" height="15" fill="rgb(249,192,51)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="468" width="12" height="15" fill="rgb(219,67,26)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.10%)</title><rect x="10" y="484" width="12" height="15" fill="rgb(225,93,50)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="500" width="12" height="15" fill="rgb(238,10,10)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="516" width="12" height="15" fill="rgb(240,41,17)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="532" width="12" height="15" fill="rgb(209,2,47)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="548" width="12" height="15" fill="rgb(234,41,24)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="564" width="12" height="15" fill="rgb(223,89,14)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.10%)</title><rect x="10" y="580" width="12" height="15" fill="rgb(230,22,6)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="596" width="12" height="15" fill="rgb(254,139,24)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="612" width="12" height="15" fill="rgb(218,93,22)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="628" width="12" height="15" fill="rgb(249,71,18)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="644" width="12" height="15" fill="rgb(239,37,39)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="660" width="12" height="15" fill="rgb(226,142,17)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="676" width="12" height="15" fill="rgb(254,135,51)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="692" width="12" height="15" fill="rgb(250,88,52)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="708" width="12" height="15" fill="rgb(211,98,7)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.10%)</title><rect x="10" y="724" width="12" height="15" fill="rgb(244,77,22)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="740" width="12" height="15" fill="rgb(236,60,14)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="756" width="12" height="15" fill="rgb(210,100,28)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="772" width="12" height="15" fill="rgb(205,24,41)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="788" width="12" height="15" fill="rgb(235,227,15)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="804" width="12" height="15" fill="rgb(242,106,33)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.10%)</title><rect x="10" y="820" width="12" height="15" fill="rgb(233,179,52)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="13" y="836" width="9" height="15" fill="rgb(212,95,12)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="13" y="852" width="9" height="15" fill="rgb(226,103,8)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="13" y="868" width="9" height="15" fill="rgb(217,49,44)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="13" y="884" width="9" height="15" fill="rgb(254,79,54)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="13" y="900" width="9" height="15" fill="rgb(208,107,4)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (2 samples, 0.55%)</title><rect x="16" y="916" width="6" height="15" fill="rgb(246,28,14)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(253,74,50)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(205,19,10)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(205,212,47)"/><text x="22.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(249,139,53)"/><text x="22.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.27%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(242,199,45)"/><text x="22.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(246,182,30)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(248,215,26)"/><text x="22.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(246,37,27)"/><text x="22.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1060" width="3" height="15" fill="rgb(252,25,17)"/><text x="22.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1076" width="3" height="15" fill="rgb(223,82,15)"/><text x="22.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.27%)</title><rect x="19" y="1092" width="3" height="15" fill="rgb(246,50,4)"/><text x="22.00" y="1102.50"></text></g><g><title>setParseAction (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.27%)</title><rect x="19" y="1108" width="3" height="15" fill="rgb(236,111,45)"/><text x="22.00" y="1118.50"></text></g><g><title>_trim_arity (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.27%)</title><rect x="19" y="1124" width="3" height="15" fill="rgb(247,11,30)"/><text x="22.00" y="1134.50"></text></g><g><title>extract_stack (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.27%)</title><rect x="19" y="1140" width="3" height="15" fill="rgb(251,78,42)"/><text x="22.00" y="1150.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.27%)</title><rect x="19" y="1156" width="3" height="15" fill="rgb(226,0,11)"/><text x="22.00" y="1166.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.27%)</title><rect x="19" y="1172" width="3" height="15" fill="rgb(241,204,52)"/><text x="22.00" y="1182.50"></text></g><g><title>line (traceback.py) (1 samples, 0.27%)</title><rect x="19" y="1188" width="3" height="15" fill="rgb(217,120,23)"/><text x="22.00" y="1198.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.27%)</title><rect x="19" y="1204" width="3" height="15" fill="rgb(228,166,33)"/><text x="22.00" y="1214.50"></text></g><g><title>getlines (linecache.py) (1 samples, 0.27%)</title><rect x="19" y="1220" width="3" height="15" fill="rgb(219,51,1)"/><text x="22.00" y="1230.50"></text></g><g><title>updatecache (linecache.py) (1 samples, 0.27%)</title><rect x="19" y="1236" width="3" height="15" fill="rgb(218,64,10)"/><text x="22.00" y="1246.50"></text></g><g><title>open (tokenize.py) (1 samples, 0.27%)</title><rect x="19" y="1252" width="3" height="15" fill="rgb(241,86,45)"/><text x="22.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(247,39,54)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(239,70,18)"/><text x="25.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(252,11,51)"/><text x="25.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(205,34,12)"/><text x="25.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(222,156,47)"/><text x="25.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.27%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(211,17,8)"/><text x="25.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(239,198,16)"/><text x="25.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(231,144,25)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(208,191,16)"/><text x="25.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(230,29,48)"/><text x="25.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1076" width="4" height="15" fill="rgb(209,87,14)"/><text x="25.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1092" width="4" height="15" fill="rgb(220,27,3)"/><text x="25.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1108" width="4" height="15" fill="rgb(247,162,8)"/><text x="25.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.27%)</title><rect x="22" y="1124" width="4" height="15" fill="rgb(231,88,10)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1140" width="4" height="15" fill="rgb(244,115,38)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1156" width="4" height="15" fill="rgb(224,7,10)"/><text x="25.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1172" width="4" height="15" fill="rgb(218,38,42)"/><text x="25.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1188" width="4" height="15" fill="rgb(215,111,36)"/><text x="25.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1204" width="4" height="15" fill="rgb(207,97,7)"/><text x="25.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.27%)</title><rect x="22" y="1220" width="4" height="15" fill="rgb(233,179,29)"/><text x="25.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1236" width="4" height="15" fill="rgb(205,15,53)"/><text x="25.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1252" width="4" height="15" fill="rgb(249,207,44)"/><text x="25.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1268" width="4" height="15" fill="rgb(253,212,29)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1284" width="4" height="15" fill="rgb(226,10,4)"/><text x="25.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1300" width="4" height="15" fill="rgb(213,16,6)"/><text x="25.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1316" width="4" height="15" fill="rgb(223,201,38)"/><text x="25.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1332" width="4" height="15" fill="rgb(211,45,43)"/><text x="25.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/nonlin.py) (1 samples, 0.27%)</title><rect x="22" y="1348" width="4" height="15" fill="rgb(227,87,49)"/><text x="25.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="500" width="7" height="15" fill="rgb(205,47,54)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="516" width="7" height="15" fill="rgb(253,165,39)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="532" width="7" height="15" fill="rgb(235,226,25)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="22" y="548" width="7" height="15" fill="rgb(254,99,27)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="564" width="7" height="15" fill="rgb(249,37,3)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.55%)</title><rect x="22" y="580" width="7" height="15" fill="rgb(207,159,14)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="596" width="7" height="15" fill="rgb(230,136,0)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="612" width="7" height="15" fill="rgb(249,104,22)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="628" width="7" height="15" fill="rgb(248,43,39)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="22" y="644" width="7" height="15" fill="rgb(226,162,14)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="660" width="7" height="15" fill="rgb(211,178,25)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.55%)</title><rect x="22" y="676" width="7" height="15" fill="rgb(219,35,6)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="692" width="7" height="15" fill="rgb(229,186,48)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="708" width="7" height="15" fill="rgb(252,72,47)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="724" width="7" height="15" fill="rgb(221,23,44)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="22" y="740" width="7" height="15" fill="rgb(219,173,51)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="756" width="7" height="15" fill="rgb(214,217,41)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.55%)</title><rect x="22" y="772" width="7" height="15" fill="rgb(253,107,1)"/><text x="25.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="788" width="7" height="15" fill="rgb(230,42,39)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="804" width="7" height="15" fill="rgb(226,133,18)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="820" width="7" height="15" fill="rgb(223,25,32)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="836" width="7" height="15" fill="rgb(213,13,19)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="852" width="7" height="15" fill="rgb(240,67,4)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="22" y="868" width="7" height="15" fill="rgb(225,210,28)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="22" y="884" width="7" height="15" fill="rgb(242,172,43)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.55%)</title><rect x="22" y="900" width="7" height="15" fill="rgb(235,23,16)"/><text x="25.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(247,139,27)"/><text x="29.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(223,27,3)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(232,13,25)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(251,78,43)"/><text x="29.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(234,185,36)"/><text x="29.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(227,219,3)"/><text x="29.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(232,30,8)"/><text x="29.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.27%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(229,225,7)"/><text x="29.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.27%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(219,27,3)"/><text x="29.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.27%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(238,79,33)"/><text x="29.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.27%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(226,199,49)"/><text x="29.00" y="1086.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.27%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(212,124,49)"/><text x="29.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.92%)</title><rect x="10" y="196" width="22" height="15" fill="rgb(244,24,32)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.92%)</title><rect x="10" y="212" width="22" height="15" fill="rgb(216,108,37)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.92%)</title><rect x="10" y="228" width="22" height="15" fill="rgb(249,169,36)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.92%)</title><rect x="10" y="244" width="22" height="15" fill="rgb(207,205,45)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.92%)</title><rect x="10" y="260" width="22" height="15" fill="rgb(208,19,46)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.92%)</title><rect x="10" y="276" width="22" height="15" fill="rgb(216,126,45)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.82%)</title><rect x="22" y="292" width="10" height="15" fill="rgb(217,98,20)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="308" width="10" height="15" fill="rgb(233,206,10)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="324" width="10" height="15" fill="rgb(215,203,43)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="340" width="10" height="15" fill="rgb(244,150,23)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="22" y="356" width="10" height="15" fill="rgb(216,183,33)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="372" width="10" height="15" fill="rgb(242,12,8)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.82%)</title><rect x="22" y="388" width="10" height="15" fill="rgb(224,187,51)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="404" width="10" height="15" fill="rgb(226,19,49)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="420" width="10" height="15" fill="rgb(223,44,0)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="436" width="10" height="15" fill="rgb(253,191,45)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="22" y="452" width="10" height="15" fill="rgb(226,118,11)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="22" y="468" width="10" height="15" fill="rgb(234,76,33)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.82%)</title><rect x="22" y="484" width="10" height="15" fill="rgb(225,35,53)"/><text x="25.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="500" width="3" height="15" fill="rgb(209,170,20)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="516" width="3" height="15" fill="rgb(218,178,15)"/><text x="32.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="532" width="3" height="15" fill="rgb(229,115,42)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="548" width="3" height="15" fill="rgb(216,135,48)"/><text x="32.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="564" width="3" height="15" fill="rgb(251,46,22)"/><text x="32.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="580" width="3" height="15" fill="rgb(249,80,34)"/><text x="32.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="596" width="3" height="15" fill="rgb(242,149,4)"/><text x="32.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.27%)</title><rect x="29" y="612" width="3" height="15" fill="rgb(251,214,9)"/><text x="32.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="628" width="3" height="15" fill="rgb(229,38,51)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="644" width="3" height="15" fill="rgb(210,211,38)"/><text x="32.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="660" width="3" height="15" fill="rgb(220,173,10)"/><text x="32.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="676" width="3" height="15" fill="rgb(227,145,23)"/><text x="32.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="692" width="3" height="15" fill="rgb(205,85,42)"/><text x="32.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.27%)</title><rect x="29" y="708" width="3" height="15" fill="rgb(243,115,41)"/><text x="32.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="724" width="3" height="15" fill="rgb(250,212,12)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="740" width="3" height="15" fill="rgb(229,222,31)"/><text x="32.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="756" width="3" height="15" fill="rgb(246,1,39)"/><text x="32.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="772" width="3" height="15" fill="rgb(227,123,2)"/><text x="32.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="788" width="3" height="15" fill="rgb(239,101,34)"/><text x="32.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.27%)</title><rect x="29" y="804" width="3" height="15" fill="rgb(216,91,28)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="820" width="3" height="15" fill="rgb(250,31,27)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(248,171,44)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(247,5,22)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(229,218,33)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(244,30,39)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py) (1 samples, 0.27%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(237,71,47)"/><text x="32.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py) (1 samples, 0.27%)</title><rect x="29" y="916" width="3" height="15" fill="rgb(208,77,8)"/><text x="32.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py) (1 samples, 0.27%)</title><rect x="29" y="932" width="3" height="15" fill="rgb(244,106,39)"/><text x="32.00" y="942.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.27%)</title><rect x="32" y="1508" width="3" height="15" fill="rgb(218,171,21)"/><text x="35.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="484" width="7" height="15" fill="rgb(220,144,1)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="500" width="7" height="15" fill="rgb(221,87,45)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="516" width="7" height="15" fill="rgb(245,92,8)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="532" width="7" height="15" fill="rgb(241,60,20)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="548" width="7" height="15" fill="rgb(239,169,26)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="564" width="7" height="15" fill="rgb(250,160,53)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.55%)</title><rect x="32" y="580" width="7" height="15" fill="rgb(232,79,25)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="596" width="7" height="15" fill="rgb(225,187,48)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="612" width="7" height="15" fill="rgb(253,54,52)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="628" width="7" height="15" fill="rgb(253,154,32)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="644" width="7" height="15" fill="rgb(241,161,1)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="660" width="7" height="15" fill="rgb(213,203,52)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.55%)</title><rect x="32" y="676" width="7" height="15" fill="rgb(219,18,18)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="692" width="7" height="15" fill="rgb(207,216,19)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="708" width="7" height="15" fill="rgb(232,98,21)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="724" width="7" height="15" fill="rgb(215,71,34)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="740" width="7" height="15" fill="rgb(206,95,47)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="756" width="7" height="15" fill="rgb(224,183,33)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.55%)</title><rect x="32" y="772" width="7" height="15" fill="rgb(219,72,3)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="788" width="7" height="15" fill="rgb(211,209,50)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="804" width="7" height="15" fill="rgb(213,79,36)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="820" width="7" height="15" fill="rgb(245,136,25)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="836" width="7" height="15" fill="rgb(213,82,18)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="852" width="7" height="15" fill="rgb(247,142,22)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.55%)</title><rect x="32" y="868" width="7" height="15" fill="rgb(209,86,28)"/><text x="35.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="884" width="7" height="15" fill="rgb(236,180,26)"/><text x="35.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="900" width="7" height="15" fill="rgb(239,18,10)"/><text x="35.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="916" width="7" height="15" fill="rgb(206,131,23)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="932" width="7" height="15" fill="rgb(218,223,25)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="948" width="7" height="15" fill="rgb(217,124,20)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="964" width="7" height="15" fill="rgb(234,86,31)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="980" width="7" height="15" fill="rgb(219,164,15)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="996" width="7" height="15" fill="rgb(233,125,45)"/><text x="35.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.55%)</title><rect x="32" y="1012" width="7" height="15" fill="rgb(241,68,40)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1028" width="7" height="15" fill="rgb(244,4,50)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1044" width="7" height="15" fill="rgb(230,163,23)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1060" width="7" height="15" fill="rgb(215,42,15)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="1076" width="7" height="15" fill="rgb(218,85,44)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1092" width="7" height="15" fill="rgb(218,92,53)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.55%)</title><rect x="32" y="1108" width="7" height="15" fill="rgb(235,3,50)"/><text x="35.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1124" width="7" height="15" fill="rgb(237,148,54)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1140" width="7" height="15" fill="rgb(243,141,24)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1156" width="7" height="15" fill="rgb(207,157,31)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1172" width="7" height="15" fill="rgb(242,176,28)"/><text x="35.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1188" width="7" height="15" fill="rgb(241,186,26)"/><text x="35.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="1204" width="7" height="15" fill="rgb(229,108,17)"/><text x="35.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1220" width="7" height="15" fill="rgb(222,101,17)"/><text x="35.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.55%)</title><rect x="32" y="1236" width="7" height="15" fill="rgb(236,228,52)"/><text x="35.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1252" width="7" height="15" fill="rgb(221,20,5)"/><text x="35.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1268" width="7" height="15" fill="rgb(249,189,50)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1284" width="7" height="15" fill="rgb(247,92,7)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1300" width="7" height="15" fill="rgb(250,130,50)"/><text x="35.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1316" width="7" height="15" fill="rgb(217,28,28)"/><text x="35.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="1332" width="7" height="15" fill="rgb(229,138,0)"/><text x="35.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1348" width="7" height="15" fill="rgb(235,5,2)"/><text x="35.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.55%)</title><rect x="32" y="1364" width="7" height="15" fill="rgb(231,112,12)"/><text x="35.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1380" width="7" height="15" fill="rgb(228,136,43)"/><text x="35.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1396" width="7" height="15" fill="rgb(212,129,26)"/><text x="35.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1412" width="7" height="15" fill="rgb(209,61,33)"/><text x="35.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="1428" width="7" height="15" fill="rgb(218,30,37)"/><text x="35.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="1444" width="7" height="15" fill="rgb(249,29,21)"/><text x="35.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.55%)</title><rect x="32" y="1460" width="7" height="15" fill="rgb(212,128,16)"/><text x="35.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.55%)</title><rect x="32" y="1476" width="7" height="15" fill="rgb(236,80,28)"/><text x="35.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.55%)</title><rect x="32" y="1492" width="7" height="15" fill="rgb(209,113,41)"/><text x="35.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.27%)</title><rect x="35" y="1508" width="4" height="15" fill="rgb(242,229,26)"/><text x="38.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.27%)</title><rect x="35" y="1524" width="4" height="15" fill="rgb(246,63,40)"/><text x="38.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="35" y="1540" width="4" height="15" fill="rgb(225,123,45)"/><text x="38.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.27%)</title><rect x="35" y="1556" width="4" height="15" fill="rgb(243,5,13)"/><text x="38.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.27%)</title><rect x="35" y="1572" width="4" height="15" fill="rgb(250,199,1)"/><text x="38.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.27%)</title><rect x="35" y="1588" width="4" height="15" fill="rgb(215,115,41)"/><text x="38.00" y="1598.50"></text></g><g><title>format_name_with_domain (skl2onnx/algebra/automation.py) (1 samples, 0.27%)</title><rect x="35" y="1604" width="4" height="15" fill="rgb(234,25,50)"/><text x="38.00" y="1614.50"></text></g><g><title>0x7f05052040e9 (?) (1 samples, 0.27%)</title><rect x="35" y="1620" width="4" height="15" fill="rgb(252,40,34)"/><text x="38.00" y="1630.50"></text></g><g><title>0x7f05052084dc (?) (1 samples, 0.27%)</title><rect x="35" y="1636" width="4" height="15" fill="rgb(247,206,25)"/><text x="38.00" y="1646.50"></text></g><g><title>0x7f05051e647c (?) (1 samples, 0.27%)</title><rect x="35" y="1652" width="4" height="15" fill="rgb(234,107,46)"/><text x="38.00" y="1662.50"></text></g><g><title>Series (pandas/core/series.py) (1 samples, 0.27%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(214,195,14)"/><text x="42.00" y="1134.50"></text></g><g><title>deprecate (pandas/util/_decorators.py) (1 samples, 0.27%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(224,105,16)"/><text x="42.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.27%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(218,48,0)"/><text x="42.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.27%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(236,33,1)"/><text x="42.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.27%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(252,59,9)"/><text x="42.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.27%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(232,92,23)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.02%)</title><rect x="10" y="68" width="35" height="15" fill="rgb(244,148,35)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.02%)</title><rect x="10" y="84" width="35" height="15" fill="rgb(235,181,1)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.02%)</title><rect x="10" y="100" width="35" height="15" fill="rgb(220,111,39)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.02%)</title><rect x="10" y="116" width="35" height="15" fill="rgb(253,208,49)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.02%)</title><rect x="10" y="132" width="35" height="15" fill="rgb(209,147,12)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (11 samples, 3.02%)</title><rect x="10" y="148" width="35" height="15" fill="rgb(253,32,2)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.02%)</title><rect x="10" y="164" width="35" height="15" fill="rgb(207,3,7)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.02%)</title><rect x="10" y="180" width="35" height="15" fill="rgb(227,182,41)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="196" width="13" height="15" fill="rgb(231,129,34)"/><text x="35.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="32" y="212" width="13" height="15" fill="rgb(224,113,33)"/><text x="35.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="228" width="13" height="15" fill="rgb(235,50,46)"/><text x="35.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 1.10%)</title><rect x="32" y="244" width="13" height="15" fill="rgb(224,14,39)"/><text x="35.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="260" width="13" height="15" fill="rgb(254,42,48)"/><text x="35.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="276" width="13" height="15" fill="rgb(225,159,30)"/><text x="35.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="292" width="13" height="15" fill="rgb(229,124,0)"/><text x="35.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="32" y="308" width="13" height="15" fill="rgb(250,43,54)"/><text x="35.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="324" width="13" height="15" fill="rgb(254,123,35)"/><text x="35.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.10%)</title><rect x="32" y="340" width="13" height="15" fill="rgb(236,89,49)"/><text x="35.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="356" width="13" height="15" fill="rgb(216,114,44)"/><text x="35.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="372" width="13" height="15" fill="rgb(238,154,50)"/><text x="35.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="388" width="13" height="15" fill="rgb(206,32,4)"/><text x="35.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="32" y="404" width="13" height="15" fill="rgb(241,154,39)"/><text x="35.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="420" width="13" height="15" fill="rgb(230,122,36)"/><text x="35.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.10%)</title><rect x="32" y="436" width="13" height="15" fill="rgb(217,141,45)"/><text x="35.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="452" width="13" height="15" fill="rgb(228,45,41)"/><text x="35.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="32" y="468" width="13" height="15" fill="rgb(222,175,39)"/><text x="35.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="484" width="6" height="15" fill="rgb(252,159,9)"/><text x="42.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="500" width="6" height="15" fill="rgb(209,116,21)"/><text x="42.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="516" width="6" height="15" fill="rgb(214,94,43)"/><text x="42.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.55%)</title><rect x="39" y="532" width="6" height="15" fill="rgb(209,75,54)"/><text x="42.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="548" width="6" height="15" fill="rgb(211,82,4)"/><text x="42.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="564" width="6" height="15" fill="rgb(243,217,43)"/><text x="42.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="580" width="6" height="15" fill="rgb(208,48,47)"/><text x="42.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="596" width="6" height="15" fill="rgb(206,33,38)"/><text x="42.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="612" width="6" height="15" fill="rgb(214,188,29)"/><text x="42.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.55%)</title><rect x="39" y="628" width="6" height="15" fill="rgb(247,1,33)"/><text x="42.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="644" width="6" height="15" fill="rgb(253,174,38)"/><text x="42.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="660" width="6" height="15" fill="rgb(235,30,26)"/><text x="42.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="676" width="6" height="15" fill="rgb(231,219,30)"/><text x="42.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="692" width="6" height="15" fill="rgb(250,119,5)"/><text x="42.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="708" width="6" height="15" fill="rgb(219,190,11)"/><text x="42.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.55%)</title><rect x="39" y="724" width="6" height="15" fill="rgb(215,84,23)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="740" width="6" height="15" fill="rgb(245,156,44)"/><text x="42.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="756" width="6" height="15" fill="rgb(223,178,29)"/><text x="42.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="772" width="6" height="15" fill="rgb(208,121,3)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="788" width="6" height="15" fill="rgb(213,228,21)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="804" width="6" height="15" fill="rgb(207,121,20)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.55%)</title><rect x="39" y="820" width="6" height="15" fill="rgb(248,163,19)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="836" width="6" height="15" fill="rgb(224,88,49)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="852" width="6" height="15" fill="rgb(209,173,41)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="868" width="6" height="15" fill="rgb(239,135,18)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="884" width="6" height="15" fill="rgb(226,85,46)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="900" width="6" height="15" fill="rgb(205,110,18)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.55%)</title><rect x="39" y="916" width="6" height="15" fill="rgb(254,2,7)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="932" width="6" height="15" fill="rgb(218,228,41)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="948" width="6" height="15" fill="rgb(241,79,12)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="964" width="6" height="15" fill="rgb(228,127,12)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="980" width="6" height="15" fill="rgb(236,119,24)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="996" width="6" height="15" fill="rgb(217,54,9)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.55%)</title><rect x="39" y="1012" width="6" height="15" fill="rgb(207,81,4)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1028" width="6" height="15" fill="rgb(216,202,22)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1044" width="6" height="15" fill="rgb(221,50,3)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1060" width="6" height="15" fill="rgb(239,46,21)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="1076" width="6" height="15" fill="rgb(246,130,16)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1092" width="6" height="15" fill="rgb(219,183,40)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.55%)</title><rect x="39" y="1108" width="6" height="15" fill="rgb(234,187,45)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1124" width="3" height="15" fill="rgb(250,84,32)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1140" width="3" height="15" fill="rgb(208,170,20)"/><text x="45.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1156" width="3" height="15" fill="rgb(246,153,20)"/><text x="45.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1172" width="3" height="15" fill="rgb(219,61,9)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1188" width="3" height="15" fill="rgb(221,97,41)"/><text x="45.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.27%)</title><rect x="42" y="1204" width="3" height="15" fill="rgb(228,66,38)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1220" width="3" height="15" fill="rgb(213,194,22)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1236" width="3" height="15" fill="rgb(244,226,4)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1252" width="3" height="15" fill="rgb(210,18,48)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1268" width="3" height="15" fill="rgb(243,95,1)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1284" width="3" height="15" fill="rgb(206,28,41)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.27%)</title><rect x="42" y="1300" width="3" height="15" fill="rgb(248,3,23)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1316" width="3" height="15" fill="rgb(249,94,36)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1332" width="3" height="15" fill="rgb(253,6,40)"/><text x="45.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1348" width="3" height="15" fill="rgb(253,167,3)"/><text x="45.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1364" width="3" height="15" fill="rgb(219,43,45)"/><text x="45.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1380" width="3" height="15" fill="rgb(217,128,18)"/><text x="45.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.27%)</title><rect x="42" y="1396" width="3" height="15" fill="rgb(212,65,25)"/><text x="45.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1412" width="3" height="15" fill="rgb(247,69,18)"/><text x="45.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1428" width="3" height="15" fill="rgb(205,220,50)"/><text x="45.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1444" width="3" height="15" fill="rgb(224,79,6)"/><text x="45.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1460" width="3" height="15" fill="rgb(248,184,9)"/><text x="45.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1476" width="3" height="15" fill="rgb(243,41,1)"/><text x="45.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.27%)</title><rect x="42" y="1492" width="3" height="15" fill="rgb(240,54,29)"/><text x="45.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1508" width="3" height="15" fill="rgb(252,30,51)"/><text x="45.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1524" width="3" height="15" fill="rgb(240,88,14)"/><text x="45.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1540" width="3" height="15" fill="rgb(223,40,12)"/><text x="45.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1556" width="3" height="15" fill="rgb(209,69,3)"/><text x="45.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1572" width="3" height="15" fill="rgb(248,19,6)"/><text x="45.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1588" width="3" height="15" fill="rgb(246,155,25)"/><text x="45.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1604" width="3" height="15" fill="rgb(243,8,43)"/><text x="45.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1620" width="3" height="15" fill="rgb(230,64,23)"/><text x="45.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.27%)</title><rect x="42" y="1636" width="3" height="15" fill="rgb(207,0,35)"/><text x="45.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1652" width="3" height="15" fill="rgb(208,37,45)"/><text x="45.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1668" width="3" height="15" fill="rgb(223,193,47)"/><text x="45.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1684" width="3" height="15" fill="rgb(225,102,41)"/><text x="45.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1700" width="3" height="15" fill="rgb(240,118,41)"/><text x="45.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1716" width="3" height="15" fill="rgb(232,68,2)"/><text x="45.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1732" width="3" height="15" fill="rgb(228,65,48)"/><text x="45.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1748" width="3" height="15" fill="rgb(240,220,23)"/><text x="45.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.27%)</title><rect x="42" y="1764" width="3" height="15" fill="rgb(209,200,1)"/><text x="45.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1780" width="3" height="15" fill="rgb(240,123,8)"/><text x="45.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1796" width="3" height="15" fill="rgb(230,121,53)"/><text x="45.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1812" width="3" height="15" fill="rgb(244,19,24)"/><text x="45.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1828" width="3" height="15" fill="rgb(235,118,31)"/><text x="45.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1844" width="3" height="15" fill="rgb(230,105,48)"/><text x="45.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.27%)</title><rect x="42" y="1860" width="3" height="15" fill="rgb(249,24,13)"/><text x="45.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1876" width="3" height="15" fill="rgb(211,174,1)"/><text x="45.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1892" width="3" height="15" fill="rgb(217,143,52)"/><text x="45.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1908" width="3" height="15" fill="rgb(226,63,8)"/><text x="45.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="42" y="1924" width="3" height="15" fill="rgb(253,35,48)"/><text x="45.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="42" y="1940" width="3" height="15" fill="rgb(217,4,37)"/><text x="45.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.27%)</title><rect x="42" y="1956" width="3" height="15" fill="rgb(226,218,15)"/><text x="45.00" y="1966.50"></text></g><g><title>_set_shape_inference_runtime (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="45" y="180" width="3" height="15" fill="rgb(217,153,4)"/><text x="48.00" y="190.50"></text></g><g><title>_set_shape_inference_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.27%)</title><rect x="45" y="196" width="3" height="15" fill="rgb(221,146,48)"/><text x="48.00" y="206.50"></text></g><g><title>infer_shapes (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.27%)</title><rect x="45" y="212" width="3" height="15" fill="rgb(223,81,15)"/><text x="48.00" y="222.50"></text></g><g><title>_infer_shapes (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.27%)</title><rect x="45" y="228" width="3" height="15" fill="rgb(233,209,54)"/><text x="48.00" y="238.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.55%)</title><rect x="45" y="132" width="7" height="15" fill="rgb(207,142,35)"/><text x="48.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.55%)</title><rect x="45" y="148" width="7" height="15" fill="rgb(221,204,48)"/><text x="48.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.55%)</title><rect x="45" y="164" width="7" height="15" fill="rgb(208,95,42)"/><text x="48.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="48" y="180" width="4" height="15" fill="rgb(228,221,52)"/><text x="51.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.27%)</title><rect x="48" y="196" width="4" height="15" fill="rgb(229,86,32)"/><text x="51.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.27%)</title><rect x="48" y="212" width="4" height="15" fill="rgb(231,158,46)"/><text x="51.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.27%)</title><rect x="48" y="228" width="4" height="15" fill="rgb(218,151,21)"/><text x="51.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="48" y="244" width="4" height="15" fill="rgb(221,117,41)"/><text x="51.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.27%)</title><rect x="48" y="260" width="4" height="15" fill="rgb(207,225,5)"/><text x="51.00" y="270.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py) (3 samples, 0.82%)</title><rect x="45" y="68" width="10" height="15" fill="rgb(232,158,39)"/><text x="48.00" y="78.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py) (3 samples, 0.82%)</title><rect x="45" y="84" width="10" height="15" fill="rgb(229,165,10)"/><text x="48.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.82%)</title><rect x="45" y="100" width="10" height="15" fill="rgb(216,122,31)"/><text x="48.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.82%)</title><rect x="45" y="116" width="10" height="15" fill="rgb(231,144,33)"/><text x="48.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="52" y="132" width="3" height="15" fill="rgb(252,129,26)"/><text x="55.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.27%)</title><rect x="52" y="148" width="3" height="15" fill="rgb(208,83,29)"/><text x="55.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.27%)</title><rect x="52" y="164" width="3" height="15" fill="rgb(216,176,54)"/><text x="55.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.27%)</title><rect x="52" y="180" width="3" height="15" fill="rgb(239,128,17)"/><text x="55.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.27%)</title><rect x="52" y="196" width="3" height="15" fill="rgb(227,36,37)"/><text x="55.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.27%)</title><rect x="52" y="212" width="3" height="15" fill="rgb(237,5,54)"/><text x="55.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.27%)</title><rect x="52" y="228" width="3" height="15" fill="rgb(235,43,33)"/><text x="55.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (1 samples, 0.27%)</title><rect x="52" y="244" width="3" height="15" fill="rgb(210,192,39)"/><text x="55.00" y="254.50"></text></g><g><title>find_switch_point (skl2onnx/common/tree_ensemble.py) (1 samples, 0.27%)</title><rect x="52" y="260" width="3" height="15" fill="rgb(211,220,22)"/><text x="55.00" y="270.50"></text></g><g><title>float_arrtype_new (scalartypes.c.src) (1 samples, 0.27%)</title><rect x="52" y="276" width="3" height="15" fill="rgb(223,140,15)"/><text x="55.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.27%)</title><rect x="52" y="292" width="3" height="15" fill="rgb(234,146,8)"/><text x="55.00" y="302.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.27%)</title><rect x="52" y="308" width="3" height="15" fill="rgb(248,35,14)"/><text x="55.00" y="318.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.27%)</title><rect x="52" y="324" width="3" height="15" fill="rgb(224,179,12)"/><text x="55.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.27%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(208,136,48)"/><text x="55.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="55" y="324" width="3" height="15" fill="rgb(253,47,36)"/><text x="58.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.55%)</title><rect x="58" y="356" width="7" height="15" fill="rgb(217,201,15)"/><text x="61.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.55%)</title><rect x="58" y="372" width="7" height="15" fill="rgb(217,71,49)"/><text x="61.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.27%)</title><rect x="61" y="388" width="4" height="15" fill="rgb(224,170,21)"/><text x="64.00" y="398.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (5 samples, 1.37%)</title><rect x="55" y="196" width="16" height="15" fill="rgb(249,68,47)"/><text x="58.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.37%)</title><rect x="55" y="212" width="16" height="15" fill="rgb(221,122,47)"/><text x="58.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (5 samples, 1.37%)</title><rect x="55" y="228" width="16" height="15" fill="rgb(213,193,26)"/><text x="58.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 1.37%)</title><rect x="55" y="244" width="16" height="15" fill="rgb(228,127,46)"/><text x="58.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 1.37%)</title><rect x="55" y="260" width="16" height="15" fill="rgb(232,186,28)"/><text x="58.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.37%)</title><rect x="55" y="276" width="16" height="15" fill="rgb(222,62,28)"/><text x="58.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.37%)</title><rect x="55" y="292" width="16" height="15" fill="rgb(225,124,50)"/><text x="58.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.37%)</title><rect x="55" y="308" width="16" height="15" fill="rgb(251,39,20)"/><text x="58.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 1.10%)</title><rect x="58" y="324" width="13" height="15" fill="rgb(223,177,19)"/><text x="61.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (4 samples, 1.10%)</title><rect x="58" y="340" width="13" height="15" fill="rgb(207,83,54)"/><text x="61.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (2 samples, 0.55%)</title><rect x="65" y="356" width="6" height="15" fill="rgb(240,135,27)"/><text x="68.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (2 samples, 0.55%)</title><rect x="65" y="372" width="6" height="15" fill="rgb(250,199,24)"/><text x="68.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.55%)</title><rect x="65" y="388" width="6" height="15" fill="rgb(225,202,34)"/><text x="68.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.55%)</title><rect x="65" y="404" width="6" height="15" fill="rgb(249,218,5)"/><text x="68.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.27%)</title><rect x="68" y="420" width="3" height="15" fill="rgb(232,222,10)"/><text x="71.00" y="430.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.27%)</title><rect x="71" y="196" width="3" height="15" fill="rgb(232,23,17)"/><text x="74.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.27%)</title><rect x="71" y="212" width="3" height="15" fill="rgb(215,207,50)"/><text x="74.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.27%)</title><rect x="71" y="228" width="3" height="15" fill="rgb(205,140,43)"/><text x="74.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.27%)</title><rect x="71" y="244" width="3" height="15" fill="rgb(252,145,2)"/><text x="74.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.27%)</title><rect x="71" y="260" width="3" height="15" fill="rgb(223,65,10)"/><text x="74.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.27%)</title><rect x="71" y="276" width="3" height="15" fill="rgb(237,90,41)"/><text x="74.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.27%)</title><rect x="71" y="292" width="3" height="15" fill="rgb(252,128,16)"/><text x="74.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.27%)</title><rect x="71" y="308" width="3" height="15" fill="rgb(231,77,20)"/><text x="74.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.27%)</title><rect x="71" y="324" width="3" height="15" fill="rgb(210,170,54)"/><text x="74.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.27%)</title><rect x="71" y="340" width="3" height="15" fill="rgb(215,218,18)"/><text x="74.00" y="350.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (7 samples, 1.92%)</title><rect x="55" y="164" width="23" height="15" fill="rgb(230,49,24)"/><text x="58.00" y="174.50">_..</text></g><g><title>softmax (sklearn/utils/extmath.py) (7 samples, 1.92%)</title><rect x="55" y="180" width="23" height="15" fill="rgb(229,87,1)"/><text x="58.00" y="190.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.27%)</title><rect x="74" y="196" width="4" height="15" fill="rgb(221,24,50)"/><text x="77.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.27%)</title><rect x="74" y="212" width="4" height="15" fill="rgb(241,19,28)"/><text x="77.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.27%)</title><rect x="74" y="228" width="4" height="15" fill="rgb(243,183,9)"/><text x="77.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.27%)</title><rect x="74" y="244" width="4" height="15" fill="rgb(249,126,28)"/><text x="77.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.27%)</title><rect x="74" y="260" width="4" height="15" fill="rgb(215,42,0)"/><text x="77.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.27%)</title><rect x="74" y="276" width="4" height="15" fill="rgb(218,72,1)"/><text x="77.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="74" y="292" width="4" height="15" fill="rgb(250,194,13)"/><text x="77.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="74" y="308" width="4" height="15" fill="rgb(209,4,33)"/><text x="77.00" y="318.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(238,229,31)"/><text x="81.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.55%)</title><rect x="78" y="164" width="6" height="15" fill="rgb(222,206,11)"/><text x="81.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.55%)</title><rect x="78" y="180" width="6" height="15" fill="rgb(249,211,49)"/><text x="81.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.27%)</title><rect x="81" y="196" width="3" height="15" fill="rgb(205,58,27)"/><text x="84.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.27%)</title><rect x="81" y="212" width="3" height="15" fill="rgb(206,158,24)"/><text x="84.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="84" y="164" width="3" height="15" fill="rgb(246,168,52)"/><text x="87.00" y="174.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="129" y="276" width="4" height="15" fill="rgb(237,45,42)"/><text x="132.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.37%)</title><rect x="126" y="260" width="16" height="15" fill="rgb(225,134,5)"/><text x="129.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.82%)</title><rect x="133" y="276" width="9" height="15" fill="rgb(228,22,44)"/><text x="136.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (2 samples, 0.55%)</title><rect x="136" y="292" width="6" height="15" fill="rgb(222,106,7)"/><text x="139.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.27%)</title><rect x="139" y="308" width="3" height="15" fill="rgb(220,198,11)"/><text x="142.00" y="318.50"></text></g><g><title>array_multiply (number.c) (9 samples, 2.47%)</title><rect x="123" y="212" width="29" height="15" fill="rgb(215,6,25)"/><text x="126.00" y="222.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.20%)</title><rect x="126" y="228" width="26" height="15" fill="rgb(226,208,22)"/><text x="129.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 2.20%)</title><rect x="126" y="244" width="26" height="15" fill="rgb(248,228,28)"/><text x="129.00" y="254.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.82%)</title><rect x="142" y="260" width="10" height="15" fill="rgb(241,117,32)"/><text x="145.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.27%)</title><rect x="149" y="276" width="3" height="15" fill="rgb(226,181,31)"/><text x="152.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.27%)</title><rect x="149" y="292" width="3" height="15" fill="rgb(225,84,53)"/><text x="152.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.27%)</title><rect x="149" y="308" width="3" height="15" fill="rgb(218,183,21)"/><text x="152.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.27%)</title><rect x="152" y="212" width="3" height="15" fill="rgb(223,123,48)"/><text x="155.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.27%)</title><rect x="152" y="228" width="3" height="15" fill="rgb(230,67,53)"/><text x="155.00" y="238.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (3 samples, 0.82%)</title><rect x="159" y="292" width="9" height="15" fill="rgb(227,39,14)"/><text x="162.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (3 samples, 0.82%)</title><rect x="159" y="308" width="9" height="15" fill="rgb(226,48,15)"/><text x="162.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (3 samples, 0.82%)</title><rect x="159" y="324" width="9" height="15" fill="rgb(227,61,40)"/><text x="162.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.82%)</title><rect x="159" y="340" width="9" height="15" fill="rgb(239,43,33)"/><text x="162.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.55%)</title><rect x="168" y="308" width="7" height="15" fill="rgb(235,0,18)"/><text x="171.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.27%)</title><rect x="172" y="324" width="3" height="15" fill="rgb(214,43,23)"/><text x="175.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="172" y="340" width="3" height="15" fill="rgb(218,226,25)"/><text x="175.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="172" y="356" width="3" height="15" fill="rgb(205,25,1)"/><text x="175.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="172" y="372" width="3" height="15" fill="rgb(224,91,13)"/><text x="175.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.27%)</title><rect x="175" y="308" width="3" height="15" fill="rgb(228,156,21)"/><text x="178.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.10%)</title><rect x="168" y="292" width="13" height="15" fill="rgb(239,154,31)"/><text x="171.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.27%)</title><rect x="178" y="308" width="3" height="15" fill="rgb(234,194,1)"/><text x="181.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.27%)</title><rect x="181" y="292" width="4" height="15" fill="rgb(235,165,27)"/><text x="184.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 3.85%)</title><rect x="159" y="260" width="45" height="15" fill="rgb(252,197,3)"/><text x="162.00" y="270.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c) (14 samples, 3.85%)</title><rect x="159" y="276" width="45" height="15" fill="rgb(220,180,35)"/><text x="162.00" y="286.50">iter..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 1.65%)</title><rect x="185" y="292" width="19" height="15" fill="rgb(232,69,49)"/><text x="188.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.65%)</title><rect x="185" y="308" width="19" height="15" fill="rgb(206,134,46)"/><text x="188.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.65%)</title><rect x="185" y="324" width="19" height="15" fill="rgb(207,224,44)"/><text x="188.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.82%)</title><rect x="194" y="340" width="10" height="15" fill="rgb(206,210,46)"/><text x="197.00" y="350.50"></text></g><g><title>array_subtract (number.c) (16 samples, 4.40%)</title><rect x="155" y="212" width="52" height="15" fill="rgb(217,62,30)"/><text x="158.00" y="222.50">array..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 4.12%)</title><rect x="159" y="228" width="48" height="15" fill="rgb(219,52,36)"/><text x="162.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 4.12%)</title><rect x="159" y="244" width="48" height="15" fill="rgb(224,151,35)"/><text x="162.00" y="254.50">PyUF..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.27%)</title><rect x="204" y="260" width="3" height="15" fill="rgb(233,222,45)"/><text x="207.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.55%)</title><rect x="210" y="276" width="7" height="15" fill="rgb(217,97,46)"/><text x="213.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.55%)</title><rect x="210" y="292" width="7" height="15" fill="rgb(211,197,38)"/><text x="213.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.55%)</title><rect x="210" y="308" width="7" height="15" fill="rgb(249,134,36)"/><text x="213.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.55%)</title><rect x="210" y="324" width="7" height="15" fill="rgb(232,37,6)"/><text x="213.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.55%)</title><rect x="210" y="340" width="7" height="15" fill="rgb(206,105,25)"/><text x="213.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.27%)</title><rect x="217" y="324" width="3" height="15" fill="rgb(236,215,13)"/><text x="220.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.27%)</title><rect x="217" y="340" width="3" height="15" fill="rgb(249,156,42)"/><text x="220.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.27%)</title><rect x="217" y="356" width="3" height="15" fill="rgb(254,84,9)"/><text x="220.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.27%)</title><rect x="220" y="324" width="3" height="15" fill="rgb(235,104,15)"/><text x="223.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.27%)</title><rect x="220" y="340" width="3" height="15" fill="rgb(251,147,43)"/><text x="223.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="220" y="356" width="3" height="15" fill="rgb(207,103,10)"/><text x="223.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="220" y="372" width="3" height="15" fill="rgb(244,150,10)"/><text x="223.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="220" y="388" width="3" height="15" fill="rgb(249,157,2)"/><text x="223.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="220" y="404" width="3" height="15" fill="rgb(241,122,5)"/><text x="223.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.27%)</title><rect x="220" y="420" width="3" height="15" fill="rgb(206,73,23)"/><text x="223.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="220" y="436" width="3" height="15" fill="rgb(248,47,16)"/><text x="223.00" y="446.50"></text></g><g><title>0x7f0515149fe4 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="220" y="452" width="3" height="15" fill="rgb(246,222,20)"/><text x="223.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.27%)</title><rect x="223" y="324" width="4" height="15" fill="rgb(239,176,14)"/><text x="226.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="223" y="340" width="4" height="15" fill="rgb(233,126,46)"/><text x="226.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="223" y="356" width="4" height="15" fill="rgb(238,157,2)"/><text x="226.00" y="366.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="223" y="372" width="4" height="15" fill="rgb(215,48,44)"/><text x="226.00" y="382.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.27%)</title><rect x="227" y="324" width="3" height="15" fill="rgb(243,30,4)"/><text x="230.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="230" y="324" width="3" height="15" fill="rgb(216,202,1)"/><text x="233.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (9 samples, 2.47%)</title><rect x="243" y="340" width="29" height="15" fill="rgb(254,7,23)"/><text x="246.00" y="350.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 1.10%)</title><rect x="259" y="356" width="13" height="15" fill="rgb(235,22,0)"/><text x="262.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (20 samples, 5.49%)</title><rect x="217" y="308" width="65" height="15" fill="rgb(224,132,31)"/><text x="220.00" y="318.50">PyUFunc..</text></g><g><title>reduce_loop (ufunc_object.c) (15 samples, 4.12%)</title><rect x="233" y="324" width="49" height="15" fill="rgb(248,82,12)"/><text x="236.00" y="334.50">redu..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.82%)</title><rect x="272" y="340" width="10" height="15" fill="rgb(217,152,27)"/><text x="275.00" y="350.50"></text></g><g><title>array_sum (methods.c) (26 samples, 7.14%)</title><rect x="207" y="212" width="85" height="15" fill="rgb(236,66,2)"/><text x="210.00" y="222.50">array_sum ..</text></g><g><title>forward_ndarray_method (methods.c) (26 samples, 7.14%)</title><rect x="207" y="228" width="85" height="15" fill="rgb(211,177,10)"/><text x="210.00" y="238.50">forward_nd..</text></g><g><title>_sum (numpy/core/_methods.py) (25 samples, 6.87%)</title><rect x="210" y="244" width="82" height="15" fill="rgb(226,41,13)"/><text x="213.00" y="254.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c) (25 samples, 6.87%)</title><rect x="210" y="260" width="82" height="15" fill="rgb(254,8,34)"/><text x="213.00" y="270.50">ufunc_red..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (23 samples, 6.32%)</title><rect x="217" y="276" width="75" height="15" fill="rgb(221,217,31)"/><text x="220.00" y="286.50">PyUFunc_..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (23 samples, 6.32%)</title><rect x="217" y="292" width="75" height="15" fill="rgb(217,212,26)"/><text x="220.00" y="302.50">PyUFunc_..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.82%)</title><rect x="282" y="308" width="10" height="15" fill="rgb(235,155,0)"/><text x="285.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="288" y="324" width="4" height="15" fill="rgb(248,87,15)"/><text x="291.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="288" y="340" width="4" height="15" fill="rgb(239,121,10)"/><text x="291.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="288" y="356" width="4" height="15" fill="rgb(221,149,29)"/><text x="291.00" y="366.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="314" y="404" width="3" height="15" fill="rgb(210,213,20)"/><text x="317.00" y="414.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.55%)</title><rect x="314" y="388" width="7" height="15" fill="rgb(233,213,2)"/><text x="317.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.27%)</title><rect x="317" y="404" width="4" height="15" fill="rgb(218,200,41)"/><text x="320.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.27%)</title><rect x="317" y="420" width="4" height="15" fill="rgb(214,221,2)"/><text x="320.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.27%)</title><rect x="317" y="436" width="4" height="15" fill="rgb(212,123,45)"/><text x="320.00" y="446.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.27%)</title><rect x="317" y="452" width="4" height="15" fill="rgb(225,28,24)"/><text x="320.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.02%)</title><rect x="314" y="356" width="36" height="15" fill="rgb(235,113,51)"/><text x="317.00" y="366.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 3.02%)</title><rect x="314" y="372" width="36" height="15" fill="rgb(233,11,34)"/><text x="317.00" y="382.50">exe..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (9 samples, 2.47%)</title><rect x="321" y="388" width="29" height="15" fill="rgb(233,194,5)"/><text x="324.00" y="398.50">tr..</text></g><g><title>DOUBLE_maximum (loops.c.src) (9 samples, 2.47%)</title><rect x="321" y="404" width="29" height="15" fill="rgb(208,22,35)"/><text x="324.00" y="414.50">DO..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.27%)</title><rect x="350" y="356" width="3" height="15" fill="rgb(246,136,34)"/><text x="353.00" y="366.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (15 samples, 4.12%)</title><rect x="308" y="324" width="48" height="15" fill="rgb(227,121,16)"/><text x="311.00" y="334.50">_cli..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 3.85%)</title><rect x="311" y="340" width="45" height="15" fill="rgb(249,34,45)"/><text x="314.00" y="350.50">ufun..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="353" y="356" width="3" height="15" fill="rgb(234,91,34)"/><text x="356.00" y="366.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="353" y="372" width="3" height="15" fill="rgb(252,141,28)"/><text x="356.00" y="382.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.55%)</title><rect x="356" y="324" width="7" height="15" fill="rgb(241,213,39)"/><text x="359.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="382" y="340" width="7" height="15" fill="rgb(248,173,47)"/><text x="385.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.27%)</title><rect x="389" y="372" width="3" height="15" fill="rgb(234,226,19)"/><text x="392.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.27%)</title><rect x="389" y="388" width="3" height="15" fill="rgb(215,60,46)"/><text x="392.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.27%)</title><rect x="389" y="404" width="3" height="15" fill="rgb(216,99,51)"/><text x="392.00" y="414.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.27%)</title><rect x="389" y="420" width="3" height="15" fill="rgb(211,9,48)"/><text x="392.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (9 samples, 2.47%)</title><rect x="389" y="340" width="29" height="15" fill="rgb(227,166,41)"/><text x="392.00" y="350.50">nd..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.47%)</title><rect x="389" y="356" width="29" height="15" fill="rgb(237,120,6)"/><text x="392.00" y="366.50">ar..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (8 samples, 2.20%)</title><rect x="392" y="372" width="26" height="15" fill="rgb(248,186,43)"/><text x="395.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 1.10%)</title><rect x="405" y="388" width="13" height="15" fill="rgb(210,150,52)"/><text x="408.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.82%)</title><rect x="408" y="404" width="10" height="15" fill="rgb(233,21,43)"/><text x="411.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.82%)</title><rect x="408" y="420" width="10" height="15" fill="rgb(219,197,33)"/><text x="411.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.82%)</title><rect x="408" y="436" width="10" height="15" fill="rgb(246,88,31)"/><text x="411.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (3 samples, 0.82%)</title><rect x="408" y="452" width="10" height="15" fill="rgb(230,18,48)"/><text x="411.00" y="462.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c) (1 samples, 0.27%)</title><rect x="415" y="468" width="3" height="15" fill="rgb(208,159,39)"/><text x="418.00" y="478.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.27%)</title><rect x="421" y="356" width="3" height="15" fill="rgb(228,99,54)"/><text x="424.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="421" y="372" width="3" height="15" fill="rgb(248,162,42)"/><text x="424.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.27%)</title><rect x="421" y="388" width="3" height="15" fill="rgb(243,16,49)"/><text x="424.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.27%)</title><rect x="421" y="404" width="3" height="15" fill="rgb(227,223,38)"/><text x="424.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="424" y="356" width="4" height="15" fill="rgb(227,149,10)"/><text x="427.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="424" y="372" width="4" height="15" fill="rgb(233,184,42)"/><text x="427.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.27%)</title><rect x="424" y="388" width="4" height="15" fill="rgb(253,77,6)"/><text x="427.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.27%)</title><rect x="424" y="404" width="4" height="15" fill="rgb(235,83,4)"/><text x="427.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.27%)</title><rect x="424" y="420" width="4" height="15" fill="rgb(252,11,7)"/><text x="427.00" y="430.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.27%)</title><rect x="428" y="372" width="3" height="15" fill="rgb(215,34,19)"/><text x="431.00" y="382.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.27%)</title><rect x="428" y="388" width="3" height="15" fill="rgb(247,97,24)"/><text x="431.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="431" y="372" width="3" height="15" fill="rgb(222,94,21)"/><text x="434.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.27%)</title><rect x="431" y="388" width="3" height="15" fill="rgb(249,1,4)"/><text x="434.00" y="398.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (42 samples, 11.54%)</title><rect x="301" y="244" width="136" height="15" fill="rgb(234,62,1)"/><text x="304.00" y="254.50">clip (numpy/core/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (42 samples, 11.54%)</title><rect x="301" y="260" width="136" height="15" fill="rgb(249,92,25)"/><text x="304.00" y="270.50">_wrapfunc (numpy/..</text></g><g><title>array_clip (methods.c) (41 samples, 11.26%)</title><rect x="305" y="276" width="132" height="15" fill="rgb(223,57,52)"/><text x="308.00" y="286.50">array_clip (meth..</text></g><g><title>forward_ndarray_method (methods.c) (41 samples, 11.26%)</title><rect x="305" y="292" width="132" height="15" fill="rgb(205,148,21)"/><text x="308.00" y="302.50">forward_ndarray_..</text></g><g><title>_clip (numpy/core/_methods.py) (40 samples, 10.99%)</title><rect x="308" y="308" width="129" height="15" fill="rgb(214,152,26)"/><text x="311.00" y="318.50">_clip (numpy/cor..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (23 samples, 6.32%)</title><rect x="363" y="324" width="74" height="15" fill="rgb(253,46,22)"/><text x="366.00" y="334.50">_clip_de..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.65%)</title><rect x="418" y="340" width="19" height="15" fill="rgb(244,94,1)"/><text x="421.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.82%)</title><rect x="428" y="356" width="9" height="15" fill="rgb(232,112,31)"/><text x="431.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.27%)</title><rect x="434" y="372" width="3" height="15" fill="rgb(251,214,6)"/><text x="437.00" y="382.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (46 samples, 12.64%)</title><rect x="292" y="212" width="149" height="15" fill="rgb(210,205,16)"/><text x="295.00" y="222.50">clip (&lt;__array_func..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (44 samples, 12.09%)</title><rect x="298" y="228" width="143" height="15" fill="rgb(219,3,26)"/><text x="301.00" y="238.50">array_implement_ar..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.27%)</title><rect x="437" y="244" width="4" height="15" fill="rgb(206,128,49)"/><text x="440.00" y="254.50"></text></g><g><title>0x7f04eeb9a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="454" y="276" width="3" height="15" fill="rgb(213,147,42)"/><text x="457.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.27%)</title><rect x="454" y="292" width="3" height="15" fill="rgb(252,57,11)"/><text x="457.00" y="302.50"></text></g><g><title>0x7f04eeb7ed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="457" y="292" width="3" height="15" fill="rgb(249,62,8)"/><text x="460.00" y="302.50"></text></g><g><title>0x7f04eeb7e5d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="457" y="308" width="3" height="15" fill="rgb(241,92,31)"/><text x="460.00" y="318.50"></text></g><g><title>0x7f04eeb9a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="457" y="276" width="6" height="15" fill="rgb(240,49,14)"/><text x="460.00" y="286.50"></text></g><g><title>0x7f04eeb7ee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="460" y="292" width="3" height="15" fill="rgb(247,77,6)"/><text x="463.00" y="302.50"></text></g><g><title>0x7f04eeb722bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="460" y="308" width="3" height="15" fill="rgb(223,183,17)"/><text x="463.00" y="318.50"></text></g><g><title>0x7f04eeb71df8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="460" y="324" width="3" height="15" fill="rgb(234,24,29)"/><text x="463.00" y="334.50"></text></g><g><title>0x7f04eeb9a53e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="463" y="276" width="4" height="15" fill="rgb(224,19,8)"/><text x="466.00" y="286.50"></text></g><g><title>0x7f0515149b68 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="476" y="404" width="4" height="15" fill="rgb(208,25,3)"/><text x="479.00" y="414.50"></text></g><g><title>0x7f04eeb9a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.37%)</title><rect x="467" y="276" width="16" height="15" fill="rgb(239,10,2)"/><text x="470.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 1.37%)</title><rect x="467" y="292" width="16" height="15" fill="rgb(221,66,33)"/><text x="470.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.55%)</title><rect x="476" y="308" width="7" height="15" fill="rgb(229,20,23)"/><text x="479.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.55%)</title><rect x="476" y="324" width="7" height="15" fill="rgb(222,115,40)"/><text x="479.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.55%)</title><rect x="476" y="340" width="7" height="15" fill="rgb(238,181,21)"/><text x="479.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.55%)</title><rect x="476" y="356" width="7" height="15" fill="rgb(230,22,43)"/><text x="479.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.55%)</title><rect x="476" y="372" width="7" height="15" fill="rgb(219,7,46)"/><text x="479.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.55%)</title><rect x="476" y="388" width="7" height="15" fill="rgb(238,55,24)"/><text x="479.00" y="398.50"></text></g><g><title>0x7f051514a21f (libc-2.29.so) (1 samples, 0.27%)</title><rect x="480" y="404" width="3" height="15" fill="rgb(223,40,18)"/><text x="483.00" y="414.50"></text></g><g><title>0x7f04eeb9a693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="483" y="276" width="3" height="15" fill="rgb(253,1,14)"/><text x="486.00" y="286.50"></text></g><g><title>0x7f04eeb9a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="486" y="276" width="7" height="15" fill="rgb(235,74,1)"/><text x="489.00" y="286.50"></text></g><g><title>0x7f04eeb9a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="493" y="276" width="6" height="15" fill="rgb(248,0,40)"/><text x="496.00" y="286.50"></text></g><g><title>0x7f04eeb9a6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="499" y="276" width="3" height="15" fill="rgb(212,123,13)"/><text x="502.00" y="286.50"></text></g><g><title>0x7f04eeb9a6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="502" y="276" width="3" height="15" fill="rgb(236,43,32)"/><text x="505.00" y="286.50"></text></g><g><title>0x7f04eeb8bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 4.67%)</title><rect x="454" y="244" width="55" height="15" fill="rgb(237,167,3)"/><text x="457.00" y="254.50">0x7f0..</text></g><g><title>0x7f04eeb9b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 4.67%)</title><rect x="454" y="260" width="55" height="15" fill="rgb(223,46,16)"/><text x="457.00" y="270.50">0x7f0..</text></g><g><title>0x7f04eeb9ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="505" y="276" width="4" height="15" fill="rgb(216,47,17)"/><text x="508.00" y="286.50"></text></g><g><title>0x7f04eeb72529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="505" y="292" width="4" height="15" fill="rgb(241,97,4)"/><text x="508.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.27%)</title><rect x="505" y="308" width="4" height="15" fill="rgb(205,128,19)"/><text x="508.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.27%)</title><rect x="505" y="324" width="4" height="15" fill="rgb(226,111,34)"/><text x="508.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.27%)</title><rect x="505" y="340" width="4" height="15" fill="rgb(244,194,18)"/><text x="508.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.27%)</title><rect x="505" y="356" width="4" height="15" fill="rgb(251,226,10)"/><text x="508.00" y="366.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.27%)</title><rect x="505" y="372" width="4" height="15" fill="rgb(207,79,25)"/><text x="508.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="505" y="388" width="4" height="15" fill="rgb(229,124,20)"/><text x="508.00" y="398.50"></text></g><g><title>0x7f051515ee50 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="512" y="276" width="3" height="15" fill="rgb(243,67,3)"/><text x="515.00" y="286.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.27%)</title><rect x="515" y="276" width="3" height="15" fill="rgb(214,20,12)"/><text x="518.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.55%)</title><rect x="518" y="292" width="7" height="15" fill="rgb(249,56,47)"/><text x="521.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.82%)</title><rect x="518" y="276" width="10" height="15" fill="rgb(228,44,32)"/><text x="521.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="525" y="292" width="3" height="15" fill="rgb(207,24,18)"/><text x="528.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="525" y="308" width="3" height="15" fill="rgb(206,118,53)"/><text x="528.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="525" y="324" width="3" height="15" fill="rgb(237,37,23)"/><text x="528.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="525" y="340" width="3" height="15" fill="rgb(224,23,39)"/><text x="528.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.27%)</title><rect x="525" y="356" width="3" height="15" fill="rgb(240,72,44)"/><text x="528.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="525" y="372" width="3" height="15" fill="rgb(226,101,34)"/><text x="528.00" y="382.50"></text></g><g><title>0x7f051514a700 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="525" y="388" width="3" height="15" fill="rgb(217,56,44)"/><text x="528.00" y="398.50"></text></g><g><title>0x7f0515147aed (libc-2.29.so) (1 samples, 0.27%)</title><rect x="525" y="404" width="3" height="15" fill="rgb(208,96,51)"/><text x="528.00" y="414.50"></text></g><g><title>0x7f04eeb8c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.92%)</title><rect x="509" y="244" width="22" height="15" fill="rgb(238,204,9)"/><text x="512.00" y="254.50">0..</text></g><g><title>array_take (methods.c) (7 samples, 1.92%)</title><rect x="509" y="260" width="22" height="15" fill="rgb(233,151,4)"/><text x="512.00" y="270.50">a..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.27%)</title><rect x="528" y="276" width="3" height="15" fill="rgb(210,224,33)"/><text x="531.00" y="286.50"></text></g><g><title>0x7f0515226d27 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="528" y="292" width="3" height="15" fill="rgb(235,172,48)"/><text x="531.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.27%)</title><rect x="531" y="276" width="4" height="15" fill="rgb(249,94,31)"/><text x="534.00" y="286.50"></text></g><g><title>0x7f04eeb8c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="531" y="244" width="7" height="15" fill="rgb(226,213,40)"/><text x="534.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.55%)</title><rect x="531" y="260" width="7" height="15" fill="rgb(215,160,19)"/><text x="534.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.27%)</title><rect x="535" y="276" width="3" height="15" fill="rgb(247,2,17)"/><text x="538.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.27%)</title><rect x="535" y="292" width="3" height="15" fill="rgb(239,150,46)"/><text x="538.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="535" y="308" width="3" height="15" fill="rgb(228,98,1)"/><text x="538.00" y="318.50"></text></g><g><title>0x7f04eeb8cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 7.42%)</title><rect x="454" y="228" width="87" height="15" fill="rgb(219,175,42)"/><text x="457.00" y="238.50">0x7f04eeb8..</text></g><g><title>0x7f04eeb8c8d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="538" y="244" width="3" height="15" fill="rgb(241,152,38)"/><text x="541.00" y="254.50"></text></g><g><title>0x7f04eeb68bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="538" y="260" width="3" height="15" fill="rgb(254,10,44)"/><text x="541.00" y="270.50"></text></g><g><title>0x7f04eeb6fd60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="538" y="276" width="3" height="15" fill="rgb(210,207,18)"/><text x="541.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.55%)</title><rect x="567" y="260" width="7" height="15" fill="rgb(227,58,38)"/><text x="570.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.27%)</title><rect x="574" y="260" width="3" height="15" fill="rgb(242,46,28)"/><text x="577.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="590" y="276" width="6" height="15" fill="rgb(241,175,48)"/><text x="593.00" y="286.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.27%)</title><rect x="596" y="276" width="4" height="15" fill="rgb(245,127,25)"/><text x="599.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 2.47%)</title><rect x="577" y="260" width="29" height="15" fill="rgb(218,68,30)"/><text x="580.00" y="270.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="600" y="276" width="6" height="15" fill="rgb(237,101,6)"/><text x="603.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.27%)</title><rect x="619" y="276" width="3" height="15" fill="rgb(219,222,50)"/><text x="622.00" y="286.50"></text></g><g><title>0x7f051436b800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="619" y="292" width="3" height="15" fill="rgb(227,155,33)"/><text x="622.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 1.65%)</title><rect x="606" y="260" width="19" height="15" fill="rgb(226,3,12)"/><text x="609.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.27%)</title><rect x="622" y="276" width="3" height="15" fill="rgb(221,105,20)"/><text x="625.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.27%)</title><rect x="622" y="292" width="3" height="15" fill="rgb(243,198,8)"/><text x="625.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 0.82%)</title><rect x="625" y="260" width="10" height="15" fill="rgb(237,118,27)"/><text x="628.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.27%)</title><rect x="632" y="276" width="3" height="15" fill="rgb(206,121,54)"/><text x="635.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (24 samples, 6.59%)</title><rect x="648" y="372" width="78" height="15" fill="rgb(216,197,38)"/><text x="651.00" y="382.50">_aligned_..</text></g><g><title>PyArray_CheckFromAny (ctors.c) (26 samples, 7.14%)</title><rect x="645" y="292" width="84" height="15" fill="rgb(210,128,50)"/><text x="648.00" y="302.50">PyArray_C..</text></g><g><title>PyArray_FromAny (ctors.c) (26 samples, 7.14%)</title><rect x="645" y="308" width="84" height="15" fill="rgb(220,170,41)"/><text x="648.00" y="318.50">PyArray_F..</text></g><g><title>PyArray_FromArray (ctors.c) (26 samples, 7.14%)</title><rect x="645" y="324" width="84" height="15" fill="rgb(226,221,10)"/><text x="648.00" y="334.50">PyArray_F..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (26 samples, 7.14%)</title><rect x="645" y="340" width="84" height="15" fill="rgb(249,97,12)"/><text x="648.00" y="350.50">PyArray_A..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (26 samples, 7.14%)</title><rect x="645" y="356" width="84" height="15" fill="rgb(240,97,22)"/><text x="648.00" y="366.50">raw_array..</text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.27%)</title><rect x="726" y="372" width="3" height="15" fill="rgb(254,181,42)"/><text x="729.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (30 samples, 8.24%)</title><rect x="635" y="260" width="97" height="15" fill="rgb(246,24,18)"/><text x="638.00" y="270.50">asarray (nu..</text></g><g><title>_array_fromobject (multiarraymodule.c) (29 samples, 7.97%)</title><rect x="638" y="276" width="94" height="15" fill="rgb(243,172,22)"/><text x="641.00" y="286.50">_array_from..</text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="729" y="292" width="3" height="15" fill="rgb(219,210,8)"/><text x="732.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (62 samples, 17.03%)</title><rect x="541" y="228" width="201" height="15" fill="rgb(241,195,39)"/><text x="544.00" y="238.50">_validate_X_predict (sklea..</text></g><g><title>check_array (sklearn/utils/validation.py) (59 samples, 16.21%)</title><rect x="551" y="244" width="191" height="15" fill="rgb(207,7,46)"/><text x="554.00" y="254.50">check_array (sklearn/uti..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.82%)</title><rect x="732" y="260" width="10" height="15" fill="rgb(224,42,37)"/><text x="735.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.82%)</title><rect x="732" y="276" width="10" height="15" fill="rgb(248,218,30)"/><text x="735.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.27%)</title><rect x="742" y="228" width="3" height="15" fill="rgb(247,167,30)"/><text x="745.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.27%)</title><rect x="742" y="244" width="3" height="15" fill="rgb(253,187,2)"/><text x="745.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.27%)</title><rect x="742" y="260" width="3" height="15" fill="rgb(241,38,9)"/><text x="745.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="752" y="260" width="3" height="15" fill="rgb(249,125,5)"/><text x="755.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="752" y="276" width="3" height="15" fill="rgb(225,20,10)"/><text x="755.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.27%)</title><rect x="752" y="292" width="3" height="15" fill="rgb(211,25,16)"/><text x="755.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.27%)</title><rect x="755" y="276" width="3" height="15" fill="rgb(211,181,24)"/><text x="758.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="758" y="292" width="4" height="15" fill="rgb(236,156,44)"/><text x="761.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="758" y="308" width="4" height="15" fill="rgb(207,213,45)"/><text x="761.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.27%)</title><rect x="758" y="324" width="4" height="15" fill="rgb(246,199,8)"/><text x="761.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.82%)</title><rect x="755" y="260" width="10" height="15" fill="rgb(223,187,36)"/><text x="758.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.55%)</title><rect x="758" y="276" width="7" height="15" fill="rgb(246,62,12)"/><text x="761.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.27%)</title><rect x="762" y="292" width="3" height="15" fill="rgb(243,16,54)"/><text x="765.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="762" y="308" width="3" height="15" fill="rgb(225,156,1)"/><text x="765.00" y="318.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.27%)</title><rect x="765" y="260" width="3" height="15" fill="rgb(219,121,8)"/><text x="768.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.27%)</title><rect x="765" y="276" width="3" height="15" fill="rgb(240,64,1)"/><text x="768.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (8 samples, 2.20%)</title><rect x="745" y="228" width="26" height="15" fill="rgb(246,165,28)"/><text x="748.00" y="238.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.20%)</title><rect x="745" y="244" width="26" height="15" fill="rgb(209,0,54)"/><text x="748.00" y="254.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="768" y="260" width="3" height="15" fill="rgb(244,185,47)"/><text x="771.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="768" y="276" width="3" height="15" fill="rgb(233,106,46)"/><text x="771.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.27%)</title><rect x="771" y="228" width="4" height="15" fill="rgb(217,186,0)"/><text x="774.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.55%)</title><rect x="784" y="292" width="7" height="15" fill="rgb(252,93,3)"/><text x="787.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.55%)</title><rect x="784" y="308" width="7" height="15" fill="rgb(205,16,0)"/><text x="787.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.55%)</title><rect x="784" y="324" width="7" height="15" fill="rgb(243,19,13)"/><text x="787.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.55%)</title><rect x="784" y="340" width="7" height="15" fill="rgb(205,117,19)"/><text x="787.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.55%)</title><rect x="784" y="356" width="7" height="15" fill="rgb(219,203,30)"/><text x="787.00" y="366.50"></text></g><g><title>0x7f051515ee76 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="788" y="372" width="3" height="15" fill="rgb(246,17,52)"/><text x="791.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.27%)</title><rect x="794" y="308" width="3" height="15" fill="rgb(233,127,33)"/><text x="797.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.27%)</title><rect x="800" y="356" width="4" height="15" fill="rgb(210,70,42)"/><text x="803.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.55%)</title><rect x="800" y="340" width="7" height="15" fill="rgb(208,195,14)"/><text x="803.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.27%)</title><rect x="804" y="356" width="3" height="15" fill="rgb(253,77,44)"/><text x="807.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.27%)</title><rect x="807" y="340" width="3" height="15" fill="rgb(236,96,9)"/><text x="810.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="807" y="356" width="3" height="15" fill="rgb(215,227,38)"/><text x="810.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="807" y="372" width="3" height="15" fill="rgb(245,70,13)"/><text x="810.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="807" y="388" width="3" height="15" fill="rgb(237,103,19)"/><text x="810.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (9 samples, 2.47%)</title><rect x="813" y="356" width="30" height="15" fill="rgb(248,209,47)"/><text x="816.00" y="366.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.82%)</title><rect x="833" y="372" width="10" height="15" fill="rgb(219,226,11)"/><text x="836.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="843" y="356" width="3" height="15" fill="rgb(247,38,10)"/><text x="846.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (21 samples, 5.77%)</title><rect x="797" y="324" width="68" height="15" fill="rgb(244,177,31)"/><text x="800.00" y="334.50">PyUFunc..</text></g><g><title>reduce_loop (ufunc_object.c) (17 samples, 4.67%)</title><rect x="810" y="340" width="55" height="15" fill="rgb(248,157,31)"/><text x="813.00" y="350.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 1.65%)</title><rect x="846" y="356" width="19" height="15" fill="rgb(239,141,21)"/><text x="849.00" y="366.50"></text></g><g><title>array_sum (methods.c) (31 samples, 8.52%)</title><rect x="775" y="228" width="100" height="15" fill="rgb(242,61,7)"/><text x="778.00" y="238.50">array_sum (m..</text></g><g><title>forward_ndarray_method (methods.c) (31 samples, 8.52%)</title><rect x="775" y="244" width="100" height="15" fill="rgb(221,58,16)"/><text x="778.00" y="254.50">forward_ndar..</text></g><g><title>_sum (numpy/core/_methods.py) (30 samples, 8.24%)</title><rect x="778" y="260" width="97" height="15" fill="rgb(222,212,27)"/><text x="781.00" y="270.50">_sum (numpy..</text></g><g><title>ufunc_reduce (ufunc_object.c) (28 samples, 7.69%)</title><rect x="784" y="276" width="91" height="15" fill="rgb(205,162,47)"/><text x="787.00" y="286.50">ufunc_redu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (26 samples, 7.14%)</title><rect x="791" y="292" width="84" height="15" fill="rgb(247,113,41)"/><text x="794.00" y="302.50">PyUFunc_G..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (24 samples, 6.59%)</title><rect x="797" y="308" width="78" height="15" fill="rgb(220,177,36)"/><text x="800.00" y="318.50">PyUFunc_R..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.82%)</title><rect x="865" y="324" width="10" height="15" fill="rgb(219,130,21)"/><text x="868.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.55%)</title><rect x="869" y="340" width="6" height="15" fill="rgb(237,121,31)"/><text x="872.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.55%)</title><rect x="869" y="356" width="6" height="15" fill="rgb(241,37,22)"/><text x="872.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="872" y="372" width="3" height="15" fill="rgb(223,131,19)"/><text x="875.00" y="382.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.27%)</title><rect x="872" y="388" width="3" height="15" fill="rgb(217,166,20)"/><text x="875.00" y="398.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.27%)</title><rect x="888" y="260" width="3" height="15" fill="rgb(243,227,11)"/><text x="891.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.65%)</title><rect x="875" y="228" width="20" height="15" fill="rgb(238,57,27)"/><text x="878.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.37%)</title><rect x="878" y="244" width="17" height="15" fill="rgb(253,192,2)"/><text x="881.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.27%)</title><rect x="891" y="260" width="4" height="15" fill="rgb(207,109,30)"/><text x="894.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="901" y="244" width="3" height="15" fill="rgb(220,195,14)"/><text x="904.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.27%)</title><rect x="904" y="260" width="3" height="15" fill="rgb(233,149,31)"/><text x="907.00" y="270.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.27%)</title><rect x="907" y="340" width="4" height="15" fill="rgb(253,227,51)"/><text x="910.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (7 samples, 1.92%)</title><rect x="907" y="292" width="23" height="15" fill="rgb(243,195,29)"/><text x="910.00" y="302.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (7 samples, 1.92%)</title><rect x="907" y="308" width="23" height="15" fill="rgb(216,31,12)"/><text x="910.00" y="318.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (7 samples, 1.92%)</title><rect x="907" y="324" width="23" height="15" fill="rgb(252,78,37)"/><text x="910.00" y="334.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 1.65%)</title><rect x="911" y="340" width="19" height="15" fill="rgb(250,197,2)"/><text x="914.00" y="350.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.27%)</title><rect x="930" y="308" width="3" height="15" fill="rgb(218,194,35)"/><text x="933.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.55%)</title><rect x="930" y="292" width="7" height="15" fill="rgb(239,68,7)"/><text x="933.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.27%)</title><rect x="933" y="308" width="4" height="15" fill="rgb(231,36,26)"/><text x="936.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.27%)</title><rect x="937" y="292" width="3" height="15" fill="rgb(208,125,40)"/><text x="940.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 4.40%)</title><rect x="907" y="260" width="52" height="15" fill="rgb(253,175,42)"/><text x="910.00" y="270.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c) (16 samples, 4.40%)</title><rect x="907" y="276" width="52" height="15" fill="rgb(238,103,10)"/><text x="910.00" y="286.50">itera..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 1.65%)</title><rect x="940" y="292" width="19" height="15" fill="rgb(250,142,18)"/><text x="943.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.65%)</title><rect x="940" y="308" width="19" height="15" fill="rgb(254,201,6)"/><text x="943.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.65%)</title><rect x="940" y="324" width="19" height="15" fill="rgb(205,52,25)"/><text x="943.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 1.10%)</title><rect x="946" y="340" width="13" height="15" fill="rgb(218,149,0)"/><text x="949.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 4.95%)</title><rect x="904" y="244" width="59" height="15" fill="rgb(246,151,14)"/><text x="907.00" y="254.50">PyUFun..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="959" y="260" width="4" height="15" fill="rgb(250,206,2)"/><text x="962.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="959" y="276" width="4" height="15" fill="rgb(236,57,10)"/><text x="962.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.27%)</title><rect x="959" y="292" width="4" height="15" fill="rgb(240,75,23)"/><text x="962.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.27%)</title><rect x="959" y="308" width="4" height="15" fill="rgb(249,95,23)"/><text x="962.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.27%)</title><rect x="959" y="324" width="4" height="15" fill="rgb(213,189,6)"/><text x="962.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (162 samples, 44.51%)</title><rect x="441" y="212" width="525" height="15" fill="rgb(242,1,39)"/><text x="444.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 6.04%)</title><rect x="895" y="228" width="71" height="15" fill="rgb(243,202,40)"/><text x="898.00" y="238.50">ufunc_ge..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.27%)</title><rect x="963" y="244" width="3" height="15" fill="rgb(234,204,35)"/><text x="966.00" y="254.50"></text></g><g><title>0x7f0515169120 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="963" y="260" width="3" height="15" fill="rgb(213,15,11)"/><text x="966.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.27%)</title><rect x="966" y="244" width="3" height="15" fill="rgb(237,63,15)"/><text x="969.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.27%)</title><rect x="966" y="260" width="3" height="15" fill="rgb(243,184,24)"/><text x="969.00" y="270.50"></text></g><g><title>0x7f051436c0c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="982" y="292" width="7" height="15" fill="rgb(249,125,39)"/><text x="985.00" y="302.50"></text></g><g><title>0x7f051531add0 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="989" y="292" width="6" height="15" fill="rgb(253,14,40)"/><text x="992.00" y="302.50"></text></g><g><title>0x7f051531adee (libm-2.29.so) (1 samples, 0.27%)</title><rect x="995" y="292" width="3" height="15" fill="rgb(220,107,49)"/><text x="998.00" y="302.50"></text></g><g><title>0x7f051531ae4d (libm-2.29.so) (3 samples, 0.82%)</title><rect x="998" y="292" width="10" height="15" fill="rgb(209,59,21)"/><text x="1001.00" y="302.50"></text></g><g><title>0x7f051531ae6e (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1008" y="292" width="3" height="15" fill="rgb(249,60,41)"/><text x="1011.00" y="302.50"></text></g><g><title>0x7f051531aeb6 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1011" y="292" width="7" height="15" fill="rgb(245,152,48)"/><text x="1014.00" y="302.50"></text></g><g><title>0x7f051531aece (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1018" y="292" width="3" height="15" fill="rgb(238,42,36)"/><text x="1021.00" y="302.50"></text></g><g><title>0x7f051531aed2 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1021" y="292" width="3" height="15" fill="rgb(232,60,37)"/><text x="1024.00" y="302.50"></text></g><g><title>0x7f051531aeda (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1024" y="292" width="7" height="15" fill="rgb(240,43,51)"/><text x="1027.00" y="302.50"></text></g><g><title>0x7f051531aeee (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1031" y="292" width="6" height="15" fill="rgb(239,12,27)"/><text x="1034.00" y="302.50"></text></g><g><title>0x7f051531aef6 (libm-2.29.so) (3 samples, 0.82%)</title><rect x="1037" y="292" width="10" height="15" fill="rgb(236,95,54)"/><text x="1040.00" y="302.50"></text></g><g><title>0x7f051531aefa (libm-2.29.so) (7 samples, 1.92%)</title><rect x="1047" y="292" width="23" height="15" fill="rgb(241,209,10)"/><text x="1050.00" y="302.50">0..</text></g><g><title>0x7f051531afd3 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1070" y="292" width="6" height="15" fill="rgb(217,96,40)"/><text x="1073.00" y="302.50"></text></g><g><title>0x7f051531b013 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1076" y="292" width="3" height="15" fill="rgb(246,14,0)"/><text x="1079.00" y="302.50"></text></g><g><title>0x7f051531b017 (libm-2.29.so) (4 samples, 1.10%)</title><rect x="1079" y="292" width="13" height="15" fill="rgb(244,43,7)"/><text x="1082.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (41 samples, 11.26%)</title><rect x="969" y="244" width="133" height="15" fill="rgb(230,5,42)"/><text x="972.00" y="254.50">execute_legacy_u..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (41 samples, 11.26%)</title><rect x="969" y="260" width="133" height="15" fill="rgb(227,84,47)"/><text x="972.00" y="270.50">trivial_two_oper..</text></g><g><title>PyUFunc_d_d (loops.c.src) (40 samples, 10.99%)</title><rect x="972" y="276" width="130" height="15" fill="rgb(211,166,12)"/><text x="975.00" y="286.50">PyUFunc_d_d (loo..</text></g><g><title>log (libm-2.29.so) (3 samples, 0.82%)</title><rect x="1092" y="292" width="10" height="15" fill="rgb(241,2,1)"/><text x="1095.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.27%)</title><rect x="1102" y="244" width="3" height="15" fill="rgb(213,145,15)"/><text x="1105.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.27%)</title><rect x="1102" y="260" width="3" height="15" fill="rgb(243,164,20)"/><text x="1105.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (317 samples, 87.09%)</title><rect x="87" y="180" width="1028" height="15" fill="rgb(210,72,18)"/><text x="90.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (315 samples, 86.54%)</title><rect x="94" y="196" width="1021" height="15" fill="rgb(206,117,48)"/><text x="97.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (46 samples, 12.64%)</title><rect x="966" y="212" width="149" height="15" fill="rgb(225,191,10)"/><text x="969.00" y="222.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (46 samples, 12.64%)</title><rect x="966" y="228" width="149" height="15" fill="rgb(217,97,52)"/><text x="969.00" y="238.50">PyUFunc_GenericFunc..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.82%)</title><rect x="1105" y="244" width="10" height="15" fill="rgb(212,38,53)"/><text x="1108.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.55%)</title><rect x="1108" y="260" width="7" height="15" fill="rgb(254,193,16)"/><text x="1111.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (2 samples, 0.55%)</title><rect x="1108" y="276" width="7" height="15" fill="rgb(245,50,0)"/><text x="1111.00" y="286.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.27%)</title><rect x="1115" y="180" width="3" height="15" fill="rgb(230,55,33)"/><text x="1118.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="1115" y="196" width="3" height="15" fill="rgb(212,9,41)"/><text x="1118.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="1118" y="244" width="3" height="15" fill="rgb(216,82,9)"/><text x="1121.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="1118" y="260" width="3" height="15" fill="rgb(208,58,16)"/><text x="1121.00" y="270.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (2 samples, 0.55%)</title><rect x="1125" y="308" width="6" height="15" fill="rgb(212,77,50)"/><text x="1128.00" y="318.50"></text></g><g><title>array_add (number.c) (5 samples, 1.37%)</title><rect x="1118" y="180" width="16" height="15" fill="rgb(227,114,34)"/><text x="1121.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.37%)</title><rect x="1118" y="196" width="16" height="15" fill="rgb(240,69,6)"/><text x="1121.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.37%)</title><rect x="1118" y="212" width="16" height="15" fill="rgb(210,37,13)"/><text x="1121.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.37%)</title><rect x="1118" y="228" width="16" height="15" fill="rgb(212,13,50)"/><text x="1121.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 1.10%)</title><rect x="1121" y="244" width="13" height="15" fill="rgb(238,36,23)"/><text x="1124.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 1.10%)</title><rect x="1121" y="260" width="13" height="15" fill="rgb(210,69,40)"/><text x="1124.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (4 samples, 1.10%)</title><rect x="1121" y="276" width="13" height="15" fill="rgb(213,212,27)"/><text x="1124.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (4 samples, 1.10%)</title><rect x="1121" y="292" width="13" height="15" fill="rgb(223,88,25)"/><text x="1124.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.27%)</title><rect x="1131" y="308" width="3" height="15" fill="rgb(208,141,34)"/><text x="1134.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.27%)</title><rect x="1134" y="196" width="4" height="15" fill="rgb(222,123,25)"/><text x="1137.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.27%)</title><rect x="1134" y="212" width="4" height="15" fill="rgb(220,61,15)"/><text x="1137.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.55%)</title><rect x="1134" y="180" width="7" height="15" fill="rgb(254,56,17)"/><text x="1137.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="1138" y="196" width="3" height="15" fill="rgb(222,139,36)"/><text x="1141.00" y="206.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.27%)</title><rect x="1141" y="276" width="3" height="15" fill="rgb(205,102,24)"/><text x="1144.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.27%)</title><rect x="1141" y="292" width="3" height="15" fill="rgb(221,30,21)"/><text x="1144.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.27%)</title><rect x="1141" y="308" width="3" height="15" fill="rgb(231,95,11)"/><text x="1144.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py) (337 samples, 92.58%)</title><rect x="55" y="100" width="1092" height="15" fill="rgb(227,120,13)"/><text x="58.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (337 samples, 92.58%)</title><rect x="55" y="116" width="1092" height="15" fill="rgb(224,82,14)"/><text x="58.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (337 samples, 92.58%)</title><rect x="55" y="132" width="1092" height="15" fill="rgb(230,196,2)"/><text x="58.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (337 samples, 92.58%)</title><rect x="55" y="148" width="1092" height="15" fill="rgb(235,163,21)"/><text x="58.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (327 samples, 89.84%)</title><rect x="87" y="164" width="1060" height="15" fill="rgb(249,8,4)"/><text x="90.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_sum (methods.c) (2 samples, 0.55%)</title><rect x="1141" y="180" width="6" height="15" fill="rgb(215,170,20)"/><text x="1144.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.55%)</title><rect x="1141" y="196" width="6" height="15" fill="rgb(218,160,4)"/><text x="1144.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (2 samples, 0.55%)</title><rect x="1141" y="212" width="6" height="15" fill="rgb(211,148,29)"/><text x="1144.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1141" y="228" width="6" height="15" fill="rgb(250,81,48)"/><text x="1144.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1141" y="244" width="6" height="15" fill="rgb(240,69,14)"/><text x="1144.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1141" y="260" width="6" height="15" fill="rgb(249,188,2)"/><text x="1144.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.27%)</title><rect x="1144" y="276" width="3" height="15" fill="rgb(216,174,52)"/><text x="1147.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.27%)</title><rect x="1144" y="292" width="3" height="15" fill="rgb(237,18,41)"/><text x="1147.00" y="302.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.27%)</title><rect x="1147" y="228" width="4" height="15" fill="rgb(234,106,43)"/><text x="1150.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.27%)</title><rect x="1147" y="244" width="4" height="15" fill="rgb(221,189,9)"/><text x="1150.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="1147" y="260" width="4" height="15" fill="rgb(219,223,52)"/><text x="1150.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="1147" y="276" width="4" height="15" fill="rgb(249,158,41)"/><text x="1150.00" y="286.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py) (1 samples, 0.27%)</title><rect x="1151" y="228" width="3" height="15" fill="rgb(239,12,28)"/><text x="1154.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.27%)</title><rect x="1151" y="244" width="3" height="15" fill="rgb(251,64,47)"/><text x="1154.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="1151" y="260" width="3" height="15" fill="rgb(246,99,34)"/><text x="1154.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="1151" y="276" width="3" height="15" fill="rgb(254,109,50)"/><text x="1154.00" y="286.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py) (340 samples, 93.41%)</title><rect x="55" y="68" width="1102" height="15" fill="rgb(247,159,21)"/><text x="58.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py) (340 samples, 93.41%)</title><rect x="55" y="84" width="1102" height="15" fill="rgb(240,65,53)"/><text x="58.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.82%)</title><rect x="1147" y="100" width="10" height="15" fill="rgb(240,29,7)"/><text x="1150.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.82%)</title><rect x="1147" y="116" width="10" height="15" fill="rgb(241,211,1)"/><text x="1150.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.82%)</title><rect x="1147" y="132" width="10" height="15" fill="rgb(247,204,27)"/><text x="1150.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 0.82%)</title><rect x="1147" y="148" width="10" height="15" fill="rgb(224,181,20)"/><text x="1150.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 0.82%)</title><rect x="1147" y="164" width="10" height="15" fill="rgb(218,216,25)"/><text x="1150.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (3 samples, 0.82%)</title><rect x="1147" y="180" width="10" height="15" fill="rgb(217,20,51)"/><text x="1150.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (3 samples, 0.82%)</title><rect x="1147" y="196" width="10" height="15" fill="rgb(254,117,27)"/><text x="1150.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (3 samples, 0.82%)</title><rect x="1147" y="212" width="10" height="15" fill="rgb(222,65,37)"/><text x="1150.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py) (1 samples, 0.27%)</title><rect x="1154" y="228" width="3" height="15" fill="rgb(254,56,41)"/><text x="1157.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.27%)</title><rect x="1154" y="244" width="3" height="15" fill="rgb(210,145,47)"/><text x="1157.00" y="254.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.27%)</title><rect x="1157" y="132" width="3" height="15" fill="rgb(205,116,21)"/><text x="1160.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;) (1 samples, 0.27%)</title><rect x="1157" y="148" width="3" height="15" fill="rgb(232,217,36)"/><text x="1160.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.27%)</title><rect x="1157" y="164" width="3" height="15" fill="rgb(241,36,14)"/><text x="1160.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py) (1 samples, 0.27%)</title><rect x="1157" y="180" width="3" height="15" fill="rgb(211,208,32)"/><text x="1160.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py) (1 samples, 0.27%)</title><rect x="1157" y="196" width="3" height="15" fill="rgb(216,3,25)"/><text x="1160.00" y="206.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py) (1 samples, 0.27%)</title><rect x="1160" y="132" width="4" height="15" fill="rgb(219,139,21)"/><text x="1163.00" y="142.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.27%)</title><rect x="1160" y="148" width="4" height="15" fill="rgb(228,163,13)"/><text x="1163.00" y="158.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.82%)</title><rect x="1157" y="116" width="10" height="15" fill="rgb(244,25,48)"/><text x="1160.00" y="126.50"></text></g><g><title>train_test_split (sklearn/model_selection/_split.py) (1 samples, 0.27%)</title><rect x="1164" y="132" width="3" height="15" fill="rgb(231,167,19)"/><text x="1167.00" y="142.50"></text></g><g><title>indexable (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="1164" y="148" width="3" height="15" fill="rgb(212,131,37)"/><text x="1167.00" y="158.50"></text></g><g><title>check_consistent_length (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="1164" y="164" width="3" height="15" fill="rgb(235,9,30)"/><text x="1167.00" y="174.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (1 samples, 0.27%)</title><rect x="1164" y="180" width="3" height="15" fill="rgb(238,47,3)"/><text x="1167.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.27%)</title><rect x="1164" y="196" width="3" height="15" fill="rgb(226,186,23)"/><text x="1167.00" y="206.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (1 samples, 0.27%)</title><rect x="1164" y="212" width="3" height="15" fill="rgb(213,13,6)"/><text x="1167.00" y="222.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (1 samples, 0.27%)</title><rect x="1164" y="228" width="3" height="15" fill="rgb(232,218,1)"/><text x="1167.00" y="238.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.27%)</title><rect x="1164" y="244" width="3" height="15" fill="rgb(227,43,17)"/><text x="1167.00" y="254.50"></text></g><g><title>PyArray_CopyObject (arrayobject.c) (1 samples, 0.27%)</title><rect x="1164" y="260" width="3" height="15" fill="rgb(253,63,24)"/><text x="1167.00" y="270.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.27%)</title><rect x="1167" y="116" width="3" height="15" fill="rgb(237,205,10)"/><text x="1170.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="1167" y="132" width="3" height="15" fill="rgb(236,109,4)"/><text x="1170.00" y="142.50"></text></g><g><title>average (&lt;__array_function__ internals&gt;) (1 samples, 0.27%)</title><rect x="1170" y="180" width="3" height="15" fill="rgb(252,70,1)"/><text x="1173.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.27%)</title><rect x="1170" y="196" width="3" height="15" fill="rgb(215,96,50)"/><text x="1173.00" y="206.50"></text></g><g><title>average (numpy/lib/function_base.py) (1 samples, 0.27%)</title><rect x="1170" y="212" width="3" height="15" fill="rgb(228,80,15)"/><text x="1173.00" y="222.50"></text></g><g><title>double_richcompare (scalarmath.c.src) (1 samples, 0.27%)</title><rect x="1170" y="228" width="3" height="15" fill="rgb(253,80,44)"/><text x="1173.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.27%)</title><rect x="1170" y="244" width="3" height="15" fill="rgb(216,155,13)"/><text x="1173.00" y="254.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(246,0,5)"/><text x="1173.00" y="270.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.27%)</title><rect x="1170" y="276" width="3" height="15" fill="rgb(226,169,47)"/><text x="1173.00" y="286.50"></text></g><g><title>0x7f04eede2100 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1173" y="244" width="4" height="15" fill="rgb(210,11,37)"/><text x="1176.00" y="254.50"></text></g><g><title>0x7f04eedeba47 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1173" y="260" width="4" height="15" fill="rgb(224,106,30)"/><text x="1176.00" y="270.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.27%)</title><rect x="1173" y="276" width="4" height="15" fill="rgb(248,158,17)"/><text x="1176.00" y="286.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.27%)</title><rect x="1173" y="292" width="4" height="15" fill="rgb(231,224,3)"/><text x="1176.00" y="302.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c) (1 samples, 0.27%)</title><rect x="1173" y="308" width="4" height="15" fill="rgb(217,51,15)"/><text x="1176.00" y="318.50"></text></g><g><title>arraydescr_name_get (descriptor.c) (1 samples, 0.27%)</title><rect x="1173" y="324" width="4" height="15" fill="rgb(220,34,25)"/><text x="1176.00" y="334.50"></text></g><g><title>_name_get (numpy/core/_dtype.py) (1 samples, 0.27%)</title><rect x="1173" y="340" width="4" height="15" fill="rgb(246,127,52)"/><text x="1176.00" y="350.50"></text></g><g><title>0x7f04eebb1ee8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="1173" y="228" width="7" height="15" fill="rgb(212,133,11)"/><text x="1176.00" y="238.50"></text></g><g><title>0x7f04eede21aa (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1177" y="244" width="3" height="15" fill="rgb(207,12,13)"/><text x="1180.00" y="254.50"></text></g><g><title>0x7f04eede1ef6 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1177" y="260" width="3" height="15" fill="rgb(212,123,37)"/><text x="1180.00" y="270.50"></text></g><g><title>0x7f04eedda17d (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1177" y="276" width="3" height="15" fill="rgb(245,206,30)"/><text x="1180.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.27%)</title><rect x="1177" y="292" width="3" height="15" fill="rgb(224,42,47)"/><text x="1180.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.27%)</title><rect x="1177" y="308" width="3" height="15" fill="rgb(211,184,4)"/><text x="1180.00" y="318.50"></text></g><g><title>0x7f04eedd6cc0 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1180" y="276" width="3" height="15" fill="rgb(214,40,22)"/><text x="1183.00" y="286.50"></text></g><g><title>0x7f04eeb80b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.10%)</title><rect x="1173" y="212" width="13" height="15" fill="rgb(225,131,37)"/><text x="1176.00" y="222.50"></text></g><g><title>0x7f04eebb210a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="1180" y="228" width="6" height="15" fill="rgb(217,185,43)"/><text x="1183.00" y="238.50"></text></g><g><title>0x7f04eedddd8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="1180" y="244" width="6" height="15" fill="rgb(222,27,0)"/><text x="1183.00" y="254.50"></text></g><g><title>0x7f04eedd6d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="1180" y="260" width="6" height="15" fill="rgb(254,172,48)"/><text x="1183.00" y="270.50"></text></g><g><title>0x7f04eedd6d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1183" y="276" width="3" height="15" fill="rgb(217,192,4)"/><text x="1186.00" y="286.50"></text></g><g><title>0x7f04eedd6d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1183" y="292" width="3" height="15" fill="rgb(250,180,2)"/><text x="1186.00" y="302.50"></text></g><g><title>0x7f04eedd6cde (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1183" y="308" width="3" height="15" fill="rgb(248,90,26)"/><text x="1186.00" y="318.50"></text></g><g><title>all (364 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,122,21)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py) (364 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(206,213,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py) (10 samples, 2.75%)</title><rect x="1157" y="68" width="33" height="15" fill="rgb(208,208,46)"/><text x="1160.00" y="78.50">st..</text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (10 samples, 2.75%)</title><rect x="1157" y="84" width="33" height="15" fill="rgb(217,129,14)"/><text x="1160.00" y="94.50">se..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 2.75%)</title><rect x="1157" y="100" width="33" height="15" fill="rgb(229,106,27)"/><text x="1160.00" y="110.50">se..</text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (6 samples, 1.65%)</title><rect x="1170" y="116" width="20" height="15" fill="rgb(248,155,37)"/><text x="1173.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (6 samples, 1.65%)</title><rect x="1170" y="132" width="20" height="15" fill="rgb(246,46,22)"/><text x="1173.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (6 samples, 1.65%)</title><rect x="1170" y="148" width="20" height="15" fill="rgb(240,159,5)"/><text x="1173.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (6 samples, 1.65%)</title><rect x="1170" y="164" width="20" height="15" fill="rgb(244,212,36)"/><text x="1173.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (5 samples, 1.37%)</title><rect x="1173" y="180" width="17" height="15" fill="rgb(254,103,49)"/><text x="1176.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (5 samples, 1.37%)</title><rect x="1173" y="196" width="17" height="15" fill="rgb(254,219,11)"/><text x="1176.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.27%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(251,202,21)"/><text x="1189.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.27%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(233,4,44)"/><text x="1189.00" y="238.50"></text></g></g></svg>