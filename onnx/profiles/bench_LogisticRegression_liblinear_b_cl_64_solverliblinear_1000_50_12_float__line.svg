<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2678" onload="init(evt)" viewBox="0 0 1200 2678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2678" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2661.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2661.00"> </text><g id="frames"><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.16%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(222,3,30)"/><text x="13.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.16%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(240,8,30)"/><text x="13.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.32%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(249,76,14)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.16%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(221,27,20)"/><text x="14.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.16%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(242,31,7)"/><text x="14.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(251,3,43)"/><text x="14.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.16%)</title><rect x="11" y="228" width="2" height="15" fill="rgb(226,226,39)"/><text x="14.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.16%)</title><rect x="11" y="244" width="2" height="15" fill="rgb(244,171,34)"/><text x="14.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.16%)</title><rect x="11" y="260" width="2" height="15" fill="rgb(254,194,49)"/><text x="14.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="11" y="276" width="2" height="15" fill="rgb(214,121,21)"/><text x="14.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="11" y="292" width="2" height="15" fill="rgb(246,20,20)"/><text x="14.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="11" y="308" width="2" height="15" fill="rgb(233,225,42)"/><text x="14.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:18) (4 samples, 0.65%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(212,87,48)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.65%)</title><rect x="10" y="116" width="7" height="15" fill="rgb(218,80,13)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 0.65%)</title><rect x="10" y="132" width="7" height="15" fill="rgb(223,169,10)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (4 samples, 0.65%)</title><rect x="10" y="148" width="7" height="15" fill="rgb(220,11,18)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (2 samples, 0.32%)</title><rect x="13" y="164" width="4" height="15" fill="rgb(215,118,7)"/><text x="16.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.32%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(210,29,7)"/><text x="16.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.32%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(242,95,16)"/><text x="16.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.32%)</title><rect x="13" y="212" width="4" height="15" fill="rgb(254,192,17)"/><text x="16.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.32%)</title><rect x="13" y="228" width="4" height="15" fill="rgb(242,61,20)"/><text x="16.00" y="238.50"></text></g><g><title>0x7f8a8353a9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="13" y="244" width="4" height="15" fill="rgb(215,79,0)"/><text x="16.00" y="254.50"></text></g><g><title>0x7f8a8355b265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="13" y="260" width="4" height="15" fill="rgb(224,202,42)"/><text x="16.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.32%)</title><rect x="13" y="276" width="4" height="15" fill="rgb(231,93,39)"/><text x="16.00" y="286.50"></text></g><g><title>0x7f8a98423c3e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(238,43,24)"/><text x="18.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.16%)</title><rect x="17" y="180" width="2" height="15" fill="rgb(231,112,49)"/><text x="20.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.16%)</title><rect x="19" y="196" width="2" height="15" fill="rgb(248,24,0)"/><text x="22.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (3 samples, 0.48%)</title><rect x="17" y="148" width="6" height="15" fill="rgb(229,174,24)"/><text x="20.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.48%)</title><rect x="17" y="164" width="6" height="15" fill="rgb(213,66,9)"/><text x="20.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.32%)</title><rect x="19" y="180" width="4" height="15" fill="rgb(215,228,16)"/><text x="22.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="21" y="196" width="2" height="15" fill="rgb(224,80,39)"/><text x="24.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.16%)</title><rect x="23" y="196" width="2" height="15" fill="rgb(235,130,18)"/><text x="26.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 0.48%)</title><rect x="23" y="180" width="6" height="15" fill="rgb(219,156,20)"/><text x="26.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.32%)</title><rect x="25" y="196" width="4" height="15" fill="rgb(217,104,3)"/><text x="28.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.32%)</title><rect x="25" y="212" width="4" height="15" fill="rgb(238,129,32)"/><text x="28.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.16%)</title><rect x="29" y="196" width="1" height="15" fill="rgb(251,223,16)"/><text x="32.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.32%)</title><rect x="30" y="196" width="4" height="15" fill="rgb(240,51,15)"/><text x="33.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.16%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(209,184,18)"/><text x="35.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.32%)</title><rect x="34" y="196" width="4" height="15" fill="rgb(208,65,17)"/><text x="37.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.32%)</title><rect x="34" y="212" width="4" height="15" fill="rgb(225,180,41)"/><text x="37.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.16%)</title><rect x="36" y="228" width="2" height="15" fill="rgb(215,93,42)"/><text x="39.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.16%)</title><rect x="38" y="196" width="2" height="15" fill="rgb(243,181,28)"/><text x="41.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.16%)</title><rect x="38" y="212" width="2" height="15" fill="rgb(211,195,38)"/><text x="41.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.16%)</title><rect x="40" y="196" width="2" height="15" fill="rgb(246,206,52)"/><text x="43.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.32%)</title><rect x="44" y="228" width="4" height="15" fill="rgb(227,151,22)"/><text x="47.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.65%)</title><rect x="42" y="196" width="7" height="15" fill="rgb(237,224,26)"/><text x="45.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.65%)</title><rect x="42" y="212" width="7" height="15" fill="rgb(242,39,6)"/><text x="45.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.16%)</title><rect x="48" y="228" width="1" height="15" fill="rgb(254,113,39)"/><text x="51.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (12 samples, 1.94%)</title><rect x="29" y="180" width="22" height="15" fill="rgb(217,188,2)"/><text x="32.00" y="190.50">d..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.16%)</title><rect x="49" y="196" width="2" height="15" fill="rgb(250,67,52)"/><text x="52.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.16%)</title><rect x="49" y="212" width="2" height="15" fill="rgb(236,34,16)"/><text x="52.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:271) (1 samples, 0.16%)</title><rect x="51" y="180" width="2" height="15" fill="rgb(214,62,17)"/><text x="54.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.16%)</title><rect x="53" y="180" width="2" height="15" fill="rgb(254,23,18)"/><text x="56.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.16%)</title><rect x="53" y="196" width="2" height="15" fill="rgb(245,16,42)"/><text x="56.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.16%)</title><rect x="53" y="212" width="2" height="15" fill="rgb(251,166,49)"/><text x="56.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.16%)</title><rect x="53" y="228" width="2" height="15" fill="rgb(229,41,5)"/><text x="56.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.16%)</title><rect x="55" y="276" width="2" height="15" fill="rgb(206,162,36)"/><text x="58.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.16%)</title><rect x="55" y="292" width="2" height="15" fill="rgb(251,176,21)"/><text x="58.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.32%)</title><rect x="55" y="260" width="4" height="15" fill="rgb(220,79,50)"/><text x="58.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.16%)</title><rect x="57" y="276" width="2" height="15" fill="rgb(213,67,41)"/><text x="60.00" y="286.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.16%)</title><rect x="57" y="292" width="2" height="15" fill="rgb(239,64,39)"/><text x="60.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1480) (1 samples, 0.16%)</title><rect x="57" y="308" width="2" height="15" fill="rgb(247,159,19)"/><text x="60.00" y="318.50"></text></g><g><title>array_add (number.c:330) (3 samples, 0.48%)</title><rect x="55" y="196" width="6" height="15" fill="rgb(238,73,48)"/><text x="58.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.48%)</title><rect x="55" y="212" width="6" height="15" fill="rgb(231,84,52)"/><text x="58.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.48%)</title><rect x="55" y="228" width="6" height="15" fill="rgb(248,111,50)"/><text x="58.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.48%)</title><rect x="55" y="244" width="6" height="15" fill="rgb(238,118,29)"/><text x="58.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.16%)</title><rect x="59" y="260" width="2" height="15" fill="rgb(221,212,42)"/><text x="62.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.16%)</title><rect x="59" y="276" width="2" height="15" fill="rgb(209,67,37)"/><text x="62.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.16%)</title><rect x="59" y="292" width="2" height="15" fill="rgb(208,5,37)"/><text x="62.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.16%)</title><rect x="59" y="308" width="2" height="15" fill="rgb(210,30,52)"/><text x="62.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.16%)</title><rect x="61" y="196" width="2" height="15" fill="rgb(250,211,15)"/><text x="64.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.48%)</title><rect x="65" y="212" width="5" height="15" fill="rgb(207,66,7)"/><text x="68.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 1.94%)</title><rect x="70" y="212" width="23" height="15" fill="rgb(221,46,4)"/><text x="73.00" y="222.50">d..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2791) (1 samples, 0.16%)</title><rect x="93" y="244" width="2" height="15" fill="rgb(237,145,52)"/><text x="96.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.16%)</title><rect x="93" y="260" width="2" height="15" fill="rgb(221,173,21)"/><text x="96.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.16%)</title><rect x="95" y="244" width="2" height="15" fill="rgb(220,195,18)"/><text x="98.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:501) (1 samples, 0.16%)</title><rect x="95" y="260" width="2" height="15" fill="rgb(235,75,52)"/><text x="98.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (15 samples, 2.42%)</title><rect x="97" y="244" width="29" height="15" fill="rgb(247,164,25)"/><text x="100.00" y="254.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (15 samples, 2.42%)</title><rect x="97" y="260" width="29" height="15" fill="rgb(223,161,50)"/><text x="100.00" y="270.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (15 samples, 2.42%)</title><rect x="97" y="276" width="29" height="15" fill="rgb(245,55,29)"/><text x="100.00" y="286.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (15 samples, 2.42%)</title><rect x="97" y="292" width="29" height="15" fill="rgb(247,167,46)"/><text x="100.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (15 samples, 2.42%)</title><rect x="97" y="308" width="29" height="15" fill="rgb(222,96,3)"/><text x="100.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (15 samples, 2.42%)</title><rect x="97" y="324" width="29" height="15" fill="rgb(228,151,34)"/><text x="100.00" y="334.50">_a..</text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:128) (1 samples, 0.16%)</title><rect x="126" y="260" width="2" height="15" fill="rgb(221,227,40)"/><text x="129.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (2 samples, 0.32%)</title><rect x="126" y="244" width="3" height="15" fill="rgb(244,25,31)"/><text x="129.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:146) (1 samples, 0.16%)</title><rect x="128" y="260" width="1" height="15" fill="rgb(216,106,32)"/><text x="131.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (67 samples, 10.81%)</title><rect x="23" y="164" width="127" height="15" fill="rgb(222,108,8)"/><text x="26.00" y="174.50">_predict_proba_..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (50 samples, 8.06%)</title><rect x="55" y="180" width="95" height="15" fill="rgb(247,178,42)"/><text x="58.00" y="190.50">decision_fu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (46 samples, 7.42%)</title><rect x="63" y="196" width="87" height="15" fill="rgb(221,218,1)"/><text x="66.00" y="206.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (30 samples, 4.84%)</title><rect x="93" y="212" width="57" height="15" fill="rgb(254,89,18)"/><text x="96.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (30 samples, 4.84%)</title><rect x="93" y="228" width="57" height="15" fill="rgb(230,91,25)"/><text x="96.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (11 samples, 1.77%)</title><rect x="129" y="244" width="21" height="15" fill="rgb(244,34,49)"/><text x="132.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (11 samples, 1.77%)</title><rect x="129" y="260" width="21" height="15" fill="rgb(206,73,16)"/><text x="132.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.77%)</title><rect x="129" y="276" width="21" height="15" fill="rgb(232,12,20)"/><text x="132.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.77%)</title><rect x="129" y="292" width="21" height="15" fill="rgb(253,16,33)"/><text x="132.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.77%)</title><rect x="129" y="308" width="21" height="15" fill="rgb(223,131,7)"/><text x="132.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.16%)</title><rect x="150" y="212" width="2" height="15" fill="rgb(248,45,41)"/><text x="153.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.16%)</title><rect x="150" y="228" width="2" height="15" fill="rgb(253,140,32)"/><text x="153.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.16%)</title><rect x="150" y="244" width="2" height="15" fill="rgb(246,164,4)"/><text x="153.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.16%)</title><rect x="150" y="260" width="2" height="15" fill="rgb(240,73,30)"/><text x="153.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.16%)</title><rect x="150" y="276" width="2" height="15" fill="rgb(210,195,19)"/><text x="153.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.16%)</title><rect x="150" y="292" width="2" height="15" fill="rgb(211,222,47)"/><text x="153.00" y="302.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.16%)</title><rect x="150" y="308" width="2" height="15" fill="rgb(218,107,29)"/><text x="153.00" y="318.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.16%)</title><rect x="150" y="324" width="2" height="15" fill="rgb(228,186,3)"/><text x="153.00" y="334.50"></text></g><g><title>0x7f8a8353a9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="152" y="244" width="2" height="15" fill="rgb(242,43,42)"/><text x="155.00" y="254.50"></text></g><g><title>0x7f8a98423ba0 (libm-2.29.so) (2 samples, 0.32%)</title><rect x="164" y="292" width="3" height="15" fill="rgb(211,198,34)"/><text x="167.00" y="302.50"></text></g><g><title>0x7f8a8355b265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.29%)</title><rect x="154" y="260" width="15" height="15" fill="rgb(240,137,14)"/><text x="157.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 1.29%)</title><rect x="154" y="276" width="15" height="15" fill="rgb(207,171,2)"/><text x="157.00" y="286.50"></text></g><g><title>0x7f8a98423c7b (libm-2.29.so) (1 samples, 0.16%)</title><rect x="167" y="292" width="2" height="15" fill="rgb(228,198,40)"/><text x="170.00" y="302.50"></text></g><g><title>0x7f8a8355b275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="169" y="260" width="2" height="15" fill="rgb(224,155,49)"/><text x="172.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (18 samples, 2.90%)</title><rect x="150" y="164" width="35" height="15" fill="rgb(212,45,28)"/><text x="153.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 2.90%)</title><rect x="150" y="180" width="35" height="15" fill="rgb(248,131,45)"/><text x="153.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 2.90%)</title><rect x="150" y="196" width="35" height="15" fill="rgb(236,48,35)"/><text x="153.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (17 samples, 2.74%)</title><rect x="152" y="212" width="33" height="15" fill="rgb(232,44,35)"/><text x="155.00" y="222.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (17 samples, 2.74%)</title><rect x="152" y="228" width="33" height="15" fill="rgb(248,58,13)"/><text x="155.00" y="238.50">tr..</text></g><g><title>0x7f8a8353a9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.58%)</title><rect x="154" y="244" width="31" height="15" fill="rgb(223,185,43)"/><text x="157.00" y="254.50">0x..</text></g><g><title>0x7f8a8355b279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.13%)</title><rect x="171" y="260" width="14" height="15" fill="rgb(247,60,50)"/><text x="174.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.16%)</title><rect x="185" y="164" width="2" height="15" fill="rgb(223,140,49)"/><text x="188.00" y="174.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.16%)</title><rect x="187" y="276" width="1" height="15" fill="rgb(220,2,27)"/><text x="190.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.16%)</title><rect x="187" y="292" width="1" height="15" fill="rgb(244,3,28)"/><text x="190.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.16%)</title><rect x="187" y="308" width="1" height="15" fill="rgb(216,32,8)"/><text x="190.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.16%)</title><rect x="188" y="324" width="2" height="15" fill="rgb(247,29,31)"/><text x="191.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3687) (1 samples, 0.16%)</title><rect x="188" y="340" width="2" height="15" fill="rgb(225,221,8)"/><text x="191.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.32%)</title><rect x="188" y="276" width="4" height="15" fill="rgb(245,45,37)"/><text x="191.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.32%)</title><rect x="188" y="292" width="4" height="15" fill="rgb(253,91,52)"/><text x="191.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.32%)</title><rect x="188" y="308" width="4" height="15" fill="rgb(236,76,12)"/><text x="191.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.16%)</title><rect x="190" y="324" width="2" height="15" fill="rgb(240,47,20)"/><text x="193.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="190" y="340" width="2" height="15" fill="rgb(242,229,47)"/><text x="193.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.16%)</title><rect x="192" y="276" width="2" height="15" fill="rgb(234,199,17)"/><text x="195.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="192" y="292" width="2" height="15" fill="rgb(226,208,21)"/><text x="195.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.16%)</title><rect x="192" y="308" width="2" height="15" fill="rgb(254,9,25)"/><text x="195.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.16%)</title><rect x="194" y="292" width="2" height="15" fill="rgb(245,105,34)"/><text x="197.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.32%)</title><rect x="200" y="308" width="4" height="15" fill="rgb(207,183,3)"/><text x="203.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1663) (1 samples, 0.16%)</title><rect x="204" y="324" width="2" height="15" fill="rgb(231,207,43)"/><text x="207.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.32%)</title><rect x="204" y="308" width="3" height="15" fill="rgb(235,72,7)"/><text x="207.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.16%)</title><rect x="206" y="324" width="1" height="15" fill="rgb(214,201,46)"/><text x="209.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.16%)</title><rect x="207" y="308" width="2" height="15" fill="rgb(236,154,47)"/><text x="210.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.16%)</title><rect x="209" y="308" width="2" height="15" fill="rgb(238,66,46)"/><text x="212.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.16%)</title><rect x="211" y="308" width="2" height="15" fill="rgb(218,73,18)"/><text x="214.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (15 samples, 2.42%)</title><rect x="187" y="180" width="28" height="15" fill="rgb(254,169,9)"/><text x="190.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 2.42%)</title><rect x="187" y="196" width="28" height="15" fill="rgb(252,89,14)"/><text x="190.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 2.42%)</title><rect x="187" y="212" width="28" height="15" fill="rgb(215,55,11)"/><text x="190.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 2.42%)</title><rect x="187" y="228" width="28" height="15" fill="rgb(242,93,24)"/><text x="190.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (15 samples, 2.42%)</title><rect x="187" y="244" width="28" height="15" fill="rgb(237,182,47)"/><text x="190.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (15 samples, 2.42%)</title><rect x="187" y="260" width="28" height="15" fill="rgb(228,85,52)"/><text x="190.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 1.77%)</title><rect x="194" y="276" width="21" height="15" fill="rgb(226,11,49)"/><text x="197.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.61%)</title><rect x="196" y="292" width="19" height="15" fill="rgb(223,135,41)"/><text x="199.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.16%)</title><rect x="213" y="308" width="2" height="15" fill="rgb(254,21,23)"/><text x="216.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1875) (1 samples, 0.16%)</title><rect x="213" y="324" width="2" height="15" fill="rgb(225,216,23)"/><text x="216.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.16%)</title><rect x="215" y="276" width="2" height="15" fill="rgb(250,157,13)"/><text x="218.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.16%)</title><rect x="217" y="276" width="2" height="15" fill="rgb(249,155,12)"/><text x="220.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.16%)</title><rect x="219" y="276" width="2" height="15" fill="rgb(239,75,14)"/><text x="222.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.65%)</title><rect x="215" y="228" width="8" height="15" fill="rgb(213,109,13)"/><text x="218.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.65%)</title><rect x="215" y="244" width="8" height="15" fill="rgb(247,40,50)"/><text x="218.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.65%)</title><rect x="215" y="260" width="8" height="15" fill="rgb(250,83,8)"/><text x="218.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.16%)</title><rect x="221" y="276" width="2" height="15" fill="rgb(251,56,8)"/><text x="224.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.16%)</title><rect x="223" y="228" width="2" height="15" fill="rgb(245,124,40)"/><text x="226.00" y="238.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1040) (1 samples, 0.16%)</title><rect x="223" y="244" width="2" height="15" fill="rgb(243,64,21)"/><text x="226.00" y="254.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.16%)</title><rect x="225" y="276" width="1" height="15" fill="rgb(206,43,52)"/><text x="228.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.16%)</title><rect x="225" y="292" width="1" height="15" fill="rgb(250,127,26)"/><text x="228.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:38) (116 samples, 18.71%)</title><rect x="10" y="52" width="220" height="15" fill="rgb(242,96,1)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegre..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:37) (116 samples, 18.71%)</title><rect x="10" y="68" width="220" height="15" fill="rgb(216,180,26)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRe..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:29) (116 samples, 18.71%)</title><rect x="10" y="84" width="220" height="15" fill="rgb(223,63,26)"/><text x="13.00" y="94.50">setup_profile (bench_Logistic..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:23) (112 samples, 18.06%)</title><rect x="17" y="100" width="213" height="15" fill="rgb(237,63,22)"/><text x="20.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (112 samples, 18.06%)</title><rect x="17" y="116" width="213" height="15" fill="rgb(218,82,53)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (112 samples, 18.06%)</title><rect x="17" y="132" width="213" height="15" fill="rgb(222,15,40)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (109 samples, 17.58%)</title><rect x="23" y="148" width="207" height="15" fill="rgb(254,87,5)"/><text x="26.00" y="158.50">predict_proba (sklearn/line..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (23 samples, 3.71%)</title><rect x="187" y="164" width="43" height="15" fill="rgb(225,155,6)"/><text x="190.00" y="174.50">_pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.29%)</title><rect x="215" y="180" width="15" height="15" fill="rgb(206,158,0)"/><text x="218.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.29%)</title><rect x="215" y="196" width="15" height="15" fill="rgb(247,205,30)"/><text x="218.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.29%)</title><rect x="215" y="212" width="15" height="15" fill="rgb(220,55,49)"/><text x="218.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.48%)</title><rect x="225" y="228" width="5" height="15" fill="rgb(228,203,25)"/><text x="228.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.48%)</title><rect x="225" y="244" width="5" height="15" fill="rgb(210,125,9)"/><text x="228.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.48%)</title><rect x="225" y="260" width="5" height="15" fill="rgb(236,36,50)"/><text x="228.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.32%)</title><rect x="226" y="276" width="4" height="15" fill="rgb(227,173,44)"/><text x="229.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.32%)</title><rect x="226" y="292" width="4" height="15" fill="rgb(218,114,22)"/><text x="229.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:1) (1 samples, 0.16%)</title><rect x="230" y="148" width="2" height="15" fill="rgb(211,61,2)"/><text x="233.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="230" y="164" width="2" height="15" fill="rgb(233,55,32)"/><text x="233.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="230" y="180" width="2" height="15" fill="rgb(231,229,35)"/><text x="233.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="230" y="196" width="2" height="15" fill="rgb(239,156,26)"/><text x="233.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="230" y="212" width="2" height="15" fill="rgb(252,161,38)"/><text x="233.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="230" y="228" width="2" height="15" fill="rgb(219,173,29)"/><text x="233.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.16%)</title><rect x="230" y="244" width="2" height="15" fill="rgb(228,157,33)"/><text x="233.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="230" y="260" width="2" height="15" fill="rgb(224,212,26)"/><text x="233.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(217,118,54)"/><text x="233.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(226,174,29)"/><text x="233.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="230" y="308" width="2" height="15" fill="rgb(246,123,40)"/><text x="233.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="230" y="324" width="2" height="15" fill="rgb(252,193,2)"/><text x="233.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="230" y="340" width="2" height="15" fill="rgb(254,122,8)"/><text x="233.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="230" y="356" width="2" height="15" fill="rgb(254,218,36)"/><text x="233.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.16%)</title><rect x="230" y="372" width="2" height="15" fill="rgb(209,202,24)"/><text x="233.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="230" y="388" width="2" height="15" fill="rgb(215,46,30)"/><text x="233.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="230" y="404" width="2" height="15" fill="rgb(224,39,41)"/><text x="233.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="230" y="420" width="2" height="15" fill="rgb(205,121,13)"/><text x="233.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="230" y="436" width="2" height="15" fill="rgb(249,138,6)"/><text x="233.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="230" y="452" width="2" height="15" fill="rgb(242,144,54)"/><text x="233.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.16%)</title><rect x="230" y="468" width="2" height="15" fill="rgb(207,183,34)"/><text x="233.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="230" y="484" width="2" height="15" fill="rgb(230,138,27)"/><text x="233.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="230" y="500" width="2" height="15" fill="rgb(223,156,6)"/><text x="233.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="230" y="516" width="2" height="15" fill="rgb(247,28,50)"/><text x="233.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="230" y="532" width="2" height="15" fill="rgb(227,197,11)"/><text x="233.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="230" y="548" width="2" height="15" fill="rgb(213,26,27)"/><text x="233.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:3571) (1 samples, 0.16%)</title><rect x="230" y="564" width="2" height="15" fill="rgb(226,31,44)"/><text x="233.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.16%)</title><rect x="230" y="580" width="2" height="15" fill="rgb(239,196,47)"/><text x="233.00" y="590.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.32%)</title><rect x="232" y="852" width="4" height="15" fill="rgb(226,130,13)"/><text x="235.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.32%)</title><rect x="232" y="868" width="4" height="15" fill="rgb(210,13,20)"/><text x="235.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.32%)</title><rect x="232" y="884" width="4" height="15" fill="rgb(225,17,2)"/><text x="235.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.32%)</title><rect x="232" y="900" width="4" height="15" fill="rgb(237,141,51)"/><text x="235.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.32%)</title><rect x="232" y="916" width="4" height="15" fill="rgb(233,90,37)"/><text x="235.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.32%)</title><rect x="232" y="932" width="4" height="15" fill="rgb(208,178,9)"/><text x="235.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.32%)</title><rect x="232" y="948" width="4" height="15" fill="rgb(229,202,43)"/><text x="235.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (2 samples, 0.32%)</title><rect x="232" y="964" width="4" height="15" fill="rgb(208,68,41)"/><text x="235.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.16%)</title><rect x="234" y="980" width="2" height="15" fill="rgb(237,24,18)"/><text x="237.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.16%)</title><rect x="234" y="996" width="2" height="15" fill="rgb(245,36,51)"/><text x="237.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.16%)</title><rect x="234" y="1012" width="2" height="15" fill="rgb(214,39,28)"/><text x="237.00" y="1022.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.16%)</title><rect x="236" y="916" width="2" height="15" fill="rgb(231,81,27)"/><text x="239.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.16%)</title><rect x="236" y="932" width="2" height="15" fill="rgb(211,169,14)"/><text x="239.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.16%)</title><rect x="236" y="948" width="2" height="15" fill="rgb(234,182,29)"/><text x="239.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.16%)</title><rect x="238" y="964" width="2" height="15" fill="rgb(254,217,35)"/><text x="241.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.16%)</title><rect x="238" y="980" width="2" height="15" fill="rgb(241,151,7)"/><text x="241.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.16%)</title><rect x="238" y="996" width="2" height="15" fill="rgb(214,130,30)"/><text x="241.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.16%)</title><rect x="238" y="1012" width="2" height="15" fill="rgb(222,42,11)"/><text x="241.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="238" y="1028" width="2" height="15" fill="rgb(222,32,25)"/><text x="241.00" y="1038.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.32%)</title><rect x="238" y="932" width="4" height="15" fill="rgb(221,38,25)"/><text x="241.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.32%)</title><rect x="238" y="948" width="4" height="15" fill="rgb(215,27,37)"/><text x="241.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.16%)</title><rect x="240" y="964" width="2" height="15" fill="rgb(240,114,44)"/><text x="243.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.16%)</title><rect x="240" y="980" width="2" height="15" fill="rgb(253,48,37)"/><text x="243.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.16%)</title><rect x="240" y="996" width="2" height="15" fill="rgb(213,21,11)"/><text x="243.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.16%)</title><rect x="240" y="1012" width="2" height="15" fill="rgb(252,181,32)"/><text x="243.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="240" y="1028" width="2" height="15" fill="rgb(210,1,21)"/><text x="243.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.16%)</title><rect x="240" y="1044" width="2" height="15" fill="rgb(220,47,3)"/><text x="243.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (4 samples, 0.65%)</title><rect x="236" y="852" width="8" height="15" fill="rgb(226,82,40)"/><text x="239.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (4 samples, 0.65%)</title><rect x="236" y="868" width="8" height="15" fill="rgb(248,107,28)"/><text x="239.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (4 samples, 0.65%)</title><rect x="236" y="884" width="8" height="15" fill="rgb(233,123,48)"/><text x="239.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (4 samples, 0.65%)</title><rect x="236" y="900" width="8" height="15" fill="rgb(211,175,13)"/><text x="239.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.48%)</title><rect x="238" y="916" width="6" height="15" fill="rgb(249,155,7)"/><text x="241.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.16%)</title><rect x="242" y="932" width="2" height="15" fill="rgb(228,103,34)"/><text x="245.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.32%)</title><rect x="244" y="884" width="3" height="15" fill="rgb(254,182,54)"/><text x="247.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.32%)</title><rect x="244" y="900" width="3" height="15" fill="rgb(253,147,20)"/><text x="247.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="246" y="916" width="1" height="15" fill="rgb(248,62,24)"/><text x="249.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="246" y="932" width="1" height="15" fill="rgb(224,229,4)"/><text x="249.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.16%)</title><rect x="246" y="948" width="1" height="15" fill="rgb(226,131,6)"/><text x="249.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.16%)</title><rect x="246" y="964" width="1" height="15" fill="rgb(216,69,47)"/><text x="249.00" y="974.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.16%)</title><rect x="247" y="900" width="2" height="15" fill="rgb(217,11,18)"/><text x="250.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.16%)</title><rect x="247" y="916" width="2" height="15" fill="rgb(244,106,26)"/><text x="250.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (10 samples, 1.61%)</title><rect x="232" y="148" width="19" height="15" fill="rgb(217,222,24)"/><text x="235.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="164" width="19" height="15" fill="rgb(212,99,37)"/><text x="235.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 1.61%)</title><rect x="232" y="180" width="19" height="15" fill="rgb(220,12,3)"/><text x="235.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="196" width="19" height="15" fill="rgb(231,60,28)"/><text x="235.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="212" width="19" height="15" fill="rgb(211,226,47)"/><text x="235.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.61%)</title><rect x="232" y="228" width="19" height="15" fill="rgb(250,142,22)"/><text x="235.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.61%)</title><rect x="232" y="244" width="19" height="15" fill="rgb(208,165,12)"/><text x="235.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.61%)</title><rect x="232" y="260" width="19" height="15" fill="rgb(225,57,7)"/><text x="235.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="276" width="19" height="15" fill="rgb(230,91,26)"/><text x="235.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (10 samples, 1.61%)</title><rect x="232" y="292" width="19" height="15" fill="rgb(208,85,41)"/><text x="235.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="308" width="19" height="15" fill="rgb(217,102,53)"/><text x="235.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.61%)</title><rect x="232" y="324" width="19" height="15" fill="rgb(214,199,42)"/><text x="235.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.61%)</title><rect x="232" y="340" width="19" height="15" fill="rgb(222,83,33)"/><text x="235.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.61%)</title><rect x="232" y="356" width="19" height="15" fill="rgb(226,121,47)"/><text x="235.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="372" width="19" height="15" fill="rgb(214,36,50)"/><text x="235.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (10 samples, 1.61%)</title><rect x="232" y="388" width="19" height="15" fill="rgb(205,172,6)"/><text x="235.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="404" width="19" height="15" fill="rgb(225,83,35)"/><text x="235.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.61%)</title><rect x="232" y="420" width="19" height="15" fill="rgb(232,40,0)"/><text x="235.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.61%)</title><rect x="232" y="436" width="19" height="15" fill="rgb(248,160,43)"/><text x="235.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.61%)</title><rect x="232" y="452" width="19" height="15" fill="rgb(206,3,42)"/><text x="235.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="468" width="19" height="15" fill="rgb(228,97,49)"/><text x="235.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (10 samples, 1.61%)</title><rect x="232" y="484" width="19" height="15" fill="rgb(218,120,33)"/><text x="235.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="500" width="19" height="15" fill="rgb(250,76,2)"/><text x="235.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.61%)</title><rect x="232" y="516" width="19" height="15" fill="rgb(216,8,25)"/><text x="235.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.61%)</title><rect x="232" y="532" width="19" height="15" fill="rgb(210,199,6)"/><text x="235.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.61%)</title><rect x="232" y="548" width="19" height="15" fill="rgb(242,160,25)"/><text x="235.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="564" width="19" height="15" fill="rgb(229,106,42)"/><text x="235.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (10 samples, 1.61%)</title><rect x="232" y="580" width="19" height="15" fill="rgb(242,103,24)"/><text x="235.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="596" width="19" height="15" fill="rgb(245,200,36)"/><text x="235.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 1.61%)</title><rect x="232" y="612" width="19" height="15" fill="rgb(232,47,39)"/><text x="235.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="628" width="19" height="15" fill="rgb(231,42,20)"/><text x="235.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="644" width="19" height="15" fill="rgb(232,68,54)"/><text x="235.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.61%)</title><rect x="232" y="660" width="19" height="15" fill="rgb(240,157,19)"/><text x="235.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.61%)</title><rect x="232" y="676" width="19" height="15" fill="rgb(235,159,1)"/><text x="235.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.61%)</title><rect x="232" y="692" width="19" height="15" fill="rgb(212,47,44)"/><text x="235.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="708" width="19" height="15" fill="rgb(208,193,21)"/><text x="235.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (10 samples, 1.61%)</title><rect x="232" y="724" width="19" height="15" fill="rgb(209,137,4)"/><text x="235.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.61%)</title><rect x="232" y="740" width="19" height="15" fill="rgb(239,115,49)"/><text x="235.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.61%)</title><rect x="232" y="756" width="19" height="15" fill="rgb(226,142,52)"/><text x="235.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.61%)</title><rect x="232" y="772" width="19" height="15" fill="rgb(240,104,42)"/><text x="235.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.61%)</title><rect x="232" y="788" width="19" height="15" fill="rgb(214,138,34)"/><text x="235.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.61%)</title><rect x="232" y="804" width="19" height="15" fill="rgb(246,207,48)"/><text x="235.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (10 samples, 1.61%)</title><rect x="232" y="820" width="19" height="15" fill="rgb(247,96,39)"/><text x="235.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (10 samples, 1.61%)</title><rect x="232" y="836" width="19" height="15" fill="rgb(235,137,52)"/><text x="235.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 0.65%)</title><rect x="244" y="852" width="7" height="15" fill="rgb(217,227,51)"/><text x="247.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 0.65%)</title><rect x="244" y="868" width="7" height="15" fill="rgb(235,216,19)"/><text x="247.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.32%)</title><rect x="247" y="884" width="4" height="15" fill="rgb(244,57,2)"/><text x="250.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.16%)</title><rect x="249" y="900" width="2" height="15" fill="rgb(237,12,4)"/><text x="252.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.16%)</title><rect x="249" y="916" width="2" height="15" fill="rgb(245,53,35)"/><text x="252.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.16%)</title><rect x="249" y="932" width="2" height="15" fill="rgb(233,191,8)"/><text x="252.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.16%)</title><rect x="249" y="948" width="2" height="15" fill="rgb(233,173,21)"/><text x="252.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.16%)</title><rect x="249" y="964" width="2" height="15" fill="rgb(212,135,25)"/><text x="252.00" y="974.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.16%)</title><rect x="251" y="484" width="2" height="15" fill="rgb(226,5,3)"/><text x="254.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="251" y="500" width="2" height="15" fill="rgb(229,151,17)"/><text x="254.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="516" width="2" height="15" fill="rgb(222,82,37)"/><text x="254.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="251" y="532" width="2" height="15" fill="rgb(230,68,24)"/><text x="254.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="251" y="548" width="2" height="15" fill="rgb(253,45,27)"/><text x="254.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="251" y="564" width="2" height="15" fill="rgb(246,165,25)"/><text x="254.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="251" y="580" width="2" height="15" fill="rgb(228,123,14)"/><text x="254.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="596" width="2" height="15" fill="rgb(244,160,48)"/><text x="254.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.16%)</title><rect x="251" y="612" width="2" height="15" fill="rgb(244,201,44)"/><text x="254.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="251" y="628" width="2" height="15" fill="rgb(233,137,35)"/><text x="254.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="251" y="644" width="2" height="15" fill="rgb(205,131,39)"/><text x="254.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="251" y="660" width="2" height="15" fill="rgb(223,34,12)"/><text x="254.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="251" y="676" width="2" height="15" fill="rgb(244,148,39)"/><text x="254.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="692" width="2" height="15" fill="rgb(211,148,6)"/><text x="254.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.16%)</title><rect x="251" y="708" width="2" height="15" fill="rgb(237,126,46)"/><text x="254.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="251" y="724" width="2" height="15" fill="rgb(205,58,44)"/><text x="254.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="251" y="740" width="2" height="15" fill="rgb(244,151,7)"/><text x="254.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="251" y="756" width="2" height="15" fill="rgb(228,198,51)"/><text x="254.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="251" y="772" width="2" height="15" fill="rgb(227,83,11)"/><text x="254.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="788" width="2" height="15" fill="rgb(251,141,12)"/><text x="254.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.16%)</title><rect x="251" y="804" width="2" height="15" fill="rgb(222,188,15)"/><text x="254.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="251" y="820" width="2" height="15" fill="rgb(253,23,27)"/><text x="254.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="251" y="836" width="2" height="15" fill="rgb(235,90,34)"/><text x="254.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="251" y="852" width="2" height="15" fill="rgb(210,27,5)"/><text x="254.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="251" y="868" width="2" height="15" fill="rgb(220,198,36)"/><text x="254.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="884" width="2" height="15" fill="rgb(205,51,6)"/><text x="254.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:18) (1 samples, 0.16%)</title><rect x="251" y="900" width="2" height="15" fill="rgb(205,50,37)"/><text x="254.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="251" y="916" width="2" height="15" fill="rgb(228,60,41)"/><text x="254.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="932" width="2" height="15" fill="rgb(232,126,23)"/><text x="254.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="251" y="948" width="2" height="15" fill="rgb(249,96,0)"/><text x="254.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="251" y="964" width="2" height="15" fill="rgb(239,111,21)"/><text x="254.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="251" y="980" width="2" height="15" fill="rgb(240,157,23)"/><text x="254.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="251" y="996" width="2" height="15" fill="rgb(227,76,12)"/><text x="254.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="1012" width="2" height="15" fill="rgb(231,15,13)"/><text x="254.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py:16) (1 samples, 0.16%)</title><rect x="251" y="1028" width="2" height="15" fill="rgb(227,204,9)"/><text x="254.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="251" y="1044" width="2" height="15" fill="rgb(244,71,51)"/><text x="254.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="251" y="1060" width="2" height="15" fill="rgb(252,159,2)"/><text x="254.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="251" y="1076" width="2" height="15" fill="rgb(244,198,2)"/><text x="254.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="251" y="1092" width="2" height="15" fill="rgb(214,57,40)"/><text x="254.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="251" y="1108" width="2" height="15" fill="rgb(240,191,12)"/><text x="254.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py:213) (1 samples, 0.16%)</title><rect x="251" y="1124" width="2" height="15" fill="rgb(206,52,39)"/><text x="254.00" y="1134.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.16%)</title><rect x="253" y="900" width="2" height="15" fill="rgb(236,165,34)"/><text x="256.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="253" y="916" width="2" height="15" fill="rgb(237,55,38)"/><text x="256.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="253" y="932" width="2" height="15" fill="rgb(206,169,14)"/><text x="256.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="253" y="948" width="2" height="15" fill="rgb(220,103,10)"/><text x="256.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="253" y="964" width="2" height="15" fill="rgb(241,81,22)"/><text x="256.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="253" y="980" width="2" height="15" fill="rgb(244,13,25)"/><text x="256.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.16%)</title><rect x="253" y="996" width="2" height="15" fill="rgb(253,21,0)"/><text x="256.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="253" y="1012" width="2" height="15" fill="rgb(244,194,14)"/><text x="256.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="253" y="1028" width="2" height="15" fill="rgb(250,200,11)"/><text x="256.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="253" y="1044" width="2" height="15" fill="rgb(216,106,5)"/><text x="256.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="253" y="1060" width="2" height="15" fill="rgb(229,76,45)"/><text x="256.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="253" y="1076" width="2" height="15" fill="rgb(244,38,26)"/><text x="256.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="253" y="1092" width="2" height="15" fill="rgb(226,1,5)"/><text x="256.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="253" y="1108" width="2" height="15" fill="rgb(251,88,28)"/><text x="256.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.16%)</title><rect x="253" y="1124" width="2" height="15" fill="rgb(206,111,29)"/><text x="256.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="253" y="1140" width="2" height="15" fill="rgb(231,125,12)"/><text x="256.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="253" y="1156" width="2" height="15" fill="rgb(224,203,53)"/><text x="256.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="253" y="1172" width="2" height="15" fill="rgb(235,61,0)"/><text x="256.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="253" y="1188" width="2" height="15" fill="rgb(230,54,28)"/><text x="256.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="253" y="1204" width="2" height="15" fill="rgb(240,209,6)"/><text x="256.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.16%)</title><rect x="253" y="1220" width="2" height="15" fill="rgb(221,204,41)"/><text x="256.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="253" y="1236" width="2" height="15" fill="rgb(210,216,1)"/><text x="256.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="253" y="1252" width="2" height="15" fill="rgb(240,16,50)"/><text x="256.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="253" y="1268" width="2" height="15" fill="rgb(210,66,25)"/><text x="256.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="253" y="1284" width="2" height="15" fill="rgb(205,175,25)"/><text x="256.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="253" y="1300" width="2" height="15" fill="rgb(235,88,47)"/><text x="256.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.16%)</title><rect x="253" y="1316" width="2" height="15" fill="rgb(239,38,44)"/><text x="256.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="253" y="1332" width="2" height="15" fill="rgb(225,131,19)"/><text x="256.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="253" y="1348" width="2" height="15" fill="rgb(230,13,38)"/><text x="256.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="253" y="1364" width="2" height="15" fill="rgb(239,170,43)"/><text x="256.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="253" y="1380" width="2" height="15" fill="rgb(241,166,36)"/><text x="256.00" y="1390.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="253" y="1396" width="2" height="15" fill="rgb(251,53,33)"/><text x="256.00" y="1406.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="253" y="1412" width="2" height="15" fill="rgb(252,16,30)"/><text x="256.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2932) (1 samples, 0.16%)</title><rect x="255" y="1028" width="2" height="15" fill="rgb(228,47,44)"/><text x="258.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.16%)</title><rect x="255" y="1044" width="2" height="15" fill="rgb(250,33,34)"/><text x="258.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.16%)</title><rect x="255" y="1060" width="2" height="15" fill="rgb(251,213,17)"/><text x="258.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.16%)</title><rect x="255" y="1076" width="2" height="15" fill="rgb(232,134,22)"/><text x="258.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:198) (1 samples, 0.16%)</title><rect x="255" y="1092" width="2" height="15" fill="rgb(235,142,26)"/><text x="258.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (4 samples, 0.65%)</title><rect x="251" y="148" width="8" height="15" fill="rgb(228,157,35)"/><text x="254.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="251" y="164" width="8" height="15" fill="rgb(208,143,34)"/><text x="254.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.65%)</title><rect x="251" y="180" width="8" height="15" fill="rgb(231,200,9)"/><text x="254.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="251" y="196" width="8" height="15" fill="rgb(214,155,3)"/><text x="254.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="251" y="212" width="8" height="15" fill="rgb(227,120,20)"/><text x="254.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="251" y="228" width="8" height="15" fill="rgb(220,111,30)"/><text x="254.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="251" y="244" width="8" height="15" fill="rgb(216,190,38)"/><text x="254.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="251" y="260" width="8" height="15" fill="rgb(223,119,33)"/><text x="254.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="251" y="276" width="8" height="15" fill="rgb(219,122,29)"/><text x="254.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 0.65%)</title><rect x="251" y="292" width="8" height="15" fill="rgb(243,103,34)"/><text x="254.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="251" y="308" width="8" height="15" fill="rgb(233,63,48)"/><text x="254.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="251" y="324" width="8" height="15" fill="rgb(214,36,39)"/><text x="254.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="251" y="340" width="8" height="15" fill="rgb(205,78,43)"/><text x="254.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="251" y="356" width="8" height="15" fill="rgb(206,125,20)"/><text x="254.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="251" y="372" width="8" height="15" fill="rgb(243,38,28)"/><text x="254.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 0.65%)</title><rect x="251" y="388" width="8" height="15" fill="rgb(238,56,12)"/><text x="254.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="251" y="404" width="8" height="15" fill="rgb(206,220,47)"/><text x="254.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="251" y="420" width="8" height="15" fill="rgb(212,4,15)"/><text x="254.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="251" y="436" width="8" height="15" fill="rgb(217,226,35)"/><text x="254.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="251" y="452" width="8" height="15" fill="rgb(223,13,17)"/><text x="254.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="251" y="468" width="8" height="15" fill="rgb(205,78,39)"/><text x="254.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.48%)</title><rect x="253" y="484" width="6" height="15" fill="rgb(205,189,45)"/><text x="256.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="253" y="500" width="6" height="15" fill="rgb(217,165,11)"/><text x="256.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="253" y="516" width="6" height="15" fill="rgb(243,114,40)"/><text x="256.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="253" y="532" width="6" height="15" fill="rgb(245,229,30)"/><text x="256.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="253" y="548" width="6" height="15" fill="rgb(227,211,46)"/><text x="256.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="253" y="564" width="6" height="15" fill="rgb(218,150,16)"/><text x="256.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.48%)</title><rect x="253" y="580" width="6" height="15" fill="rgb(205,90,48)"/><text x="256.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="253" y="596" width="6" height="15" fill="rgb(228,229,48)"/><text x="256.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="253" y="612" width="6" height="15" fill="rgb(214,6,48)"/><text x="256.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="253" y="628" width="6" height="15" fill="rgb(238,120,45)"/><text x="256.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="253" y="644" width="6" height="15" fill="rgb(215,54,35)"/><text x="256.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="253" y="660" width="6" height="15" fill="rgb(221,31,1)"/><text x="256.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.48%)</title><rect x="253" y="676" width="6" height="15" fill="rgb(228,41,45)"/><text x="256.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="253" y="692" width="6" height="15" fill="rgb(222,155,53)"/><text x="256.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="253" y="708" width="6" height="15" fill="rgb(222,100,1)"/><text x="256.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="253" y="724" width="6" height="15" fill="rgb(223,134,49)"/><text x="256.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="253" y="740" width="6" height="15" fill="rgb(237,159,36)"/><text x="256.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="253" y="756" width="6" height="15" fill="rgb(234,127,8)"/><text x="256.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.48%)</title><rect x="253" y="772" width="6" height="15" fill="rgb(242,150,31)"/><text x="256.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.48%)</title><rect x="253" y="788" width="6" height="15" fill="rgb(235,24,6)"/><text x="256.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="253" y="804" width="6" height="15" fill="rgb(223,224,26)"/><text x="256.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="253" y="820" width="6" height="15" fill="rgb(212,73,20)"/><text x="256.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="253" y="836" width="6" height="15" fill="rgb(218,117,5)"/><text x="256.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="253" y="852" width="6" height="15" fill="rgb(241,56,44)"/><text x="256.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="253" y="868" width="6" height="15" fill="rgb(254,131,33)"/><text x="256.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="253" y="884" width="6" height="15" fill="rgb(237,106,38)"/><text x="256.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.32%)</title><rect x="255" y="900" width="4" height="15" fill="rgb(205,205,53)"/><text x="258.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="255" y="916" width="4" height="15" fill="rgb(209,61,3)"/><text x="258.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="255" y="932" width="4" height="15" fill="rgb(243,5,22)"/><text x="258.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="255" y="948" width="4" height="15" fill="rgb(241,96,48)"/><text x="258.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="255" y="964" width="4" height="15" fill="rgb(242,78,46)"/><text x="258.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="255" y="980" width="4" height="15" fill="rgb(212,183,27)"/><text x="258.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="255" y="996" width="4" height="15" fill="rgb(252,167,11)"/><text x="258.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="255" y="1012" width="4" height="15" fill="rgb(235,109,29)"/><text x="258.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5660) (1 samples, 0.16%)</title><rect x="257" y="1028" width="2" height="15" fill="rgb(211,170,26)"/><text x="260.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.16%)</title><rect x="257" y="1044" width="2" height="15" fill="rgb(211,202,20)"/><text x="260.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.16%)</title><rect x="257" y="1060" width="2" height="15" fill="rgb(233,52,19)"/><text x="260.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.16%)</title><rect x="259" y="628" width="2" height="15" fill="rgb(214,139,32)"/><text x="262.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="259" y="644" width="2" height="15" fill="rgb(227,134,24)"/><text x="262.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="259" y="660" width="2" height="15" fill="rgb(226,130,5)"/><text x="262.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="259" y="676" width="2" height="15" fill="rgb(215,78,49)"/><text x="262.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="259" y="692" width="2" height="15" fill="rgb(236,162,37)"/><text x="262.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="259" y="708" width="2" height="15" fill="rgb(237,195,42)"/><text x="262.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:17) (1 samples, 0.16%)</title><rect x="259" y="724" width="2" height="15" fill="rgb(235,151,50)"/><text x="262.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="259" y="740" width="2" height="15" fill="rgb(227,217,16)"/><text x="262.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="259" y="756" width="2" height="15" fill="rgb(253,92,7)"/><text x="262.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="259" y="772" width="2" height="15" fill="rgb(238,33,8)"/><text x="262.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="259" y="788" width="2" height="15" fill="rgb(227,130,35)"/><text x="262.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="259" y="804" width="2" height="15" fill="rgb(230,87,24)"/><text x="262.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py:4593) (1 samples, 0.16%)</title><rect x="259" y="820" width="2" height="15" fill="rgb(217,63,38)"/><text x="262.00" y="830.50"></text></g><g><title>AppendableMultiFrameTable (pandas/io/pytables.py:4600) (1 samples, 0.16%)</title><rect x="259" y="836" width="2" height="15" fill="rgb(254,214,14)"/><text x="262.00" y="846.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.16%)</title><rect x="259" y="852" width="2" height="15" fill="rgb(212,188,45)"/><text x="262.00" y="862.50"></text></g><g><title>_compile (re.py:273) (1 samples, 0.16%)</title><rect x="259" y="868" width="2" height="15" fill="rgb(251,1,51)"/><text x="262.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.32%)</title><rect x="259" y="436" width="4" height="15" fill="rgb(242,102,11)"/><text x="262.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="259" y="452" width="4" height="15" fill="rgb(206,97,17)"/><text x="262.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="259" y="468" width="4" height="15" fill="rgb(230,106,12)"/><text x="262.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="259" y="484" width="4" height="15" fill="rgb(251,212,16)"/><text x="262.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="259" y="500" width="4" height="15" fill="rgb(212,162,43)"/><text x="262.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="259" y="516" width="4" height="15" fill="rgb(209,50,34)"/><text x="262.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.32%)</title><rect x="259" y="532" width="4" height="15" fill="rgb(254,92,48)"/><text x="262.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="259" y="548" width="4" height="15" fill="rgb(249,58,10)"/><text x="262.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="259" y="564" width="4" height="15" fill="rgb(234,38,54)"/><text x="262.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="259" y="580" width="4" height="15" fill="rgb(239,205,54)"/><text x="262.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="259" y="596" width="4" height="15" fill="rgb(250,87,10)"/><text x="262.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="259" y="612" width="4" height="15" fill="rgb(251,45,39)"/><text x="262.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.16%)</title><rect x="261" y="628" width="2" height="15" fill="rgb(239,29,18)"/><text x="264.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="644" width="2" height="15" fill="rgb(245,119,47)"/><text x="264.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="660" width="2" height="15" fill="rgb(225,75,1)"/><text x="264.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="676" width="2" height="15" fill="rgb(229,126,9)"/><text x="264.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="692" width="2" height="15" fill="rgb(209,116,47)"/><text x="264.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="708" width="2" height="15" fill="rgb(249,227,49)"/><text x="264.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.16%)</title><rect x="261" y="724" width="2" height="15" fill="rgb(205,73,27)"/><text x="264.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="740" width="2" height="15" fill="rgb(214,61,24)"/><text x="264.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="756" width="2" height="15" fill="rgb(210,121,50)"/><text x="264.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="772" width="2" height="15" fill="rgb(232,182,24)"/><text x="264.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="788" width="2" height="15" fill="rgb(206,170,18)"/><text x="264.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="804" width="2" height="15" fill="rgb(211,20,6)"/><text x="264.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.16%)</title><rect x="261" y="820" width="2" height="15" fill="rgb(232,214,38)"/><text x="264.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="836" width="2" height="15" fill="rgb(207,93,52)"/><text x="264.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="852" width="2" height="15" fill="rgb(214,218,6)"/><text x="264.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="868" width="2" height="15" fill="rgb(228,138,46)"/><text x="264.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="884" width="2" height="15" fill="rgb(210,13,45)"/><text x="264.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="900" width="2" height="15" fill="rgb(207,128,18)"/><text x="264.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.16%)</title><rect x="261" y="916" width="2" height="15" fill="rgb(228,206,17)"/><text x="264.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="932" width="2" height="15" fill="rgb(251,118,27)"/><text x="264.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="948" width="2" height="15" fill="rgb(221,51,23)"/><text x="264.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="964" width="2" height="15" fill="rgb(213,41,11)"/><text x="264.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="980" width="2" height="15" fill="rgb(254,219,54)"/><text x="264.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="996" width="2" height="15" fill="rgb(246,136,25)"/><text x="264.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.16%)</title><rect x="261" y="1012" width="2" height="15" fill="rgb(233,115,40)"/><text x="264.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="1028" width="2" height="15" fill="rgb(220,0,31)"/><text x="264.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="1044" width="2" height="15" fill="rgb(247,70,31)"/><text x="264.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="1060" width="2" height="15" fill="rgb(243,216,7)"/><text x="264.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="1076" width="2" height="15" fill="rgb(253,193,3)"/><text x="264.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="1092" width="2" height="15" fill="rgb(244,112,23)"/><text x="264.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.16%)</title><rect x="261" y="1108" width="2" height="15" fill="rgb(253,102,23)"/><text x="264.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="1124" width="2" height="15" fill="rgb(243,145,19)"/><text x="264.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="1140" width="2" height="15" fill="rgb(232,67,25)"/><text x="264.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="1156" width="2" height="15" fill="rgb(211,159,1)"/><text x="264.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="1172" width="2" height="15" fill="rgb(242,165,35)"/><text x="264.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="1188" width="2" height="15" fill="rgb(227,182,15)"/><text x="264.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.16%)</title><rect x="261" y="1204" width="2" height="15" fill="rgb(235,31,13)"/><text x="264.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="1220" width="2" height="15" fill="rgb(237,108,3)"/><text x="264.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="1236" width="2" height="15" fill="rgb(224,148,38)"/><text x="264.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="1252" width="2" height="15" fill="rgb(219,106,9)"/><text x="264.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="1268" width="2" height="15" fill="rgb(251,47,27)"/><text x="264.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="1284" width="2" height="15" fill="rgb(211,21,4)"/><text x="264.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:25) (1 samples, 0.16%)</title><rect x="261" y="1300" width="2" height="15" fill="rgb(242,54,52)"/><text x="264.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="261" y="1316" width="2" height="15" fill="rgb(218,92,49)"/><text x="264.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="261" y="1332" width="2" height="15" fill="rgb(208,110,24)"/><text x="264.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="261" y="1348" width="2" height="15" fill="rgb(231,93,42)"/><text x="264.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="261" y="1364" width="2" height="15" fill="rgb(242,3,6)"/><text x="264.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="261" y="1380" width="2" height="15" fill="rgb(254,171,12)"/><text x="264.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/range.py:36) (1 samples, 0.16%)</title><rect x="261" y="1396" width="2" height="15" fill="rgb(212,136,10)"/><text x="264.00" y="1406.50"></text></g><g><title>RangeIndex (pandas/core/indexes/range.py:423) (1 samples, 0.16%)</title><rect x="261" y="1412" width="2" height="15" fill="rgb(231,143,6)"/><text x="264.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.16%)</title><rect x="261" y="1428" width="2" height="15" fill="rgb(229,138,7)"/><text x="264.00" y="1438.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.16%)</title><rect x="261" y="1444" width="2" height="15" fill="rgb(228,218,7)"/><text x="264.00" y="1454.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.16%)</title><rect x="261" y="1460" width="2" height="15" fill="rgb(219,59,0)"/><text x="264.00" y="1470.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.16%)</title><rect x="261" y="1476" width="2" height="15" fill="rgb(244,27,32)"/><text x="264.00" y="1486.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="261" y="1492" width="2" height="15" fill="rgb(240,43,41)"/><text x="264.00" y="1502.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.16%)</title><rect x="261" y="1508" width="2" height="15" fill="rgb(230,54,3)"/><text x="264.00" y="1518.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.16%)</title><rect x="263" y="1108" width="2" height="15" fill="rgb(221,91,31)"/><text x="266.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="263" y="1124" width="2" height="15" fill="rgb(216,225,0)"/><text x="266.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="263" y="1140" width="2" height="15" fill="rgb(242,18,3)"/><text x="266.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="263" y="1156" width="2" height="15" fill="rgb(225,226,9)"/><text x="266.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="263" y="1172" width="2" height="15" fill="rgb(243,38,12)"/><text x="266.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="1188" width="2" height="15" fill="rgb(223,199,34)"/><text x="266.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.16%)</title><rect x="263" y="1204" width="2" height="15" fill="rgb(236,211,28)"/><text x="266.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="263" y="1220" width="2" height="15" fill="rgb(214,125,52)"/><text x="266.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="263" y="1236" width="2" height="15" fill="rgb(205,59,4)"/><text x="266.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="263" y="1252" width="2" height="15" fill="rgb(215,147,0)"/><text x="266.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="263" y="1268" width="2" height="15" fill="rgb(233,222,7)"/><text x="266.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="1284" width="2" height="15" fill="rgb(254,155,0)"/><text x="266.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.16%)</title><rect x="263" y="1300" width="2" height="15" fill="rgb(218,18,32)"/><text x="266.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.16%)</title><rect x="263" y="1316" width="2" height="15" fill="rgb(238,179,38)"/><text x="266.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.16%)</title><rect x="263" y="1332" width="2" height="15" fill="rgb(222,195,32)"/><text x="266.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.16%)</title><rect x="263" y="1348" width="2" height="15" fill="rgb(206,137,34)"/><text x="266.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.16%)</title><rect x="263" y="1364" width="2" height="15" fill="rgb(245,163,14)"/><text x="266.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.16%)</title><rect x="263" y="1380" width="2" height="15" fill="rgb(215,95,26)"/><text x="266.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.16%)</title><rect x="263" y="1396" width="2" height="15" fill="rgb(233,88,23)"/><text x="266.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.16%)</title><rect x="263" y="1412" width="2" height="15" fill="rgb(249,177,35)"/><text x="266.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:4) (19 samples, 3.06%)</title><rect x="230" y="52" width="36" height="15" fill="rgb(240,50,6)"/><text x="233.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (19 samples, 3.06%)</title><rect x="230" y="68" width="36" height="15" fill="rgb(230,55,9)"/><text x="233.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (19 samples, 3.06%)</title><rect x="230" y="84" width="36" height="15" fill="rgb(223,66,25)"/><text x="233.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (19 samples, 3.06%)</title><rect x="230" y="100" width="36" height="15" fill="rgb(243,62,28)"/><text x="233.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (19 samples, 3.06%)</title><rect x="230" y="116" width="36" height="15" fill="rgb(231,211,9)"/><text x="233.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 3.06%)</title><rect x="230" y="132" width="36" height="15" fill="rgb(208,163,37)"/><text x="233.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (4 samples, 0.65%)</title><rect x="259" y="148" width="7" height="15" fill="rgb(250,218,31)"/><text x="262.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="259" y="164" width="7" height="15" fill="rgb(238,88,43)"/><text x="262.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="259" y="180" width="7" height="15" fill="rgb(210,141,21)"/><text x="262.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="259" y="196" width="7" height="15" fill="rgb(249,96,51)"/><text x="262.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="259" y="212" width="7" height="15" fill="rgb(238,25,32)"/><text x="262.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="259" y="228" width="7" height="15" fill="rgb(224,21,18)"/><text x="262.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.65%)</title><rect x="259" y="244" width="7" height="15" fill="rgb(253,115,31)"/><text x="262.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="259" y="260" width="7" height="15" fill="rgb(222,191,11)"/><text x="262.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="259" y="276" width="7" height="15" fill="rgb(220,16,36)"/><text x="262.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="259" y="292" width="7" height="15" fill="rgb(220,32,18)"/><text x="262.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="259" y="308" width="7" height="15" fill="rgb(232,152,35)"/><text x="262.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="259" y="324" width="7" height="15" fill="rgb(212,53,17)"/><text x="262.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.65%)</title><rect x="259" y="340" width="7" height="15" fill="rgb(235,0,2)"/><text x="262.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="259" y="356" width="7" height="15" fill="rgb(227,214,32)"/><text x="262.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="259" y="372" width="7" height="15" fill="rgb(217,53,35)"/><text x="262.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="259" y="388" width="7" height="15" fill="rgb(235,77,43)"/><text x="262.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="259" y="404" width="7" height="15" fill="rgb(227,116,53)"/><text x="262.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="259" y="420" width="7" height="15" fill="rgb(208,32,51)"/><text x="262.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.32%)</title><rect x="263" y="436" width="3" height="15" fill="rgb(218,84,35)"/><text x="266.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="452" width="3" height="15" fill="rgb(226,126,20)"/><text x="266.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="263" y="468" width="3" height="15" fill="rgb(207,78,29)"/><text x="266.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="484" width="3" height="15" fill="rgb(243,43,39)"/><text x="266.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="500" width="3" height="15" fill="rgb(207,126,34)"/><text x="266.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="263" y="516" width="3" height="15" fill="rgb(225,120,41)"/><text x="266.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="263" y="532" width="3" height="15" fill="rgb(238,191,21)"/><text x="266.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="263" y="548" width="3" height="15" fill="rgb(223,94,12)"/><text x="266.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="564" width="3" height="15" fill="rgb(254,44,25)"/><text x="266.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.32%)</title><rect x="263" y="580" width="3" height="15" fill="rgb(236,143,18)"/><text x="266.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="596" width="3" height="15" fill="rgb(250,116,3)"/><text x="266.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="263" y="612" width="3" height="15" fill="rgb(223,137,29)"/><text x="266.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="263" y="628" width="3" height="15" fill="rgb(231,121,3)"/><text x="266.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="263" y="644" width="3" height="15" fill="rgb(207,44,54)"/><text x="266.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="660" width="3" height="15" fill="rgb(215,153,54)"/><text x="266.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.32%)</title><rect x="263" y="676" width="3" height="15" fill="rgb(235,205,47)"/><text x="266.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="692" width="3" height="15" fill="rgb(214,77,25)"/><text x="266.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="263" y="708" width="3" height="15" fill="rgb(206,41,40)"/><text x="266.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="263" y="724" width="3" height="15" fill="rgb(223,82,9)"/><text x="266.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="263" y="740" width="3" height="15" fill="rgb(226,90,15)"/><text x="266.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="756" width="3" height="15" fill="rgb(234,109,10)"/><text x="266.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.32%)</title><rect x="263" y="772" width="3" height="15" fill="rgb(225,29,32)"/><text x="266.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="788" width="3" height="15" fill="rgb(251,198,4)"/><text x="266.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="263" y="804" width="3" height="15" fill="rgb(249,146,23)"/><text x="266.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="263" y="820" width="3" height="15" fill="rgb(229,15,22)"/><text x="266.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="263" y="836" width="3" height="15" fill="rgb(224,206,37)"/><text x="266.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="852" width="3" height="15" fill="rgb(239,72,35)"/><text x="266.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.32%)</title><rect x="263" y="868" width="3" height="15" fill="rgb(215,74,50)"/><text x="266.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="884" width="3" height="15" fill="rgb(224,18,51)"/><text x="266.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="263" y="900" width="3" height="15" fill="rgb(238,132,31)"/><text x="266.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="916" width="3" height="15" fill="rgb(216,24,10)"/><text x="266.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="932" width="3" height="15" fill="rgb(216,118,53)"/><text x="266.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="263" y="948" width="3" height="15" fill="rgb(246,142,41)"/><text x="266.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="263" y="964" width="3" height="15" fill="rgb(219,49,10)"/><text x="266.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="263" y="980" width="3" height="15" fill="rgb(242,49,13)"/><text x="266.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="996" width="3" height="15" fill="rgb(216,33,13)"/><text x="266.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.32%)</title><rect x="263" y="1012" width="3" height="15" fill="rgb(206,132,11)"/><text x="266.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="263" y="1028" width="3" height="15" fill="rgb(217,208,51)"/><text x="266.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="263" y="1044" width="3" height="15" fill="rgb(240,145,35)"/><text x="266.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="263" y="1060" width="3" height="15" fill="rgb(216,202,36)"/><text x="266.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="263" y="1076" width="3" height="15" fill="rgb(244,117,33)"/><text x="266.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="263" y="1092" width="3" height="15" fill="rgb(246,162,3)"/><text x="266.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.16%)</title><rect x="265" y="1108" width="1" height="15" fill="rgb(241,32,21)"/><text x="268.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1124" width="1" height="15" fill="rgb(210,37,30)"/><text x="268.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1140" width="1" height="15" fill="rgb(207,190,24)"/><text x="268.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1156" width="1" height="15" fill="rgb(227,186,10)"/><text x="268.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1172" width="1" height="15" fill="rgb(211,212,29)"/><text x="268.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1188" width="1" height="15" fill="rgb(207,197,15)"/><text x="268.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.16%)</title><rect x="265" y="1204" width="1" height="15" fill="rgb(205,18,41)"/><text x="268.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1220" width="1" height="15" fill="rgb(209,213,5)"/><text x="268.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1236" width="1" height="15" fill="rgb(212,13,11)"/><text x="268.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1252" width="1" height="15" fill="rgb(207,35,12)"/><text x="268.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1268" width="1" height="15" fill="rgb(231,67,53)"/><text x="268.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1284" width="1" height="15" fill="rgb(251,56,6)"/><text x="268.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.16%)</title><rect x="265" y="1300" width="1" height="15" fill="rgb(209,84,48)"/><text x="268.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1316" width="1" height="15" fill="rgb(225,70,47)"/><text x="268.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1332" width="1" height="15" fill="rgb(242,154,38)"/><text x="268.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1348" width="1" height="15" fill="rgb(229,72,13)"/><text x="268.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1364" width="1" height="15" fill="rgb(254,114,49)"/><text x="268.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1380" width="1" height="15" fill="rgb(209,55,4)"/><text x="268.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.16%)</title><rect x="265" y="1396" width="1" height="15" fill="rgb(246,179,25)"/><text x="268.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1412" width="1" height="15" fill="rgb(222,39,2)"/><text x="268.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1428" width="1" height="15" fill="rgb(221,32,26)"/><text x="268.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1444" width="1" height="15" fill="rgb(245,146,12)"/><text x="268.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1460" width="1" height="15" fill="rgb(235,183,29)"/><text x="268.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1476" width="1" height="15" fill="rgb(210,14,16)"/><text x="268.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.16%)</title><rect x="265" y="1492" width="1" height="15" fill="rgb(211,53,40)"/><text x="268.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="265" y="1508" width="1" height="15" fill="rgb(227,208,10)"/><text x="268.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1524" width="1" height="15" fill="rgb(221,154,40)"/><text x="268.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1540" width="1" height="15" fill="rgb(234,189,27)"/><text x="268.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1556" width="1" height="15" fill="rgb(249,60,41)"/><text x="268.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1572" width="1" height="15" fill="rgb(224,192,26)"/><text x="268.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1588" width="1" height="15" fill="rgb(222,87,7)"/><text x="268.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1604" width="1" height="15" fill="rgb(226,19,29)"/><text x="268.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.16%)</title><rect x="265" y="1620" width="1" height="15" fill="rgb(243,128,31)"/><text x="268.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1636" width="1" height="15" fill="rgb(233,28,30)"/><text x="268.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1652" width="1" height="15" fill="rgb(215,145,3)"/><text x="268.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1668" width="1" height="15" fill="rgb(237,46,35)"/><text x="268.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1684" width="1" height="15" fill="rgb(209,173,22)"/><text x="268.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1700" width="1" height="15" fill="rgb(252,151,3)"/><text x="268.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.16%)</title><rect x="265" y="1716" width="1" height="15" fill="rgb(250,189,46)"/><text x="268.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1732" width="1" height="15" fill="rgb(239,73,0)"/><text x="268.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1748" width="1" height="15" fill="rgb(225,151,36)"/><text x="268.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1764" width="1" height="15" fill="rgb(244,187,31)"/><text x="268.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1780" width="1" height="15" fill="rgb(234,2,13)"/><text x="268.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1796" width="1" height="15" fill="rgb(249,7,37)"/><text x="268.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.16%)</title><rect x="265" y="1812" width="1" height="15" fill="rgb(231,218,0)"/><text x="268.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1828" width="1" height="15" fill="rgb(206,204,49)"/><text x="268.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1844" width="1" height="15" fill="rgb(215,112,18)"/><text x="268.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1860" width="1" height="15" fill="rgb(244,180,47)"/><text x="268.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="1876" width="1" height="15" fill="rgb(251,166,45)"/><text x="268.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1892" width="1" height="15" fill="rgb(226,63,46)"/><text x="268.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py:26) (1 samples, 0.16%)</title><rect x="265" y="1908" width="1" height="15" fill="rgb(245,53,18)"/><text x="268.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="265" y="1924" width="1" height="15" fill="rgb(241,42,13)"/><text x="268.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="1940" width="1" height="15" fill="rgb(208,190,39)"/><text x="268.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="1956" width="1" height="15" fill="rgb(250,222,53)"/><text x="268.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="1972" width="1" height="15" fill="rgb(232,180,51)"/><text x="268.00" y="1982.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="1988" width="1" height="15" fill="rgb(253,98,46)"/><text x="268.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="265" y="2004" width="1" height="15" fill="rgb(221,198,48)"/><text x="268.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="2020" width="1" height="15" fill="rgb(246,221,52)"/><text x="268.00" y="2030.50"></text></g><g><title>0x7f8a66657d1a (?) (1 samples, 0.16%)</title><rect x="265" y="2036" width="1" height="15" fill="rgb(230,76,43)"/><text x="268.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="2052" width="1" height="15" fill="rgb(248,168,26)"/><text x="268.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="2068" width="1" height="15" fill="rgb(248,115,19)"/><text x="268.00" y="2078.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="2084" width="1" height="15" fill="rgb(221,135,18)"/><text x="268.00" y="2094.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="265" y="2100" width="1" height="15" fill="rgb(235,75,4)"/><text x="268.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="2116" width="1" height="15" fill="rgb(245,187,29)"/><text x="268.00" y="2126.50"></text></g><g><title>0x7f8a6641a195 (?) (1 samples, 0.16%)</title><rect x="265" y="2132" width="1" height="15" fill="rgb(241,227,9)"/><text x="268.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="2148" width="1" height="15" fill="rgb(229,35,52)"/><text x="268.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="265" y="2164" width="1" height="15" fill="rgb(234,14,20)"/><text x="268.00" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="2180" width="1" height="15" fill="rgb(253,34,11)"/><text x="268.00" y="2190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="2196" width="1" height="15" fill="rgb(251,18,33)"/><text x="268.00" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="2212" width="1" height="15" fill="rgb(246,61,5)"/><text x="268.00" y="2222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="2228" width="1" height="15" fill="rgb(205,170,2)"/><text x="268.00" y="2238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="2244" width="1" height="15" fill="rgb(251,5,16)"/><text x="268.00" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="2260" width="1" height="15" fill="rgb(227,137,42)"/><text x="268.00" y="2270.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.16%)</title><rect x="265" y="2276" width="1" height="15" fill="rgb(227,213,22)"/><text x="268.00" y="2286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="2292" width="1" height="15" fill="rgb(250,96,52)"/><text x="268.00" y="2302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="2308" width="1" height="15" fill="rgb(212,22,16)"/><text x="268.00" y="2318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="2324" width="1" height="15" fill="rgb(244,26,49)"/><text x="268.00" y="2334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="2340" width="1" height="15" fill="rgb(213,45,31)"/><text x="268.00" y="2350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="2356" width="1" height="15" fill="rgb(212,124,22)"/><text x="268.00" y="2366.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.16%)</title><rect x="265" y="2372" width="1" height="15" fill="rgb(207,105,14)"/><text x="268.00" y="2382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="2388" width="1" height="15" fill="rgb(235,59,14)"/><text x="268.00" y="2398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="2404" width="1" height="15" fill="rgb(252,35,25)"/><text x="268.00" y="2414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="2420" width="1" height="15" fill="rgb(215,25,7)"/><text x="268.00" y="2430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="265" y="2436" width="1" height="15" fill="rgb(240,138,6)"/><text x="268.00" y="2446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="2452" width="1" height="15" fill="rgb(233,185,34)"/><text x="268.00" y="2462.50"></text></g><g><title>0x7f8a661e2373 (?) (1 samples, 0.16%)</title><rect x="265" y="2468" width="1" height="15" fill="rgb(227,56,44)"/><text x="268.00" y="2478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="2484" width="1" height="15" fill="rgb(233,170,20)"/><text x="268.00" y="2494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="2500" width="1" height="15" fill="rgb(223,24,43)"/><text x="268.00" y="2510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="2516" width="1" height="15" fill="rgb(205,27,41)"/><text x="268.00" y="2526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="265" y="2532" width="1" height="15" fill="rgb(230,42,5)"/><text x="268.00" y="2542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="2548" width="1" height="15" fill="rgb(248,211,16)"/><text x="268.00" y="2558.50"></text></g><g><title>0x7f8a65fa5eea (?) (1 samples, 0.16%)</title><rect x="265" y="2564" width="1" height="15" fill="rgb(252,86,33)"/><text x="268.00" y="2574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="2580" width="1" height="15" fill="rgb(216,155,20)"/><text x="268.00" y="2590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="2596" width="1" height="15" fill="rgb(227,105,47)"/><text x="268.00" y="2606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="2612" width="1" height="15" fill="rgb(220,114,44)"/><text x="268.00" y="2622.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:321) (1 samples, 0.16%)</title><rect x="265" y="2628" width="1" height="15" fill="rgb(228,32,23)"/><text x="268.00" y="2638.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:18) (1 samples, 0.16%)</title><rect x="266" y="100" width="2" height="15" fill="rgb(235,92,48)"/><text x="269.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.16%)</title><rect x="266" y="116" width="2" height="15" fill="rgb(235,15,34)"/><text x="269.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.16%)</title><rect x="266" y="132" width="2" height="15" fill="rgb(217,96,34)"/><text x="269.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.16%)</title><rect x="266" y="148" width="2" height="15" fill="rgb(225,23,1)"/><text x="269.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.16%)</title><rect x="266" y="164" width="2" height="15" fill="rgb(242,52,17)"/><text x="269.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.16%)</title><rect x="266" y="180" width="2" height="15" fill="rgb(229,113,25)"/><text x="269.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.16%)</title><rect x="266" y="196" width="2" height="15" fill="rgb(242,77,29)"/><text x="269.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.16%)</title><rect x="266" y="212" width="2" height="15" fill="rgb(207,200,22)"/><text x="269.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (1 samples, 0.16%)</title><rect x="266" y="228" width="2" height="15" fill="rgb(224,29,12)"/><text x="269.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="266" y="244" width="2" height="15" fill="rgb(249,29,29)"/><text x="269.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="266" y="260" width="2" height="15" fill="rgb(240,47,16)"/><text x="269.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.16%)</title><rect x="266" y="276" width="2" height="15" fill="rgb(234,62,32)"/><text x="269.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.16%)</title><rect x="266" y="292" width="2" height="15" fill="rgb(246,158,41)"/><text x="269.00" y="302.50"></text></g><g><title>0x7f8a8353933d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="266" y="308" width="2" height="15" fill="rgb(211,224,37)"/><text x="269.00" y="318.50"></text></g><g><title>0x7f8a8355b214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="266" y="324" width="2" height="15" fill="rgb(219,185,7)"/><text x="269.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.16%)</title><rect x="266" y="340" width="2" height="15" fill="rgb(217,127,14)"/><text x="269.00" y="350.50"></text></g><g><title>0x7f8a983d0e37 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="266" y="356" width="2" height="15" fill="rgb(222,200,51)"/><text x="269.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.16%)</title><rect x="270" y="180" width="2" height="15" fill="rgb(254,171,26)"/><text x="273.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.48%)</title><rect x="272" y="180" width="6" height="15" fill="rgb(209,110,53)"/><text x="275.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.16%)</title><rect x="278" y="196" width="2" height="15" fill="rgb(221,100,37)"/><text x="281.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.16%)</title><rect x="278" y="212" width="2" height="15" fill="rgb(233,18,40)"/><text x="281.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.16%)</title><rect x="278" y="228" width="2" height="15" fill="rgb(226,83,31)"/><text x="281.00" y="238.50"></text></g><g><title>array_astype (methods.c:834) (1 samples, 0.16%)</title><rect x="278" y="244" width="2" height="15" fill="rgb(215,32,18)"/><text x="281.00" y="254.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:160) (1 samples, 0.16%)</title><rect x="278" y="260" width="2" height="15" fill="rgb(251,89,33)"/><text x="281.00" y="270.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.16%)</title><rect x="282" y="260" width="2" height="15" fill="rgb(238,212,44)"/><text x="285.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.16%)</title><rect x="282" y="276" width="2" height="15" fill="rgb(227,78,30)"/><text x="285.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.16%)</title><rect x="282" y="292" width="2" height="15" fill="rgb(214,25,35)"/><text x="285.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c:486) (1 samples, 0.16%)</title><rect x="282" y="308" width="2" height="15" fill="rgb(206,71,43)"/><text x="285.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.16%)</title><rect x="284" y="308" width="1" height="15" fill="rgb(211,175,47)"/><text x="287.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.16%)</title><rect x="284" y="324" width="1" height="15" fill="rgb(243,90,46)"/><text x="287.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.16%)</title><rect x="284" y="340" width="1" height="15" fill="rgb(221,90,32)"/><text x="287.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.16%)</title><rect x="284" y="356" width="1" height="15" fill="rgb(254,109,26)"/><text x="287.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.16%)</title><rect x="284" y="372" width="1" height="15" fill="rgb(220,126,13)"/><text x="287.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.16%)</title><rect x="284" y="388" width="1" height="15" fill="rgb(244,204,34)"/><text x="287.00" y="398.50"></text></g><g><title>0x7f8a98267e7a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="284" y="404" width="1" height="15" fill="rgb(213,131,22)"/><text x="287.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.16%)</title><rect x="285" y="340" width="2" height="15" fill="rgb(252,74,11)"/><text x="288.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.16%)</title><rect x="285" y="356" width="2" height="15" fill="rgb(225,212,53)"/><text x="288.00" y="366.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.16%)</title><rect x="285" y="372" width="2" height="15" fill="rgb(224,89,40)"/><text x="288.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.16%)</title><rect x="287" y="340" width="2" height="15" fill="rgb(234,172,7)"/><text x="290.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.16%)</title><rect x="287" y="356" width="2" height="15" fill="rgb(215,170,9)"/><text x="290.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.16%)</title><rect x="287" y="372" width="2" height="15" fill="rgb(252,142,15)"/><text x="290.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.16%)</title><rect x="289" y="356" width="2" height="15" fill="rgb(223,200,4)"/><text x="292.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.16%)</title><rect x="289" y="372" width="2" height="15" fill="rgb(237,190,50)"/><text x="292.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.16%)</title><rect x="289" y="388" width="2" height="15" fill="rgb(249,172,47)"/><text x="292.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.16%)</title><rect x="291" y="356" width="2" height="15" fill="rgb(217,131,32)"/><text x="294.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.16%)</title><rect x="291" y="372" width="2" height="15" fill="rgb(209,198,42)"/><text x="294.00" y="382.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.16%)</title><rect x="291" y="388" width="2" height="15" fill="rgb(249,153,41)"/><text x="294.00" y="398.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.16%)</title><rect x="291" y="404" width="2" height="15" fill="rgb(218,187,38)"/><text x="294.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.16%)</title><rect x="293" y="372" width="2" height="15" fill="rgb(230,145,36)"/><text x="296.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.16%)</title><rect x="295" y="372" width="2" height="15" fill="rgb(217,165,53)"/><text x="298.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.48%)</title><rect x="297" y="388" width="6" height="15" fill="rgb(209,70,11)"/><text x="300.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.16%)</title><rect x="301" y="404" width="2" height="15" fill="rgb(232,154,42)"/><text x="304.00" y="414.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 1.77%)</title><rect x="284" y="260" width="21" height="15" fill="rgb(224,217,27)"/><text x="287.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 1.77%)</title><rect x="284" y="276" width="21" height="15" fill="rgb(211,70,14)"/><text x="287.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 1.77%)</title><rect x="284" y="292" width="21" height="15" fill="rgb(235,143,15)"/><text x="287.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.61%)</title><rect x="285" y="308" width="20" height="15" fill="rgb(234,176,36)"/><text x="288.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.61%)</title><rect x="285" y="324" width="20" height="15" fill="rgb(237,137,39)"/><text x="288.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 1.29%)</title><rect x="289" y="340" width="16" height="15" fill="rgb(207,11,0)"/><text x="292.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.97%)</title><rect x="293" y="356" width="12" height="15" fill="rgb(230,122,23)"/><text x="296.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.65%)</title><rect x="297" y="372" width="8" height="15" fill="rgb(240,85,52)"/><text x="300.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.16%)</title><rect x="303" y="388" width="2" height="15" fill="rgb(230,217,18)"/><text x="306.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.16%)</title><rect x="305" y="260" width="1" height="15" fill="rgb(245,215,0)"/><text x="308.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.16%)</title><rect x="305" y="276" width="1" height="15" fill="rgb(209,91,54)"/><text x="308.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.16%)</title><rect x="305" y="292" width="1" height="15" fill="rgb(215,162,9)"/><text x="308.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (15 samples, 2.42%)</title><rect x="280" y="244" width="28" height="15" fill="rgb(206,32,3)"/><text x="283.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="306" y="260" width="2" height="15" fill="rgb(252,10,17)"/><text x="309.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="306" y="276" width="2" height="15" fill="rgb(220,195,47)"/><text x="309.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.16%)</title><rect x="306" y="292" width="2" height="15" fill="rgb(254,136,23)"/><text x="309.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.16%)</title><rect x="306" y="308" width="2" height="15" fill="rgb(243,176,3)"/><text x="309.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.16%)</title><rect x="306" y="324" width="2" height="15" fill="rgb(241,111,43)"/><text x="309.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (1 samples, 0.16%)</title><rect x="306" y="340" width="2" height="15" fill="rgb(217,101,40)"/><text x="309.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.16%)</title><rect x="306" y="356" width="2" height="15" fill="rgb(228,177,0)"/><text x="309.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.16%)</title><rect x="306" y="372" width="2" height="15" fill="rgb(205,40,16)"/><text x="309.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.16%)</title><rect x="308" y="308" width="2" height="15" fill="rgb(216,136,37)"/><text x="311.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.16%)</title><rect x="308" y="324" width="2" height="15" fill="rgb(223,129,5)"/><text x="311.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.16%)</title><rect x="308" y="340" width="2" height="15" fill="rgb(239,204,3)"/><text x="311.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3614) (1 samples, 0.16%)</title><rect x="308" y="356" width="2" height="15" fill="rgb(252,188,44)"/><text x="311.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.16%)</title><rect x="310" y="356" width="2" height="15" fill="rgb(241,149,52)"/><text x="313.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.16%)</title><rect x="312" y="372" width="2" height="15" fill="rgb(239,94,45)"/><text x="315.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.48%)</title><rect x="310" y="308" width="6" height="15" fill="rgb(223,214,40)"/><text x="313.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.48%)</title><rect x="310" y="324" width="6" height="15" fill="rgb(224,7,52)"/><text x="313.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.48%)</title><rect x="310" y="340" width="6" height="15" fill="rgb(215,85,6)"/><text x="313.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.32%)</title><rect x="312" y="356" width="4" height="15" fill="rgb(244,166,34)"/><text x="315.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.16%)</title><rect x="314" y="372" width="2" height="15" fill="rgb(222,89,13)"/><text x="317.00" y="382.50"></text></g><g><title>0x7f8a9825190a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="316" y="340" width="2" height="15" fill="rgb(224,228,35)"/><text x="319.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (21 samples, 3.39%)</title><rect x="280" y="196" width="40" height="15" fill="rgb(220,162,26)"/><text x="283.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 3.39%)</title><rect x="280" y="212" width="40" height="15" fill="rgb(253,169,48)"/><text x="283.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (21 samples, 3.39%)</title><rect x="280" y="228" width="40" height="15" fill="rgb(220,132,11)"/><text x="283.00" y="238.50">_ru..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (6 samples, 0.97%)</title><rect x="308" y="244" width="12" height="15" fill="rgb(246,164,41)"/><text x="311.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.97%)</title><rect x="308" y="260" width="12" height="15" fill="rgb(209,167,34)"/><text x="311.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.97%)</title><rect x="308" y="276" width="12" height="15" fill="rgb(246,194,8)"/><text x="311.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.97%)</title><rect x="308" y="292" width="12" height="15" fill="rgb(214,197,47)"/><text x="311.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.32%)</title><rect x="316" y="308" width="4" height="15" fill="rgb(239,7,35)"/><text x="319.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.32%)</title><rect x="316" y="324" width="4" height="15" fill="rgb(248,121,53)"/><text x="319.00" y="334.50"></text></g><g><title>0x7f8a98251f60 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="318" y="340" width="2" height="15" fill="rgb(223,208,12)"/><text x="321.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.16%)</title><rect x="322" y="244" width="2" height="15" fill="rgb(238,184,9)"/><text x="325.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.16%)</title><rect x="325" y="260" width="2" height="15" fill="rgb(240,50,11)"/><text x="328.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:707) (1 samples, 0.16%)</title><rect x="325" y="276" width="2" height="15" fill="rgb(216,200,10)"/><text x="328.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:1062) (1 samples, 0.16%)</title><rect x="327" y="308" width="2" height="15" fill="rgb(228,202,49)"/><text x="330.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (14 samples, 2.26%)</title><rect x="329" y="324" width="27" height="15" fill="rgb(249,114,6)"/><text x="332.00" y="334.50">c..</text></g><g><title>gemm (cblasfuncs.c:40) (14 samples, 2.26%)</title><rect x="329" y="340" width="27" height="15" fill="rgb(254,74,31)"/><text x="332.00" y="350.50">g..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 2.26%)</title><rect x="329" y="356" width="27" height="15" fill="rgb(211,40,20)"/><text x="332.00" y="366.50">c..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 2.26%)</title><rect x="329" y="372" width="27" height="15" fill="rgb(239,66,37)"/><text x="332.00" y="382.50">s..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 2.26%)</title><rect x="329" y="388" width="27" height="15" fill="rgb(219,118,15)"/><text x="332.00" y="398.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 2.58%)</title><rect x="327" y="276" width="31" height="15" fill="rgb(231,143,0)"/><text x="330.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (16 samples, 2.58%)</title><rect x="327" y="292" width="31" height="15" fill="rgb(214,213,21)"/><text x="330.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (15 samples, 2.42%)</title><rect x="329" y="308" width="29" height="15" fill="rgb(249,202,50)"/><text x="332.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:686) (1 samples, 0.16%)</title><rect x="356" y="324" width="2" height="15" fill="rgb(243,152,21)"/><text x="359.00" y="334.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.48%)</title><rect x="358" y="276" width="6" height="15" fill="rgb(219,147,29)"/><text x="361.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (63 samples, 10.16%)</title><rect x="322" y="228" width="120" height="15" fill="rgb(217,229,31)"/><text x="325.00" y="238.50">_run (mlprodic..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (62 samples, 10.00%)</title><rect x="324" y="244" width="118" height="15" fill="rgb(212,59,34)"/><text x="327.00" y="254.50">numpy_dot_inpl..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (60 samples, 9.68%)</title><rect x="327" y="260" width="115" height="15" fill="rgb(252,96,40)"/><text x="330.00" y="270.50">dot (&lt;__array_..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (41 samples, 6.61%)</title><rect x="364" y="276" width="78" height="15" fill="rgb(250,50,14)"/><text x="367.00" y="286.50">sgemm_ker..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.16%)</title><rect x="442" y="260" width="1" height="15" fill="rgb(244,169,12)"/><text x="445.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.16%)</title><rect x="442" y="276" width="1" height="15" fill="rgb(228,166,13)"/><text x="445.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.16%)</title><rect x="442" y="292" width="1" height="15" fill="rgb(236,17,24)"/><text x="445.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1712) (1 samples, 0.16%)</title><rect x="442" y="308" width="1" height="15" fill="rgb(206,177,11)"/><text x="445.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.16%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(207,205,26)"/><text x="446.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1958) (1 samples, 0.16%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(208,10,9)"/><text x="446.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.16%)</title><rect x="445" y="308" width="2" height="15" fill="rgb(252,26,29)"/><text x="448.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.16%)</title><rect x="445" y="324" width="2" height="15" fill="rgb(211,38,49)"/><text x="448.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="445" y="340" width="2" height="15" fill="rgb(233,23,0)"/><text x="448.00" y="350.50"></text></g><g><title>0x7f8a98252d67 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="445" y="356" width="2" height="15" fill="rgb(240,132,53)"/><text x="448.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.16%)</title><rect x="447" y="340" width="2" height="15" fill="rgb(235,58,50)"/><text x="450.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.16%)</title><rect x="449" y="340" width="2" height="15" fill="rgb(224,169,11)"/><text x="452.00" y="350.50"></text></g><g><title>0x7f8a98271dbb (libc-2.29.so) (3 samples, 0.48%)</title><rect x="451" y="356" width="6" height="15" fill="rgb(219,122,9)"/><text x="454.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (9 samples, 1.45%)</title><rect x="442" y="228" width="17" height="15" fill="rgb(233,92,6)"/><text x="445.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.45%)</title><rect x="442" y="244" width="17" height="15" fill="rgb(233,9,11)"/><text x="445.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.13%)</title><rect x="445" y="260" width="14" height="15" fill="rgb(239,224,27)"/><text x="448.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.13%)</title><rect x="445" y="276" width="14" height="15" fill="rgb(206,224,53)"/><text x="448.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 1.13%)</title><rect x="445" y="292" width="14" height="15" fill="rgb(232,124,38)"/><text x="448.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.97%)</title><rect x="447" y="308" width="12" height="15" fill="rgb(254,216,20)"/><text x="450.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.97%)</title><rect x="447" y="324" width="12" height="15" fill="rgb(217,198,54)"/><text x="450.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.65%)</title><rect x="451" y="340" width="8" height="15" fill="rgb(248,54,39)"/><text x="454.00" y="350.50"></text></g><g><title>0x7f8a98271dbe (libc-2.29.so) (1 samples, 0.16%)</title><rect x="457" y="356" width="2" height="15" fill="rgb(235,120,8)"/><text x="460.00" y="366.50"></text></g><g><title>0x7f8a8355b204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="459" y="324" width="2" height="15" fill="rgb(205,201,34)"/><text x="462.00" y="334.50"></text></g><g><title>0x7f8a83519890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.65%)</title><rect x="461" y="340" width="7" height="15" fill="rgb(215,25,30)"/><text x="464.00" y="350.50"></text></g><g><title>0x7f8a83664c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="468" y="340" width="4" height="15" fill="rgb(218,78,24)"/><text x="471.00" y="350.50"></text></g><g><title>0x7f8a983d0e4e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="476" y="356" width="2" height="15" fill="rgb(245,189,44)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f8a983d0e71 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="478" y="356" width="2" height="15" fill="rgb(223,60,18)"/><text x="481.00" y="366.50"></text></g><g><title>0x7f8a983d0e7e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="480" y="356" width="2" height="15" fill="rgb(246,55,31)"/><text x="483.00" y="366.50"></text></g><g><title>0x7f8a8355b214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.94%)</title><rect x="461" y="324" width="22" height="15" fill="rgb(207,9,19)"/><text x="464.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (6 samples, 0.97%)</title><rect x="472" y="340" width="11" height="15" fill="rgb(211,168,21)"/><text x="475.00" y="350.50"></text></g><g><title>0x7f8a983d0ea2 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="482" y="356" width="1" height="15" fill="rgb(238,110,2)"/><text x="485.00" y="366.50"></text></g><g><title>0x7f8a8355b224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="483" y="324" width="2" height="15" fill="rgb(220,160,38)"/><text x="486.00" y="334.50"></text></g><g><title>0x7f8a8353933d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.39%)</title><rect x="459" y="308" width="40" height="15" fill="rgb(230,16,4)"/><text x="462.00" y="318.50">0x7..</text></g><g><title>0x7f8a8355b228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.13%)</title><rect x="485" y="324" width="14" height="15" fill="rgb(220,14,53)"/><text x="488.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (22 samples, 3.55%)</title><rect x="459" y="228" width="42" height="15" fill="rgb(207,209,3)"/><text x="462.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 3.55%)</title><rect x="459" y="244" width="42" height="15" fill="rgb(221,91,0)"/><text x="462.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (22 samples, 3.55%)</title><rect x="459" y="260" width="42" height="15" fill="rgb(242,105,9)"/><text x="462.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (22 samples, 3.55%)</title><rect x="459" y="276" width="42" height="15" fill="rgb(222,72,12)"/><text x="462.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (22 samples, 3.55%)</title><rect x="459" y="292" width="42" height="15" fill="rgb(252,26,10)"/><text x="462.00" y="302.50">tri..</text></g><g><title>0x7f8a83539345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="499" y="308" width="2" height="15" fill="rgb(232,91,47)"/><text x="502.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.16%)</title><rect x="501" y="228" width="1" height="15" fill="rgb(242,72,49)"/><text x="504.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.16%)</title><rect x="502" y="292" width="2" height="15" fill="rgb(222,220,1)"/><text x="505.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.16%)</title><rect x="504" y="324" width="2" height="15" fill="rgb(232,16,52)"/><text x="507.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="504" y="340" width="2" height="15" fill="rgb(207,123,39)"/><text x="507.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="504" y="356" width="2" height="15" fill="rgb(246,169,42)"/><text x="507.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="504" y="372" width="2" height="15" fill="rgb(220,228,24)"/><text x="507.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="504" y="388" width="2" height="15" fill="rgb(224,88,28)"/><text x="507.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="504" y="404" width="2" height="15" fill="rgb(247,60,36)"/><text x="507.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="504" y="420" width="2" height="15" fill="rgb(211,59,33)"/><text x="507.00" y="430.50"></text></g><g><title>0x7f8a982531a3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="504" y="436" width="2" height="15" fill="rgb(226,229,42)"/><text x="507.00" y="446.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.16%)</title><rect x="506" y="340" width="2" height="15" fill="rgb(209,195,9)"/><text x="509.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (100 samples, 16.13%)</title><rect x="320" y="196" width="190" height="15" fill="rgb(223,0,50)"/><text x="323.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (99 samples, 15.97%)</title><rect x="322" y="212" width="188" height="15" fill="rgb(224,138,23)"/><text x="325.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (4 samples, 0.65%)</title><rect x="502" y="228" width="8" height="15" fill="rgb(231,165,0)"/><text x="505.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (4 samples, 0.65%)</title><rect x="502" y="244" width="8" height="15" fill="rgb(253,183,26)"/><text x="505.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.65%)</title><rect x="502" y="260" width="8" height="15" fill="rgb(213,159,7)"/><text x="505.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (4 samples, 0.65%)</title><rect x="502" y="276" width="8" height="15" fill="rgb(254,35,11)"/><text x="505.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.48%)</title><rect x="504" y="292" width="6" height="15" fill="rgb(248,65,28)"/><text x="507.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 0.48%)</title><rect x="504" y="308" width="6" height="15" fill="rgb(242,208,21)"/><text x="507.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.32%)</title><rect x="506" y="324" width="4" height="15" fill="rgb(230,115,14)"/><text x="509.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.16%)</title><rect x="508" y="340" width="2" height="15" fill="rgb(241,121,38)"/><text x="511.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (123 samples, 19.84%)</title><rect x="278" y="180" width="234" height="15" fill="rgb(254,207,22)"/><text x="281.00" y="190.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.16%)</title><rect x="510" y="196" width="2" height="15" fill="rgb(214,223,23)"/><text x="513.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.16%)</title><rect x="512" y="180" width="2" height="15" fill="rgb(234,118,36)"/><text x="515.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.32%)</title><rect x="514" y="180" width="4" height="15" fill="rgb(216,81,31)"/><text x="517.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (131 samples, 21.13%)</title><rect x="270" y="164" width="250" height="15" fill="rgb(250,206,4)"/><text x="273.00" y="174.50">_run_sequence_runtime (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.16%)</title><rect x="518" y="180" width="2" height="15" fill="rgb(243,198,37)"/><text x="521.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.16%)</title><rect x="520" y="164" width="1" height="15" fill="rgb(213,18,48)"/><text x="523.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.16%)</title><rect x="520" y="180" width="1" height="15" fill="rgb(253,175,41)"/><text x="523.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.16%)</title><rect x="520" y="196" width="1" height="15" fill="rgb(215,22,5)"/><text x="523.00" y="206.50"></text></g><g><title>0x7f8a9832f134 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="520" y="212" width="1" height="15" fill="rgb(243,82,3)"/><text x="523.00" y="222.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.16%)</title><rect x="521" y="164" width="2" height="15" fill="rgb(232,144,25)"/><text x="524.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:45) (136 samples, 21.94%)</title><rect x="266" y="52" width="259" height="15" fill="rgb(234,41,50)"/><text x="269.00" y="62.50">&lt;module&gt; (bench_LogisticRegression..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:44) (136 samples, 21.94%)</title><rect x="266" y="68" width="259" height="15" fill="rgb(238,201,15)"/><text x="269.00" y="78.50">profile_pyrt (bench_LogisticRegres..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:29) (136 samples, 21.94%)</title><rect x="266" y="84" width="259" height="15" fill="rgb(223,166,54)"/><text x="269.00" y="94.50">setup_profile (bench_LogisticRegre..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:23) (135 samples, 21.77%)</title><rect x="268" y="100" width="257" height="15" fill="rgb(235,192,5)"/><text x="271.00" y="110.50">profile (bench_LogisticRegression_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (135 samples, 21.77%)</title><rect x="268" y="116" width="257" height="15" fill="rgb(230,195,3)"/><text x="271.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (134 samples, 21.61%)</title><rect x="270" y="132" width="255" height="15" fill="rgb(207,116,39)"/><text x="273.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (134 samples, 21.61%)</title><rect x="270" y="148" width="255" height="15" fill="rgb(226,225,30)"/><text x="273.00" y="158.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.16%)</title><rect x="523" y="164" width="2" height="15" fill="rgb(239,3,7)"/><text x="526.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.16%)</title><rect x="523" y="180" width="2" height="15" fill="rgb(245,200,16)"/><text x="526.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.16%)</title><rect x="523" y="196" width="2" height="15" fill="rgb(237,92,21)"/><text x="526.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.16%)</title><rect x="523" y="212" width="2" height="15" fill="rgb(218,50,17)"/><text x="526.00" y="222.50"></text></g><g><title>0x7f8a98251f71 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="523" y="228" width="2" height="15" fill="rgb(206,153,40)"/><text x="526.00" y="238.50"></text></g><g><title>0x7f8a582c1ff9 (?) (1 samples, 0.16%)</title><rect x="527" y="212" width="2" height="15" fill="rgb(224,43,14)"/><text x="530.00" y="222.50"></text></g><g><title>0x7f8a582bcef6 (?) (1 samples, 0.16%)</title><rect x="527" y="228" width="2" height="15" fill="rgb(250,7,46)"/><text x="530.00" y="238.50"></text></g><g><title>0x7f8a582b1962 (?) (1 samples, 0.16%)</title><rect x="527" y="244" width="2" height="15" fill="rgb(239,30,50)"/><text x="530.00" y="254.50"></text></g><g><title>0x7f8a582e57a7 (?) (1 samples, 0.16%)</title><rect x="527" y="260" width="2" height="15" fill="rgb(222,30,30)"/><text x="530.00" y="270.50"></text></g><g><title>0x7f8a582e5379 (?) (1 samples, 0.16%)</title><rect x="527" y="276" width="2" height="15" fill="rgb(213,113,4)"/><text x="530.00" y="286.50"></text></g><g><title>0x7f8a587438b8 (?) (1 samples, 0.16%)</title><rect x="527" y="292" width="2" height="15" fill="rgb(246,192,7)"/><text x="530.00" y="302.50"></text></g><g><title>0x7f8a58741c7f (?) (1 samples, 0.16%)</title><rect x="527" y="308" width="2" height="15" fill="rgb(225,127,8)"/><text x="530.00" y="318.50"></text></g><g><title>0x7f8a5875499c (?) (1 samples, 0.16%)</title><rect x="527" y="324" width="2" height="15" fill="rgb(209,48,40)"/><text x="530.00" y="334.50"></text></g><g><title>0x7f8a58439adb (?) (1 samples, 0.16%)</title><rect x="527" y="340" width="2" height="15" fill="rgb(237,0,1)"/><text x="530.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:18) (4 samples, 0.65%)</title><rect x="525" y="100" width="8" height="15" fill="rgb(228,66,24)"/><text x="528.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.48%)</title><rect x="527" y="116" width="6" height="15" fill="rgb(242,200,34)"/><text x="530.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.48%)</title><rect x="527" y="132" width="6" height="15" fill="rgb(241,53,48)"/><text x="530.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.48%)</title><rect x="527" y="148" width="6" height="15" fill="rgb(233,192,7)"/><text x="530.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (3 samples, 0.48%)</title><rect x="527" y="164" width="6" height="15" fill="rgb(251,88,20)"/><text x="530.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (3 samples, 0.48%)</title><rect x="527" y="180" width="6" height="15" fill="rgb(225,174,52)"/><text x="530.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (3 samples, 0.48%)</title><rect x="527" y="196" width="6" height="15" fill="rgb(242,151,46)"/><text x="530.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="212" width="4" height="15" fill="rgb(227,64,53)"/><text x="532.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="228" width="4" height="15" fill="rgb(222,141,48)"/><text x="532.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="244" width="4" height="15" fill="rgb(227,28,35)"/><text x="532.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="260" width="4" height="15" fill="rgb(251,191,44)"/><text x="532.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="276" width="4" height="15" fill="rgb(228,202,45)"/><text x="532.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="292" width="4" height="15" fill="rgb(211,166,38)"/><text x="532.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="308" width="4" height="15" fill="rgb(246,35,49)"/><text x="532.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="324" width="4" height="15" fill="rgb(234,214,36)"/><text x="532.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="529" y="340" width="4" height="15" fill="rgb(249,52,38)"/><text x="532.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="531" y="356" width="2" height="15" fill="rgb(236,80,25)"/><text x="534.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:22) (1 samples, 0.16%)</title><rect x="533" y="100" width="2" height="15" fill="rgb(225,156,48)"/><text x="536.00" y="110.50"></text></g><g><title>0x7f8a98250bcc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="598" y="132" width="2" height="15" fill="rgb(213,95,23)"/><text x="601.00" y="142.50"></text></g><g><title>0x7f8a98250c19 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="600" y="132" width="1" height="15" fill="rgb(245,15,54)"/><text x="603.00" y="142.50"></text></g><g><title>0x7f8a98250c49 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="601" y="132" width="2" height="15" fill="rgb(210,214,22)"/><text x="604.00" y="142.50"></text></g><g><title>0x7f8a98250c4d (libc-2.29.so) (2 samples, 0.32%)</title><rect x="603" y="132" width="4" height="15" fill="rgb(237,50,28)"/><text x="606.00" y="142.50"></text></g><g><title>0x7f8a98250c6a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="607" y="132" width="2" height="15" fill="rgb(207,117,4)"/><text x="610.00" y="142.50"></text></g><g><title>0x7f8a98250aa4 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="611" y="148" width="2" height="15" fill="rgb(218,207,8)"/><text x="614.00" y="158.50"></text></g><g><title>0x7f8a98250ac1 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="613" y="148" width="2" height="15" fill="rgb(211,100,26)"/><text x="616.00" y="158.50"></text></g><g><title>0x7f8a98251eb0 (libc-2.29.so) (10 samples, 1.61%)</title><rect x="598" y="116" width="19" height="15" fill="rgb(232,113,44)"/><text x="601.00" y="126.50"></text></g><g><title>0x7f8a98250c73 (libc-2.29.so) (4 samples, 0.65%)</title><rect x="609" y="132" width="8" height="15" fill="rgb(209,21,1)"/><text x="612.00" y="142.50"></text></g><g><title>0x7f8a98250ad5 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="615" y="148" width="2" height="15" fill="rgb(212,124,4)"/><text x="618.00" y="158.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="622" y="260" width="2" height="15" fill="rgb(243,136,46)"/><text x="625.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="624" y="292" width="2" height="15" fill="rgb(238,88,44)"/><text x="627.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="624" y="308" width="2" height="15" fill="rgb(253,184,28)"/><text x="627.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="624" y="324" width="2" height="15" fill="rgb(251,43,11)"/><text x="627.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="624" y="340" width="2" height="15" fill="rgb(225,147,30)"/><text x="627.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="626" y="292" width="2" height="15" fill="rgb(216,161,38)"/><text x="629.00" y="302.50"></text></g><g><title>onnxruntime::CheckTypes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="626" y="308" width="2" height="15" fill="rgb(236,106,53)"/><text x="629.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="628" y="340" width="2" height="15" fill="rgb(219,156,25)"/><text x="631.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="630" y="340" width="2" height="15" fill="rgb(248,194,32)"/><text x="633.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="630" y="356" width="2" height="15" fill="rgb(231,212,47)"/><text x="633.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="356" width="2" height="15" fill="rgb(212,104,39)"/><text x="787.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="372" width="2" height="15" fill="rgb(237,152,26)"/><text x="787.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="388" width="2" height="15" fill="rgb(253,10,13)"/><text x="787.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="404" width="2" height="15" fill="rgb(232,32,43)"/><text x="787.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="420" width="2" height="15" fill="rgb(207,107,4)"/><text x="787.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="436" width="2" height="15" fill="rgb(251,127,46)"/><text x="787.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="452" width="2" height="15" fill="rgb(211,151,2)"/><text x="787.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="468" width="2" height="15" fill="rgb(252,32,1)"/><text x="787.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="784" y="484" width="2" height="15" fill="rgb(212,25,6)"/><text x="787.00" y="494.50"></text></g><g><title>0x7f8a98271dae (libc-2.29.so) (1 samples, 0.16%)</title><rect x="801" y="372" width="2" height="15" fill="rgb(218,199,16)"/><text x="804.00" y="382.50"></text></g><g><title>0x7f8a98271db3 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="803" y="372" width="4" height="15" fill="rgb(223,141,51)"/><text x="806.00" y="382.50"></text></g><g><title>0x7f8a983d0e00 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="807" y="372" width="2" height="15" fill="rgb(244,82,42)"/><text x="810.00" y="382.50"></text></g><g><title>0x7f8a983d0e14 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="809" y="372" width="2" height="15" fill="rgb(205,161,26)"/><text x="812.00" y="382.50"></text></g><g><title>0x7f8a983d0e4a (libm-2.29.so) (1 samples, 0.16%)</title><rect x="811" y="372" width="2" height="15" fill="rgb(247,174,37)"/><text x="814.00" y="382.50"></text></g><g><title>0x7f8a983d0e4e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="813" y="372" width="2" height="15" fill="rgb(209,162,18)"/><text x="816.00" y="382.50"></text></g><g><title>0x7f8a983d0e5f (libm-2.29.so) (1 samples, 0.16%)</title><rect x="815" y="372" width="1" height="15" fill="rgb(222,102,3)"/><text x="818.00" y="382.50"></text></g><g><title>0x7f8a983d0e71 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="816" y="372" width="2" height="15" fill="rgb(252,226,1)"/><text x="819.00" y="382.50"></text></g><g><title>0x7f8a983d0e92 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="818" y="372" width="2" height="15" fill="rgb(219,57,2)"/><text x="821.00" y="382.50"></text></g><g><title>0x7f8a983d0e9e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="820" y="372" width="2" height="15" fill="rgb(219,106,10)"/><text x="823.00" y="382.50"></text></g><g><title>0x7f8a983d0ea2 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="822" y="372" width="2" height="15" fill="rgb(207,136,33)"/><text x="825.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 16.45%)</title><rect x="632" y="340" width="194" height="15" fill="rgb(254,153,21)"/><text x="635.00" y="350.50">onnxruntime::ml::LinearCl..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 3.39%)</title><rect x="786" y="356" width="40" height="15" fill="rgb(236,186,30)"/><text x="789.00" y="366.50">onn..</text></g><g><title>0x7f8a983d0ea6 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="824" y="372" width="2" height="15" fill="rgb(215,26,32)"/><text x="827.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.42%)</title><rect x="826" y="340" width="29" height="15" fill="rgb(228,144,42)"/><text x="829.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.42%)</title><rect x="826" y="356" width="29" height="15" fill="rgb(248,54,6)"/><text x="829.00" y="366.50">on..</text></g><g><title>0x7f8a58288930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="881" y="356" width="4" height="15" fill="rgb(228,217,48)"/><text x="884.00" y="366.50"></text></g><g><title>0x7f8a58289ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="885" y="356" width="2" height="15" fill="rgb(224,4,53)"/><text x="888.00" y="366.50"></text></g><g><title>0x7f8a98252b12 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="950" y="388" width="2" height="15" fill="rgb(238,228,25)"/><text x="953.00" y="398.50"></text></g><g><title>0x7f8a98252b24 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="952" y="388" width="2" height="15" fill="rgb(225,98,26)"/><text x="955.00" y="398.50"></text></g><g><title>0x7f8a98252b39 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="954" y="388" width="1" height="15" fill="rgb(247,71,36)"/><text x="957.00" y="398.50"></text></g><g><title>0x7f8a98252d36 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="955" y="388" width="2" height="15" fill="rgb(241,120,11)"/><text x="958.00" y="398.50"></text></g><g><title>0x7f8a98252d54 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="957" y="388" width="2" height="15" fill="rgb(246,41,7)"/><text x="960.00" y="398.50"></text></g><g><title>0x7f8a98252d67 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="959" y="388" width="4" height="15" fill="rgb(221,72,8)"/><text x="962.00" y="398.50"></text></g><g><title>0x7f8a98252d81 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="963" y="388" width="4" height="15" fill="rgb(244,89,25)"/><text x="966.00" y="398.50"></text></g><g><title>0x7f8a98252d8d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="967" y="388" width="2" height="15" fill="rgb(223,130,50)"/><text x="970.00" y="398.50"></text></g><g><title>0x7f8a98252d9f (libc-2.29.so) (2 samples, 0.32%)</title><rect x="969" y="388" width="4" height="15" fill="rgb(217,90,16)"/><text x="972.00" y="398.50"></text></g><g><title>0x7f8a98252fde (libc-2.29.so) (1 samples, 0.16%)</title><rect x="973" y="388" width="1" height="15" fill="rgb(253,206,16)"/><text x="976.00" y="398.50"></text></g><g><title>0x7f8a98253033 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="974" y="388" width="2" height="15" fill="rgb(242,35,32)"/><text x="977.00" y="398.50"></text></g><g><title>0x7f8a98253040 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="976" y="388" width="2" height="15" fill="rgb(248,41,7)"/><text x="979.00" y="398.50"></text></g><g><title>0x7f8a98253050 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="978" y="388" width="2" height="15" fill="rgb(217,205,41)"/><text x="981.00" y="398.50"></text></g><g><title>0x7f8a98253064 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="980" y="388" width="2" height="15" fill="rgb(235,8,7)"/><text x="983.00" y="398.50"></text></g><g><title>0x7f8a9825306d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="982" y="388" width="2" height="15" fill="rgb(206,181,1)"/><text x="985.00" y="398.50"></text></g><g><title>0x7f8a9825307f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="984" y="388" width="2" height="15" fill="rgb(233,45,13)"/><text x="987.00" y="398.50"></text></g><g><title>0x7f8a98253097 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="986" y="388" width="2" height="15" fill="rgb(240,109,39)"/><text x="989.00" y="398.50"></text></g><g><title>0x7f8a98253368 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="988" y="388" width="2" height="15" fill="rgb(242,88,12)"/><text x="991.00" y="398.50"></text></g><g><title>0x7f8a982533ae (libc-2.29.so) (1 samples, 0.16%)</title><rect x="990" y="388" width="2" height="15" fill="rgb(215,123,22)"/><text x="993.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (56 samples, 9.03%)</title><rect x="887" y="356" width="106" height="15" fill="rgb(220,142,20)"/><text x="890.00" y="366.50">operator new..</text></g><g><title>malloc (libc-2.29.so) (54 samples, 8.71%)</title><rect x="891" y="372" width="102" height="15" fill="rgb(220,137,8)"/><text x="894.00" y="382.50">malloc (libc..</text></g><g><title>0x7f8a982533c4 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="992" y="388" width="1" height="15" fill="rgb(244,194,10)"/><text x="995.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="993" y="356" width="2" height="15" fill="rgb(232,11,19)"/><text x="996.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="995" y="356" width="4" height="15" fill="rgb(243,81,42)"/><text x="998.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="999" y="356" width="2" height="15" fill="rgb(241,182,32)"/><text x="1002.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 32.74%)</title><rect x="624" y="260" width="387" height="15" fill="rgb(244,175,32)"/><text x="627.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 32.74%)</title><rect x="624" y="276" width="387" height="15" fill="rgb(239,199,20)"/><text x="627.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (201 samples, 32.42%)</title><rect x="628" y="292" width="383" height="15" fill="rgb(223,51,13)"/><text x="631.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (201 samples, 32.42%)</title><rect x="628" y="308" width="383" height="15" fill="rgb(239,30,27)"/><text x="631.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (201 samples, 32.42%)</title><rect x="628" y="324" width="383" height="15" fill="rgb(222,159,1)"/><text x="631.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 13.23%)</title><rect x="855" y="340" width="156" height="15" fill="rgb(251,63,38)"/><text x="858.00" y="350.50">onnxruntime::ml::Zip..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.81%)</title><rect x="1001" y="356" width="10" height="15" fill="rgb(243,152,16)"/><text x="1004.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1011" y="260" width="2" height="15" fill="rgb(220,170,12)"/><text x="1014.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.16%)</title><rect x="1011" y="276" width="2" height="15" fill="rgb(251,74,35)"/><text x="1014.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.16%)</title><rect x="1011" y="292" width="2" height="15" fill="rgb(242,32,15)"/><text x="1014.00" y="302.50"></text></g><g><title>0x7f8a582895c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1096" y="276" width="2" height="15" fill="rgb(212,52,22)"/><text x="1099.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.94%)</title><rect x="1098" y="276" width="23" height="15" fill="rgb(247,228,30)"/><text x="1101.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 9.52%)</title><rect x="1013" y="260" width="112" height="15" fill="rgb(214,143,48)"/><text x="1016.00" y="270.50">pybind11::det..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.32%)</title><rect x="1121" y="276" width="4" height="15" fill="rgb(215,4,37)"/><text x="1124.00" y="286.50"></text></g><g><title>0x7f8a982519b3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1127" y="292" width="2" height="15" fill="rgb(238,213,24)"/><text x="1130.00" y="302.50"></text></g><g><title>0x7f8a982519ff (libc-2.29.so) (2 samples, 0.32%)</title><rect x="1129" y="292" width="3" height="15" fill="rgb(226,193,20)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7f8a98251a4b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1132" y="292" width="2" height="15" fill="rgb(211,31,41)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7f8a98251ca0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1134" y="292" width="2" height="15" fill="rgb(227,138,1)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7f8a98251d07 (libc-2.29.so) (12 samples, 1.94%)</title><rect x="1136" y="292" width="23" height="15" fill="rgb(215,208,26)"/><text x="1139.00" y="302.50">0..</text></g><g><title>free (libc-2.29.so) (3 samples, 0.48%)</title><rect x="1159" y="292" width="6" height="15" fill="rgb(253,3,46)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7f8a87d1e7a0 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(228,40,16)"/><text x="1170.00" y="318.50"></text></g><g><title>0x7f8a98251982 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1169" y="308" width="1" height="15" fill="rgb(235,21,3)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7f8a982519ed (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1170" y="308" width="2" height="15" fill="rgb(212,148,2)"/><text x="1173.00" y="318.50"></text></g><g><title>0x7f8a98251d07 (libc-2.29.so) (5 samples, 0.81%)</title><rect x="1172" y="308" width="10" height="15" fill="rgb(249,12,19)"/><text x="1175.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(215,135,13)"/><text x="1185.00" y="318.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1184" y="308" width="2" height="15" fill="rgb(254,55,48)"/><text x="1187.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (298 samples, 48.06%)</title><rect x="620" y="132" width="568" height="15" fill="rgb(205,78,22)"/><text x="623.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (297 samples, 47.90%)</title><rect x="622" y="148" width="566" height="15" fill="rgb(228,115,28)"/><text x="625.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (297 samples, 47.90%)</title><rect x="622" y="164" width="566" height="15" fill="rgb(215,174,54)"/><text x="625.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (297 samples, 47.90%)</title><rect x="622" y="180" width="566" height="15" fill="rgb(234,161,14)"/><text x="625.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (297 samples, 47.90%)</title><rect x="622" y="196" width="566" height="15" fill="rgb(220,160,45)"/><text x="625.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (297 samples, 47.90%)</title><rect x="622" y="212" width="566" height="15" fill="rgb(209,160,24)"/><text x="625.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_sta..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (297 samples, 47.90%)</title><rect x="622" y="228" width="566" height="15" fill="rgb(225,88,14)"/><text x="625.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (297 samples, 47.90%)</title><rect x="622" y="244" width="566" height="15" fill="rgb(217,71,4)"/><text x="625.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 5.32%)</title><rect x="1125" y="260" width="63" height="15" fill="rgb(227,207,30)"/><text x="1128.00" y="270.50">std::v..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 5.32%)</title><rect x="1125" y="276" width="63" height="15" fill="rgb(245,21,51)"/><text x="1128.00" y="286.50">onnxru..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.94%)</title><rect x="1165" y="292" width="23" height="15" fill="rgb(247,92,16)"/><text x="1168.00" y="302.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1186" y="308" width="2" height="15" fill="rgb(221,126,10)"/><text x="1189.00" y="318.50"></text></g><g><title>all (620 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,109,39)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:52) (349 samples, 56.29%)</title><rect x="525" y="52" width="665" height="15" fill="rgb(252,116,30)"/><text x="528.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:5..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:51) (349 samples, 56.29%)</title><rect x="525" y="68" width="665" height="15" fill="rgb(212,85,18)"/><text x="528.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.p..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:29) (349 samples, 56.29%)</title><rect x="525" y="84" width="665" height="15" fill="rgb(232,204,2)"/><text x="528.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:23) (344 samples, 55.48%)</title><rect x="535" y="100" width="655" height="15" fill="rgb(220,68,44)"/><text x="538.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py:2..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (301 samples, 48.55%)</title><rect x="617" y="116" width="573" height="15" fill="rgb(222,155,18)"/><text x="620.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(250,111,26)"/><text x="1191.00" y="142.50"></text></g></g></svg>