<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2246" onload="init(evt)" viewBox="0 0 1200 2246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2246" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2229.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2229.00"> </text><g id="frames"><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:28) (1 samples, 0.25%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(253,117,33)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.25%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(230,33,14)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.25%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(217,221,48)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.25%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(224,113,25)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(249,35,36)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(235,217,18)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(239,212,9)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(214,136,44)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(251,135,11)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.25%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(227,41,28)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(250,62,33)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(242,31,3)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(253,221,41)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(220,155,36)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(238,76,25)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:14) (1 samples, 0.25%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(222,128,38)"/><text x="13.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(213,170,21)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(229,101,45)"/><text x="13.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="372" width="2" height="15" fill="rgb(224,97,23)"/><text x="13.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(245,99,7)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(227,226,42)"/><text x="13.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py:90) (1 samples, 0.25%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(244,12,25)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(221,124,29)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(221,196,23)"/><text x="13.00" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(222,180,17)"/><text x="13.00" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(208,44,47)"/><text x="13.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="500" width="2" height="15" fill="rgb(223,163,35)"/><text x="13.00" y="510.50"></text></g><g><title>&lt;module&gt; (graphviz/__init__.py:27) (1 samples, 0.25%)</title><rect x="10" y="516" width="2" height="15" fill="rgb(241,34,7)"/><text x="13.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="532" width="2" height="15" fill="rgb(247,132,35)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="548" width="2" height="15" fill="rgb(231,184,52)"/><text x="13.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="564" width="2" height="15" fill="rgb(229,74,47)"/><text x="13.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="580" width="2" height="15" fill="rgb(244,86,40)"/><text x="13.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="596" width="2" height="15" fill="rgb(224,172,45)"/><text x="13.00" y="606.50"></text></g><g><title>&lt;module&gt; (graphviz/dot.py:31) (1 samples, 0.25%)</title><rect x="10" y="612" width="2" height="15" fill="rgb(214,111,19)"/><text x="13.00" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="10" y="628" width="2" height="15" fill="rgb(241,92,13)"/><text x="13.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="644" width="2" height="15" fill="rgb(249,176,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="660" width="2" height="15" fill="rgb(209,43,37)"/><text x="13.00" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="676" width="2" height="15" fill="rgb(223,50,49)"/><text x="13.00" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="692" width="2" height="15" fill="rgb(247,70,39)"/><text x="13.00" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="708" width="2" height="15" fill="rgb(253,106,3)"/><text x="13.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="724" width="2" height="15" fill="rgb(225,36,25)"/><text x="13.00" y="734.50"></text></g><g><title>&lt;module&gt; (graphviz/lang.py:20) (1 samples, 0.25%)</title><rect x="10" y="740" width="2" height="15" fill="rgb(226,13,51)"/><text x="13.00" y="750.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.25%)</title><rect x="10" y="756" width="2" height="15" fill="rgb(229,148,48)"/><text x="13.00" y="766.50"></text></g><g><title>_compile (re.py:287) (1 samples, 0.25%)</title><rect x="10" y="772" width="2" height="15" fill="rgb(246,48,42)"/><text x="13.00" y="782.50"></text></g><g><title>__and__ (enum.py:836) (1 samples, 0.25%)</title><rect x="10" y="788" width="2" height="15" fill="rgb(248,18,10)"/><text x="13.00" y="798.50"></text></g><g><title>__call__ (enum.py:309) (1 samples, 0.25%)</title><rect x="10" y="804" width="2" height="15" fill="rgb(231,103,19)"/><text x="13.00" y="814.50"></text></g><g><title>__new__ (enum.py:529) (1 samples, 0.25%)</title><rect x="10" y="820" width="2" height="15" fill="rgb(208,215,25)"/><text x="13.00" y="830.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.25%)</title><rect x="12" y="148" width="3" height="15" fill="rgb(230,206,23)"/><text x="15.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.25%)</title><rect x="12" y="164" width="3" height="15" fill="rgb(239,0,15)"/><text x="15.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.25%)</title><rect x="12" y="180" width="3" height="15" fill="rgb(249,181,31)"/><text x="15.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="12" y="196" width="3" height="15" fill="rgb(252,111,20)"/><text x="15.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:18) (2 samples, 0.49%)</title><rect x="12" y="100" width="6" height="15" fill="rgb(217,187,7)"/><text x="15.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.49%)</title><rect x="12" y="116" width="6" height="15" fill="rgb(237,139,41)"/><text x="15.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.49%)</title><rect x="12" y="132" width="6" height="15" fill="rgb(229,33,13)"/><text x="15.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.25%)</title><rect x="15" y="148" width="3" height="15" fill="rgb(218,67,9)"/><text x="18.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.25%)</title><rect x="15" y="164" width="3" height="15" fill="rgb(242,106,18)"/><text x="18.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.25%)</title><rect x="15" y="180" width="3" height="15" fill="rgb(232,22,45)"/><text x="18.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.25%)</title><rect x="15" y="196" width="3" height="15" fill="rgb(232,178,21)"/><text x="18.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.25%)</title><rect x="15" y="212" width="3" height="15" fill="rgb(236,143,25)"/><text x="18.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.25%)</title><rect x="15" y="228" width="3" height="15" fill="rgb(231,96,46)"/><text x="18.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.25%)</title><rect x="15" y="244" width="3" height="15" fill="rgb(209,36,10)"/><text x="18.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.25%)</title><rect x="15" y="260" width="3" height="15" fill="rgb(246,52,12)"/><text x="18.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.25%)</title><rect x="15" y="276" width="3" height="15" fill="rgb(220,221,11)"/><text x="18.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.25%)</title><rect x="15" y="292" width="3" height="15" fill="rgb(216,155,37)"/><text x="18.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.25%)</title><rect x="15" y="308" width="3" height="15" fill="rgb(247,71,35)"/><text x="18.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.25%)</title><rect x="15" y="324" width="3" height="15" fill="rgb(225,121,41)"/><text x="18.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.25%)</title><rect x="21" y="164" width="3" height="15" fill="rgb(216,215,54)"/><text x="24.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 1.48%)</title><rect x="21" y="148" width="18" height="15" fill="rgb(253,202,42)"/><text x="24.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.23%)</title><rect x="24" y="164" width="15" height="15" fill="rgb(242,145,2)"/><text x="27.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.23%)</title><rect x="24" y="180" width="15" height="15" fill="rgb(243,1,13)"/><text x="27.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.74%)</title><rect x="30" y="196" width="9" height="15" fill="rgb(230,90,7)"/><text x="33.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.25%)</title><rect x="39" y="148" width="3" height="15" fill="rgb(246,155,20)"/><text x="42.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.25%)</title><rect x="42" y="196" width="2" height="15" fill="rgb(235,165,14)"/><text x="45.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (4 samples, 0.99%)</title><rect x="42" y="180" width="11" height="15" fill="rgb(227,78,53)"/><text x="45.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.74%)</title><rect x="44" y="196" width="9" height="15" fill="rgb(216,100,49)"/><text x="47.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.74%)</title><rect x="44" y="212" width="9" height="15" fill="rgb(241,133,54)"/><text x="47.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.25%)</title><rect x="56" y="196" width="3" height="15" fill="rgb(234,162,34)"/><text x="59.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.25%)</title><rect x="59" y="196" width="3" height="15" fill="rgb(223,138,15)"/><text x="62.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.25%)</title><rect x="59" y="212" width="3" height="15" fill="rgb(240,118,9)"/><text x="62.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.25%)</title><rect x="62" y="196" width="3" height="15" fill="rgb(254,129,8)"/><text x="65.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.25%)</title><rect x="62" y="212" width="3" height="15" fill="rgb(205,198,14)"/><text x="65.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.49%)</title><rect x="65" y="196" width="6" height="15" fill="rgb(215,170,31)"/><text x="68.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.49%)</title><rect x="65" y="212" width="6" height="15" fill="rgb(249,53,21)"/><text x="68.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.25%)</title><rect x="71" y="196" width="3" height="15" fill="rgb(245,192,33)"/><text x="74.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (2 samples, 0.49%)</title><rect x="74" y="196" width="5" height="15" fill="rgb(233,182,26)"/><text x="77.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.25%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(251,111,32)"/><text x="82.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.49%)</title><rect x="79" y="196" width="6" height="15" fill="rgb(205,88,37)"/><text x="82.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.49%)</title><rect x="79" y="212" width="6" height="15" fill="rgb(248,161,4)"/><text x="82.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.25%)</title><rect x="82" y="228" width="3" height="15" fill="rgb(228,39,1)"/><text x="85.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.25%)</title><rect x="85" y="196" width="3" height="15" fill="rgb(219,101,40)"/><text x="88.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (13 samples, 3.21%)</title><rect x="53" y="180" width="38" height="15" fill="rgb(253,99,53)"/><text x="56.00" y="190.50">dec..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.25%)</title><rect x="88" y="196" width="3" height="15" fill="rgb(224,94,23)"/><text x="91.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.25%)</title><rect x="88" y="212" width="3" height="15" fill="rgb(219,22,45)"/><text x="91.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3141) (1 samples, 0.25%)</title><rect x="91" y="228" width="3" height="15" fill="rgb(215,0,33)"/><text x="94.00" y="238.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.25%)</title><rect x="94" y="308" width="3" height="15" fill="rgb(242,214,2)"/><text x="97.00" y="318.50"></text></g><g><title>array_add (number.c:330) (3 samples, 0.74%)</title><rect x="91" y="196" width="9" height="15" fill="rgb(246,61,19)"/><text x="94.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.74%)</title><rect x="91" y="212" width="9" height="15" fill="rgb(232,12,33)"/><text x="94.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.49%)</title><rect x="94" y="228" width="6" height="15" fill="rgb(211,60,19)"/><text x="97.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.49%)</title><rect x="94" y="244" width="6" height="15" fill="rgb(213,158,43)"/><text x="97.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.49%)</title><rect x="94" y="260" width="6" height="15" fill="rgb(212,225,50)"/><text x="97.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.49%)</title><rect x="94" y="276" width="6" height="15" fill="rgb(242,127,14)"/><text x="97.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.49%)</title><rect x="94" y="292" width="6" height="15" fill="rgb(206,171,0)"/><text x="97.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.25%)</title><rect x="97" y="308" width="3" height="15" fill="rgb(218,178,2)"/><text x="100.00" y="318.50"></text></g><g><title>0x7fc132c94d6f (libc-2.29.so) (1 samples, 0.25%)</title><rect x="97" y="324" width="3" height="15" fill="rgb(247,202,4)"/><text x="100.00" y="334.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 3.21%)</title><rect x="100" y="212" width="38" height="15" fill="rgb(245,15,38)"/><text x="103.00" y="222.50">dge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.25%)</title><rect x="138" y="244" width="3" height="15" fill="rgb(234,41,37)"/><text x="141.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.25%)</title><rect x="138" y="260" width="3" height="15" fill="rgb(250,60,33)"/><text x="141.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.25%)</title><rect x="138" y="276" width="3" height="15" fill="rgb(224,213,43)"/><text x="141.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.25%)</title><rect x="141" y="324" width="3" height="15" fill="rgb(208,169,1)"/><text x="144.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.25%)</title><rect x="141" y="340" width="3" height="15" fill="rgb(250,149,32)"/><text x="144.00" y="350.50"></text></g><g><title>0x7fc132c75b12 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="144" y="404" width="2" height="15" fill="rgb(254,222,52)"/><text x="147.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (3 samples, 0.74%)</title><rect x="141" y="276" width="8" height="15" fill="rgb(224,34,33)"/><text x="144.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (3 samples, 0.74%)</title><rect x="141" y="292" width="8" height="15" fill="rgb(230,166,45)"/><text x="144.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.74%)</title><rect x="141" y="308" width="8" height="15" fill="rgb(206,13,11)"/><text x="144.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.49%)</title><rect x="144" y="324" width="5" height="15" fill="rgb(228,11,11)"/><text x="147.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.49%)</title><rect x="144" y="340" width="5" height="15" fill="rgb(248,65,41)"/><text x="147.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.49%)</title><rect x="144" y="356" width="5" height="15" fill="rgb(212,6,54)"/><text x="147.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.49%)</title><rect x="144" y="372" width="5" height="15" fill="rgb(247,99,38)"/><text x="147.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.49%)</title><rect x="144" y="388" width="5" height="15" fill="rgb(230,128,47)"/><text x="147.00" y="398.50"></text></g><g><title>0x7fc132c75b35 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="146" y="404" width="3" height="15" fill="rgb(231,171,13)"/><text x="149.00" y="414.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (24 samples, 5.93%)</title><rect x="141" y="244" width="70" height="15" fill="rgb(224,30,44)"/><text x="144.00" y="254.50">PyUFunc..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (24 samples, 5.93%)</title><rect x="141" y="260" width="70" height="15" fill="rgb(223,132,18)"/><text x="144.00" y="270.50">NpyIter..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (21 samples, 5.19%)</title><rect x="149" y="276" width="62" height="15" fill="rgb(216,196,38)"/><text x="152.00" y="286.50">npyite..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (21 samples, 5.19%)</title><rect x="149" y="292" width="62" height="15" fill="rgb(221,9,27)"/><text x="152.00" y="302.50">PyArra..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (21 samples, 5.19%)</title><rect x="149" y="308" width="62" height="15" fill="rgb(238,197,22)"/><text x="152.00" y="318.50">raw_ar..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (21 samples, 5.19%)</title><rect x="149" y="324" width="62" height="15" fill="rgb(216,103,2)"/><text x="152.00" y="334.50">_align..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.25%)</title><rect x="211" y="244" width="2" height="15" fill="rgb(228,211,33)"/><text x="214.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:111) (1 samples, 0.25%)</title><rect x="211" y="260" width="2" height="15" fill="rgb(246,93,40)"/><text x="214.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (73 samples, 18.02%)</title><rect x="42" y="164" width="212" height="15" fill="rgb(217,90,19)"/><text x="45.00" y="174.50">_predict_proba_lr (sklearn/..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (56 samples, 13.83%)</title><rect x="91" y="180" width="163" height="15" fill="rgb(242,23,39)"/><text x="94.00" y="190.50">decision_function (sk..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (53 samples, 13.09%)</title><rect x="100" y="196" width="154" height="15" fill="rgb(211,180,33)"/><text x="103.00" y="206.50">safe_sparse_dot (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (40 samples, 9.88%)</title><rect x="138" y="212" width="116" height="15" fill="rgb(254,68,26)"/><text x="141.00" y="222.50">ufunc_generic_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (40 samples, 9.88%)</title><rect x="138" y="228" width="116" height="15" fill="rgb(227,68,35)"/><text x="141.00" y="238.50">PyUFunc_Generi..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (14 samples, 3.46%)</title><rect x="213" y="244" width="41" height="15" fill="rgb(239,226,4)"/><text x="216.00" y="254.50">PyU..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (14 samples, 3.46%)</title><rect x="213" y="260" width="41" height="15" fill="rgb(214,162,29)"/><text x="216.00" y="270.50">DOU..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.46%)</title><rect x="213" y="276" width="41" height="15" fill="rgb(229,102,26)"/><text x="216.00" y="286.50">cbl..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.46%)</title><rect x="213" y="292" width="41" height="15" fill="rgb(228,15,18)"/><text x="216.00" y="302.50">dge..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.46%)</title><rect x="213" y="308" width="41" height="15" fill="rgb(217,227,13)"/><text x="216.00" y="318.50">dge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.25%)</title><rect x="254" y="196" width="3" height="15" fill="rgb(207,61,50)"/><text x="257.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.25%)</title><rect x="254" y="212" width="3" height="15" fill="rgb(239,3,7)"/><text x="257.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.25%)</title><rect x="257" y="196" width="3" height="15" fill="rgb(219,132,6)"/><text x="260.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.25%)</title><rect x="257" y="212" width="3" height="15" fill="rgb(237,40,37)"/><text x="260.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.25%)</title><rect x="257" y="228" width="3" height="15" fill="rgb(219,29,50)"/><text x="260.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.25%)</title><rect x="257" y="244" width="3" height="15" fill="rgb(209,102,8)"/><text x="260.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.25%)</title><rect x="257" y="260" width="3" height="15" fill="rgb(217,215,38)"/><text x="260.00" y="270.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.25%)</title><rect x="257" y="276" width="3" height="15" fill="rgb(247,34,42)"/><text x="260.00" y="286.50"></text></g><g><title>0x7fc11df5d9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="260" y="244" width="3" height="15" fill="rgb(229,53,5)"/><text x="263.00" y="254.50"></text></g><g><title>0x7fc11df5d9dd (?) (1 samples, 0.25%)</title><rect x="263" y="244" width="3" height="15" fill="rgb(230,159,25)"/><text x="266.00" y="254.50"></text></g><g><title>0x7fc11df7e265 (?) (1 samples, 0.25%)</title><rect x="263" y="260" width="3" height="15" fill="rgb(246,108,21)"/><text x="266.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.25%)</title><rect x="263" y="276" width="3" height="15" fill="rgb(209,43,40)"/><text x="266.00" y="286.50"></text></g><g><title>0x7fc132e46be7 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="263" y="292" width="3" height="15" fill="rgb(253,167,45)"/><text x="266.00" y="302.50"></text></g><g><title>0x7fc11df3bfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.49%)</title><rect x="269" y="276" width="6" height="15" fill="rgb(254,192,7)"/><text x="272.00" y="286.50"></text></g><g><title>0x7fc132dc01b0 (libm-2.29.so) (3 samples, 0.74%)</title><rect x="283" y="292" width="9" height="15" fill="rgb(248,194,50)"/><text x="286.00" y="302.50"></text></g><g><title>0x7fc132e46c07 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="292" y="292" width="3" height="15" fill="rgb(236,91,47)"/><text x="295.00" y="302.50"></text></g><g><title>0x7fc132e46c56 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="295" y="292" width="3" height="15" fill="rgb(242,173,21)"/><text x="298.00" y="302.50"></text></g><g><title>0x7fc11df7e265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.96%)</title><rect x="266" y="260" width="35" height="15" fill="rgb(230,144,51)"/><text x="269.00" y="270.50">0x..</text></g><g><title>exp (libm-2.29.so) (9 samples, 2.22%)</title><rect x="275" y="276" width="26" height="15" fill="rgb(245,80,25)"/><text x="278.00" y="286.50">e..</text></g><g><title>0x7fc132e46c7b (libm-2.29.so) (1 samples, 0.25%)</title><rect x="298" y="292" width="3" height="15" fill="rgb(253,70,11)"/><text x="301.00" y="302.50"></text></g><g><title>0x7fc11df7e275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.49%)</title><rect x="301" y="260" width="6" height="15" fill="rgb(254,180,49)"/><text x="304.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (26 samples, 6.42%)</title><rect x="254" y="180" width="76" height="15" fill="rgb(238,8,21)"/><text x="257.00" y="190.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (24 samples, 5.93%)</title><rect x="260" y="196" width="70" height="15" fill="rgb(232,149,29)"/><text x="263.00" y="206.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (24 samples, 5.93%)</title><rect x="260" y="212" width="70" height="15" fill="rgb(209,114,30)"/><text x="263.00" y="222.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (24 samples, 5.93%)</title><rect x="260" y="228" width="70" height="15" fill="rgb(254,187,35)"/><text x="263.00" y="238.50">trivial..</text></g><g><title>0x7fc11df5d9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 5.43%)</title><rect x="266" y="244" width="64" height="15" fill="rgb(250,15,4)"/><text x="269.00" y="254.50">0x7fc11..</text></g><g><title>0x7fc11df7e279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.98%)</title><rect x="307" y="260" width="23" height="15" fill="rgb(229,213,50)"/><text x="310.00" y="270.50">0..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (27 samples, 6.67%)</title><rect x="254" y="164" width="79" height="15" fill="rgb(210,86,18)"/><text x="257.00" y="174.50">_predict_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.25%)</title><rect x="330" y="180" width="3" height="15" fill="rgb(222,83,2)"/><text x="333.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.25%)</title><rect x="330" y="196" width="3" height="15" fill="rgb(216,128,1)"/><text x="333.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.25%)</title><rect x="336" y="180" width="3" height="15" fill="rgb(248,180,52)"/><text x="339.00" y="190.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.25%)</title><rect x="339" y="228" width="3" height="15" fill="rgb(249,123,53)"/><text x="342.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.25%)</title><rect x="339" y="244" width="3" height="15" fill="rgb(237,100,2)"/><text x="342.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.25%)</title><rect x="339" y="260" width="3" height="15" fill="rgb(242,203,25)"/><text x="342.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.25%)</title><rect x="339" y="276" width="3" height="15" fill="rgb(245,180,0)"/><text x="342.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.25%)</title><rect x="339" y="292" width="3" height="15" fill="rgb(221,220,19)"/><text x="342.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.25%)</title><rect x="339" y="308" width="3" height="15" fill="rgb(223,199,21)"/><text x="342.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.25%)</title><rect x="342" y="260" width="3" height="15" fill="rgb(242,22,9)"/><text x="345.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.25%)</title><rect x="342" y="276" width="3" height="15" fill="rgb(209,133,32)"/><text x="345.00" y="286.50"></text></g><g><title>0x7fc132c9514a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="342" y="292" width="3" height="15" fill="rgb(207,201,33)"/><text x="345.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.25%)</title><rect x="345" y="276" width="2" height="15" fill="rgb(248,131,32)"/><text x="348.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.25%)</title><rect x="345" y="292" width="2" height="15" fill="rgb(236,21,31)"/><text x="348.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.25%)</title><rect x="345" y="308" width="2" height="15" fill="rgb(217,103,49)"/><text x="348.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.25%)</title><rect x="345" y="324" width="2" height="15" fill="rgb(216,105,14)"/><text x="348.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.25%)</title><rect x="345" y="340" width="2" height="15" fill="rgb(231,25,51)"/><text x="348.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.25%)</title><rect x="345" y="356" width="2" height="15" fill="rgb(221,52,23)"/><text x="348.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.25%)</title><rect x="345" y="372" width="2" height="15" fill="rgb(223,99,53)"/><text x="348.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.25%)</title><rect x="345" y="388" width="2" height="15" fill="rgb(250,190,2)"/><text x="348.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="345" y="404" width="2" height="15" fill="rgb(253,7,6)"/><text x="348.00" y="414.50"></text></g><g><title>0x7fc132c762a3 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="345" y="420" width="2" height="15" fill="rgb(246,179,38)"/><text x="348.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.49%)</title><rect x="347" y="308" width="6" height="15" fill="rgb(231,49,39)"/><text x="350.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.25%)</title><rect x="353" y="308" width="3" height="15" fill="rgb(241,101,2)"/><text x="356.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.25%)</title><rect x="356" y="308" width="3" height="15" fill="rgb(249,160,12)"/><text x="359.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.25%)</title><rect x="356" y="324" width="3" height="15" fill="rgb(212,207,28)"/><text x="359.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.25%)</title><rect x="359" y="308" width="3" height="15" fill="rgb(219,7,16)"/><text x="362.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (9 samples, 2.22%)</title><rect x="339" y="180" width="26" height="15" fill="rgb(214,89,17)"/><text x="342.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 2.22%)</title><rect x="339" y="196" width="26" height="15" fill="rgb(216,35,42)"/><text x="342.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 2.22%)</title><rect x="339" y="212" width="26" height="15" fill="rgb(232,153,38)"/><text x="342.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.98%)</title><rect x="342" y="228" width="23" height="15" fill="rgb(237,0,50)"/><text x="345.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.98%)</title><rect x="342" y="244" width="23" height="15" fill="rgb(221,66,28)"/><text x="345.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.73%)</title><rect x="345" y="260" width="20" height="15" fill="rgb(238,15,51)"/><text x="348.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 1.48%)</title><rect x="347" y="276" width="18" height="15" fill="rgb(244,181,37)"/><text x="350.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 1.48%)</title><rect x="347" y="292" width="18" height="15" fill="rgb(249,48,18)"/><text x="350.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.25%)</title><rect x="362" y="308" width="3" height="15" fill="rgb(249,88,2)"/><text x="365.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.25%)</title><rect x="365" y="196" width="3" height="15" fill="rgb(227,155,24)"/><text x="368.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.25%)</title><rect x="365" y="212" width="3" height="15" fill="rgb(216,170,14)"/><text x="368.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.25%)</title><rect x="368" y="244" width="3" height="15" fill="rgb(222,123,54)"/><text x="371.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="368" y="260" width="3" height="15" fill="rgb(217,48,47)"/><text x="371.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.49%)</title><rect x="368" y="228" width="6" height="15" fill="rgb(218,126,10)"/><text x="371.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:223) (1 samples, 0.25%)</title><rect x="371" y="244" width="3" height="15" fill="rgb(249,167,47)"/><text x="374.00" y="254.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.25%)</title><rect x="374" y="276" width="3" height="15" fill="rgb(217,2,50)"/><text x="377.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.49%)</title><rect x="374" y="228" width="6" height="15" fill="rgb(223,172,12)"/><text x="377.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.49%)</title><rect x="374" y="244" width="6" height="15" fill="rgb(234,108,42)"/><text x="377.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.49%)</title><rect x="374" y="260" width="6" height="15" fill="rgb(208,0,20)"/><text x="377.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.25%)</title><rect x="377" y="276" width="3" height="15" fill="rgb(245,154,13)"/><text x="380.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.25%)</title><rect x="377" y="292" width="3" height="15" fill="rgb(229,70,39)"/><text x="380.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:38) (129 samples, 31.85%)</title><rect x="10" y="52" width="375" height="15" fill="rgb(220,97,28)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:37) (129 samples, 31.85%)</title><rect x="10" y="68" width="375" height="15" fill="rgb(233,202,32)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:29) (128 samples, 31.60%)</title><rect x="12" y="84" width="373" height="15" fill="rgb(254,33,39)"/><text x="15.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:23) (126 samples, 31.11%)</title><rect x="18" y="100" width="367" height="15" fill="rgb(225,146,8)"/><text x="21.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (126 samples, 31.11%)</title><rect x="18" y="116" width="367" height="15" fill="rgb(240,182,45)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (125 samples, 30.86%)</title><rect x="21" y="132" width="364" height="15" fill="rgb(215,51,0)"/><text x="24.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (118 samples, 29.14%)</title><rect x="42" y="148" width="343" height="15" fill="rgb(206,137,37)"/><text x="45.00" y="158.50">predict_proba (sklearn/linear_model/_logistic...</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (18 samples, 4.44%)</title><rect x="333" y="164" width="52" height="15" fill="rgb(209,61,26)"/><text x="336.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.73%)</title><rect x="365" y="180" width="20" height="15" fill="rgb(233,187,34)"/><text x="368.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.48%)</title><rect x="368" y="196" width="17" height="15" fill="rgb(229,20,48)"/><text x="371.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.48%)</title><rect x="368" y="212" width="17" height="15" fill="rgb(226,103,17)"/><text x="371.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.49%)</title><rect x="380" y="228" width="5" height="15" fill="rgb(250,203,5)"/><text x="383.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.49%)</title><rect x="380" y="244" width="5" height="15" fill="rgb(248,129,29)"/><text x="383.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.49%)</title><rect x="380" y="260" width="5" height="15" fill="rgb(210,131,29)"/><text x="383.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.49%)</title><rect x="380" y="276" width="5" height="15" fill="rgb(210,59,33)"/><text x="383.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.49%)</title><rect x="380" y="292" width="5" height="15" fill="rgb(235,36,14)"/><text x="383.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:1) (1 samples, 0.25%)</title><rect x="385" y="148" width="3" height="15" fill="rgb(205,7,16)"/><text x="388.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="385" y="164" width="3" height="15" fill="rgb(251,115,37)"/><text x="388.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="385" y="180" width="3" height="15" fill="rgb(247,166,27)"/><text x="388.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="385" y="196" width="3" height="15" fill="rgb(215,193,10)"/><text x="388.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="385" y="212" width="3" height="15" fill="rgb(233,104,4)"/><text x="388.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="385" y="228" width="3" height="15" fill="rgb(242,24,20)"/><text x="388.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:148) (1 samples, 0.25%)</title><rect x="385" y="244" width="3" height="15" fill="rgb(218,91,48)"/><text x="388.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="385" y="260" width="3" height="15" fill="rgb(237,120,25)"/><text x="388.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="385" y="276" width="3" height="15" fill="rgb(217,153,7)"/><text x="388.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="385" y="292" width="3" height="15" fill="rgb(225,53,15)"/><text x="388.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="385" y="308" width="3" height="15" fill="rgb(235,156,4)"/><text x="388.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="385" y="324" width="3" height="15" fill="rgb(206,125,13)"/><text x="388.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="385" y="340" width="3" height="15" fill="rgb(205,175,48)"/><text x="388.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="385" y="356" width="3" height="15" fill="rgb(211,159,30)"/><text x="388.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/fft/__init__.py:188) (1 samples, 0.25%)</title><rect x="385" y="372" width="3" height="15" fill="rgb(219,33,54)"/><text x="388.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="385" y="388" width="3" height="15" fill="rgb(231,97,19)"/><text x="388.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="385" y="404" width="3" height="15" fill="rgb(219,8,24)"/><text x="388.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="385" y="420" width="3" height="15" fill="rgb(220,143,8)"/><text x="388.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.25%)</title><rect x="385" y="436" width="3" height="15" fill="rgb(215,63,15)"/><text x="388.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.25%)</title><rect x="385" y="452" width="3" height="15" fill="rgb(248,104,18)"/><text x="388.00" y="462.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.25%)</title><rect x="385" y="468" width="3" height="15" fill="rgb(233,47,31)"/><text x="388.00" y="478.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.25%)</title><rect x="388" y="916" width="3" height="15" fill="rgb(226,186,42)"/><text x="391.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.25%)</title><rect x="388" y="932" width="3" height="15" fill="rgb(216,107,30)"/><text x="391.00" y="942.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.25%)</title><rect x="391" y="964" width="3" height="15" fill="rgb(221,49,17)"/><text x="394.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.25%)</title><rect x="391" y="980" width="3" height="15" fill="rgb(226,46,28)"/><text x="394.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.74%)</title><rect x="388" y="852" width="9" height="15" fill="rgb(245,80,31)"/><text x="391.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.74%)</title><rect x="388" y="868" width="9" height="15" fill="rgb(219,99,9)"/><text x="391.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.74%)</title><rect x="388" y="884" width="9" height="15" fill="rgb(254,122,24)"/><text x="391.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.74%)</title><rect x="388" y="900" width="9" height="15" fill="rgb(222,108,23)"/><text x="391.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.49%)</title><rect x="391" y="916" width="6" height="15" fill="rgb(210,13,26)"/><text x="394.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.49%)</title><rect x="391" y="932" width="6" height="15" fill="rgb(241,189,13)"/><text x="394.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.49%)</title><rect x="391" y="948" width="6" height="15" fill="rgb(228,167,49)"/><text x="394.00" y="958.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.25%)</title><rect x="394" y="964" width="3" height="15" fill="rgb(208,221,48)"/><text x="397.00" y="974.50"></text></g><g><title>_get_version (pkg_resources/__init__.py:2772) (1 samples, 0.25%)</title><rect x="394" y="980" width="3" height="15" fill="rgb(254,22,15)"/><text x="397.00" y="990.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py:2558) (1 samples, 0.25%)</title><rect x="394" y="996" width="3" height="15" fill="rgb(250,98,50)"/><text x="397.00" y="1006.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.25%)</title><rect x="394" y="1012" width="3" height="15" fill="rgb(208,109,21)"/><text x="397.00" y="1022.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.25%)</title><rect x="394" y="1028" width="3" height="15" fill="rgb(220,188,48)"/><text x="397.00" y="1038.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.25%)</title><rect x="394" y="1044" width="3" height="15" fill="rgb(254,149,27)"/><text x="397.00" y="1054.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.25%)</title><rect x="397" y="884" width="3" height="15" fill="rgb(250,126,34)"/><text x="400.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.25%)</title><rect x="397" y="900" width="3" height="15" fill="rgb(227,198,54)"/><text x="400.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.25%)</title><rect x="397" y="916" width="3" height="15" fill="rgb(219,210,48)"/><text x="400.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.25%)</title><rect x="397" y="932" width="3" height="15" fill="rgb(239,82,14)"/><text x="400.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.49%)</title><rect x="397" y="852" width="6" height="15" fill="rgb(241,121,0)"/><text x="400.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.49%)</title><rect x="397" y="868" width="6" height="15" fill="rgb(217,193,28)"/><text x="400.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.25%)</title><rect x="400" y="884" width="3" height="15" fill="rgb(243,191,17)"/><text x="403.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.25%)</title><rect x="400" y="900" width="3" height="15" fill="rgb(210,227,53)"/><text x="403.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (6 samples, 1.48%)</title><rect x="388" y="148" width="18" height="15" fill="rgb(211,198,21)"/><text x="391.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="164" width="18" height="15" fill="rgb(253,208,38)"/><text x="391.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.48%)</title><rect x="388" y="180" width="18" height="15" fill="rgb(237,167,33)"/><text x="391.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="196" width="18" height="15" fill="rgb(234,71,36)"/><text x="391.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="212" width="18" height="15" fill="rgb(209,171,44)"/><text x="391.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="388" y="228" width="18" height="15" fill="rgb(223,48,15)"/><text x="391.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="388" y="244" width="18" height="15" fill="rgb(247,25,32)"/><text x="391.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="388" y="260" width="18" height="15" fill="rgb(214,203,2)"/><text x="391.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="276" width="18" height="15" fill="rgb(207,143,42)"/><text x="391.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.48%)</title><rect x="388" y="292" width="18" height="15" fill="rgb(254,139,47)"/><text x="391.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="308" width="18" height="15" fill="rgb(211,109,27)"/><text x="391.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="388" y="324" width="18" height="15" fill="rgb(207,149,50)"/><text x="391.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="388" y="340" width="18" height="15" fill="rgb(244,202,37)"/><text x="391.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="388" y="356" width="18" height="15" fill="rgb(221,66,43)"/><text x="391.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="372" width="18" height="15" fill="rgb(223,141,28)"/><text x="391.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.48%)</title><rect x="388" y="388" width="18" height="15" fill="rgb(221,32,44)"/><text x="391.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="404" width="18" height="15" fill="rgb(228,64,39)"/><text x="391.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="388" y="420" width="18" height="15" fill="rgb(243,4,29)"/><text x="391.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="388" y="436" width="18" height="15" fill="rgb(219,126,38)"/><text x="391.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="388" y="452" width="18" height="15" fill="rgb(208,78,24)"/><text x="391.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="468" width="18" height="15" fill="rgb(216,127,4)"/><text x="391.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.48%)</title><rect x="388" y="484" width="18" height="15" fill="rgb(216,189,10)"/><text x="391.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="500" width="18" height="15" fill="rgb(209,151,22)"/><text x="391.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="388" y="516" width="18" height="15" fill="rgb(241,99,43)"/><text x="391.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="388" y="532" width="18" height="15" fill="rgb(230,157,18)"/><text x="391.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="388" y="548" width="18" height="15" fill="rgb(212,135,54)"/><text x="391.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="564" width="18" height="15" fill="rgb(246,87,31)"/><text x="391.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.48%)</title><rect x="388" y="580" width="18" height="15" fill="rgb(212,19,8)"/><text x="391.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="596" width="18" height="15" fill="rgb(241,100,6)"/><text x="391.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.48%)</title><rect x="388" y="612" width="18" height="15" fill="rgb(247,155,37)"/><text x="391.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="628" width="18" height="15" fill="rgb(240,170,15)"/><text x="391.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="644" width="18" height="15" fill="rgb(222,135,20)"/><text x="391.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="388" y="660" width="18" height="15" fill="rgb(217,225,47)"/><text x="391.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="388" y="676" width="18" height="15" fill="rgb(235,50,45)"/><text x="391.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="388" y="692" width="18" height="15" fill="rgb(250,20,46)"/><text x="391.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="708" width="18" height="15" fill="rgb(239,167,8)"/><text x="391.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.48%)</title><rect x="388" y="724" width="18" height="15" fill="rgb(253,111,9)"/><text x="391.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="388" y="740" width="18" height="15" fill="rgb(240,48,38)"/><text x="391.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="388" y="756" width="18" height="15" fill="rgb(221,90,53)"/><text x="391.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="388" y="772" width="18" height="15" fill="rgb(247,10,8)"/><text x="391.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="388" y="788" width="18" height="15" fill="rgb(207,164,38)"/><text x="391.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="388" y="804" width="18" height="15" fill="rgb(227,168,7)"/><text x="391.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.48%)</title><rect x="388" y="820" width="18" height="15" fill="rgb(214,209,35)"/><text x="391.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.48%)</title><rect x="388" y="836" width="18" height="15" fill="rgb(210,93,47)"/><text x="391.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.25%)</title><rect x="403" y="852" width="3" height="15" fill="rgb(253,93,9)"/><text x="406.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.25%)</title><rect x="403" y="868" width="3" height="15" fill="rgb(249,224,32)"/><text x="406.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.25%)</title><rect x="403" y="884" width="3" height="15" fill="rgb(244,144,23)"/><text x="406.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.25%)</title><rect x="403" y="900" width="3" height="15" fill="rgb(239,158,41)"/><text x="406.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.25%)</title><rect x="403" y="916" width="3" height="15" fill="rgb(209,47,25)"/><text x="406.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.25%)</title><rect x="403" y="932" width="3" height="15" fill="rgb(246,176,37)"/><text x="406.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.25%)</title><rect x="403" y="948" width="3" height="15" fill="rgb(251,109,50)"/><text x="406.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.25%)</title><rect x="403" y="964" width="3" height="15" fill="rgb(239,114,44)"/><text x="406.00" y="974.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.25%)</title><rect x="406" y="1780" width="3" height="15" fill="rgb(209,117,13)"/><text x="409.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="406" y="1796" width="3" height="15" fill="rgb(243,81,10)"/><text x="409.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="406" y="1812" width="3" height="15" fill="rgb(245,144,50)"/><text x="409.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="406" y="1828" width="3" height="15" fill="rgb(226,171,46)"/><text x="409.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="406" y="1844" width="3" height="15" fill="rgb(224,72,24)"/><text x="409.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="406" y="1860" width="3" height="15" fill="rgb(249,40,17)"/><text x="409.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.25%)</title><rect x="406" y="1876" width="3" height="15" fill="rgb(230,36,7)"/><text x="409.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="406" y="1892" width="3" height="15" fill="rgb(206,226,43)"/><text x="409.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="406" y="1908" width="3" height="15" fill="rgb(217,2,20)"/><text x="409.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="406" y="1924" width="3" height="15" fill="rgb(223,209,41)"/><text x="409.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="406" y="1940" width="3" height="15" fill="rgb(224,9,28)"/><text x="409.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="406" y="1956" width="3" height="15" fill="rgb(248,152,26)"/><text x="409.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="406" y="1972" width="3" height="15" fill="rgb(226,88,1)"/><text x="409.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="406" y="1988" width="3" height="15" fill="rgb(213,62,11)"/><text x="409.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.25%)</title><rect x="406" y="2004" width="3" height="15" fill="rgb(218,197,42)"/><text x="409.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.25%)</title><rect x="406" y="2020" width="3" height="15" fill="rgb(250,32,0)"/><text x="409.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.25%)</title><rect x="406" y="2036" width="3" height="15" fill="rgb(216,166,49)"/><text x="409.00" y="2046.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.25%)</title><rect x="406" y="2052" width="3" height="15" fill="rgb(222,38,48)"/><text x="409.00" y="2062.50"></text></g><g><title>search (re.py:183) (1 samples, 0.25%)</title><rect x="406" y="2068" width="3" height="15" fill="rgb(248,98,9)"/><text x="409.00" y="2078.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.25%)</title><rect x="406" y="2084" width="3" height="15" fill="rgb(225,3,22)"/><text x="409.00" y="2094.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.25%)</title><rect x="406" y="2100" width="3" height="15" fill="rgb(245,213,37)"/><text x="409.00" y="2110.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.25%)</title><rect x="406" y="2116" width="3" height="15" fill="rgb(251,4,2)"/><text x="409.00" y="2126.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="406" y="2132" width="3" height="15" fill="rgb(228,175,28)"/><text x="409.00" y="2142.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.25%)</title><rect x="406" y="2148" width="3" height="15" fill="rgb(240,66,3)"/><text x="409.00" y="2158.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="406" y="2164" width="3" height="15" fill="rgb(253,92,54)"/><text x="409.00" y="2174.50"></text></g><g><title>_parse (sre_parse.py:477) (1 samples, 0.25%)</title><rect x="406" y="2180" width="3" height="15" fill="rgb(208,61,17)"/><text x="409.00" y="2190.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.25%)</title><rect x="406" y="2196" width="3" height="15" fill="rgb(241,222,7)"/><text x="409.00" y="2206.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.49%)</title><rect x="406" y="724" width="6" height="15" fill="rgb(207,92,54)"/><text x="409.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="740" width="6" height="15" fill="rgb(247,32,37)"/><text x="409.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="756" width="6" height="15" fill="rgb(216,196,9)"/><text x="409.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="772" width="6" height="15" fill="rgb(224,117,27)"/><text x="409.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="788" width="6" height="15" fill="rgb(218,29,23)"/><text x="409.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="804" width="6" height="15" fill="rgb(213,222,51)"/><text x="409.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.49%)</title><rect x="406" y="820" width="6" height="15" fill="rgb(240,101,53)"/><text x="409.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="836" width="6" height="15" fill="rgb(206,207,19)"/><text x="409.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="852" width="6" height="15" fill="rgb(216,29,19)"/><text x="409.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="868" width="6" height="15" fill="rgb(250,174,32)"/><text x="409.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="884" width="6" height="15" fill="rgb(206,118,7)"/><text x="409.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="900" width="6" height="15" fill="rgb(207,179,38)"/><text x="409.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.49%)</title><rect x="406" y="916" width="6" height="15" fill="rgb(205,35,20)"/><text x="409.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="932" width="6" height="15" fill="rgb(225,15,48)"/><text x="409.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="948" width="6" height="15" fill="rgb(208,49,8)"/><text x="409.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="964" width="6" height="15" fill="rgb(234,177,42)"/><text x="409.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="980" width="6" height="15" fill="rgb(242,24,25)"/><text x="409.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="996" width="6" height="15" fill="rgb(243,227,9)"/><text x="409.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.49%)</title><rect x="406" y="1012" width="6" height="15" fill="rgb(248,102,6)"/><text x="409.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1028" width="6" height="15" fill="rgb(211,86,31)"/><text x="409.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1044" width="6" height="15" fill="rgb(252,72,17)"/><text x="409.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1060" width="6" height="15" fill="rgb(231,111,28)"/><text x="409.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1076" width="6" height="15" fill="rgb(247,167,4)"/><text x="409.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1092" width="6" height="15" fill="rgb(250,164,43)"/><text x="409.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.49%)</title><rect x="406" y="1108" width="6" height="15" fill="rgb(212,82,21)"/><text x="409.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1124" width="6" height="15" fill="rgb(232,214,41)"/><text x="409.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1140" width="6" height="15" fill="rgb(235,184,33)"/><text x="409.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1156" width="6" height="15" fill="rgb(226,120,54)"/><text x="409.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1172" width="6" height="15" fill="rgb(240,125,29)"/><text x="409.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1188" width="6" height="15" fill="rgb(228,208,33)"/><text x="409.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.49%)</title><rect x="406" y="1204" width="6" height="15" fill="rgb(231,84,9)"/><text x="409.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1220" width="6" height="15" fill="rgb(223,67,38)"/><text x="409.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1236" width="6" height="15" fill="rgb(225,92,52)"/><text x="409.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1252" width="6" height="15" fill="rgb(243,14,22)"/><text x="409.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1268" width="6" height="15" fill="rgb(211,160,7)"/><text x="409.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1284" width="6" height="15" fill="rgb(222,98,42)"/><text x="409.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.49%)</title><rect x="406" y="1300" width="6" height="15" fill="rgb(209,116,16)"/><text x="409.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1316" width="6" height="15" fill="rgb(219,202,8)"/><text x="409.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1332" width="6" height="15" fill="rgb(245,75,28)"/><text x="409.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1348" width="6" height="15" fill="rgb(237,195,0)"/><text x="409.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1364" width="6" height="15" fill="rgb(251,198,5)"/><text x="409.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1380" width="6" height="15" fill="rgb(207,118,2)"/><text x="409.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.49%)</title><rect x="406" y="1396" width="6" height="15" fill="rgb(218,198,27)"/><text x="409.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1412" width="6" height="15" fill="rgb(238,192,24)"/><text x="409.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1428" width="6" height="15" fill="rgb(236,87,2)"/><text x="409.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1444" width="6" height="15" fill="rgb(216,170,27)"/><text x="409.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1460" width="6" height="15" fill="rgb(242,69,29)"/><text x="409.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1476" width="6" height="15" fill="rgb(207,73,30)"/><text x="409.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.49%)</title><rect x="406" y="1492" width="6" height="15" fill="rgb(209,131,53)"/><text x="409.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1508" width="6" height="15" fill="rgb(229,99,4)"/><text x="409.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1524" width="6" height="15" fill="rgb(206,21,16)"/><text x="409.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1540" width="6" height="15" fill="rgb(216,131,40)"/><text x="409.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1556" width="6" height="15" fill="rgb(219,167,44)"/><text x="409.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1572" width="6" height="15" fill="rgb(232,3,35)"/><text x="409.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (2 samples, 0.49%)</title><rect x="406" y="1588" width="6" height="15" fill="rgb(205,137,51)"/><text x="409.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1604" width="6" height="15" fill="rgb(207,127,44)"/><text x="409.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1620" width="6" height="15" fill="rgb(253,94,19)"/><text x="409.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1636" width="6" height="15" fill="rgb(206,210,42)"/><text x="409.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1652" width="6" height="15" fill="rgb(212,198,53)"/><text x="409.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1668" width="6" height="15" fill="rgb(239,57,20)"/><text x="409.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (2 samples, 0.49%)</title><rect x="406" y="1684" width="6" height="15" fill="rgb(232,97,38)"/><text x="409.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="406" y="1700" width="6" height="15" fill="rgb(221,34,45)"/><text x="409.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="406" y="1716" width="6" height="15" fill="rgb(227,38,45)"/><text x="409.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="406" y="1732" width="6" height="15" fill="rgb(239,171,7)"/><text x="409.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="406" y="1748" width="6" height="15" fill="rgb(223,166,53)"/><text x="409.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="406" y="1764" width="6" height="15" fill="rgb(211,46,25)"/><text x="409.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.25%)</title><rect x="409" y="1780" width="3" height="15" fill="rgb(224,121,9)"/><text x="412.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="409" y="1796" width="3" height="15" fill="rgb(230,165,41)"/><text x="412.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="409" y="1812" width="3" height="15" fill="rgb(214,44,18)"/><text x="412.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="409" y="1828" width="3" height="15" fill="rgb(240,81,34)"/><text x="412.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="409" y="1844" width="3" height="15" fill="rgb(219,224,10)"/><text x="412.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="409" y="1860" width="3" height="15" fill="rgb(242,86,24)"/><text x="412.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1654) (1 samples, 0.25%)</title><rect x="409" y="1876" width="3" height="15" fill="rgb(245,49,8)"/><text x="412.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.25%)</title><rect x="409" y="1892" width="3" height="15" fill="rgb(232,123,33)"/><text x="412.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.25%)</title><rect x="409" y="1908" width="3" height="15" fill="rgb(232,112,25)"/><text x="412.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1255) (1 samples, 0.25%)</title><rect x="409" y="1924" width="3" height="15" fill="rgb(221,122,48)"/><text x="412.00" y="1934.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.25%)</title><rect x="409" y="1940" width="3" height="15" fill="rgb(241,212,23)"/><text x="412.00" y="1950.50"></text></g><g><title>cleandoc (inspect.py:629) (1 samples, 0.25%)</title><rect x="409" y="1956" width="3" height="15" fill="rgb(243,141,10)"/><text x="412.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.74%)</title><rect x="406" y="436" width="8" height="15" fill="rgb(235,144,32)"/><text x="409.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="406" y="452" width="8" height="15" fill="rgb(233,203,24)"/><text x="409.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="406" y="468" width="8" height="15" fill="rgb(237,43,0)"/><text x="409.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="406" y="484" width="8" height="15" fill="rgb(233,177,8)"/><text x="409.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="406" y="500" width="8" height="15" fill="rgb(249,103,15)"/><text x="409.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="406" y="516" width="8" height="15" fill="rgb(249,173,28)"/><text x="409.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.74%)</title><rect x="406" y="532" width="8" height="15" fill="rgb(238,90,52)"/><text x="409.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="406" y="548" width="8" height="15" fill="rgb(205,121,18)"/><text x="409.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="406" y="564" width="8" height="15" fill="rgb(219,104,25)"/><text x="409.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="406" y="580" width="8" height="15" fill="rgb(229,2,19)"/><text x="409.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="406" y="596" width="8" height="15" fill="rgb(218,65,54)"/><text x="409.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="406" y="612" width="8" height="15" fill="rgb(209,64,15)"/><text x="409.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.74%)</title><rect x="406" y="628" width="8" height="15" fill="rgb(205,194,17)"/><text x="409.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="406" y="644" width="8" height="15" fill="rgb(253,101,37)"/><text x="409.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="406" y="660" width="8" height="15" fill="rgb(228,186,26)"/><text x="409.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="406" y="676" width="8" height="15" fill="rgb(214,207,45)"/><text x="409.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="406" y="692" width="8" height="15" fill="rgb(239,175,27)"/><text x="409.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="406" y="708" width="8" height="15" fill="rgb(224,163,30)"/><text x="409.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.25%)</title><rect x="412" y="724" width="2" height="15" fill="rgb(243,24,3)"/><text x="415.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="412" y="740" width="2" height="15" fill="rgb(248,23,33)"/><text x="415.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="412" y="756" width="2" height="15" fill="rgb(235,23,19)"/><text x="415.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="412" y="772" width="2" height="15" fill="rgb(222,66,20)"/><text x="415.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="412" y="788" width="2" height="15" fill="rgb(223,22,0)"/><text x="415.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="412" y="804" width="2" height="15" fill="rgb(232,50,34)"/><text x="415.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="412" y="820" width="2" height="15" fill="rgb(237,81,34)"/><text x="415.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="412" y="836" width="2" height="15" fill="rgb(240,174,10)"/><text x="415.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="412" y="852" width="2" height="15" fill="rgb(247,59,32)"/><text x="415.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.25%)</title><rect x="412" y="868" width="2" height="15" fill="rgb(225,152,2)"/><text x="415.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="412" y="884" width="2" height="15" fill="rgb(209,0,30)"/><text x="415.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="412" y="900" width="2" height="15" fill="rgb(221,180,8)"/><text x="415.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="412" y="916" width="2" height="15" fill="rgb(229,66,17)"/><text x="415.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="412" y="932" width="2" height="15" fill="rgb(240,212,12)"/><text x="415.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="412" y="948" width="2" height="15" fill="rgb(230,87,49)"/><text x="415.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:14) (1 samples, 0.25%)</title><rect x="412" y="964" width="2" height="15" fill="rgb(241,175,45)"/><text x="415.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="412" y="980" width="2" height="15" fill="rgb(235,152,46)"/><text x="415.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="412" y="996" width="2" height="15" fill="rgb(236,217,41)"/><text x="415.00" y="1006.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:208) (1 samples, 0.25%)</title><rect x="412" y="1012" width="2" height="15" fill="rgb(247,45,4)"/><text x="415.00" y="1022.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:108) (1 samples, 0.25%)</title><rect x="412" y="1028" width="2" height="15" fill="rgb(210,225,9)"/><text x="415.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.25%)</title><rect x="414" y="1108" width="3" height="15" fill="rgb(221,84,53)"/><text x="417.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="414" y="1124" width="3" height="15" fill="rgb(218,16,49)"/><text x="417.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="414" y="1140" width="3" height="15" fill="rgb(213,190,19)"/><text x="417.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="414" y="1156" width="3" height="15" fill="rgb(219,22,41)"/><text x="417.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="414" y="1172" width="3" height="15" fill="rgb(212,118,54)"/><text x="417.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="414" y="1188" width="3" height="15" fill="rgb(218,222,23)"/><text x="417.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.25%)</title><rect x="414" y="1204" width="3" height="15" fill="rgb(206,99,17)"/><text x="417.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="414" y="1220" width="3" height="15" fill="rgb(217,31,14)"/><text x="417.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="414" y="1236" width="3" height="15" fill="rgb(254,158,29)"/><text x="417.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="414" y="1252" width="3" height="15" fill="rgb(219,102,19)"/><text x="417.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="414" y="1268" width="3" height="15" fill="rgb(246,184,39)"/><text x="417.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="414" y="1284" width="3" height="15" fill="rgb(226,179,40)"/><text x="417.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.25%)</title><rect x="414" y="1300" width="3" height="15" fill="rgb(230,16,15)"/><text x="417.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.25%)</title><rect x="414" y="1316" width="3" height="15" fill="rgb(207,5,18)"/><text x="417.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.25%)</title><rect x="414" y="1332" width="3" height="15" fill="rgb(217,91,43)"/><text x="417.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.25%)</title><rect x="414" y="1348" width="3" height="15" fill="rgb(237,169,48)"/><text x="417.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.25%)</title><rect x="414" y="1364" width="3" height="15" fill="rgb(234,154,35)"/><text x="417.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.25%)</title><rect x="414" y="1380" width="3" height="15" fill="rgb(238,84,40)"/><text x="417.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.25%)</title><rect x="414" y="1396" width="3" height="15" fill="rgb(224,105,39)"/><text x="417.00" y="1406.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.25%)</title><rect x="417" y="1604" width="3" height="15" fill="rgb(221,57,37)"/><text x="420.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.25%)</title><rect x="417" y="1620" width="3" height="15" fill="rgb(248,162,15)"/><text x="420.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.25%)</title><rect x="417" y="1636" width="3" height="15" fill="rgb(216,93,14)"/><text x="420.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:4) (13 samples, 3.21%)</title><rect x="385" y="52" width="38" height="15" fill="rgb(243,80,47)"/><text x="388.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 3.21%)</title><rect x="385" y="68" width="38" height="15" fill="rgb(254,68,33)"/><text x="388.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 3.21%)</title><rect x="385" y="84" width="38" height="15" fill="rgb(210,157,23)"/><text x="388.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 3.21%)</title><rect x="385" y="100" width="38" height="15" fill="rgb(226,6,34)"/><text x="388.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 3.21%)</title><rect x="385" y="116" width="38" height="15" fill="rgb(247,93,14)"/><text x="388.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 3.21%)</title><rect x="385" y="132" width="38" height="15" fill="rgb(251,183,9)"/><text x="388.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (6 samples, 1.48%)</title><rect x="406" y="148" width="17" height="15" fill="rgb(252,135,4)"/><text x="409.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="406" y="164" width="17" height="15" fill="rgb(246,34,42)"/><text x="409.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="406" y="180" width="17" height="15" fill="rgb(223,66,48)"/><text x="409.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="406" y="196" width="17" height="15" fill="rgb(239,88,27)"/><text x="409.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="406" y="212" width="17" height="15" fill="rgb(235,219,46)"/><text x="409.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="406" y="228" width="17" height="15" fill="rgb(224,135,17)"/><text x="409.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.48%)</title><rect x="406" y="244" width="17" height="15" fill="rgb(207,103,3)"/><text x="409.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="406" y="260" width="17" height="15" fill="rgb(226,212,41)"/><text x="409.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="406" y="276" width="17" height="15" fill="rgb(226,210,28)"/><text x="409.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="406" y="292" width="17" height="15" fill="rgb(229,149,27)"/><text x="409.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="406" y="308" width="17" height="15" fill="rgb(242,112,5)"/><text x="409.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="406" y="324" width="17" height="15" fill="rgb(239,182,34)"/><text x="409.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.48%)</title><rect x="406" y="340" width="17" height="15" fill="rgb(220,70,6)"/><text x="409.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.48%)</title><rect x="406" y="356" width="17" height="15" fill="rgb(247,216,13)"/><text x="409.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.48%)</title><rect x="406" y="372" width="17" height="15" fill="rgb(252,116,21)"/><text x="409.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.48%)</title><rect x="406" y="388" width="17" height="15" fill="rgb(223,116,18)"/><text x="409.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.48%)</title><rect x="406" y="404" width="17" height="15" fill="rgb(245,115,22)"/><text x="409.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.48%)</title><rect x="406" y="420" width="17" height="15" fill="rgb(244,134,2)"/><text x="409.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.74%)</title><rect x="414" y="436" width="9" height="15" fill="rgb(227,187,47)"/><text x="417.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="452" width="9" height="15" fill="rgb(231,221,35)"/><text x="417.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.74%)</title><rect x="414" y="468" width="9" height="15" fill="rgb(223,166,32)"/><text x="417.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="484" width="9" height="15" fill="rgb(254,62,46)"/><text x="417.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="500" width="9" height="15" fill="rgb(244,142,45)"/><text x="417.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="414" y="516" width="9" height="15" fill="rgb(235,225,38)"/><text x="417.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="414" y="532" width="9" height="15" fill="rgb(251,22,24)"/><text x="417.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="414" y="548" width="9" height="15" fill="rgb(246,216,42)"/><text x="417.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="564" width="9" height="15" fill="rgb(252,30,23)"/><text x="417.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.74%)</title><rect x="414" y="580" width="9" height="15" fill="rgb(216,35,4)"/><text x="417.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="596" width="9" height="15" fill="rgb(213,30,53)"/><text x="417.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="414" y="612" width="9" height="15" fill="rgb(211,35,26)"/><text x="417.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="414" y="628" width="9" height="15" fill="rgb(207,196,28)"/><text x="417.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="414" y="644" width="9" height="15" fill="rgb(233,139,44)"/><text x="417.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="660" width="9" height="15" fill="rgb(243,100,44)"/><text x="417.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.74%)</title><rect x="414" y="676" width="9" height="15" fill="rgb(205,152,4)"/><text x="417.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="692" width="9" height="15" fill="rgb(252,204,44)"/><text x="417.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="414" y="708" width="9" height="15" fill="rgb(245,88,2)"/><text x="417.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="414" y="724" width="9" height="15" fill="rgb(205,5,13)"/><text x="417.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="414" y="740" width="9" height="15" fill="rgb(242,61,50)"/><text x="417.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="756" width="9" height="15" fill="rgb(224,141,49)"/><text x="417.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.74%)</title><rect x="414" y="772" width="9" height="15" fill="rgb(216,150,35)"/><text x="417.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="788" width="9" height="15" fill="rgb(223,76,11)"/><text x="417.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="414" y="804" width="9" height="15" fill="rgb(231,132,19)"/><text x="417.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="414" y="820" width="9" height="15" fill="rgb(234,58,17)"/><text x="417.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="414" y="836" width="9" height="15" fill="rgb(246,177,42)"/><text x="417.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="852" width="9" height="15" fill="rgb(241,149,48)"/><text x="417.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.74%)</title><rect x="414" y="868" width="9" height="15" fill="rgb(231,196,27)"/><text x="417.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="884" width="9" height="15" fill="rgb(230,175,35)"/><text x="417.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.74%)</title><rect x="414" y="900" width="9" height="15" fill="rgb(221,34,12)"/><text x="417.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="916" width="9" height="15" fill="rgb(247,169,52)"/><text x="417.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="932" width="9" height="15" fill="rgb(253,17,37)"/><text x="417.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="414" y="948" width="9" height="15" fill="rgb(240,0,41)"/><text x="417.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="414" y="964" width="9" height="15" fill="rgb(235,42,9)"/><text x="417.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="414" y="980" width="9" height="15" fill="rgb(239,5,43)"/><text x="417.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="996" width="9" height="15" fill="rgb(213,20,9)"/><text x="417.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.74%)</title><rect x="414" y="1012" width="9" height="15" fill="rgb(232,205,22)"/><text x="417.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.74%)</title><rect x="414" y="1028" width="9" height="15" fill="rgb(214,169,14)"/><text x="417.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.74%)</title><rect x="414" y="1044" width="9" height="15" fill="rgb(234,224,54)"/><text x="417.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.74%)</title><rect x="414" y="1060" width="9" height="15" fill="rgb(247,224,32)"/><text x="417.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.74%)</title><rect x="414" y="1076" width="9" height="15" fill="rgb(250,102,43)"/><text x="417.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.74%)</title><rect x="414" y="1092" width="9" height="15" fill="rgb(249,130,14)"/><text x="417.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.49%)</title><rect x="417" y="1108" width="6" height="15" fill="rgb(207,168,4)"/><text x="420.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.49%)</title><rect x="417" y="1124" width="6" height="15" fill="rgb(226,29,7)"/><text x="420.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="417" y="1140" width="6" height="15" fill="rgb(253,53,45)"/><text x="420.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="417" y="1156" width="6" height="15" fill="rgb(251,97,18)"/><text x="420.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="417" y="1172" width="6" height="15" fill="rgb(209,181,20)"/><text x="420.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="417" y="1188" width="6" height="15" fill="rgb(232,17,15)"/><text x="420.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="417" y="1204" width="6" height="15" fill="rgb(234,173,22)"/><text x="420.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="417" y="1220" width="6" height="15" fill="rgb(233,164,23)"/><text x="420.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.49%)</title><rect x="417" y="1236" width="6" height="15" fill="rgb(215,102,30)"/><text x="420.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.49%)</title><rect x="417" y="1252" width="6" height="15" fill="rgb(248,176,52)"/><text x="420.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="417" y="1268" width="6" height="15" fill="rgb(221,21,5)"/><text x="420.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="417" y="1284" width="6" height="15" fill="rgb(220,84,23)"/><text x="420.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="417" y="1300" width="6" height="15" fill="rgb(244,183,37)"/><text x="420.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="417" y="1316" width="6" height="15" fill="rgb(252,151,15)"/><text x="420.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="417" y="1332" width="6" height="15" fill="rgb(210,121,17)"/><text x="420.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="417" y="1348" width="6" height="15" fill="rgb(209,176,43)"/><text x="420.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.49%)</title><rect x="417" y="1364" width="6" height="15" fill="rgb(211,146,14)"/><text x="420.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="417" y="1380" width="6" height="15" fill="rgb(211,80,12)"/><text x="420.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="417" y="1396" width="6" height="15" fill="rgb(244,0,44)"/><text x="420.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="417" y="1412" width="6" height="15" fill="rgb(231,163,51)"/><text x="420.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="417" y="1428" width="6" height="15" fill="rgb(244,103,41)"/><text x="420.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="417" y="1444" width="6" height="15" fill="rgb(245,77,23)"/><text x="420.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.49%)</title><rect x="417" y="1460" width="6" height="15" fill="rgb(214,46,14)"/><text x="420.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.49%)</title><rect x="417" y="1476" width="6" height="15" fill="rgb(238,37,3)"/><text x="420.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.49%)</title><rect x="417" y="1492" width="6" height="15" fill="rgb(249,143,24)"/><text x="420.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.49%)</title><rect x="417" y="1508" width="6" height="15" fill="rgb(221,49,49)"/><text x="420.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.49%)</title><rect x="417" y="1524" width="6" height="15" fill="rgb(254,28,43)"/><text x="420.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.49%)</title><rect x="417" y="1540" width="6" height="15" fill="rgb(212,128,18)"/><text x="420.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.49%)</title><rect x="417" y="1556" width="6" height="15" fill="rgb(206,149,37)"/><text x="420.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (2 samples, 0.49%)</title><rect x="417" y="1572" width="6" height="15" fill="rgb(224,139,9)"/><text x="420.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.49%)</title><rect x="417" y="1588" width="6" height="15" fill="rgb(221,1,36)"/><text x="420.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:214) (1 samples, 0.25%)</title><rect x="420" y="1604" width="3" height="15" fill="rgb(240,81,37)"/><text x="423.00" y="1614.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="420" y="1620" width="3" height="15" fill="rgb(237,163,38)"/><text x="423.00" y="1630.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:28) (1 samples, 0.25%)</title><rect x="423" y="84" width="3" height="15" fill="rgb(251,183,1)"/><text x="426.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="423" y="100" width="3" height="15" fill="rgb(245,215,44)"/><text x="426.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.25%)</title><rect x="423" y="116" width="3" height="15" fill="rgb(208,68,7)"/><text x="426.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.25%)</title><rect x="423" y="132" width="3" height="15" fill="rgb(234,191,9)"/><text x="426.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.25%)</title><rect x="423" y="148" width="3" height="15" fill="rgb(254,179,41)"/><text x="426.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.25%)</title><rect x="423" y="164" width="3" height="15" fill="rgb(239,126,42)"/><text x="426.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.25%)</title><rect x="423" y="180" width="3" height="15" fill="rgb(251,223,50)"/><text x="426.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.25%)</title><rect x="423" y="196" width="3" height="15" fill="rgb(229,44,11)"/><text x="426.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="423" y="212" width="3" height="15" fill="rgb(245,168,6)"/><text x="426.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="423" y="228" width="3" height="15" fill="rgb(224,46,3)"/><text x="426.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="423" y="244" width="3" height="15" fill="rgb(252,0,33)"/><text x="426.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="423" y="260" width="3" height="15" fill="rgb(225,68,49)"/><text x="426.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="423" y="276" width="3" height="15" fill="rgb(246,111,11)"/><text x="426.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.25%)</title><rect x="423" y="292" width="3" height="15" fill="rgb(238,218,19)"/><text x="426.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="423" y="308" width="3" height="15" fill="rgb(233,78,26)"/><text x="426.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="423" y="324" width="3" height="15" fill="rgb(230,152,9)"/><text x="426.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="423" y="340" width="3" height="15" fill="rgb(230,29,7)"/><text x="426.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="423" y="356" width="3" height="15" fill="rgb(227,172,10)"/><text x="426.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="423" y="372" width="3" height="15" fill="rgb(209,68,22)"/><text x="426.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.25%)</title><rect x="423" y="388" width="3" height="15" fill="rgb(244,166,29)"/><text x="426.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.25%)</title><rect x="423" y="404" width="3" height="15" fill="rgb(221,59,1)"/><text x="426.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.25%)</title><rect x="423" y="420" width="3" height="15" fill="rgb(230,19,30)"/><text x="426.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.25%)</title><rect x="423" y="436" width="3" height="15" fill="rgb(226,96,29)"/><text x="426.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="423" y="452" width="3" height="15" fill="rgb(230,61,18)"/><text x="426.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:48) (1 samples, 0.25%)</title><rect x="423" y="468" width="3" height="15" fill="rgb(222,165,4)"/><text x="426.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.25%)</title><rect x="426" y="196" width="3" height="15" fill="rgb(226,56,45)"/><text x="429.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.25%)</title><rect x="426" y="212" width="3" height="15" fill="rgb(232,223,52)"/><text x="429.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.25%)</title><rect x="426" y="228" width="3" height="15" fill="rgb(238,4,24)"/><text x="429.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (1 samples, 0.25%)</title><rect x="426" y="244" width="3" height="15" fill="rgb(236,108,26)"/><text x="429.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.25%)</title><rect x="426" y="260" width="3" height="15" fill="rgb(218,156,26)"/><text x="429.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.25%)</title><rect x="426" y="276" width="3" height="15" fill="rgb(234,159,0)"/><text x="429.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:18) (2 samples, 0.49%)</title><rect x="426" y="100" width="6" height="15" fill="rgb(252,91,13)"/><text x="429.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.49%)</title><rect x="426" y="116" width="6" height="15" fill="rgb(242,207,40)"/><text x="429.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.49%)</title><rect x="426" y="132" width="6" height="15" fill="rgb(225,47,10)"/><text x="429.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.49%)</title><rect x="426" y="148" width="6" height="15" fill="rgb(242,101,6)"/><text x="429.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.49%)</title><rect x="426" y="164" width="6" height="15" fill="rgb(228,135,10)"/><text x="429.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.49%)</title><rect x="426" y="180" width="6" height="15" fill="rgb(226,4,31)"/><text x="429.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.25%)</title><rect x="429" y="196" width="3" height="15" fill="rgb(207,69,30)"/><text x="432.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.25%)</title><rect x="429" y="212" width="3" height="15" fill="rgb(222,17,45)"/><text x="432.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.25%)</title><rect x="429" y="228" width="3" height="15" fill="rgb(250,101,49)"/><text x="432.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.25%)</title><rect x="429" y="244" width="3" height="15" fill="rgb(209,86,6)"/><text x="432.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.25%)</title><rect x="429" y="260" width="3" height="15" fill="rgb(219,93,49)"/><text x="432.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="429" y="276" width="3" height="15" fill="rgb(241,115,8)"/><text x="432.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.25%)</title><rect x="432" y="148" width="3" height="15" fill="rgb(222,153,50)"/><text x="435.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.25%)</title><rect x="438" y="164" width="3" height="15" fill="rgb(245,165,50)"/><text x="441.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.25%)</title><rect x="441" y="164" width="3" height="15" fill="rgb(222,48,52)"/><text x="444.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.49%)</title><rect x="444" y="180" width="5" height="15" fill="rgb(207,166,14)"/><text x="447.00" y="190.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.25%)</title><rect x="464" y="356" width="3" height="15" fill="rgb(250,181,14)"/><text x="467.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.25%)</title><rect x="464" y="372" width="3" height="15" fill="rgb(219,99,10)"/><text x="467.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.25%)</title><rect x="464" y="388" width="3" height="15" fill="rgb(214,53,44)"/><text x="467.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2609) (1 samples, 0.25%)</title><rect x="464" y="404" width="3" height="15" fill="rgb(250,208,6)"/><text x="467.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.25%)</title><rect x="473" y="388" width="3" height="15" fill="rgb(253,162,48)"/><text x="476.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.74%)</title><rect x="476" y="388" width="8" height="15" fill="rgb(214,11,22)"/><text x="479.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (2 samples, 0.49%)</title><rect x="479" y="404" width="5" height="15" fill="rgb(217,218,11)"/><text x="482.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.25%)</title><rect x="484" y="388" width="3" height="15" fill="rgb(254,174,32)"/><text x="487.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.25%)</title><rect x="487" y="388" width="3" height="15" fill="rgb(228,219,53)"/><text x="490.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 2.47%)</title><rect x="467" y="356" width="29" height="15" fill="rgb(244,69,33)"/><text x="470.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 2.47%)</title><rect x="467" y="372" width="29" height="15" fill="rgb(213,37,43)"/><text x="470.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.49%)</title><rect x="490" y="388" width="6" height="15" fill="rgb(207,204,29)"/><text x="493.00" y="398.50"></text></g><g><title>0x7fc132c749a8 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="496" y="388" width="3" height="15" fill="rgb(239,157,5)"/><text x="499.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 3.21%)</title><rect x="464" y="260" width="38" height="15" fill="rgb(207,14,8)"/><text x="467.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 3.21%)</title><rect x="464" y="276" width="38" height="15" fill="rgb(254,170,19)"/><text x="467.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 3.21%)</title><rect x="464" y="292" width="38" height="15" fill="rgb(228,167,19)"/><text x="467.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 3.21%)</title><rect x="464" y="308" width="38" height="15" fill="rgb(217,16,3)"/><text x="467.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 3.21%)</title><rect x="464" y="324" width="38" height="15" fill="rgb(244,197,33)"/><text x="467.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 3.21%)</title><rect x="464" y="340" width="38" height="15" fill="rgb(228,153,49)"/><text x="467.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (2 samples, 0.49%)</title><rect x="496" y="356" width="6" height="15" fill="rgb(220,164,16)"/><text x="499.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.49%)</title><rect x="496" y="372" width="6" height="15" fill="rgb(241,58,2)"/><text x="499.00" y="382.50"></text></g><g><title>0x7fc132c74ca8 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="499" y="388" width="3" height="15" fill="rgb(254,65,13)"/><text x="502.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (16 samples, 3.95%)</title><rect x="458" y="244" width="47" height="15" fill="rgb(243,5,19)"/><text x="461.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.25%)</title><rect x="502" y="260" width="3" height="15" fill="rgb(229,3,7)"/><text x="505.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.25%)</title><rect x="502" y="276" width="3" height="15" fill="rgb(209,223,5)"/><text x="505.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.25%)</title><rect x="502" y="292" width="3" height="15" fill="rgb(238,180,33)"/><text x="505.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.25%)</title><rect x="502" y="308" width="3" height="15" fill="rgb(209,166,17)"/><text x="505.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.25%)</title><rect x="502" y="324" width="3" height="15" fill="rgb(230,164,10)"/><text x="505.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (1 samples, 0.25%)</title><rect x="502" y="340" width="3" height="15" fill="rgb(247,173,5)"/><text x="505.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.25%)</title><rect x="502" y="356" width="3" height="15" fill="rgb(250,62,40)"/><text x="505.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.25%)</title><rect x="502" y="372" width="3" height="15" fill="rgb(243,218,2)"/><text x="505.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.25%)</title><rect x="511" y="308" width="3" height="15" fill="rgb(224,217,13)"/><text x="514.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.25%)</title><rect x="511" y="324" width="3" height="15" fill="rgb(218,137,15)"/><text x="514.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2739) (1 samples, 0.25%)</title><rect x="511" y="340" width="3" height="15" fill="rgb(251,171,2)"/><text x="514.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.25%)</title><rect x="514" y="356" width="2" height="15" fill="rgb(213,21,20)"/><text x="517.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.49%)</title><rect x="514" y="308" width="5" height="15" fill="rgb(244,153,33)"/><text x="517.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.49%)</title><rect x="514" y="324" width="5" height="15" fill="rgb(239,150,39)"/><text x="517.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.49%)</title><rect x="514" y="340" width="5" height="15" fill="rgb(232,158,35)"/><text x="517.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.25%)</title><rect x="516" y="356" width="3" height="15" fill="rgb(253,128,25)"/><text x="519.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (25 samples, 6.17%)</title><rect x="449" y="196" width="73" height="15" fill="rgb(212,193,32)"/><text x="452.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 6.17%)</title><rect x="449" y="212" width="73" height="15" fill="rgb(217,195,14)"/><text x="452.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (23 samples, 5.68%)</title><rect x="455" y="228" width="67" height="15" fill="rgb(210,38,37)"/><text x="458.00" y="238.50">_run (m..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (6 samples, 1.48%)</title><rect x="505" y="244" width="17" height="15" fill="rgb(205,3,8)"/><text x="508.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.99%)</title><rect x="511" y="260" width="11" height="15" fill="rgb(206,44,35)"/><text x="514.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.99%)</title><rect x="511" y="276" width="11" height="15" fill="rgb(229,135,23)"/><text x="514.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.99%)</title><rect x="511" y="292" width="11" height="15" fill="rgb(235,121,30)"/><text x="514.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.25%)</title><rect x="519" y="308" width="3" height="15" fill="rgb(253,200,9)"/><text x="522.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1741) (1 samples, 0.25%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(221,195,36)"/><text x="522.00" y="334.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.25%)</title><rect x="522" y="260" width="3" height="15" fill="rgb(232,204,8)"/><text x="525.00" y="270.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:635) (1 samples, 0.25%)</title><rect x="531" y="324" width="3" height="15" fill="rgb(241,165,53)"/><text x="534.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.25%)</title><rect x="531" y="340" width="3" height="15" fill="rgb(222,191,17)"/><text x="534.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="531" y="356" width="3" height="15" fill="rgb(212,80,48)"/><text x="534.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 4.44%)</title><rect x="531" y="276" width="52" height="15" fill="rgb(240,94,10)"/><text x="534.00" y="286.50">array..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (18 samples, 4.44%)</title><rect x="531" y="292" width="52" height="15" fill="rgb(239,208,33)"/><text x="534.00" y="302.50">array..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (18 samples, 4.44%)</title><rect x="531" y="308" width="52" height="15" fill="rgb(248,172,20)"/><text x="534.00" y="318.50">PyArr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (17 samples, 4.20%)</title><rect x="534" y="324" width="49" height="15" fill="rgb(224,89,24)"/><text x="537.00" y="334.50">cbla..</text></g><g><title>gemm (cblasfuncs.c:40) (17 samples, 4.20%)</title><rect x="534" y="340" width="49" height="15" fill="rgb(240,122,49)"/><text x="537.00" y="350.50">gemm..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 4.20%)</title><rect x="534" y="356" width="49" height="15" fill="rgb(218,8,54)"/><text x="537.00" y="366.50">cbla..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 3.95%)</title><rect x="537" y="372" width="46" height="15" fill="rgb(240,187,6)"/><text x="540.00" y="382.50">sgem..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 3.95%)</title><rect x="537" y="388" width="46" height="15" fill="rgb(218,28,47)"/><text x="540.00" y="398.50">sgem..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (53 samples, 13.09%)</title><rect x="522" y="228" width="155" height="15" fill="rgb(207,76,4)"/><text x="525.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (53 samples, 13.09%)</title><rect x="522" y="244" width="155" height="15" fill="rgb(253,157,18)"/><text x="525.00" y="254.50">numpy_dot_inplace (..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (52 samples, 12.84%)</title><rect x="525" y="260" width="152" height="15" fill="rgb(230,120,10)"/><text x="528.00" y="270.50">dot (&lt;__array_funct..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (32 samples, 7.90%)</title><rect x="583" y="276" width="94" height="15" fill="rgb(247,18,6)"/><text x="586.00" y="286.50">sgemm_kerne..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.25%)</title><rect x="677" y="228" width="3" height="15" fill="rgb(236,128,41)"/><text x="680.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.25%)</title><rect x="683" y="292" width="2" height="15" fill="rgb(234,134,9)"/><text x="686.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.25%)</title><rect x="683" y="308" width="2" height="15" fill="rgb(207,129,21)"/><text x="686.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.25%)</title><rect x="683" y="324" width="2" height="15" fill="rgb(243,44,7)"/><text x="686.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.25%)</title><rect x="683" y="340" width="2" height="15" fill="rgb(226,192,20)"/><text x="686.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.25%)</title><rect x="685" y="292" width="3" height="15" fill="rgb(211,196,27)"/><text x="688.00" y="302.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1040) (1 samples, 0.25%)</title><rect x="685" y="308" width="3" height="15" fill="rgb(230,130,16)"/><text x="688.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 0.99%)</title><rect x="680" y="228" width="11" height="15" fill="rgb(243,214,29)"/><text x="683.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.74%)</title><rect x="683" y="244" width="8" height="15" fill="rgb(222,193,35)"/><text x="686.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.74%)</title><rect x="683" y="260" width="8" height="15" fill="rgb(216,24,39)"/><text x="686.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.74%)</title><rect x="683" y="276" width="8" height="15" fill="rgb(220,119,11)"/><text x="686.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.25%)</title><rect x="688" y="292" width="3" height="15" fill="rgb(226,91,45)"/><text x="691.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.25%)</title><rect x="688" y="308" width="3" height="15" fill="rgb(242,110,43)"/><text x="691.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.25%)</title><rect x="688" y="324" width="3" height="15" fill="rgb(234,90,40)"/><text x="691.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.25%)</title><rect x="688" y="340" width="3" height="15" fill="rgb(240,21,33)"/><text x="691.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.25%)</title><rect x="688" y="356" width="3" height="15" fill="rgb(217,88,30)"/><text x="691.00" y="366.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:338) (1 samples, 0.25%)</title><rect x="691" y="340" width="3" height="15" fill="rgb(214,71,31)"/><text x="694.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.49%)</title><rect x="691" y="276" width="6" height="15" fill="rgb(211,125,50)"/><text x="694.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.49%)</title><rect x="691" y="292" width="6" height="15" fill="rgb(250,140,8)"/><text x="694.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.49%)</title><rect x="691" y="308" width="6" height="15" fill="rgb(214,227,35)"/><text x="694.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.49%)</title><rect x="691" y="324" width="6" height="15" fill="rgb(240,1,37)"/><text x="694.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.25%)</title><rect x="694" y="340" width="3" height="15" fill="rgb(254,210,3)"/><text x="697.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:351) (1 samples, 0.25%)</title><rect x="694" y="356" width="3" height="15" fill="rgb(210,135,26)"/><text x="697.00" y="366.50"></text></g><g><title>0x7fc11df3c890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.49%)</title><rect x="697" y="340" width="6" height="15" fill="rgb(244,4,23)"/><text x="700.00" y="350.50"></text></g><g><title>0x7fc132df3e0e (libm-2.29.so) (1 samples, 0.25%)</title><rect x="709" y="356" width="3" height="15" fill="rgb(254,39,15)"/><text x="712.00" y="366.50"></text></g><g><title>0x7fc132df3e37 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="712" y="356" width="3" height="15" fill="rgb(240,148,18)"/><text x="715.00" y="366.50"></text></g><g><title>0x7fc132df3e4e (libm-2.29.so) (2 samples, 0.49%)</title><rect x="715" y="356" width="5" height="15" fill="rgb(254,58,4)"/><text x="718.00" y="366.50"></text></g><g><title>0x7fc132df3e7e (libm-2.29.so) (2 samples, 0.49%)</title><rect x="720" y="356" width="6" height="15" fill="rgb(242,129,28)"/><text x="723.00" y="366.50"></text></g><g><title>0x7fc132df3e96 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="726" y="356" width="3" height="15" fill="rgb(247,203,32)"/><text x="729.00" y="366.50"></text></g><g><title>0x7fc11df7e214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.96%)</title><rect x="697" y="324" width="35" height="15" fill="rgb(207,10,6)"/><text x="700.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (10 samples, 2.47%)</title><rect x="703" y="340" width="29" height="15" fill="rgb(210,150,9)"/><text x="706.00" y="350.50">ex..</text></g><g><title>0x7fc132df3ea6 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="729" y="356" width="3" height="15" fill="rgb(233,2,7)"/><text x="732.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (16 samples, 3.95%)</title><rect x="691" y="228" width="47" height="15" fill="rgb(215,27,43)"/><text x="694.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 3.95%)</title><rect x="691" y="244" width="47" height="15" fill="rgb(231,52,33)"/><text x="694.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 3.95%)</title><rect x="691" y="260" width="47" height="15" fill="rgb(214,224,27)"/><text x="694.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (14 samples, 3.46%)</title><rect x="697" y="276" width="41" height="15" fill="rgb(250,140,2)"/><text x="700.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (14 samples, 3.46%)</title><rect x="697" y="292" width="41" height="15" fill="rgb(246,15,13)"/><text x="700.00" y="302.50">tri..</text></g><g><title>0x7fc11df5c33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 3.46%)</title><rect x="697" y="308" width="41" height="15" fill="rgb(234,63,41)"/><text x="700.00" y="318.50">0x7..</text></g><g><title>0x7fc11df7e228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.49%)</title><rect x="732" y="324" width="6" height="15" fill="rgb(219,143,48)"/><text x="735.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.25%)</title><rect x="738" y="244" width="3" height="15" fill="rgb(212,99,33)"/><text x="741.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (76 samples, 18.77%)</title><rect x="522" y="196" width="222" height="15" fill="rgb(220,65,38)"/><text x="525.00" y="206.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (76 samples, 18.77%)</title><rect x="522" y="212" width="222" height="15" fill="rgb(233,120,17)"/><text x="525.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (2 samples, 0.49%)</title><rect x="738" y="228" width="6" height="15" fill="rgb(244,43,16)"/><text x="741.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.25%)</title><rect x="741" y="244" width="3" height="15" fill="rgb(231,218,52)"/><text x="744.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.25%)</title><rect x="741" y="260" width="3" height="15" fill="rgb(220,112,18)"/><text x="744.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.25%)</title><rect x="741" y="276" width="3" height="15" fill="rgb(252,151,6)"/><text x="744.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (102 samples, 25.19%)</title><rect x="449" y="180" width="298" height="15" fill="rgb(254,167,36)"/><text x="452.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.25%)</title><rect x="744" y="196" width="3" height="15" fill="rgb(250,73,10)"/><text x="747.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.25%)</title><rect x="747" y="180" width="3" height="15" fill="rgb(214,148,24)"/><text x="750.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:45) (113 samples, 27.90%)</title><rect x="423" y="52" width="329" height="15" fill="rgb(209,229,29)"/><text x="426.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:44) (113 samples, 27.90%)</title><rect x="423" y="68" width="329" height="15" fill="rgb(236,65,52)"/><text x="426.00" y="78.50">profile_pyrt (bench_LogisticRegression_libli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:29) (112 samples, 27.65%)</title><rect x="426" y="84" width="326" height="15" fill="rgb(237,220,21)"/><text x="429.00" y="94.50">setup_profile (bench_LogisticRegression_libl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:23) (110 samples, 27.16%)</title><rect x="432" y="100" width="320" height="15" fill="rgb(240,215,22)"/><text x="435.00" y="110.50">profile (bench_LogisticRegression_liblinear..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 27.16%)</title><rect x="432" y="116" width="320" height="15" fill="rgb(244,100,37)"/><text x="435.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (110 samples, 27.16%)</title><rect x="432" y="132" width="320" height="15" fill="rgb(208,213,31)"/><text x="435.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (109 samples, 26.91%)</title><rect x="435" y="148" width="317" height="15" fill="rgb(234,8,44)"/><text x="438.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:40..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (106 samples, 26.17%)</title><rect x="444" y="164" width="308" height="15" fill="rgb(240,200,7)"/><text x="447.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.25%)</title><rect x="750" y="180" width="2" height="15" fill="rgb(230,220,23)"/><text x="753.00" y="190.50"></text></g><g><title>0x7fc132f40958 (ld-2.29.so) (1 samples, 0.25%)</title><rect x="752" y="724" width="3" height="15" fill="rgb(244,1,37)"/><text x="755.00" y="734.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.49%)</title><rect x="752" y="356" width="6" height="15" fill="rgb(215,132,23)"/><text x="755.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="752" y="372" width="6" height="15" fill="rgb(224,58,46)"/><text x="755.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="752" y="388" width="6" height="15" fill="rgb(254,0,15)"/><text x="755.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.49%)</title><rect x="752" y="404" width="6" height="15" fill="rgb(216,15,27)"/><text x="755.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.49%)</title><rect x="752" y="420" width="6" height="15" fill="rgb(251,130,2)"/><text x="755.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="752" y="436" width="6" height="15" fill="rgb(232,22,2)"/><text x="755.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 0.49%)</title><rect x="752" y="452" width="6" height="15" fill="rgb(222,58,35)"/><text x="755.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.49%)</title><rect x="752" y="468" width="6" height="15" fill="rgb(244,162,52)"/><text x="755.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.49%)</title><rect x="752" y="484" width="6" height="15" fill="rgb(220,93,33)"/><text x="755.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.49%)</title><rect x="752" y="500" width="6" height="15" fill="rgb(245,76,39)"/><text x="755.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.49%)</title><rect x="752" y="516" width="6" height="15" fill="rgb(233,69,41)"/><text x="755.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.49%)</title><rect x="752" y="532" width="6" height="15" fill="rgb(213,104,52)"/><text x="755.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.49%)</title><rect x="752" y="548" width="6" height="15" fill="rgb(212,17,4)"/><text x="755.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="564" width="6" height="15" fill="rgb(208,222,48)"/><text x="755.00" y="574.50"></text></g><g><title>0x7fc132efc995 (libdl-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="580" width="6" height="15" fill="rgb(208,155,50)"/><text x="755.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="596" width="6" height="15" fill="rgb(245,140,29)"/><text x="755.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="612" width="6" height="15" fill="rgb(249,50,6)"/><text x="755.00" y="622.50"></text></g><g><title>0x7fc132efc258 (libdl-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="628" width="6" height="15" fill="rgb(209,200,2)"/><text x="755.00" y="638.50"></text></g><g><title>0x7fc132f49d7a (ld-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="644" width="6" height="15" fill="rgb(207,6,44)"/><text x="755.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="660" width="6" height="15" fill="rgb(251,148,52)"/><text x="755.00" y="670.50"></text></g><g><title>0x7fc132f4a345 (ld-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="676" width="6" height="15" fill="rgb(217,140,24)"/><text x="755.00" y="686.50"></text></g><g><title>0x7fc132f42fec (ld-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="692" width="6" height="15" fill="rgb(219,19,13)"/><text x="755.00" y="702.50"></text></g><g><title>0x7fc132f4156b (ld-2.29.so) (2 samples, 0.49%)</title><rect x="752" y="708" width="6" height="15" fill="rgb(217,59,3)"/><text x="755.00" y="718.50"></text></g><g><title>0x7fc132f40c0d (ld-2.29.so) (1 samples, 0.25%)</title><rect x="755" y="724" width="3" height="15" fill="rgb(219,92,34)"/><text x="758.00" y="734.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:28) (4 samples, 0.99%)</title><rect x="752" y="84" width="12" height="15" fill="rgb(210,11,50)"/><text x="755.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (4 samples, 0.99%)</title><rect x="752" y="100" width="12" height="15" fill="rgb(213,170,2)"/><text x="755.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (4 samples, 0.99%)</title><rect x="752" y="116" width="12" height="15" fill="rgb(245,74,42)"/><text x="755.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (4 samples, 0.99%)</title><rect x="752" y="132" width="12" height="15" fill="rgb(232,153,52)"/><text x="755.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (4 samples, 0.99%)</title><rect x="752" y="148" width="12" height="15" fill="rgb(217,141,43)"/><text x="755.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (4 samples, 0.99%)</title><rect x="752" y="164" width="12" height="15" fill="rgb(252,26,10)"/><text x="755.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.99%)</title><rect x="752" y="180" width="12" height="15" fill="rgb(216,124,43)"/><text x="755.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.99%)</title><rect x="752" y="196" width="12" height="15" fill="rgb(212,179,49)"/><text x="755.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.99%)</title><rect x="752" y="212" width="12" height="15" fill="rgb(225,211,22)"/><text x="755.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.99%)</title><rect x="752" y="228" width="12" height="15" fill="rgb(224,111,23)"/><text x="755.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.99%)</title><rect x="752" y="244" width="12" height="15" fill="rgb(236,195,21)"/><text x="755.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (4 samples, 0.99%)</title><rect x="752" y="260" width="12" height="15" fill="rgb(205,165,25)"/><text x="755.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.99%)</title><rect x="752" y="276" width="12" height="15" fill="rgb(233,143,0)"/><text x="755.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.99%)</title><rect x="752" y="292" width="12" height="15" fill="rgb(223,49,14)"/><text x="755.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.99%)</title><rect x="752" y="308" width="12" height="15" fill="rgb(249,125,20)"/><text x="755.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.99%)</title><rect x="752" y="324" width="12" height="15" fill="rgb(229,96,31)"/><text x="755.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.99%)</title><rect x="752" y="340" width="12" height="15" fill="rgb(248,52,5)"/><text x="755.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:15) (2 samples, 0.49%)</title><rect x="758" y="356" width="6" height="15" fill="rgb(214,115,26)"/><text x="761.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py:16) (2 samples, 0.49%)</title><rect x="758" y="372" width="6" height="15" fill="rgb(207,93,13)"/><text x="761.00" y="382.50"></text></g><g><title>architecture (platform.py:868) (2 samples, 0.49%)</title><rect x="758" y="388" width="6" height="15" fill="rgb(206,76,42)"/><text x="761.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py:813) (2 samples, 0.49%)</title><rect x="758" y="404" width="6" height="15" fill="rgb(252,180,14)"/><text x="761.00" y="414.50"></text></g><g><title>__init__ (subprocess.py:775) (2 samples, 0.49%)</title><rect x="758" y="420" width="6" height="15" fill="rgb(251,181,34)"/><text x="761.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py:1453) (2 samples, 0.49%)</title><rect x="758" y="436" width="6" height="15" fill="rgb(239,122,32)"/><text x="761.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c:687) (2 samples, 0.49%)</title><rect x="758" y="452" width="6" height="15" fill="rgb(218,120,41)"/><text x="761.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (2 samples, 0.49%)</title><rect x="758" y="468" width="6" height="15" fill="rgb(243,12,15)"/><text x="761.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.25%)</title><rect x="773" y="148" width="3" height="15" fill="rgb(231,82,10)"/><text x="776.00" y="158.50"></text></g><g><title>0x7fc0f2cab930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="785" y="244" width="2" height="15" fill="rgb(209,169,43)"/><text x="788.00" y="254.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.49%)</title><rect x="785" y="196" width="5" height="15" fill="rgb(246,61,19)"/><text x="788.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.49%)</title><rect x="785" y="212" width="5" height="15" fill="rgb(235,89,39)"/><text x="788.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.49%)</title><rect x="785" y="228" width="5" height="15" fill="rgb(231,144,44)"/><text x="788.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="787" y="244" width="3" height="15" fill="rgb(240,33,10)"/><text x="790.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="787" y="260" width="3" height="15" fill="rgb(209,168,1)"/><text x="790.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="787" y="276" width="3" height="15" fill="rgb(230,138,11)"/><text x="790.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="787" y="292" width="3" height="15" fill="rgb(221,21,40)"/><text x="790.00" y="302.50"></text></g><g><title>0x7fc0f2ce4ff9 (?) (1 samples, 0.25%)</title><rect x="790" y="212" width="3" height="15" fill="rgb(211,215,18)"/><text x="793.00" y="222.50"></text></g><g><title>0x7fc0f2cdfef6 (?) (1 samples, 0.25%)</title><rect x="790" y="228" width="3" height="15" fill="rgb(247,186,38)"/><text x="793.00" y="238.50"></text></g><g><title>0x7fc0f2cd4962 (?) (1 samples, 0.25%)</title><rect x="790" y="244" width="3" height="15" fill="rgb(226,13,11)"/><text x="793.00" y="254.50"></text></g><g><title>0x7fc0f2d087a7 (?) (1 samples, 0.25%)</title><rect x="790" y="260" width="3" height="15" fill="rgb(222,15,39)"/><text x="793.00" y="270.50"></text></g><g><title>0x7fc0f2d08379 (?) (1 samples, 0.25%)</title><rect x="790" y="276" width="3" height="15" fill="rgb(241,70,5)"/><text x="793.00" y="286.50"></text></g><g><title>0x7fc0f31668b8 (?) (1 samples, 0.25%)</title><rect x="790" y="292" width="3" height="15" fill="rgb(209,206,28)"/><text x="793.00" y="302.50"></text></g><g><title>0x7fc0f3164c7f (?) (1 samples, 0.25%)</title><rect x="790" y="308" width="3" height="15" fill="rgb(254,190,12)"/><text x="793.00" y="318.50"></text></g><g><title>0x7fc0f317799c (?) (1 samples, 0.25%)</title><rect x="790" y="324" width="3" height="15" fill="rgb(235,159,7)"/><text x="793.00" y="334.50"></text></g><g><title>0x7fc0f2e5cae2 (?) (1 samples, 0.25%)</title><rect x="790" y="340" width="3" height="15" fill="rgb(231,208,10)"/><text x="793.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="793" y="340" width="3" height="15" fill="rgb(212,146,20)"/><text x="796.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="793" y="356" width="3" height="15" fill="rgb(236,150,52)"/><text x="796.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="793" y="372" width="3" height="15" fill="rgb(241,173,25)"/><text x="796.00" y="382.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="793" y="388" width="3" height="15" fill="rgb(231,77,26)"/><text x="796.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="356" width="3" height="15" fill="rgb(213,117,39)"/><text x="1082.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="372" width="3" height="15" fill="rgb(209,26,52)"/><text x="1082.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="388" width="3" height="15" fill="rgb(212,69,39)"/><text x="1082.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="404" width="3" height="15" fill="rgb(231,54,11)"/><text x="1082.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="420" width="3" height="15" fill="rgb(212,149,0)"/><text x="1082.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="436" width="3" height="15" fill="rgb(206,1,14)"/><text x="1082.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="452" width="3" height="15" fill="rgb(216,205,14)"/><text x="1082.00" y="462.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="468" width="3" height="15" fill="rgb(247,126,49)"/><text x="1082.00" y="478.50"></text></g><g><title>0x7fc132c94db3 (libc-2.29.so) (3 samples, 0.74%)</title><rect x="1090" y="372" width="9" height="15" fill="rgb(212,82,27)"/><text x="1093.00" y="382.50"></text></g><g><title>0x7fc132c94dbb (libc-2.29.so) (2 samples, 0.49%)</title><rect x="1099" y="372" width="6" height="15" fill="rgb(230,207,26)"/><text x="1102.00" y="382.50"></text></g><g><title>0x7fc132df3e0e (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1105" y="372" width="3" height="15" fill="rgb(206,160,34)"/><text x="1108.00" y="382.50"></text></g><g><title>0x7fc132df3e14 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1108" y="372" width="3" height="15" fill="rgb(245,94,29)"/><text x="1111.00" y="382.50"></text></g><g><title>0x7fc132df3e2f (libm-2.29.so) (2 samples, 0.49%)</title><rect x="1111" y="372" width="6" height="15" fill="rgb(246,183,17)"/><text x="1114.00" y="382.50"></text></g><g><title>0x7fc132df3e6d (libm-2.29.so) (2 samples, 0.49%)</title><rect x="1117" y="372" width="5" height="15" fill="rgb(218,42,51)"/><text x="1120.00" y="382.50"></text></g><g><title>0x7fc132df3e7e (libm-2.29.so) (2 samples, 0.49%)</title><rect x="1122" y="372" width="6" height="15" fill="rgb(248,215,51)"/><text x="1125.00" y="382.50"></text></g><g><title>0x7fc132df3e86 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1128" y="372" width="3" height="15" fill="rgb(208,76,19)"/><text x="1131.00" y="382.50"></text></g><g><title>0x7fc132df3e9e (libm-2.29.so) (4 samples, 0.99%)</title><rect x="1131" y="372" width="12" height="15" fill="rgb(232,146,13)"/><text x="1134.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (120 samples, 29.63%)</title><rect x="796" y="340" width="350" height="15" fill="rgb(225,27,22)"/><text x="799.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Compu..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.43%)</title><rect x="1082" y="356" width="64" height="15" fill="rgb(244,187,24)"/><text x="1085.00" y="366.50">onnxrun..</text></g><g><title>0x7fc132df3ea2 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1143" y="372" width="3" height="15" fill="rgb(216,207,29)"/><text x="1146.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1175" y="468" width="3" height="15" fill="rgb(246,140,50)"/><text x="1178.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1175" y="484" width="3" height="15" fill="rgb(237,7,49)"/><text x="1178.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1175" y="500" width="3" height="15" fill="rgb(230,37,3)"/><text x="1178.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 32.84%)</title><rect x="793" y="276" width="388" height="15" fill="rgb(251,115,13)"/><text x="796.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 32.84%)</title><rect x="793" y="292" width="388" height="15" fill="rgb(220,183,30)"/><text x="796.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 32.84%)</title><rect x="793" y="308" width="388" height="15" fill="rgb(221,47,31)"/><text x="796.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 32.84%)</title><rect x="793" y="324" width="388" height="15" fill="rgb(218,93,30)"/><text x="796.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.96%)</title><rect x="1146" y="340" width="35" height="15" fill="rgb(252,84,24)"/><text x="1149.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.96%)</title><rect x="1146" y="356" width="35" height="15" fill="rgb(226,153,26)"/><text x="1149.00" y="366.50">on..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.49%)</title><rect x="1175" y="372" width="6" height="15" fill="rgb(237,225,17)"/><text x="1178.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.49%)</title><rect x="1175" y="388" width="6" height="15" fill="rgb(226,25,14)"/><text x="1178.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.49%)</title><rect x="1175" y="404" width="6" height="15" fill="rgb(211,48,22)"/><text x="1178.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.49%)</title><rect x="1175" y="420" width="6" height="15" fill="rgb(216,43,24)"/><text x="1178.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.49%)</title><rect x="1175" y="436" width="6" height="15" fill="rgb(239,123,17)"/><text x="1178.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.49%)</title><rect x="1175" y="452" width="6" height="15" fill="rgb(254,42,34)"/><text x="1178.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1178" y="468" width="3" height="15" fill="rgb(250,84,26)"/><text x="1181.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1178" y="484" width="3" height="15" fill="rgb(215,139,44)"/><text x="1181.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1178" y="500" width="3" height="15" fill="rgb(228,77,3)"/><text x="1181.00" y="510.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 33.09%)</title><rect x="793" y="244" width="391" height="15" fill="rgb(254,33,1)"/><text x="796.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modul..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 33.09%)</title><rect x="793" y="260" width="391" height="15" fill="rgb(221,175,3)"/><text x="796.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1181" y="276" width="3" height="15" fill="rgb(247,120,8)"/><text x="1184.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1181" y="292" width="3" height="15" fill="rgb(250,5,39)"/><text x="1184.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1181" y="308" width="3" height="15" fill="rgb(238,176,29)"/><text x="1184.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (141 samples, 34.81%)</title><rect x="776" y="164" width="411" height="15" fill="rgb(214,201,47)"/><text x="779.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:6..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (138 samples, 34.07%)</title><rect x="785" y="180" width="402" height="15" fill="rgb(234,55,20)"/><text x="788.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (136 samples, 33.58%)</title><rect x="790" y="196" width="397" height="15" fill="rgb(249,226,27)"/><text x="793.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 33.33%)</title><rect x="793" y="212" width="394" height="15" fill="rgb(217,40,42)"/><text x="796.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 33.33%)</title><rect x="793" y="228" width="394" height="15" fill="rgb(241,40,30)"/><text x="796.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1184" y="244" width="3" height="15" fill="rgb(243,191,29)"/><text x="1187.00" y="254.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1184" y="260" width="3" height="15" fill="rgb(213,116,10)"/><text x="1187.00" y="270.50"></text></g><g><title>all (405 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,71,0)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:52) (150 samples, 37.04%)</title><rect x="752" y="52" width="438" height="15" fill="rgb(216,149,53)"/><text x="755.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:51) (150 samples, 37.04%)</title><rect x="752" y="68" width="438" height="15" fill="rgb(239,22,37)"/><text x="755.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solver..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:29) (146 samples, 36.05%)</title><rect x="764" y="84" width="426" height="15" fill="rgb(237,175,12)"/><text x="767.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_nozipmap.py:23) (146 samples, 36.05%)</title><rect x="764" y="100" width="426" height="15" fill="rgb(218,70,38)"/><text x="767.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (146 samples, 36.05%)</title><rect x="764" y="116" width="426" height="15" fill="rgb(243,120,2)"/><text x="767.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (146 samples, 36.05%)</title><rect x="764" y="132" width="426" height="15" fill="rgb(233,24,43)"/><text x="767.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (142 samples, 35.06%)</title><rect x="776" y="148" width="414" height="15" fill="rgb(223,176,1)"/><text x="779.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.25%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(235,25,3)"/><text x="1190.00" y="174.50"></text></g></g></svg>