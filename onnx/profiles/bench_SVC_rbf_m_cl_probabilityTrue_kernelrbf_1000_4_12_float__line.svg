<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1926" onload="init(evt)" viewBox="0 0 1200 1926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1926" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1909.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1909.00"> </text><g id="frames"><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.13%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(233,47,53)"/><text x="13.00" y="222.50"></text></g><g><title>0x7fb29b3c2e7a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(215,26,47)"/><text x="13.00" y="238.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (2 samples, 0.27%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(242,206,32)"/><text x="13.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (2 samples, 0.27%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(246,200,6)"/><text x="13.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.27%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(242,34,25)"/><text x="13.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.27%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(250,165,34)"/><text x="13.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.13%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(212,143,48)"/><text x="14.00" y="222.50"></text></g><g><title>0x7fb275e9d3fd (?) (1 samples, 0.13%)</title><rect x="13" y="180" width="1" height="15" fill="rgb(249,218,28)"/><text x="16.00" y="190.50"></text></g><g><title>0x7fb275e9b553 (?) (1 samples, 0.13%)</title><rect x="13" y="196" width="1" height="15" fill="rgb(245,4,54)"/><text x="16.00" y="206.50"></text></g><g><title>0x7fb275e96a09 (?) (1 samples, 0.13%)</title><rect x="13" y="212" width="1" height="15" fill="rgb(241,73,42)"/><text x="16.00" y="222.50"></text></g><g><title>0x7fb275ea9283 (?) (1 samples, 0.13%)</title><rect x="13" y="228" width="1" height="15" fill="rgb(231,202,18)"/><text x="16.00" y="238.50"></text></g><g><title>0x7fb275ea8e11 (?) (1 samples, 0.13%)</title><rect x="13" y="244" width="1" height="15" fill="rgb(252,109,31)"/><text x="16.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.13%)</title><rect x="13" y="260" width="1" height="15" fill="rgb(216,157,25)"/><text x="16.00" y="270.50"></text></g><g><title>0x7fb29b3ac971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="244" width="2" height="15" fill="rgb(244,162,50)"/><text x="25.00" y="254.50"></text></g><g><title>0x7fb29b3ac99b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="24" y="244" width="1" height="15" fill="rgb(251,153,43)"/><text x="27.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.13%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(228,109,15)"/><text x="28.00" y="254.50"></text></g><g><title>0x7fb29b57ec18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="25" y="260" width="2" height="15" fill="rgb(216,217,45)"/><text x="28.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(245,78,26)"/><text x="30.00" y="254.50"></text></g><g><title>0x7fb29b3ae00a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="27" y="260" width="2" height="15" fill="rgb(215,49,11)"/><text x="30.00" y="270.50"></text></g><g><title>0x7fb29b57ec52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(250,22,30)"/><text x="36.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (4 samples, 0.54%)</title><rect x="32" y="260" width="6" height="15" fill="rgb(245,114,49)"/><text x="35.00" y="270.50"></text></g><g><title>0x7fb29b57ec7f (libm-2.29.so) (2 samples, 0.27%)</title><rect x="35" y="276" width="3" height="15" fill="rgb(210,167,45)"/><text x="38.00" y="286.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:18) (21 samples, 2.83%)</title><rect x="10" y="100" width="33" height="15" fill="rgb(225,51,48)"/><text x="13.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (21 samples, 2.83%)</title><rect x="10" y="116" width="33" height="15" fill="rgb(254,51,52)"/><text x="13.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (21 samples, 2.83%)</title><rect x="10" y="132" width="33" height="15" fill="rgb(233,16,45)"/><text x="13.00" y="142.50">&lt;l..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (19 samples, 2.56%)</title><rect x="13" y="148" width="30" height="15" fill="rgb(215,111,47)"/><text x="16.00" y="158.50">_p..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (19 samples, 2.56%)</title><rect x="13" y="164" width="30" height="15" fill="rgb(254,65,43)"/><text x="16.00" y="174.50">_d..</text></g><g><title>0x7fb275e9d3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.43%)</title><rect x="14" y="180" width="29" height="15" fill="rgb(230,188,5)"/><text x="17.00" y="190.50">0x..</text></g><g><title>0x7fb275e9b553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.43%)</title><rect x="14" y="196" width="29" height="15" fill="rgb(223,207,19)"/><text x="17.00" y="206.50">0x..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.43%)</title><rect x="14" y="212" width="29" height="15" fill="rgb(248,73,50)"/><text x="17.00" y="222.50">co..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.43%)</title><rect x="14" y="228" width="29" height="15" fill="rgb(229,46,44)"/><text x="17.00" y="238.50">sv..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.21%)</title><rect x="29" y="244" width="14" height="15" fill="rgb(235,118,1)"/><text x="32.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="38" y="260" width="5" height="15" fill="rgb(216,221,8)"/><text x="41.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.13%)</title><rect x="43" y="196" width="2" height="15" fill="rgb(254,117,48)"/><text x="46.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (2 samples, 0.27%)</title><rect x="43" y="164" width="3" height="15" fill="rgb(243,157,16)"/><text x="46.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.27%)</title><rect x="43" y="180" width="3" height="15" fill="rgb(207,219,5)"/><text x="46.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.13%)</title><rect x="45" y="196" width="1" height="15" fill="rgb(237,122,44)"/><text x="48.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.13%)</title><rect x="45" y="212" width="1" height="15" fill="rgb(237,203,17)"/><text x="48.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (3 samples, 0.40%)</title><rect x="43" y="148" width="5" height="15" fill="rgb(251,113,53)"/><text x="46.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (1 samples, 0.13%)</title><rect x="46" y="164" width="2" height="15" fill="rgb(207,204,37)"/><text x="49.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.13%)</title><rect x="46" y="180" width="2" height="15" fill="rgb(209,18,33)"/><text x="49.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.13%)</title><rect x="46" y="196" width="2" height="15" fill="rgb(237,179,40)"/><text x="49.00" y="206.50"></text></g><g><title>0x7fb29b3ac96a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="113" y="244" width="2" height="15" fill="rgb(212,172,20)"/><text x="116.00" y="254.50"></text></g><g><title>0x7fb29b3ac9ed (libc-2.29.so) (1 samples, 0.13%)</title><rect x="115" y="244" width="1" height="15" fill="rgb(235,92,31)"/><text x="118.00" y="254.50"></text></g><g><title>0x7fb29b3aca41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="116" y="244" width="2" height="15" fill="rgb(212,223,54)"/><text x="119.00" y="254.50"></text></g><g><title>0x7fb29b3acd07 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="118" y="244" width="3" height="15" fill="rgb(212,60,18)"/><text x="121.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.13%)</title><rect x="121" y="244" width="2" height="15" fill="rgb(230,10,0)"/><text x="124.00" y="254.50"></text></g><g><title>0x7fb29b3adf0a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="129" y="260" width="2" height="15" fill="rgb(225,25,36)"/><text x="132.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.81%)</title><rect x="123" y="244" width="9" height="15" fill="rgb(210,189,17)"/><text x="126.00" y="254.50"></text></g><g><title>0x7fb29b3ae00a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="131" y="260" width="1" height="15" fill="rgb(207,206,34)"/><text x="134.00" y="270.50"></text></g><g><title>0x7fb275e7e020 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="156" y="260" width="2" height="15" fill="rgb(249,112,37)"/><text x="159.00" y="270.50"></text></g><g><title>0x7fb29b3ac906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="158" y="260" width="1" height="15" fill="rgb(219,159,16)"/><text x="161.00" y="270.50"></text></g><g><title>0x7fb29b57ebb4 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="185" y="276" width="1" height="15" fill="rgb(206,93,24)"/><text x="188.00" y="286.50"></text></g><g><title>0x7fb29b57ebd3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="186" y="276" width="2" height="15" fill="rgb(251,133,24)"/><text x="189.00" y="286.50"></text></g><g><title>0x7fb29b57ebe2 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="188" y="276" width="1" height="15" fill="rgb(250,178,36)"/><text x="191.00" y="286.50"></text></g><g><title>0x7fb29b57ebe7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="189" y="276" width="2" height="15" fill="rgb(222,107,7)"/><text x="192.00" y="286.50"></text></g><g><title>0x7fb29b57ebf9 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="191" y="276" width="3" height="15" fill="rgb(209,173,19)"/><text x="194.00" y="286.50"></text></g><g><title>0x7fb29b57ec07 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="194" y="276" width="2" height="15" fill="rgb(237,137,7)"/><text x="197.00" y="286.50"></text></g><g><title>0x7fb29b57ec18 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="196" y="276" width="3" height="15" fill="rgb(242,59,54)"/><text x="199.00" y="286.50"></text></g><g><title>0x7fb29b57ec2e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="199" y="276" width="2" height="15" fill="rgb(214,185,35)"/><text x="202.00" y="286.50"></text></g><g><title>0x7fb29b57ec32 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="201" y="276" width="1" height="15" fill="rgb(248,124,32)"/><text x="204.00" y="286.50"></text></g><g><title>0x7fb29b57ec46 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="202" y="276" width="3" height="15" fill="rgb(213,42,11)"/><text x="205.00" y="286.50"></text></g><g><title>0x7fb29b57ec52 (libm-2.29.so) (8 samples, 1.08%)</title><rect x="205" y="276" width="13" height="15" fill="rgb(217,39,50)"/><text x="208.00" y="286.50"></text></g><g><title>0x7fb29b57ec5a (libm-2.29.so) (7 samples, 0.94%)</title><rect x="218" y="276" width="11" height="15" fill="rgb(245,127,19)"/><text x="221.00" y="286.50"></text></g><g><title>0x7fb29b57ec6e (libm-2.29.so) (4 samples, 0.54%)</title><rect x="229" y="276" width="7" height="15" fill="rgb(223,159,47)"/><text x="232.00" y="286.50"></text></g><g><title>0x7fb29b57ec7b (libm-2.29.so) (10 samples, 1.35%)</title><rect x="236" y="276" width="16" height="15" fill="rgb(219,220,39)"/><text x="239.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (62 samples, 8.37%)</title><rect x="159" y="260" width="99" height="15" fill="rgb(211,178,38)"/><text x="162.00" y="270.50">exp (libm-2..</text></g><g><title>0x7fb29b57ec7f (libm-2.29.so) (4 samples, 0.54%)</title><rect x="252" y="276" width="6" height="15" fill="rgb(221,66,19)"/><text x="255.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="258" y="260" width="2" height="15" fill="rgb(227,165,19)"/><text x="261.00" y="270.50"></text></g><g><title>0x7fb275e9b553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (175 samples, 23.62%)</title><rect x="49" y="196" width="279" height="15" fill="rgb(212,182,0)"/><text x="52.00" y="206.50">0x7fb275e9b553 (sklearn/svm/_libsvm.c..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (175 samples, 23.62%)</title><rect x="49" y="212" width="279" height="15" fill="rgb(224,166,31)"/><text x="52.00" y="222.50">copy_predict_proba (sklearn/svm/_libs..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (175 samples, 23.62%)</title><rect x="49" y="228" width="279" height="15" fill="rgb(225,202,11)"/><text x="52.00" y="238.50">svm_predict_probability (sklearn/svm/..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (123 samples, 16.60%)</title><rect x="132" y="244" width="196" height="15" fill="rgb(211,166,32)"/><text x="135.00" y="254.50">svm_predict_values (sklea..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (43 samples, 5.80%)</title><rect x="260" y="260" width="68" height="15" fill="rgb(217,145,47)"/><text x="263.00" y="270.50">svm::Ke..</text></g><g><title>0x7fb275e9b683 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="328" y="196" width="2" height="15" fill="rgb(238,160,45)"/><text x="331.00" y="206.50"></text></g><g><title>0x7fb275e9b7b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="330" y="196" width="1" height="15" fill="rgb(222,69,50)"/><text x="333.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.13%)</title><rect x="330" y="212" width="1" height="15" fill="rgb(230,111,2)"/><text x="333.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.13%)</title><rect x="330" y="228" width="1" height="15" fill="rgb(213,224,41)"/><text x="333.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.13%)</title><rect x="330" y="244" width="1" height="15" fill="rgb(244,63,30)"/><text x="333.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:38) (203 samples, 27.40%)</title><rect x="10" y="52" width="323" height="15" fill="rgb(244,162,28)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTru..</text></g><g><title>profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:37) (203 samples, 27.40%)</title><rect x="10" y="68" width="323" height="15" fill="rgb(225,15,49)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_rbf_m_cl_probability..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:29) (203 samples, 27.40%)</title><rect x="10" y="84" width="323" height="15" fill="rgb(237,93,6)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabili..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:23) (182 samples, 24.56%)</title><rect x="43" y="100" width="290" height="15" fill="rgb(215,203,48)"/><text x="46.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilit..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (182 samples, 24.56%)</title><rect x="43" y="116" width="290" height="15" fill="rgb(239,176,50)"/><text x="46.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (182 samples, 24.56%)</title><rect x="43" y="132" width="290" height="15" fill="rgb(209,129,3)"/><text x="46.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (179 samples, 24.16%)</title><rect x="48" y="148" width="285" height="15" fill="rgb(210,90,1)"/><text x="51.00" y="158.50">_predict_proba (sklearn/svm/_base.py:6..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (179 samples, 24.16%)</title><rect x="48" y="164" width="285" height="15" fill="rgb(236,173,11)"/><text x="51.00" y="174.50">_dense_predict_proba (sklearn/svm/_bas..</text></g><g><title>0x7fb275e9d3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (178 samples, 24.02%)</title><rect x="49" y="180" width="284" height="15" fill="rgb(253,135,26)"/><text x="52.00" y="190.50">0x7fb275e9d3fd (sklearn/svm/_libsvm.cp..</text></g><g><title>0x7fb275e9cd06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="331" y="196" width="2" height="15" fill="rgb(248,26,47)"/><text x="334.00" y="206.50"></text></g><g><title>0x7fb275e8467f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="331" y="212" width="2" height="15" fill="rgb(211,214,14)"/><text x="334.00" y="222.50"></text></g><g><title>0x7fb275e8433c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="331" y="228" width="2" height="15" fill="rgb(206,220,49)"/><text x="334.00" y="238.50"></text></g><g><title>0x7fb275e83e22 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="331" y="244" width="2" height="15" fill="rgb(249,160,16)"/><text x="334.00" y="254.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.13%)</title><rect x="333" y="884" width="1" height="15" fill="rgb(238,175,32)"/><text x="336.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.13%)</title><rect x="333" y="900" width="1" height="15" fill="rgb(221,55,2)"/><text x="336.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.13%)</title><rect x="333" y="916" width="1" height="15" fill="rgb(207,95,12)"/><text x="336.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.13%)</title><rect x="333" y="932" width="1" height="15" fill="rgb(218,167,24)"/><text x="336.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.13%)</title><rect x="333" y="948" width="1" height="15" fill="rgb(218,40,40)"/><text x="336.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.13%)</title><rect x="333" y="964" width="1" height="15" fill="rgb(213,14,49)"/><text x="336.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.13%)</title><rect x="333" y="980" width="1" height="15" fill="rgb(217,221,9)"/><text x="336.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.13%)</title><rect x="333" y="996" width="1" height="15" fill="rgb(231,5,28)"/><text x="336.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.13%)</title><rect x="333" y="1012" width="1" height="15" fill="rgb(214,65,17)"/><text x="336.00" y="1022.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="333" y="1028" width="1" height="15" fill="rgb(253,89,26)"/><text x="336.00" y="1038.50"></text></g><g><title>0x7fb29b3af276 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="333" y="1044" width="1" height="15" fill="rgb(226,139,37)"/><text x="336.00" y="1054.50"></text></g><g><title>0x7fb29b3cced5 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="333" y="1060" width="1" height="15" fill="rgb(206,52,29)"/><text x="336.00" y="1070.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:2) (2 samples, 0.27%)</title><rect x="333" y="148" width="3" height="15" fill="rgb(248,162,9)"/><text x="336.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="164" width="3" height="15" fill="rgb(227,41,3)"/><text x="336.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.27%)</title><rect x="333" y="180" width="3" height="15" fill="rgb(207,95,17)"/><text x="336.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="196" width="3" height="15" fill="rgb(219,203,17)"/><text x="336.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="212" width="3" height="15" fill="rgb(253,105,43)"/><text x="336.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="333" y="228" width="3" height="15" fill="rgb(218,93,32)"/><text x="336.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="333" y="244" width="3" height="15" fill="rgb(231,133,45)"/><text x="336.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="333" y="260" width="3" height="15" fill="rgb(205,15,23)"/><text x="336.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="276" width="3" height="15" fill="rgb(209,138,1)"/><text x="336.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.27%)</title><rect x="333" y="292" width="3" height="15" fill="rgb(229,204,4)"/><text x="336.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="308" width="3" height="15" fill="rgb(213,3,37)"/><text x="336.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="333" y="324" width="3" height="15" fill="rgb(210,12,44)"/><text x="336.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="333" y="340" width="3" height="15" fill="rgb(207,77,19)"/><text x="336.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="333" y="356" width="3" height="15" fill="rgb(224,116,10)"/><text x="336.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="372" width="3" height="15" fill="rgb(240,35,22)"/><text x="336.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.27%)</title><rect x="333" y="388" width="3" height="15" fill="rgb(253,129,24)"/><text x="336.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="404" width="3" height="15" fill="rgb(245,53,0)"/><text x="336.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="333" y="420" width="3" height="15" fill="rgb(240,64,3)"/><text x="336.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="333" y="436" width="3" height="15" fill="rgb(252,144,51)"/><text x="336.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="333" y="452" width="3" height="15" fill="rgb(241,176,7)"/><text x="336.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="468" width="3" height="15" fill="rgb(240,12,50)"/><text x="336.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.27%)</title><rect x="333" y="484" width="3" height="15" fill="rgb(206,187,53)"/><text x="336.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="500" width="3" height="15" fill="rgb(224,67,42)"/><text x="336.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="333" y="516" width="3" height="15" fill="rgb(232,65,26)"/><text x="336.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="333" y="532" width="3" height="15" fill="rgb(229,179,47)"/><text x="336.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="333" y="548" width="3" height="15" fill="rgb(223,17,22)"/><text x="336.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="564" width="3" height="15" fill="rgb(224,130,0)"/><text x="336.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.27%)</title><rect x="333" y="580" width="3" height="15" fill="rgb(206,142,39)"/><text x="336.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="596" width="3" height="15" fill="rgb(226,115,43)"/><text x="336.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.27%)</title><rect x="333" y="612" width="3" height="15" fill="rgb(243,52,6)"/><text x="336.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="628" width="3" height="15" fill="rgb(224,25,54)"/><text x="336.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="644" width="3" height="15" fill="rgb(249,228,34)"/><text x="336.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="333" y="660" width="3" height="15" fill="rgb(215,164,54)"/><text x="336.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="333" y="676" width="3" height="15" fill="rgb(208,165,53)"/><text x="336.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="333" y="692" width="3" height="15" fill="rgb(235,116,20)"/><text x="336.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="708" width="3" height="15" fill="rgb(229,28,43)"/><text x="336.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.27%)</title><rect x="333" y="724" width="3" height="15" fill="rgb(254,184,6)"/><text x="336.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="333" y="740" width="3" height="15" fill="rgb(220,212,21)"/><text x="336.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="333" y="756" width="3" height="15" fill="rgb(238,187,23)"/><text x="336.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="333" y="772" width="3" height="15" fill="rgb(234,46,49)"/><text x="336.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="333" y="788" width="3" height="15" fill="rgb(209,110,7)"/><text x="336.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="333" y="804" width="3" height="15" fill="rgb(213,176,52)"/><text x="336.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.27%)</title><rect x="333" y="820" width="3" height="15" fill="rgb(236,141,3)"/><text x="336.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.27%)</title><rect x="333" y="836" width="3" height="15" fill="rgb(236,27,27)"/><text x="336.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.27%)</title><rect x="333" y="852" width="3" height="15" fill="rgb(214,14,53)"/><text x="336.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.27%)</title><rect x="333" y="868" width="3" height="15" fill="rgb(219,210,47)"/><text x="336.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.13%)</title><rect x="334" y="884" width="2" height="15" fill="rgb(207,109,49)"/><text x="337.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.13%)</title><rect x="334" y="900" width="2" height="15" fill="rgb(224,150,27)"/><text x="337.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.13%)</title><rect x="334" y="916" width="2" height="15" fill="rgb(227,50,36)"/><text x="337.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.13%)</title><rect x="334" y="932" width="2" height="15" fill="rgb(219,55,53)"/><text x="337.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.13%)</title><rect x="334" y="948" width="2" height="15" fill="rgb(225,134,18)"/><text x="337.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:206) (1 samples, 0.13%)</title><rect x="334" y="964" width="2" height="15" fill="rgb(235,224,48)"/><text x="337.00" y="974.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.13%)</title><rect x="336" y="580" width="2" height="15" fill="rgb(245,228,44)"/><text x="339.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="596" width="2" height="15" fill="rgb(246,13,0)"/><text x="339.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="612" width="2" height="15" fill="rgb(229,109,35)"/><text x="339.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="628" width="2" height="15" fill="rgb(239,122,15)"/><text x="339.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="644" width="2" height="15" fill="rgb(232,95,28)"/><text x="339.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="660" width="2" height="15" fill="rgb(251,15,8)"/><text x="339.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.13%)</title><rect x="336" y="676" width="2" height="15" fill="rgb(234,193,37)"/><text x="339.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="692" width="2" height="15" fill="rgb(216,83,38)"/><text x="339.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="708" width="2" height="15" fill="rgb(215,169,24)"/><text x="339.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="724" width="2" height="15" fill="rgb(232,83,49)"/><text x="339.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="740" width="2" height="15" fill="rgb(252,167,50)"/><text x="339.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="756" width="2" height="15" fill="rgb(231,206,39)"/><text x="339.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:76) (1 samples, 0.13%)</title><rect x="336" y="772" width="2" height="15" fill="rgb(241,117,22)"/><text x="339.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="788" width="2" height="15" fill="rgb(230,9,41)"/><text x="339.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="804" width="2" height="15" fill="rgb(237,100,8)"/><text x="339.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="820" width="2" height="15" fill="rgb(206,96,28)"/><text x="339.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="836" width="2" height="15" fill="rgb(222,228,26)"/><text x="339.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="852" width="2" height="15" fill="rgb(244,168,32)"/><text x="339.00" y="862.50"></text></g><g><title>&lt;module&gt; (configparser.py:447) (1 samples, 0.13%)</title><rect x="336" y="868" width="2" height="15" fill="rgb(245,61,26)"/><text x="339.00" y="878.50"></text></g><g><title>ExtendedInterpolation (configparser.py:451) (1 samples, 0.13%)</title><rect x="336" y="884" width="2" height="15" fill="rgb(232,102,20)"/><text x="339.00" y="894.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.13%)</title><rect x="336" y="900" width="2" height="15" fill="rgb(235,144,1)"/><text x="339.00" y="910.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.13%)</title><rect x="336" y="916" width="2" height="15" fill="rgb(235,203,0)"/><text x="339.00" y="926.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.13%)</title><rect x="336" y="932" width="2" height="15" fill="rgb(230,130,53)"/><text x="339.00" y="942.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.13%)</title><rect x="336" y="948" width="2" height="15" fill="rgb(208,144,5)"/><text x="339.00" y="958.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="336" y="964" width="2" height="15" fill="rgb(237,159,10)"/><text x="339.00" y="974.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="336" y="980" width="2" height="15" fill="rgb(242,204,54)"/><text x="339.00" y="990.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="336" y="996" width="2" height="15" fill="rgb(230,85,39)"/><text x="339.00" y="1006.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.13%)</title><rect x="336" y="1012" width="2" height="15" fill="rgb(247,4,32)"/><text x="339.00" y="1022.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.13%)</title><rect x="336" y="1028" width="2" height="15" fill="rgb(223,7,24)"/><text x="339.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.27%)</title><rect x="336" y="244" width="3" height="15" fill="rgb(253,82,54)"/><text x="339.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="336" y="260" width="3" height="15" fill="rgb(211,51,3)"/><text x="339.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="336" y="276" width="3" height="15" fill="rgb(234,164,18)"/><text x="339.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="336" y="292" width="3" height="15" fill="rgb(227,178,53)"/><text x="339.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="336" y="308" width="3" height="15" fill="rgb(253,184,47)"/><text x="339.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="336" y="324" width="3" height="15" fill="rgb(239,205,1)"/><text x="339.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.27%)</title><rect x="336" y="340" width="3" height="15" fill="rgb(205,225,36)"/><text x="339.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="336" y="356" width="3" height="15" fill="rgb(233,18,41)"/><text x="339.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.27%)</title><rect x="336" y="372" width="3" height="15" fill="rgb(237,23,18)"/><text x="339.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="336" y="388" width="3" height="15" fill="rgb(213,108,7)"/><text x="339.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="336" y="404" width="3" height="15" fill="rgb(228,193,27)"/><text x="339.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="336" y="420" width="3" height="15" fill="rgb(236,58,39)"/><text x="339.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="336" y="436" width="3" height="15" fill="rgb(222,178,31)"/><text x="339.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="336" y="452" width="3" height="15" fill="rgb(231,130,4)"/><text x="339.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="336" y="468" width="3" height="15" fill="rgb(217,177,51)"/><text x="339.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.27%)</title><rect x="336" y="484" width="3" height="15" fill="rgb(215,125,18)"/><text x="339.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="336" y="500" width="3" height="15" fill="rgb(216,178,33)"/><text x="339.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="336" y="516" width="3" height="15" fill="rgb(228,171,38)"/><text x="339.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="336" y="532" width="3" height="15" fill="rgb(239,196,24)"/><text x="339.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="336" y="548" width="3" height="15" fill="rgb(228,211,27)"/><text x="339.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="336" y="564" width="3" height="15" fill="rgb(208,28,7)"/><text x="339.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.13%)</title><rect x="338" y="580" width="1" height="15" fill="rgb(215,133,31)"/><text x="341.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="596" width="1" height="15" fill="rgb(241,2,53)"/><text x="341.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="338" y="612" width="1" height="15" fill="rgb(211,190,54)"/><text x="341.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="628" width="1" height="15" fill="rgb(249,107,54)"/><text x="341.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="644" width="1" height="15" fill="rgb(247,11,12)"/><text x="341.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="660" width="1" height="15" fill="rgb(235,119,17)"/><text x="341.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="676" width="1" height="15" fill="rgb(207,8,35)"/><text x="341.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="692" width="1" height="15" fill="rgb(244,30,1)"/><text x="341.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="708" width="1" height="15" fill="rgb(251,139,9)"/><text x="341.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.13%)</title><rect x="338" y="724" width="1" height="15" fill="rgb(223,89,49)"/><text x="341.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="740" width="1" height="15" fill="rgb(226,150,26)"/><text x="341.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="756" width="1" height="15" fill="rgb(235,47,23)"/><text x="341.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="772" width="1" height="15" fill="rgb(250,148,26)"/><text x="341.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="788" width="1" height="15" fill="rgb(234,159,43)"/><text x="341.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="804" width="1" height="15" fill="rgb(206,82,17)"/><text x="341.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.13%)</title><rect x="338" y="820" width="1" height="15" fill="rgb(218,165,38)"/><text x="341.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="836" width="1" height="15" fill="rgb(211,103,50)"/><text x="341.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="852" width="1" height="15" fill="rgb(234,41,31)"/><text x="341.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="868" width="1" height="15" fill="rgb(210,8,6)"/><text x="341.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="884" width="1" height="15" fill="rgb(218,9,37)"/><text x="341.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="900" width="1" height="15" fill="rgb(230,40,9)"/><text x="341.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.13%)</title><rect x="338" y="916" width="1" height="15" fill="rgb(222,31,21)"/><text x="341.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="932" width="1" height="15" fill="rgb(223,209,45)"/><text x="341.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="338" y="948" width="1" height="15" fill="rgb(235,111,3)"/><text x="341.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="964" width="1" height="15" fill="rgb(250,182,25)"/><text x="341.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="980" width="1" height="15" fill="rgb(246,150,48)"/><text x="341.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="996" width="1" height="15" fill="rgb(240,122,52)"/><text x="341.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="1012" width="1" height="15" fill="rgb(215,124,12)"/><text x="341.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="1028" width="1" height="15" fill="rgb(247,120,28)"/><text x="341.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="1044" width="1" height="15" fill="rgb(250,60,13)"/><text x="341.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.13%)</title><rect x="338" y="1060" width="1" height="15" fill="rgb(226,157,19)"/><text x="341.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="1076" width="1" height="15" fill="rgb(232,109,21)"/><text x="341.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="1092" width="1" height="15" fill="rgb(250,222,1)"/><text x="341.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="1108" width="1" height="15" fill="rgb(229,144,25)"/><text x="341.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="1124" width="1" height="15" fill="rgb(219,97,53)"/><text x="341.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="1140" width="1" height="15" fill="rgb(211,157,41)"/><text x="341.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:6) (1 samples, 0.13%)</title><rect x="338" y="1156" width="1" height="15" fill="rgb(213,96,6)"/><text x="341.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="338" y="1172" width="1" height="15" fill="rgb(210,103,26)"/><text x="341.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="1188" width="1" height="15" fill="rgb(223,169,34)"/><text x="341.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="1204" width="1" height="15" fill="rgb(221,167,14)"/><text x="341.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="1220" width="1" height="15" fill="rgb(246,224,2)"/><text x="341.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="1236" width="1" height="15" fill="rgb(242,22,1)"/><text x="341.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="1252" width="1" height="15" fill="rgb(243,200,16)"/><text x="341.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="1268" width="1" height="15" fill="rgb(246,142,54)"/><text x="341.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pysvn_helper.py:12) (1 samples, 0.13%)</title><rect x="338" y="1284" width="1" height="15" fill="rgb(241,101,18)"/><text x="341.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="1300" width="1" height="15" fill="rgb(214,113,28)"/><text x="341.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="1316" width="1" height="15" fill="rgb(229,186,7)"/><text x="341.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="1332" width="1" height="15" fill="rgb(250,206,9)"/><text x="341.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="1348" width="1" height="15" fill="rgb(223,87,47)"/><text x="341.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="1364" width="1" height="15" fill="rgb(207,84,31)"/><text x="341.00" y="1374.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementTree.py:1660) (1 samples, 0.13%)</title><rect x="338" y="1380" width="1" height="15" fill="rgb(210,10,30)"/><text x="341.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="1396" width="1" height="15" fill="rgb(251,204,22)"/><text x="341.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.13%)</title><rect x="338" y="1412" width="1" height="15" fill="rgb(211,189,11)"/><text x="341.00" y="1422.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.13%)</title><rect x="338" y="1428" width="1" height="15" fill="rgb(212,44,21)"/><text x="341.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.13%)</title><rect x="338" y="1444" width="1" height="15" fill="rgb(215,113,27)"/><text x="341.00" y="1454.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.13%)</title><rect x="338" y="1460" width="1" height="15" fill="rgb(242,149,45)"/><text x="341.00" y="1470.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.13%)</title><rect x="338" y="1476" width="1" height="15" fill="rgb(222,64,35)"/><text x="341.00" y="1486.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.13%)</title><rect x="338" y="1492" width="1" height="15" fill="rgb(207,50,11)"/><text x="341.00" y="1502.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.13%)</title><rect x="338" y="1508" width="1" height="15" fill="rgb(213,208,33)"/><text x="341.00" y="1518.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.13%)</title><rect x="338" y="1524" width="1" height="15" fill="rgb(243,46,20)"/><text x="341.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.13%)</title><rect x="339" y="436" width="2" height="15" fill="rgb(230,101,12)"/><text x="342.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="452" width="2" height="15" fill="rgb(227,72,49)"/><text x="342.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="468" width="2" height="15" fill="rgb(242,169,13)"/><text x="342.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="484" width="2" height="15" fill="rgb(234,157,44)"/><text x="342.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="500" width="2" height="15" fill="rgb(205,6,32)"/><text x="342.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="516" width="2" height="15" fill="rgb(226,85,31)"/><text x="342.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.13%)</title><rect x="339" y="532" width="2" height="15" fill="rgb(254,130,12)"/><text x="342.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="548" width="2" height="15" fill="rgb(215,38,22)"/><text x="342.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="564" width="2" height="15" fill="rgb(214,207,36)"/><text x="342.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="580" width="2" height="15" fill="rgb(213,197,2)"/><text x="342.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="596" width="2" height="15" fill="rgb(240,175,23)"/><text x="342.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="612" width="2" height="15" fill="rgb(216,5,24)"/><text x="342.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.13%)</title><rect x="339" y="628" width="2" height="15" fill="rgb(214,190,51)"/><text x="342.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="644" width="2" height="15" fill="rgb(229,1,43)"/><text x="342.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="660" width="2" height="15" fill="rgb(221,166,35)"/><text x="342.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="676" width="2" height="15" fill="rgb(210,104,28)"/><text x="342.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="692" width="2" height="15" fill="rgb(245,54,41)"/><text x="342.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="708" width="2" height="15" fill="rgb(244,102,33)"/><text x="342.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.13%)</title><rect x="339" y="724" width="2" height="15" fill="rgb(210,120,3)"/><text x="342.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="740" width="2" height="15" fill="rgb(218,83,9)"/><text x="342.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="756" width="2" height="15" fill="rgb(227,147,42)"/><text x="342.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="772" width="2" height="15" fill="rgb(228,98,9)"/><text x="342.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="788" width="2" height="15" fill="rgb(239,91,36)"/><text x="342.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="804" width="2" height="15" fill="rgb(215,35,21)"/><text x="342.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.13%)</title><rect x="339" y="820" width="2" height="15" fill="rgb(230,178,35)"/><text x="342.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="836" width="2" height="15" fill="rgb(244,137,21)"/><text x="342.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="852" width="2" height="15" fill="rgb(208,92,43)"/><text x="342.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="868" width="2" height="15" fill="rgb(211,215,4)"/><text x="342.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="884" width="2" height="15" fill="rgb(234,82,43)"/><text x="342.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="900" width="2" height="15" fill="rgb(229,151,33)"/><text x="342.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.13%)</title><rect x="339" y="916" width="2" height="15" fill="rgb(242,154,29)"/><text x="342.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="932" width="2" height="15" fill="rgb(253,90,10)"/><text x="342.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="948" width="2" height="15" fill="rgb(252,5,42)"/><text x="342.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="964" width="2" height="15" fill="rgb(248,0,5)"/><text x="342.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="980" width="2" height="15" fill="rgb(227,185,14)"/><text x="342.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="996" width="2" height="15" fill="rgb(235,221,6)"/><text x="342.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.13%)</title><rect x="339" y="1012" width="2" height="15" fill="rgb(226,181,30)"/><text x="342.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="1028" width="2" height="15" fill="rgb(243,40,29)"/><text x="342.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="1044" width="2" height="15" fill="rgb(240,209,25)"/><text x="342.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="1060" width="2" height="15" fill="rgb(252,217,47)"/><text x="342.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="1076" width="2" height="15" fill="rgb(253,158,31)"/><text x="342.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="1092" width="2" height="15" fill="rgb(206,30,41)"/><text x="342.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:70) (1 samples, 0.13%)</title><rect x="339" y="1108" width="2" height="15" fill="rgb(249,145,45)"/><text x="342.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="1124" width="2" height="15" fill="rgb(250,77,52)"/><text x="342.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="1140" width="2" height="15" fill="rgb(216,73,34)"/><text x="342.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="1156" width="2" height="15" fill="rgb(254,116,35)"/><text x="342.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="1172" width="2" height="15" fill="rgb(234,29,47)"/><text x="342.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="1188" width="2" height="15" fill="rgb(231,220,23)"/><text x="342.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py:188) (1 samples, 0.13%)</title><rect x="339" y="1204" width="2" height="15" fill="rgb(212,18,9)"/><text x="342.00" y="1214.50"></text></g><g><title>0x7fb29b3c2e7e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="339" y="1220" width="2" height="15" fill="rgb(234,48,11)"/><text x="342.00" y="1230.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.13%)</title><rect x="341" y="1396" width="1" height="15" fill="rgb(228,136,24)"/><text x="344.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.13%)</title><rect x="341" y="1412" width="1" height="15" fill="rgb(213,174,4)"/><text x="344.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.13%)</title><rect x="341" y="1428" width="1" height="15" fill="rgb(217,69,15)"/><text x="344.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.13%)</title><rect x="341" y="1444" width="1" height="15" fill="rgb(217,13,42)"/><text x="344.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.13%)</title><rect x="341" y="1460" width="1" height="15" fill="rgb(221,175,8)"/><text x="344.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="341" y="1476" width="1" height="15" fill="rgb(234,76,47)"/><text x="344.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="341" y="1492" width="1" height="15" fill="rgb(240,110,43)"/><text x="344.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="341" y="1508" width="1" height="15" fill="rgb(254,23,0)"/><text x="344.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="341" y="1524" width="1" height="15" fill="rgb(242,151,9)"/><text x="344.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="341" y="1540" width="1" height="15" fill="rgb(245,92,24)"/><text x="344.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="341" y="1556" width="1" height="15" fill="rgb(250,192,10)"/><text x="344.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="341" y="1572" width="1" height="15" fill="rgb(220,102,5)"/><text x="344.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="341" y="1588" width="1" height="15" fill="rgb(223,19,34)"/><text x="344.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="341" y="1604" width="1" height="15" fill="rgb(239,130,34)"/><text x="344.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.13%)</title><rect x="341" y="1620" width="1" height="15" fill="rgb(226,154,16)"/><text x="344.00" y="1630.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.27%)</title><rect x="341" y="1108" width="3" height="15" fill="rgb(214,146,30)"/><text x="344.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="341" y="1124" width="3" height="15" fill="rgb(228,175,32)"/><text x="344.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="341" y="1140" width="3" height="15" fill="rgb(210,116,29)"/><text x="344.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="341" y="1156" width="3" height="15" fill="rgb(224,181,32)"/><text x="344.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="341" y="1172" width="3" height="15" fill="rgb(251,153,37)"/><text x="344.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="341" y="1188" width="3" height="15" fill="rgb(251,138,16)"/><text x="344.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.27%)</title><rect x="341" y="1204" width="3" height="15" fill="rgb(226,23,48)"/><text x="344.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="341" y="1220" width="3" height="15" fill="rgb(247,36,19)"/><text x="344.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="341" y="1236" width="3" height="15" fill="rgb(211,22,36)"/><text x="344.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="341" y="1252" width="3" height="15" fill="rgb(223,79,45)"/><text x="344.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="341" y="1268" width="3" height="15" fill="rgb(215,213,15)"/><text x="344.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="341" y="1284" width="3" height="15" fill="rgb(208,31,7)"/><text x="344.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.27%)</title><rect x="341" y="1300" width="3" height="15" fill="rgb(213,167,6)"/><text x="344.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.27%)</title><rect x="341" y="1316" width="3" height="15" fill="rgb(228,160,37)"/><text x="344.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.27%)</title><rect x="341" y="1332" width="3" height="15" fill="rgb(228,46,29)"/><text x="344.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.27%)</title><rect x="341" y="1348" width="3" height="15" fill="rgb(244,39,6)"/><text x="344.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.27%)</title><rect x="341" y="1364" width="3" height="15" fill="rgb(251,44,0)"/><text x="344.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (2 samples, 0.27%)</title><rect x="341" y="1380" width="3" height="15" fill="rgb(224,25,30)"/><text x="344.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.13%)</title><rect x="342" y="1396" width="2" height="15" fill="rgb(228,148,9)"/><text x="345.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.13%)</title><rect x="342" y="1412" width="2" height="15" fill="rgb(235,221,22)"/><text x="345.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.13%)</title><rect x="344" y="1204" width="2" height="15" fill="rgb(250,136,37)"/><text x="347.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="344" y="1220" width="2" height="15" fill="rgb(254,220,7)"/><text x="347.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="344" y="1236" width="2" height="15" fill="rgb(249,212,0)"/><text x="347.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="344" y="1252" width="2" height="15" fill="rgb(253,90,30)"/><text x="347.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="344" y="1268" width="2" height="15" fill="rgb(218,53,18)"/><text x="347.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="344" y="1284" width="2" height="15" fill="rgb(245,84,38)"/><text x="347.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:9) (1 samples, 0.13%)</title><rect x="344" y="1300" width="2" height="15" fill="rgb(249,37,44)"/><text x="347.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="344" y="1316" width="2" height="15" fill="rgb(227,86,16)"/><text x="347.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="344" y="1332" width="2" height="15" fill="rgb(245,227,49)"/><text x="347.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="344" y="1348" width="2" height="15" fill="rgb(246,85,52)"/><text x="347.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="344" y="1364" width="2" height="15" fill="rgb(250,1,8)"/><text x="347.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="344" y="1380" width="2" height="15" fill="rgb(221,94,1)"/><text x="347.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_graph.py:7) (1 samples, 0.13%)</title><rect x="344" y="1396" width="2" height="15" fill="rgb(249,144,52)"/><text x="347.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="344" y="1412" width="2" height="15" fill="rgb(218,30,29)"/><text x="347.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="344" y="1428" width="2" height="15" fill="rgb(224,52,40)"/><text x="347.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="344" y="1444" width="2" height="15" fill="rgb(234,166,36)"/><text x="347.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="344" y="1460" width="2" height="15" fill="rgb(247,23,16)"/><text x="347.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="344" y="1476" width="2" height="15" fill="rgb(236,35,13)"/><text x="347.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_base.py:30) (1 samples, 0.13%)</title><rect x="344" y="1492" width="2" height="15" fill="rgb(229,24,50)"/><text x="347.00" y="1502.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:4) (9 samples, 1.21%)</title><rect x="333" y="52" width="14" height="15" fill="rgb(217,152,8)"/><text x="336.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.21%)</title><rect x="333" y="68" width="14" height="15" fill="rgb(209,190,38)"/><text x="336.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.21%)</title><rect x="333" y="84" width="14" height="15" fill="rgb(206,15,38)"/><text x="336.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.21%)</title><rect x="333" y="100" width="14" height="15" fill="rgb(227,208,49)"/><text x="336.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.21%)</title><rect x="333" y="116" width="14" height="15" fill="rgb(208,198,49)"/><text x="336.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.21%)</title><rect x="333" y="132" width="14" height="15" fill="rgb(252,216,31)"/><text x="336.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:7) (7 samples, 0.94%)</title><rect x="336" y="148" width="11" height="15" fill="rgb(219,8,27)"/><text x="339.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.94%)</title><rect x="336" y="164" width="11" height="15" fill="rgb(241,79,23)"/><text x="339.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.94%)</title><rect x="336" y="180" width="11" height="15" fill="rgb(218,108,36)"/><text x="339.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.94%)</title><rect x="336" y="196" width="11" height="15" fill="rgb(223,97,54)"/><text x="339.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.94%)</title><rect x="336" y="212" width="11" height="15" fill="rgb(210,109,3)"/><text x="339.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.94%)</title><rect x="336" y="228" width="11" height="15" fill="rgb(209,92,48)"/><text x="339.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.67%)</title><rect x="339" y="244" width="8" height="15" fill="rgb(242,135,16)"/><text x="342.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="339" y="260" width="8" height="15" fill="rgb(214,215,11)"/><text x="342.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="339" y="276" width="8" height="15" fill="rgb(214,154,12)"/><text x="342.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="339" y="292" width="8" height="15" fill="rgb(252,148,1)"/><text x="342.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="339" y="308" width="8" height="15" fill="rgb(212,153,4)"/><text x="342.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="339" y="324" width="8" height="15" fill="rgb(248,125,24)"/><text x="342.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.67%)</title><rect x="339" y="340" width="8" height="15" fill="rgb(252,81,20)"/><text x="342.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="339" y="356" width="8" height="15" fill="rgb(251,157,24)"/><text x="342.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="339" y="372" width="8" height="15" fill="rgb(224,76,46)"/><text x="342.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="339" y="388" width="8" height="15" fill="rgb(244,39,41)"/><text x="342.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="339" y="404" width="8" height="15" fill="rgb(208,123,18)"/><text x="342.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="339" y="420" width="8" height="15" fill="rgb(230,127,7)"/><text x="342.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.54%)</title><rect x="341" y="436" width="6" height="15" fill="rgb(211,141,34)"/><text x="344.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="452" width="6" height="15" fill="rgb(214,13,48)"/><text x="344.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.54%)</title><rect x="341" y="468" width="6" height="15" fill="rgb(225,157,13)"/><text x="344.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="484" width="6" height="15" fill="rgb(250,173,52)"/><text x="344.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="500" width="6" height="15" fill="rgb(234,21,24)"/><text x="344.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.54%)</title><rect x="341" y="516" width="6" height="15" fill="rgb(242,110,10)"/><text x="344.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.54%)</title><rect x="341" y="532" width="6" height="15" fill="rgb(216,38,9)"/><text x="344.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.54%)</title><rect x="341" y="548" width="6" height="15" fill="rgb(205,57,49)"/><text x="344.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="564" width="6" height="15" fill="rgb(207,226,50)"/><text x="344.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.54%)</title><rect x="341" y="580" width="6" height="15" fill="rgb(208,29,7)"/><text x="344.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="596" width="6" height="15" fill="rgb(212,186,24)"/><text x="344.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.54%)</title><rect x="341" y="612" width="6" height="15" fill="rgb(249,195,29)"/><text x="344.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.54%)</title><rect x="341" y="628" width="6" height="15" fill="rgb(210,104,9)"/><text x="344.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.54%)</title><rect x="341" y="644" width="6" height="15" fill="rgb(233,126,6)"/><text x="344.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="660" width="6" height="15" fill="rgb(230,78,24)"/><text x="344.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.54%)</title><rect x="341" y="676" width="6" height="15" fill="rgb(217,89,25)"/><text x="344.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="692" width="6" height="15" fill="rgb(213,101,54)"/><text x="344.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.54%)</title><rect x="341" y="708" width="6" height="15" fill="rgb(206,47,38)"/><text x="344.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.54%)</title><rect x="341" y="724" width="6" height="15" fill="rgb(232,63,54)"/><text x="344.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.54%)</title><rect x="341" y="740" width="6" height="15" fill="rgb(251,217,21)"/><text x="344.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="756" width="6" height="15" fill="rgb(228,20,4)"/><text x="344.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.54%)</title><rect x="341" y="772" width="6" height="15" fill="rgb(224,8,29)"/><text x="344.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="788" width="6" height="15" fill="rgb(236,97,17)"/><text x="344.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.54%)</title><rect x="341" y="804" width="6" height="15" fill="rgb(212,124,42)"/><text x="344.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.54%)</title><rect x="341" y="820" width="6" height="15" fill="rgb(253,152,13)"/><text x="344.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.54%)</title><rect x="341" y="836" width="6" height="15" fill="rgb(221,71,24)"/><text x="344.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="852" width="6" height="15" fill="rgb(240,168,8)"/><text x="344.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.54%)</title><rect x="341" y="868" width="6" height="15" fill="rgb(221,116,39)"/><text x="344.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="884" width="6" height="15" fill="rgb(247,188,48)"/><text x="344.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.54%)</title><rect x="341" y="900" width="6" height="15" fill="rgb(214,171,5)"/><text x="344.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="916" width="6" height="15" fill="rgb(222,177,8)"/><text x="344.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="932" width="6" height="15" fill="rgb(244,95,16)"/><text x="344.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.54%)</title><rect x="341" y="948" width="6" height="15" fill="rgb(226,169,31)"/><text x="344.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.54%)</title><rect x="341" y="964" width="6" height="15" fill="rgb(229,138,54)"/><text x="344.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.54%)</title><rect x="341" y="980" width="6" height="15" fill="rgb(227,87,35)"/><text x="344.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="996" width="6" height="15" fill="rgb(223,105,36)"/><text x="344.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.54%)</title><rect x="341" y="1012" width="6" height="15" fill="rgb(243,160,8)"/><text x="344.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.54%)</title><rect x="341" y="1028" width="6" height="15" fill="rgb(253,189,47)"/><text x="344.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.54%)</title><rect x="341" y="1044" width="6" height="15" fill="rgb(206,220,16)"/><text x="344.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.54%)</title><rect x="341" y="1060" width="6" height="15" fill="rgb(222,73,53)"/><text x="344.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.54%)</title><rect x="341" y="1076" width="6" height="15" fill="rgb(206,85,42)"/><text x="344.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.54%)</title><rect x="341" y="1092" width="6" height="15" fill="rgb(206,97,30)"/><text x="344.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.27%)</title><rect x="344" y="1108" width="3" height="15" fill="rgb(212,165,20)"/><text x="347.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="344" y="1124" width="3" height="15" fill="rgb(239,47,48)"/><text x="347.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="344" y="1140" width="3" height="15" fill="rgb(228,1,24)"/><text x="347.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="344" y="1156" width="3" height="15" fill="rgb(253,44,30)"/><text x="347.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="344" y="1172" width="3" height="15" fill="rgb(233,66,15)"/><text x="347.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="344" y="1188" width="3" height="15" fill="rgb(237,190,35)"/><text x="347.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.13%)</title><rect x="346" y="1204" width="1" height="15" fill="rgb(236,158,50)"/><text x="349.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="346" y="1220" width="1" height="15" fill="rgb(247,204,10)"/><text x="349.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="346" y="1236" width="1" height="15" fill="rgb(208,206,13)"/><text x="349.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="346" y="1252" width="1" height="15" fill="rgb(238,83,22)"/><text x="349.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="346" y="1268" width="1" height="15" fill="rgb(236,220,17)"/><text x="349.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="346" y="1284" width="1" height="15" fill="rgb(242,123,31)"/><text x="349.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.13%)</title><rect x="346" y="1300" width="1" height="15" fill="rgb(224,203,4)"/><text x="349.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="346" y="1316" width="1" height="15" fill="rgb(249,220,5)"/><text x="349.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="346" y="1332" width="1" height="15" fill="rgb(248,228,44)"/><text x="349.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="346" y="1348" width="1" height="15" fill="rgb(224,24,48)"/><text x="349.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="346" y="1364" width="1" height="15" fill="rgb(241,192,29)"/><text x="349.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="346" y="1380" width="1" height="15" fill="rgb(211,194,37)"/><text x="349.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.13%)</title><rect x="346" y="1396" width="1" height="15" fill="rgb(225,62,33)"/><text x="349.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="346" y="1412" width="1" height="15" fill="rgb(235,25,30)"/><text x="349.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="346" y="1428" width="1" height="15" fill="rgb(212,71,18)"/><text x="349.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="346" y="1444" width="1" height="15" fill="rgb(239,127,38)"/><text x="349.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="346" y="1460" width="1" height="15" fill="rgb(242,24,29)"/><text x="349.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="346" y="1476" width="1" height="15" fill="rgb(241,10,6)"/><text x="349.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.13%)</title><rect x="346" y="1492" width="1" height="15" fill="rgb(209,16,23)"/><text x="349.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="346" y="1508" width="1" height="15" fill="rgb(230,125,46)"/><text x="349.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="346" y="1524" width="1" height="15" fill="rgb(227,154,31)"/><text x="349.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="346" y="1540" width="1" height="15" fill="rgb(252,218,36)"/><text x="349.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="346" y="1556" width="1" height="15" fill="rgb(217,158,34)"/><text x="349.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="346" y="1572" width="1" height="15" fill="rgb(248,101,27)"/><text x="349.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="346" y="1588" width="1" height="15" fill="rgb(242,86,33)"/><text x="349.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="346" y="1604" width="1" height="15" fill="rgb(227,66,36)"/><text x="349.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.13%)</title><rect x="346" y="1620" width="1" height="15" fill="rgb(253,199,11)"/><text x="349.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="346" y="1636" width="1" height="15" fill="rgb(242,10,43)"/><text x="349.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="346" y="1652" width="1" height="15" fill="rgb(226,96,9)"/><text x="349.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="346" y="1668" width="1" height="15" fill="rgb(205,186,10)"/><text x="349.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="346" y="1684" width="1" height="15" fill="rgb(252,185,51)"/><text x="349.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="346" y="1700" width="1" height="15" fill="rgb(249,156,41)"/><text x="349.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.13%)</title><rect x="346" y="1716" width="1" height="15" fill="rgb(231,173,50)"/><text x="349.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="346" y="1732" width="1" height="15" fill="rgb(240,62,21)"/><text x="349.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="346" y="1748" width="1" height="15" fill="rgb(250,13,24)"/><text x="349.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="346" y="1764" width="1" height="15" fill="rgb(213,89,12)"/><text x="349.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="346" y="1780" width="1" height="15" fill="rgb(209,2,7)"/><text x="349.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="346" y="1796" width="1" height="15" fill="rgb(232,162,38)"/><text x="349.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:5) (1 samples, 0.13%)</title><rect x="346" y="1812" width="1" height="15" fill="rgb(207,99,0)"/><text x="349.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="346" y="1828" width="1" height="15" fill="rgb(211,214,44)"/><text x="349.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.13%)</title><rect x="346" y="1844" width="1" height="15" fill="rgb(218,180,54)"/><text x="349.00" y="1854.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.13%)</title><rect x="346" y="1860" width="1" height="15" fill="rgb(222,70,22)"/><text x="349.00" y="1870.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:861) (1 samples, 0.13%)</title><rect x="346" y="1876" width="1" height="15" fill="rgb(224,205,21)"/><text x="349.00" y="1886.50"></text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:28) (1 samples, 0.13%)</title><rect x="347" y="84" width="2" height="15" fill="rgb(244,136,20)"/><text x="350.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.13%)</title><rect x="347" y="100" width="2" height="15" fill="rgb(223,141,4)"/><text x="350.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.13%)</title><rect x="347" y="116" width="2" height="15" fill="rgb(253,112,38)"/><text x="350.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.13%)</title><rect x="347" y="132" width="2" height="15" fill="rgb(250,115,16)"/><text x="350.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.13%)</title><rect x="347" y="148" width="2" height="15" fill="rgb(211,30,11)"/><text x="350.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.13%)</title><rect x="347" y="164" width="2" height="15" fill="rgb(251,81,25)"/><text x="350.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.13%)</title><rect x="347" y="180" width="2" height="15" fill="rgb(254,199,0)"/><text x="350.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.13%)</title><rect x="347" y="196" width="2" height="15" fill="rgb(213,113,54)"/><text x="350.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="347" y="212" width="2" height="15" fill="rgb(220,189,37)"/><text x="350.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="347" y="228" width="2" height="15" fill="rgb(220,211,28)"/><text x="350.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="347" y="244" width="2" height="15" fill="rgb(220,184,48)"/><text x="350.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="347" y="260" width="2" height="15" fill="rgb(213,156,24)"/><text x="350.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="347" y="276" width="2" height="15" fill="rgb(229,146,31)"/><text x="350.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.13%)</title><rect x="347" y="292" width="2" height="15" fill="rgb(250,33,39)"/><text x="350.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="347" y="308" width="2" height="15" fill="rgb(230,128,22)"/><text x="350.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="347" y="324" width="2" height="15" fill="rgb(244,221,49)"/><text x="350.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="347" y="340" width="2" height="15" fill="rgb(250,62,12)"/><text x="350.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="347" y="356" width="2" height="15" fill="rgb(206,44,40)"/><text x="350.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="347" y="372" width="2" height="15" fill="rgb(227,119,21)"/><text x="350.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.13%)</title><rect x="347" y="388" width="2" height="15" fill="rgb(229,2,49)"/><text x="350.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="347" y="404" width="2" height="15" fill="rgb(221,102,41)"/><text x="350.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="347" y="420" width="2" height="15" fill="rgb(220,219,24)"/><text x="350.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="347" y="436" width="2" height="15" fill="rgb(205,14,36)"/><text x="350.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="347" y="452" width="2" height="15" fill="rgb(222,167,31)"/><text x="350.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="347" y="468" width="2" height="15" fill="rgb(221,40,16)"/><text x="350.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.13%)</title><rect x="347" y="484" width="2" height="15" fill="rgb(221,165,12)"/><text x="350.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.13%)</title><rect x="347" y="500" width="2" height="15" fill="rgb(241,139,20)"/><text x="350.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.13%)</title><rect x="347" y="516" width="2" height="15" fill="rgb(218,81,46)"/><text x="350.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.13%)</title><rect x="347" y="532" width="2" height="15" fill="rgb(234,214,43)"/><text x="350.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.13%)</title><rect x="347" y="548" width="2" height="15" fill="rgb(249,207,36)"/><text x="350.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.13%)</title><rect x="347" y="564" width="2" height="15" fill="rgb(241,194,5)"/><text x="350.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.13%)</title><rect x="347" y="580" width="2" height="15" fill="rgb(208,0,13)"/><text x="350.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="347" y="596" width="2" height="15" fill="rgb(245,90,19)"/><text x="350.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.13%)</title><rect x="347" y="612" width="2" height="15" fill="rgb(246,36,15)"/><text x="350.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="347" y="628" width="2" height="15" fill="rgb(205,160,0)"/><text x="350.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="347" y="644" width="2" height="15" fill="rgb(240,2,52)"/><text x="350.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1082) (1 samples, 0.13%)</title><rect x="347" y="660" width="2" height="15" fill="rgb(246,165,1)"/><text x="350.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.13%)</title><rect x="347" y="676" width="2" height="15" fill="rgb(244,33,54)"/><text x="350.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.13%)</title><rect x="347" y="692" width="2" height="15" fill="rgb(245,88,2)"/><text x="350.00" y="702.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.13%)</title><rect x="347" y="708" width="2" height="15" fill="rgb(217,163,53)"/><text x="350.00" y="718.50"></text></g><g><title>find_all (jinja2/nodes.py:188) (1 samples, 0.13%)</title><rect x="347" y="724" width="2" height="15" fill="rgb(223,144,42)"/><text x="350.00" y="734.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.13%)</title><rect x="347" y="740" width="2" height="15" fill="rgb(227,223,3)"/><text x="350.00" y="750.50"></text></g><g><title>iter_fields (jinja2/nodes.py:155) (1 samples, 0.13%)</title><rect x="347" y="756" width="2" height="15" fill="rgb(241,164,26)"/><text x="350.00" y="766.50"></text></g><g><title>0x7fb25c51bc29 (?) (1 samples, 0.13%)</title><rect x="349" y="244" width="1" height="15" fill="rgb(223,163,37)"/><text x="352.00" y="254.50"></text></g><g><title>0x7fb25c522d9e (?) (1 samples, 0.13%)</title><rect x="349" y="260" width="1" height="15" fill="rgb(217,63,42)"/><text x="352.00" y="270.50"></text></g><g><title>0x7fb25c522c56 (?) (1 samples, 0.13%)</title><rect x="349" y="276" width="1" height="15" fill="rgb(247,76,42)"/><text x="352.00" y="286.50"></text></g><g><title>0x7fb25c528ac7 (?) (1 samples, 0.13%)</title><rect x="349" y="292" width="1" height="15" fill="rgb(214,209,14)"/><text x="352.00" y="302.50"></text></g><g><title>0x7fb25c528023 (?) (1 samples, 0.13%)</title><rect x="349" y="308" width="1" height="15" fill="rgb(229,5,5)"/><text x="352.00" y="318.50"></text></g><g><title>0x7fb25c520047 (?) (1 samples, 0.13%)</title><rect x="349" y="324" width="1" height="15" fill="rgb(237,100,33)"/><text x="352.00" y="334.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (2 samples, 0.27%)</title><rect x="352" y="468" width="3" height="15" fill="rgb(227,161,16)"/><text x="355.00" y="478.50"></text></g><g><title>0x7fb29b57ec0c (libm-2.29.so) (1 samples, 0.13%)</title><rect x="355" y="500" width="2" height="15" fill="rgb(210,110,39)"/><text x="358.00" y="510.50"></text></g><g><title>0x7fb29b57ec5a (libm-2.29.so) (1 samples, 0.13%)</title><rect x="357" y="500" width="1" height="15" fill="rgb(214,123,17)"/><text x="360.00" y="510.50"></text></g><g><title>0x7fb29b57ec6e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="358" y="500" width="2" height="15" fill="rgb(243,93,43)"/><text x="361.00" y="510.50"></text></g><g><title>0x7fb29b57ec7b (libm-2.29.so) (2 samples, 0.27%)</title><rect x="360" y="500" width="3" height="15" fill="rgb(245,98,25)"/><text x="363.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (9 samples, 1.21%)</title><rect x="350" y="452" width="15" height="15" fill="rgb(222,194,23)"/><text x="353.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (6 samples, 0.81%)</title><rect x="355" y="468" width="10" height="15" fill="rgb(251,131,18)"/><text x="358.00" y="478.50"></text></g><g><title>expf32x (libm-2.29.so) (6 samples, 0.81%)</title><rect x="355" y="484" width="10" height="15" fill="rgb(244,189,4)"/><text x="358.00" y="494.50"></text></g><g><title>0x7fb29b57ec7f (libm-2.29.so) (1 samples, 0.13%)</title><rect x="363" y="500" width="2" height="15" fill="rgb(223,57,0)"/><text x="366.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (1 samples, 0.13%)</title><rect x="365" y="452" width="1" height="15" fill="rgb(206,123,52)"/><text x="368.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:920) (1 samples, 0.13%)</title><rect x="365" y="468" width="1" height="15" fill="rgb(205,192,14)"/><text x="368.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (1 samples, 0.13%)</title><rect x="366" y="452" width="2" height="15" fill="rgb(215,185,17)"/><text x="369.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:436) (1 samples, 0.13%)</title><rect x="368" y="452" width="1" height="15" fill="rgb(228,81,48)"/><text x="371.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.13%)</title><rect x="369" y="500" width="2" height="15" fill="rgb(215,178,10)"/><text x="372.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.13%)</title><rect x="369" y="516" width="2" height="15" fill="rgb(219,124,47)"/><text x="372.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.13%)</title><rect x="369" y="532" width="2" height="15" fill="rgb(234,202,28)"/><text x="372.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.13%)</title><rect x="369" y="548" width="2" height="15" fill="rgb(211,171,21)"/><text x="372.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="369" y="564" width="2" height="15" fill="rgb(220,92,3)"/><text x="372.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="369" y="580" width="2" height="15" fill="rgb(233,107,36)"/><text x="372.00" y="590.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (2 samples, 0.27%)</title><rect x="369" y="484" width="4" height="15" fill="rgb(244,186,53)"/><text x="372.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.13%)</title><rect x="371" y="500" width="2" height="15" fill="rgb(242,95,25)"/><text x="374.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.13%)</title><rect x="371" y="516" width="2" height="15" fill="rgb(222,185,20)"/><text x="374.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.13%)</title><rect x="371" y="532" width="2" height="15" fill="rgb(235,137,10)"/><text x="374.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.13%)</title><rect x="371" y="548" width="2" height="15" fill="rgb(244,200,25)"/><text x="374.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.13%)</title><rect x="371" y="564" width="2" height="15" fill="rgb(227,89,34)"/><text x="374.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.13%)</title><rect x="371" y="580" width="2" height="15" fill="rgb(249,76,38)"/><text x="374.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.13%)</title><rect x="371" y="596" width="2" height="15" fill="rgb(251,64,39)"/><text x="374.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.13%)</title><rect x="371" y="612" width="2" height="15" fill="rgb(216,86,35)"/><text x="374.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (1 samples, 0.13%)</title><rect x="371" y="628" width="2" height="15" fill="rgb(225,34,32)"/><text x="374.00" y="638.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:318) (1 samples, 0.13%)</title><rect x="373" y="484" width="1" height="15" fill="rgb(221,121,15)"/><text x="376.00" y="494.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:18) (17 samples, 2.29%)</title><rect x="349" y="100" width="27" height="15" fill="rgb(211,200,52)"/><text x="352.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (17 samples, 2.29%)</title><rect x="349" y="116" width="27" height="15" fill="rgb(236,5,52)"/><text x="352.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (17 samples, 2.29%)</title><rect x="349" y="132" width="27" height="15" fill="rgb(205,66,47)"/><text x="352.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (17 samples, 2.29%)</title><rect x="349" y="148" width="27" height="15" fill="rgb(251,14,21)"/><text x="352.00" y="158.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (17 samples, 2.29%)</title><rect x="349" y="164" width="27" height="15" fill="rgb(236,170,42)"/><text x="352.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (17 samples, 2.29%)</title><rect x="349" y="180" width="27" height="15" fill="rgb(205,123,8)"/><text x="352.00" y="190.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (17 samples, 2.29%)</title><rect x="349" y="196" width="27" height="15" fill="rgb(223,197,36)"/><text x="352.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 2.29%)</title><rect x="349" y="212" width="27" height="15" fill="rgb(239,90,15)"/><text x="352.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (17 samples, 2.29%)</title><rect x="349" y="228" width="27" height="15" fill="rgb(217,174,31)"/><text x="352.00" y="238.50">_..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (16 samples, 2.16%)</title><rect x="350" y="244" width="26" height="15" fill="rgb(236,196,47)"/><text x="353.00" y="254.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (16 samples, 2.16%)</title><rect x="350" y="260" width="26" height="15" fill="rgb(210,166,6)"/><text x="353.00" y="270.50">v..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (16 samples, 2.16%)</title><rect x="350" y="276" width="26" height="15" fill="rgb(207,16,53)"/><text x="353.00" y="286.50">v..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (16 samples, 2.16%)</title><rect x="350" y="292" width="26" height="15" fill="rgb(217,147,39)"/><text x="353.00" y="302.50">p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (16 samples, 2.16%)</title><rect x="350" y="308" width="26" height="15" fill="rgb(217,114,45)"/><text x="353.00" y="318.50">p..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (16 samples, 2.16%)</title><rect x="350" y="324" width="26" height="15" fill="rgb(243,35,39)"/><text x="353.00" y="334.50">p..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (16 samples, 2.16%)</title><rect x="350" y="340" width="26" height="15" fill="rgb(214,97,2)"/><text x="353.00" y="350.50">p..</text></g><g><title>pybind11::array::~array (numpy.h:538) (16 samples, 2.16%)</title><rect x="350" y="356" width="26" height="15" fill="rgb(223,94,22)"/><text x="353.00" y="366.50">p..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (16 samples, 2.16%)</title><rect x="350" y="372" width="26" height="15" fill="rgb(218,226,46)"/><text x="353.00" y="382.50">p..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (16 samples, 2.16%)</title><rect x="350" y="388" width="26" height="15" fill="rgb(210,162,18)"/><text x="353.00" y="398.50">p..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (16 samples, 2.16%)</title><rect x="350" y="404" width="26" height="15" fill="rgb(217,193,45)"/><text x="353.00" y="414.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (16 samples, 2.16%)</title><rect x="350" y="420" width="26" height="15" fill="rgb(230,174,36)"/><text x="353.00" y="430.50">R..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (16 samples, 2.16%)</title><rect x="350" y="436" width="26" height="15" fill="rgb(229,42,9)"/><text x="353.00" y="446.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (4 samples, 0.54%)</title><rect x="369" y="452" width="7" height="15" fill="rgb(228,110,5)"/><text x="372.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (4 samples, 0.54%)</title><rect x="369" y="468" width="7" height="15" fill="rgb(206,14,32)"/><text x="372.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (1 samples, 0.13%)</title><rect x="374" y="484" width="2" height="15" fill="rgb(218,219,27)"/><text x="377.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.13%)</title><rect x="377" y="180" width="2" height="15" fill="rgb(205,112,54)"/><text x="380.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.13%)</title><rect x="379" y="196" width="2" height="15" fill="rgb(227,219,19)"/><text x="382.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:167) (1 samples, 0.13%)</title><rect x="379" y="212" width="2" height="15" fill="rgb(254,12,27)"/><text x="382.00" y="222.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:389) (1 samples, 0.13%)</title><rect x="381" y="452" width="1" height="15" fill="rgb(240,42,15)"/><text x="384.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.13%)</title><rect x="381" y="468" width="1" height="15" fill="rgb(249,109,21)"/><text x="384.00" y="478.50"></text></g><g><title>0x7fb29b3ac961 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="381" y="484" width="1" height="15" fill="rgb(224,19,45)"/><text x="384.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (4 samples, 0.54%)</title><rect x="387" y="468" width="6" height="15" fill="rgb(216,62,7)"/><text x="390.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (4 samples, 0.54%)</title><rect x="387" y="484" width="6" height="15" fill="rgb(249,20,7)"/><text x="390.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (3 samples, 0.40%)</title><rect x="389" y="500" width="4" height="15" fill="rgb(208,48,14)"/><text x="392.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (3 samples, 0.40%)</title><rect x="389" y="516" width="4" height="15" fill="rgb(215,171,2)"/><text x="392.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="389" y="532" width="4" height="15" fill="rgb(235,45,1)"/><text x="392.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="390" y="548" width="3" height="15" fill="rgb(250,109,35)"/><text x="393.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.13%)</title><rect x="393" y="468" width="2" height="15" fill="rgb(229,155,32)"/><text x="396.00" y="478.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.13%)</title><rect x="393" y="484" width="2" height="15" fill="rgb(231,12,13)"/><text x="396.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.13%)</title><rect x="393" y="500" width="2" height="15" fill="rgb(229,46,32)"/><text x="396.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.13%)</title><rect x="393" y="516" width="2" height="15" fill="rgb(227,208,23)"/><text x="396.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.13%)</title><rect x="393" y="532" width="2" height="15" fill="rgb(205,212,22)"/><text x="396.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.13%)</title><rect x="393" y="548" width="2" height="15" fill="rgb(231,191,27)"/><text x="396.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.13%)</title><rect x="393" y="564" width="2" height="15" fill="rgb(248,140,54)"/><text x="396.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.13%)</title><rect x="393" y="580" width="2" height="15" fill="rgb(213,201,31)"/><text x="396.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:367) (1 samples, 0.13%)</title><rect x="393" y="596" width="2" height="15" fill="rgb(239,203,20)"/><text x="396.00" y="606.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.13%)</title><rect x="395" y="468" width="1" height="15" fill="rgb(225,187,8)"/><text x="398.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.13%)</title><rect x="395" y="484" width="1" height="15" fill="rgb(215,4,37)"/><text x="398.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.13%)</title><rect x="395" y="500" width="1" height="15" fill="rgb(225,87,48)"/><text x="398.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.13%)</title><rect x="395" y="516" width="1" height="15" fill="rgb(236,85,2)"/><text x="398.00" y="526.50"></text></g><g><title>0x7fb29b3ac90e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="396" y="484" width="2" height="15" fill="rgb(233,124,30)"/><text x="399.00" y="494.50"></text></g><g><title>0x7fb29b3ac945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="398" y="484" width="2" height="15" fill="rgb(229,4,52)"/><text x="401.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (12 samples, 1.62%)</title><rect x="382" y="452" width="19" height="15" fill="rgb(223,33,46)"/><text x="385.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (3 samples, 0.40%)</title><rect x="396" y="468" width="5" height="15" fill="rgb(216,71,23)"/><text x="399.00" y="478.50"></text></g><g><title>0x7fb29b3aca4d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="400" y="484" width="1" height="15" fill="rgb(239,5,2)"/><text x="403.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (2 samples, 0.27%)</title><rect x="416" y="468" width="3" height="15" fill="rgb(243,38,25)"/><text x="419.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (1 samples, 0.13%)</title><rect x="419" y="468" width="1" height="15" fill="rgb(206,9,5)"/><text x="422.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (1 samples, 0.13%)</title><rect x="420" y="468" width="2" height="15" fill="rgb(237,55,2)"/><text x="423.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:292) (7 samples, 0.94%)</title><rect x="422" y="468" width="11" height="15" fill="rgb(225,93,39)"/><text x="425.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (7 samples, 0.94%)</title><rect x="433" y="468" width="11" height="15" fill="rgb(225,162,42)"/><text x="436.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:294) (10 samples, 1.35%)</title><rect x="444" y="468" width="16" height="15" fill="rgb(219,186,2)"/><text x="447.00" y="478.50"></text></g><g><title>0x7fb29b4f81b0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="484" y="500" width="2" height="15" fill="rgb(238,33,5)"/><text x="487.00" y="510.50"></text></g><g><title>0x7fb29b57eba0 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="486" y="500" width="4" height="15" fill="rgb(208,124,19)"/><text x="489.00" y="510.50"></text></g><g><title>0x7fb29b57ebd3 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="490" y="500" width="5" height="15" fill="rgb(207,192,39)"/><text x="493.00" y="510.50"></text></g><g><title>0x7fb29b57ebe2 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="495" y="500" width="5" height="15" fill="rgb(238,111,31)"/><text x="498.00" y="510.50"></text></g><g><title>0x7fb29b57ebe7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="500" y="500" width="2" height="15" fill="rgb(227,83,33)"/><text x="503.00" y="510.50"></text></g><g><title>0x7fb29b57ebeb (libm-2.29.so) (1 samples, 0.13%)</title><rect x="502" y="500" width="1" height="15" fill="rgb(214,35,24)"/><text x="505.00" y="510.50"></text></g><g><title>0x7fb29b57ebf9 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="503" y="500" width="3" height="15" fill="rgb(228,63,10)"/><text x="506.00" y="510.50"></text></g><g><title>0x7fb29b57ec04 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="506" y="500" width="2" height="15" fill="rgb(228,23,1)"/><text x="509.00" y="510.50"></text></g><g><title>0x7fb29b57ec07 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="508" y="500" width="5" height="15" fill="rgb(227,209,30)"/><text x="511.00" y="510.50"></text></g><g><title>0x7fb29b57ec0c (libm-2.29.so) (1 samples, 0.13%)</title><rect x="513" y="500" width="1" height="15" fill="rgb(241,4,16)"/><text x="516.00" y="510.50"></text></g><g><title>0x7fb29b57ec10 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="514" y="500" width="5" height="15" fill="rgb(248,184,17)"/><text x="517.00" y="510.50"></text></g><g><title>0x7fb29b57ec18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="519" y="500" width="2" height="15" fill="rgb(237,93,50)"/><text x="522.00" y="510.50"></text></g><g><title>0x7fb29b57ec28 (libm-2.29.so) (4 samples, 0.54%)</title><rect x="521" y="500" width="6" height="15" fill="rgb(208,155,29)"/><text x="524.00" y="510.50"></text></g><g><title>0x7fb29b57ec2e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="527" y="500" width="2" height="15" fill="rgb(207,86,53)"/><text x="530.00" y="510.50"></text></g><g><title>0x7fb29b57ec32 (libm-2.29.so) (9 samples, 1.21%)</title><rect x="529" y="500" width="14" height="15" fill="rgb(206,126,28)"/><text x="532.00" y="510.50"></text></g><g><title>0x7fb29b57ec3e (libm-2.29.so) (3 samples, 0.40%)</title><rect x="543" y="500" width="5" height="15" fill="rgb(218,79,40)"/><text x="546.00" y="510.50"></text></g><g><title>0x7fb29b57ec46 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="548" y="500" width="5" height="15" fill="rgb(243,205,36)"/><text x="551.00" y="510.50"></text></g><g><title>0x7fb29b57ec52 (libm-2.29.so) (7 samples, 0.94%)</title><rect x="553" y="500" width="11" height="15" fill="rgb(220,140,34)"/><text x="556.00" y="510.50"></text></g><g><title>0x7fb29b57ec5a (libm-2.29.so) (6 samples, 0.81%)</title><rect x="564" y="500" width="9" height="15" fill="rgb(233,67,10)"/><text x="567.00" y="510.50"></text></g><g><title>0x7fb29b57ec6e (libm-2.29.so) (4 samples, 0.54%)</title><rect x="573" y="500" width="7" height="15" fill="rgb(207,15,46)"/><text x="576.00" y="510.50"></text></g><g><title>0x7fb29b57ec7b (libm-2.29.so) (10 samples, 1.35%)</title><rect x="580" y="500" width="16" height="15" fill="rgb(232,33,0)"/><text x="583.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (129 samples, 17.41%)</title><rect x="401" y="452" width="206" height="15" fill="rgb(251,127,50)"/><text x="404.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (92 samples, 12.42%)</title><rect x="460" y="468" width="147" height="15" fill="rgb(225,208,26)"/><text x="463.00" y="478.50">RuntimeSVMClassifi..</text></g><g><title>expf32x (libm-2.29.so) (86 samples, 11.61%)</title><rect x="470" y="484" width="137" height="15" fill="rgb(213,110,33)"/><text x="473.00" y="494.50">expf32x (libm-2.2..</text></g><g><title>0x7fb29b57ec7f (libm-2.29.so) (7 samples, 0.94%)</title><rect x="596" y="500" width="11" height="15" fill="rgb(217,81,26)"/><text x="599.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:920) (1 samples, 0.13%)</title><rect x="607" y="468" width="1" height="15" fill="rgb(243,76,46)"/><text x="610.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (2 samples, 0.27%)</title><rect x="607" y="452" width="3" height="15" fill="rgb(227,11,50)"/><text x="610.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:924) (1 samples, 0.13%)</title><rect x="608" y="468" width="2" height="15" fill="rgb(219,74,48)"/><text x="611.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (1 samples, 0.13%)</title><rect x="610" y="452" width="1" height="15" fill="rgb(206,54,38)"/><text x="613.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (1 samples, 0.13%)</title><rect x="610" y="468" width="1" height="15" fill="rgb(224,81,10)"/><text x="613.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (1 samples, 0.13%)</title><rect x="610" y="484" width="1" height="15" fill="rgb(210,117,30)"/><text x="613.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:489) (1 samples, 0.13%)</title><rect x="610" y="500" width="1" height="15" fill="rgb(251,59,17)"/><text x="613.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_check_len (stl_vector.h:1422) (1 samples, 0.13%)</title><rect x="610" y="516" width="1" height="15" fill="rgb(212,217,8)"/><text x="613.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:414) (2 samples, 0.27%)</title><rect x="611" y="452" width="4" height="15" fill="rgb(221,10,35)"/><text x="614.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (1 samples, 0.13%)</title><rect x="615" y="452" width="1" height="15" fill="rgb(222,222,22)"/><text x="618.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (10 samples, 1.35%)</title><rect x="616" y="452" width="16" height="15" fill="rgb(238,72,38)"/><text x="619.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (2 samples, 0.27%)</title><rect x="634" y="500" width="3" height="15" fill="rgb(244,144,24)"/><text x="637.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1422) (2 samples, 0.27%)</title><rect x="634" y="516" width="3" height="15" fill="rgb(253,3,46)"/><text x="637.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.27%)</title><rect x="634" y="532" width="3" height="15" fill="rgb(220,228,18)"/><text x="637.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (3 samples, 0.40%)</title><rect x="637" y="500" width="5" height="15" fill="rgb(208,114,9)"/><text x="640.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (3 samples, 0.40%)</title><rect x="637" y="516" width="5" height="15" fill="rgb(250,51,15)"/><text x="640.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (3 samples, 0.40%)</title><rect x="637" y="532" width="5" height="15" fill="rgb(238,144,53)"/><text x="640.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (3 samples, 0.40%)</title><rect x="637" y="548" width="5" height="15" fill="rgb(252,209,9)"/><text x="640.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="639" y="564" width="3" height="15" fill="rgb(236,146,26)"/><text x="642.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="640" y="580" width="2" height="15" fill="rgb(232,74,9)"/><text x="643.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (7 samples, 0.94%)</title><rect x="632" y="452" width="11" height="15" fill="rgb(205,96,39)"/><text x="635.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (6 samples, 0.81%)</title><rect x="634" y="468" width="9" height="15" fill="rgb(238,119,25)"/><text x="637.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (6 samples, 0.81%)</title><rect x="634" y="484" width="9" height="15" fill="rgb(229,99,25)"/><text x="637.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.13%)</title><rect x="642" y="500" width="1" height="15" fill="rgb(224,177,28)"/><text x="645.00" y="510.50"></text></g><g><title>0x7fb29b3ac998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="642" y="516" width="1" height="15" fill="rgb(209,177,4)"/><text x="645.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:436) (1 samples, 0.13%)</title><rect x="643" y="452" width="2" height="15" fill="rgb(236,80,48)"/><text x="646.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (1 samples, 0.13%)</title><rect x="645" y="452" width="1" height="15" fill="rgb(216,29,44)"/><text x="648.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.13%)</title><rect x="645" y="468" width="1" height="15" fill="rgb(206,225,20)"/><text x="648.00" y="478.50"></text></g><g><title>0x7fb29b3aca4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="645" y="484" width="1" height="15" fill="rgb(206,122,4)"/><text x="648.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:446) (1 samples, 0.13%)</title><rect x="646" y="452" width="2" height="15" fill="rgb(234,147,22)"/><text x="649.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.13%)</title><rect x="646" y="468" width="2" height="15" fill="rgb(214,117,23)"/><text x="649.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.13%)</title><rect x="646" y="484" width="2" height="15" fill="rgb(227,188,33)"/><text x="649.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.13%)</title><rect x="646" y="500" width="2" height="15" fill="rgb(224,212,45)"/><text x="649.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="646" y="516" width="2" height="15" fill="rgb(232,222,41)"/><text x="649.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="646" y="532" width="2" height="15" fill="rgb(243,111,33)"/><text x="649.00" y="542.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:449) (1 samples, 0.13%)</title><rect x="648" y="452" width="2" height="15" fill="rgb(237,89,20)"/><text x="651.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:102) (1 samples, 0.13%)</title><rect x="650" y="468" width="1" height="15" fill="rgb(245,28,36)"/><text x="653.00" y="478.50"></text></g><g><title>0x7fb29b52be71 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="651" y="500" width="2" height="15" fill="rgb(235,38,4)"/><text x="654.00" y="510.50"></text></g><g><title>0x7fb29b52be96 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="653" y="500" width="1" height="15" fill="rgb(218,206,15)"/><text x="656.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (4 samples, 0.54%)</title><rect x="650" y="452" width="6" height="15" fill="rgb(219,179,3)"/><text x="653.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (3 samples, 0.40%)</title><rect x="651" y="468" width="5" height="15" fill="rgb(242,85,46)"/><text x="654.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (3 samples, 0.40%)</title><rect x="651" y="484" width="5" height="15" fill="rgb(215,204,38)"/><text x="654.00" y="494.50"></text></g><g><title>0x7fb29b52be9e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="654" y="500" width="2" height="15" fill="rgb(234,42,29)"/><text x="657.00" y="510.50"></text></g><g><title>0x7fb28ae78d50 (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="658" y="580" width="3" height="15" fill="rgb(228,88,5)"/><text x="661.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (7 samples, 0.94%)</title><rect x="656" y="500" width="11" height="15" fill="rgb(237,102,20)"/><text x="659.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (7 samples, 0.94%)</title><rect x="656" y="516" width="11" height="15" fill="rgb(248,139,27)"/><text x="659.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (7 samples, 0.94%)</title><rect x="656" y="532" width="11" height="15" fill="rgb(247,129,47)"/><text x="659.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (7 samples, 0.94%)</title><rect x="656" y="548" width="11" height="15" fill="rgb(239,72,24)"/><text x="659.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.94%)</title><rect x="656" y="564" width="11" height="15" fill="rgb(221,117,49)"/><text x="659.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.54%)</title><rect x="661" y="580" width="6" height="15" fill="rgb(215,144,48)"/><text x="664.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.13%)</title><rect x="667" y="500" width="2" height="15" fill="rgb(248,187,16)"/><text x="670.00" y="510.50"></text></g><g><title>0x7fb29b3ccd50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="667" y="516" width="2" height="15" fill="rgb(226,166,13)"/><text x="670.00" y="526.50"></text></g><g><title>0x7fb29b3ac91c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="669" y="516" width="1" height="15" fill="rgb(251,171,27)"/><text x="672.00" y="526.50"></text></g><g><title>0x7fb29b3ac91e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="670" y="516" width="2" height="15" fill="rgb(243,152,17)"/><text x="673.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (4 samples, 0.54%)</title><rect x="669" y="500" width="6" height="15" fill="rgb(236,121,18)"/><text x="672.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="672" y="516" width="3" height="15" fill="rgb(223,145,13)"/><text x="675.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (14 samples, 1.89%)</title><rect x="656" y="484" width="22" height="15" fill="rgb(242,142,51)"/><text x="659.00" y="494.50">m..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (2 samples, 0.27%)</title><rect x="675" y="500" width="3" height="15" fill="rgb(249,159,21)"/><text x="678.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.13%)</title><rect x="678" y="500" width="2" height="15" fill="rgb(216,172,42)"/><text x="681.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.13%)</title><rect x="678" y="516" width="2" height="15" fill="rgb(214,1,42)"/><text x="681.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.13%)</title><rect x="678" y="532" width="2" height="15" fill="rgb(212,159,43)"/><text x="681.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.13%)</title><rect x="678" y="548" width="2" height="15" fill="rgb(215,7,19)"/><text x="681.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="678" y="564" width="2" height="15" fill="rgb(207,143,44)"/><text x="681.00" y="574.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.13%)</title><rect x="680" y="500" width="2" height="15" fill="rgb(237,217,13)"/><text x="683.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.13%)</title><rect x="680" y="516" width="2" height="15" fill="rgb(238,56,5)"/><text x="683.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (3 samples, 0.40%)</title><rect x="678" y="484" width="5" height="15" fill="rgb(218,89,38)"/><text x="681.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.13%)</title><rect x="682" y="500" width="1" height="15" fill="rgb(252,0,6)"/><text x="685.00" y="510.50"></text></g><g><title>0x7fb29b3ac97c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="682" y="516" width="1" height="15" fill="rgb(233,17,45)"/><text x="685.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:314) (1 samples, 0.13%)</title><rect x="683" y="484" width="2" height="15" fill="rgb(212,157,23)"/><text x="686.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.13%)</title><rect x="683" y="500" width="2" height="15" fill="rgb(231,87,29)"/><text x="686.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:94) (1 samples, 0.13%)</title><rect x="683" y="516" width="2" height="15" fill="rgb(220,197,20)"/><text x="686.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:316) (1 samples, 0.13%)</title><rect x="685" y="484" width="1" height="15" fill="rgb(252,4,49)"/><text x="688.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:324) (1 samples, 0.13%)</title><rect x="686" y="484" width="2" height="15" fill="rgb(249,181,12)"/><text x="689.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:328) (1 samples, 0.13%)</title><rect x="688" y="484" width="1" height="15" fill="rgb(251,225,29)"/><text x="691.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:331) (1 samples, 0.13%)</title><rect x="689" y="484" width="2" height="15" fill="rgb(231,121,15)"/><text x="692.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:332) (2 samples, 0.27%)</title><rect x="691" y="484" width="3" height="15" fill="rgb(237,19,4)"/><text x="694.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (1 samples, 0.13%)</title><rect x="694" y="484" width="2" height="15" fill="rgb(241,218,37)"/><text x="697.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:340) (1 samples, 0.13%)</title><rect x="696" y="484" width="1" height="15" fill="rgb(237,16,51)"/><text x="699.00" y="494.50"></text></g><g><title>std::fabs (cmath:265) (1 samples, 0.13%)</title><rect x="696" y="500" width="1" height="15" fill="rgb(240,139,44)"/><text x="699.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:345) (1 samples, 0.13%)</title><rect x="697" y="484" width="2" height="15" fill="rgb(215,182,47)"/><text x="700.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:348) (1 samples, 0.13%)</title><rect x="699" y="484" width="2" height="15" fill="rgb(253,170,22)"/><text x="702.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:350) (2 samples, 0.27%)</title><rect x="701" y="484" width="3" height="15" fill="rgb(214,209,18)"/><text x="704.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:45) (229 samples, 30.90%)</title><rect x="347" y="52" width="365" height="15" fill="rgb(209,32,52)"/><text x="350.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kern..</text></g><g><title>profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:44) (229 samples, 30.90%)</title><rect x="347" y="68" width="365" height="15" fill="rgb(222,20,20)"/><text x="350.00" y="78.50">profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:29) (228 samples, 30.77%)</title><rect x="349" y="84" width="363" height="15" fill="rgb(217,201,49)"/><text x="352.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:23) (211 samples, 28.48%)</title><rect x="376" y="100" width="336" height="15" fill="rgb(211,49,39)"/><text x="379.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_k..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (211 samples, 28.48%)</title><rect x="376" y="116" width="336" height="15" fill="rgb(239,63,12)"/><text x="379.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (211 samples, 28.48%)</title><rect x="376" y="132" width="336" height="15" fill="rgb(253,16,15)"/><text x="379.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (211 samples, 28.48%)</title><rect x="376" y="148" width="336" height="15" fill="rgb(250,166,49)"/><text x="379.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (211 samples, 28.48%)</title><rect x="376" y="164" width="336" height="15" fill="rgb(235,158,29)"/><text x="379.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (209 samples, 28.21%)</title><rect x="379" y="180" width="333" height="15" fill="rgb(245,162,11)"/><text x="382.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (208 samples, 28.07%)</title><rect x="381" y="196" width="331" height="15" fill="rgb(254,125,17)"/><text x="384.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (208 samples, 28.07%)</title><rect x="381" y="212" width="331" height="15" fill="rgb(227,65,13)"/><text x="384.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (208 samples, 28.07%)</title><rect x="381" y="228" width="331" height="15" fill="rgb(206,50,17)"/><text x="384.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classi..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (208 samples, 28.07%)</title><rect x="381" y="244" width="331" height="15" fill="rgb(226,171,37)"/><text x="384.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (208 samples, 28.07%)</title><rect x="381" y="260" width="331" height="15" fill="rgb(223,209,37)"/><text x="384.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (208 samples, 28.07%)</title><rect x="381" y="276" width="331" height="15" fill="rgb(210,102,12)"/><text x="384.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (208 samples, 28.07%)</title><rect x="381" y="292" width="331" height="15" fill="rgb(226,165,51)"/><text x="384.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVM..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (208 samples, 28.07%)</title><rect x="381" y="308" width="331" height="15" fill="rgb(254,197,16)"/><text x="384.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVM..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (208 samples, 28.07%)</title><rect x="381" y="324" width="331" height="15" fill="rgb(231,201,19)"/><text x="384.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind1..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (208 samples, 28.07%)</title><rect x="381" y="340" width="331" height="15" fill="rgb(239,207,54)"/><text x="384.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (nump..</text></g><g><title>pybind11::array::~array (numpy.h:538) (208 samples, 28.07%)</title><rect x="381" y="356" width="331" height="15" fill="rgb(215,77,41)"/><text x="384.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (208 samples, 28.07%)</title><rect x="381" y="372" width="331" height="15" fill="rgb(206,114,1)"/><text x="384.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1311)</text></g><g><title>pybind11::object::~object (pytypes.h:240) (208 samples, 28.07%)</title><rect x="381" y="388" width="331" height="15" fill="rgb(232,36,1)"/><text x="384.00" y="398.50">pybind11::object::~object (pytypes.h:240)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (208 samples, 28.07%)</title><rect x="381" y="404" width="331" height="15" fill="rgb(224,87,42)"/><text x="384.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h:197)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (208 samples, 28.07%)</title><rect x="381" y="420" width="331" height="15" fill="rgb(210,165,34)"/><text x="384.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprod..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (208 samples, 28.07%)</title><rect x="381" y="436" width="331" height="15" fill="rgb(230,99,28)"/><text x="384.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_re..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (35 samples, 4.72%)</title><rect x="656" y="452" width="56" height="15" fill="rgb(239,200,51)"/><text x="659.00" y="462.50">Runti..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (35 samples, 4.72%)</title><rect x="656" y="468" width="56" height="15" fill="rgb(207,43,39)"/><text x="659.00" y="478.50">std::..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (5 samples, 0.67%)</title><rect x="704" y="484" width="8" height="15" fill="rgb(208,38,3)"/><text x="707.00" y="494.50"></text></g><g><title>0x7fb25b3dcff9 (?) (1 samples, 0.13%)</title><rect x="712" y="212" width="1" height="15" fill="rgb(240,13,34)"/><text x="715.00" y="222.50"></text></g><g><title>0x7fb25b3d7ef6 (?) (1 samples, 0.13%)</title><rect x="712" y="228" width="1" height="15" fill="rgb(238,224,42)"/><text x="715.00" y="238.50"></text></g><g><title>0x7fb25b3cc962 (?) (1 samples, 0.13%)</title><rect x="712" y="244" width="1" height="15" fill="rgb(232,216,11)"/><text x="715.00" y="254.50"></text></g><g><title>0x7fb25b4007a7 (?) (1 samples, 0.13%)</title><rect x="712" y="260" width="1" height="15" fill="rgb(242,118,12)"/><text x="715.00" y="270.50"></text></g><g><title>0x7fb25b400379 (?) (1 samples, 0.13%)</title><rect x="712" y="276" width="1" height="15" fill="rgb(232,118,53)"/><text x="715.00" y="286.50"></text></g><g><title>0x7fb25b85e8b8 (?) (1 samples, 0.13%)</title><rect x="712" y="292" width="1" height="15" fill="rgb(246,160,49)"/><text x="715.00" y="302.50"></text></g><g><title>0x7fb25b85cc7f (?) (1 samples, 0.13%)</title><rect x="712" y="308" width="1" height="15" fill="rgb(251,229,21)"/><text x="715.00" y="318.50"></text></g><g><title>0x7fb25b86f99c (?) (1 samples, 0.13%)</title><rect x="712" y="324" width="1" height="15" fill="rgb(237,154,36)"/><text x="715.00" y="334.50"></text></g><g><title>0x7fb25b5746d2 (?) (1 samples, 0.13%)</title><rect x="712" y="340" width="1" height="15" fill="rgb(243,87,53)"/><text x="715.00" y="350.50"></text></g><g><title>0x7fb29b57ebd3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="720" y="372" width="1" height="15" fill="rgb(233,25,32)"/><text x="723.00" y="382.50"></text></g><g><title>0x7fb29b57ec5a (libm-2.29.so) (2 samples, 0.27%)</title><rect x="721" y="372" width="4" height="15" fill="rgb(229,32,19)"/><text x="724.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (4 samples, 0.54%)</title><rect x="720" y="356" width="6" height="15" fill="rgb(227,139,20)"/><text x="723.00" y="366.50"></text></g><g><title>0x7fb29b57ec7b (libm-2.29.so) (1 samples, 0.13%)</title><rect x="725" y="372" width="1" height="15" fill="rgb(246,34,48)"/><text x="728.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="726" y="356" width="2" height="15" fill="rgb(213,213,33)"/><text x="729.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="726" y="372" width="2" height="15" fill="rgb(239,221,4)"/><text x="729.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="726" y="388" width="2" height="15" fill="rgb(226,12,30)"/><text x="729.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="726" y="404" width="2" height="15" fill="rgb(221,50,19)"/><text x="729.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="726" y="420" width="2" height="15" fill="rgb(207,9,14)"/><text x="729.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="726" y="436" width="2" height="15" fill="rgb(220,42,5)"/><text x="729.00" y="446.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="728" y="356" width="3" height="15" fill="rgb(231,0,26)"/><text x="731.00" y="366.50"></text></g><g><title>0x7fb29b3ac90e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="731" y="372" width="1" height="15" fill="rgb(245,145,51)"/><text x="734.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="732" y="372" width="2" height="15" fill="rgb(227,132,16)"/><text x="735.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.89%)</title><rect x="713" y="340" width="23" height="15" fill="rgb(209,164,11)"/><text x="716.00" y="350.50">o..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="731" y="356" width="5" height="15" fill="rgb(234,99,21)"/><text x="734.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="734" y="372" width="2" height="15" fill="rgb(227,135,11)"/><text x="737.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="734" y="388" width="2" height="15" fill="rgb(252,78,37)"/><text x="737.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.02%)</title><rect x="713" y="260" width="24" height="15" fill="rgb(222,17,21)"/><text x="716.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.02%)</title><rect x="713" y="276" width="24" height="15" fill="rgb(242,184,29)"/><text x="716.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.02%)</title><rect x="713" y="292" width="24" height="15" fill="rgb(252,225,37)"/><text x="716.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.02%)</title><rect x="713" y="308" width="24" height="15" fill="rgb(209,75,1)"/><text x="716.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.02%)</title><rect x="713" y="324" width="24" height="15" fill="rgb(254,165,34)"/><text x="716.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="736" y="340" width="1" height="15" fill="rgb(205,218,52)"/><text x="739.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="736" y="356" width="1" height="15" fill="rgb(244,18,53)"/><text x="739.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="736" y="372" width="1" height="15" fill="rgb(231,156,3)"/><text x="739.00" y="382.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="737" y="260" width="3" height="15" fill="rgb(207,0,17)"/><text x="740.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="739" y="276" width="1" height="15" fill="rgb(217,5,40)"/><text x="742.00" y="286.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:18) (19 samples, 2.56%)</title><rect x="712" y="100" width="30" height="15" fill="rgb(254,150,14)"/><text x="715.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (19 samples, 2.56%)</title><rect x="712" y="116" width="30" height="15" fill="rgb(217,133,38)"/><text x="715.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (19 samples, 2.56%)</title><rect x="712" y="132" width="30" height="15" fill="rgb(245,181,35)"/><text x="715.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (19 samples, 2.56%)</title><rect x="712" y="148" width="30" height="15" fill="rgb(243,29,53)"/><text x="715.00" y="158.50">ru..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (19 samples, 2.56%)</title><rect x="712" y="164" width="30" height="15" fill="rgb(248,22,20)"/><text x="715.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (19 samples, 2.56%)</title><rect x="712" y="180" width="30" height="15" fill="rgb(212,11,20)"/><text x="715.00" y="190.50">ru..</text></g><g><title>run (onnxruntime/capi/session.py:136) (19 samples, 2.56%)</title><rect x="712" y="196" width="30" height="15" fill="rgb(205,8,23)"/><text x="715.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.43%)</title><rect x="713" y="212" width="29" height="15" fill="rgb(216,139,51)"/><text x="716.00" y="222.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.43%)</title><rect x="713" y="228" width="29" height="15" fill="rgb(236,83,40)"/><text x="716.00" y="238.50">vo..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.43%)</title><rect x="713" y="244" width="29" height="15" fill="rgb(238,82,38)"/><text x="716.00" y="254.50">on..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="740" y="260" width="2" height="15" fill="rgb(245,59,36)"/><text x="743.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="740" y="276" width="2" height="15" fill="rgb(254,49,5)"/><text x="743.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="740" y="292" width="2" height="15" fill="rgb(205,177,8)"/><text x="743.00" y="302.50"></text></g><g><title>0x7fb29b3ac9b3 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="740" y="308" width="2" height="15" fill="rgb(251,151,43)"/><text x="743.00" y="318.50"></text></g><g><title>0x7fb29b3abaaf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="750" y="148" width="2" height="15" fill="rgb(236,159,7)"/><text x="753.00" y="158.50"></text></g><g><title>0x7fb29b3abab9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="752" y="148" width="1" height="15" fill="rgb(235,178,42)"/><text x="755.00" y="158.50"></text></g><g><title>0x7fb29b3aceb0 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="750" y="116" width="5" height="15" fill="rgb(213,227,5)"/><text x="753.00" y="126.50"></text></g><g><title>0x7fb29b3abc73 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="750" y="132" width="5" height="15" fill="rgb(226,102,35)"/><text x="753.00" y="142.50"></text></g><g><title>0x7fb29b3abad5 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="753" y="148" width="2" height="15" fill="rgb(211,88,26)"/><text x="756.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.13%)</title><rect x="755" y="196" width="1" height="15" fill="rgb(244,132,52)"/><text x="758.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.13%)</title><rect x="755" y="212" width="1" height="15" fill="rgb(249,71,20)"/><text x="758.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="755" y="228" width="1" height="15" fill="rgb(243,170,35)"/><text x="758.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="755" y="244" width="1" height="15" fill="rgb(242,164,19)"/><text x="758.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="755" y="260" width="1" height="15" fill="rgb(224,198,10)"/><text x="758.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="756" y="292" width="2" height="15" fill="rgb(240,132,10)"/><text x="759.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="756" y="308" width="2" height="15" fill="rgb(219,120,14)"/><text x="759.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="756" y="324" width="2" height="15" fill="rgb(230,25,18)"/><text x="759.00" y="334.50"></text></g><g><title>0x7fb29b3ac945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="865" y="356" width="1" height="15" fill="rgb(228,185,4)"/><text x="868.00" y="366.50"></text></g><g><title>0x7fb29b3ac97c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="866" y="356" width="2" height="15" fill="rgb(218,36,52)"/><text x="869.00" y="366.50"></text></g><g><title>0x7fb29b3aca4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="868" y="356" width="1" height="15" fill="rgb(253,40,13)"/><text x="871.00" y="366.50"></text></g><g><title>0x7fb29b3cd158 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="869" y="356" width="2" height="15" fill="rgb(251,194,9)"/><text x="872.00" y="366.50"></text></g><g><title>0x7fb29b3cd173 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="871" y="356" width="2" height="15" fill="rgb(231,86,12)"/><text x="874.00" y="366.50"></text></g><g><title>0x7fb29b52be3e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="873" y="356" width="1" height="15" fill="rgb(244,91,1)"/><text x="876.00" y="366.50"></text></g><g><title>0x7fb29b52be86 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="874" y="356" width="2" height="15" fill="rgb(246,103,34)"/><text x="877.00" y="366.50"></text></g><g><title>0x7fb29b52bea2 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="876" y="356" width="1" height="15" fill="rgb(220,56,24)"/><text x="879.00" y="366.50"></text></g><g><title>0x7fb29b52bea6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="877" y="356" width="2" height="15" fill="rgb(207,106,12)"/><text x="880.00" y="366.50"></text></g><g><title>0x7fb29b4f81b0 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="893" y="372" width="5" height="15" fill="rgb(244,150,5)"/><text x="896.00" y="382.50"></text></g><g><title>0x7fb29b57ebb4 (libm-2.29.so) (4 samples, 0.54%)</title><rect x="898" y="372" width="6" height="15" fill="rgb(223,58,39)"/><text x="901.00" y="382.50"></text></g><g><title>0x7fb29b57ebc3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="904" y="372" width="2" height="15" fill="rgb(234,193,46)"/><text x="907.00" y="382.50"></text></g><g><title>0x7fb29b57ebd3 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="906" y="372" width="3" height="15" fill="rgb(223,196,39)"/><text x="909.00" y="382.50"></text></g><g><title>0x7fb29b57ebe7 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="909" y="372" width="3" height="15" fill="rgb(220,59,7)"/><text x="912.00" y="382.50"></text></g><g><title>0x7fb29b57ebfc (libm-2.29.so) (2 samples, 0.27%)</title><rect x="912" y="372" width="4" height="15" fill="rgb(243,71,42)"/><text x="915.00" y="382.50"></text></g><g><title>0x7fb29b57ec0c (libm-2.29.so) (1 samples, 0.13%)</title><rect x="916" y="372" width="1" height="15" fill="rgb(247,219,43)"/><text x="919.00" y="382.50"></text></g><g><title>0x7fb29b57ec10 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="917" y="372" width="2" height="15" fill="rgb(236,90,39)"/><text x="920.00" y="382.50"></text></g><g><title>0x7fb29b57ec18 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="919" y="372" width="3" height="15" fill="rgb(244,141,46)"/><text x="922.00" y="382.50"></text></g><g><title>0x7fb29b57ec28 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="922" y="372" width="2" height="15" fill="rgb(224,32,20)"/><text x="925.00" y="382.50"></text></g><g><title>0x7fb29b57ec32 (libm-2.29.so) (8 samples, 1.08%)</title><rect x="924" y="372" width="12" height="15" fill="rgb(230,150,47)"/><text x="927.00" y="382.50"></text></g><g><title>0x7fb29b57ec36 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="936" y="372" width="2" height="15" fill="rgb(236,153,33)"/><text x="939.00" y="382.50"></text></g><g><title>0x7fb29b57ec3e (libm-2.29.so) (3 samples, 0.40%)</title><rect x="938" y="372" width="5" height="15" fill="rgb(229,5,21)"/><text x="941.00" y="382.50"></text></g><g><title>0x7fb29b57ec46 (libm-2.29.so) (4 samples, 0.54%)</title><rect x="943" y="372" width="6" height="15" fill="rgb(221,142,14)"/><text x="946.00" y="382.50"></text></g><g><title>0x7fb29b57ec52 (libm-2.29.so) (20 samples, 2.70%)</title><rect x="949" y="372" width="32" height="15" fill="rgb(254,147,29)"/><text x="952.00" y="382.50">0x..</text></g><g><title>0x7fb29b57ec5a (libm-2.29.so) (1 samples, 0.13%)</title><rect x="981" y="372" width="1" height="15" fill="rgb(218,20,48)"/><text x="984.00" y="382.50"></text></g><g><title>0x7fb29b57ec6e (libm-2.29.so) (5 samples, 0.67%)</title><rect x="982" y="372" width="8" height="15" fill="rgb(222,61,2)"/><text x="985.00" y="382.50"></text></g><g><title>0x7fb29b57ec7b (libm-2.29.so) (9 samples, 1.21%)</title><rect x="990" y="372" width="15" height="15" fill="rgb(242,195,10)"/><text x="993.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (87 samples, 11.74%)</title><rect x="879" y="356" width="139" height="15" fill="rgb(239,214,40)"/><text x="882.00" y="366.50">expf32x (libm-2.2..</text></g><g><title>0x7fb29b57ec7f (libm-2.29.so) (8 samples, 1.08%)</title><rect x="1005" y="372" width="13" height="15" fill="rgb(237,197,12)"/><text x="1008.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1018" y="356" width="1" height="15" fill="rgb(207,223,13)"/><text x="1021.00" y="366.50"></text></g><g><title>0x7fb25b3a3930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1059" y="388" width="2" height="15" fill="rgb(215,68,13)"/><text x="1062.00" y="398.50"></text></g><g><title>0x7fb25b3a40f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1061" y="388" width="1" height="15" fill="rgb(244,210,51)"/><text x="1064.00" y="398.50"></text></g><g><title>0x7fb28ae797a0 (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="1062" y="388" width="3" height="15" fill="rgb(227,194,20)"/><text x="1065.00" y="398.50"></text></g><g><title>0x7fb29b3ac93b (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1065" y="388" width="3" height="15" fill="rgb(208,186,54)"/><text x="1068.00" y="398.50"></text></g><g><title>0x7fb29b3ac96a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1068" y="388" width="2" height="15" fill="rgb(223,185,7)"/><text x="1071.00" y="398.50"></text></g><g><title>0x7fb29b3ac971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1070" y="388" width="2" height="15" fill="rgb(246,203,21)"/><text x="1073.00" y="398.50"></text></g><g><title>0x7fb29b3aca41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1072" y="388" width="1" height="15" fill="rgb(238,191,22)"/><text x="1075.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1073" y="388" width="3" height="15" fill="rgb(242,121,42)"/><text x="1076.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 5.67%)</title><rect x="1019" y="356" width="67" height="15" fill="rgb(214,85,45)"/><text x="1022.00" y="366.50">onnxrun..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.43%)</title><rect x="1057" y="372" width="29" height="15" fill="rgb(236,121,1)"/><text x="1060.00" y="382.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.81%)</title><rect x="1076" y="388" width="10" height="15" fill="rgb(232,228,13)"/><text x="1079.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.81%)</title><rect x="1076" y="404" width="10" height="15" fill="rgb(212,18,49)"/><text x="1079.00" y="414.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1086" y="356" width="2" height="15" fill="rgb(217,148,6)"/><text x="1089.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1088" y="356" width="1" height="15" fill="rgb(208,198,18)"/><text x="1091.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1088" y="372" width="1" height="15" fill="rgb(219,52,54)"/><text x="1091.00" y="382.50"></text></g><g><title>0x7fb25b3a3930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="1097" y="372" width="3" height="15" fill="rgb(236,92,8)"/><text x="1100.00" y="382.50"></text></g><g><title>0x7fb25b3a40f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1100" y="372" width="2" height="15" fill="rgb(227,212,33)"/><text x="1103.00" y="382.50"></text></g><g><title>0x7fb29b3ac906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1102" y="372" width="2" height="15" fill="rgb(249,1,17)"/><text x="1105.00" y="382.50"></text></g><g><title>0x7fb29b3ac945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1104" y="372" width="1" height="15" fill="rgb(216,170,2)"/><text x="1107.00" y="382.50"></text></g><g><title>0x7fb29b3ac97c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1105" y="372" width="2" height="15" fill="rgb(241,160,44)"/><text x="1108.00" y="382.50"></text></g><g><title>0x7fb29b3ac991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1107" y="372" width="1" height="15" fill="rgb(225,134,50)"/><text x="1110.00" y="382.50"></text></g><g><title>0x7fb29b3aca41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1108" y="372" width="2" height="15" fill="rgb(232,32,1)"/><text x="1111.00" y="382.50"></text></g><g><title>0x7fb29b3aca53 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1110" y="372" width="1" height="15" fill="rgb(246,83,3)"/><text x="1113.00" y="382.50"></text></g><g><title>0x7fb29b3acbd4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1111" y="372" width="2" height="15" fill="rgb(235,93,29)"/><text x="1114.00" y="382.50"></text></g><g><title>0x7fb29b3ccdbb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1113" y="372" width="2" height="15" fill="rgb(254,123,38)"/><text x="1116.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.40%)</title><rect x="1115" y="372" width="4" height="15" fill="rgb(236,180,8)"/><text x="1118.00" y="382.50"></text></g><g><title>0x7fb28ae78d50 (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="1123" y="388" width="4" height="15" fill="rgb(239,216,49)"/><text x="1126.00" y="398.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.78%)</title><rect x="1089" y="356" width="45" height="15" fill="rgb(232,107,43)"/><text x="1092.00" y="366.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.21%)</title><rect x="1119" y="372" width="15" height="15" fill="rgb(222,27,45)"/><text x="1122.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.54%)</title><rect x="1127" y="388" width="7" height="15" fill="rgb(246,38,37)"/><text x="1130.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (237 samples, 31.98%)</title><rect x="758" y="340" width="377" height="15" fill="rgb(214,221,29)"/><text x="761.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onn..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1134" y="356" width="1" height="15" fill="rgb(224,70,30)"/><text x="1137.00" y="366.50"></text></g><g><title>0x7fb25b3a3930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1134" y="372" width="1" height="15" fill="rgb(213,211,12)"/><text x="1137.00" y="382.50"></text></g><g><title>0x7fb29b3adb61 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1147" y="388" width="1" height="15" fill="rgb(220,52,30)"/><text x="1150.00" y="398.50"></text></g><g><title>0x7fb29b3add67 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1148" y="388" width="2" height="15" fill="rgb(206,99,6)"/><text x="1151.00" y="398.50"></text></g><g><title>0x7fb29b3ae033 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1150" y="388" width="1" height="15" fill="rgb(228,33,40)"/><text x="1153.00" y="398.50"></text></g><g><title>0x7fb29b3ae064 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1151" y="388" width="2" height="15" fill="rgb(237,134,13)"/><text x="1154.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.48%)</title><rect x="1137" y="356" width="17" height="15" fill="rgb(230,95,40)"/><text x="1140.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (11 samples, 1.48%)</title><rect x="1137" y="372" width="17" height="15" fill="rgb(249,173,16)"/><text x="1140.00" y="382.50"></text></g><g><title>0x7fb29b3ae3e0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1153" y="388" width="1" height="15" fill="rgb(252,100,14)"/><text x="1156.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (251 samples, 33.87%)</title><rect x="756" y="260" width="400" height="15" fill="rgb(236,126,3)"/><text x="759.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (251 samples, 33.87%)</title><rect x="756" y="276" width="400" height="15" fill="rgb(244,3,17)"/><text x="759.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (250 samples, 33.74%)</title><rect x="758" y="292" width="398" height="15" fill="rgb(251,31,8)"/><text x="761.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (250 samples, 33.74%)</title><rect x="758" y="308" width="398" height="15" fill="rgb(208,23,44)"/><text x="761.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (250 samples, 33.74%)</title><rect x="758" y="324" width="398" height="15" fill="rgb(249,186,54)"/><text x="761.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.75%)</title><rect x="1135" y="340" width="21" height="15" fill="rgb(237,103,4)"/><text x="1138.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1154" y="356" width="2" height="15" fill="rgb(253,152,54)"/><text x="1157.00" y="366.50"></text></g><g><title>0x7fb25b3a4870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1175" y="276" width="2" height="15" fill="rgb(246,91,23)"/><text x="1178.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="1177" y="276" width="3" height="15" fill="rgb(234,13,6)"/><text x="1180.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.29%)</title><rect x="1156" y="260" width="27" height="15" fill="rgb(236,95,23)"/><text x="1159.00" y="270.50">p..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="1180" y="276" width="3" height="15" fill="rgb(247,176,16)"/><text x="1183.00" y="286.50"></text></g><g><title>0x7fb29b3aca51 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(209,56,36)"/><text x="1186.00" y="302.50"></text></g><g><title>0x7fb29b3ac90e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1185" y="308" width="1" height="15" fill="rgb(222,213,54)"/><text x="1188.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (272 samples, 36.71%)</title><rect x="755" y="164" width="433" height="15" fill="rgb(232,63,51)"/><text x="758.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (272 samples, 36.71%)</title><rect x="755" y="180" width="433" height="15" fill="rgb(212,109,5)"/><text x="758.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (271 samples, 36.57%)</title><rect x="756" y="196" width="432" height="15" fill="rgb(240,219,8)"/><text x="759.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (271 samples, 36.57%)</title><rect x="756" y="212" width="432" height="15" fill="rgb(238,169,48)"/><text x="759.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxru..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (271 samples, 36.57%)</title><rect x="756" y="228" width="432" height="15" fill="rgb(228,127,18)"/><text x="759.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (271 samples, 36.57%)</title><rect x="756" y="244" width="432" height="15" fill="rgb(206,76,41)"/><text x="759.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="1183" y="260" width="5" height="15" fill="rgb(212,92,24)"/><text x="1186.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="1183" y="276" width="5" height="15" fill="rgb(235,167,37)"/><text x="1186.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="1185" y="292" width="3" height="15" fill="rgb(222,94,35)"/><text x="1188.00" y="302.50"></text></g><g><title>0x7fb29b3acd07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1186" y="308" width="2" height="15" fill="rgb(252,212,37)"/><text x="1189.00" y="318.50"></text></g><g><title>all (741 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,118,48)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:52) (300 samples, 40.49%)</title><rect x="712" y="52" width="478" height="15" fill="rgb(228,170,40)"/><text x="715.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_..</text></g><g><title>profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:51) (300 samples, 40.49%)</title><rect x="712" y="68" width="478" height="15" fill="rgb(244,74,14)"/><text x="715.00" y="78.50">profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:29) (300 samples, 40.49%)</title><rect x="712" y="84" width="478" height="15" fill="rgb(251,140,36)"/><text x="715.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:23) (281 samples, 37.92%)</title><rect x="742" y="100" width="448" height="15" fill="rgb(214,75,9)"/><text x="745.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (273 samples, 36.84%)</title><rect x="755" y="116" width="435" height="15" fill="rgb(239,3,0)"/><text x="758.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (273 samples, 36.84%)</title><rect x="755" y="132" width="435" height="15" fill="rgb(229,26,46)"/><text x="758.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (273 samples, 36.84%)</title><rect x="755" y="148" width="435" height="15" fill="rgb(249,9,31)"/><text x="758.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.13%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(250,180,9)"/><text x="1191.00" y="174.50"></text></g></g></svg>