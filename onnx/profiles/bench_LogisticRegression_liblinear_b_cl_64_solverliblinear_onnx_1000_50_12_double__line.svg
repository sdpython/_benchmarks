<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1590" onload="init(evt)" viewBox="0 0 1200 1590" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1590" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1573.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1573.00"> </text><g id="frames"><g><title>decision_function (sklearn/linear_model/_base.py:266) (1 samples, 0.29%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(237,27,25)"/><text x="13.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(224,155,25)"/><text x="13.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.29%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(241,64,40)"/><text x="13.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="13" y="212" width="3" height="15" fill="rgb(206,99,9)"/><text x="16.00" y="222.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:18) (3 samples, 0.88%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(237,125,49)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.88%)</title><rect x="10" y="116" width="10" height="15" fill="rgb(208,0,3)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.88%)</title><rect x="10" y="132" width="10" height="15" fill="rgb(206,214,3)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 0.88%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(229,189,15)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (3 samples, 0.88%)</title><rect x="10" y="164" width="10" height="15" fill="rgb(218,86,12)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (2 samples, 0.59%)</title><rect x="13" y="180" width="7" height="15" fill="rgb(218,2,42)"/><text x="16.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.59%)</title><rect x="13" y="196" width="7" height="15" fill="rgb(249,41,50)"/><text x="16.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="16" y="212" width="4" height="15" fill="rgb(209,41,32)"/><text x="19.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.29%)</title><rect x="16" y="228" width="4" height="15" fill="rgb(225,142,16)"/><text x="19.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3011) (1 samples, 0.29%)</title><rect x="16" y="244" width="4" height="15" fill="rgb(224,154,11)"/><text x="19.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="16" y="260" width="4" height="15" fill="rgb(217,172,42)"/><text x="19.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 0.88%)</title><rect x="30" y="164" width="11" height="15" fill="rgb(242,171,18)"/><text x="33.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 1.77%)</title><rect x="30" y="148" width="21" height="15" fill="rgb(212,144,21)"/><text x="33.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.88%)</title><rect x="41" y="164" width="10" height="15" fill="rgb(238,122,34)"/><text x="44.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.59%)</title><rect x="44" y="180" width="7" height="15" fill="rgb(212,58,48)"/><text x="47.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.29%)</title><rect x="51" y="148" width="4" height="15" fill="rgb(211,216,1)"/><text x="54.00" y="158.50"></text></g><g><title>array_size_get (getset.c:450) (1 samples, 0.29%)</title><rect x="51" y="164" width="4" height="15" fill="rgb(206,221,24)"/><text x="54.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.29%)</title><rect x="51" y="180" width="4" height="15" fill="rgb(237,110,20)"/><text x="54.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.29%)</title><rect x="69" y="228" width="3" height="15" fill="rgb(244,93,45)"/><text x="72.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.88%)</title><rect x="69" y="212" width="10" height="15" fill="rgb(237,114,37)"/><text x="72.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.59%)</title><rect x="72" y="228" width="7" height="15" fill="rgb(252,121,46)"/><text x="75.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (5 samples, 1.47%)</title><rect x="69" y="180" width="17" height="15" fill="rgb(210,63,43)"/><text x="72.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.47%)</title><rect x="69" y="196" width="17" height="15" fill="rgb(222,172,15)"/><text x="72.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.59%)</title><rect x="79" y="212" width="7" height="15" fill="rgb(214,196,35)"/><text x="82.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="83" y="228" width="3" height="15" fill="rgb(248,152,1)"/><text x="86.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.29%)</title><rect x="90" y="196" width="3" height="15" fill="rgb(245,30,46)"/><text x="93.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.29%)</title><rect x="93" y="196" width="4" height="15" fill="rgb(228,207,43)"/><text x="96.00" y="206.50"></text></g><g><title>0x7fc2da7b2163 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="93" y="212" width="4" height="15" fill="rgb(236,158,3)"/><text x="96.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.29%)</title><rect x="97" y="196" width="3" height="15" fill="rgb(254,117,22)"/><text x="100.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.29%)</title><rect x="103" y="212" width="4" height="15" fill="rgb(212,17,4)"/><text x="106.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.88%)</title><rect x="100" y="196" width="10" height="15" fill="rgb(245,159,7)"/><text x="103.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.29%)</title><rect x="107" y="212" width="3" height="15" fill="rgb(232,17,28)"/><text x="110.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.59%)</title><rect x="110" y="196" width="7" height="15" fill="rgb(215,110,5)"/><text x="113.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.59%)</title><rect x="110" y="212" width="7" height="15" fill="rgb(237,147,34)"/><text x="113.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.59%)</title><rect x="110" y="228" width="7" height="15" fill="rgb(205,17,47)"/><text x="113.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.59%)</title><rect x="117" y="196" width="7" height="15" fill="rgb(222,146,32)"/><text x="120.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.59%)</title><rect x="117" y="212" width="7" height="15" fill="rgb(220,35,49)"/><text x="120.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.59%)</title><rect x="117" y="228" width="7" height="15" fill="rgb(247,56,20)"/><text x="120.00" y="238.50"></text></g><g><title>0x7fc2da6eae7a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="121" y="244" width="3" height="15" fill="rgb(211,187,52)"/><text x="124.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.29%)</title><rect x="128" y="228" width="3" height="15" fill="rgb(250,177,48)"/><text x="131.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.88%)</title><rect x="124" y="196" width="11" height="15" fill="rgb(225,1,49)"/><text x="127.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.88%)</title><rect x="124" y="212" width="11" height="15" fill="rgb(225,207,4)"/><text x="127.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.29%)</title><rect x="131" y="228" width="4" height="15" fill="rgb(233,62,39)"/><text x="134.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.59%)</title><rect x="135" y="212" width="7" height="15" fill="rgb(209,100,47)"/><text x="138.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.59%)</title><rect x="142" y="212" width="7" height="15" fill="rgb(206,193,11)"/><text x="145.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.59%)</title><rect x="142" y="228" width="7" height="15" fill="rgb(231,68,27)"/><text x="145.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.29%)</title><rect x="145" y="244" width="4" height="15" fill="rgb(219,44,43)"/><text x="148.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.29%)</title><rect x="149" y="212" width="3" height="15" fill="rgb(208,161,47)"/><text x="152.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.29%)</title><rect x="149" y="228" width="3" height="15" fill="rgb(222,187,7)"/><text x="152.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (20 samples, 5.90%)</title><rect x="86" y="180" width="70" height="15" fill="rgb(244,16,46)"/><text x="89.00" y="190.50">decisio..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.77%)</title><rect x="135" y="196" width="21" height="15" fill="rgb(247,178,38)"/><text x="138.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.29%)</title><rect x="152" y="212" width="4" height="15" fill="rgb(218,114,3)"/><text x="155.00" y="222.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.29%)</title><rect x="156" y="196" width="3" height="15" fill="rgb(227,15,16)"/><text x="159.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:341) (1 samples, 0.29%)</title><rect x="156" y="212" width="3" height="15" fill="rgb(212,87,38)"/><text x="159.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c:293) (1 samples, 0.29%)</title><rect x="156" y="228" width="3" height="15" fill="rgb(233,132,33)"/><text x="159.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.29%)</title><rect x="156" y="244" width="3" height="15" fill="rgb(245,112,47)"/><text x="159.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.29%)</title><rect x="159" y="292" width="4" height="15" fill="rgb(211,70,25)"/><text x="162.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.59%)</title><rect x="159" y="260" width="7" height="15" fill="rgb(217,5,31)"/><text x="162.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.59%)</title><rect x="159" y="276" width="7" height="15" fill="rgb(210,155,47)"/><text x="162.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.29%)</title><rect x="163" y="292" width="3" height="15" fill="rgb(218,5,26)"/><text x="166.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.29%)</title><rect x="163" y="308" width="3" height="15" fill="rgb(226,164,1)"/><text x="166.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="163" y="324" width="3" height="15" fill="rgb(249,37,14)"/><text x="166.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.29%)</title><rect x="163" y="340" width="3" height="15" fill="rgb(210,115,3)"/><text x="166.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:121) (1 samples, 0.29%)</title><rect x="163" y="356" width="3" height="15" fill="rgb(238,193,36)"/><text x="166.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.29%)</title><rect x="166" y="308" width="4" height="15" fill="rgb(232,115,39)"/><text x="169.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.29%)</title><rect x="170" y="308" width="3" height="15" fill="rgb(232,61,54)"/><text x="173.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.88%)</title><rect x="166" y="260" width="11" height="15" fill="rgb(252,186,33)"/><text x="169.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.88%)</title><rect x="166" y="276" width="11" height="15" fill="rgb(226,158,32)"/><text x="169.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.88%)</title><rect x="166" y="292" width="11" height="15" fill="rgb(238,179,47)"/><text x="169.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.29%)</title><rect x="173" y="308" width="4" height="15" fill="rgb(218,63,46)"/><text x="176.00" y="318.50"></text></g><g><title>0x7fc2da6f4d67 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="173" y="324" width="4" height="15" fill="rgb(216,49,18)"/><text x="176.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.29%)</title><rect x="177" y="276" width="3" height="15" fill="rgb(221,107,1)"/><text x="180.00" y="286.50"></text></g><g><title>array_add (number.c:330) (7 samples, 2.06%)</title><rect x="159" y="196" width="25" height="15" fill="rgb(208,105,32)"/><text x="162.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.06%)</title><rect x="159" y="212" width="25" height="15" fill="rgb(226,106,21)"/><text x="162.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 2.06%)</title><rect x="159" y="228" width="25" height="15" fill="rgb(208,111,14)"/><text x="162.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 2.06%)</title><rect x="159" y="244" width="25" height="15" fill="rgb(232,88,34)"/><text x="162.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.59%)</title><rect x="177" y="260" width="7" height="15" fill="rgb(215,26,47)"/><text x="180.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="180" y="276" width="4" height="15" fill="rgb(250,82,10)"/><text x="183.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.29%)</title><rect x="184" y="196" width="3" height="15" fill="rgb(245,171,22)"/><text x="187.00" y="206.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.29%)</title><rect x="184" y="212" width="3" height="15" fill="rgb(242,131,4)"/><text x="187.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="187" y="212" width="4" height="15" fill="rgb(220,12,37)"/><text x="190.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 8.26%)</title><rect x="191" y="212" width="97" height="15" fill="rgb(219,220,54)"/><text x="194.00" y="222.50">dgemm_kerne..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2779) (1 samples, 0.29%)</title><rect x="288" y="244" width="3" height="15" fill="rgb(245,137,22)"/><text x="291.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.29%)</title><rect x="291" y="244" width="4" height="15" fill="rgb(242,202,41)"/><text x="294.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.29%)</title><rect x="291" y="260" width="4" height="15" fill="rgb(222,78,1)"/><text x="294.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1907) (1 samples, 0.29%)</title><rect x="291" y="276" width="4" height="15" fill="rgb(206,59,24)"/><text x="294.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.29%)</title><rect x="295" y="356" width="3" height="15" fill="rgb(224,219,6)"/><text x="298.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.29%)</title><rect x="295" y="372" width="3" height="15" fill="rgb(250,29,14)"/><text x="298.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="295" y="388" width="3" height="15" fill="rgb(228,131,18)"/><text x="298.00" y="398.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.59%)</title><rect x="295" y="244" width="7" height="15" fill="rgb(216,106,9)"/><text x="298.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.59%)</title><rect x="295" y="260" width="7" height="15" fill="rgb(211,177,8)"/><text x="298.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.59%)</title><rect x="295" y="276" width="7" height="15" fill="rgb(207,32,20)"/><text x="298.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.59%)</title><rect x="295" y="292" width="7" height="15" fill="rgb(214,56,6)"/><text x="298.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.59%)</title><rect x="295" y="308" width="7" height="15" fill="rgb(225,182,42)"/><text x="298.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.59%)</title><rect x="295" y="324" width="7" height="15" fill="rgb(242,76,42)"/><text x="298.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.59%)</title><rect x="295" y="340" width="7" height="15" fill="rgb(240,7,45)"/><text x="298.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.29%)</title><rect x="298" y="356" width="4" height="15" fill="rgb(250,71,0)"/><text x="301.00" y="366.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src:114) (1 samples, 0.29%)</title><rect x="302" y="276" width="3" height="15" fill="rgb(252,227,11)"/><text x="305.00" y="286.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="305" y="308" width="4" height="15" fill="rgb(213,145,38)"/><text x="308.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (83 samples, 24.48%)</title><rect x="65" y="164" width="289" height="15" fill="rgb(252,35,38)"/><text x="68.00" y="174.50">_predict_proba_lr (sklearn/linear_mode..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (57 samples, 16.81%)</title><rect x="156" y="180" width="198" height="15" fill="rgb(215,93,13)"/><text x="159.00" y="190.50">decision_function (sklear..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (48 samples, 14.16%)</title><rect x="187" y="196" width="167" height="15" fill="rgb(228,29,17)"/><text x="190.00" y="206.50">safe_sparse_dot (skle..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 5.60%)</title><rect x="288" y="212" width="66" height="15" fill="rgb(211,130,18)"/><text x="291.00" y="222.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (19 samples, 5.60%)</title><rect x="288" y="228" width="66" height="15" fill="rgb(219,103,33)"/><text x="291.00" y="238.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (15 samples, 4.42%)</title><rect x="302" y="244" width="52" height="15" fill="rgb(217,3,10)"/><text x="305.00" y="254.50">PyUFu..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (15 samples, 4.42%)</title><rect x="302" y="260" width="52" height="15" fill="rgb(243,228,37)"/><text x="305.00" y="270.50">DOUBL..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 4.13%)</title><rect x="305" y="276" width="49" height="15" fill="rgb(221,147,48)"/><text x="308.00" y="286.50">cbla..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 4.13%)</title><rect x="305" y="292" width="49" height="15" fill="rgb(241,223,9)"/><text x="308.00" y="302.50">dgem..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 3.83%)</title><rect x="309" y="308" width="45" height="15" fill="rgb(232,59,35)"/><text x="312.00" y="318.50">dgem..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="354" y="196" width="4" height="15" fill="rgb(233,30,1)"/><text x="357.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.29%)</title><rect x="354" y="212" width="4" height="15" fill="rgb(207,41,18)"/><text x="357.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.29%)</title><rect x="354" y="228" width="4" height="15" fill="rgb(247,167,5)"/><text x="357.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.29%)</title><rect x="354" y="244" width="4" height="15" fill="rgb(250,155,53)"/><text x="357.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.29%)</title><rect x="354" y="260" width="4" height="15" fill="rgb(253,189,2)"/><text x="357.00" y="270.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.29%)</title><rect x="354" y="276" width="4" height="15" fill="rgb(240,3,17)"/><text x="357.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.29%)</title><rect x="354" y="292" width="4" height="15" fill="rgb(217,81,35)"/><text x="357.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.29%)</title><rect x="358" y="196" width="3" height="15" fill="rgb(229,194,46)"/><text x="361.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.29%)</title><rect x="358" y="212" width="3" height="15" fill="rgb(253,211,53)"/><text x="361.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.29%)</title><rect x="361" y="212" width="4" height="15" fill="rgb(218,3,39)"/><text x="364.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.29%)</title><rect x="361" y="228" width="4" height="15" fill="rgb(216,110,39)"/><text x="364.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.29%)</title><rect x="361" y="244" width="4" height="15" fill="rgb(243,126,45)"/><text x="364.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:561) (1 samples, 0.29%)</title><rect x="361" y="260" width="4" height="15" fill="rgb(254,141,15)"/><text x="364.00" y="270.50"></text></g><g><title>0x7fc2da6d493b (libc-2.29.so) (1 samples, 0.29%)</title><rect x="361" y="276" width="4" height="15" fill="rgb(211,5,0)"/><text x="364.00" y="286.50"></text></g><g><title>0x7fc2bcada9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="365" y="244" width="3" height="15" fill="rgb(243,50,46)"/><text x="368.00" y="254.50"></text></g><g><title>0x7fc2bcc049f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="382" y="276" width="7" height="15" fill="rgb(218,166,34)"/><text x="385.00" y="286.50"></text></g><g><title>0x7fc2da8201b0 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="406" y="292" width="4" height="15" fill="rgb(237,148,27)"/><text x="409.00" y="302.50"></text></g><g><title>0x7fc2da8a6be7 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="410" y="292" width="3" height="15" fill="rgb(216,101,27)"/><text x="413.00" y="302.50"></text></g><g><title>0x7fc2da8a6bf9 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="413" y="292" width="4" height="15" fill="rgb(219,108,18)"/><text x="416.00" y="302.50"></text></g><g><title>0x7fc2da8a6c07 (libm-2.29.so) (2 samples, 0.59%)</title><rect x="417" y="292" width="7" height="15" fill="rgb(251,199,5)"/><text x="420.00" y="302.50"></text></g><g><title>0x7fc2da8a6c2e (libm-2.29.so) (2 samples, 0.59%)</title><rect x="424" y="292" width="7" height="15" fill="rgb(217,64,3)"/><text x="427.00" y="302.50"></text></g><g><title>0x7fc2da8a6c3e (libm-2.29.so) (2 samples, 0.59%)</title><rect x="431" y="292" width="7" height="15" fill="rgb(234,52,12)"/><text x="434.00" y="302.50"></text></g><g><title>0x7fc2bcafb265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 6.49%)</title><rect x="368" y="260" width="77" height="15" fill="rgb(220,65,11)"/><text x="371.00" y="270.50">0x7fc2bc..</text></g><g><title>exp (libm-2.29.so) (16 samples, 4.72%)</title><rect x="389" y="276" width="56" height="15" fill="rgb(253,180,12)"/><text x="392.00" y="286.50">exp (..</text></g><g><title>0x7fc2da8a6c6a (libm-2.29.so) (2 samples, 0.59%)</title><rect x="438" y="292" width="7" height="15" fill="rgb(242,157,3)"/><text x="441.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (36 samples, 10.62%)</title><rect x="354" y="180" width="125" height="15" fill="rgb(235,149,14)"/><text x="357.00" y="190.50">ufunc_generic_c..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (34 samples, 10.03%)</title><rect x="361" y="196" width="118" height="15" fill="rgb(238,228,47)"/><text x="364.00" y="206.50">PyUFunc_Generi..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (33 samples, 9.73%)</title><rect x="365" y="212" width="114" height="15" fill="rgb(235,50,3)"/><text x="368.00" y="222.50">execute_legacy..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (33 samples, 9.73%)</title><rect x="365" y="228" width="114" height="15" fill="rgb(206,130,50)"/><text x="368.00" y="238.50">trivial_two_op..</text></g><g><title>0x7fc2bcada9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (32 samples, 9.44%)</title><rect x="368" y="244" width="111" height="15" fill="rgb(244,208,52)"/><text x="371.00" y="254.50">0x7fc2bcada9d..</text></g><g><title>0x7fc2bcafb279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.95%)</title><rect x="445" y="260" width="34" height="15" fill="rgb(229,54,11)"/><text x="448.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (37 samples, 10.91%)</title><rect x="354" y="164" width="129" height="15" fill="rgb(220,76,38)"/><text x="357.00" y="174.50">_predict_proba_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.29%)</title><rect x="479" y="180" width="4" height="15" fill="rgb(222,95,36)"/><text x="482.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1957) (1 samples, 0.29%)</title><rect x="479" y="196" width="4" height="15" fill="rgb(227,212,37)"/><text x="482.00" y="206.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.29%)</title><rect x="493" y="180" width="4" height="15" fill="rgb(241,223,21)"/><text x="496.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.29%)</title><rect x="493" y="196" width="4" height="15" fill="rgb(219,68,25)"/><text x="496.00" y="206.50"></text></g><g><title>0x7fc2da6ea73b (libc-2.29.so) (1 samples, 0.29%)</title><rect x="493" y="212" width="4" height="15" fill="rgb(251,127,24)"/><text x="496.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.29%)</title><rect x="497" y="228" width="3" height="15" fill="rgb(212,8,45)"/><text x="500.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="497" y="244" width="3" height="15" fill="rgb(237,52,52)"/><text x="500.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="497" y="260" width="3" height="15" fill="rgb(245,197,6)"/><text x="500.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.29%)</title><rect x="497" y="276" width="3" height="15" fill="rgb(215,186,6)"/><text x="500.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.29%)</title><rect x="497" y="292" width="3" height="15" fill="rgb(232,119,23)"/><text x="500.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.29%)</title><rect x="497" y="308" width="3" height="15" fill="rgb(241,59,43)"/><text x="500.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.29%)</title><rect x="500" y="244" width="4" height="15" fill="rgb(247,196,48)"/><text x="503.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1952) (1 samples, 0.29%)</title><rect x="500" y="260" width="4" height="15" fill="rgb(238,189,26)"/><text x="503.00" y="270.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.29%)</title><rect x="504" y="308" width="3" height="15" fill="rgb(207,72,44)"/><text x="507.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.59%)</title><rect x="504" y="276" width="7" height="15" fill="rgb(211,72,1)"/><text x="507.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.59%)</title><rect x="504" y="292" width="7" height="15" fill="rgb(232,165,11)"/><text x="507.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.29%)</title><rect x="507" y="308" width="4" height="15" fill="rgb(223,149,6)"/><text x="510.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="507" y="324" width="4" height="15" fill="rgb(226,6,1)"/><text x="510.00" y="334.50"></text></g><g><title>0x7fc2da6f4d53 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="507" y="340" width="4" height="15" fill="rgb(233,148,34)"/><text x="510.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.29%)</title><rect x="511" y="276" width="3" height="15" fill="rgb(252,95,24)"/><text x="514.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="511" y="292" width="3" height="15" fill="rgb(249,204,36)"/><text x="514.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:228) (1 samples, 0.29%)</title><rect x="511" y="308" width="3" height="15" fill="rgb(212,161,49)"/><text x="514.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.29%)</title><rect x="514" y="276" width="4" height="15" fill="rgb(206,15,34)"/><text x="517.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.29%)</title><rect x="514" y="292" width="4" height="15" fill="rgb(219,32,29)"/><text x="517.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1176) (1 samples, 0.29%)</title><rect x="514" y="308" width="4" height="15" fill="rgb(206,43,3)"/><text x="517.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.29%)</title><rect x="518" y="308" width="3" height="15" fill="rgb(250,123,46)"/><text x="521.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.29%)</title><rect x="521" y="324" width="4" height="15" fill="rgb(241,211,26)"/><text x="524.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.29%)</title><rect x="525" y="324" width="3" height="15" fill="rgb(218,11,38)"/><text x="528.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.88%)</title><rect x="521" y="308" width="11" height="15" fill="rgb(222,103,19)"/><text x="524.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.29%)</title><rect x="528" y="324" width="4" height="15" fill="rgb(242,13,49)"/><text x="531.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.29%)</title><rect x="532" y="308" width="3" height="15" fill="rgb(226,197,26)"/><text x="535.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.29%)</title><rect x="535" y="308" width="4" height="15" fill="rgb(214,96,27)"/><text x="538.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.29%)</title><rect x="539" y="308" width="3" height="15" fill="rgb(236,213,11)"/><text x="542.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (15 samples, 4.42%)</title><rect x="497" y="180" width="52" height="15" fill="rgb(234,101,23)"/><text x="500.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 4.42%)</title><rect x="497" y="196" width="52" height="15" fill="rgb(214,157,38)"/><text x="500.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 4.42%)</title><rect x="497" y="212" width="52" height="15" fill="rgb(206,99,13)"/><text x="500.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 4.13%)</title><rect x="500" y="228" width="49" height="15" fill="rgb(220,144,26)"/><text x="503.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 3.83%)</title><rect x="504" y="244" width="45" height="15" fill="rgb(240,104,38)"/><text x="507.00" y="254.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 3.83%)</title><rect x="504" y="260" width="45" height="15" fill="rgb(208,132,44)"/><text x="507.00" y="270.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 2.65%)</title><rect x="518" y="276" width="31" height="15" fill="rgb(252,90,33)"/><text x="521.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 2.65%)</title><rect x="518" y="292" width="31" height="15" fill="rgb(253,182,54)"/><text x="521.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (2 samples, 0.59%)</title><rect x="542" y="308" width="7" height="15" fill="rgb(238,130,0)"/><text x="545.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.29%)</title><rect x="549" y="196" width="4" height="15" fill="rgb(244,167,10)"/><text x="552.00" y="206.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.29%)</title><rect x="549" y="212" width="4" height="15" fill="rgb(245,175,33)"/><text x="552.00" y="222.50"></text></g><g><title>_extract_pyvals (extobj.c:196) (1 samples, 0.29%)</title><rect x="549" y="228" width="4" height="15" fill="rgb(207,103,27)"/><text x="552.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.29%)</title><rect x="553" y="228" width="3" height="15" fill="rgb(230,39,29)"/><text x="556.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.29%)</title><rect x="553" y="244" width="3" height="15" fill="rgb(234,221,0)"/><text x="556.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.29%)</title><rect x="553" y="260" width="3" height="15" fill="rgb(245,212,24)"/><text x="556.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.29%)</title><rect x="553" y="276" width="3" height="15" fill="rgb(230,37,16)"/><text x="556.00" y="286.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.29%)</title><rect x="556" y="276" width="3" height="15" fill="rgb(223,92,38)"/><text x="559.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.29%)</title><rect x="556" y="292" width="3" height="15" fill="rgb(242,195,40)"/><text x="559.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (7 samples, 2.06%)</title><rect x="556" y="244" width="24" height="15" fill="rgb(233,103,34)"/><text x="559.00" y="254.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (7 samples, 2.06%)</title><rect x="556" y="260" width="24" height="15" fill="rgb(213,170,1)"/><text x="559.00" y="270.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (6 samples, 1.77%)</title><rect x="559" y="276" width="21" height="15" fill="rgb(217,41,11)"/><text x="562.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (6 samples, 1.77%)</title><rect x="559" y="292" width="21" height="15" fill="rgb(227,80,41)"/><text x="562.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:38) (165 samples, 48.67%)</title><rect x="10" y="52" width="574" height="15" fill="rgb(213,71,14)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:37) (165 samples, 48.67%)</title><rect x="10" y="68" width="574" height="15" fill="rgb(215,163,37)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_10..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:29) (165 samples, 48.67%)</title><rect x="10" y="84" width="574" height="15" fill="rgb(249,106,22)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:23) (162 samples, 47.79%)</title><rect x="20" y="100" width="564" height="15" fill="rgb(237,23,3)"/><text x="23.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (162 samples, 47.79%)</title><rect x="20" y="116" width="564" height="15" fill="rgb(214,205,6)"/><text x="23.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (160 samples, 47.20%)</title><rect x="27" y="132" width="557" height="15" fill="rgb(215,223,22)"/><text x="30.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (152 samples, 44.84%)</title><rect x="55" y="148" width="529" height="15" fill="rgb(254,96,40)"/><text x="58.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (29 samples, 8.55%)</title><rect x="483" y="164" width="101" height="15" fill="rgb(228,50,6)"/><text x="486.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.95%)</title><rect x="549" y="180" width="35" height="15" fill="rgb(218,65,2)"/><text x="552.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 2.65%)</title><rect x="553" y="196" width="31" height="15" fill="rgb(247,227,50)"/><text x="556.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 2.65%)</title><rect x="553" y="212" width="31" height="15" fill="rgb(230,82,0)"/><text x="556.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (8 samples, 2.36%)</title><rect x="556" y="228" width="28" height="15" fill="rgb(224,166,23)"/><text x="559.00" y="238.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:302) (1 samples, 0.29%)</title><rect x="580" y="244" width="4" height="15" fill="rgb(246,184,26)"/><text x="583.00" y="254.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:1) (1 samples, 0.29%)</title><rect x="584" y="148" width="3" height="15" fill="rgb(247,16,11)"/><text x="587.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="584" y="164" width="3" height="15" fill="rgb(228,229,7)"/><text x="587.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="584" y="180" width="3" height="15" fill="rgb(219,22,1)"/><text x="587.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="584" y="196" width="3" height="15" fill="rgb(230,58,32)"/><text x="587.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="584" y="212" width="3" height="15" fill="rgb(243,197,24)"/><text x="587.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="584" y="228" width="3" height="15" fill="rgb(223,22,18)"/><text x="587.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.29%)</title><rect x="584" y="244" width="3" height="15" fill="rgb(212,50,16)"/><text x="587.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="584" y="260" width="3" height="15" fill="rgb(233,180,15)"/><text x="587.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="584" y="276" width="3" height="15" fill="rgb(229,45,12)"/><text x="587.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="584" y="292" width="3" height="15" fill="rgb(226,19,23)"/><text x="587.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="584" y="308" width="3" height="15" fill="rgb(229,80,44)"/><text x="587.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="584" y="324" width="3" height="15" fill="rgb(239,154,15)"/><text x="587.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="584" y="340" width="3" height="15" fill="rgb(239,202,30)"/><text x="587.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="584" y="356" width="3" height="15" fill="rgb(237,103,50)"/><text x="587.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:25) (1 samples, 0.29%)</title><rect x="584" y="372" width="3" height="15" fill="rgb(244,37,3)"/><text x="587.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="584" y="388" width="3" height="15" fill="rgb(253,156,53)"/><text x="587.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="584" y="404" width="3" height="15" fill="rgb(227,186,10)"/><text x="587.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="584" y="420" width="3" height="15" fill="rgb(244,145,44)"/><text x="587.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="584" y="436" width="3" height="15" fill="rgb(239,68,37)"/><text x="587.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="584" y="452" width="3" height="15" fill="rgb(229,99,35)"/><text x="587.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/financial.py:146) (1 samples, 0.29%)</title><rect x="584" y="468" width="3" height="15" fill="rgb(232,134,8)"/><text x="587.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.29%)</title><rect x="584" y="484" width="3" height="15" fill="rgb(252,145,2)"/><text x="587.00" y="494.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.29%)</title><rect x="584" y="500" width="3" height="15" fill="rgb(214,13,31)"/><text x="587.00" y="510.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.29%)</title><rect x="584" y="516" width="3" height="15" fill="rgb(244,172,11)"/><text x="587.00" y="526.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.29%)</title><rect x="584" y="532" width="3" height="15" fill="rgb(220,0,25)"/><text x="587.00" y="542.50"></text></g><g><title>0x7fc2da6d4906 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="584" y="548" width="3" height="15" fill="rgb(209,135,13)"/><text x="587.00" y="558.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2130) (1 samples, 0.29%)</title><rect x="587" y="932" width="4" height="15" fill="rgb(250,143,29)"/><text x="590.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.59%)</title><rect x="587" y="852" width="7" height="15" fill="rgb(254,83,49)"/><text x="590.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.59%)</title><rect x="587" y="868" width="7" height="15" fill="rgb(253,183,13)"/><text x="590.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.59%)</title><rect x="587" y="884" width="7" height="15" fill="rgb(248,211,8)"/><text x="590.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.59%)</title><rect x="587" y="900" width="7" height="15" fill="rgb(235,6,15)"/><text x="590.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.59%)</title><rect x="587" y="916" width="7" height="15" fill="rgb(222,137,29)"/><text x="590.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.29%)</title><rect x="591" y="932" width="3" height="15" fill="rgb(222,11,49)"/><text x="594.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.29%)</title><rect x="591" y="948" width="3" height="15" fill="rgb(241,222,52)"/><text x="594.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.29%)</title><rect x="591" y="964" width="3" height="15" fill="rgb(219,56,18)"/><text x="594.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.29%)</title><rect x="591" y="980" width="3" height="15" fill="rgb(208,136,1)"/><text x="594.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.29%)</title><rect x="591" y="996" width="3" height="15" fill="rgb(236,82,26)"/><text x="594.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:240) (1 samples, 0.29%)</title><rect x="591" y="1012" width="3" height="15" fill="rgb(246,27,12)"/><text x="594.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="594" y="852" width="4" height="15" fill="rgb(244,23,43)"/><text x="597.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="594" y="868" width="4" height="15" fill="rgb(233,27,14)"/><text x="597.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.29%)</title><rect x="594" y="884" width="4" height="15" fill="rgb(214,56,38)"/><text x="597.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.29%)</title><rect x="594" y="900" width="4" height="15" fill="rgb(209,200,46)"/><text x="597.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.29%)</title><rect x="594" y="916" width="4" height="15" fill="rgb(243,143,32)"/><text x="597.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.29%)</title><rect x="594" y="932" width="4" height="15" fill="rgb(210,222,17)"/><text x="597.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.29%)</title><rect x="594" y="948" width="4" height="15" fill="rgb(248,13,7)"/><text x="597.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.29%)</title><rect x="594" y="964" width="4" height="15" fill="rgb(239,117,25)"/><text x="597.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.29%)</title><rect x="594" y="980" width="4" height="15" fill="rgb(219,113,19)"/><text x="597.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.29%)</title><rect x="594" y="996" width="4" height="15" fill="rgb(243,139,19)"/><text x="597.00" y="1006.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.29%)</title><rect x="594" y="1012" width="4" height="15" fill="rgb(251,187,32)"/><text x="597.00" y="1022.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.29%)</title><rect x="598" y="916" width="3" height="15" fill="rgb(237,219,43)"/><text x="601.00" y="926.50"></text></g><g><title>splitext (posixpath.py:122) (1 samples, 0.29%)</title><rect x="598" y="932" width="3" height="15" fill="rgb(230,166,47)"/><text x="601.00" y="942.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.29%)</title><rect x="598" y="948" width="3" height="15" fill="rgb(232,136,44)"/><text x="601.00" y="958.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.59%)</title><rect x="598" y="884" width="7" height="15" fill="rgb(235,61,49)"/><text x="601.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.59%)</title><rect x="598" y="900" width="7" height="15" fill="rgb(251,21,17)"/><text x="601.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="601" y="916" width="4" height="15" fill="rgb(237,113,54)"/><text x="604.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="601" y="932" width="4" height="15" fill="rgb(230,169,19)"/><text x="604.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.77%)</title><rect x="587" y="820" width="21" height="15" fill="rgb(235,82,53)"/><text x="590.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.77%)</title><rect x="587" y="836" width="21" height="15" fill="rgb(243,124,41)"/><text x="590.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.88%)</title><rect x="598" y="852" width="10" height="15" fill="rgb(218,117,51)"/><text x="601.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.88%)</title><rect x="598" y="868" width="10" height="15" fill="rgb(251,211,35)"/><text x="601.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.29%)</title><rect x="605" y="884" width="3" height="15" fill="rgb(210,15,9)"/><text x="608.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.29%)</title><rect x="605" y="900" width="3" height="15" fill="rgb(227,195,5)"/><text x="608.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.29%)</title><rect x="605" y="916" width="3" height="15" fill="rgb(227,9,46)"/><text x="608.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.29%)</title><rect x="605" y="932" width="3" height="15" fill="rgb(212,172,30)"/><text x="608.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.29%)</title><rect x="605" y="948" width="3" height="15" fill="rgb(245,0,10)"/><text x="608.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.29%)</title><rect x="605" y="964" width="3" height="15" fill="rgb(232,93,2)"/><text x="608.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.29%)</title><rect x="605" y="980" width="3" height="15" fill="rgb(254,99,54)"/><text x="608.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="605" y="996" width="3" height="15" fill="rgb(238,123,26)"/><text x="608.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="605" y="1012" width="3" height="15" fill="rgb(242,150,26)"/><text x="608.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.06%)</title><rect x="587" y="580" width="25" height="15" fill="rgb(233,196,12)"/><text x="590.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.06%)</title><rect x="587" y="596" width="25" height="15" fill="rgb(246,211,3)"/><text x="590.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.06%)</title><rect x="587" y="612" width="25" height="15" fill="rgb(251,63,27)"/><text x="590.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.06%)</title><rect x="587" y="628" width="25" height="15" fill="rgb(218,113,32)"/><text x="590.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.06%)</title><rect x="587" y="644" width="25" height="15" fill="rgb(235,175,32)"/><text x="590.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.06%)</title><rect x="587" y="660" width="25" height="15" fill="rgb(252,36,48)"/><text x="590.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.06%)</title><rect x="587" y="676" width="25" height="15" fill="rgb(209,143,7)"/><text x="590.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.06%)</title><rect x="587" y="692" width="25" height="15" fill="rgb(210,104,0)"/><text x="590.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.06%)</title><rect x="587" y="708" width="25" height="15" fill="rgb(209,125,27)"/><text x="590.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 2.06%)</title><rect x="587" y="724" width="25" height="15" fill="rgb(223,218,19)"/><text x="590.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.06%)</title><rect x="587" y="740" width="25" height="15" fill="rgb(225,147,39)"/><text x="590.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.06%)</title><rect x="587" y="756" width="25" height="15" fill="rgb(236,46,53)"/><text x="590.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.06%)</title><rect x="587" y="772" width="25" height="15" fill="rgb(228,221,25)"/><text x="590.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.06%)</title><rect x="587" y="788" width="25" height="15" fill="rgb(209,25,2)"/><text x="590.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.06%)</title><rect x="587" y="804" width="25" height="15" fill="rgb(251,61,12)"/><text x="590.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.29%)</title><rect x="608" y="820" width="4" height="15" fill="rgb(205,154,52)"/><text x="611.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="608" y="836" width="4" height="15" fill="rgb(224,227,21)"/><text x="611.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="608" y="852" width="4" height="15" fill="rgb(254,134,3)"/><text x="611.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="608" y="868" width="4" height="15" fill="rgb(227,191,1)"/><text x="611.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="608" y="884" width="4" height="15" fill="rgb(234,153,2)"/><text x="611.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="608" y="900" width="4" height="15" fill="rgb(231,85,41)"/><text x="611.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="608" y="916" width="4" height="15" fill="rgb(253,113,15)"/><text x="611.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (8 samples, 2.36%)</title><rect x="587" y="148" width="28" height="15" fill="rgb(249,80,30)"/><text x="590.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.36%)</title><rect x="587" y="164" width="28" height="15" fill="rgb(243,89,7)"/><text x="590.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.36%)</title><rect x="587" y="180" width="28" height="15" fill="rgb(243,143,7)"/><text x="590.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.36%)</title><rect x="587" y="196" width="28" height="15" fill="rgb(253,126,21)"/><text x="590.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.36%)</title><rect x="587" y="212" width="28" height="15" fill="rgb(251,54,54)"/><text x="590.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.36%)</title><rect x="587" y="228" width="28" height="15" fill="rgb(222,109,45)"/><text x="590.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.36%)</title><rect x="587" y="244" width="28" height="15" fill="rgb(253,6,24)"/><text x="590.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.36%)</title><rect x="587" y="260" width="28" height="15" fill="rgb(227,11,11)"/><text x="590.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.36%)</title><rect x="587" y="276" width="28" height="15" fill="rgb(223,126,45)"/><text x="590.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 2.36%)</title><rect x="587" y="292" width="28" height="15" fill="rgb(205,208,49)"/><text x="590.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.36%)</title><rect x="587" y="308" width="28" height="15" fill="rgb(208,202,44)"/><text x="590.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.36%)</title><rect x="587" y="324" width="28" height="15" fill="rgb(219,128,17)"/><text x="590.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.36%)</title><rect x="587" y="340" width="28" height="15" fill="rgb(235,23,25)"/><text x="590.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.36%)</title><rect x="587" y="356" width="28" height="15" fill="rgb(209,96,29)"/><text x="590.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.36%)</title><rect x="587" y="372" width="28" height="15" fill="rgb(239,211,9)"/><text x="590.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 2.36%)</title><rect x="587" y="388" width="28" height="15" fill="rgb(253,111,44)"/><text x="590.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.36%)</title><rect x="587" y="404" width="28" height="15" fill="rgb(219,41,38)"/><text x="590.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.36%)</title><rect x="587" y="420" width="28" height="15" fill="rgb(235,27,27)"/><text x="590.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.36%)</title><rect x="587" y="436" width="28" height="15" fill="rgb(210,139,40)"/><text x="590.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.36%)</title><rect x="587" y="452" width="28" height="15" fill="rgb(214,69,15)"/><text x="590.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.36%)</title><rect x="587" y="468" width="28" height="15" fill="rgb(236,126,40)"/><text x="590.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 2.36%)</title><rect x="587" y="484" width="28" height="15" fill="rgb(237,87,35)"/><text x="590.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.36%)</title><rect x="587" y="500" width="28" height="15" fill="rgb(220,41,34)"/><text x="590.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.36%)</title><rect x="587" y="516" width="28" height="15" fill="rgb(213,160,35)"/><text x="590.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.36%)</title><rect x="587" y="532" width="28" height="15" fill="rgb(248,104,1)"/><text x="590.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.36%)</title><rect x="587" y="548" width="28" height="15" fill="rgb(248,12,26)"/><text x="590.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.36%)</title><rect x="587" y="564" width="28" height="15" fill="rgb(215,8,29)"/><text x="590.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:7) (1 samples, 0.29%)</title><rect x="612" y="580" width="3" height="15" fill="rgb(214,131,45)"/><text x="615.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="612" y="596" width="3" height="15" fill="rgb(253,132,43)"/><text x="615.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="612" y="612" width="3" height="15" fill="rgb(250,152,32)"/><text x="615.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="612" y="628" width="3" height="15" fill="rgb(231,73,3)"/><text x="615.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="612" y="644" width="3" height="15" fill="rgb(236,153,2)"/><text x="615.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="612" y="660" width="3" height="15" fill="rgb(225,46,12)"/><text x="615.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="612" y="676" width="3" height="15" fill="rgb(242,14,9)"/><text x="615.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="612" y="692" width="3" height="15" fill="rgb(233,77,50)"/><text x="615.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py:47) (1 samples, 0.29%)</title><rect x="612" y="708" width="3" height="15" fill="rgb(252,114,28)"/><text x="615.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="612" y="724" width="3" height="15" fill="rgb(243,31,45)"/><text x="615.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.29%)</title><rect x="612" y="740" width="3" height="15" fill="rgb(231,119,22)"/><text x="615.00" y="750.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.29%)</title><rect x="612" y="756" width="3" height="15" fill="rgb(236,54,8)"/><text x="615.00" y="766.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.29%)</title><rect x="612" y="772" width="3" height="15" fill="rgb(209,195,21)"/><text x="615.00" y="782.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.29%)</title><rect x="612" y="788" width="3" height="15" fill="rgb(205,141,9)"/><text x="615.00" y="798.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.29%)</title><rect x="612" y="804" width="3" height="15" fill="rgb(207,196,51)"/><text x="615.00" y="814.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.29%)</title><rect x="612" y="820" width="3" height="15" fill="rgb(245,95,26)"/><text x="615.00" y="830.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.29%)</title><rect x="612" y="836" width="3" height="15" fill="rgb(232,214,43)"/><text x="615.00" y="846.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.29%)</title><rect x="612" y="852" width="3" height="15" fill="rgb(243,111,8)"/><text x="615.00" y="862.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="612" y="868" width="3" height="15" fill="rgb(215,174,45)"/><text x="615.00" y="878.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.29%)</title><rect x="612" y="884" width="3" height="15" fill="rgb(239,139,16)"/><text x="615.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.29%)</title><rect x="615" y="292" width="4" height="15" fill="rgb(232,50,24)"/><text x="618.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="615" y="308" width="4" height="15" fill="rgb(228,79,8)"/><text x="618.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="615" y="324" width="4" height="15" fill="rgb(244,130,29)"/><text x="618.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="615" y="340" width="4" height="15" fill="rgb(234,169,43)"/><text x="618.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="615" y="356" width="4" height="15" fill="rgb(247,227,18)"/><text x="618.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="615" y="372" width="4" height="15" fill="rgb(246,198,53)"/><text x="618.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.29%)</title><rect x="615" y="388" width="4" height="15" fill="rgb(233,71,2)"/><text x="618.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="615" y="404" width="4" height="15" fill="rgb(218,75,35)"/><text x="618.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="615" y="420" width="4" height="15" fill="rgb(214,149,41)"/><text x="618.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="615" y="436" width="4" height="15" fill="rgb(218,14,45)"/><text x="618.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="615" y="452" width="4" height="15" fill="rgb(251,10,4)"/><text x="618.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="615" y="468" width="4" height="15" fill="rgb(242,202,46)"/><text x="618.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.29%)</title><rect x="615" y="484" width="4" height="15" fill="rgb(213,158,41)"/><text x="618.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="615" y="500" width="4" height="15" fill="rgb(218,82,2)"/><text x="618.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="615" y="516" width="4" height="15" fill="rgb(230,92,6)"/><text x="618.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="615" y="532" width="4" height="15" fill="rgb(215,183,21)"/><text x="618.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="615" y="548" width="4" height="15" fill="rgb(219,143,51)"/><text x="618.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="615" y="564" width="4" height="15" fill="rgb(247,35,0)"/><text x="618.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="615" y="580" width="4" height="15" fill="rgb(237,109,10)"/><text x="618.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="615" y="596" width="4" height="15" fill="rgb(212,186,5)"/><text x="618.00" y="606.50"></text></g><g><title>0x7fc2c4956093 (?) (1 samples, 0.29%)</title><rect x="615" y="612" width="4" height="15" fill="rgb(238,144,34)"/><text x="618.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="615" y="628" width="4" height="15" fill="rgb(216,46,32)"/><text x="618.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="615" y="644" width="4" height="15" fill="rgb(216,229,42)"/><text x="618.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="615" y="660" width="4" height="15" fill="rgb(250,222,17)"/><text x="618.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="615" y="676" width="4" height="15" fill="rgb(235,111,23)"/><text x="618.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="615" y="692" width="4" height="15" fill="rgb(209,81,30)"/><text x="618.00" y="702.50"></text></g><g><title>0x7fc2c4737f66 (?) (1 samples, 0.29%)</title><rect x="615" y="708" width="4" height="15" fill="rgb(222,227,22)"/><text x="618.00" y="718.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.29%)</title><rect x="619" y="964" width="3" height="15" fill="rgb(222,199,45)"/><text x="622.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="619" y="980" width="3" height="15" fill="rgb(222,196,14)"/><text x="622.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="619" y="996" width="3" height="15" fill="rgb(231,185,40)"/><text x="622.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="619" y="1012" width="3" height="15" fill="rgb(223,142,54)"/><text x="622.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="619" y="1028" width="3" height="15" fill="rgb(240,68,27)"/><text x="622.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="619" y="1044" width="3" height="15" fill="rgb(245,183,12)"/><text x="622.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.29%)</title><rect x="619" y="1060" width="3" height="15" fill="rgb(231,82,51)"/><text x="622.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="619" y="1076" width="3" height="15" fill="rgb(249,115,35)"/><text x="622.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="619" y="1092" width="3" height="15" fill="rgb(233,226,3)"/><text x="622.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="619" y="1108" width="3" height="15" fill="rgb(234,100,48)"/><text x="622.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="619" y="1124" width="3" height="15" fill="rgb(251,168,30)"/><text x="622.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="619" y="1140" width="3" height="15" fill="rgb(247,155,17)"/><text x="622.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.29%)</title><rect x="619" y="1156" width="3" height="15" fill="rgb(234,9,30)"/><text x="622.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.29%)</title><rect x="619" y="1172" width="3" height="15" fill="rgb(218,158,20)"/><text x="622.00" y="1182.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.29%)</title><rect x="619" y="1188" width="3" height="15" fill="rgb(216,165,23)"/><text x="622.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.29%)</title><rect x="619" y="1204" width="3" height="15" fill="rgb(207,136,34)"/><text x="622.00" y="1214.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.29%)</title><rect x="619" y="1220" width="3" height="15" fill="rgb(207,98,7)"/><text x="622.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.29%)</title><rect x="619" y="1236" width="3" height="15" fill="rgb(228,129,40)"/><text x="622.00" y="1246.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.29%)</title><rect x="619" y="1252" width="3" height="15" fill="rgb(241,224,13)"/><text x="622.00" y="1262.50"></text></g><g><title>root (&lt;template&gt;:26) (1 samples, 0.29%)</title><rect x="622" y="1428" width="4" height="15" fill="rgb(217,75,45)"/><text x="625.00" y="1438.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.29%)</title><rect x="622" y="1444" width="4" height="15" fill="rgb(232,201,33)"/><text x="625.00" y="1454.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.29%)</title><rect x="626" y="1428" width="3" height="15" fill="rgb(243,175,19)"/><text x="629.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.29%)</title><rect x="626" y="1444" width="3" height="15" fill="rgb(245,16,50)"/><text x="629.00" y="1454.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.88%)</title><rect x="622" y="1348" width="11" height="15" fill="rgb(248,168,4)"/><text x="625.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.88%)</title><rect x="622" y="1364" width="11" height="15" fill="rgb(236,116,34)"/><text x="625.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.88%)</title><rect x="622" y="1380" width="11" height="15" fill="rgb(229,216,27)"/><text x="625.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.88%)</title><rect x="622" y="1396" width="11" height="15" fill="rgb(250,19,52)"/><text x="625.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.88%)</title><rect x="622" y="1412" width="11" height="15" fill="rgb(243,22,10)"/><text x="625.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:61) (1 samples, 0.29%)</title><rect x="629" y="1428" width="4" height="15" fill="rgb(228,29,25)"/><text x="632.00" y="1438.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.29%)</title><rect x="629" y="1444" width="4" height="15" fill="rgb(254,34,26)"/><text x="632.00" y="1454.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="629" y="1460" width="4" height="15" fill="rgb(209,180,3)"/><text x="632.00" y="1470.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="629" y="1476" width="4" height="15" fill="rgb(206,212,35)"/><text x="632.00" y="1486.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.1345] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="629" y="1492" width="4" height="15" fill="rgb(241,2,7)"/><text x="632.00" y="1502.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="629" y="1508" width="4" height="15" fill="rgb(212,73,25)"/><text x="632.00" y="1518.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (7 samples, 2.06%)</title><rect x="615" y="148" width="25" height="15" fill="rgb(253,83,41)"/><text x="618.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.06%)</title><rect x="615" y="164" width="25" height="15" fill="rgb(245,36,6)"/><text x="618.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.06%)</title><rect x="615" y="180" width="25" height="15" fill="rgb(242,49,30)"/><text x="618.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.06%)</title><rect x="615" y="196" width="25" height="15" fill="rgb(217,209,16)"/><text x="618.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.06%)</title><rect x="615" y="212" width="25" height="15" fill="rgb(233,38,39)"/><text x="618.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.06%)</title><rect x="615" y="228" width="25" height="15" fill="rgb(240,1,42)"/><text x="618.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.06%)</title><rect x="615" y="244" width="25" height="15" fill="rgb(226,220,44)"/><text x="618.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.06%)</title><rect x="615" y="260" width="25" height="15" fill="rgb(254,114,41)"/><text x="618.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.06%)</title><rect x="615" y="276" width="25" height="15" fill="rgb(238,174,33)"/><text x="618.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 1.77%)</title><rect x="619" y="292" width="21" height="15" fill="rgb(214,15,3)"/><text x="622.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="308" width="21" height="15" fill="rgb(226,115,46)"/><text x="622.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.77%)</title><rect x="619" y="324" width="21" height="15" fill="rgb(238,51,17)"/><text x="622.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="340" width="21" height="15" fill="rgb(222,143,8)"/><text x="622.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="356" width="21" height="15" fill="rgb(209,146,8)"/><text x="622.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.77%)</title><rect x="619" y="372" width="21" height="15" fill="rgb(229,40,19)"/><text x="622.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.77%)</title><rect x="619" y="388" width="21" height="15" fill="rgb(205,150,42)"/><text x="622.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.77%)</title><rect x="619" y="404" width="21" height="15" fill="rgb(247,137,39)"/><text x="622.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="420" width="21" height="15" fill="rgb(220,29,42)"/><text x="622.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 1.77%)</title><rect x="619" y="436" width="21" height="15" fill="rgb(236,59,8)"/><text x="622.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="452" width="21" height="15" fill="rgb(220,24,39)"/><text x="622.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.77%)</title><rect x="619" y="468" width="21" height="15" fill="rgb(240,196,8)"/><text x="622.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.77%)</title><rect x="619" y="484" width="21" height="15" fill="rgb(246,133,0)"/><text x="622.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.77%)</title><rect x="619" y="500" width="21" height="15" fill="rgb(253,223,50)"/><text x="622.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="516" width="21" height="15" fill="rgb(214,135,54)"/><text x="622.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 1.77%)</title><rect x="619" y="532" width="21" height="15" fill="rgb(252,20,45)"/><text x="622.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="548" width="21" height="15" fill="rgb(210,167,15)"/><text x="622.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.77%)</title><rect x="619" y="564" width="21" height="15" fill="rgb(254,110,38)"/><text x="622.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.77%)</title><rect x="619" y="580" width="21" height="15" fill="rgb(253,15,20)"/><text x="622.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.77%)</title><rect x="619" y="596" width="21" height="15" fill="rgb(225,181,20)"/><text x="622.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="612" width="21" height="15" fill="rgb(240,114,51)"/><text x="622.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 1.77%)</title><rect x="619" y="628" width="21" height="15" fill="rgb(225,80,24)"/><text x="622.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="644" width="21" height="15" fill="rgb(222,163,46)"/><text x="622.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.77%)</title><rect x="619" y="660" width="21" height="15" fill="rgb(245,119,12)"/><text x="622.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.77%)</title><rect x="619" y="676" width="21" height="15" fill="rgb(219,141,31)"/><text x="622.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.77%)</title><rect x="619" y="692" width="21" height="15" fill="rgb(251,6,49)"/><text x="622.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="708" width="21" height="15" fill="rgb(249,186,31)"/><text x="622.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 1.77%)</title><rect x="619" y="724" width="21" height="15" fill="rgb(237,74,18)"/><text x="622.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="740" width="21" height="15" fill="rgb(221,2,40)"/><text x="622.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.77%)</title><rect x="619" y="756" width="21" height="15" fill="rgb(214,182,28)"/><text x="622.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="772" width="21" height="15" fill="rgb(245,217,26)"/><text x="622.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="788" width="21" height="15" fill="rgb(217,44,48)"/><text x="622.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.77%)</title><rect x="619" y="804" width="21" height="15" fill="rgb(249,5,46)"/><text x="622.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.77%)</title><rect x="619" y="820" width="21" height="15" fill="rgb(237,111,30)"/><text x="622.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.77%)</title><rect x="619" y="836" width="21" height="15" fill="rgb(220,75,18)"/><text x="622.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="852" width="21" height="15" fill="rgb(211,142,8)"/><text x="622.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 1.77%)</title><rect x="619" y="868" width="21" height="15" fill="rgb(216,99,29)"/><text x="622.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.77%)</title><rect x="619" y="884" width="21" height="15" fill="rgb(219,99,32)"/><text x="622.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.77%)</title><rect x="619" y="900" width="21" height="15" fill="rgb(252,165,4)"/><text x="622.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.77%)</title><rect x="619" y="916" width="21" height="15" fill="rgb(227,44,13)"/><text x="622.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.77%)</title><rect x="619" y="932" width="21" height="15" fill="rgb(217,120,15)"/><text x="622.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.77%)</title><rect x="619" y="948" width="21" height="15" fill="rgb(221,72,13)"/><text x="622.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 1.47%)</title><rect x="622" y="964" width="18" height="15" fill="rgb(206,72,21)"/><text x="625.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.47%)</title><rect x="622" y="980" width="18" height="15" fill="rgb(225,12,37)"/><text x="625.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.47%)</title><rect x="622" y="996" width="18" height="15" fill="rgb(244,12,3)"/><text x="625.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.47%)</title><rect x="622" y="1012" width="18" height="15" fill="rgb(210,16,17)"/><text x="625.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.47%)</title><rect x="622" y="1028" width="18" height="15" fill="rgb(240,69,2)"/><text x="625.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.47%)</title><rect x="622" y="1044" width="18" height="15" fill="rgb(239,193,2)"/><text x="625.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.47%)</title><rect x="622" y="1060" width="18" height="15" fill="rgb(222,85,37)"/><text x="625.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.47%)</title><rect x="622" y="1076" width="18" height="15" fill="rgb(254,52,14)"/><text x="625.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (5 samples, 1.47%)</title><rect x="622" y="1092" width="18" height="15" fill="rgb(232,216,49)"/><text x="625.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.47%)</title><rect x="622" y="1108" width="18" height="15" fill="rgb(245,118,18)"/><text x="625.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.47%)</title><rect x="622" y="1124" width="18" height="15" fill="rgb(233,197,31)"/><text x="625.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.47%)</title><rect x="622" y="1140" width="18" height="15" fill="rgb(228,188,32)"/><text x="625.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.47%)</title><rect x="622" y="1156" width="18" height="15" fill="rgb(217,13,49)"/><text x="625.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.47%)</title><rect x="622" y="1172" width="18" height="15" fill="rgb(222,29,12)"/><text x="625.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.47%)</title><rect x="622" y="1188" width="18" height="15" fill="rgb(234,78,5)"/><text x="625.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.47%)</title><rect x="622" y="1204" width="18" height="15" fill="rgb(214,126,44)"/><text x="625.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (5 samples, 1.47%)</title><rect x="622" y="1220" width="18" height="15" fill="rgb(248,102,2)"/><text x="625.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.47%)</title><rect x="622" y="1236" width="18" height="15" fill="rgb(239,11,34)"/><text x="625.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.47%)</title><rect x="622" y="1252" width="18" height="15" fill="rgb(209,106,34)"/><text x="625.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.47%)</title><rect x="622" y="1268" width="18" height="15" fill="rgb(216,63,9)"/><text x="625.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.47%)</title><rect x="622" y="1284" width="18" height="15" fill="rgb(252,162,40)"/><text x="625.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.47%)</title><rect x="622" y="1300" width="18" height="15" fill="rgb(210,164,39)"/><text x="625.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (5 samples, 1.47%)</title><rect x="622" y="1316" width="18" height="15" fill="rgb(231,68,49)"/><text x="625.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (5 samples, 1.47%)</title><rect x="622" y="1332" width="18" height="15" fill="rgb(220,191,25)"/><text x="625.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (2 samples, 0.59%)</title><rect x="633" y="1348" width="7" height="15" fill="rgb(240,132,31)"/><text x="636.00" y="1358.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (2 samples, 0.59%)</title><rect x="633" y="1364" width="7" height="15" fill="rgb(215,28,13)"/><text x="636.00" y="1374.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.29%)</title><rect x="640" y="484" width="3" height="15" fill="rgb(214,42,24)"/><text x="643.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="640" y="500" width="3" height="15" fill="rgb(232,50,1)"/><text x="643.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="640" y="516" width="3" height="15" fill="rgb(207,5,3)"/><text x="643.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="640" y="532" width="3" height="15" fill="rgb(249,1,45)"/><text x="643.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="640" y="548" width="3" height="15" fill="rgb(226,217,2)"/><text x="643.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="640" y="564" width="3" height="15" fill="rgb(241,227,46)"/><text x="643.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.29%)</title><rect x="640" y="580" width="3" height="15" fill="rgb(251,139,22)"/><text x="643.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="640" y="596" width="3" height="15" fill="rgb(250,125,43)"/><text x="643.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="640" y="612" width="3" height="15" fill="rgb(221,94,7)"/><text x="643.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="640" y="628" width="3" height="15" fill="rgb(235,1,16)"/><text x="643.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="640" y="644" width="3" height="15" fill="rgb(224,139,54)"/><text x="643.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="640" y="660" width="3" height="15" fill="rgb(238,112,21)"/><text x="643.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.29%)</title><rect x="640" y="676" width="3" height="15" fill="rgb(249,212,10)"/><text x="643.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="640" y="692" width="3" height="15" fill="rgb(249,165,20)"/><text x="643.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="640" y="708" width="3" height="15" fill="rgb(251,71,5)"/><text x="643.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="640" y="724" width="3" height="15" fill="rgb(234,164,13)"/><text x="643.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="640" y="740" width="3" height="15" fill="rgb(240,192,47)"/><text x="643.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="640" y="756" width="3" height="15" fill="rgb(207,211,8)"/><text x="643.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.29%)</title><rect x="640" y="772" width="3" height="15" fill="rgb(242,176,16)"/><text x="643.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="640" y="788" width="3" height="15" fill="rgb(252,108,23)"/><text x="643.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="640" y="804" width="3" height="15" fill="rgb(217,134,12)"/><text x="643.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="640" y="820" width="3" height="15" fill="rgb(238,13,6)"/><text x="643.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="640" y="836" width="3" height="15" fill="rgb(234,149,33)"/><text x="643.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="640" y="852" width="3" height="15" fill="rgb(226,18,25)"/><text x="643.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="640" y="868" width="3" height="15" fill="rgb(243,6,14)"/><text x="643.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="640" y="884" width="3" height="15" fill="rgb(237,224,50)"/><text x="643.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.29%)</title><rect x="640" y="900" width="3" height="15" fill="rgb(236,135,14)"/><text x="643.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="640" y="916" width="3" height="15" fill="rgb(226,199,2)"/><text x="643.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="640" y="932" width="3" height="15" fill="rgb(214,172,4)"/><text x="643.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="640" y="948" width="3" height="15" fill="rgb(253,109,11)"/><text x="643.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="640" y="964" width="3" height="15" fill="rgb(208,102,47)"/><text x="643.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="640" y="980" width="3" height="15" fill="rgb(227,136,23)"/><text x="643.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.29%)</title><rect x="640" y="996" width="3" height="15" fill="rgb(241,85,20)"/><text x="643.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="640" y="1012" width="3" height="15" fill="rgb(213,117,31)"/><text x="643.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="640" y="1028" width="3" height="15" fill="rgb(238,90,36)"/><text x="643.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="640" y="1044" width="3" height="15" fill="rgb(223,16,12)"/><text x="643.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="640" y="1060" width="3" height="15" fill="rgb(233,86,52)"/><text x="643.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="640" y="1076" width="3" height="15" fill="rgb(247,119,53)"/><text x="643.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:56) (1 samples, 0.29%)</title><rect x="640" y="1092" width="3" height="15" fill="rgb(254,61,3)"/><text x="643.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="640" y="1108" width="3" height="15" fill="rgb(236,71,7)"/><text x="643.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="640" y="1124" width="3" height="15" fill="rgb(220,80,18)"/><text x="643.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="640" y="1140" width="3" height="15" fill="rgb(235,60,18)"/><text x="643.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="640" y="1156" width="3" height="15" fill="rgb(212,129,8)"/><text x="643.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="640" y="1172" width="3" height="15" fill="rgb(241,8,10)"/><text x="643.00" y="1182.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="640" y="1188" width="3" height="15" fill="rgb(247,101,25)"/><text x="643.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.29%)</title><rect x="643" y="580" width="3" height="15" fill="rgb(241,202,21)"/><text x="646.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="643" y="596" width="3" height="15" fill="rgb(211,127,21)"/><text x="646.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="643" y="612" width="3" height="15" fill="rgb(227,117,37)"/><text x="646.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="643" y="628" width="3" height="15" fill="rgb(253,132,25)"/><text x="646.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="643" y="644" width="3" height="15" fill="rgb(246,204,41)"/><text x="646.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="643" y="660" width="3" height="15" fill="rgb(241,102,21)"/><text x="646.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.29%)</title><rect x="643" y="676" width="3" height="15" fill="rgb(226,34,15)"/><text x="646.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="643" y="692" width="3" height="15" fill="rgb(242,115,53)"/><text x="646.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="643" y="708" width="3" height="15" fill="rgb(234,149,15)"/><text x="646.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="643" y="724" width="3" height="15" fill="rgb(205,219,3)"/><text x="646.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="643" y="740" width="3" height="15" fill="rgb(218,24,3)"/><text x="646.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="643" y="756" width="3" height="15" fill="rgb(237,214,5)"/><text x="646.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.29%)</title><rect x="643" y="772" width="3" height="15" fill="rgb(248,21,31)"/><text x="646.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.29%)</title><rect x="643" y="788" width="3" height="15" fill="rgb(245,225,25)"/><text x="646.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.29%)</title><rect x="643" y="804" width="3" height="15" fill="rgb(239,110,10)"/><text x="646.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.29%)</title><rect x="643" y="820" width="3" height="15" fill="rgb(227,118,18)"/><text x="646.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.29%)</title><rect x="643" y="836" width="3" height="15" fill="rgb(218,27,37)"/><text x="646.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.29%)</title><rect x="643" y="852" width="3" height="15" fill="rgb(217,195,39)"/><text x="646.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.29%)</title><rect x="643" y="868" width="3" height="15" fill="rgb(213,214,26)"/><text x="646.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.29%)</title><rect x="643" y="884" width="3" height="15" fill="rgb(253,22,22)"/><text x="646.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:477) (1 samples, 0.29%)</title><rect x="643" y="900" width="3" height="15" fill="rgb(249,88,36)"/><text x="646.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:13) (1 samples, 0.29%)</title><rect x="646" y="1284" width="4" height="15" fill="rgb(205,29,42)"/><text x="649.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="646" y="1300" width="4" height="15" fill="rgb(236,118,33)"/><text x="649.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="646" y="1316" width="4" height="15" fill="rgb(220,171,19)"/><text x="649.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="646" y="1332" width="4" height="15" fill="rgb(206,99,22)"/><text x="649.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="646" y="1348" width="4" height="15" fill="rgb(219,181,11)"/><text x="649.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="646" y="1364" width="4" height="15" fill="rgb(212,2,31)"/><text x="649.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="646" y="1380" width="4" height="15" fill="rgb(218,101,11)"/><text x="649.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="646" y="1396" width="4" height="15" fill="rgb(245,228,2)"/><text x="649.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="646" y="1412" width="4" height="15" fill="rgb(223,82,9)"/><text x="649.00" y="1422.50"></text></g><g><title>&lt;module&gt; (xml/sax/__init__.py:22) (1 samples, 0.29%)</title><rect x="646" y="1428" width="4" height="15" fill="rgb(223,25,15)"/><text x="649.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="646" y="1444" width="4" height="15" fill="rgb(244,112,13)"/><text x="649.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="646" y="1460" width="4" height="15" fill="rgb(252,54,51)"/><text x="649.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="646" y="1476" width="4" height="15" fill="rgb(251,192,54)"/><text x="649.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="646" y="1492" width="4" height="15" fill="rgb(220,215,8)"/><text x="649.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.29%)</title><rect x="646" y="1508" width="4" height="15" fill="rgb(205,7,51)"/><text x="649.00" y="1518.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.29%)</title><rect x="646" y="1524" width="4" height="15" fill="rgb(224,18,4)"/><text x="649.00" y="1534.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="646" y="1540" width="4" height="15" fill="rgb(209,166,40)"/><text x="649.00" y="1550.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:4) (20 samples, 5.90%)</title><rect x="584" y="52" width="69" height="15" fill="rgb(212,142,14)"/><text x="587.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 5.90%)</title><rect x="584" y="68" width="69" height="15" fill="rgb(237,53,54)"/><text x="587.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 5.90%)</title><rect x="584" y="84" width="69" height="15" fill="rgb(249,210,4)"/><text x="587.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 5.90%)</title><rect x="584" y="100" width="69" height="15" fill="rgb(214,139,29)"/><text x="587.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 5.90%)</title><rect x="584" y="116" width="69" height="15" fill="rgb(235,138,2)"/><text x="587.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 5.90%)</title><rect x="584" y="132" width="69" height="15" fill="rgb(209,129,34)"/><text x="587.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:8) (4 samples, 1.18%)</title><rect x="640" y="148" width="13" height="15" fill="rgb(214,74,34)"/><text x="643.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="640" y="164" width="13" height="15" fill="rgb(212,37,23)"/><text x="643.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="640" y="180" width="13" height="15" fill="rgb(237,147,35)"/><text x="643.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="640" y="196" width="13" height="15" fill="rgb(232,195,21)"/><text x="643.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="640" y="212" width="13" height="15" fill="rgb(238,35,12)"/><text x="643.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="640" y="228" width="13" height="15" fill="rgb(218,138,7)"/><text x="643.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.18%)</title><rect x="640" y="244" width="13" height="15" fill="rgb(248,31,40)"/><text x="643.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="640" y="260" width="13" height="15" fill="rgb(225,161,35)"/><text x="643.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="640" y="276" width="13" height="15" fill="rgb(223,181,7)"/><text x="643.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="640" y="292" width="13" height="15" fill="rgb(245,202,46)"/><text x="643.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="640" y="308" width="13" height="15" fill="rgb(223,176,22)"/><text x="643.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="640" y="324" width="13" height="15" fill="rgb(218,201,53)"/><text x="643.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.18%)</title><rect x="640" y="340" width="13" height="15" fill="rgb(233,55,2)"/><text x="643.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="640" y="356" width="13" height="15" fill="rgb(252,148,54)"/><text x="643.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.18%)</title><rect x="640" y="372" width="13" height="15" fill="rgb(221,175,15)"/><text x="643.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="640" y="388" width="13" height="15" fill="rgb(219,130,26)"/><text x="643.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="640" y="404" width="13" height="15" fill="rgb(231,202,17)"/><text x="643.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="640" y="420" width="13" height="15" fill="rgb(225,91,24)"/><text x="643.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="640" y="436" width="13" height="15" fill="rgb(242,168,2)"/><text x="643.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="640" y="452" width="13" height="15" fill="rgb(253,146,47)"/><text x="643.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="640" y="468" width="13" height="15" fill="rgb(218,157,29)"/><text x="643.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (3 samples, 0.88%)</title><rect x="643" y="484" width="10" height="15" fill="rgb(246,109,22)"/><text x="646.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.88%)</title><rect x="643" y="500" width="10" height="15" fill="rgb(217,41,35)"/><text x="646.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.88%)</title><rect x="643" y="516" width="10" height="15" fill="rgb(243,91,36)"/><text x="646.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.88%)</title><rect x="643" y="532" width="10" height="15" fill="rgb(252,210,15)"/><text x="646.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.88%)</title><rect x="643" y="548" width="10" height="15" fill="rgb(238,22,25)"/><text x="646.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.88%)</title><rect x="643" y="564" width="10" height="15" fill="rgb(225,144,19)"/><text x="646.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.59%)</title><rect x="646" y="580" width="7" height="15" fill="rgb(223,197,9)"/><text x="649.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="596" width="7" height="15" fill="rgb(238,55,44)"/><text x="649.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.59%)</title><rect x="646" y="612" width="7" height="15" fill="rgb(227,23,4)"/><text x="649.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="628" width="7" height="15" fill="rgb(208,183,7)"/><text x="649.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="644" width="7" height="15" fill="rgb(207,48,35)"/><text x="649.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="646" y="660" width="7" height="15" fill="rgb(217,120,13)"/><text x="649.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="646" y="676" width="7" height="15" fill="rgb(215,69,52)"/><text x="649.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="646" y="692" width="7" height="15" fill="rgb(228,82,24)"/><text x="649.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="708" width="7" height="15" fill="rgb(227,208,53)"/><text x="649.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.59%)</title><rect x="646" y="724" width="7" height="15" fill="rgb(252,8,46)"/><text x="649.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="740" width="7" height="15" fill="rgb(250,183,24)"/><text x="649.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="646" y="756" width="7" height="15" fill="rgb(232,8,39)"/><text x="649.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="646" y="772" width="7" height="15" fill="rgb(252,71,51)"/><text x="649.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="646" y="788" width="7" height="15" fill="rgb(253,225,52)"/><text x="649.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="804" width="7" height="15" fill="rgb(225,177,46)"/><text x="649.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.59%)</title><rect x="646" y="820" width="7" height="15" fill="rgb(235,131,46)"/><text x="649.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="836" width="7" height="15" fill="rgb(216,216,3)"/><text x="649.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="646" y="852" width="7" height="15" fill="rgb(251,46,38)"/><text x="649.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="646" y="868" width="7" height="15" fill="rgb(254,118,4)"/><text x="649.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="646" y="884" width="7" height="15" fill="rgb(246,186,34)"/><text x="649.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="900" width="7" height="15" fill="rgb(254,113,12)"/><text x="649.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.59%)</title><rect x="646" y="916" width="7" height="15" fill="rgb(213,138,2)"/><text x="649.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="932" width="7" height="15" fill="rgb(254,141,6)"/><text x="649.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.59%)</title><rect x="646" y="948" width="7" height="15" fill="rgb(250,18,9)"/><text x="649.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="964" width="7" height="15" fill="rgb(244,105,0)"/><text x="649.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="980" width="7" height="15" fill="rgb(226,229,28)"/><text x="649.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="646" y="996" width="7" height="15" fill="rgb(254,117,48)"/><text x="649.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="646" y="1012" width="7" height="15" fill="rgb(208,146,53)"/><text x="649.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="646" y="1028" width="7" height="15" fill="rgb(228,144,15)"/><text x="649.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="1044" width="7" height="15" fill="rgb(230,31,17)"/><text x="649.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (2 samples, 0.59%)</title><rect x="646" y="1060" width="7" height="15" fill="rgb(229,63,35)"/><text x="649.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="1076" width="7" height="15" fill="rgb(237,75,26)"/><text x="649.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="646" y="1092" width="7" height="15" fill="rgb(225,134,32)"/><text x="649.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="646" y="1108" width="7" height="15" fill="rgb(215,67,28)"/><text x="649.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="646" y="1124" width="7" height="15" fill="rgb(206,80,8)"/><text x="649.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="1140" width="7" height="15" fill="rgb(214,155,3)"/><text x="649.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (2 samples, 0.59%)</title><rect x="646" y="1156" width="7" height="15" fill="rgb(235,22,2)"/><text x="649.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.59%)</title><rect x="646" y="1172" width="7" height="15" fill="rgb(232,77,1)"/><text x="649.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="1188" width="7" height="15" fill="rgb(222,94,28)"/><text x="649.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="646" y="1204" width="7" height="15" fill="rgb(210,48,50)"/><text x="649.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="646" y="1220" width="7" height="15" fill="rgb(253,194,33)"/><text x="649.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="646" y="1236" width="7" height="15" fill="rgb(231,95,40)"/><text x="649.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="646" y="1252" width="7" height="15" fill="rgb(237,152,16)"/><text x="649.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="646" y="1268" width="7" height="15" fill="rgb(233,109,5)"/><text x="649.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:292) (1 samples, 0.29%)</title><rect x="650" y="1284" width="3" height="15" fill="rgb(247,14,0)"/><text x="653.00" y="1294.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.29%)</title><rect x="650" y="1300" width="3" height="15" fill="rgb(211,23,32)"/><text x="653.00" y="1310.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.29%)</title><rect x="650" y="1316" width="3" height="15" fill="rgb(225,209,39)"/><text x="653.00" y="1326.50"></text></g><g><title>compile (sre_compile.py:776) (1 samples, 0.29%)</title><rect x="650" y="1332" width="3" height="15" fill="rgb(213,37,20)"/><text x="653.00" y="1342.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.29%)</title><rect x="653" y="196" width="4" height="15" fill="rgb(219,98,48)"/><text x="656.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.29%)</title><rect x="653" y="212" width="4" height="15" fill="rgb(240,127,17)"/><text x="656.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.29%)</title><rect x="653" y="228" width="4" height="15" fill="rgb(235,103,30)"/><text x="656.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (1 samples, 0.29%)</title><rect x="653" y="244" width="4" height="15" fill="rgb(215,82,24)"/><text x="656.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="653" y="260" width="4" height="15" fill="rgb(234,115,42)"/><text x="656.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="653" y="276" width="4" height="15" fill="rgb(253,22,0)"/><text x="656.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.29%)</title><rect x="653" y="292" width="4" height="15" fill="rgb(239,18,4)"/><text x="656.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.29%)</title><rect x="653" y="308" width="4" height="15" fill="rgb(209,124,24)"/><text x="656.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:18) (2 samples, 0.59%)</title><rect x="653" y="100" width="7" height="15" fill="rgb(207,63,51)"/><text x="656.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.59%)</title><rect x="653" y="116" width="7" height="15" fill="rgb(235,78,41)"/><text x="656.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.59%)</title><rect x="653" y="132" width="7" height="15" fill="rgb(224,20,45)"/><text x="656.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.59%)</title><rect x="653" y="148" width="7" height="15" fill="rgb(247,160,23)"/><text x="656.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.59%)</title><rect x="653" y="164" width="7" height="15" fill="rgb(213,171,34)"/><text x="656.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.59%)</title><rect x="653" y="180" width="7" height="15" fill="rgb(208,180,22)"/><text x="656.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.29%)</title><rect x="657" y="196" width="3" height="15" fill="rgb(227,218,26)"/><text x="660.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.29%)</title><rect x="657" y="212" width="3" height="15" fill="rgb(234,122,15)"/><text x="660.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (1 samples, 0.29%)</title><rect x="657" y="228" width="3" height="15" fill="rgb(228,9,2)"/><text x="660.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="657" y="244" width="3" height="15" fill="rgb(250,227,29)"/><text x="660.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="657" y="260" width="3" height="15" fill="rgb(207,126,1)"/><text x="660.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.29%)</title><rect x="657" y="276" width="3" height="15" fill="rgb(215,109,44)"/><text x="660.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.29%)</title><rect x="657" y="292" width="3" height="15" fill="rgb(215,14,15)"/><text x="660.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.29%)</title><rect x="657" y="308" width="3" height="15" fill="rgb(212,163,44)"/><text x="660.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.29%)</title><rect x="657" y="324" width="3" height="15" fill="rgb(233,142,45)"/><text x="660.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="657" y="340" width="3" height="15" fill="rgb(211,73,36)"/><text x="660.00" y="350.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.29%)</title><rect x="671" y="164" width="3" height="15" fill="rgb(223,176,44)"/><text x="674.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.29%)</title><rect x="681" y="180" width="4" height="15" fill="rgb(231,119,33)"/><text x="684.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.18%)</title><rect x="685" y="180" width="14" height="15" fill="rgb(212,207,37)"/><text x="688.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.29%)</title><rect x="695" y="196" width="4" height="15" fill="rgb(208,203,51)"/><text x="698.00" y="206.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.29%)</title><rect x="702" y="244" width="4" height="15" fill="rgb(245,70,1)"/><text x="705.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.29%)</title><rect x="702" y="260" width="4" height="15" fill="rgb(219,39,17)"/><text x="705.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.29%)</title><rect x="702" y="276" width="4" height="15" fill="rgb(245,128,38)"/><text x="705.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.29%)</title><rect x="702" y="292" width="4" height="15" fill="rgb(233,122,12)"/><text x="705.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.29%)</title><rect x="702" y="308" width="4" height="15" fill="rgb(208,167,25)"/><text x="705.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.29%)</title><rect x="702" y="324" width="4" height="15" fill="rgb(243,114,24)"/><text x="705.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.29%)</title><rect x="702" y="340" width="4" height="15" fill="rgb(248,139,28)"/><text x="705.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.29%)</title><rect x="702" y="356" width="4" height="15" fill="rgb(252,13,27)"/><text x="705.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="702" y="372" width="4" height="15" fill="rgb(211,113,13)"/><text x="705.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.29%)</title><rect x="706" y="276" width="3" height="15" fill="rgb(209,25,31)"/><text x="709.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.29%)</title><rect x="706" y="292" width="3" height="15" fill="rgb(225,143,15)"/><text x="709.00" y="302.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.29%)</title><rect x="706" y="308" width="3" height="15" fill="rgb(245,164,23)"/><text x="709.00" y="318.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:476) (1 samples, 0.29%)</title><rect x="706" y="324" width="3" height="15" fill="rgb(222,9,53)"/><text x="709.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.88%)</title><rect x="702" y="212" width="11" height="15" fill="rgb(219,112,29)"/><text x="705.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.88%)</title><rect x="702" y="228" width="11" height="15" fill="rgb(240,20,11)"/><text x="705.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.59%)</title><rect x="706" y="244" width="7" height="15" fill="rgb(232,31,37)"/><text x="709.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.59%)</title><rect x="706" y="260" width="7" height="15" fill="rgb(233,98,31)"/><text x="709.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.29%)</title><rect x="709" y="276" width="4" height="15" fill="rgb(241,177,37)"/><text x="712.00" y="286.50"></text></g><g><title>0x7fc2da6f4d94 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="709" y="292" width="4" height="15" fill="rgb(243,204,39)"/><text x="712.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 1.18%)</title><rect x="702" y="196" width="14" height="15" fill="rgb(244,57,52)"/><text x="705.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.29%)</title><rect x="713" y="212" width="3" height="15" fill="rgb(254,21,49)"/><text x="716.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.29%)</title><rect x="713" y="228" width="3" height="15" fill="rgb(213,227,20)"/><text x="716.00" y="238.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.29%)</title><rect x="727" y="260" width="3" height="15" fill="rgb(253,110,25)"/><text x="730.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.29%)</title><rect x="727" y="276" width="3" height="15" fill="rgb(246,137,6)"/><text x="730.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.29%)</title><rect x="727" y="292" width="3" height="15" fill="rgb(245,132,8)"/><text x="730.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.29%)</title><rect x="727" y="308" width="3" height="15" fill="rgb(221,158,50)"/><text x="730.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.29%)</title><rect x="727" y="324" width="3" height="15" fill="rgb(250,2,1)"/><text x="730.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.29%)</title><rect x="730" y="324" width="4" height="15" fill="rgb(230,81,41)"/><text x="733.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.29%)</title><rect x="730" y="340" width="4" height="15" fill="rgb(236,121,16)"/><text x="733.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.29%)</title><rect x="730" y="356" width="4" height="15" fill="rgb(220,143,43)"/><text x="733.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.29%)</title><rect x="730" y="372" width="4" height="15" fill="rgb(234,74,43)"/><text x="733.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.29%)</title><rect x="734" y="356" width="3" height="15" fill="rgb(205,98,9)"/><text x="737.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.29%)</title><rect x="734" y="372" width="3" height="15" fill="rgb(253,224,43)"/><text x="737.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.29%)</title><rect x="734" y="388" width="3" height="15" fill="rgb(212,141,31)"/><text x="737.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="734" y="404" width="3" height="15" fill="rgb(245,183,20)"/><text x="737.00" y="414.50"></text></g><g><title>0x7fc2da6f4d50 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="734" y="420" width="3" height="15" fill="rgb(241,226,51)"/><text x="737.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.29%)</title><rect x="737" y="356" width="3" height="15" fill="rgb(218,214,24)"/><text x="740.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="737" y="372" width="3" height="15" fill="rgb(240,37,46)"/><text x="740.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:230) (1 samples, 0.29%)</title><rect x="737" y="388" width="3" height="15" fill="rgb(236,18,2)"/><text x="740.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.29%)</title><rect x="737" y="404" width="3" height="15" fill="rgb(222,88,34)"/><text x="740.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (2 samples, 0.59%)</title><rect x="740" y="372" width="7" height="15" fill="rgb(219,109,30)"/><text x="743.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.29%)</title><rect x="747" y="372" width="4" height="15" fill="rgb(248,111,41)"/><text x="750.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.59%)</title><rect x="751" y="388" width="7" height="15" fill="rgb(253,153,51)"/><text x="754.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.29%)</title><rect x="758" y="388" width="3" height="15" fill="rgb(224,48,40)"/><text x="761.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.29%)</title><rect x="768" y="404" width="4" height="15" fill="rgb(217,20,5)"/><text x="771.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 1.47%)</title><rect x="761" y="388" width="18" height="15" fill="rgb(205,157,9)"/><text x="764.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.59%)</title><rect x="772" y="404" width="7" height="15" fill="rgb(210,226,4)"/><text x="775.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.29%)</title><rect x="779" y="388" width="3" height="15" fill="rgb(229,156,32)"/><text x="782.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 3.83%)</title><rect x="740" y="356" width="46" height="15" fill="rgb(207,21,5)"/><text x="743.00" y="366.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 2.95%)</title><rect x="751" y="372" width="35" height="15" fill="rgb(243,36,19)"/><text x="754.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.29%)</title><rect x="782" y="388" width="4" height="15" fill="rgb(253,185,15)"/><text x="785.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (17 samples, 5.01%)</title><rect x="730" y="260" width="59" height="15" fill="rgb(236,68,42)"/><text x="733.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 5.01%)</title><rect x="730" y="276" width="59" height="15" fill="rgb(214,123,52)"/><text x="733.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 5.01%)</title><rect x="730" y="292" width="59" height="15" fill="rgb(234,154,30)"/><text x="733.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 5.01%)</title><rect x="730" y="308" width="59" height="15" fill="rgb(240,6,42)"/><text x="733.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 4.72%)</title><rect x="734" y="324" width="55" height="15" fill="rgb(232,146,49)"/><text x="737.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (16 samples, 4.72%)</title><rect x="734" y="340" width="55" height="15" fill="rgb(206,224,33)"/><text x="737.00" y="350.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.29%)</title><rect x="786" y="356" width="3" height="15" fill="rgb(240,104,24)"/><text x="789.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.29%)</title><rect x="786" y="372" width="3" height="15" fill="rgb(214,58,29)"/><text x="789.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.29%)</title><rect x="789" y="276" width="4" height="15" fill="rgb(226,127,35)"/><text x="792.00" y="286.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (22 samples, 6.49%)</title><rect x="720" y="244" width="76" height="15" fill="rgb(216,199,20)"/><text x="723.00" y="254.50">norm_l1 ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.59%)</title><rect x="789" y="260" width="7" height="15" fill="rgb(215,14,46)"/><text x="792.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.29%)</title><rect x="793" y="276" width="3" height="15" fill="rgb(247,219,51)"/><text x="796.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.29%)</title><rect x="793" y="292" width="3" height="15" fill="rgb(251,56,44)"/><text x="796.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="796" y="260" width="4" height="15" fill="rgb(230,126,53)"/><text x="799.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="796" y="276" width="4" height="15" fill="rgb(242,140,49)"/><text x="799.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.29%)</title><rect x="796" y="292" width="4" height="15" fill="rgb(233,95,10)"/><text x="799.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.29%)</title><rect x="800" y="308" width="3" height="15" fill="rgb(228,198,6)"/><text x="803.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.29%)</title><rect x="800" y="324" width="3" height="15" fill="rgb(228,57,47)"/><text x="803.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1176) (1 samples, 0.29%)</title><rect x="800" y="340" width="3" height="15" fill="rgb(244,100,8)"/><text x="803.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.29%)</title><rect x="803" y="372" width="4" height="15" fill="rgb(246,102,2)"/><text x="806.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.88%)</title><rect x="807" y="372" width="10" height="15" fill="rgb(208,75,51)"/><text x="810.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.47%)</title><rect x="803" y="340" width="18" height="15" fill="rgb(213,70,43)"/><text x="806.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 1.47%)</title><rect x="803" y="356" width="18" height="15" fill="rgb(211,75,30)"/><text x="806.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.29%)</title><rect x="817" y="372" width="4" height="15" fill="rgb(214,25,52)"/><text x="820.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 1.77%)</title><rect x="803" y="308" width="21" height="15" fill="rgb(245,81,53)"/><text x="806.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.77%)</title><rect x="803" y="324" width="21" height="15" fill="rgb(250,83,2)"/><text x="806.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.29%)</title><rect x="821" y="340" width="3" height="15" fill="rgb(234,11,22)"/><text x="824.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.29%)</title><rect x="824" y="356" width="3" height="15" fill="rgb(213,131,3)"/><text x="827.00" y="366.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.29%)</title><rect x="824" y="372" width="3" height="15" fill="rgb(239,207,51)"/><text x="827.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 3.54%)</title><rect x="800" y="276" width="41" height="15" fill="rgb(230,117,17)"/><text x="803.00" y="286.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 3.54%)</title><rect x="800" y="292" width="41" height="15" fill="rgb(249,58,25)"/><text x="803.00" y="302.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 1.47%)</title><rect x="824" y="308" width="17" height="15" fill="rgb(248,63,42)"/><text x="827.00" y="318.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 1.47%)</title><rect x="824" y="324" width="17" height="15" fill="rgb(212,4,16)"/><text x="827.00" y="334.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 1.47%)</title><rect x="824" y="340" width="17" height="15" fill="rgb(249,113,8)"/><text x="827.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 1.18%)</title><rect x="827" y="356" width="14" height="15" fill="rgb(243,224,1)"/><text x="830.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 1.18%)</title><rect x="827" y="372" width="14" height="15" fill="rgb(236,178,1)"/><text x="830.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (37 samples, 10.91%)</title><rect x="716" y="196" width="129" height="15" fill="rgb(252,93,24)"/><text x="719.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 10.62%)</title><rect x="720" y="212" width="125" height="15" fill="rgb(207,97,43)"/><text x="723.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (36 samples, 10.62%)</title><rect x="720" y="228" width="125" height="15" fill="rgb(251,127,44)"/><text x="723.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (14 samples, 4.13%)</title><rect x="796" y="244" width="49" height="15" fill="rgb(210,218,39)"/><text x="799.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 3.83%)</title><rect x="800" y="260" width="45" height="15" fill="rgb(218,94,27)"/><text x="803.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.29%)</title><rect x="841" y="276" width="4" height="15" fill="rgb(229,184,25)"/><text x="844.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.29%)</title><rect x="845" y="196" width="3" height="15" fill="rgb(241,12,21)"/><text x="848.00" y="206.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:931) (1 samples, 0.29%)</title><rect x="848" y="308" width="4" height="15" fill="rgb(222,177,24)"/><text x="851.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.29%)</title><rect x="848" y="324" width="4" height="15" fill="rgb(252,179,20)"/><text x="851.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:122) (1 samples, 0.29%)</title><rect x="848" y="340" width="4" height="15" fill="rgb(221,41,2)"/><text x="851.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (3 samples, 0.88%)</title><rect x="852" y="324" width="10" height="15" fill="rgb(237,7,18)"/><text x="855.00" y="334.50"></text></g><g><title>0x7fc2da6f5103 (libc-2.29.so) (3 samples, 0.88%)</title><rect x="852" y="340" width="10" height="15" fill="rgb(247,50,22)"/><text x="855.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:635) (1 samples, 0.29%)</title><rect x="862" y="324" width="4" height="15" fill="rgb(246,37,6)"/><text x="865.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.29%)</title><rect x="862" y="340" width="4" height="15" fill="rgb(214,199,52)"/><text x="865.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="862" y="356" width="4" height="15" fill="rgb(231,26,46)"/><text x="865.00" y="366.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.88%)</title><rect x="866" y="372" width="10" height="15" fill="rgb(233,188,16)"/><text x="869.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="873" y="388" width="3" height="15" fill="rgb(245,89,49)"/><text x="876.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 5.01%)</title><rect x="848" y="276" width="60" height="15" fill="rgb(242,152,32)"/><text x="851.00" y="286.50">array_..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (17 samples, 5.01%)</title><rect x="848" y="292" width="60" height="15" fill="rgb(220,224,28)"/><text x="851.00" y="302.50">array_..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (16 samples, 4.72%)</title><rect x="852" y="308" width="56" height="15" fill="rgb(253,8,40)"/><text x="855.00" y="318.50">PyArr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (12 samples, 3.54%)</title><rect x="866" y="324" width="42" height="15" fill="rgb(245,147,51)"/><text x="869.00" y="334.50">cbl..</text></g><g><title>gemm (cblasfuncs.c:36) (12 samples, 3.54%)</title><rect x="866" y="340" width="42" height="15" fill="rgb(218,208,38)"/><text x="869.00" y="350.50">gem..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.54%)</title><rect x="866" y="356" width="42" height="15" fill="rgb(229,175,30)"/><text x="869.00" y="366.50">cbl..</text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.65%)</title><rect x="876" y="372" width="32" height="15" fill="rgb(235,9,42)"/><text x="879.00" y="382.50">dg..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.65%)</title><rect x="876" y="388" width="32" height="15" fill="rgb(226,53,51)"/><text x="879.00" y="398.50">dg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.29%)</title><rect x="908" y="276" width="3" height="15" fill="rgb(238,43,35)"/><text x="911.00" y="286.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="911" y="276" width="4" height="15" fill="rgb(235,199,33)"/><text x="914.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (42 samples, 12.39%)</title><rect x="848" y="228" width="147" height="15" fill="rgb(236,187,2)"/><text x="851.00" y="238.50">_run (mlprodict/on..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (42 samples, 12.39%)</title><rect x="848" y="244" width="147" height="15" fill="rgb(210,74,10)"/><text x="851.00" y="254.50">numpy_dot_inplace ..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (42 samples, 12.39%)</title><rect x="848" y="260" width="147" height="15" fill="rgb(228,168,40)"/><text x="851.00" y="270.50">dot (&lt;__array_func..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 6.78%)</title><rect x="915" y="276" width="80" height="15" fill="rgb(244,14,22)"/><text x="918.00" y="286.50">dgemm_ker..</text></g><g><title>0x7fc2da6f5124 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="995" y="244" width="3" height="15" fill="rgb(233,36,31)"/><text x="998.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:206) (1 samples, 0.29%)</title><rect x="998" y="308" width="4" height="15" fill="rgb(219,59,3)"/><text x="1001.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.29%)</title><rect x="1002" y="308" width="3" height="15" fill="rgb(240,102,11)"/><text x="1005.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1560) (1 samples, 0.29%)</title><rect x="1002" y="324" width="3" height="15" fill="rgb(231,157,46)"/><text x="1005.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.88%)</title><rect x="998" y="292" width="10" height="15" fill="rgb(213,156,10)"/><text x="1001.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.29%)</title><rect x="1005" y="308" width="3" height="15" fill="rgb(212,116,2)"/><text x="1008.00" y="318.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2035) (1 samples, 0.29%)</title><rect x="1005" y="324" width="3" height="15" fill="rgb(247,35,39)"/><text x="1008.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.29%)</title><rect x="1008" y="308" width="4" height="15" fill="rgb(247,96,12)"/><text x="1011.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.29%)</title><rect x="1008" y="324" width="4" height="15" fill="rgb(236,209,4)"/><text x="1011.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1008" y="340" width="4" height="15" fill="rgb(231,124,6)"/><text x="1011.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.29%)</title><rect x="1012" y="340" width="3" height="15" fill="rgb(205,39,18)"/><text x="1015.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.29%)</title><rect x="1015" y="340" width="4" height="15" fill="rgb(213,69,36)"/><text x="1018.00" y="350.50"></text></g><g><title>0x7fc2da6f4d67 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1015" y="356" width="4" height="15" fill="rgb(226,2,53)"/><text x="1018.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.18%)</title><rect x="1008" y="292" width="14" height="15" fill="rgb(234,54,27)"/><text x="1011.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.88%)</title><rect x="1012" y="308" width="10" height="15" fill="rgb(210,214,13)"/><text x="1015.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.88%)</title><rect x="1012" y="324" width="10" height="15" fill="rgb(232,137,42)"/><text x="1015.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:996) (1 samples, 0.29%)</title><rect x="1019" y="340" width="3" height="15" fill="rgb(218,224,50)"/><text x="1022.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.29%)</title><rect x="1019" y="356" width="3" height="15" fill="rgb(236,179,9)"/><text x="1022.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.36%)</title><rect x="998" y="276" width="28" height="15" fill="rgb(231,14,5)"/><text x="1001.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.29%)</title><rect x="1022" y="292" width="4" height="15" fill="rgb(226,70,1)"/><text x="1025.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.29%)</title><rect x="1022" y="308" width="4" height="15" fill="rgb(215,111,14)"/><text x="1025.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.29%)</title><rect x="1022" y="324" width="4" height="15" fill="rgb(206,127,24)"/><text x="1025.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.29%)</title><rect x="1022" y="340" width="4" height="15" fill="rgb(207,121,41)"/><text x="1025.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.29%)</title><rect x="1022" y="356" width="4" height="15" fill="rgb(210,72,5)"/><text x="1025.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (10 samples, 2.95%)</title><rect x="995" y="228" width="34" height="15" fill="rgb(208,161,40)"/><text x="998.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.65%)</title><rect x="998" y="244" width="31" height="15" fill="rgb(240,129,0)"/><text x="1001.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 2.65%)</title><rect x="998" y="260" width="31" height="15" fill="rgb(228,214,18)"/><text x="1001.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1749) (1 samples, 0.29%)</title><rect x="1026" y="276" width="3" height="15" fill="rgb(205,117,3)"/><text x="1029.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="1033" y="244" width="3" height="15" fill="rgb(221,215,53)"/><text x="1036.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="1033" y="260" width="3" height="15" fill="rgb(236,99,53)"/><text x="1036.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.29%)</title><rect x="1033" y="276" width="3" height="15" fill="rgb(207,50,17)"/><text x="1036.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.29%)</title><rect x="1033" y="292" width="3" height="15" fill="rgb(211,192,51)"/><text x="1036.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="1033" y="308" width="3" height="15" fill="rgb(213,117,11)"/><text x="1036.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.29%)</title><rect x="1036" y="276" width="4" height="15" fill="rgb(218,19,43)"/><text x="1039.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.29%)</title><rect x="1036" y="292" width="4" height="15" fill="rgb(252,9,16)"/><text x="1039.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.29%)</title><rect x="1036" y="308" width="4" height="15" fill="rgb(205,186,11)"/><text x="1039.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.29%)</title><rect x="1036" y="324" width="4" height="15" fill="rgb(217,118,14)"/><text x="1039.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.29%)</title><rect x="1036" y="340" width="4" height="15" fill="rgb(226,112,7)"/><text x="1039.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.29%)</title><rect x="1036" y="356" width="4" height="15" fill="rgb(235,163,17)"/><text x="1039.00" y="366.50"></text></g><g><title>mul_64_64 (npy_extint128.h:96) (1 samples, 0.29%)</title><rect x="1036" y="372" width="4" height="15" fill="rgb(236,104,33)"/><text x="1039.00" y="382.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.29%)</title><rect x="1036" y="388" width="4" height="15" fill="rgb(236,98,31)"/><text x="1039.00" y="398.50"></text></g><g><title>0x7fc2bcab8fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1043" y="340" width="4" height="15" fill="rgb(219,218,43)"/><text x="1046.00" y="350.50"></text></g><g><title>0x7fc2da8a6bb4 (libm-2.29.so) (2 samples, 0.59%)</title><rect x="1057" y="356" width="7" height="15" fill="rgb(245,150,27)"/><text x="1060.00" y="366.50"></text></g><g><title>0x7fc2da8a6bd3 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1064" y="356" width="4" height="15" fill="rgb(226,80,35)"/><text x="1067.00" y="366.50"></text></g><g><title>0x7fc2da8a6c56 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1068" y="356" width="3" height="15" fill="rgb(210,219,37)"/><text x="1071.00" y="366.50"></text></g><g><title>0x7fc2bcafb265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.24%)</title><rect x="1040" y="324" width="38" height="15" fill="rgb(243,136,9)"/><text x="1043.00" y="334.50">0x7..</text></g><g><title>exp (libm-2.29.so) (9 samples, 2.65%)</title><rect x="1047" y="340" width="31" height="15" fill="rgb(251,142,54)"/><text x="1050.00" y="350.50">ex..</text></g><g><title>0x7fc2da8a6c7b (libm-2.29.so) (2 samples, 0.59%)</title><rect x="1071" y="356" width="7" height="15" fill="rgb(216,155,23)"/><text x="1074.00" y="366.50"></text></g><g><title>0x7fc2bcafb275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1078" y="324" width="4" height="15" fill="rgb(219,72,26)"/><text x="1081.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (29 samples, 8.55%)</title><rect x="1029" y="228" width="101" height="15" fill="rgb(251,190,27)"/><text x="1032.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (27 samples, 7.96%)</title><rect x="1036" y="244" width="94" height="15" fill="rgb(238,218,34)"/><text x="1039.00" y="254.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (27 samples, 7.96%)</title><rect x="1036" y="260" width="94" height="15" fill="rgb(244,132,18)"/><text x="1039.00" y="270.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (26 samples, 7.67%)</title><rect x="1040" y="276" width="90" height="15" fill="rgb(226,208,27)"/><text x="1043.00" y="286.50">execute_le..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (26 samples, 7.67%)</title><rect x="1040" y="292" width="90" height="15" fill="rgb(250,204,35)"/><text x="1043.00" y="302.50">trivial_tw..</text></g><g><title>0x7fc2bcada9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (26 samples, 7.67%)</title><rect x="1040" y="308" width="90" height="15" fill="rgb(217,173,13)"/><text x="1043.00" y="318.50">0x7fc2bcad..</text></g><g><title>0x7fc2bcafb279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.13%)</title><rect x="1082" y="324" width="48" height="15" fill="rgb(210,53,28)"/><text x="1085.00" y="334.50">0x7f..</text></g><g><title>0x7fc2da7b2151 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1137" y="292" width="4" height="15" fill="rgb(222,183,2)"/><text x="1140.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.29%)</title><rect x="1141" y="308" width="3" height="15" fill="rgb(240,61,49)"/><text x="1144.00" y="318.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3097) (1 samples, 0.29%)</title><rect x="1144" y="340" width="4" height="15" fill="rgb(229,179,14)"/><text x="1147.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 1.77%)</title><rect x="1130" y="228" width="21" height="15" fill="rgb(220,111,28)"/><text x="1133.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 1.47%)</title><rect x="1134" y="244" width="17" height="15" fill="rgb(249,161,32)"/><text x="1137.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.47%)</title><rect x="1134" y="260" width="17" height="15" fill="rgb(237,215,43)"/><text x="1137.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 1.47%)</title><rect x="1134" y="276" width="17" height="15" fill="rgb(208,67,33)"/><text x="1137.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.88%)</title><rect x="1141" y="292" width="10" height="15" fill="rgb(226,111,46)"/><text x="1144.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.59%)</title><rect x="1144" y="308" width="7" height="15" fill="rgb(254,162,1)"/><text x="1147.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.59%)</title><rect x="1144" y="324" width="7" height="15" fill="rgb(205,3,29)"/><text x="1147.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3109) (1 samples, 0.29%)</title><rect x="1148" y="340" width="3" height="15" fill="rgb(236,112,25)"/><text x="1151.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (88 samples, 25.96%)</title><rect x="848" y="196" width="307" height="15" fill="rgb(250,203,2)"/><text x="851.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (88 samples, 25.96%)</title><rect x="848" y="212" width="307" height="15" fill="rgb(227,111,30)"/><text x="851.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.29%)</title><rect x="1151" y="228" width="4" height="15" fill="rgb(220,209,15)"/><text x="1154.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (133 samples, 39.23%)</title><rect x="699" y="180" width="463" height="15" fill="rgb(241,137,33)"/><text x="702.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.59%)</title><rect x="1155" y="196" width="7" height="15" fill="rgb(219,103,27)"/><text x="1158.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.59%)</title><rect x="1162" y="180" width="7" height="15" fill="rgb(225,148,31)"/><text x="1165.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.59%)</title><rect x="1169" y="180" width="7" height="15" fill="rgb(218,132,31)"/><text x="1172.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (147 samples, 43.36%)</title><rect x="674" y="164" width="512" height="15" fill="rgb(219,214,17)"/><text x="677.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.88%)</title><rect x="1176" y="180" width="10" height="15" fill="rgb(224,184,3)"/><text x="1179.00" y="190.50"></text></g><g><title>all (339 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,161,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:45) (154 samples, 45.43%)</title><rect x="653" y="52" width="537" height="15" fill="rgb(240,15,39)"/><text x="656.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:44) (154 samples, 45.43%)</title><rect x="653" y="68" width="537" height="15" fill="rgb(214,145,34)"/><text x="656.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:29) (154 samples, 45.43%)</title><rect x="653" y="84" width="537" height="15" fill="rgb(251,192,52)"/><text x="656.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py:23) (152 samples, 44.84%)</title><rect x="660" y="100" width="530" height="15" fill="rgb(234,59,0)"/><text x="663.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (151 samples, 44.54%)</title><rect x="664" y="116" width="526" height="15" fill="rgb(234,76,34)"/><text x="667.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (150 samples, 44.25%)</title><rect x="667" y="132" width="523" height="15" fill="rgb(246,71,45)"/><text x="670.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (149 samples, 43.95%)</title><rect x="671" y="148" width="519" height="15" fill="rgb(237,97,3)"/><text x="674.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.29%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(248,101,50)"/><text x="1189.00" y="174.50"></text></g></g></svg>