<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1574" onload="init(evt)" viewBox="0 0 1200 1574" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1574" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1557.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1557.00"> </text><g id="frames"><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:28) (1 samples, 0.33%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(237,167,25)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.33%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(216,99,39)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.33%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(232,188,35)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.33%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(222,128,49)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(232,108,3)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(243,54,7)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(231,69,46)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(249,7,43)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(234,104,20)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.33%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(227,198,39)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(210,55,6)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(213,197,34)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(252,99,15)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(218,48,21)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(209,11,38)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:33) (1 samples, 0.33%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(221,164,23)"/><text x="13.00" y="334.50"></text></g><g><title>_load_lib (lightgbm/basic.py:28) (1 samples, 0.33%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(234,167,47)"/><text x="13.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py:434) (1 samples, 0.33%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(237,112,44)"/><text x="13.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py:356) (1 samples, 0.33%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(226,178,10)"/><text x="13.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c:1366) (1 samples, 0.33%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(241,76,20)"/><text x="13.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(244,178,20)"/><text x="13.00" y="414.50"></text></g><g><title>0x7fdd29d3e995 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(252,45,27)"/><text x="13.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(250,128,27)"/><text x="13.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(241,58,20)"/><text x="13.00" y="462.50"></text></g><g><title>0x7fdd29d3e258 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(253,161,12)"/><text x="13.00" y="478.50"></text></g><g><title>0x7fdd29d8bd7a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(213,9,48)"/><text x="13.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(227,153,47)"/><text x="13.00" y="510.50"></text></g><g><title>0x7fdd29d8c1f0 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(216,129,35)"/><text x="13.00" y="526.50"></text></g><g><title>0x7fdd29d86876 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(237,111,52)"/><text x="13.00" y="542.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(234,228,32)"/><text x="13.00" y="558.50"></text></g><g><title>0x7fdd29d86501 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(213,138,37)"/><text x="13.00" y="574.50"></text></g><g><title>0x7fdd29d81f4a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(244,154,1)"/><text x="13.00" y="590.50"></text></g><g><title>0x7fdd29d8f209 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(228,138,4)"/><text x="13.00" y="606.50"></text></g><g><title>0x7fdd29d8f027 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(209,171,38)"/><text x="13.00" y="622.50"></text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:18) (1 samples, 0.33%)</title><rect x="13" y="100" width="4" height="15" fill="rgb(212,36,44)"/><text x="16.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.33%)</title><rect x="13" y="116" width="4" height="15" fill="rgb(239,91,1)"/><text x="16.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.33%)</title><rect x="13" y="132" width="4" height="15" fill="rgb(233,115,11)"/><text x="16.00" y="142.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.33%)</title><rect x="13" y="148" width="4" height="15" fill="rgb(231,82,20)"/><text x="16.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (1 samples, 0.33%)</title><rect x="13" y="164" width="4" height="15" fill="rgb(231,60,2)"/><text x="16.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.33%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(222,98,44)"/><text x="16.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.33%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(250,48,24)"/><text x="16.00" y="206.50"></text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:22) (1 samples, 0.33%)</title><rect x="17" y="100" width="4" height="15" fill="rgb(238,54,23)"/><text x="20.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:888) (1 samples, 0.33%)</title><rect x="41" y="180" width="4" height="15" fill="rgb(250,13,33)"/><text x="44.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (5 samples, 1.65%)</title><rect x="56" y="196" width="20" height="15" fill="rgb(231,167,42)"/><text x="59.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 4.29%)</title><rect x="76" y="196" width="50" height="15" fill="rgb(229,87,8)"/><text x="79.00" y="206.50">&lt;list..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.66%)</title><rect x="119" y="212" width="7" height="15" fill="rgb(218,187,28)"/><text x="122.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (29 samples, 9.57%)</title><rect x="41" y="164" width="113" height="15" fill="rgb(219,127,39)"/><text x="44.00" y="174.50">_validate_for..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (28 samples, 9.24%)</title><rect x="45" y="180" width="109" height="15" fill="rgb(205,142,26)"/><text x="48.00" y="190.50">check_is_fitt..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (7 samples, 2.31%)</title><rect x="126" y="196" width="28" height="15" fill="rgb(208,73,33)"/><text x="129.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="150" y="212" width="4" height="15" fill="rgb(217,134,10)"/><text x="153.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.33%)</title><rect x="169" y="180" width="4" height="15" fill="rgb(214,107,33)"/><text x="172.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.33%)</title><rect x="173" y="180" width="4" height="15" fill="rgb(205,159,16)"/><text x="176.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.33%)</title><rect x="177" y="180" width="4" height="15" fill="rgb(222,218,12)"/><text x="180.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.33%)</title><rect x="177" y="196" width="4" height="15" fill="rgb(230,95,21)"/><text x="180.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.33%)</title><rect x="193" y="196" width="3" height="15" fill="rgb(212,215,41)"/><text x="196.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 1.98%)</title><rect x="181" y="180" width="23" height="15" fill="rgb(244,182,18)"/><text x="184.00" y="190.50">c..</text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.66%)</title><rect x="196" y="196" width="8" height="15" fill="rgb(242,137,29)"/><text x="199.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:184) (1 samples, 0.33%)</title><rect x="212" y="212" width="4" height="15" fill="rgb(208,112,7)"/><text x="215.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 1.32%)</title><rect x="216" y="212" width="15" height="15" fill="rgb(246,113,50)"/><text x="219.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 2.64%)</title><rect x="204" y="180" width="31" height="15" fill="rgb(228,158,8)"/><text x="207.00" y="190.50">ch..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 2.31%)</title><rect x="208" y="196" width="27" height="15" fill="rgb(228,214,24)"/><text x="211.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.33%)</title><rect x="231" y="212" width="4" height="15" fill="rgb(242,49,40)"/><text x="234.00" y="222.50"></text></g><g><title>0x7fdd29acc730 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="247" y="228" width="4" height="15" fill="rgb(211,153,9)"/><text x="250.00" y="238.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.33%)</title><rect x="251" y="228" width="4" height="15" fill="rgb(230,80,54)"/><text x="254.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.33%)</title><rect x="251" y="244" width="4" height="15" fill="rgb(210,132,49)"/><text x="254.00" y="254.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:553) (1 samples, 0.33%)</title><rect x="255" y="228" width="4" height="15" fill="rgb(247,202,46)"/><text x="258.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (5 samples, 1.65%)</title><rect x="243" y="212" width="20" height="15" fill="rgb(235,208,19)"/><text x="246.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="259" y="228" width="4" height="15" fill="rgb(222,5,4)"/><text x="262.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1697) (1 samples, 0.33%)</title><rect x="263" y="212" width="4" height="15" fill="rgb(249,153,18)"/><text x="266.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.33%)</title><rect x="263" y="228" width="4" height="15" fill="rgb(247,47,26)"/><text x="266.00" y="238.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.33%)</title><rect x="267" y="292" width="3" height="15" fill="rgb(223,81,42)"/><text x="270.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="267" y="308" width="3" height="15" fill="rgb(227,209,9)"/><text x="270.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.33%)</title><rect x="270" y="292" width="4" height="15" fill="rgb(223,163,49)"/><text x="273.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="270" y="308" width="4" height="15" fill="rgb(249,136,18)"/><text x="273.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (11 samples, 3.63%)</title><rect x="235" y="180" width="43" height="15" fill="rgb(224,157,1)"/><text x="238.00" y="190.50">chec..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (11 samples, 3.63%)</title><rect x="235" y="196" width="43" height="15" fill="rgb(233,35,26)"/><text x="238.00" y="206.50">asar..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.99%)</title><rect x="267" y="212" width="11" height="15" fill="rgb(249,166,18)"/><text x="270.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 0.99%)</title><rect x="267" y="228" width="11" height="15" fill="rgb(225,207,10)"/><text x="270.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (3 samples, 0.99%)</title><rect x="267" y="244" width="11" height="15" fill="rgb(231,82,14)"/><text x="270.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (3 samples, 0.99%)</title><rect x="267" y="260" width="11" height="15" fill="rgb(206,20,52)"/><text x="270.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.99%)</title><rect x="267" y="276" width="11" height="15" fill="rgb(231,152,42)"/><text x="270.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.33%)</title><rect x="274" y="292" width="4" height="15" fill="rgb(233,165,19)"/><text x="277.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.33%)</title><rect x="278" y="180" width="4" height="15" fill="rgb(238,65,5)"/><text x="281.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.33%)</title><rect x="278" y="196" width="4" height="15" fill="rgb(226,34,53)"/><text x="281.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (5 samples, 1.65%)</title><rect x="282" y="180" width="20" height="15" fill="rgb(233,152,37)"/><text x="285.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (3 samples, 0.99%)</title><rect x="290" y="196" width="12" height="15" fill="rgb(224,196,4)"/><text x="293.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.33%)</title><rect x="302" y="180" width="3" height="15" fill="rgb(230,80,5)"/><text x="305.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.33%)</title><rect x="305" y="180" width="4" height="15" fill="rgb(254,109,15)"/><text x="308.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.33%)</title><rect x="309" y="180" width="4" height="15" fill="rgb(215,20,0)"/><text x="312.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.33%)</title><rect x="313" y="180" width="4" height="15" fill="rgb(247,211,33)"/><text x="316.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 2.64%)</title><rect x="317" y="196" width="31" height="15" fill="rgb(224,46,23)"/><text x="320.00" y="206.50">_a..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.33%)</title><rect x="344" y="212" width="4" height="15" fill="rgb(252,219,30)"/><text x="347.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (10 samples, 3.30%)</title><rect x="317" y="180" width="39" height="15" fill="rgb(211,165,18)"/><text x="320.00" y="190.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.66%)</title><rect x="348" y="196" width="8" height="15" fill="rgb(253,61,1)"/><text x="351.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.33%)</title><rect x="352" y="212" width="4" height="15" fill="rgb(238,161,29)"/><text x="355.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.99%)</title><rect x="356" y="196" width="12" height="15" fill="rgb(211,106,37)"/><text x="359.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.33%)</title><rect x="368" y="196" width="4" height="15" fill="rgb(231,78,17)"/><text x="371.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.33%)</title><rect x="368" y="212" width="4" height="15" fill="rgb(239,126,15)"/><text x="371.00" y="222.50"></text></g><g><title>0x7fdd29ad714a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="368" y="228" width="4" height="15" fill="rgb(251,204,20)"/><text x="371.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (11 samples, 3.63%)</title><rect x="356" y="180" width="43" height="15" fill="rgb(226,97,13)"/><text x="359.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (7 samples, 2.31%)</title><rect x="372" y="196" width="27" height="15" fill="rgb(221,76,11)"/><text x="375.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.65%)</title><rect x="379" y="212" width="20" height="15" fill="rgb(222,50,46)"/><text x="382.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.66%)</title><rect x="391" y="228" width="8" height="15" fill="rgb(236,217,12)"/><text x="394.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.33%)</title><rect x="399" y="180" width="4" height="15" fill="rgb(252,170,26)"/><text x="402.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (65 samples, 21.45%)</title><rect x="154" y="164" width="253" height="15" fill="rgb(206,30,15)"/><text x="157.00" y="174.50">_validate_for_predict (sklearn/sv..</text></g><g><title>check_array (sklearn/utils/validation.py:585) (1 samples, 0.33%)</title><rect x="403" y="180" width="4" height="15" fill="rgb(231,149,41)"/><text x="406.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (3 samples, 0.99%)</title><rect x="407" y="164" width="11" height="15" fill="rgb(234,229,29)"/><text x="410.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (99 samples, 32.67%)</title><rect x="37" y="148" width="385" height="15" fill="rgb(207,167,47)"/><text x="40.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:464) (1 samples, 0.33%)</title><rect x="418" y="164" width="4" height="15" fill="rgb(248,103,14)"/><text x="421.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:641) (1 samples, 0.33%)</title><rect x="422" y="148" width="4" height="15" fill="rgb(225,72,8)"/><text x="425.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:682) (1 samples, 0.33%)</title><rect x="430" y="164" width="4" height="15" fill="rgb(245,212,26)"/><text x="433.00" y="174.50"></text></g><g><title>_compute_kernel (sklearn/svm/_base.py:366) (1 samples, 0.33%)</title><rect x="430" y="180" width="4" height="15" fill="rgb(243,91,45)"/><text x="433.00" y="190.50"></text></g><g><title>0x7fdd045a73fd (?) (1 samples, 0.33%)</title><rect x="438" y="180" width="4" height="15" fill="rgb(211,76,14)"/><text x="441.00" y="190.50"></text></g><g><title>0x7fdd045a57b4 (?) (1 samples, 0.33%)</title><rect x="438" y="196" width="4" height="15" fill="rgb(205,149,10)"/><text x="441.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.33%)</title><rect x="438" y="212" width="4" height="15" fill="rgb(237,132,45)"/><text x="441.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.33%)</title><rect x="438" y="228" width="4" height="15" fill="rgb(240,175,6)"/><text x="441.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.33%)</title><rect x="438" y="244" width="4" height="15" fill="rgb(231,136,2)"/><text x="441.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.33%)</title><rect x="442" y="244" width="4" height="15" fill="rgb(242,98,45)"/><text x="445.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.33%)</title><rect x="442" y="260" width="4" height="15" fill="rgb(234,63,24)"/><text x="445.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="442" y="276" width="4" height="15" fill="rgb(211,205,19)"/><text x="445.00" y="286.50"></text></g><g><title>0x7fdd0458ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="442" y="212" width="8" height="15" fill="rgb(225,37,10)"/><text x="445.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.66%)</title><rect x="442" y="228" width="8" height="15" fill="rgb(245,5,21)"/><text x="445.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.33%)</title><rect x="446" y="244" width="4" height="15" fill="rgb(233,8,30)"/><text x="449.00" y="254.50"></text></g><g><title>0x7fdd045a4d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.99%)</title><rect x="442" y="196" width="11" height="15" fill="rgb(246,72,53)"/><text x="445.00" y="206.50"></text></g><g><title>0x7fdd0458ef13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="450" y="212" width="3" height="15" fill="rgb(243,156,13)"/><text x="453.00" y="222.50"></text></g><g><title>0x7fdd0458dfa2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="450" y="228" width="3" height="15" fill="rgb(215,126,43)"/><text x="453.00" y="238.50"></text></g><g><title>0x7fdd045a4d37 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="453" y="196" width="4" height="15" fill="rgb(246,17,32)"/><text x="456.00" y="206.50"></text></g><g><title>0x7fdd045a4e20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="457" y="196" width="4" height="15" fill="rgb(250,56,7)"/><text x="460.00" y="206.50"></text></g><g><title>0x7fdd0458ef13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="457" y="212" width="4" height="15" fill="rgb(210,205,36)"/><text x="460.00" y="222.50"></text></g><g><title>0x7fdd0458e33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="457" y="228" width="4" height="15" fill="rgb(244,44,22)"/><text x="460.00" y="238.50"></text></g><g><title>0x7fdd0458d9ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="457" y="244" width="4" height="15" fill="rgb(254,138,0)"/><text x="460.00" y="254.50"></text></g><g><title>0x7fdd045a4f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="461" y="196" width="4" height="15" fill="rgb(231,193,28)"/><text x="464.00" y="206.50"></text></g><g><title>0x7fdd0458ef13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="461" y="212" width="4" height="15" fill="rgb(252,212,46)"/><text x="464.00" y="222.50"></text></g><g><title>0x7fdd0458e05a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="461" y="228" width="4" height="15" fill="rgb(224,22,9)"/><text x="464.00" y="238.50"></text></g><g><title>0x7fdd0458d98f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="461" y="244" width="4" height="15" fill="rgb(240,196,53)"/><text x="464.00" y="254.50"></text></g><g><title>0x7fdd045a4f9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="465" y="196" width="4" height="15" fill="rgb(217,172,23)"/><text x="468.00" y="206.50"></text></g><g><title>0x7fdd0458ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="465" y="212" width="4" height="15" fill="rgb(233,31,35)"/><text x="468.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.33%)</title><rect x="465" y="228" width="4" height="15" fill="rgb(251,16,33)"/><text x="468.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.33%)</title><rect x="465" y="244" width="4" height="15" fill="rgb(222,207,9)"/><text x="468.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.33%)</title><rect x="465" y="260" width="4" height="15" fill="rgb(250,87,16)"/><text x="468.00" y="270.50"></text></g><g><title>0x7fdd045a5006 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="469" y="196" width="4" height="15" fill="rgb(254,27,14)"/><text x="472.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (4 samples, 1.32%)</title><rect x="473" y="212" width="16" height="15" fill="rgb(206,170,32)"/><text x="476.00" y="222.50"></text></g><g><title>_calc_length (ctors.c:3285) (1 samples, 0.33%)</title><rect x="489" y="244" width="3" height="15" fill="rgb(211,84,14)"/><text x="492.00" y="254.50"></text></g><g><title>0x7fdd045a512f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.98%)</title><rect x="473" y="196" width="23" height="15" fill="rgb(223,42,36)"/><text x="476.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.66%)</title><rect x="489" y="212" width="7" height="15" fill="rgb(244,115,2)"/><text x="492.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (2 samples, 0.66%)</title><rect x="489" y="228" width="7" height="15" fill="rgb(233,60,9)"/><text x="492.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3330) (1 samples, 0.33%)</title><rect x="492" y="244" width="4" height="15" fill="rgb(216,66,0)"/><text x="495.00" y="254.50"></text></g><g><title>_arange_safe_ceil_to_intp (ctors.c:3137) (1 samples, 0.33%)</title><rect x="492" y="260" width="4" height="15" fill="rgb(233,189,30)"/><text x="495.00" y="270.50"></text></g><g><title>0x7fdd28cd7df0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="492" y="276" width="4" height="15" fill="rgb(210,140,48)"/><text x="495.00" y="286.50"></text></g><g><title>0x7fdd0458f9b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="496" y="212" width="4" height="15" fill="rgb(253,167,31)"/><text x="499.00" y="222.50"></text></g><g><title>0x7fdd045a5237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="496" y="196" width="8" height="15" fill="rgb(236,89,36)"/><text x="499.00" y="206.50"></text></g><g><title>0x7fdd0458fce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="500" y="212" width="4" height="15" fill="rgb(253,134,46)"/><text x="503.00" y="222.50"></text></g><g><title>0x7fdd045a52b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="504" y="196" width="8" height="15" fill="rgb(232,44,41)"/><text x="507.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="504" y="212" width="8" height="15" fill="rgb(237,181,50)"/><text x="507.00" y="222.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="504" y="228" width="8" height="15" fill="rgb(251,152,27)"/><text x="507.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="508" y="244" width="4" height="15" fill="rgb(205,217,23)"/><text x="511.00" y="254.50"></text></g><g><title>0x7fdd29ab86df (libc-2.29.so) (1 samples, 0.33%)</title><rect x="508" y="260" width="4" height="15" fill="rgb(208,109,8)"/><text x="511.00" y="270.50"></text></g><g><title>0x7fdd29acc734 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="512" y="228" width="4" height="15" fill="rgb(234,58,53)"/><text x="515.00" y="238.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (2 samples, 0.66%)</title><rect x="512" y="212" width="8" height="15" fill="rgb(233,163,24)"/><text x="515.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.33%)</title><rect x="516" y="228" width="4" height="15" fill="rgb(235,214,40)"/><text x="519.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.33%)</title><rect x="516" y="244" width="4" height="15" fill="rgb(241,228,8)"/><text x="519.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.33%)</title><rect x="516" y="260" width="4" height="15" fill="rgb(208,98,7)"/><text x="519.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.33%)</title><rect x="516" y="276" width="4" height="15" fill="rgb(227,93,3)"/><text x="519.00" y="286.50"></text></g><g><title>0x7fdd045a546c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.99%)</title><rect x="512" y="196" width="12" height="15" fill="rgb(221,132,28)"/><text x="515.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.33%)</title><rect x="520" y="212" width="4" height="15" fill="rgb(253,162,36)"/><text x="523.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.33%)</title><rect x="520" y="228" width="4" height="15" fill="rgb(233,52,51)"/><text x="523.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.33%)</title><rect x="520" y="244" width="4" height="15" fill="rgb(254,10,47)"/><text x="523.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.33%)</title><rect x="520" y="260" width="4" height="15" fill="rgb(216,137,7)"/><text x="523.00" y="270.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.33%)</title><rect x="520" y="276" width="4" height="15" fill="rgb(229,186,44)"/><text x="523.00" y="286.50"></text></g><g><title>0x7fdd045a5528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="524" y="196" width="3" height="15" fill="rgb(240,145,41)"/><text x="527.00" y="206.50"></text></g><g><title>0x7fdd0458ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="524" y="212" width="3" height="15" fill="rgb(247,63,40)"/><text x="527.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.33%)</title><rect x="524" y="228" width="3" height="15" fill="rgb(246,121,52)"/><text x="527.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (1 samples, 0.33%)</title><rect x="524" y="244" width="3" height="15" fill="rgb(217,210,43)"/><text x="527.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="527" y="244" width="4" height="15" fill="rgb(238,120,30)"/><text x="530.00" y="254.50"></text></g><g><title>0x7fdd29ab7e5a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="527" y="260" width="4" height="15" fill="rgb(208,73,10)"/><text x="530.00" y="270.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="535" y="260" width="8" height="15" fill="rgb(234,101,28)"/><text x="538.00" y="270.50"></text></g><g><title>0x7fdd045a5553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.96%)</title><rect x="527" y="196" width="47" height="15" fill="rgb(237,38,11)"/><text x="530.00" y="206.50">0x7f..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.96%)</title><rect x="527" y="212" width="47" height="15" fill="rgb(252,144,30)"/><text x="530.00" y="222.50">copy..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.96%)</title><rect x="527" y="228" width="47" height="15" fill="rgb(252,37,22)"/><text x="530.00" y="238.50">svm_..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.63%)</title><rect x="531" y="244" width="43" height="15" fill="rgb(248,166,40)"/><text x="534.00" y="254.50">svm_..</text></g><g><title>tanhf32x (libm-2.29.so) (8 samples, 2.64%)</title><rect x="543" y="260" width="31" height="15" fill="rgb(234,125,20)"/><text x="546.00" y="270.50">ta..</text></g><g><title>expm1f64 (libm-2.29.so) (6 samples, 1.98%)</title><rect x="551" y="276" width="23" height="15" fill="rgb(240,168,6)"/><text x="554.00" y="286.50">e..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.33%)</title><rect x="574" y="212" width="4" height="15" fill="rgb(208,121,16)"/><text x="577.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.33%)</title><rect x="574" y="228" width="4" height="15" fill="rgb(220,51,14)"/><text x="577.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:725) (1 samples, 0.33%)</title><rect x="574" y="244" width="4" height="15" fill="rgb(231,147,23)"/><text x="577.00" y="254.50"></text></g><g><title>0x7fdd29ab6d07 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="574" y="260" width="4" height="15" fill="rgb(251,15,22)"/><text x="577.00" y="270.50"></text></g><g><title>0x7fdd045a57b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="574" y="196" width="8" height="15" fill="rgb(211,209,20)"/><text x="577.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.33%)</title><rect x="578" y="212" width="4" height="15" fill="rgb(228,82,38)"/><text x="581.00" y="222.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.33%)</title><rect x="582" y="244" width="4" height="15" fill="rgb(227,40,5)"/><text x="585.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.33%)</title><rect x="582" y="260" width="4" height="15" fill="rgb(230,202,51)"/><text x="585.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="582" y="276" width="4" height="15" fill="rgb(238,78,23)"/><text x="585.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.33%)</title><rect x="586" y="244" width="4" height="15" fill="rgb(226,80,27)"/><text x="589.00" y="254.50"></text></g><g><title>0x7fdd045a73fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (39 samples, 12.87%)</title><rect x="442" y="180" width="152" height="15" fill="rgb(234,226,31)"/><text x="445.00" y="190.50">0x7fdd045a73fd (skl..</text></g><g><title>0x7fdd045a6d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.99%)</title><rect x="582" y="196" width="12" height="15" fill="rgb(228,185,33)"/><text x="585.00" y="206.50"></text></g><g><title>0x7fdd0458e5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.99%)</title><rect x="582" y="212" width="12" height="15" fill="rgb(244,68,7)"/><text x="585.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.99%)</title><rect x="582" y="228" width="12" height="15" fill="rgb(223,111,54)"/><text x="585.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.33%)</title><rect x="590" y="244" width="4" height="15" fill="rgb(243,153,11)"/><text x="593.00" y="254.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (44 samples, 14.52%)</title><rect x="426" y="148" width="172" height="15" fill="rgb(239,168,9)"/><text x="429.00" y="158.50">_predict_proba (sklear..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (42 samples, 13.86%)</title><rect x="434" y="164" width="164" height="15" fill="rgb(211,205,50)"/><text x="437.00" y="174.50">_dense_predict_proba ..</text></g><g><title>0x7fdd045a7fc2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="594" y="180" width="4" height="15" fill="rgb(225,118,9)"/><text x="597.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (146 samples, 48.18%)</title><rect x="37" y="132" width="568" height="15" fill="rgb(243,31,26)"/><text x="40.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/svm/_base.py:636) (2 samples, 0.66%)</title><rect x="598" y="148" width="7" height="15" fill="rgb(248,226,47)"/><text x="601.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py:605) (2 samples, 0.66%)</title><rect x="598" y="164" width="7" height="15" fill="rgb(226,94,40)"/><text x="601.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:38) (154 samples, 50.83%)</title><rect x="10" y="52" width="599" height="15" fill="rgb(228,143,8)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:37) (154 samples, 50.83%)</title><rect x="10" y="68" width="599" height="15" fill="rgb(217,175,47)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:29) (153 samples, 50.50%)</title><rect x="13" y="84" width="596" height="15" fill="rgb(206,214,35)"/><text x="16.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_...</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:23) (151 samples, 49.83%)</title><rect x="21" y="100" width="588" height="15" fill="rgb(210,151,19)"/><text x="24.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (150 samples, 49.50%)</title><rect x="25" y="116" width="584" height="15" fill="rgb(228,83,23)"/><text x="28.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="605" y="132" width="4" height="15" fill="rgb(218,142,32)"/><text x="608.00" y="142.50"></text></g><g><title>0x7fdd29b94151 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="605" y="148" width="4" height="15" fill="rgb(212,77,45)"/><text x="608.00" y="158.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:1) (1 samples, 0.33%)</title><rect x="609" y="148" width="4" height="15" fill="rgb(237,50,12)"/><text x="612.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="609" y="164" width="4" height="15" fill="rgb(239,19,24)"/><text x="612.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="609" y="180" width="4" height="15" fill="rgb(208,165,19)"/><text x="612.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="609" y="196" width="4" height="15" fill="rgb(206,199,30)"/><text x="612.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="609" y="212" width="4" height="15" fill="rgb(234,29,14)"/><text x="612.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="609" y="228" width="4" height="15" fill="rgb(247,183,33)"/><text x="612.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.33%)</title><rect x="609" y="244" width="4" height="15" fill="rgb(232,93,41)"/><text x="612.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="609" y="260" width="4" height="15" fill="rgb(249,88,27)"/><text x="612.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="609" y="276" width="4" height="15" fill="rgb(243,77,36)"/><text x="612.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="609" y="292" width="4" height="15" fill="rgb(225,9,54)"/><text x="612.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="609" y="308" width="4" height="15" fill="rgb(218,197,7)"/><text x="612.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="609" y="324" width="4" height="15" fill="rgb(225,171,52)"/><text x="612.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="609" y="340" width="4" height="15" fill="rgb(209,192,21)"/><text x="612.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="609" y="356" width="4" height="15" fill="rgb(247,13,15)"/><text x="612.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.33%)</title><rect x="609" y="372" width="4" height="15" fill="rgb(227,88,7)"/><text x="612.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="609" y="388" width="4" height="15" fill="rgb(233,224,53)"/><text x="612.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="609" y="404" width="4" height="15" fill="rgb(226,143,41)"/><text x="612.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="609" y="420" width="4" height="15" fill="rgb(216,119,27)"/><text x="612.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="609" y="436" width="4" height="15" fill="rgb(223,211,17)"/><text x="612.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="609" y="452" width="4" height="15" fill="rgb(238,22,25)"/><text x="612.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="609" y="468" width="4" height="15" fill="rgb(248,159,18)"/><text x="612.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="609" y="484" width="4" height="15" fill="rgb(219,136,34)"/><text x="612.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:1811) (1 samples, 0.33%)</title><rect x="609" y="500" width="4" height="15" fill="rgb(244,32,34)"/><text x="612.00" y="510.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.33%)</title><rect x="613" y="852" width="4" height="15" fill="rgb(205,139,20)"/><text x="616.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.33%)</title><rect x="613" y="868" width="4" height="15" fill="rgb(243,91,40)"/><text x="616.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.33%)</title><rect x="613" y="884" width="4" height="15" fill="rgb(211,134,24)"/><text x="616.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.33%)</title><rect x="613" y="900" width="4" height="15" fill="rgb(228,0,9)"/><text x="616.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.33%)</title><rect x="613" y="916" width="4" height="15" fill="rgb(232,156,31)"/><text x="616.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.33%)</title><rect x="613" y="932" width="4" height="15" fill="rgb(219,194,37)"/><text x="616.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.33%)</title><rect x="613" y="948" width="4" height="15" fill="rgb(228,193,23)"/><text x="616.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.66%)</title><rect x="613" y="820" width="8" height="15" fill="rgb(219,120,24)"/><text x="616.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.66%)</title><rect x="613" y="836" width="8" height="15" fill="rgb(241,133,26)"/><text x="616.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.33%)</title><rect x="617" y="852" width="4" height="15" fill="rgb(218,161,40)"/><text x="620.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.33%)</title><rect x="617" y="868" width="4" height="15" fill="rgb(227,63,46)"/><text x="620.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.33%)</title><rect x="617" y="884" width="4" height="15" fill="rgb(224,112,13)"/><text x="620.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.33%)</title><rect x="617" y="900" width="4" height="15" fill="rgb(249,229,3)"/><text x="620.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.33%)</title><rect x="617" y="916" width="4" height="15" fill="rgb(210,1,40)"/><text x="620.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.33%)</title><rect x="617" y="932" width="4" height="15" fill="rgb(235,124,36)"/><text x="620.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.33%)</title><rect x="617" y="948" width="4" height="15" fill="rgb(206,204,32)"/><text x="620.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.33%)</title><rect x="617" y="964" width="4" height="15" fill="rgb(216,92,15)"/><text x="620.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.33%)</title><rect x="617" y="980" width="4" height="15" fill="rgb(224,59,47)"/><text x="620.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.33%)</title><rect x="617" y="996" width="4" height="15" fill="rgb(247,84,12)"/><text x="620.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.33%)</title><rect x="617" y="1012" width="4" height="15" fill="rgb(254,211,22)"/><text x="620.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:35) (1 samples, 0.33%)</title><rect x="621" y="820" width="4" height="15" fill="rgb(215,188,37)"/><text x="624.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="621" y="836" width="4" height="15" fill="rgb(212,26,17)"/><text x="624.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="621" y="852" width="4" height="15" fill="rgb(247,136,37)"/><text x="624.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="621" y="868" width="4" height="15" fill="rgb(234,203,53)"/><text x="624.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="621" y="884" width="4" height="15" fill="rgb(254,192,32)"/><text x="624.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="621" y="900" width="4" height="15" fill="rgb(237,121,10)"/><text x="624.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py:65) (1 samples, 0.33%)</title><rect x="621" y="916" width="4" height="15" fill="rgb(240,171,50)"/><text x="624.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="621" y="932" width="4" height="15" fill="rgb(226,179,2)"/><text x="624.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="621" y="948" width="4" height="15" fill="rgb(244,218,45)"/><text x="624.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="621" y="964" width="4" height="15" fill="rgb(222,229,52)"/><text x="624.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="621" y="980" width="4" height="15" fill="rgb(226,0,53)"/><text x="624.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="621" y="996" width="4" height="15" fill="rgb(217,71,29)"/><text x="624.00" y="1006.50"></text></g><g><title>&lt;module&gt; (xml/parsers/expat.py:4) (1 samples, 0.33%)</title><rect x="621" y="1012" width="4" height="15" fill="rgb(220,131,47)"/><text x="624.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="621" y="1028" width="4" height="15" fill="rgb(211,219,48)"/><text x="624.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="621" y="1044" width="4" height="15" fill="rgb(230,132,0)"/><text x="624.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.33%)</title><rect x="621" y="1060" width="4" height="15" fill="rgb(225,199,54)"/><text x="624.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.33%)</title><rect x="621" y="1076" width="4" height="15" fill="rgb(250,208,17)"/><text x="624.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.33%)</title><rect x="621" y="1092" width="4" height="15" fill="rgb(234,111,26)"/><text x="624.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="621" y="1108" width="4" height="15" fill="rgb(209,94,26)"/><text x="624.00" y="1118.50"></text></g><g><title>0x7fdd18be8713 (?) (1 samples, 0.33%)</title><rect x="621" y="1124" width="4" height="15" fill="rgb(254,146,36)"/><text x="624.00" y="1134.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="621" y="1140" width="4" height="15" fill="rgb(210,142,26)"/><text x="624.00" y="1150.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:2) (4 samples, 1.32%)</title><rect x="613" y="148" width="16" height="15" fill="rgb(229,141,17)"/><text x="616.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="164" width="16" height="15" fill="rgb(227,26,14)"/><text x="616.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.32%)</title><rect x="613" y="180" width="16" height="15" fill="rgb(236,35,10)"/><text x="616.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="196" width="16" height="15" fill="rgb(239,147,36)"/><text x="616.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="212" width="16" height="15" fill="rgb(240,142,25)"/><text x="616.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="613" y="228" width="16" height="15" fill="rgb(213,215,17)"/><text x="616.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="613" y="244" width="16" height="15" fill="rgb(231,222,45)"/><text x="616.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="613" y="260" width="16" height="15" fill="rgb(249,206,23)"/><text x="616.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="276" width="16" height="15" fill="rgb(249,93,41)"/><text x="616.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.32%)</title><rect x="613" y="292" width="16" height="15" fill="rgb(239,40,33)"/><text x="616.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="308" width="16" height="15" fill="rgb(239,187,11)"/><text x="616.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="613" y="324" width="16" height="15" fill="rgb(206,198,54)"/><text x="616.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="613" y="340" width="16" height="15" fill="rgb(227,105,47)"/><text x="616.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="613" y="356" width="16" height="15" fill="rgb(212,122,41)"/><text x="616.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="372" width="16" height="15" fill="rgb(217,100,54)"/><text x="616.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.32%)</title><rect x="613" y="388" width="16" height="15" fill="rgb(246,81,21)"/><text x="616.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="404" width="16" height="15" fill="rgb(228,173,7)"/><text x="616.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="613" y="420" width="16" height="15" fill="rgb(248,98,46)"/><text x="616.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="613" y="436" width="16" height="15" fill="rgb(241,22,0)"/><text x="616.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="613" y="452" width="16" height="15" fill="rgb(221,25,16)"/><text x="616.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="468" width="16" height="15" fill="rgb(243,175,21)"/><text x="616.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.32%)</title><rect x="613" y="484" width="16" height="15" fill="rgb(209,36,8)"/><text x="616.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="500" width="16" height="15" fill="rgb(222,104,38)"/><text x="616.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="613" y="516" width="16" height="15" fill="rgb(247,180,33)"/><text x="616.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="613" y="532" width="16" height="15" fill="rgb(250,73,47)"/><text x="616.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="613" y="548" width="16" height="15" fill="rgb(230,24,33)"/><text x="616.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="564" width="16" height="15" fill="rgb(243,28,14)"/><text x="616.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.32%)</title><rect x="613" y="580" width="16" height="15" fill="rgb(208,15,37)"/><text x="616.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="596" width="16" height="15" fill="rgb(217,10,18)"/><text x="616.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.32%)</title><rect x="613" y="612" width="16" height="15" fill="rgb(218,171,35)"/><text x="616.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="628" width="16" height="15" fill="rgb(254,25,50)"/><text x="616.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="644" width="16" height="15" fill="rgb(235,23,34)"/><text x="616.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="613" y="660" width="16" height="15" fill="rgb(225,129,47)"/><text x="616.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="613" y="676" width="16" height="15" fill="rgb(209,3,20)"/><text x="616.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="613" y="692" width="16" height="15" fill="rgb(254,71,28)"/><text x="616.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="708" width="16" height="15" fill="rgb(205,99,4)"/><text x="616.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.32%)</title><rect x="613" y="724" width="16" height="15" fill="rgb(237,221,47)"/><text x="616.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="613" y="740" width="16" height="15" fill="rgb(241,158,25)"/><text x="616.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="613" y="756" width="16" height="15" fill="rgb(252,109,25)"/><text x="616.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="613" y="772" width="16" height="15" fill="rgb(208,123,49)"/><text x="616.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="613" y="788" width="16" height="15" fill="rgb(220,52,19)"/><text x="616.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="613" y="804" width="16" height="15" fill="rgb(220,146,7)"/><text x="616.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.33%)</title><rect x="625" y="820" width="4" height="15" fill="rgb(209,90,17)"/><text x="628.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="625" y="836" width="4" height="15" fill="rgb(235,67,46)"/><text x="628.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="625" y="852" width="4" height="15" fill="rgb(228,163,15)"/><text x="628.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="625" y="868" width="4" height="15" fill="rgb(243,38,29)"/><text x="628.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="625" y="884" width="4" height="15" fill="rgb(206,128,13)"/><text x="628.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="625" y="900" width="4" height="15" fill="rgb(231,70,48)"/><text x="628.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.33%)</title><rect x="625" y="916" width="4" height="15" fill="rgb(206,91,42)"/><text x="628.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:386) (1 samples, 0.33%)</title><rect x="625" y="932" width="4" height="15" fill="rgb(251,10,31)"/><text x="628.00" y="942.50"></text></g><g><title>_require_version_compare (pkg_resources/_vendor/packaging/specifiers.py:267) (1 samples, 0.33%)</title><rect x="625" y="948" width="4" height="15" fill="rgb(252,1,16)"/><text x="628.00" y="958.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.33%)</title><rect x="625" y="964" width="4" height="15" fill="rgb(209,59,31)"/><text x="628.00" y="974.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.33%)</title><rect x="629" y="676" width="4" height="15" fill="rgb(246,100,10)"/><text x="632.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="629" y="692" width="4" height="15" fill="rgb(231,10,42)"/><text x="632.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="629" y="708" width="4" height="15" fill="rgb(248,191,30)"/><text x="632.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="629" y="724" width="4" height="15" fill="rgb(229,181,0)"/><text x="632.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="629" y="740" width="4" height="15" fill="rgb(246,115,35)"/><text x="632.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="629" y="756" width="4" height="15" fill="rgb(230,154,23)"/><text x="632.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.33%)</title><rect x="629" y="772" width="4" height="15" fill="rgb(253,54,3)"/><text x="632.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="629" y="788" width="4" height="15" fill="rgb(254,166,47)"/><text x="632.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="629" y="804" width="4" height="15" fill="rgb(251,112,36)"/><text x="632.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="629" y="820" width="4" height="15" fill="rgb(252,221,30)"/><text x="632.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="629" y="836" width="4" height="15" fill="rgb(223,76,51)"/><text x="632.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="629" y="852" width="4" height="15" fill="rgb(244,114,29)"/><text x="632.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="629" y="868" width="4" height="15" fill="rgb(205,76,34)"/><text x="632.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="629" y="884" width="4" height="15" fill="rgb(230,49,0)"/><text x="632.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.33%)</title><rect x="629" y="900" width="4" height="15" fill="rgb(235,182,46)"/><text x="632.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="629" y="916" width="4" height="15" fill="rgb(205,27,5)"/><text x="632.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="629" y="932" width="4" height="15" fill="rgb(246,60,53)"/><text x="632.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="629" y="948" width="4" height="15" fill="rgb(240,48,11)"/><text x="632.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="629" y="964" width="4" height="15" fill="rgb(206,81,17)"/><text x="632.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="629" y="980" width="4" height="15" fill="rgb(248,201,27)"/><text x="632.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="629" y="996" width="4" height="15" fill="rgb(254,40,9)"/><text x="632.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="629" y="1012" width="4" height="15" fill="rgb(253,228,15)"/><text x="632.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:92) (1 samples, 0.33%)</title><rect x="629" y="1028" width="4" height="15" fill="rgb(247,52,20)"/><text x="632.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2806) (1 samples, 0.33%)</title><rect x="629" y="1044" width="4" height="15" fill="rgb(205,100,17)"/><text x="632.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.33%)</title><rect x="629" y="1060" width="4" height="15" fill="rgb(244,17,14)"/><text x="632.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.33%)</title><rect x="629" y="1076" width="4" height="15" fill="rgb(234,135,12)"/><text x="632.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.33%)</title><rect x="629" y="1092" width="4" height="15" fill="rgb(251,159,33)"/><text x="632.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.33%)</title><rect x="629" y="1108" width="4" height="15" fill="rgb(206,158,47)"/><text x="632.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.33%)</title><rect x="629" y="1124" width="4" height="15" fill="rgb(233,126,16)"/><text x="632.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.33%)</title><rect x="629" y="1140" width="4" height="15" fill="rgb(228,79,12)"/><text x="632.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.33%)</title><rect x="629" y="1156" width="4" height="15" fill="rgb(205,185,21)"/><text x="632.00" y="1166.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.33%)</title><rect x="629" y="1172" width="4" height="15" fill="rgb(223,193,43)"/><text x="632.00" y="1182.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:4) (2 samples, 0.66%)</title><rect x="629" y="148" width="7" height="15" fill="rgb(212,58,38)"/><text x="632.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="629" y="164" width="7" height="15" fill="rgb(207,19,17)"/><text x="632.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.66%)</title><rect x="629" y="180" width="7" height="15" fill="rgb(250,191,42)"/><text x="632.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="629" y="196" width="7" height="15" fill="rgb(223,106,20)"/><text x="632.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="629" y="212" width="7" height="15" fill="rgb(230,203,8)"/><text x="632.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="629" y="228" width="7" height="15" fill="rgb(236,18,29)"/><text x="632.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="629" y="244" width="7" height="15" fill="rgb(251,80,17)"/><text x="632.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="629" y="260" width="7" height="15" fill="rgb(205,11,49)"/><text x="632.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="629" y="276" width="7" height="15" fill="rgb(213,93,7)"/><text x="632.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.66%)</title><rect x="629" y="292" width="7" height="15" fill="rgb(252,17,50)"/><text x="632.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="629" y="308" width="7" height="15" fill="rgb(217,124,38)"/><text x="632.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="629" y="324" width="7" height="15" fill="rgb(209,78,48)"/><text x="632.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="629" y="340" width="7" height="15" fill="rgb(252,8,5)"/><text x="632.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="629" y="356" width="7" height="15" fill="rgb(227,145,12)"/><text x="632.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="629" y="372" width="7" height="15" fill="rgb(236,22,3)"/><text x="632.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.66%)</title><rect x="629" y="388" width="7" height="15" fill="rgb(212,133,20)"/><text x="632.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="629" y="404" width="7" height="15" fill="rgb(213,93,15)"/><text x="632.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="629" y="420" width="7" height="15" fill="rgb(231,106,19)"/><text x="632.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="629" y="436" width="7" height="15" fill="rgb(240,210,4)"/><text x="632.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="629" y="452" width="7" height="15" fill="rgb(237,126,49)"/><text x="632.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="629" y="468" width="7" height="15" fill="rgb(226,120,24)"/><text x="632.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.66%)</title><rect x="629" y="484" width="7" height="15" fill="rgb(221,131,32)"/><text x="632.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="629" y="500" width="7" height="15" fill="rgb(240,163,9)"/><text x="632.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="629" y="516" width="7" height="15" fill="rgb(238,41,22)"/><text x="632.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="629" y="532" width="7" height="15" fill="rgb(253,137,36)"/><text x="632.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="629" y="548" width="7" height="15" fill="rgb(244,84,22)"/><text x="632.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="629" y="564" width="7" height="15" fill="rgb(225,206,42)"/><text x="632.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.66%)</title><rect x="629" y="580" width="7" height="15" fill="rgb(246,193,23)"/><text x="632.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="629" y="596" width="7" height="15" fill="rgb(252,32,19)"/><text x="632.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="629" y="612" width="7" height="15" fill="rgb(226,62,43)"/><text x="632.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="629" y="628" width="7" height="15" fill="rgb(251,198,46)"/><text x="632.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="629" y="644" width="7" height="15" fill="rgb(227,146,12)"/><text x="632.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="629" y="660" width="7" height="15" fill="rgb(208,46,26)"/><text x="632.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:386) (1 samples, 0.33%)</title><rect x="633" y="676" width="3" height="15" fill="rgb(215,40,14)"/><text x="636.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="633" y="692" width="3" height="15" fill="rgb(249,36,23)"/><text x="636.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="633" y="708" width="3" height="15" fill="rgb(245,197,42)"/><text x="636.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="633" y="724" width="3" height="15" fill="rgb(217,53,47)"/><text x="636.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="633" y="740" width="3" height="15" fill="rgb(225,123,50)"/><text x="636.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="633" y="756" width="3" height="15" fill="rgb(207,225,39)"/><text x="636.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py:689) (1 samples, 0.33%)</title><rect x="633" y="772" width="3" height="15" fill="rgb(211,5,16)"/><text x="636.00" y="782.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.33%)</title><rect x="636" y="484" width="4" height="15" fill="rgb(249,110,49)"/><text x="639.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="636" y="500" width="4" height="15" fill="rgb(221,87,30)"/><text x="639.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="636" y="516" width="4" height="15" fill="rgb(234,29,18)"/><text x="639.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="636" y="532" width="4" height="15" fill="rgb(221,51,42)"/><text x="639.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="636" y="548" width="4" height="15" fill="rgb(213,114,8)"/><text x="639.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="636" y="564" width="4" height="15" fill="rgb(246,181,42)"/><text x="639.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.33%)</title><rect x="636" y="580" width="4" height="15" fill="rgb(213,166,42)"/><text x="639.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="636" y="596" width="4" height="15" fill="rgb(248,220,4)"/><text x="639.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="636" y="612" width="4" height="15" fill="rgb(205,186,24)"/><text x="639.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="636" y="628" width="4" height="15" fill="rgb(245,54,52)"/><text x="639.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="636" y="644" width="4" height="15" fill="rgb(226,74,37)"/><text x="639.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="636" y="660" width="4" height="15" fill="rgb(217,197,36)"/><text x="639.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.33%)</title><rect x="636" y="676" width="4" height="15" fill="rgb(212,145,41)"/><text x="639.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="636" y="692" width="4" height="15" fill="rgb(231,152,23)"/><text x="639.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="636" y="708" width="4" height="15" fill="rgb(213,137,52)"/><text x="639.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="636" y="724" width="4" height="15" fill="rgb(235,91,9)"/><text x="639.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="636" y="740" width="4" height="15" fill="rgb(214,42,3)"/><text x="639.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="636" y="756" width="4" height="15" fill="rgb(212,151,27)"/><text x="639.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.33%)</title><rect x="636" y="772" width="4" height="15" fill="rgb(217,118,18)"/><text x="639.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="636" y="788" width="4" height="15" fill="rgb(228,193,39)"/><text x="639.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="636" y="804" width="4" height="15" fill="rgb(243,74,10)"/><text x="639.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="636" y="820" width="4" height="15" fill="rgb(241,192,34)"/><text x="639.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="636" y="836" width="4" height="15" fill="rgb(228,59,44)"/><text x="639.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="636" y="852" width="4" height="15" fill="rgb(230,119,12)"/><text x="639.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="636" y="868" width="4" height="15" fill="rgb(245,107,4)"/><text x="639.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="636" y="884" width="4" height="15" fill="rgb(233,107,54)"/><text x="639.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.33%)</title><rect x="636" y="900" width="4" height="15" fill="rgb(223,149,24)"/><text x="639.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="636" y="916" width="4" height="15" fill="rgb(245,8,6)"/><text x="639.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="636" y="932" width="4" height="15" fill="rgb(232,140,14)"/><text x="639.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="636" y="948" width="4" height="15" fill="rgb(245,113,22)"/><text x="639.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="636" y="964" width="4" height="15" fill="rgb(242,86,23)"/><text x="639.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="636" y="980" width="4" height="15" fill="rgb(222,192,44)"/><text x="639.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.33%)</title><rect x="636" y="996" width="4" height="15" fill="rgb(244,229,0)"/><text x="639.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="636" y="1012" width="4" height="15" fill="rgb(213,201,28)"/><text x="639.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="636" y="1028" width="4" height="15" fill="rgb(231,18,4)"/><text x="639.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="636" y="1044" width="4" height="15" fill="rgb(226,97,17)"/><text x="639.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="636" y="1060" width="4" height="15" fill="rgb(229,137,49)"/><text x="639.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="636" y="1076" width="4" height="15" fill="rgb(213,55,5)"/><text x="639.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:35) (1 samples, 0.33%)</title><rect x="636" y="1092" width="4" height="15" fill="rgb(250,96,24)"/><text x="639.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="636" y="1108" width="4" height="15" fill="rgb(235,70,21)"/><text x="639.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.33%)</title><rect x="636" y="1124" width="4" height="15" fill="rgb(225,187,46)"/><text x="639.00" y="1134.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.33%)</title><rect x="636" y="1140" width="4" height="15" fill="rgb(214,193,41)"/><text x="639.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.33%)</title><rect x="636" y="1156" width="4" height="15" fill="rgb(236,227,26)"/><text x="639.00" y="1166.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.33%)</title><rect x="636" y="1172" width="4" height="15" fill="rgb(228,59,47)"/><text x="639.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.33%)</title><rect x="636" y="1188" width="4" height="15" fill="rgb(254,120,26)"/><text x="639.00" y="1198.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.33%)</title><rect x="636" y="1204" width="4" height="15" fill="rgb(234,70,45)"/><text x="639.00" y="1214.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.33%)</title><rect x="636" y="1220" width="4" height="15" fill="rgb(211,229,42)"/><text x="639.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.66%)</title><rect x="636" y="340" width="8" height="15" fill="rgb(211,11,51)"/><text x="639.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="636" y="356" width="8" height="15" fill="rgb(207,147,0)"/><text x="639.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.66%)</title><rect x="636" y="372" width="8" height="15" fill="rgb(214,72,15)"/><text x="639.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="636" y="388" width="8" height="15" fill="rgb(237,139,20)"/><text x="639.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="636" y="404" width="8" height="15" fill="rgb(225,9,33)"/><text x="639.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="636" y="420" width="8" height="15" fill="rgb(221,125,6)"/><text x="639.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="636" y="436" width="8" height="15" fill="rgb(210,87,24)"/><text x="639.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="636" y="452" width="8" height="15" fill="rgb(214,26,43)"/><text x="639.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="636" y="468" width="8" height="15" fill="rgb(216,227,42)"/><text x="639.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.33%)</title><rect x="640" y="484" width="4" height="15" fill="rgb(206,55,27)"/><text x="643.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="500" width="4" height="15" fill="rgb(220,184,53)"/><text x="643.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="640" y="516" width="4" height="15" fill="rgb(235,91,48)"/><text x="643.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="640" y="532" width="4" height="15" fill="rgb(216,110,17)"/><text x="643.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="640" y="548" width="4" height="15" fill="rgb(225,183,25)"/><text x="643.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="640" y="564" width="4" height="15" fill="rgb(254,126,12)"/><text x="643.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.33%)</title><rect x="640" y="580" width="4" height="15" fill="rgb(225,142,36)"/><text x="643.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="596" width="4" height="15" fill="rgb(228,197,33)"/><text x="643.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.33%)</title><rect x="640" y="612" width="4" height="15" fill="rgb(230,195,5)"/><text x="643.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="640" y="628" width="4" height="15" fill="rgb(248,44,45)"/><text x="643.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="644" width="4" height="15" fill="rgb(230,84,34)"/><text x="643.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="640" y="660" width="4" height="15" fill="rgb(208,75,19)"/><text x="643.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="640" y="676" width="4" height="15" fill="rgb(205,148,11)"/><text x="643.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="640" y="692" width="4" height="15" fill="rgb(212,192,27)"/><text x="643.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="640" y="708" width="4" height="15" fill="rgb(254,228,4)"/><text x="643.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.33%)</title><rect x="640" y="724" width="4" height="15" fill="rgb(243,79,48)"/><text x="643.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="740" width="4" height="15" fill="rgb(242,201,25)"/><text x="643.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="640" y="756" width="4" height="15" fill="rgb(206,42,10)"/><text x="643.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="640" y="772" width="4" height="15" fill="rgb(251,76,0)"/><text x="643.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="640" y="788" width="4" height="15" fill="rgb(208,89,50)"/><text x="643.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="640" y="804" width="4" height="15" fill="rgb(252,229,12)"/><text x="643.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.33%)</title><rect x="640" y="820" width="4" height="15" fill="rgb(209,200,31)"/><text x="643.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="836" width="4" height="15" fill="rgb(230,219,53)"/><text x="643.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="640" y="852" width="4" height="15" fill="rgb(227,118,28)"/><text x="643.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="640" y="868" width="4" height="15" fill="rgb(217,10,0)"/><text x="643.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="640" y="884" width="4" height="15" fill="rgb(223,21,10)"/><text x="643.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="640" y="900" width="4" height="15" fill="rgb(207,144,7)"/><text x="643.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.33%)</title><rect x="640" y="916" width="4" height="15" fill="rgb(253,77,45)"/><text x="643.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="932" width="4" height="15" fill="rgb(252,0,6)"/><text x="643.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.33%)</title><rect x="640" y="948" width="4" height="15" fill="rgb(233,1,0)"/><text x="643.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="640" y="964" width="4" height="15" fill="rgb(206,119,28)"/><text x="643.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="980" width="4" height="15" fill="rgb(205,203,39)"/><text x="643.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="640" y="996" width="4" height="15" fill="rgb(225,193,30)"/><text x="643.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="640" y="1012" width="4" height="15" fill="rgb(238,108,44)"/><text x="643.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="640" y="1028" width="4" height="15" fill="rgb(233,102,40)"/><text x="643.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="640" y="1044" width="4" height="15" fill="rgb(248,184,18)"/><text x="643.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.33%)</title><rect x="640" y="1060" width="4" height="15" fill="rgb(241,190,51)"/><text x="643.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="640" y="1076" width="4" height="15" fill="rgb(233,200,18)"/><text x="643.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="640" y="1092" width="4" height="15" fill="rgb(231,149,30)"/><text x="643.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="640" y="1108" width="4" height="15" fill="rgb(245,52,32)"/><text x="643.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.33%)</title><rect x="640" y="1124" width="4" height="15" fill="rgb(220,108,46)"/><text x="643.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.33%)</title><rect x="640" y="1140" width="4" height="15" fill="rgb(221,134,32)"/><text x="643.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.33%)</title><rect x="640" y="1156" width="4" height="15" fill="rgb(236,103,25)"/><text x="643.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.99%)</title><rect x="636" y="244" width="12" height="15" fill="rgb(247,126,49)"/><text x="639.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.99%)</title><rect x="636" y="260" width="12" height="15" fill="rgb(219,110,50)"/><text x="639.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.99%)</title><rect x="636" y="276" width="12" height="15" fill="rgb(233,175,47)"/><text x="639.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.99%)</title><rect x="636" y="292" width="12" height="15" fill="rgb(252,61,36)"/><text x="639.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.99%)</title><rect x="636" y="308" width="12" height="15" fill="rgb(214,75,35)"/><text x="639.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.99%)</title><rect x="636" y="324" width="12" height="15" fill="rgb(228,55,3)"/><text x="639.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:54) (1 samples, 0.33%)</title><rect x="644" y="340" width="4" height="15" fill="rgb(230,138,39)"/><text x="647.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="356" width="4" height="15" fill="rgb(209,215,24)"/><text x="647.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.33%)</title><rect x="644" y="372" width="4" height="15" fill="rgb(244,125,53)"/><text x="647.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="388" width="4" height="15" fill="rgb(250,2,31)"/><text x="647.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="404" width="4" height="15" fill="rgb(210,146,3)"/><text x="647.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="644" y="420" width="4" height="15" fill="rgb(225,216,28)"/><text x="647.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="644" y="436" width="4" height="15" fill="rgb(221,103,28)"/><text x="647.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="644" y="452" width="4" height="15" fill="rgb(225,21,3)"/><text x="647.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="468" width="4" height="15" fill="rgb(246,107,32)"/><text x="647.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py:6) (1 samples, 0.33%)</title><rect x="644" y="484" width="4" height="15" fill="rgb(254,46,13)"/><text x="647.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="500" width="4" height="15" fill="rgb(242,221,52)"/><text x="647.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="644" y="516" width="4" height="15" fill="rgb(253,179,43)"/><text x="647.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="644" y="532" width="4" height="15" fill="rgb(248,7,54)"/><text x="647.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="644" y="548" width="4" height="15" fill="rgb(251,82,34)"/><text x="647.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="564" width="4" height="15" fill="rgb(252,21,35)"/><text x="647.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py:9) (1 samples, 0.33%)</title><rect x="644" y="580" width="4" height="15" fill="rgb(254,123,37)"/><text x="647.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="596" width="4" height="15" fill="rgb(252,131,39)"/><text x="647.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="644" y="612" width="4" height="15" fill="rgb(243,49,14)"/><text x="647.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="644" y="628" width="4" height="15" fill="rgb(244,69,17)"/><text x="647.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="644" y="644" width="4" height="15" fill="rgb(214,116,44)"/><text x="647.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="660" width="4" height="15" fill="rgb(227,48,36)"/><text x="647.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py:6) (1 samples, 0.33%)</title><rect x="644" y="676" width="4" height="15" fill="rgb(249,104,15)"/><text x="647.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="692" width="4" height="15" fill="rgb(218,105,3)"/><text x="647.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="644" y="708" width="4" height="15" fill="rgb(246,194,22)"/><text x="647.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="644" y="724" width="4" height="15" fill="rgb(254,180,13)"/><text x="647.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="644" y="740" width="4" height="15" fill="rgb(224,200,34)"/><text x="647.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="756" width="4" height="15" fill="rgb(231,101,12)"/><text x="647.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py:7) (1 samples, 0.33%)</title><rect x="644" y="772" width="4" height="15" fill="rgb(243,142,35)"/><text x="647.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="788" width="4" height="15" fill="rgb(211,189,21)"/><text x="647.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="644" y="804" width="4" height="15" fill="rgb(219,58,3)"/><text x="647.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="644" y="820" width="4" height="15" fill="rgb(240,114,17)"/><text x="647.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="644" y="836" width="4" height="15" fill="rgb(246,29,18)"/><text x="647.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="852" width="4" height="15" fill="rgb(243,219,54)"/><text x="647.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_linear_model.py:8) (1 samples, 0.33%)</title><rect x="644" y="868" width="4" height="15" fill="rgb(226,16,50)"/><text x="647.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="884" width="4" height="15" fill="rgb(244,207,2)"/><text x="647.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.33%)</title><rect x="644" y="900" width="4" height="15" fill="rgb(213,165,16)"/><text x="647.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="916" width="4" height="15" fill="rgb(212,108,30)"/><text x="647.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="932" width="4" height="15" fill="rgb(228,117,36)"/><text x="647.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="644" y="948" width="4" height="15" fill="rgb(229,142,47)"/><text x="647.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="644" y="964" width="4" height="15" fill="rgb(225,200,29)"/><text x="647.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="644" y="980" width="4" height="15" fill="rgb(238,72,54)"/><text x="647.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="996" width="4" height="15" fill="rgb(246,141,24)"/><text x="647.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/__init__.py:6) (1 samples, 0.33%)</title><rect x="644" y="1012" width="4" height="15" fill="rgb(244,106,38)"/><text x="647.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="1028" width="4" height="15" fill="rgb(219,151,9)"/><text x="647.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="644" y="1044" width="4" height="15" fill="rgb(221,43,36)"/><text x="647.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="644" y="1060" width="4" height="15" fill="rgb(244,37,5)"/><text x="647.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="644" y="1076" width="4" height="15" fill="rgb(227,135,33)"/><text x="647.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="644" y="1092" width="4" height="15" fill="rgb(226,169,7)"/><text x="647.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gmlactions.py:5) (1 samples, 0.33%)</title><rect x="644" y="1108" width="4" height="15" fill="rgb(252,143,26)"/><text x="647.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="644" y="1124" width="4" height="15" fill="rgb(242,50,17)"/><text x="647.00" y="1134.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="644" y="1140" width="4" height="15" fill="rgb(222,65,26)"/><text x="647.00" y="1150.50"></text></g><g><title>0x7fdd29ab8554 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="644" y="1156" width="4" height="15" fill="rgb(250,189,32)"/><text x="647.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.33%)</title><rect x="648" y="724" width="4" height="15" fill="rgb(227,103,38)"/><text x="651.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="740" width="4" height="15" fill="rgb(211,213,37)"/><text x="651.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="648" y="756" width="4" height="15" fill="rgb(244,40,13)"/><text x="651.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="648" y="772" width="4" height="15" fill="rgb(221,109,20)"/><text x="651.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="648" y="788" width="4" height="15" fill="rgb(247,86,39)"/><text x="651.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="648" y="804" width="4" height="15" fill="rgb(237,49,19)"/><text x="651.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.33%)</title><rect x="648" y="820" width="4" height="15" fill="rgb(232,223,7)"/><text x="651.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="836" width="4" height="15" fill="rgb(211,25,21)"/><text x="651.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="648" y="852" width="4" height="15" fill="rgb(219,138,29)"/><text x="651.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="648" y="868" width="4" height="15" fill="rgb(254,108,9)"/><text x="651.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="648" y="884" width="4" height="15" fill="rgb(230,58,20)"/><text x="651.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="648" y="900" width="4" height="15" fill="rgb(207,167,8)"/><text x="651.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.33%)</title><rect x="648" y="916" width="4" height="15" fill="rgb(251,109,54)"/><text x="651.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="932" width="4" height="15" fill="rgb(242,142,37)"/><text x="651.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="648" y="948" width="4" height="15" fill="rgb(231,169,26)"/><text x="651.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="648" y="964" width="4" height="15" fill="rgb(232,81,6)"/><text x="651.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="648" y="980" width="4" height="15" fill="rgb(248,73,37)"/><text x="651.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="648" y="996" width="4" height="15" fill="rgb(220,21,38)"/><text x="651.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.33%)</title><rect x="648" y="1012" width="4" height="15" fill="rgb(251,205,45)"/><text x="651.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="1028" width="4" height="15" fill="rgb(254,160,43)"/><text x="651.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="648" y="1044" width="4" height="15" fill="rgb(249,175,44)"/><text x="651.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="648" y="1060" width="4" height="15" fill="rgb(250,40,20)"/><text x="651.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="648" y="1076" width="4" height="15" fill="rgb(213,180,31)"/><text x="651.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="648" y="1092" width="4" height="15" fill="rgb(246,5,3)"/><text x="651.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.33%)</title><rect x="648" y="1108" width="4" height="15" fill="rgb(216,78,4)"/><text x="651.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="1124" width="4" height="15" fill="rgb(226,148,8)"/><text x="651.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="648" y="1140" width="4" height="15" fill="rgb(212,88,16)"/><text x="651.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="648" y="1156" width="4" height="15" fill="rgb(236,160,43)"/><text x="651.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="648" y="1172" width="4" height="15" fill="rgb(217,65,27)"/><text x="651.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="648" y="1188" width="4" height="15" fill="rgb(217,34,26)"/><text x="651.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.33%)</title><rect x="648" y="1204" width="4" height="15" fill="rgb(231,12,10)"/><text x="651.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="1220" width="4" height="15" fill="rgb(243,211,20)"/><text x="651.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="648" y="1236" width="4" height="15" fill="rgb(246,23,39)"/><text x="651.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="648" y="1252" width="4" height="15" fill="rgb(214,28,43)"/><text x="651.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="648" y="1268" width="4" height="15" fill="rgb(234,160,9)"/><text x="651.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="648" y="1284" width="4" height="15" fill="rgb(236,39,1)"/><text x="651.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.33%)</title><rect x="648" y="1300" width="4" height="15" fill="rgb(251,121,30)"/><text x="651.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="1316" width="4" height="15" fill="rgb(232,115,41)"/><text x="651.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="648" y="1332" width="4" height="15" fill="rgb(236,120,49)"/><text x="651.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="648" y="1348" width="4" height="15" fill="rgb(240,216,17)"/><text x="651.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="648" y="1364" width="4" height="15" fill="rgb(214,75,16)"/><text x="651.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="648" y="1380" width="4" height="15" fill="rgb(219,220,32)"/><text x="651.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:19) (1 samples, 0.33%)</title><rect x="648" y="1396" width="4" height="15" fill="rgb(222,156,53)"/><text x="651.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="648" y="1412" width="4" height="15" fill="rgb(238,56,5)"/><text x="651.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.33%)</title><rect x="648" y="1428" width="4" height="15" fill="rgb(235,215,43)"/><text x="651.00" y="1438.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.33%)</title><rect x="648" y="1444" width="4" height="15" fill="rgb(217,115,40)"/><text x="651.00" y="1454.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.33%)</title><rect x="648" y="1460" width="4" height="15" fill="rgb(225,209,36)"/><text x="651.00" y="1470.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.33%)</title><rect x="648" y="1476" width="4" height="15" fill="rgb(237,192,14)"/><text x="651.00" y="1486.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.33%)</title><rect x="648" y="1492" width="4" height="15" fill="rgb(214,74,18)"/><text x="651.00" y="1502.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.33%)</title><rect x="648" y="1508" width="4" height="15" fill="rgb(236,93,9)"/><text x="651.00" y="1518.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.33%)</title><rect x="648" y="1524" width="4" height="15" fill="rgb(225,47,9)"/><text x="651.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.66%)</title><rect x="648" y="436" width="8" height="15" fill="rgb(239,117,53)"/><text x="651.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="648" y="452" width="8" height="15" fill="rgb(234,65,26)"/><text x="651.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="648" y="468" width="8" height="15" fill="rgb(243,179,11)"/><text x="651.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="648" y="484" width="8" height="15" fill="rgb(250,159,6)"/><text x="651.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="648" y="500" width="8" height="15" fill="rgb(216,187,41)"/><text x="651.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="648" y="516" width="8" height="15" fill="rgb(240,114,31)"/><text x="651.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.66%)</title><rect x="648" y="532" width="8" height="15" fill="rgb(243,212,21)"/><text x="651.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="648" y="548" width="8" height="15" fill="rgb(209,171,38)"/><text x="651.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="648" y="564" width="8" height="15" fill="rgb(250,53,0)"/><text x="651.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="648" y="580" width="8" height="15" fill="rgb(247,45,16)"/><text x="651.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="648" y="596" width="8" height="15" fill="rgb(229,209,49)"/><text x="651.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="648" y="612" width="8" height="15" fill="rgb(237,150,1)"/><text x="651.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.66%)</title><rect x="648" y="628" width="8" height="15" fill="rgb(217,27,40)"/><text x="651.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="648" y="644" width="8" height="15" fill="rgb(216,37,33)"/><text x="651.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="648" y="660" width="8" height="15" fill="rgb(208,36,52)"/><text x="651.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="648" y="676" width="8" height="15" fill="rgb(251,80,32)"/><text x="651.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="648" y="692" width="8" height="15" fill="rgb(239,140,29)"/><text x="651.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="648" y="708" width="8" height="15" fill="rgb(223,118,32)"/><text x="651.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.33%)</title><rect x="652" y="724" width="4" height="15" fill="rgb(210,223,30)"/><text x="655.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="652" y="740" width="4" height="15" fill="rgb(207,168,38)"/><text x="655.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.33%)</title><rect x="652" y="756" width="4" height="15" fill="rgb(247,27,1)"/><text x="655.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="652" y="772" width="4" height="15" fill="rgb(209,225,49)"/><text x="655.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="652" y="788" width="4" height="15" fill="rgb(246,188,9)"/><text x="655.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="652" y="804" width="4" height="15" fill="rgb(242,226,29)"/><text x="655.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="652" y="820" width="4" height="15" fill="rgb(219,63,3)"/><text x="655.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="652" y="836" width="4" height="15" fill="rgb(231,140,6)"/><text x="655.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="652" y="852" width="4" height="15" fill="rgb(230,88,12)"/><text x="655.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.33%)</title><rect x="652" y="868" width="4" height="15" fill="rgb(218,88,33)"/><text x="655.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="652" y="884" width="4" height="15" fill="rgb(250,27,3)"/><text x="655.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="652" y="900" width="4" height="15" fill="rgb(232,39,13)"/><text x="655.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="652" y="916" width="4" height="15" fill="rgb(212,201,51)"/><text x="655.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="652" y="932" width="4" height="15" fill="rgb(248,192,17)"/><text x="655.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="652" y="948" width="4" height="15" fill="rgb(245,1,30)"/><text x="655.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:32) (1 samples, 0.33%)</title><rect x="652" y="964" width="4" height="15" fill="rgb(208,224,26)"/><text x="655.00" y="974.50"></text></g><g><title>ExtensionArray (pandas/core/arrays/base.py:889) (1 samples, 0.33%)</title><rect x="652" y="980" width="4" height="15" fill="rgb(247,158,27)"/><text x="655.00" y="990.50"></text></g><g><title>__getitem__ (typing.py:755) (1 samples, 0.33%)</title><rect x="652" y="996" width="4" height="15" fill="rgb(227,161,28)"/><text x="655.00" y="1006.50"></text></g><g><title>inner (typing.py:248) (1 samples, 0.33%)</title><rect x="652" y="1012" width="4" height="15" fill="rgb(208,103,17)"/><text x="655.00" y="1022.50"></text></g><g><title>__getitem_inner__ (typing.py:759) (1 samples, 0.33%)</title><rect x="652" y="1028" width="4" height="15" fill="rgb(242,203,49)"/><text x="655.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.33%)</title><rect x="656" y="1236" width="4" height="15" fill="rgb(222,78,11)"/><text x="659.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="656" y="1252" width="4" height="15" fill="rgb(241,71,29)"/><text x="659.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="656" y="1268" width="4" height="15" fill="rgb(213,153,54)"/><text x="659.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="656" y="1284" width="4" height="15" fill="rgb(209,191,3)"/><text x="659.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="656" y="1300" width="4" height="15" fill="rgb(253,83,14)"/><text x="659.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="656" y="1316" width="4" height="15" fill="rgb(238,119,21)"/><text x="659.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="656" y="1332" width="4" height="15" fill="rgb(214,1,18)"/><text x="659.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="656" y="1348" width="4" height="15" fill="rgb(245,25,28)"/><text x="659.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.33%)</title><rect x="656" y="1364" width="4" height="15" fill="rgb(215,11,38)"/><text x="659.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="656" y="1380" width="4" height="15" fill="rgb(235,32,33)"/><text x="659.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="656" y="1396" width="4" height="15" fill="rgb(243,103,25)"/><text x="659.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="656" y="1412" width="4" height="15" fill="rgb(254,82,46)"/><text x="659.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="656" y="1428" width="4" height="15" fill="rgb(242,190,30)"/><text x="659.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="656" y="1444" width="4" height="15" fill="rgb(244,7,41)"/><text x="659.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.33%)</title><rect x="656" y="1460" width="4" height="15" fill="rgb(237,19,50)"/><text x="659.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.33%)</title><rect x="656" y="1476" width="4" height="15" fill="rgb(232,113,7)"/><text x="659.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:121) (1 samples, 0.33%)</title><rect x="656" y="1492" width="4" height="15" fill="rgb(253,161,4)"/><text x="659.00" y="1502.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:4) (14 samples, 4.62%)</title><rect x="609" y="52" width="55" height="15" fill="rgb(219,96,51)"/><text x="612.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.62%)</title><rect x="609" y="68" width="55" height="15" fill="rgb(229,155,5)"/><text x="612.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.62%)</title><rect x="609" y="84" width="55" height="15" fill="rgb(207,23,36)"/><text x="612.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.62%)</title><rect x="609" y="100" width="55" height="15" fill="rgb(248,106,24)"/><text x="612.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.62%)</title><rect x="609" y="116" width="55" height="15" fill="rgb(209,76,3)"/><text x="612.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.62%)</title><rect x="609" y="132" width="55" height="15" fill="rgb(251,224,24)"/><text x="612.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:7) (7 samples, 2.31%)</title><rect x="636" y="148" width="28" height="15" fill="rgb(221,127,21)"/><text x="639.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.31%)</title><rect x="636" y="164" width="28" height="15" fill="rgb(220,9,28)"/><text x="639.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.31%)</title><rect x="636" y="180" width="28" height="15" fill="rgb(240,149,12)"/><text x="639.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.31%)</title><rect x="636" y="196" width="28" height="15" fill="rgb(231,34,50)"/><text x="639.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.31%)</title><rect x="636" y="212" width="28" height="15" fill="rgb(229,118,49)"/><text x="639.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.31%)</title><rect x="636" y="228" width="28" height="15" fill="rgb(254,79,33)"/><text x="639.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.32%)</title><rect x="648" y="244" width="16" height="15" fill="rgb(220,61,18)"/><text x="651.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="648" y="260" width="16" height="15" fill="rgb(247,87,41)"/><text x="651.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="648" y="276" width="16" height="15" fill="rgb(212,159,5)"/><text x="651.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="648" y="292" width="16" height="15" fill="rgb(205,124,38)"/><text x="651.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="648" y="308" width="16" height="15" fill="rgb(253,196,2)"/><text x="651.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="648" y="324" width="16" height="15" fill="rgb(253,1,8)"/><text x="651.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.32%)</title><rect x="648" y="340" width="16" height="15" fill="rgb(215,84,50)"/><text x="651.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="648" y="356" width="16" height="15" fill="rgb(230,120,7)"/><text x="651.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="648" y="372" width="16" height="15" fill="rgb(222,144,40)"/><text x="651.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="648" y="388" width="16" height="15" fill="rgb(250,97,50)"/><text x="651.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="648" y="404" width="16" height="15" fill="rgb(227,58,35)"/><text x="651.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="648" y="420" width="16" height="15" fill="rgb(239,85,14)"/><text x="651.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.66%)</title><rect x="656" y="436" width="8" height="15" fill="rgb(234,221,37)"/><text x="659.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="452" width="8" height="15" fill="rgb(248,43,54)"/><text x="659.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.66%)</title><rect x="656" y="468" width="8" height="15" fill="rgb(244,13,21)"/><text x="659.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="484" width="8" height="15" fill="rgb(238,116,8)"/><text x="659.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="500" width="8" height="15" fill="rgb(244,205,26)"/><text x="659.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="656" y="516" width="8" height="15" fill="rgb(206,77,44)"/><text x="659.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="656" y="532" width="8" height="15" fill="rgb(244,121,12)"/><text x="659.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="656" y="548" width="8" height="15" fill="rgb(222,147,34)"/><text x="659.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="564" width="8" height="15" fill="rgb(215,208,16)"/><text x="659.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.66%)</title><rect x="656" y="580" width="8" height="15" fill="rgb(239,229,8)"/><text x="659.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="596" width="8" height="15" fill="rgb(205,191,3)"/><text x="659.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="656" y="612" width="8" height="15" fill="rgb(216,97,9)"/><text x="659.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="656" y="628" width="8" height="15" fill="rgb(220,160,14)"/><text x="659.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="656" y="644" width="8" height="15" fill="rgb(208,201,18)"/><text x="659.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="660" width="8" height="15" fill="rgb(223,159,0)"/><text x="659.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.66%)</title><rect x="656" y="676" width="8" height="15" fill="rgb(227,66,53)"/><text x="659.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="692" width="8" height="15" fill="rgb(226,198,33)"/><text x="659.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="656" y="708" width="8" height="15" fill="rgb(248,45,14)"/><text x="659.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="656" y="724" width="8" height="15" fill="rgb(230,131,16)"/><text x="659.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="656" y="740" width="8" height="15" fill="rgb(209,200,45)"/><text x="659.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="756" width="8" height="15" fill="rgb(250,165,3)"/><text x="659.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.66%)</title><rect x="656" y="772" width="8" height="15" fill="rgb(215,17,2)"/><text x="659.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="788" width="8" height="15" fill="rgb(207,70,41)"/><text x="659.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="656" y="804" width="8" height="15" fill="rgb(231,54,2)"/><text x="659.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="656" y="820" width="8" height="15" fill="rgb(212,46,3)"/><text x="659.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="656" y="836" width="8" height="15" fill="rgb(236,193,11)"/><text x="659.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="852" width="8" height="15" fill="rgb(218,107,15)"/><text x="659.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.66%)</title><rect x="656" y="868" width="8" height="15" fill="rgb(238,165,44)"/><text x="659.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="884" width="8" height="15" fill="rgb(251,214,4)"/><text x="659.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.66%)</title><rect x="656" y="900" width="8" height="15" fill="rgb(227,158,31)"/><text x="659.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="916" width="8" height="15" fill="rgb(225,74,13)"/><text x="659.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="932" width="8" height="15" fill="rgb(228,80,21)"/><text x="659.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="656" y="948" width="8" height="15" fill="rgb(224,111,41)"/><text x="659.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="656" y="964" width="8" height="15" fill="rgb(237,194,29)"/><text x="659.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="656" y="980" width="8" height="15" fill="rgb(230,84,7)"/><text x="659.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="996" width="8" height="15" fill="rgb(226,207,29)"/><text x="659.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.66%)</title><rect x="656" y="1012" width="8" height="15" fill="rgb(219,110,30)"/><text x="659.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="1028" width="8" height="15" fill="rgb(232,103,19)"/><text x="659.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="656" y="1044" width="8" height="15" fill="rgb(220,168,3)"/><text x="659.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="656" y="1060" width="8" height="15" fill="rgb(225,149,25)"/><text x="659.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="656" y="1076" width="8" height="15" fill="rgb(226,52,51)"/><text x="659.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="1092" width="8" height="15" fill="rgb(222,134,22)"/><text x="659.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.66%)</title><rect x="656" y="1108" width="8" height="15" fill="rgb(206,129,5)"/><text x="659.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.66%)</title><rect x="656" y="1124" width="8" height="15" fill="rgb(219,92,35)"/><text x="659.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="1140" width="8" height="15" fill="rgb(249,11,21)"/><text x="659.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="656" y="1156" width="8" height="15" fill="rgb(220,107,43)"/><text x="659.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="656" y="1172" width="8" height="15" fill="rgb(219,148,25)"/><text x="659.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="656" y="1188" width="8" height="15" fill="rgb(247,205,42)"/><text x="659.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="656" y="1204" width="8" height="15" fill="rgb(237,76,35)"/><text x="659.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="656" y="1220" width="8" height="15" fill="rgb(211,74,17)"/><text x="659.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:21) (1 samples, 0.33%)</title><rect x="660" y="1236" width="4" height="15" fill="rgb(249,23,9)"/><text x="663.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="660" y="1252" width="4" height="15" fill="rgb(252,72,26)"/><text x="663.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="660" y="1268" width="4" height="15" fill="rgb(221,149,37)"/><text x="663.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="660" y="1284" width="4" height="15" fill="rgb(212,78,25)"/><text x="663.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:964) (1 samples, 0.33%)</title><rect x="660" y="1300" width="4" height="15" fill="rgb(233,135,53)"/><text x="663.00" y="1310.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.33%)</title><rect x="679" y="148" width="4" height="15" fill="rgb(209,90,13)"/><text x="682.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.66%)</title><rect x="683" y="148" width="8" height="15" fill="rgb(247,37,26)"/><text x="686.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.33%)</title><rect x="699" y="164" width="4" height="15" fill="rgb(247,8,7)"/><text x="702.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:448) (1 samples, 0.33%)</title><rect x="703" y="164" width="4" height="15" fill="rgb(233,178,43)"/><text x="706.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.33%)</title><rect x="707" y="164" width="3" height="15" fill="rgb(229,118,40)"/><text x="710.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (11 samples, 3.63%)</title><rect x="718" y="180" width="43" height="15" fill="rgb(207,24,6)"/><text x="721.00" y="190.50">run ..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.33%)</title><rect x="757" y="196" width="4" height="15" fill="rgb(213,138,18)"/><text x="760.00" y="206.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.33%)</title><rect x="788" y="244" width="4" height="15" fill="rgb(223,142,22)"/><text x="791.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.33%)</title><rect x="788" y="260" width="4" height="15" fill="rgb(244,195,29)"/><text x="791.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.33%)</title><rect x="788" y="276" width="4" height="15" fill="rgb(224,42,38)"/><text x="791.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.33%)</title><rect x="788" y="292" width="4" height="15" fill="rgb(222,221,19)"/><text x="791.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.33%)</title><rect x="788" y="308" width="4" height="15" fill="rgb(251,5,4)"/><text x="791.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c:4085) (1 samples, 0.33%)</title><rect x="788" y="324" width="4" height="15" fill="rgb(238,52,22)"/><text x="791.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.33%)</title><rect x="792" y="276" width="4" height="15" fill="rgb(243,69,42)"/><text x="795.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="792" y="292" width="4" height="15" fill="rgb(241,39,46)"/><text x="795.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.33%)</title><rect x="796" y="276" width="4" height="15" fill="rgb(239,198,5)"/><text x="799.00" y="286.50"></text></g><g><title>0x7fdd29ad7120 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="796" y="292" width="4" height="15" fill="rgb(252,25,34)"/><text x="799.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (6 samples, 1.98%)</title><rect x="781" y="212" width="23" height="15" fill="rgb(237,132,7)"/><text x="784.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 1.32%)</title><rect x="788" y="228" width="16" height="15" fill="rgb(235,5,0)"/><text x="791.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.99%)</title><rect x="792" y="244" width="12" height="15" fill="rgb(228,184,46)"/><text x="795.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.99%)</title><rect x="792" y="260" width="12" height="15" fill="rgb(248,204,16)"/><text x="795.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.33%)</title><rect x="800" y="276" width="4" height="15" fill="rgb(247,168,50)"/><text x="803.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.33%)</title><rect x="804" y="212" width="4" height="15" fill="rgb(210,46,27)"/><text x="807.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.33%)</title><rect x="804" y="228" width="4" height="15" fill="rgb(233,1,24)"/><text x="807.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 2.97%)</title><rect x="777" y="196" width="35" height="15" fill="rgb(211,222,9)"/><text x="780.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:167) (1 samples, 0.33%)</title><rect x="808" y="212" width="4" height="15" fill="rgb(215,173,26)"/><text x="811.00" y="222.50"></text></g><g><title>0x7fdceac25c29 (?) (1 samples, 0.33%)</title><rect x="812" y="244" width="4" height="15" fill="rgb(244,126,2)"/><text x="815.00" y="254.50"></text></g><g><title>0x7fdceac2cd9e (?) (1 samples, 0.33%)</title><rect x="812" y="260" width="4" height="15" fill="rgb(223,203,12)"/><text x="815.00" y="270.50"></text></g><g><title>0x7fdceac2cc56 (?) (1 samples, 0.33%)</title><rect x="812" y="276" width="4" height="15" fill="rgb(229,69,54)"/><text x="815.00" y="286.50"></text></g><g><title>0x7fdceac32ac7 (?) (1 samples, 0.33%)</title><rect x="812" y="292" width="4" height="15" fill="rgb(239,193,13)"/><text x="815.00" y="302.50"></text></g><g><title>0x7fdceac3229f (?) (1 samples, 0.33%)</title><rect x="812" y="308" width="4" height="15" fill="rgb(210,207,46)"/><text x="815.00" y="318.50"></text></g><g><title>0x7fdd29c35e71 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="812" y="324" width="4" height="15" fill="rgb(225,167,44)"/><text x="815.00" y="334.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.33%)</title><rect x="816" y="436" width="4" height="15" fill="rgb(249,150,7)"/><text x="819.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.33%)</title><rect x="816" y="452" width="4" height="15" fill="rgb(218,139,26)"/><text x="819.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="816" y="468" width="4" height="15" fill="rgb(234,71,27)"/><text x="819.00" y="478.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (2 samples, 0.66%)</title><rect x="816" y="276" width="7" height="15" fill="rgb(241,207,52)"/><text x="819.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (2 samples, 0.66%)</title><rect x="816" y="292" width="7" height="15" fill="rgb(251,69,38)"/><text x="819.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (2 samples, 0.66%)</title><rect x="816" y="308" width="7" height="15" fill="rgb(234,122,31)"/><text x="819.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (2 samples, 0.66%)</title><rect x="816" y="324" width="7" height="15" fill="rgb(207,111,24)"/><text x="819.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (2 samples, 0.66%)</title><rect x="816" y="340" width="7" height="15" fill="rgb(209,3,46)"/><text x="819.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (2 samples, 0.66%)</title><rect x="816" y="356" width="7" height="15" fill="rgb(244,0,14)"/><text x="819.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (2 samples, 0.66%)</title><rect x="816" y="372" width="7" height="15" fill="rgb(210,7,26)"/><text x="819.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (2 samples, 0.66%)</title><rect x="816" y="388" width="7" height="15" fill="rgb(246,169,1)"/><text x="819.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (2 samples, 0.66%)</title><rect x="816" y="404" width="7" height="15" fill="rgb(229,78,2)"/><text x="819.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (2 samples, 0.66%)</title><rect x="816" y="420" width="7" height="15" fill="rgb(239,191,18)"/><text x="819.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.33%)</title><rect x="820" y="436" width="3" height="15" fill="rgb(226,142,51)"/><text x="823.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.33%)</title><rect x="820" y="452" width="3" height="15" fill="rgb(240,211,0)"/><text x="823.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.33%)</title><rect x="820" y="468" width="3" height="15" fill="rgb(254,103,8)"/><text x="823.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.33%)</title><rect x="820" y="484" width="3" height="15" fill="rgb(205,100,34)"/><text x="823.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.33%)</title><rect x="820" y="500" width="3" height="15" fill="rgb(251,208,2)"/><text x="823.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.33%)</title><rect x="820" y="516" width="3" height="15" fill="rgb(242,172,2)"/><text x="823.00" y="526.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.33%)</title><rect x="820" y="532" width="3" height="15" fill="rgb(237,35,51)"/><text x="823.00" y="542.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.33%)</title><rect x="820" y="548" width="3" height="15" fill="rgb(227,27,49)"/><text x="823.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:240) (2 samples, 0.66%)</title><rect x="823" y="420" width="8" height="15" fill="rgb(252,203,7)"/><text x="826.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.33%)</title><rect x="827" y="436" width="4" height="15" fill="rgb(231,229,19)"/><text x="830.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_default_append (vector.tcc:540) (1 samples, 0.33%)</title><rect x="827" y="452" width="4" height="15" fill="rgb(240,144,49)"/><text x="830.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:390) (1 samples, 0.33%)</title><rect x="831" y="452" width="4" height="15" fill="rgb(219,193,2)"/><text x="834.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.33%)</title><rect x="831" y="468" width="4" height="15" fill="rgb(253,226,25)"/><text x="834.00" y="478.50"></text></g><g><title>0x7fdd29ab6d07 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="831" y="484" width="4" height="15" fill="rgb(223,204,6)"/><text x="834.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (1 samples, 0.33%)</title><rect x="835" y="468" width="4" height="15" fill="rgb(227,89,14)"/><text x="838.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:289) (1 samples, 0.33%)</title><rect x="839" y="468" width="4" height="15" fill="rgb(206,155,51)"/><text x="842.00" y="478.50"></text></g><g><title>0x7fdceac152b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="839" y="484" width="4" height="15" fill="rgb(230,210,53)"/><text x="842.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (10 samples, 3.30%)</title><rect x="835" y="452" width="39" height="15" fill="rgb(233,210,18)"/><text x="838.00" y="462.50">Run..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:290) (8 samples, 2.64%)</title><rect x="843" y="468" width="31" height="15" fill="rgb(230,143,49)"/><text x="846.00" y="478.50">Ru..</text></g><g><title>tanhf32x (libm-2.29.so) (8 samples, 2.64%)</title><rect x="843" y="484" width="31" height="15" fill="rgb(232,205,17)"/><text x="846.00" y="494.50">ta..</text></g><g><title>expm1f64 (libm-2.29.so) (7 samples, 2.31%)</title><rect x="847" y="500" width="27" height="15" fill="rgb(236,24,29)"/><text x="850.00" y="510.50">e..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (1 samples, 0.33%)</title><rect x="874" y="452" width="4" height="15" fill="rgb(208,12,29)"/><text x="877.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (1 samples, 0.33%)</title><rect x="878" y="452" width="4" height="15" fill="rgb(219,181,2)"/><text x="881.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (1 samples, 0.33%)</title><rect x="878" y="468" width="4" height="15" fill="rgb(240,13,31)"/><text x="881.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (1 samples, 0.33%)</title><rect x="878" y="484" width="4" height="15" fill="rgb(205,187,9)"/><text x="881.00" y="494.50"></text></g><g><title>0x7fdd29c35e71 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="878" y="500" width="4" height="15" fill="rgb(218,84,42)"/><text x="881.00" y="510.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (14 samples, 4.62%)</title><rect x="831" y="436" width="55" height="15" fill="rgb(248,70,2)"/><text x="834.00" y="446.50">pybin..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (1 samples, 0.33%)</title><rect x="882" y="452" width="4" height="15" fill="rgb(242,123,44)"/><text x="885.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.33%)</title><rect x="882" y="468" width="4" height="15" fill="rgb(247,40,39)"/><text x="885.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (1 samples, 0.33%)</title><rect x="882" y="484" width="4" height="15" fill="rgb(234,55,14)"/><text x="885.00" y="494.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (19 samples, 6.27%)</title><rect x="816" y="244" width="74" height="15" fill="rgb(230,154,46)"/><text x="819.00" y="254.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (19 samples, 6.27%)</title><rect x="816" y="260" width="74" height="15" fill="rgb(227,137,9)"/><text x="819.00" y="270.50">void pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (17 samples, 5.61%)</title><rect x="823" y="276" width="67" height="15" fill="rgb(222,94,54)"/><text x="826.00" y="286.50">void py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (17 samples, 5.61%)</title><rect x="823" y="292" width="67" height="15" fill="rgb(228,126,16)"/><text x="826.00" y="302.50">pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (17 samples, 5.61%)</title><rect x="823" y="308" width="67" height="15" fill="rgb(233,12,39)"/><text x="826.00" y="318.50">pybind1..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (17 samples, 5.61%)</title><rect x="823" y="324" width="67" height="15" fill="rgb(242,112,7)"/><text x="826.00" y="334.50">pybind1..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (17 samples, 5.61%)</title><rect x="823" y="340" width="67" height="15" fill="rgb(219,51,13)"/><text x="826.00" y="350.50">pybind1..</text></g><g><title>pybind11::array::~array (numpy.h:538) (17 samples, 5.61%)</title><rect x="823" y="356" width="67" height="15" fill="rgb(248,85,46)"/><text x="826.00" y="366.50">pybind1..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (17 samples, 5.61%)</title><rect x="823" y="372" width="67" height="15" fill="rgb(237,135,19)"/><text x="826.00" y="382.50">pybind1..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (17 samples, 5.61%)</title><rect x="823" y="388" width="67" height="15" fill="rgb(245,178,32)"/><text x="826.00" y="398.50">pybind1..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (17 samples, 5.61%)</title><rect x="823" y="404" width="67" height="15" fill="rgb(230,28,16)"/><text x="826.00" y="414.50">pybind1..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (15 samples, 4.95%)</title><rect x="831" y="420" width="59" height="15" fill="rgb(248,171,43)"/><text x="834.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1986) (1 samples, 0.33%)</title><rect x="886" y="436" width="4" height="15" fill="rgb(209,172,12)"/><text x="889.00" y="446.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="886" y="452" width="4" height="15" fill="rgb(227,27,11)"/><text x="889.00" y="462.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (21 samples, 6.93%)</title><rect x="812" y="228" width="82" height="15" fill="rgb(248,13,15)"/><text x="815.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pytypes.h:197) (1 samples, 0.33%)</title><rect x="890" y="244" width="4" height="15" fill="rgb(231,176,31)"/><text x="893.00" y="254.50"></text></g><g><title>0x7fdd29ab69b7 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="890" y="260" width="4" height="15" fill="rgb(222,133,14)"/><text x="893.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:60) (1 samples, 0.33%)</title><rect x="894" y="228" width="3" height="15" fill="rgb(245,214,7)"/><text x="897.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (24 samples, 7.92%)</title><rect x="812" y="196" width="93" height="15" fill="rgb(218,81,15)"/><text x="815.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 7.92%)</title><rect x="812" y="212" width="93" height="15" fill="rgb(249,166,29)"/><text x="815.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (2 samples, 0.66%)</title><rect x="897" y="228" width="8" height="15" fill="rgb(217,68,47)"/><text x="900.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.33%)</title><rect x="901" y="244" width="4" height="15" fill="rgb(220,176,39)"/><text x="904.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.33%)</title><rect x="901" y="260" width="4" height="15" fill="rgb(232,114,6)"/><text x="904.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.33%)</title><rect x="901" y="276" width="4" height="15" fill="rgb(248,106,9)"/><text x="904.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.33%)</title><rect x="901" y="292" width="4" height="15" fill="rgb(215,218,4)"/><text x="904.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (38 samples, 12.54%)</title><rect x="761" y="180" width="148" height="15" fill="rgb(227,117,2)"/><text x="764.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.33%)</title><rect x="905" y="196" width="4" height="15" fill="rgb(238,87,25)"/><text x="908.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.99%)</title><rect x="909" y="180" width="12" height="15" fill="rgb(227,221,12)"/><text x="912.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (55 samples, 18.15%)</title><rect x="710" y="164" width="215" height="15" fill="rgb(240,112,34)"/><text x="713.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.33%)</title><rect x="921" y="180" width="4" height="15" fill="rgb(214,132,12)"/><text x="924.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.32%)</title><rect x="925" y="164" width="15" height="15" fill="rgb(226,190,39)"/><text x="928.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.66%)</title><rect x="932" y="180" width="8" height="15" fill="rgb(220,58,2)"/><text x="935.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.33%)</title><rect x="940" y="164" width="4" height="15" fill="rgb(232,193,21)"/><text x="943.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:45) (73 samples, 24.09%)</title><rect x="664" y="52" width="284" height="15" fill="rgb(238,189,38)"/><text x="667.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl_proba..</text></g><g><title>profile_pyrt (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:44) (73 samples, 24.09%)</title><rect x="664" y="68" width="284" height="15" fill="rgb(250,94,1)"/><text x="667.00" y="78.50">profile_pyrt (bench_SVC_sigmoid_b_cl_p..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:29) (73 samples, 24.09%)</title><rect x="664" y="84" width="284" height="15" fill="rgb(226,119,15)"/><text x="667.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:23) (73 samples, 24.09%)</title><rect x="664" y="100" width="284" height="15" fill="rgb(234,202,1)"/><text x="667.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probab..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (71 samples, 23.43%)</title><rect x="672" y="116" width="276" height="15" fill="rgb(239,209,23)"/><text x="675.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (71 samples, 23.43%)</title><rect x="672" y="132" width="276" height="15" fill="rgb(253,156,6)"/><text x="675.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (66 samples, 21.78%)</title><rect x="691" y="148" width="257" height="15" fill="rgb(209,118,43)"/><text x="694.00" y="158.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.33%)</title><rect x="944" y="164" width="4" height="15" fill="rgb(211,41,11)"/><text x="947.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.33%)</title><rect x="944" y="180" width="4" height="15" fill="rgb(220,89,23)"/><text x="947.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.33%)</title><rect x="944" y="196" width="4" height="15" fill="rgb(228,92,43)"/><text x="947.00" y="206.50"></text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:28) (1 samples, 0.33%)</title><rect x="948" y="84" width="4" height="15" fill="rgb(233,197,10)"/><text x="951.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.33%)</title><rect x="948" y="100" width="4" height="15" fill="rgb(248,32,49)"/><text x="951.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.33%)</title><rect x="948" y="116" width="4" height="15" fill="rgb(235,16,37)"/><text x="951.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.33%)</title><rect x="948" y="132" width="4" height="15" fill="rgb(238,86,26)"/><text x="951.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.33%)</title><rect x="948" y="148" width="4" height="15" fill="rgb(226,124,41)"/><text x="951.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.33%)</title><rect x="948" y="164" width="4" height="15" fill="rgb(244,41,44)"/><text x="951.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.33%)</title><rect x="948" y="180" width="4" height="15" fill="rgb(217,224,0)"/><text x="951.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.33%)</title><rect x="948" y="196" width="4" height="15" fill="rgb(241,86,35)"/><text x="951.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.33%)</title><rect x="948" y="212" width="4" height="15" fill="rgb(241,221,17)"/><text x="951.00" y="222.50"></text></g><g><title>0x7fdce9ae6ff9 (?) (1 samples, 0.33%)</title><rect x="948" y="228" width="4" height="15" fill="rgb(217,192,29)"/><text x="951.00" y="238.50"></text></g><g><title>0x7fdce9ae157e (?) (1 samples, 0.33%)</title><rect x="948" y="244" width="4" height="15" fill="rgb(232,202,33)"/><text x="951.00" y="254.50"></text></g><g><title>0x7fdce9b0e426 (?) (1 samples, 0.33%)</title><rect x="948" y="260" width="4" height="15" fill="rgb(218,149,14)"/><text x="951.00" y="270.50"></text></g><g><title>0x7fdce9f320b2 (?) (1 samples, 0.33%)</title><rect x="948" y="276" width="4" height="15" fill="rgb(223,96,32)"/><text x="951.00" y="286.50"></text></g><g><title>0x7fdce9b879fc (?) (1 samples, 0.33%)</title><rect x="948" y="292" width="4" height="15" fill="rgb(232,72,48)"/><text x="951.00" y="302.50"></text></g><g><title>0x7fdce9b876a4 (?) (1 samples, 0.33%)</title><rect x="948" y="308" width="4" height="15" fill="rgb(247,154,10)"/><text x="951.00" y="318.50"></text></g><g><title>0x7fdce9b871c1 (?) (1 samples, 0.33%)</title><rect x="948" y="324" width="4" height="15" fill="rgb(230,43,14)"/><text x="951.00" y="334.50"></text></g><g><title>0x7fdce9f2ad34 (?) (1 samples, 0.33%)</title><rect x="948" y="340" width="4" height="15" fill="rgb(235,207,46)"/><text x="951.00" y="350.50"></text></g><g><title>0x7fdce9f2a6dc (?) (1 samples, 0.33%)</title><rect x="948" y="356" width="4" height="15" fill="rgb(251,187,34)"/><text x="951.00" y="366.50"></text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:18) (1 samples, 0.33%)</title><rect x="952" y="100" width="4" height="15" fill="rgb(246,13,32)"/><text x="955.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.33%)</title><rect x="952" y="116" width="4" height="15" fill="rgb(231,227,4)"/><text x="955.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.33%)</title><rect x="952" y="132" width="4" height="15" fill="rgb(221,201,30)"/><text x="955.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.33%)</title><rect x="952" y="148" width="4" height="15" fill="rgb(230,106,26)"/><text x="955.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.33%)</title><rect x="952" y="164" width="4" height="15" fill="rgb(226,154,24)"/><text x="955.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.33%)</title><rect x="979" y="148" width="4" height="15" fill="rgb(215,196,6)"/><text x="982.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (4 samples, 1.32%)</title><rect x="991" y="196" width="15" height="15" fill="rgb(214,10,39)"/><text x="994.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.99%)</title><rect x="995" y="212" width="11" height="15" fill="rgb(248,181,4)"/><text x="998.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="1034" y="260" width="4" height="15" fill="rgb(208,209,24)"/><text x="1037.00" y="270.50"></text></g><g><title>0x7fdd29ab7b12 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1038" y="340" width="4" height="15" fill="rgb(227,133,15)"/><text x="1041.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.66%)</title><rect x="1038" y="308" width="7" height="15" fill="rgb(245,187,14)"/><text x="1041.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.66%)</title><rect x="1038" y="324" width="7" height="15" fill="rgb(218,178,54)"/><text x="1041.00" y="334.50"></text></g><g><title>0x7fdd29ab800a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1042" y="340" width="3" height="15" fill="rgb(232,57,5)"/><text x="1045.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.99%)</title><rect x="1038" y="292" width="11" height="15" fill="rgb(253,211,34)"/><text x="1041.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1045" y="308" width="4" height="15" fill="rgb(218,19,10)"/><text x="1048.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="1045" y="324" width="4" height="15" fill="rgb(236,124,4)"/><text x="1048.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1049" y="292" width="4" height="15" fill="rgb(227,132,11)"/><text x="1052.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1053" y="292" width="4" height="15" fill="rgb(240,6,19)"/><text x="1056.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="1053" y="308" width="4" height="15" fill="rgb(243,106,50)"/><text x="1056.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1061" y="356" width="4" height="15" fill="rgb(206,211,36)"/><text x="1064.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.99%)</title><rect x="1057" y="340" width="12" height="15" fill="rgb(209,7,32)"/><text x="1060.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="356" width="4" height="15" fill="rgb(234,47,17)"/><text x="1068.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="372" width="4" height="15" fill="rgb(217,137,49)"/><text x="1068.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="388" width="4" height="15" fill="rgb(242,135,48)"/><text x="1068.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="404" width="4" height="15" fill="rgb(220,139,14)"/><text x="1068.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="420" width="4" height="15" fill="rgb(214,151,13)"/><text x="1068.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="436" width="4" height="15" fill="rgb(243,50,35)"/><text x="1068.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="452" width="4" height="15" fill="rgb(208,108,47)"/><text x="1068.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="468" width="4" height="15" fill="rgb(248,133,20)"/><text x="1068.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="484" width="4" height="15" fill="rgb(241,88,25)"/><text x="1068.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1065" y="500" width="4" height="15" fill="rgb(211,229,44)"/><text x="1068.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1069" y="356" width="4" height="15" fill="rgb(235,48,2)"/><text x="1072.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="1069" y="372" width="4" height="15" fill="rgb(221,91,47)"/><text x="1072.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="1073" y="356" width="7" height="15" fill="rgb(242,171,49)"/><text x="1076.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="1073" y="372" width="7" height="15" fill="rgb(242,162,0)"/><text x="1076.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1077" y="388" width="3" height="15" fill="rgb(212,161,0)"/><text x="1080.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.32%)</title><rect x="1069" y="340" width="15" height="15" fill="rgb(223,219,10)"/><text x="1072.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1080" y="356" width="4" height="15" fill="rgb(254,172,5)"/><text x="1083.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1084" y="340" width="4" height="15" fill="rgb(216,32,39)"/><text x="1087.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1084" y="356" width="4" height="15" fill="rgb(249,77,23)"/><text x="1087.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1084" y="372" width="4" height="15" fill="rgb(228,141,27)"/><text x="1087.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1084" y="388" width="4" height="15" fill="rgb(208,187,48)"/><text x="1087.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1084" y="404" width="4" height="15" fill="rgb(208,161,48)"/><text x="1087.00" y="414.50"></text></g><g><title>0x7fdd29ab691c (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1084" y="420" width="4" height="15" fill="rgb(213,141,17)"/><text x="1087.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1108" y="356" width="4" height="15" fill="rgb(219,73,47)"/><text x="1111.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1108" y="372" width="4" height="15" fill="rgb(220,134,46)"/><text x="1111.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1108" y="388" width="4" height="15" fill="rgb(228,20,5)"/><text x="1111.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1108" y="404" width="4" height="15" fill="rgb(240,191,42)"/><text x="1111.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1108" y="420" width="4" height="15" fill="rgb(252,215,32)"/><text x="1111.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1108" y="436" width="4" height="15" fill="rgb(221,195,46)"/><text x="1111.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1108" y="452" width="4" height="15" fill="rgb(231,72,5)"/><text x="1111.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="1108" y="468" width="4" height="15" fill="rgb(231,136,36)"/><text x="1111.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1108" y="484" width="4" height="15" fill="rgb(221,70,46)"/><text x="1111.00" y="494.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1112" y="356" width="4" height="15" fill="rgb(209,79,44)"/><text x="1115.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1112" y="372" width="4" height="15" fill="rgb(239,113,10)"/><text x="1115.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="1112" y="388" width="4" height="15" fill="rgb(236,44,14)"/><text x="1115.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1112" y="404" width="4" height="15" fill="rgb(239,38,4)"/><text x="1115.00" y="414.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1116" y="356" width="3" height="15" fill="rgb(239,100,26)"/><text x="1119.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="1116" y="372" width="3" height="15" fill="rgb(221,41,25)"/><text x="1119.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1116" y="388" width="3" height="15" fill="rgb(209,149,48)"/><text x="1119.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 8.25%)</title><rect x="1038" y="276" width="97" height="15" fill="rgb(220,79,20)"/><text x="1041.00" y="286.50">onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 6.60%)</title><rect x="1057" y="292" width="78" height="15" fill="rgb(231,213,31)"/><text x="1060.00" y="302.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 6.60%)</title><rect x="1057" y="308" width="78" height="15" fill="rgb(206,179,13)"/><text x="1060.00" y="318.50">onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 6.60%)</title><rect x="1057" y="324" width="78" height="15" fill="rgb(234,55,48)"/><text x="1060.00" y="334.50">onnxrunti..</text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.96%)</title><rect x="1088" y="340" width="47" height="15" fill="rgb(242,22,34)"/><text x="1091.00" y="350.50">onnx..</text></g><g><title>tanhf32x (libm-2.29.so) (4 samples, 1.32%)</title><rect x="1119" y="356" width="16" height="15" fill="rgb(252,212,29)"/><text x="1122.00" y="366.50"></text></g><g><title>expm1f64 (libm-2.29.so) (3 samples, 0.99%)</title><rect x="1123" y="372" width="12" height="15" fill="rgb(229,152,40)"/><text x="1126.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 8.58%)</title><rect x="1038" y="260" width="101" height="15" fill="rgb(206,173,14)"/><text x="1041.00" y="270.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1135" y="276" width="4" height="15" fill="rgb(216,166,20)"/><text x="1138.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="1139" y="260" width="8" height="15" fill="rgb(225,224,52)"/><text x="1142.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1143" y="276" width="4" height="15" fill="rgb(249,228,25)"/><text x="1146.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1143" y="292" width="4" height="15" fill="rgb(230,182,18)"/><text x="1146.00" y="302.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1147" y="260" width="4" height="15" fill="rgb(225,106,42)"/><text x="1150.00" y="270.50"></text></g><g><title>0x7fdd29ab6945 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1151" y="276" width="3" height="15" fill="rgb(212,220,42)"/><text x="1154.00" y="286.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1154" y="308" width="4" height="15" fill="rgb(251,72,51)"/><text x="1157.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1154" y="324" width="4" height="15" fill="rgb(235,66,17)"/><text x="1157.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1154" y="340" width="4" height="15" fill="rgb(250,151,29)"/><text x="1157.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1154" y="356" width="4" height="15" fill="rgb(208,179,17)"/><text x="1157.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1154" y="372" width="4" height="15" fill="rgb(228,33,15)"/><text x="1157.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="1154" y="276" width="8" height="15" fill="rgb(231,37,44)"/><text x="1157.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="1154" y="292" width="8" height="15" fill="rgb(219,80,49)"/><text x="1157.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1158" y="308" width="4" height="15" fill="rgb(224,216,14)"/><text x="1161.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 11.88%)</title><rect x="1026" y="244" width="140" height="15" fill="rgb(225,137,11)"/><text x="1029.00" y="254.50">onnxruntime::pyth..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.32%)</title><rect x="1151" y="260" width="15" height="15" fill="rgb(223,213,21)"/><text x="1154.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1162" y="276" width="4" height="15" fill="rgb(208,156,23)"/><text x="1165.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (50 samples, 16.50%)</title><rect x="983" y="164" width="195" height="15" fill="rgb(236,152,26)"/><text x="986.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (50 samples, 16.50%)</title><rect x="983" y="180" width="195" height="15" fill="rgb(248,31,17)"/><text x="986.00" y="190.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (onnxruntime/capi/session.py:136) (44 samples, 14.52%)</title><rect x="1006" y="196" width="172" height="15" fill="rgb(252,120,20)"/><text x="1009.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (40 samples, 13.20%)</title><rect x="1022" y="212" width="156" height="15" fill="rgb(210,163,31)"/><text x="1025.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (40 samples, 13.20%)</title><rect x="1022" y="228" width="156" height="15" fill="rgb(247,102,40)"/><text x="1025.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.99%)</title><rect x="1166" y="244" width="12" height="15" fill="rgb(241,6,41)"/><text x="1169.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1174" y="260" width="4" height="15" fill="rgb(241,228,51)"/><text x="1177.00" y="270.50"></text></g><g><title>all (303 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(228,158,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:52) (62 samples, 20.46%)</title><rect x="948" y="52" width="242" height="15" fill="rgb(225,132,9)"/><text x="951.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl..</text></g><g><title>profile_ort (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:51) (62 samples, 20.46%)</title><rect x="948" y="68" width="242" height="15" fill="rgb(238,163,7)"/><text x="951.00" y="78.50">profile_ort (bench_SVC_sigmoid_b..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:29) (61 samples, 20.13%)</title><rect x="952" y="84" width="238" height="15" fill="rgb(233,192,38)"/><text x="955.00" y="94.50">setup_profile (bench_SVC_sigmoi..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py:23) (60 samples, 19.80%)</title><rect x="956" y="100" width="234" height="15" fill="rgb(224,148,6)"/><text x="959.00" y="110.50">profile (bench_SVC_sigmoid_b_cl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (59 samples, 19.47%)</title><rect x="960" y="116" width="230" height="15" fill="rgb(254,0,47)"/><text x="963.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (55 samples, 18.15%)</title><rect x="975" y="132" width="215" height="15" fill="rgb(226,201,51)"/><text x="978.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (53 samples, 17.49%)</title><rect x="983" y="148" width="207" height="15" fill="rgb(226,213,37)"/><text x="986.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.99%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(252,205,54)"/><text x="1181.00" y="174.50"></text></g></g></svg>