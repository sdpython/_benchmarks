<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>0x7f3202ba93fd (?) (1 samples, 0.12%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(229,83,37)"/><text x="13.00" y="190.50"></text></g><g><title>0x7f3202ba7553 (?) (1 samples, 0.12%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(205,145,9)"/><text x="13.00" y="206.50"></text></g><g><title>0x7f3202ba2a09 (?) (1 samples, 0.12%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(211,193,0)"/><text x="13.00" y="222.50"></text></g><g><title>0x7f3202bb5283 (?) (1 samples, 0.12%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(214,0,39)"/><text x="13.00" y="238.50"></text></g><g><title>0x7f3202bb4e11 (?) (1 samples, 0.12%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(254,229,12)"/><text x="13.00" y="254.50"></text></g><g><title>tanhf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(211,194,0)"/><text x="13.00" y="270.50"></text></g><g><title>expm1f64 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(207,78,44)"/><text x="13.00" y="286.50"></text></g><g><title>0x7f3202b8a6b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="16" y="276" width="3" height="15" fill="rgb(218,180,21)"/><text x="19.00" y="286.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="16" y="260" width="4" height="15" fill="rgb(240,2,17)"/><text x="19.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="19" y="276" width="1" height="15" fill="rgb(219,159,44)"/><text x="22.00" y="286.50"></text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:18) (47 samples, 5.45%)</title><rect x="10" y="100" width="64" height="15" fill="rgb(218,122,21)"/><text x="13.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (47 samples, 5.45%)</title><rect x="10" y="116" width="64" height="15" fill="rgb(235,100,12)"/><text x="13.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (47 samples, 5.45%)</title><rect x="10" y="132" width="64" height="15" fill="rgb(217,197,40)"/><text x="13.00" y="142.50">&lt;lambda..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (47 samples, 5.45%)</title><rect x="10" y="148" width="64" height="15" fill="rgb(250,121,25)"/><text x="13.00" y="158.50">_predic..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (47 samples, 5.45%)</title><rect x="10" y="164" width="64" height="15" fill="rgb(243,192,31)"/><text x="13.00" y="174.50">_dense_..</text></g><g><title>0x7f3202ba93fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (46 samples, 5.33%)</title><rect x="11" y="180" width="63" height="15" fill="rgb(220,37,26)"/><text x="14.00" y="190.50">0x7f32..</text></g><g><title>0x7f3202ba7553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (46 samples, 5.33%)</title><rect x="11" y="196" width="63" height="15" fill="rgb(221,172,53)"/><text x="14.00" y="206.50">0x7f32..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (46 samples, 5.33%)</title><rect x="11" y="212" width="63" height="15" fill="rgb(245,191,17)"/><text x="14.00" y="222.50">copy_p..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (46 samples, 5.33%)</title><rect x="11" y="228" width="63" height="15" fill="rgb(219,215,13)"/><text x="14.00" y="238.50">svm_pr..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (44 samples, 5.10%)</title><rect x="14" y="244" width="60" height="15" fill="rgb(247,87,30)"/><text x="17.00" y="254.50">svm_pr..</text></g><g><title>tanhf32x (libm-2.29.so) (39 samples, 4.52%)</title><rect x="20" y="260" width="54" height="15" fill="rgb(207,17,19)"/><text x="23.00" y="270.50">tanhf..</text></g><g><title>expm1f64 (libm-2.29.so) (24 samples, 2.78%)</title><rect x="41" y="276" width="33" height="15" fill="rgb(249,166,30)"/><text x="44.00" y="286.50">ex..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.12%)</title><rect x="74" y="148" width="1" height="15" fill="rgb(205,99,12)"/><text x="77.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (1 samples, 0.12%)</title><rect x="74" y="164" width="1" height="15" fill="rgb(254,184,46)"/><text x="77.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.12%)</title><rect x="74" y="180" width="1" height="15" fill="rgb(205,73,42)"/><text x="77.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.12%)</title><rect x="74" y="196" width="1" height="15" fill="rgb(209,2,2)"/><text x="77.00" y="206.50"></text></g><g><title>0x7f32280b8be4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="90" y="244" width="2" height="15" fill="rgb(205,144,48)"/><text x="93.00" y="254.50"></text></g><g><title>0x7f32280b8d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="92" y="244" width="1" height="15" fill="rgb(228,116,43)"/><text x="95.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.12%)</title><rect x="93" y="244" width="1" height="15" fill="rgb(238,62,40)"/><text x="96.00" y="254.50"></text></g><g><title>0x7f32280b9f0a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="98" y="260" width="2" height="15" fill="rgb(210,141,32)"/><text x="101.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.58%)</title><rect x="94" y="244" width="7" height="15" fill="rgb(252,52,30)"/><text x="97.00" y="254.50"></text></g><g><title>0x7f32280ba00a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="100" y="260" width="1" height="15" fill="rgb(250,113,10)"/><text x="103.00" y="270.50"></text></g><g><title>0x7f32280b895e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="118" y="260" width="1" height="15" fill="rgb(242,116,6)"/><text x="121.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="119" y="260" width="1" height="15" fill="rgb(234,63,49)"/><text x="122.00" y="270.50"></text></g><g><title>0x7f3202b8a6b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="130" y="276" width="3" height="15" fill="rgb(231,151,48)"/><text x="133.00" y="286.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (22 samples, 2.55%)</title><rect x="120" y="260" width="30" height="15" fill="rgb(219,187,49)"/><text x="123.00" y="270.50">sv..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.51%)</title><rect x="133" y="276" width="17" height="15" fill="rgb(245,172,17)"/><text x="136.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:38) (242 samples, 28.04%)</title><rect x="10" y="52" width="330" height="15" fill="rgb(205,45,54)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_m_cl_probability..</text></g><g><title>profile_skl (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:37) (242 samples, 28.04%)</title><rect x="10" y="68" width="330" height="15" fill="rgb(225,180,33)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_sigmoid_m_cl_probabil..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:29) (242 samples, 28.04%)</title><rect x="10" y="84" width="330" height="15" fill="rgb(218,132,30)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_probab..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:23) (195 samples, 22.60%)</title><rect x="74" y="100" width="266" height="15" fill="rgb(215,150,27)"/><text x="77.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (195 samples, 22.60%)</title><rect x="74" y="116" width="266" height="15" fill="rgb(206,130,29)"/><text x="77.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (195 samples, 22.60%)</title><rect x="74" y="132" width="266" height="15" fill="rgb(227,10,39)"/><text x="77.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/c..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (194 samples, 22.48%)</title><rect x="75" y="148" width="265" height="15" fill="rgb(246,154,52)"/><text x="78.00" y="158.50">_predict_proba (sklearn/svm/_base.p..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (194 samples, 22.48%)</title><rect x="75" y="164" width="265" height="15" fill="rgb(218,157,32)"/><text x="78.00" y="174.50">_dense_predict_proba (sklearn/svm/_..</text></g><g><title>0x7f3202ba93fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 22.48%)</title><rect x="75" y="180" width="265" height="15" fill="rgb(234,51,54)"/><text x="78.00" y="190.50">0x7f3202ba93fd (sklearn/svm/_libsvm..</text></g><g><title>0x7f3202ba7553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 22.48%)</title><rect x="75" y="196" width="265" height="15" fill="rgb(241,61,27)"/><text x="78.00" y="206.50">0x7f3202ba7553 (sklearn/svm/_libsvm..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 22.48%)</title><rect x="75" y="212" width="265" height="15" fill="rgb(232,156,54)"/><text x="78.00" y="222.50">copy_predict_proba (sklearn/svm/_li..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 22.48%)</title><rect x="75" y="228" width="265" height="15" fill="rgb(244,220,10)"/><text x="78.00" y="238.50">svm_predict_probability (sklearn/sv..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (175 samples, 20.28%)</title><rect x="101" y="244" width="239" height="15" fill="rgb(238,194,12)"/><text x="104.00" y="254.50">svm_predict_values (sklearn/svm..</text></g><g><title>tanhf32x (libm-2.29.so) (139 samples, 16.11%)</title><rect x="150" y="260" width="190" height="15" fill="rgb(206,139,20)"/><text x="153.00" y="270.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (103 samples, 11.94%)</title><rect x="200" y="276" width="140" height="15" fill="rgb(219,34,25)"/><text x="203.00" y="286.50">expm1f64 (libm-2...</text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.12%)</title><rect x="340" y="340" width="2" height="15" fill="rgb(221,215,49)"/><text x="343.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="340" y="356" width="2" height="15" fill="rgb(236,180,7)"/><text x="343.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="340" y="372" width="2" height="15" fill="rgb(214,216,53)"/><text x="343.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="340" y="388" width="2" height="15" fill="rgb(207,116,52)"/><text x="343.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="340" y="404" width="2" height="15" fill="rgb(217,92,23)"/><text x="343.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="340" y="420" width="2" height="15" fill="rgb(238,5,27)"/><text x="343.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:59) (1 samples, 0.12%)</title><rect x="340" y="436" width="2" height="15" fill="rgb(232,195,54)"/><text x="343.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="340" y="452" width="2" height="15" fill="rgb(208,222,48)"/><text x="343.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="340" y="468" width="2" height="15" fill="rgb(235,29,45)"/><text x="343.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="340" y="484" width="2" height="15" fill="rgb(244,6,44)"/><text x="343.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="340" y="500" width="2" height="15" fill="rgb(245,10,6)"/><text x="343.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="340" y="516" width="2" height="15" fill="rgb(225,127,32)"/><text x="343.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="340" y="532" width="2" height="15" fill="rgb(234,76,13)"/><text x="343.00" y="542.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid.py:1) (2 samples, 0.23%)</title><rect x="340" y="148" width="3" height="15" fill="rgb(225,202,22)"/><text x="343.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="340" y="164" width="3" height="15" fill="rgb(217,3,54)"/><text x="343.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="340" y="180" width="3" height="15" fill="rgb(212,59,6)"/><text x="343.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="340" y="196" width="3" height="15" fill="rgb(254,173,45)"/><text x="343.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="340" y="212" width="3" height="15" fill="rgb(218,153,21)"/><text x="343.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="340" y="228" width="3" height="15" fill="rgb(244,111,47)"/><text x="343.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (2 samples, 0.23%)</title><rect x="340" y="244" width="3" height="15" fill="rgb(248,83,50)"/><text x="343.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="340" y="260" width="3" height="15" fill="rgb(215,204,20)"/><text x="343.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="340" y="276" width="3" height="15" fill="rgb(212,25,46)"/><text x="343.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="340" y="292" width="3" height="15" fill="rgb(218,119,12)"/><text x="343.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="340" y="308" width="3" height="15" fill="rgb(213,148,51)"/><text x="343.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="340" y="324" width="3" height="15" fill="rgb(215,48,37)"/><text x="343.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:12) (1 samples, 0.12%)</title><rect x="342" y="340" width="1" height="15" fill="rgb(225,193,7)"/><text x="345.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="342" y="356" width="1" height="15" fill="rgb(227,98,40)"/><text x="345.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="342" y="372" width="1" height="15" fill="rgb(241,71,20)"/><text x="345.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="342" y="388" width="1" height="15" fill="rgb(215,221,43)"/><text x="345.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="342" y="404" width="1" height="15" fill="rgb(231,34,49)"/><text x="345.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="342" y="420" width="1" height="15" fill="rgb(213,199,24)"/><text x="345.00" y="430.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="342" y="436" width="1" height="15" fill="rgb(217,31,6)"/><text x="345.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="342" y="452" width="1" height="15" fill="rgb(228,167,47)"/><text x="345.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.12%)</title><rect x="342" y="468" width="1" height="15" fill="rgb(231,101,50)"/><text x="345.00" y="478.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.12%)</title><rect x="342" y="484" width="1" height="15" fill="rgb(215,136,25)"/><text x="345.00" y="494.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1193) (1 samples, 0.12%)</title><rect x="342" y="500" width="1" height="15" fill="rgb(207,87,30)"/><text x="345.00" y="510.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.12%)</title><rect x="343" y="852" width="1" height="15" fill="rgb(229,43,15)"/><text x="346.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.12%)</title><rect x="343" y="868" width="1" height="15" fill="rgb(230,213,28)"/><text x="346.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.12%)</title><rect x="343" y="884" width="1" height="15" fill="rgb(244,26,46)"/><text x="346.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="343" y="900" width="1" height="15" fill="rgb(229,34,4)"/><text x="346.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="343" y="916" width="1" height="15" fill="rgb(215,207,2)"/><text x="346.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="343" y="932" width="1" height="15" fill="rgb(219,227,3)"/><text x="346.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.12%)</title><rect x="343" y="948" width="1" height="15" fill="rgb(251,109,8)"/><text x="346.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:66) (1 samples, 0.12%)</title><rect x="343" y="964" width="1" height="15" fill="rgb(254,2,50)"/><text x="346.00" y="974.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.12%)</title><rect x="344" y="916" width="2" height="15" fill="rgb(242,133,7)"/><text x="347.00" y="926.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.35%)</title><rect x="344" y="884" width="5" height="15" fill="rgb(215,53,38)"/><text x="347.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.35%)</title><rect x="344" y="900" width="5" height="15" fill="rgb(242,130,22)"/><text x="347.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.23%)</title><rect x="346" y="916" width="3" height="15" fill="rgb(239,188,25)"/><text x="349.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.23%)</title><rect x="346" y="932" width="3" height="15" fill="rgb(223,1,35)"/><text x="349.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.23%)</title><rect x="346" y="948" width="3" height="15" fill="rgb(230,119,4)"/><text x="349.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.23%)</title><rect x="346" y="964" width="3" height="15" fill="rgb(230,167,14)"/><text x="349.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.23%)</title><rect x="346" y="980" width="3" height="15" fill="rgb(252,75,0)"/><text x="349.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.23%)</title><rect x="346" y="996" width="3" height="15" fill="rgb(205,124,6)"/><text x="349.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.23%)</title><rect x="346" y="1012" width="3" height="15" fill="rgb(211,212,23)"/><text x="349.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.23%)</title><rect x="346" y="1028" width="3" height="15" fill="rgb(244,34,18)"/><text x="349.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.12%)</title><rect x="347" y="1044" width="2" height="15" fill="rgb(220,164,29)"/><text x="350.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (4 samples, 0.46%)</title><rect x="344" y="852" width="6" height="15" fill="rgb(213,122,1)"/><text x="347.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (4 samples, 0.46%)</title><rect x="344" y="868" width="6" height="15" fill="rgb(239,121,5)"/><text x="347.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.12%)</title><rect x="349" y="884" width="1" height="15" fill="rgb(246,82,25)"/><text x="352.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.12%)</title><rect x="349" y="900" width="1" height="15" fill="rgb(250,43,38)"/><text x="352.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.12%)</title><rect x="349" y="916" width="1" height="15" fill="rgb(209,218,6)"/><text x="352.00" y="926.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="350" y="884" width="1" height="15" fill="rgb(234,41,5)"/><text x="353.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="350" y="900" width="1" height="15" fill="rgb(213,171,30)"/><text x="353.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="350" y="916" width="1" height="15" fill="rgb(233,88,40)"/><text x="353.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="350" y="932" width="1" height="15" fill="rgb(209,171,9)"/><text x="353.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.12%)</title><rect x="350" y="948" width="1" height="15" fill="rgb(247,219,29)"/><text x="353.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 0.81%)</title><rect x="343" y="820" width="10" height="15" fill="rgb(238,2,9)"/><text x="346.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 0.81%)</title><rect x="343" y="836" width="10" height="15" fill="rgb(234,66,49)"/><text x="346.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.23%)</title><rect x="350" y="852" width="3" height="15" fill="rgb(219,38,5)"/><text x="353.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.23%)</title><rect x="350" y="868" width="3" height="15" fill="rgb(251,70,6)"/><text x="353.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.12%)</title><rect x="351" y="884" width="2" height="15" fill="rgb(216,158,19)"/><text x="354.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.12%)</title><rect x="351" y="900" width="2" height="15" fill="rgb(206,188,41)"/><text x="354.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.12%)</title><rect x="351" y="916" width="2" height="15" fill="rgb(240,18,45)"/><text x="354.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="351" y="932" width="2" height="15" fill="rgb(247,11,45)"/><text x="354.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.12%)</title><rect x="351" y="948" width="2" height="15" fill="rgb(220,39,54)"/><text x="354.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid.py:2) (8 samples, 0.93%)</title><rect x="343" y="148" width="11" height="15" fill="rgb(222,14,3)"/><text x="346.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="164" width="11" height="15" fill="rgb(225,149,0)"/><text x="346.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 0.93%)</title><rect x="343" y="180" width="11" height="15" fill="rgb(253,74,50)"/><text x="346.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="196" width="11" height="15" fill="rgb(216,211,5)"/><text x="346.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="212" width="11" height="15" fill="rgb(221,138,51)"/><text x="346.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.93%)</title><rect x="343" y="228" width="11" height="15" fill="rgb(211,67,40)"/><text x="346.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.93%)</title><rect x="343" y="244" width="11" height="15" fill="rgb(254,101,43)"/><text x="346.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.93%)</title><rect x="343" y="260" width="11" height="15" fill="rgb(254,68,33)"/><text x="346.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="276" width="11" height="15" fill="rgb(234,34,42)"/><text x="346.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 0.93%)</title><rect x="343" y="292" width="11" height="15" fill="rgb(233,192,39)"/><text x="346.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="308" width="11" height="15" fill="rgb(205,146,23)"/><text x="346.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.93%)</title><rect x="343" y="324" width="11" height="15" fill="rgb(213,204,10)"/><text x="346.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.93%)</title><rect x="343" y="340" width="11" height="15" fill="rgb(239,24,11)"/><text x="346.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.93%)</title><rect x="343" y="356" width="11" height="15" fill="rgb(227,107,38)"/><text x="346.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="372" width="11" height="15" fill="rgb(207,70,11)"/><text x="346.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 0.93%)</title><rect x="343" y="388" width="11" height="15" fill="rgb(219,126,51)"/><text x="346.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="404" width="11" height="15" fill="rgb(210,166,3)"/><text x="346.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.93%)</title><rect x="343" y="420" width="11" height="15" fill="rgb(252,74,15)"/><text x="346.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.93%)</title><rect x="343" y="436" width="11" height="15" fill="rgb(213,127,39)"/><text x="346.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.93%)</title><rect x="343" y="452" width="11" height="15" fill="rgb(249,165,9)"/><text x="346.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="468" width="11" height="15" fill="rgb(252,44,11)"/><text x="346.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 0.93%)</title><rect x="343" y="484" width="11" height="15" fill="rgb(210,218,30)"/><text x="346.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="500" width="11" height="15" fill="rgb(243,71,15)"/><text x="346.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.93%)</title><rect x="343" y="516" width="11" height="15" fill="rgb(222,118,49)"/><text x="346.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.93%)</title><rect x="343" y="532" width="11" height="15" fill="rgb(213,167,26)"/><text x="346.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.93%)</title><rect x="343" y="548" width="11" height="15" fill="rgb(233,27,18)"/><text x="346.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="564" width="11" height="15" fill="rgb(205,200,13)"/><text x="346.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 0.93%)</title><rect x="343" y="580" width="11" height="15" fill="rgb(215,170,38)"/><text x="346.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="596" width="11" height="15" fill="rgb(237,187,39)"/><text x="346.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 0.93%)</title><rect x="343" y="612" width="11" height="15" fill="rgb(224,191,27)"/><text x="346.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="628" width="11" height="15" fill="rgb(229,22,12)"/><text x="346.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="644" width="11" height="15" fill="rgb(228,26,40)"/><text x="346.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.93%)</title><rect x="343" y="660" width="11" height="15" fill="rgb(216,141,47)"/><text x="346.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.93%)</title><rect x="343" y="676" width="11" height="15" fill="rgb(216,161,40)"/><text x="346.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.93%)</title><rect x="343" y="692" width="11" height="15" fill="rgb(243,199,15)"/><text x="346.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="708" width="11" height="15" fill="rgb(233,176,41)"/><text x="346.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 0.93%)</title><rect x="343" y="724" width="11" height="15" fill="rgb(227,205,8)"/><text x="346.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.93%)</title><rect x="343" y="740" width="11" height="15" fill="rgb(252,69,24)"/><text x="346.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.93%)</title><rect x="343" y="756" width="11" height="15" fill="rgb(244,171,13)"/><text x="346.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.93%)</title><rect x="343" y="772" width="11" height="15" fill="rgb(236,55,37)"/><text x="346.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.93%)</title><rect x="343" y="788" width="11" height="15" fill="rgb(211,215,1)"/><text x="346.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.93%)</title><rect x="343" y="804" width="11" height="15" fill="rgb(215,132,41)"/><text x="346.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.12%)</title><rect x="353" y="820" width="1" height="15" fill="rgb(234,9,33)"/><text x="356.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="353" y="836" width="1" height="15" fill="rgb(206,193,0)"/><text x="356.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="353" y="852" width="1" height="15" fill="rgb(211,26,25)"/><text x="356.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="353" y="868" width="1" height="15" fill="rgb(242,178,52)"/><text x="356.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="353" y="884" width="1" height="15" fill="rgb(251,192,47)"/><text x="356.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="353" y="900" width="1" height="15" fill="rgb(246,100,18)"/><text x="356.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.12%)</title><rect x="353" y="916" width="1" height="15" fill="rgb(250,166,22)"/><text x="356.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.12%)</title><rect x="353" y="932" width="1" height="15" fill="rgb(220,160,23)"/><text x="356.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="353" y="948" width="1" height="15" fill="rgb(250,217,0)"/><text x="356.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="353" y="964" width="1" height="15" fill="rgb(254,167,44)"/><text x="356.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.12%)</title><rect x="353" y="980" width="1" height="15" fill="rgb(243,192,35)"/><text x="356.00" y="990.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.12%)</title><rect x="353" y="996" width="1" height="15" fill="rgb(233,138,54)"/><text x="356.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.12%)</title><rect x="353" y="1012" width="1" height="15" fill="rgb(211,5,30)"/><text x="356.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.12%)</title><rect x="353" y="1028" width="1" height="15" fill="rgb(217,161,18)"/><text x="356.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.12%)</title><rect x="353" y="1044" width="1" height="15" fill="rgb(205,167,51)"/><text x="356.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.12%)</title><rect x="353" y="1060" width="1" height="15" fill="rgb(208,11,0)"/><text x="356.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.12%)</title><rect x="353" y="1076" width="1" height="15" fill="rgb(219,18,6)"/><text x="356.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.12%)</title><rect x="353" y="1092" width="1" height="15" fill="rgb(218,37,52)"/><text x="356.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.12%)</title><rect x="353" y="1108" width="1" height="15" fill="rgb(250,49,5)"/><text x="356.00" y="1118.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.12%)</title><rect x="353" y="1124" width="1" height="15" fill="rgb(239,72,10)"/><text x="356.00" y="1134.50"></text></g><g><title>_optimize_charset (sre_compile.py:397) (1 samples, 0.12%)</title><rect x="353" y="1140" width="1" height="15" fill="rgb(216,78,31)"/><text x="356.00" y="1150.50"></text></g><g><title>0x7f32281961b5 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="353" y="1156" width="1" height="15" fill="rgb(234,35,38)"/><text x="356.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.12%)</title><rect x="354" y="244" width="1" height="15" fill="rgb(239,156,41)"/><text x="357.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="260" width="1" height="15" fill="rgb(206,168,7)"/><text x="357.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="276" width="1" height="15" fill="rgb(226,166,31)"/><text x="357.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="292" width="1" height="15" fill="rgb(254,94,32)"/><text x="357.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="308" width="1" height="15" fill="rgb(208,73,49)"/><text x="357.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="324" width="1" height="15" fill="rgb(242,91,9)"/><text x="357.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.12%)</title><rect x="354" y="340" width="1" height="15" fill="rgb(241,214,37)"/><text x="357.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="356" width="1" height="15" fill="rgb(211,11,33)"/><text x="357.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="354" y="372" width="1" height="15" fill="rgb(223,51,37)"/><text x="357.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="388" width="1" height="15" fill="rgb(243,69,53)"/><text x="357.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="404" width="1" height="15" fill="rgb(241,49,4)"/><text x="357.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="420" width="1" height="15" fill="rgb(232,35,25)"/><text x="357.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="436" width="1" height="15" fill="rgb(239,146,52)"/><text x="357.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="452" width="1" height="15" fill="rgb(213,102,50)"/><text x="357.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="468" width="1" height="15" fill="rgb(208,15,49)"/><text x="357.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.12%)</title><rect x="354" y="484" width="1" height="15" fill="rgb(234,24,49)"/><text x="357.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="500" width="1" height="15" fill="rgb(212,84,27)"/><text x="357.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="516" width="1" height="15" fill="rgb(211,222,28)"/><text x="357.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="532" width="1" height="15" fill="rgb(211,222,40)"/><text x="357.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="548" width="1" height="15" fill="rgb(243,98,35)"/><text x="357.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="564" width="1" height="15" fill="rgb(252,163,38)"/><text x="357.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.12%)</title><rect x="354" y="580" width="1" height="15" fill="rgb(236,69,52)"/><text x="357.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="596" width="1" height="15" fill="rgb(253,185,5)"/><text x="357.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="612" width="1" height="15" fill="rgb(209,127,39)"/><text x="357.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="628" width="1" height="15" fill="rgb(233,77,38)"/><text x="357.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="644" width="1" height="15" fill="rgb(210,87,19)"/><text x="357.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="660" width="1" height="15" fill="rgb(226,133,11)"/><text x="357.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.12%)</title><rect x="354" y="676" width="1" height="15" fill="rgb(233,131,20)"/><text x="357.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="692" width="1" height="15" fill="rgb(220,124,18)"/><text x="357.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="708" width="1" height="15" fill="rgb(250,52,51)"/><text x="357.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="724" width="1" height="15" fill="rgb(217,20,15)"/><text x="357.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="740" width="1" height="15" fill="rgb(232,55,1)"/><text x="357.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="756" width="1" height="15" fill="rgb(207,70,4)"/><text x="357.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.12%)</title><rect x="354" y="772" width="1" height="15" fill="rgb(214,211,1)"/><text x="357.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="354" y="788" width="1" height="15" fill="rgb(215,95,8)"/><text x="357.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="804" width="1" height="15" fill="rgb(248,184,32)"/><text x="357.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="820" width="1" height="15" fill="rgb(213,91,27)"/><text x="357.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="836" width="1" height="15" fill="rgb(227,36,33)"/><text x="357.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="852" width="1" height="15" fill="rgb(224,205,13)"/><text x="357.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="868" width="1" height="15" fill="rgb(244,171,40)"/><text x="357.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="884" width="1" height="15" fill="rgb(247,208,40)"/><text x="357.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.12%)</title><rect x="354" y="900" width="1" height="15" fill="rgb(238,135,8)"/><text x="357.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="916" width="1" height="15" fill="rgb(247,218,26)"/><text x="357.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="354" y="932" width="1" height="15" fill="rgb(216,181,14)"/><text x="357.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="948" width="1" height="15" fill="rgb(246,223,15)"/><text x="357.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="964" width="1" height="15" fill="rgb(243,101,47)"/><text x="357.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="980" width="1" height="15" fill="rgb(225,165,17)"/><text x="357.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="996" width="1" height="15" fill="rgb(215,115,21)"/><text x="357.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="1012" width="1" height="15" fill="rgb(213,80,11)"/><text x="357.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="1028" width="1" height="15" fill="rgb(241,152,19)"/><text x="357.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.12%)</title><rect x="354" y="1044" width="1" height="15" fill="rgb(210,6,32)"/><text x="357.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="354" y="1060" width="1" height="15" fill="rgb(246,103,48)"/><text x="357.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="1076" width="1" height="15" fill="rgb(235,203,37)"/><text x="357.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="1092" width="1" height="15" fill="rgb(246,13,26)"/><text x="357.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="1108" width="1" height="15" fill="rgb(241,229,8)"/><text x="357.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="1124" width="1" height="15" fill="rgb(230,130,51)"/><text x="357.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="1140" width="1" height="15" fill="rgb(247,117,34)"/><text x="357.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="1156" width="1" height="15" fill="rgb(205,118,11)"/><text x="357.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.12%)</title><rect x="354" y="1172" width="1" height="15" fill="rgb(248,115,18)"/><text x="357.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="354" y="1188" width="1" height="15" fill="rgb(229,156,22)"/><text x="357.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="1204" width="1" height="15" fill="rgb(241,6,10)"/><text x="357.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="1220" width="1" height="15" fill="rgb(245,81,45)"/><text x="357.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="1236" width="1" height="15" fill="rgb(252,92,48)"/><text x="357.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="1252" width="1" height="15" fill="rgb(234,148,27)"/><text x="357.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="1268" width="1" height="15" fill="rgb(225,131,0)"/><text x="357.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="1284" width="1" height="15" fill="rgb(236,82,4)"/><text x="357.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.12%)</title><rect x="354" y="1300" width="1" height="15" fill="rgb(231,200,32)"/><text x="357.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="354" y="1316" width="1" height="15" fill="rgb(245,3,1)"/><text x="357.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="354" y="1332" width="1" height="15" fill="rgb(232,82,33)"/><text x="357.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="354" y="1348" width="1" height="15" fill="rgb(214,96,54)"/><text x="357.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="354" y="1364" width="1" height="15" fill="rgb(215,178,27)"/><text x="357.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="354" y="1380" width="1" height="15" fill="rgb(241,68,3)"/><text x="357.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:188) (1 samples, 0.12%)</title><rect x="354" y="1396" width="1" height="15" fill="rgb(246,17,3)"/><text x="357.00" y="1406.50"></text></g><g><title>wrapper (six.py:860) (1 samples, 0.12%)</title><rect x="354" y="1412" width="1" height="15" fill="rgb(235,11,24)"/><text x="357.00" y="1422.50"></text></g><g><title>__new__ (abc.py:127) (1 samples, 0.12%)</title><rect x="354" y="1428" width="1" height="15" fill="rgb(212,17,45)"/><text x="357.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.12%)</title><rect x="355" y="1108" width="2" height="15" fill="rgb(251,187,41)"/><text x="358.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="355" y="1124" width="2" height="15" fill="rgb(251,73,5)"/><text x="358.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="355" y="1140" width="2" height="15" fill="rgb(206,46,1)"/><text x="358.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="355" y="1156" width="2" height="15" fill="rgb(242,196,42)"/><text x="358.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="355" y="1172" width="2" height="15" fill="rgb(248,212,13)"/><text x="358.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="355" y="1188" width="2" height="15" fill="rgb(223,22,15)"/><text x="358.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.12%)</title><rect x="355" y="1204" width="2" height="15" fill="rgb(245,26,5)"/><text x="358.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="355" y="1220" width="2" height="15" fill="rgb(209,182,41)"/><text x="358.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="355" y="1236" width="2" height="15" fill="rgb(223,222,54)"/><text x="358.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="355" y="1252" width="2" height="15" fill="rgb(215,88,9)"/><text x="358.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="355" y="1268" width="2" height="15" fill="rgb(230,155,42)"/><text x="358.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="355" y="1284" width="2" height="15" fill="rgb(212,121,4)"/><text x="358.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:112) (1 samples, 0.12%)</title><rect x="355" y="1300" width="2" height="15" fill="rgb(216,182,34)"/><text x="358.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="355" y="1316" width="2" height="15" fill="rgb(247,24,39)"/><text x="358.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="355" y="1332" width="2" height="15" fill="rgb(217,103,0)"/><text x="358.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="355" y="1348" width="2" height="15" fill="rgb(243,166,9)"/><text x="358.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="355" y="1364" width="2" height="15" fill="rgb(226,69,13)"/><text x="358.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.12%)</title><rect x="355" y="1380" width="2" height="15" fill="rgb(216,124,39)"/><text x="358.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.12%)</title><rect x="355" y="1396" width="2" height="15" fill="rgb(253,118,32)"/><text x="358.00" y="1406.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.12%)</title><rect x="355" y="1412" width="2" height="15" fill="rgb(223,123,38)"/><text x="358.00" y="1422.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="355" y="1428" width="2" height="15" fill="rgb(254,88,13)"/><text x="358.00" y="1438.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.12%)</title><rect x="357" y="1620" width="1" height="15" fill="rgb(221,173,40)"/><text x="360.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.12%)</title><rect x="357" y="1636" width="1" height="15" fill="rgb(222,99,16)"/><text x="360.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.12%)</title><rect x="357" y="1652" width="1" height="15" fill="rgb(206,219,20)"/><text x="360.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.12%)</title><rect x="357" y="1668" width="1" height="15" fill="rgb(225,136,2)"/><text x="360.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.12%)</title><rect x="357" y="1684" width="1" height="15" fill="rgb(232,227,20)"/><text x="360.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.12%)</title><rect x="357" y="1700" width="1" height="15" fill="rgb(235,75,52)"/><text x="360.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.12%)</title><rect x="357" y="1716" width="1" height="15" fill="rgb(221,129,34)"/><text x="360.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:888) (1 samples, 0.12%)</title><rect x="357" y="1732" width="1" height="15" fill="rgb(235,170,44)"/><text x="360.00" y="1742.50"></text></g><g><title>expect (jinja2/lexer.py:388) (1 samples, 0.12%)</title><rect x="357" y="1748" width="1" height="15" fill="rgb(233,135,51)"/><text x="360.00" y="1758.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.12%)</title><rect x="357" y="1764" width="1" height="15" fill="rgb(237,194,35)"/><text x="360.00" y="1774.50"></text></g><g><title>wrap (jinja2/lexer.py:597) (1 samples, 0.12%)</title><rect x="357" y="1780" width="1" height="15" fill="rgb(236,163,15)"/><text x="360.00" y="1790.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:4) (14 samples, 1.62%)</title><rect x="340" y="52" width="20" height="15" fill="rgb(221,89,13)"/><text x="343.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 1.62%)</title><rect x="340" y="68" width="20" height="15" fill="rgb(222,1,9)"/><text x="343.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 1.62%)</title><rect x="340" y="84" width="20" height="15" fill="rgb(238,173,21)"/><text x="343.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 1.62%)</title><rect x="340" y="100" width="20" height="15" fill="rgb(243,19,4)"/><text x="343.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 1.62%)</title><rect x="340" y="116" width="20" height="15" fill="rgb(216,203,20)"/><text x="343.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 1.62%)</title><rect x="340" y="132" width="20" height="15" fill="rgb(214,165,51)"/><text x="343.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid.py:7) (4 samples, 0.46%)</title><rect x="354" y="148" width="6" height="15" fill="rgb(213,148,33)"/><text x="357.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="354" y="164" width="6" height="15" fill="rgb(248,218,28)"/><text x="357.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="354" y="180" width="6" height="15" fill="rgb(222,116,25)"/><text x="357.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="354" y="196" width="6" height="15" fill="rgb(225,120,28)"/><text x="357.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="354" y="212" width="6" height="15" fill="rgb(232,57,4)"/><text x="357.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="354" y="228" width="6" height="15" fill="rgb(214,54,13)"/><text x="357.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.35%)</title><rect x="355" y="244" width="5" height="15" fill="rgb(227,225,12)"/><text x="358.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="260" width="5" height="15" fill="rgb(228,48,16)"/><text x="358.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="276" width="5" height="15" fill="rgb(218,61,52)"/><text x="358.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="292" width="5" height="15" fill="rgb(215,122,54)"/><text x="358.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="308" width="5" height="15" fill="rgb(239,78,49)"/><text x="358.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="324" width="5" height="15" fill="rgb(248,223,39)"/><text x="358.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.35%)</title><rect x="355" y="340" width="5" height="15" fill="rgb(205,21,26)"/><text x="358.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="356" width="5" height="15" fill="rgb(211,207,31)"/><text x="358.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="372" width="5" height="15" fill="rgb(224,92,13)"/><text x="358.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="388" width="5" height="15" fill="rgb(211,174,18)"/><text x="358.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="404" width="5" height="15" fill="rgb(238,160,43)"/><text x="358.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="420" width="5" height="15" fill="rgb(240,152,53)"/><text x="358.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.35%)</title><rect x="355" y="436" width="5" height="15" fill="rgb(216,216,34)"/><text x="358.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="452" width="5" height="15" fill="rgb(242,52,39)"/><text x="358.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.35%)</title><rect x="355" y="468" width="5" height="15" fill="rgb(213,74,1)"/><text x="358.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="484" width="5" height="15" fill="rgb(229,120,43)"/><text x="358.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="500" width="5" height="15" fill="rgb(231,146,23)"/><text x="358.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="516" width="5" height="15" fill="rgb(230,40,40)"/><text x="358.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="532" width="5" height="15" fill="rgb(208,213,25)"/><text x="358.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="548" width="5" height="15" fill="rgb(228,78,34)"/><text x="358.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="564" width="5" height="15" fill="rgb(240,12,48)"/><text x="358.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.35%)</title><rect x="355" y="580" width="5" height="15" fill="rgb(221,119,10)"/><text x="358.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="596" width="5" height="15" fill="rgb(212,152,49)"/><text x="358.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="612" width="5" height="15" fill="rgb(248,81,6)"/><text x="358.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="628" width="5" height="15" fill="rgb(245,191,39)"/><text x="358.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="644" width="5" height="15" fill="rgb(216,47,15)"/><text x="358.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="660" width="5" height="15" fill="rgb(227,179,15)"/><text x="358.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.35%)</title><rect x="355" y="676" width="5" height="15" fill="rgb(214,196,18)"/><text x="358.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="692" width="5" height="15" fill="rgb(244,66,1)"/><text x="358.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="708" width="5" height="15" fill="rgb(244,134,17)"/><text x="358.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="724" width="5" height="15" fill="rgb(212,161,29)"/><text x="358.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="740" width="5" height="15" fill="rgb(248,77,8)"/><text x="358.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="756" width="5" height="15" fill="rgb(221,140,51)"/><text x="358.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.35%)</title><rect x="355" y="772" width="5" height="15" fill="rgb(222,179,10)"/><text x="358.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="788" width="5" height="15" fill="rgb(208,211,24)"/><text x="358.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="804" width="5" height="15" fill="rgb(247,102,36)"/><text x="358.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="820" width="5" height="15" fill="rgb(223,127,16)"/><text x="358.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="836" width="5" height="15" fill="rgb(235,8,27)"/><text x="358.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="852" width="5" height="15" fill="rgb(240,42,54)"/><text x="358.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.35%)</title><rect x="355" y="868" width="5" height="15" fill="rgb(234,215,54)"/><text x="358.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="884" width="5" height="15" fill="rgb(232,91,2)"/><text x="358.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.35%)</title><rect x="355" y="900" width="5" height="15" fill="rgb(225,124,50)"/><text x="358.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="916" width="5" height="15" fill="rgb(219,93,2)"/><text x="358.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="932" width="5" height="15" fill="rgb(222,119,44)"/><text x="358.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="948" width="5" height="15" fill="rgb(209,139,6)"/><text x="358.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="964" width="5" height="15" fill="rgb(225,116,20)"/><text x="358.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="980" width="5" height="15" fill="rgb(248,212,37)"/><text x="358.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="996" width="5" height="15" fill="rgb(211,80,24)"/><text x="358.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.35%)</title><rect x="355" y="1012" width="5" height="15" fill="rgb(220,4,40)"/><text x="358.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="355" y="1028" width="5" height="15" fill="rgb(213,223,41)"/><text x="358.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="355" y="1044" width="5" height="15" fill="rgb(239,97,39)"/><text x="358.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="355" y="1060" width="5" height="15" fill="rgb(216,127,40)"/><text x="358.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="355" y="1076" width="5" height="15" fill="rgb(249,108,50)"/><text x="358.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="355" y="1092" width="5" height="15" fill="rgb(206,135,50)"/><text x="358.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.23%)</title><rect x="357" y="1108" width="3" height="15" fill="rgb(232,30,6)"/><text x="360.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.23%)</title><rect x="357" y="1124" width="3" height="15" fill="rgb(206,0,43)"/><text x="360.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="357" y="1140" width="3" height="15" fill="rgb(248,41,13)"/><text x="360.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="357" y="1156" width="3" height="15" fill="rgb(213,90,16)"/><text x="360.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="357" y="1172" width="3" height="15" fill="rgb(228,96,18)"/><text x="360.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="357" y="1188" width="3" height="15" fill="rgb(245,13,41)"/><text x="360.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="357" y="1204" width="3" height="15" fill="rgb(239,113,49)"/><text x="360.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="357" y="1220" width="3" height="15" fill="rgb(242,205,23)"/><text x="360.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.23%)</title><rect x="357" y="1236" width="3" height="15" fill="rgb(241,48,52)"/><text x="360.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.23%)</title><rect x="357" y="1252" width="3" height="15" fill="rgb(244,135,21)"/><text x="360.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="357" y="1268" width="3" height="15" fill="rgb(235,131,12)"/><text x="360.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="357" y="1284" width="3" height="15" fill="rgb(216,192,22)"/><text x="360.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="357" y="1300" width="3" height="15" fill="rgb(205,70,8)"/><text x="360.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="357" y="1316" width="3" height="15" fill="rgb(224,62,18)"/><text x="360.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="357" y="1332" width="3" height="15" fill="rgb(234,37,33)"/><text x="360.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="357" y="1348" width="3" height="15" fill="rgb(248,30,50)"/><text x="360.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.23%)</title><rect x="357" y="1364" width="3" height="15" fill="rgb(206,111,39)"/><text x="360.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="357" y="1380" width="3" height="15" fill="rgb(215,74,24)"/><text x="360.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="357" y="1396" width="3" height="15" fill="rgb(219,119,42)"/><text x="360.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="357" y="1412" width="3" height="15" fill="rgb(241,44,3)"/><text x="360.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="357" y="1428" width="3" height="15" fill="rgb(244,112,21)"/><text x="360.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="357" y="1444" width="3" height="15" fill="rgb(254,180,11)"/><text x="360.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.23%)</title><rect x="357" y="1460" width="3" height="15" fill="rgb(251,165,10)"/><text x="360.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="357" y="1476" width="3" height="15" fill="rgb(222,11,10)"/><text x="360.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="357" y="1492" width="3" height="15" fill="rgb(231,205,13)"/><text x="360.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="357" y="1508" width="3" height="15" fill="rgb(206,168,18)"/><text x="360.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="357" y="1524" width="3" height="15" fill="rgb(248,24,29)"/><text x="360.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="357" y="1540" width="3" height="15" fill="rgb(230,170,26)"/><text x="360.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.23%)</title><rect x="357" y="1556" width="3" height="15" fill="rgb(206,56,3)"/><text x="360.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (2 samples, 0.23%)</title><rect x="357" y="1572" width="3" height="15" fill="rgb(230,134,51)"/><text x="360.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.23%)</title><rect x="357" y="1588" width="3" height="15" fill="rgb(252,224,49)"/><text x="360.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.23%)</title><rect x="357" y="1604" width="3" height="15" fill="rgb(208,144,4)"/><text x="360.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.12%)</title><rect x="358" y="1620" width="2" height="15" fill="rgb(231,185,53)"/><text x="361.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.12%)</title><rect x="358" y="1636" width="2" height="15" fill="rgb(210,148,27)"/><text x="361.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.12%)</title><rect x="358" y="1652" width="2" height="15" fill="rgb(213,181,41)"/><text x="361.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="358" y="1668" width="2" height="15" fill="rgb(250,113,45)"/><text x="361.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.12%)</title><rect x="358" y="1684" width="2" height="15" fill="rgb(208,68,38)"/><text x="361.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.12%)</title><rect x="358" y="1700" width="2" height="15" fill="rgb(234,115,1)"/><text x="361.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="358" y="1716" width="2" height="15" fill="rgb(248,41,9)"/><text x="361.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.12%)</title><rect x="358" y="1732" width="2" height="15" fill="rgb(220,11,49)"/><text x="361.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.12%)</title><rect x="358" y="1748" width="2" height="15" fill="rgb(254,152,41)"/><text x="361.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="358" y="1764" width="2" height="15" fill="rgb(218,72,21)"/><text x="361.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.12%)</title><rect x="358" y="1780" width="2" height="15" fill="rgb(253,14,10)"/><text x="361.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.12%)</title><rect x="358" y="1796" width="2" height="15" fill="rgb(205,177,15)"/><text x="361.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="358" y="1812" width="2" height="15" fill="rgb(249,139,17)"/><text x="361.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.12%)</title><rect x="358" y="1828" width="2" height="15" fill="rgb(246,57,3)"/><text x="361.00" y="1838.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.12%)</title><rect x="358" y="1844" width="2" height="15" fill="rgb(232,64,28)"/><text x="361.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="358" y="1860" width="2" height="15" fill="rgb(229,90,42)"/><text x="361.00" y="1870.50"></text></g><g><title>visit_Output (jinja2/compiler.py:1358) (1 samples, 0.12%)</title><rect x="358" y="1876" width="2" height="15" fill="rgb(207,33,6)"/><text x="361.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="358" y="1892" width="2" height="15" fill="rgb(215,143,48)"/><text x="361.00" y="1902.50"></text></g><g><title>new_func (jinja2/compiler.py:67) (1 samples, 0.12%)</title><rect x="358" y="1908" width="2" height="15" fill="rgb(206,224,15)"/><text x="361.00" y="1918.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="358" y="1924" width="2" height="15" fill="rgb(211,159,19)"/><text x="361.00" y="1934.50"></text></g><g><title>fold (jinja2/optimizer.py:37) (1 samples, 0.12%)</title><rect x="358" y="1940" width="2" height="15" fill="rgb(215,57,46)"/><text x="361.00" y="1950.50"></text></g><g><title>generic_visit (jinja2/visitor.py:70) (1 samples, 0.12%)</title><rect x="358" y="1956" width="2" height="15" fill="rgb(246,122,32)"/><text x="361.00" y="1966.50"></text></g><g><title>0x7f31e9227c29 (?) (1 samples, 0.12%)</title><rect x="360" y="244" width="1" height="15" fill="rgb(247,186,27)"/><text x="363.00" y="254.50"></text></g><g><title>0x7f31e922ed9e (?) (1 samples, 0.12%)</title><rect x="360" y="260" width="1" height="15" fill="rgb(244,94,27)"/><text x="363.00" y="270.50"></text></g><g><title>0x7f31e922ec56 (?) (1 samples, 0.12%)</title><rect x="360" y="276" width="1" height="15" fill="rgb(211,116,2)"/><text x="363.00" y="286.50"></text></g><g><title>0x7f31e9234ac7 (?) (1 samples, 0.12%)</title><rect x="360" y="292" width="1" height="15" fill="rgb(209,42,14)"/><text x="363.00" y="302.50"></text></g><g><title>0x7f31e9233c5c (?) (1 samples, 0.12%)</title><rect x="360" y="308" width="1" height="15" fill="rgb(211,224,1)"/><text x="363.00" y="318.50"></text></g><g><title>0x7f31e921d3cb (?) (1 samples, 0.12%)</title><rect x="360" y="324" width="1" height="15" fill="rgb(205,43,38)"/><text x="363.00" y="334.50"></text></g><g><title>tanhf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="360" y="340" width="1" height="15" fill="rgb(226,145,13)"/><text x="363.00" y="350.50"></text></g><g><title>expm1f64 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="360" y="356" width="1" height="15" fill="rgb(211,205,22)"/><text x="363.00" y="366.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (2 samples, 0.23%)</title><rect x="361" y="468" width="3" height="15" fill="rgb(250,192,47)"/><text x="364.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:288) (2 samples, 0.23%)</title><rect x="364" y="468" width="2" height="15" fill="rgb(254,35,15)"/><text x="367.00" y="478.50"></text></g><g><title>0x7f31e9216e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="369" y="484" width="1" height="15" fill="rgb(243,42,38)"/><text x="372.00" y="494.50"></text></g><g><title>0x7f31e92172b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="370" y="484" width="2" height="15" fill="rgb(239,158,11)"/><text x="373.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (2 samples, 0.23%)</title><rect x="372" y="484" width="3" height="15" fill="rgb(239,210,25)"/><text x="375.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (1 samples, 0.12%)</title><rect x="375" y="484" width="1" height="15" fill="rgb(233,152,40)"/><text x="378.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:289) (8 samples, 0.93%)</title><rect x="366" y="468" width="11" height="15" fill="rgb(236,166,41)"/><text x="369.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:60) (1 samples, 0.12%)</title><rect x="376" y="484" width="1" height="15" fill="rgb(218,208,8)"/><text x="379.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (53 samples, 6.14%)</title><rect x="361" y="452" width="72" height="15" fill="rgb(213,117,11)"/><text x="364.00" y="462.50">RuntimeS..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:290) (41 samples, 4.75%)</title><rect x="377" y="468" width="56" height="15" fill="rgb(205,193,11)"/><text x="380.00" y="478.50">Runti..</text></g><g><title>tanhf32x (libm-2.29.so) (41 samples, 4.75%)</title><rect x="377" y="484" width="56" height="15" fill="rgb(249,171,3)"/><text x="380.00" y="494.50">tanhf..</text></g><g><title>expm1f64 (libm-2.29.so) (27 samples, 3.13%)</title><rect x="396" y="500" width="37" height="15" fill="rgb(221,142,29)"/><text x="399.00" y="510.50">exp..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (1 samples, 0.12%)</title><rect x="433" y="452" width="2" height="15" fill="rgb(219,158,10)"/><text x="436.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (2 samples, 0.23%)</title><rect x="435" y="452" width="2" height="15" fill="rgb(253,146,8)"/><text x="438.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (2 samples, 0.23%)</title><rect x="435" y="468" width="2" height="15" fill="rgb(240,8,41)"/><text x="438.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (2 samples, 0.23%)</title><rect x="435" y="484" width="2" height="15" fill="rgb(228,35,4)"/><text x="438.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.12%)</title><rect x="436" y="500" width="1" height="15" fill="rgb(244,44,7)"/><text x="439.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.12%)</title><rect x="436" y="516" width="1" height="15" fill="rgb(229,185,18)"/><text x="439.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.12%)</title><rect x="436" y="532" width="1" height="15" fill="rgb(207,126,36)"/><text x="439.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.12%)</title><rect x="436" y="548" width="1" height="15" fill="rgb(233,181,23)"/><text x="439.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="439" y="500" width="1" height="15" fill="rgb(229,184,52)"/><text x="442.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.12%)</title><rect x="440" y="500" width="2" height="15" fill="rgb(238,103,38)"/><text x="443.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="440" y="516" width="2" height="15" fill="rgb(250,107,17)"/><text x="443.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="440" y="532" width="2" height="15" fill="rgb(210,176,26)"/><text x="443.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="440" y="548" width="2" height="15" fill="rgb(238,180,5)"/><text x="443.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="440" y="564" width="2" height="15" fill="rgb(213,82,14)"/><text x="443.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="440" y="580" width="2" height="15" fill="rgb(213,183,39)"/><text x="443.00" y="590.50"></text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:18) (61 samples, 7.07%)</title><rect x="360" y="100" width="83" height="15" fill="rgb(245,106,30)"/><text x="363.00" y="110.50">profile (..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (61 samples, 7.07%)</title><rect x="360" y="116" width="83" height="15" fill="rgb(212,229,52)"/><text x="363.00" y="126.50">time_pred..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (61 samples, 7.07%)</title><rect x="360" y="132" width="83" height="15" fill="rgb(228,205,48)"/><text x="363.00" y="142.50">&lt;lambda&gt; ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (61 samples, 7.07%)</title><rect x="360" y="148" width="83" height="15" fill="rgb(205,11,26)"/><text x="363.00" y="158.50">run (mlpr..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (61 samples, 7.07%)</title><rect x="360" y="164" width="83" height="15" fill="rgb(227,21,10)"/><text x="363.00" y="174.50">_run_sequ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (61 samples, 7.07%)</title><rect x="360" y="180" width="83" height="15" fill="rgb(246,194,22)"/><text x="363.00" y="190.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (61 samples, 7.07%)</title><rect x="360" y="196" width="83" height="15" fill="rgb(237,83,50)"/><text x="363.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (61 samples, 7.07%)</title><rect x="360" y="212" width="83" height="15" fill="rgb(249,221,31)"/><text x="363.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (61 samples, 7.07%)</title><rect x="360" y="228" width="83" height="15" fill="rgb(231,34,43)"/><text x="363.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (60 samples, 6.95%)</title><rect x="361" y="244" width="82" height="15" fill="rgb(208,95,18)"/><text x="364.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (60 samples, 6.95%)</title><rect x="361" y="260" width="82" height="15" fill="rgb(222,40,27)"/><text x="364.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (60 samples, 6.95%)</title><rect x="361" y="276" width="82" height="15" fill="rgb(240,196,10)"/><text x="364.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (60 samples, 6.95%)</title><rect x="361" y="292" width="82" height="15" fill="rgb(234,31,27)"/><text x="364.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (60 samples, 6.95%)</title><rect x="361" y="308" width="82" height="15" fill="rgb(214,199,13)"/><text x="364.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (60 samples, 6.95%)</title><rect x="361" y="324" width="82" height="15" fill="rgb(237,179,48)"/><text x="364.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (60 samples, 6.95%)</title><rect x="361" y="340" width="82" height="15" fill="rgb(247,151,47)"/><text x="364.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h:538) (60 samples, 6.95%)</title><rect x="361" y="356" width="82" height="15" fill="rgb(245,185,20)"/><text x="364.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (60 samples, 6.95%)</title><rect x="361" y="372" width="82" height="15" fill="rgb(226,8,8)"/><text x="364.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (60 samples, 6.95%)</title><rect x="361" y="388" width="82" height="15" fill="rgb(240,33,4)"/><text x="364.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (60 samples, 6.95%)</title><rect x="361" y="404" width="82" height="15" fill="rgb(242,193,15)"/><text x="364.00" y="414.50">pybind11:..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (60 samples, 6.95%)</title><rect x="361" y="420" width="82" height="15" fill="rgb(236,66,32)"/><text x="364.00" y="430.50">RuntimeSV..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (60 samples, 6.95%)</title><rect x="361" y="436" width="82" height="15" fill="rgb(245,80,30)"/><text x="364.00" y="446.50">pybind11:..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (4 samples, 0.46%)</title><rect x="437" y="452" width="6" height="15" fill="rgb(245,120,46)"/><text x="440.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (4 samples, 0.46%)</title><rect x="437" y="468" width="6" height="15" fill="rgb(224,2,25)"/><text x="440.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (4 samples, 0.46%)</title><rect x="437" y="484" width="6" height="15" fill="rgb(207,142,45)"/><text x="440.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.12%)</title><rect x="442" y="500" width="1" height="15" fill="rgb(212,121,48)"/><text x="445.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.12%)</title><rect x="442" y="516" width="1" height="15" fill="rgb(209,218,19)"/><text x="445.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.12%)</title><rect x="442" y="532" width="1" height="15" fill="rgb(241,191,6)"/><text x="445.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.12%)</title><rect x="442" y="548" width="1" height="15" fill="rgb(208,144,50)"/><text x="445.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.12%)</title><rect x="442" y="564" width="1" height="15" fill="rgb(215,176,5)"/><text x="445.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.12%)</title><rect x="442" y="580" width="1" height="15" fill="rgb(213,131,39)"/><text x="445.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.12%)</title><rect x="442" y="596" width="1" height="15" fill="rgb(250,83,13)"/><text x="445.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.12%)</title><rect x="442" y="612" width="1" height="15" fill="rgb(248,172,51)"/><text x="445.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:367) (1 samples, 0.12%)</title><rect x="442" y="628" width="1" height="15" fill="rgb(211,140,29)"/><text x="445.00" y="638.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:384) (1 samples, 0.12%)</title><rect x="443" y="452" width="1" height="15" fill="rgb(228,43,6)"/><text x="446.00" y="462.50"></text></g><g><title>0x7f32280b8a53 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="443" y="468" width="1" height="15" fill="rgb(205,39,34)"/><text x="446.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="446" y="468" width="1" height="15" fill="rgb(253,83,13)"/><text x="449.00" y="478.50"></text></g><g><title>0x7f32280b8a53 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="447" y="484" width="1" height="15" fill="rgb(251,45,35)"/><text x="450.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.23%)</title><rect x="447" y="468" width="3" height="15" fill="rgb(218,122,34)"/><text x="450.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="448" y="484" width="2" height="15" fill="rgb(239,127,11)"/><text x="451.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (5 samples, 0.58%)</title><rect x="444" y="452" width="7" height="15" fill="rgb(254,4,20)"/><text x="447.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.12%)</title><rect x="450" y="468" width="1" height="15" fill="rgb(214,208,5)"/><text x="453.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (2 samples, 0.23%)</title><rect x="455" y="468" width="3" height="15" fill="rgb(236,28,19)"/><text x="458.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:288) (1 samples, 0.12%)</title><rect x="458" y="468" width="1" height="15" fill="rgb(247,52,52)"/><text x="461.00" y="478.50"></text></g><g><title>0x7f31e9216e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="462" y="484" width="1" height="15" fill="rgb(249,107,49)"/><text x="465.00" y="494.50"></text></g><g><title>0x7f31e92172b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="463" y="484" width="5" height="15" fill="rgb(237,91,35)"/><text x="466.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (8 samples, 0.93%)</title><rect x="468" y="484" width="10" height="15" fill="rgb(231,96,21)"/><text x="471.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:60) (1 samples, 0.12%)</title><rect x="478" y="484" width="2" height="15" fill="rgb(219,136,47)"/><text x="481.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:289) (17 samples, 1.97%)</title><rect x="459" y="468" width="24" height="15" fill="rgb(244,179,30)"/><text x="462.00" y="478.50">R..</text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:116) (2 samples, 0.23%)</title><rect x="480" y="484" width="3" height="15" fill="rgb(248,79,0)"/><text x="483.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:290) (170 samples, 19.70%)</title><rect x="483" y="468" width="232" height="15" fill="rgb(218,22,14)"/><text x="486.00" y="478.50">RuntimeSVMClassifier&lt;float&gt;::k..</text></g><g><title>tanhf32x (libm-2.29.so) (166 samples, 19.24%)</title><rect x="488" y="484" width="227" height="15" fill="rgb(231,195,17)"/><text x="491.00" y="494.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (132 samples, 15.30%)</title><rect x="535" y="500" width="180" height="15" fill="rgb(251,164,36)"/><text x="538.00" y="510.50">expm1f64 (libm-2.29.so)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (198 samples, 22.94%)</title><rect x="451" y="452" width="271" height="15" fill="rgb(227,36,21)"/><text x="454.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (5 samples, 0.58%)</title><rect x="715" y="468" width="7" height="15" fill="rgb(243,158,6)"/><text x="718.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:916) (1 samples, 0.12%)</title><rect x="722" y="468" width="1" height="15" fill="rgb(249,159,45)"/><text x="725.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (3 samples, 0.35%)</title><rect x="722" y="452" width="4" height="15" fill="rgb(211,188,17)"/><text x="725.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:918) (2 samples, 0.23%)</title><rect x="723" y="468" width="3" height="15" fill="rgb(205,145,33)"/><text x="726.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h:475) (2 samples, 0.23%)</title><rect x="723" y="484" width="3" height="15" fill="rgb(252,9,45)"/><text x="726.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h:120) (2 samples, 0.23%)</title><rect x="723" y="500" width="3" height="15" fill="rgb(243,95,38)"/><text x="726.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (1 samples, 0.12%)</title><rect x="726" y="500" width="1" height="15" fill="rgb(224,222,5)"/><text x="729.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="726" y="516" width="1" height="15" fill="rgb(252,128,50)"/><text x="729.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="726" y="532" width="1" height="15" fill="rgb(246,132,41)"/><text x="729.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="726" y="548" width="1" height="15" fill="rgb(232,190,42)"/><text x="729.00" y="558.50"></text></g><g><title>0x7f31e92172d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="726" y="564" width="1" height="15" fill="rgb(250,21,51)"/><text x="729.00" y="574.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (2 samples, 0.23%)</title><rect x="726" y="452" width="3" height="15" fill="rgb(235,80,19)"/><text x="729.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (2 samples, 0.23%)</title><rect x="726" y="468" width="3" height="15" fill="rgb(222,10,4)"/><text x="729.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (2 samples, 0.23%)</title><rect x="726" y="484" width="3" height="15" fill="rgb(251,178,22)"/><text x="729.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:496) (1 samples, 0.12%)</title><rect x="727" y="500" width="2" height="15" fill="rgb(209,38,32)"/><text x="730.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (4 samples, 0.46%)</title><rect x="729" y="452" width="5" height="15" fill="rgb(223,94,41)"/><text x="732.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (6 samples, 0.70%)</title><rect x="734" y="452" width="8" height="15" fill="rgb(235,176,1)"/><text x="737.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (5 samples, 0.58%)</title><rect x="742" y="500" width="7" height="15" fill="rgb(211,208,18)"/><text x="745.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (5 samples, 0.58%)</title><rect x="742" y="516" width="7" height="15" fill="rgb(237,44,40)"/><text x="745.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (5 samples, 0.58%)</title><rect x="742" y="532" width="7" height="15" fill="rgb(227,64,4)"/><text x="745.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (5 samples, 0.58%)</title><rect x="742" y="548" width="7" height="15" fill="rgb(227,38,0)"/><text x="745.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.58%)</title><rect x="742" y="564" width="7" height="15" fill="rgb(241,77,26)"/><text x="745.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.46%)</title><rect x="744" y="580" width="5" height="15" fill="rgb(216,6,31)"/><text x="747.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.12%)</title><rect x="749" y="500" width="2" height="15" fill="rgb(251,24,28)"/><text x="752.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.12%)</title><rect x="749" y="516" width="2" height="15" fill="rgb(218,38,28)"/><text x="752.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.12%)</title><rect x="749" y="532" width="2" height="15" fill="rgb(214,158,22)"/><text x="752.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.12%)</title><rect x="749" y="548" width="2" height="15" fill="rgb(252,73,39)"/><text x="752.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.12%)</title><rect x="749" y="564" width="2" height="15" fill="rgb(209,68,9)"/><text x="752.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.12%)</title><rect x="749" y="580" width="2" height="15" fill="rgb(234,228,0)"/><text x="752.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.12%)</title><rect x="749" y="596" width="2" height="15" fill="rgb(236,2,7)"/><text x="752.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.12%)</title><rect x="749" y="612" width="2" height="15" fill="rgb(249,147,15)"/><text x="752.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (1 samples, 0.12%)</title><rect x="749" y="628" width="2" height="15" fill="rgb(242,185,32)"/><text x="752.00" y="638.50"></text></g><g><title>0x7f31e92172a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="751" y="516" width="1" height="15" fill="rgb(221,88,1)"/><text x="754.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (8 samples, 0.93%)</title><rect x="742" y="484" width="11" height="15" fill="rgb(216,97,40)"/><text x="745.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.23%)</title><rect x="751" y="500" width="2" height="15" fill="rgb(242,173,47)"/><text x="754.00" y="510.50"></text></g><g><title>0x7f32280b8991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="752" y="516" width="1" height="15" fill="rgb(223,105,45)"/><text x="755.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (9 samples, 1.04%)</title><rect x="742" y="452" width="13" height="15" fill="rgb(210,7,45)"/><text x="745.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (9 samples, 1.04%)</title><rect x="742" y="468" width="13" height="15" fill="rgb(219,29,47)"/><text x="745.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:94) (1 samples, 0.12%)</title><rect x="753" y="484" width="2" height="15" fill="rgb(250,82,13)"/><text x="756.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (1 samples, 0.12%)</title><rect x="755" y="452" width="1" height="15" fill="rgb(246,127,41)"/><text x="758.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.12%)</title><rect x="755" y="468" width="1" height="15" fill="rgb(231,160,22)"/><text x="758.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.12%)</title><rect x="755" y="484" width="1" height="15" fill="rgb(212,73,53)"/><text x="758.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.12%)</title><rect x="755" y="500" width="1" height="15" fill="rgb(215,184,26)"/><text x="758.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="755" y="516" width="1" height="15" fill="rgb(244,51,8)"/><text x="758.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="755" y="532" width="1" height="15" fill="rgb(233,96,37)"/><text x="758.00" y="542.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:446) (1 samples, 0.12%)</title><rect x="756" y="452" width="1" height="15" fill="rgb(253,42,20)"/><text x="759.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.12%)</title><rect x="756" y="468" width="1" height="15" fill="rgb(213,104,18)"/><text x="759.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.12%)</title><rect x="756" y="484" width="1" height="15" fill="rgb(205,82,34)"/><text x="759.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.12%)</title><rect x="756" y="500" width="1" height="15" fill="rgb(241,173,27)"/><text x="759.00" y="510.50"></text></g><g><title>0x7f32280d912f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="756" y="516" width="1" height="15" fill="rgb(253,50,25)"/><text x="759.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (3 samples, 0.35%)</title><rect x="757" y="452" width="5" height="15" fill="rgb(247,39,14)"/><text x="760.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (2 samples, 0.23%)</title><rect x="759" y="468" width="3" height="15" fill="rgb(244,46,33)"/><text x="762.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (2 samples, 0.23%)</title><rect x="759" y="484" width="3" height="15" fill="rgb(223,63,7)"/><text x="762.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:453) (1 samples, 0.12%)</title><rect x="762" y="452" width="1" height="15" fill="rgb(226,228,33)"/><text x="765.00" y="462.50"></text></g><g><title>std::max&lt;float&gt; (stl_algobase.h:224) (1 samples, 0.12%)</title><rect x="762" y="468" width="1" height="15" fill="rgb(222,221,30)"/><text x="765.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:454) (1 samples, 0.12%)</title><rect x="763" y="452" width="1" height="15" fill="rgb(243,1,23)"/><text x="766.00" y="462.50"></text></g><g><title>std::min&lt;float&gt; (stl_algobase.h:201) (1 samples, 0.12%)</title><rect x="763" y="468" width="1" height="15" fill="rgb(213,191,50)"/><text x="766.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.12%)</title><rect x="764" y="500" width="2" height="15" fill="rgb(241,166,37)"/><text x="767.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="764" y="516" width="2" height="15" fill="rgb(251,122,8)"/><text x="767.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="764" y="532" width="2" height="15" fill="rgb(214,57,28)"/><text x="767.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="764" y="548" width="2" height="15" fill="rgb(237,145,33)"/><text x="767.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="764" y="564" width="2" height="15" fill="rgb(253,138,12)"/><text x="767.00" y="574.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.12%)</title><rect x="766" y="500" width="1" height="15" fill="rgb(209,6,9)"/><text x="769.00" y="510.50"></text></g><g><title>0x7f32280d8d6f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="766" y="516" width="1" height="15" fill="rgb(222,185,6)"/><text x="769.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (3 samples, 0.35%)</title><rect x="764" y="484" width="4" height="15" fill="rgb(209,115,46)"/><text x="767.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="767" y="500" width="1" height="15" fill="rgb(215,98,53)"/><text x="770.00" y="510.50"></text></g><g><title>0x7f32280b8998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="767" y="516" width="1" height="15" fill="rgb(222,67,6)"/><text x="770.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:319) (1 samples, 0.12%)</title><rect x="768" y="484" width="2" height="15" fill="rgb(251,128,23)"/><text x="771.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:331) (1 samples, 0.12%)</title><rect x="770" y="484" width="1" height="15" fill="rgb(215,212,25)"/><text x="773.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (1 samples, 0.12%)</title><rect x="771" y="484" width="1" height="15" fill="rgb(230,154,50)"/><text x="774.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:340) (1 samples, 0.12%)</title><rect x="772" y="484" width="2" height="15" fill="rgb(224,116,37)"/><text x="775.00" y="494.50"></text></g><g><title>std::fabs (cmath:265) (1 samples, 0.12%)</title><rect x="772" y="500" width="2" height="15" fill="rgb(206,142,7)"/><text x="775.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (1 samples, 0.12%)</title><rect x="774" y="484" width="1" height="15" fill="rgb(227,2,35)"/><text x="777.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (2 samples, 0.23%)</title><rect x="775" y="484" width="3" height="15" fill="rgb(235,169,17)"/><text x="778.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (1 samples, 0.12%)</title><rect x="778" y="484" width="1" height="15" fill="rgb(215,136,35)"/><text x="781.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (13 samples, 1.51%)</title><rect x="764" y="452" width="18" height="15" fill="rgb(247,74,50)"/><text x="767.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (13 samples, 1.51%)</title><rect x="764" y="468" width="18" height="15" fill="rgb(205,68,20)"/><text x="767.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (2 samples, 0.23%)</title><rect x="779" y="484" width="3" height="15" fill="rgb(210,210,47)"/><text x="782.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:469) (1 samples, 0.12%)</title><rect x="782" y="452" width="1" height="15" fill="rgb(214,190,30)"/><text x="785.00" y="462.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h:5549) (1 samples, 0.12%)</title><rect x="782" y="468" width="1" height="15" fill="rgb(231,198,35)"/><text x="785.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h:5523) (1 samples, 0.12%)</title><rect x="782" y="484" width="1" height="15" fill="rgb(209,102,47)"/><text x="785.00" y="494.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;::operator++ (stl_iterator.h:799) (1 samples, 0.12%)</title><rect x="782" y="500" width="1" height="15" fill="rgb(243,224,48)"/><text x="785.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:45) (311 samples, 36.04%)</title><rect x="360" y="52" width="425" height="15" fill="rgb(243,227,11)"/><text x="363.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsig..</text></g><g><title>profile_pyrt (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:44) (311 samples, 36.04%)</title><rect x="360" y="68" width="425" height="15" fill="rgb(242,64,22)"/><text x="363.00" y="78.50">profile_pyrt (bench_SVC_sigmoid_m_cl_probabilityTrue_kerne..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:29) (311 samples, 36.04%)</title><rect x="360" y="84" width="425" height="15" fill="rgb(216,67,22)"/><text x="363.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kern..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:23) (250 samples, 28.97%)</title><rect x="443" y="100" width="342" height="15" fill="rgb(240,83,24)"/><text x="446.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_probabilityTru..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (250 samples, 28.97%)</title><rect x="443" y="116" width="342" height="15" fill="rgb(240,160,34)"/><text x="446.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (250 samples, 28.97%)</title><rect x="443" y="132" width="342" height="15" fill="rgb(247,40,38)"/><text x="446.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (250 samples, 28.97%)</title><rect x="443" y="148" width="342" height="15" fill="rgb(208,88,18)"/><text x="446.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (250 samples, 28.97%)</title><rect x="443" y="164" width="342" height="15" fill="rgb(254,220,13)"/><text x="446.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (250 samples, 28.97%)</title><rect x="443" y="180" width="342" height="15" fill="rgb(251,217,19)"/><text x="446.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:1..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (250 samples, 28.97%)</title><rect x="443" y="196" width="342" height="15" fill="rgb(249,160,24)"/><text x="446.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (250 samples, 28.97%)</title><rect x="443" y="212" width="342" height="15" fill="rgb(214,63,17)"/><text x="446.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (250 samples, 28.97%)</title><rect x="443" y="228" width="342" height="15" fill="rgb(250,68,16)"/><text x="446.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifi..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (250 samples, 28.97%)</title><rect x="443" y="244" width="342" height="15" fill="rgb(251,30,9)"/><text x="446.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (250 samples, 28.97%)</title><rect x="443" y="260" width="342" height="15" fill="rgb(220,226,36)"/><text x="446.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (250 samples, 28.97%)</title><rect x="443" y="276" width="342" height="15" fill="rgb(233,117,38)"/><text x="446.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (250 samples, 28.97%)</title><rect x="443" y="292" width="342" height="15" fill="rgb(253,37,24)"/><text x="446.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMCl..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (250 samples, 28.97%)</title><rect x="443" y="308" width="342" height="15" fill="rgb(220,152,42)"/><text x="446.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMCl..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (250 samples, 28.97%)</title><rect x="443" y="324" width="342" height="15" fill="rgb(226,121,36)"/><text x="446.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (250 samples, 28.97%)</title><rect x="443" y="340" width="342" height="15" fill="rgb(210,6,44)"/><text x="446.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy...</text></g><g><title>pybind11::array::~array (numpy.h:538) (250 samples, 28.97%)</title><rect x="443" y="356" width="342" height="15" fill="rgb(246,16,44)"/><text x="446.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (250 samples, 28.97%)</title><rect x="443" y="372" width="342" height="15" fill="rgb(249,60,39)"/><text x="446.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1311)</text></g><g><title>pybind11::object::~object (pytypes.h:240) (250 samples, 28.97%)</title><rect x="443" y="388" width="342" height="15" fill="rgb(247,182,1)"/><text x="446.00" y="398.50">pybind11::object::~object (pytypes.h:240)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (250 samples, 28.97%)</title><rect x="443" y="404" width="342" height="15" fill="rgb(223,99,18)"/><text x="446.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h:197)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (250 samples, 28.97%)</title><rect x="443" y="420" width="342" height="15" fill="rgb(224,225,34)"/><text x="446.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodic..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (250 samples, 28.97%)</title><rect x="443" y="436" width="342" height="15" fill="rgb(249,103,21)"/><text x="446.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_rele..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:491) (1 samples, 0.12%)</title><rect x="783" y="452" width="2" height="15" fill="rgb(209,112,18)"/><text x="786.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.12%)</title><rect x="783" y="468" width="2" height="15" fill="rgb(207,168,36)"/><text x="786.00" y="478.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:206) (1 samples, 0.12%)</title><rect x="783" y="484" width="2" height="15" fill="rgb(249,216,34)"/><text x="786.00" y="494.50"></text></g><g><title>0x7f32280d8d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="783" y="500" width="2" height="15" fill="rgb(242,68,25)"/><text x="786.00" y="510.50"></text></g><g><title>0x7f32280b8eb0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="785" y="116" width="1" height="15" fill="rgb(228,36,37)"/><text x="788.00" y="126.50"></text></g><g><title>0x7f32280b7c4d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="785" y="132" width="1" height="15" fill="rgb(216,218,33)"/><text x="788.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.12%)</title><rect x="786" y="116" width="2" height="15" fill="rgb(212,27,39)"/><text x="789.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.12%)</title><rect x="786" y="132" width="2" height="15" fill="rgb(233,106,31)"/><text x="789.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.12%)</title><rect x="786" y="148" width="2" height="15" fill="rgb(215,44,4)"/><text x="789.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.12%)</title><rect x="786" y="164" width="2" height="15" fill="rgb(225,162,9)"/><text x="789.00" y="174.50"></text></g><g><title>0x7f32272da380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="786" y="180" width="2" height="15" fill="rgb(205,107,19)"/><text x="789.00" y="190.50"></text></g><g><title>0x7f31e80e8ff9 (?) (1 samples, 0.12%)</title><rect x="788" y="212" width="1" height="15" fill="rgb(247,226,33)"/><text x="791.00" y="222.50"></text></g><g><title>0x7f31e80e3ef6 (?) (1 samples, 0.12%)</title><rect x="788" y="228" width="1" height="15" fill="rgb(215,81,29)"/><text x="791.00" y="238.50"></text></g><g><title>0x7f31e80d8962 (?) (1 samples, 0.12%)</title><rect x="788" y="244" width="1" height="15" fill="rgb(241,173,14)"/><text x="791.00" y="254.50"></text></g><g><title>0x7f31e810c7a7 (?) (1 samples, 0.12%)</title><rect x="788" y="260" width="1" height="15" fill="rgb(217,181,0)"/><text x="791.00" y="270.50"></text></g><g><title>0x7f31e810c379 (?) (1 samples, 0.12%)</title><rect x="788" y="276" width="1" height="15" fill="rgb(220,174,7)"/><text x="791.00" y="286.50"></text></g><g><title>0x7f31e856a8b8 (?) (1 samples, 0.12%)</title><rect x="788" y="292" width="1" height="15" fill="rgb(247,40,20)"/><text x="791.00" y="302.50"></text></g><g><title>0x7f31e8568c7f (?) (1 samples, 0.12%)</title><rect x="788" y="308" width="1" height="15" fill="rgb(243,56,14)"/><text x="791.00" y="318.50"></text></g><g><title>0x7f31e857b99c (?) (1 samples, 0.12%)</title><rect x="788" y="324" width="1" height="15" fill="rgb(243,129,20)"/><text x="791.00" y="334.50"></text></g><g><title>0x7f31e8280b33 (?) (1 samples, 0.12%)</title><rect x="788" y="340" width="1" height="15" fill="rgb(233,20,27)"/><text x="791.00" y="350.50"></text></g><g><title>0x7f31e811d423 (?) (1 samples, 0.12%)</title><rect x="788" y="356" width="1" height="15" fill="rgb(254,113,49)"/><text x="791.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="788" y="372" width="1" height="15" fill="rgb(236,83,12)"/><text x="791.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="789" y="292" width="1" height="15" fill="rgb(248,199,41)"/><text x="792.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="789" y="308" width="1" height="15" fill="rgb(208,108,0)"/><text x="792.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="807" y="388" width="2" height="15" fill="rgb(247,97,47)"/><text x="810.00" y="398.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="809" y="388" width="2" height="15" fill="rgb(254,82,17)"/><text x="812.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.58%)</title><rect x="805" y="356" width="7" height="15" fill="rgb(207,10,52)"/><text x="808.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.58%)</title><rect x="805" y="372" width="7" height="15" fill="rgb(232,20,8)"/><text x="808.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="811" y="388" width="1" height="15" fill="rgb(223,74,20)"/><text x="814.00" y="398.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="812" y="356" width="1" height="15" fill="rgb(218,36,40)"/><text x="815.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="812" y="372" width="1" height="15" fill="rgb(219,48,0)"/><text x="815.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="812" y="388" width="1" height="15" fill="rgb(227,176,19)"/><text x="815.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 6.14%)</title><rect x="790" y="340" width="73" height="15" fill="rgb(222,123,5)"/><text x="793.00" y="350.50">onnxrunt..</text></g><g><title>tanhf32x (libm-2.29.so) (36 samples, 4.17%)</title><rect x="813" y="356" width="50" height="15" fill="rgb(241,0,3)"/><text x="816.00" y="366.50">tanhf..</text></g><g><title>expm1f64 (libm-2.29.so) (29 samples, 3.36%)</title><rect x="823" y="372" width="40" height="15" fill="rgb(222,229,24)"/><text x="826.00" y="382.50">exp..</text></g><g><title>0x7f3217b84d50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="863" y="372" width="1" height="15" fill="rgb(210,150,6)"/><text x="866.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 6.72%)</title><rect x="789" y="260" width="79" height="15" fill="rgb(234,165,11)"/><text x="792.00" y="270.50">onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 6.72%)</title><rect x="789" y="276" width="79" height="15" fill="rgb(219,125,38)"/><text x="792.00" y="286.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 6.60%)</title><rect x="790" y="292" width="78" height="15" fill="rgb(252,170,2)"/><text x="793.00" y="302.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 6.60%)</title><rect x="790" y="308" width="78" height="15" fill="rgb(245,0,48)"/><text x="793.00" y="318.50">onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 6.60%)</title><rect x="790" y="324" width="78" height="15" fill="rgb(242,62,9)"/><text x="793.00" y="334.50">onnxrunti..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.46%)</title><rect x="863" y="340" width="5" height="15" fill="rgb(253,9,53)"/><text x="866.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.46%)</title><rect x="863" y="356" width="5" height="15" fill="rgb(238,190,21)"/><text x="866.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.35%)</title><rect x="864" y="372" width="4" height="15" fill="rgb(218,86,20)"/><text x="867.00" y="382.50"></text></g><g><title>0x7f32280b9db4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="867" y="388" width="1" height="15" fill="rgb(239,196,23)"/><text x="870.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="868" y="260" width="3" height="15" fill="rgb(254,223,18)"/><text x="871.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="870" y="276" width="1" height="15" fill="rgb(235,221,42)"/><text x="873.00" y="286.50"></text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:18) (64 samples, 7.42%)</title><rect x="785" y="100" width="87" height="15" fill="rgb(218,185,31)"/><text x="788.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (62 samples, 7.18%)</title><rect x="788" y="116" width="84" height="15" fill="rgb(209,10,12)"/><text x="791.00" y="126.50">time_pred..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (62 samples, 7.18%)</title><rect x="788" y="132" width="84" height="15" fill="rgb(220,185,9)"/><text x="791.00" y="142.50">&lt;lambda&gt; ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (62 samples, 7.18%)</title><rect x="788" y="148" width="84" height="15" fill="rgb(238,100,28)"/><text x="791.00" y="158.50">run (mlpr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (62 samples, 7.18%)</title><rect x="788" y="164" width="84" height="15" fill="rgb(238,64,6)"/><text x="791.00" y="174.50">_run_whol..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (62 samples, 7.18%)</title><rect x="788" y="180" width="84" height="15" fill="rgb(209,40,34)"/><text x="791.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (62 samples, 7.18%)</title><rect x="788" y="196" width="84" height="15" fill="rgb(216,229,13)"/><text x="791.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 7.07%)</title><rect x="789" y="212" width="83" height="15" fill="rgb(234,228,41)"/><text x="792.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 7.07%)</title><rect x="789" y="228" width="83" height="15" fill="rgb(205,77,11)"/><text x="792.00" y="238.50">void pybi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 7.07%)</title><rect x="789" y="244" width="83" height="15" fill="rgb(229,189,35)"/><text x="792.00" y="254.50">onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="871" y="260" width="1" height="15" fill="rgb(212,202,2)"/><text x="874.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="871" y="276" width="1" height="15" fill="rgb(217,148,38)"/><text x="874.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="871" y="292" width="1" height="15" fill="rgb(226,167,14)"/><text x="874.00" y="302.50"></text></g><g><title>0x7f32280b8d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="871" y="308" width="1" height="15" fill="rgb(222,132,16)"/><text x="874.00" y="318.50"></text></g><g><title>0x7f32280b8eb0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="875" y="116" width="1" height="15" fill="rgb(232,47,54)"/><text x="878.00" y="126.50"></text></g><g><title>0x7f32280b7c73 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="875" y="132" width="1" height="15" fill="rgb(248,28,25)"/><text x="878.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.12%)</title><rect x="878" y="196" width="1" height="15" fill="rgb(239,165,30)"/><text x="881.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.12%)</title><rect x="878" y="212" width="1" height="15" fill="rgb(216,165,27)"/><text x="881.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="878" y="228" width="1" height="15" fill="rgb(239,175,29)"/><text x="881.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="878" y="244" width="1" height="15" fill="rgb(236,38,38)"/><text x="881.00" y="254.50"></text></g><g><title>0x7f3228237e17 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="945" y="356" width="1" height="15" fill="rgb(233,74,37)"/><text x="948.00" y="366.50"></text></g><g><title>0x7f3228237e57 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="946" y="356" width="1" height="15" fill="rgb(250,186,48)"/><text x="949.00" y="366.50"></text></g><g><title>0x7f32280b8991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="957" y="372" width="1" height="15" fill="rgb(218,215,44)"/><text x="960.00" y="382.50"></text></g><g><title>0x7f32280b8bc0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="961" y="388" width="2" height="15" fill="rgb(241,14,54)"/><text x="964.00" y="398.50"></text></g><g><title>0x7f32280b8bd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="963" y="388" width="1" height="15" fill="rgb(227,181,21)"/><text x="966.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.51%)</title><rect x="947" y="356" width="18" height="15" fill="rgb(214,161,12)"/><text x="950.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.58%)</title><rect x="958" y="372" width="7" height="15" fill="rgb(224,103,24)"/><text x="961.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="964" y="388" width="1" height="15" fill="rgb(229,118,1)"/><text x="967.00" y="398.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="965" y="356" width="2" height="15" fill="rgb(209,147,15)"/><text x="968.00" y="366.50"></text></g><g><title>0x7f32280b8971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="969" y="372" width="2" height="15" fill="rgb(217,0,3)"/><text x="972.00" y="382.50"></text></g><g><title>0x7f32280b8998 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="971" y="372" width="2" height="15" fill="rgb(207,188,48)"/><text x="974.00" y="382.50"></text></g><g><title>0x7f32280d8d97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="973" y="372" width="2" height="15" fill="rgb(216,198,7)"/><text x="976.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="975" y="372" width="1" height="15" fill="rgb(253,197,1)"/><text x="978.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.93%)</title><rect x="967" y="356" width="11" height="15" fill="rgb(241,85,4)"/><text x="970.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="976" y="372" width="2" height="15" fill="rgb(245,29,31)"/><text x="979.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="976" y="388" width="2" height="15" fill="rgb(251,49,23)"/><text x="979.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="978" y="356" width="4" height="15" fill="rgb(246,211,19)"/><text x="981.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.23%)</title><rect x="979" y="372" width="3" height="15" fill="rgb(215,80,54)"/><text x="982.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="980" y="388" width="2" height="15" fill="rgb(212,109,25)"/><text x="983.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (217 samples, 25.14%)</title><rect x="879" y="340" width="297" height="15" fill="rgb(224,155,21)"/><text x="882.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::..</text></g><g><title>tanhf32x (libm-2.29.so) (142 samples, 16.45%)</title><rect x="982" y="356" width="194" height="15" fill="rgb(237,163,20)"/><text x="985.00" y="366.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (94 samples, 10.89%)</title><rect x="1047" y="372" width="129" height="15" fill="rgb(232,20,27)"/><text x="1050.00" y="382.50">expm1f64 (libm-2..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (222 samples, 25.72%)</title><rect x="879" y="260" width="304" height="15" fill="rgb(209,208,9)"/><text x="882.00" y="270.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (222 samples, 25.72%)</title><rect x="879" y="276" width="304" height="15" fill="rgb(247,211,10)"/><text x="882.00" y="286.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (222 samples, 25.72%)</title><rect x="879" y="292" width="304" height="15" fill="rgb(237,169,7)"/><text x="882.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (222 samples, 25.72%)</title><rect x="879" y="308" width="304" height="15" fill="rgb(231,146,52)"/><text x="882.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (222 samples, 25.72%)</title><rect x="879" y="324" width="304" height="15" fill="rgb(222,114,2)"/><text x="882.00" y="334.50">onnxruntime::SequentialExecutor::Execute..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.58%)</title><rect x="1176" y="340" width="7" height="15" fill="rgb(240,73,29)"/><text x="1179.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.58%)</title><rect x="1176" y="356" width="7" height="15" fill="rgb(233,67,22)"/><text x="1179.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.46%)</title><rect x="1177" y="372" width="6" height="15" fill="rgb(215,73,34)"/><text x="1180.00" y="382.50"></text></g><g><title>0x7f32280b9f2a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1181" y="388" width="2" height="15" fill="rgb(250,85,35)"/><text x="1184.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.46%)</title><rect x="1183" y="260" width="5" height="15" fill="rgb(227,223,35)"/><text x="1186.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(205,117,10)"/><text x="1190.00" y="286.50"></text></g><g><title>all (863 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,105,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:52) (296 samples, 34.30%)</title><rect x="785" y="52" width="405" height="15" fill="rgb(227,127,16)"/><text x="788.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernel..</text></g><g><title>profile_ort (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:51) (296 samples, 34.30%)</title><rect x="785" y="68" width="405" height="15" fill="rgb(238,224,52)"/><text x="788.00" y="78.50">profile_ort (bench_SVC_sigmoid_m_cl_probabilityTrue_ker..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:29) (296 samples, 34.30%)</title><rect x="785" y="84" width="405" height="15" fill="rgb(213,19,13)"/><text x="788.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_k..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:23) (232 samples, 26.88%)</title><rect x="872" y="100" width="318" height="15" fill="rgb(247,172,42)"/><text x="875.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_probabilit..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (229 samples, 26.54%)</title><rect x="876" y="116" width="314" height="15" fill="rgb(232,75,53)"/><text x="879.00" y="126.50">time_predict (mlprodict/asv_benchmark/comm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (229 samples, 26.54%)</title><rect x="876" y="132" width="314" height="15" fill="rgb(217,70,39)"/><text x="879.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (229 samples, 26.54%)</title><rect x="876" y="148" width="314" height="15" fill="rgb(246,140,45)"/><text x="879.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:40..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (228 samples, 26.42%)</title><rect x="878" y="164" width="312" height="15" fill="rgb(209,106,0)"/><text x="881.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (228 samples, 26.42%)</title><rect x="878" y="180" width="312" height="15" fill="rgb(214,156,12)"/><text x="881.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py..</text></g><g><title>run (onnxruntime/capi/session.py:136) (227 samples, 26.30%)</title><rect x="879" y="196" width="311" height="15" fill="rgb(240,8,14)"/><text x="882.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (227 samples, 26.30%)</title><rect x="879" y="212" width="311" height="15" fill="rgb(209,136,22)"/><text x="882.00" y="222.50">pybind11::cpp_function::dispatcher (onnxr..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (227 samples, 26.30%)</title><rect x="879" y="228" width="311" height="15" fill="rgb(237,130,39)"/><text x="882.00" y="238.50">void pybind11::cpp_function::initialize&lt;o..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (227 samples, 26.30%)</title><rect x="879" y="244" width="311" height="15" fill="rgb(225,118,31)"/><text x="882.00" y="254.50">onnxruntime::python::addObjectMethods(pyb..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(205,205,46)"/><text x="1191.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(253,226,38)"/><text x="1191.00" y="286.50"></text></g><g><title>0x7f32280b8d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(230,18,4)"/><text x="1191.00" y="302.50"></text></g></g></svg>