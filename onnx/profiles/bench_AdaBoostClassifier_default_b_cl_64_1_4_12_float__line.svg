<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.19%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(221,62,19)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.19%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(208,48,14)"/><text x="13.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.19%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(233,55,19)"/><text x="13.00" y="206.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.19%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(231,32,0)"/><text x="13.00" y="222.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.19%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(225,93,25)"/><text x="13.00" y="238.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.19%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(246,186,23)"/><text x="13.00" y="254.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.19%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(223,177,49)"/><text x="13.00" y="270.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.19%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(237,106,19)"/><text x="13.00" y="286.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.19%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(242,193,32)"/><text x="13.00" y="302.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.19%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(249,54,11)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:31) (2 samples, 0.37%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(248,35,51)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:11) (2 samples, 0.37%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(234,48,5)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:39) (2 samples, 0.37%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(225,84,13)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.37%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(210,126,7)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.37%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(240,51,1)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.37%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(243,81,28)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.37%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(224,35,28)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.19%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(241,92,6)"/><text x="15.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(208,19,4)"/><text x="15.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.19%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(211,112,21)"/><text x="15.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.19%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(211,100,26)"/><text x="15.00" y="222.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.19%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(246,163,6)"/><text x="15.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.19%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(209,36,23)"/><text x="15.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.19%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(206,113,8)"/><text x="15.00" y="270.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.19%)</title><rect x="12" y="276" width="2" height="15" fill="rgb(246,151,18)"/><text x="15.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.19%)</title><rect x="12" y="292" width="2" height="15" fill="rgb(217,189,2)"/><text x="15.00" y="302.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.19%)</title><rect x="12" y="308" width="2" height="15" fill="rgb(221,26,31)"/><text x="15.00" y="318.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.19%)</title><rect x="12" y="324" width="2" height="15" fill="rgb(235,39,21)"/><text x="15.00" y="334.50"></text></g><g><title>generate_state (bit_generator.c:6032) (1 samples, 0.19%)</title><rect x="12" y="340" width="2" height="15" fill="rgb(251,128,34)"/><text x="15.00" y="350.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c:17413) (1 samples, 0.19%)</title><rect x="12" y="356" width="2" height="15" fill="rgb(206,94,38)"/><text x="15.00" y="366.50"></text></g><g><title>__Pyx_PyNumber_IntOrLong (bit_generator.c:18196) (1 samples, 0.19%)</title><rect x="12" y="372" width="2" height="15" fill="rgb(227,226,17)"/><text x="15.00" y="382.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:28) (1 samples, 0.19%)</title><rect x="14" y="84" width="2" height="15" fill="rgb(229,183,11)"/><text x="17.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="14" y="100" width="2" height="15" fill="rgb(226,124,9)"/><text x="17.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.19%)</title><rect x="14" y="116" width="2" height="15" fill="rgb(207,122,45)"/><text x="17.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.19%)</title><rect x="14" y="132" width="2" height="15" fill="rgb(228,171,41)"/><text x="17.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.19%)</title><rect x="14" y="148" width="2" height="15" fill="rgb(231,206,37)"/><text x="17.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.19%)</title><rect x="14" y="164" width="2" height="15" fill="rgb(252,131,4)"/><text x="17.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.19%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(216,66,40)"/><text x="17.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.19%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(239,0,44)"/><text x="17.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:89) (1 samples, 0.19%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(221,194,37)"/><text x="17.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.19%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(247,166,19)"/><text x="17.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.19%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(239,82,36)"/><text x="17.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:444) (1 samples, 0.19%)</title><rect x="14" y="260" width="2" height="15" fill="rgb(237,59,19)"/><text x="17.00" y="270.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:800) (1 samples, 0.19%)</title><rect x="16" y="148" width="2" height="15" fill="rgb(205,207,9)"/><text x="19.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="16" y="164" width="2" height="15" fill="rgb(237,76,41)"/><text x="19.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.19%)</title><rect x="16" y="180" width="2" height="15" fill="rgb(226,3,3)"/><text x="19.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="16" y="196" width="2" height="15" fill="rgb(230,176,33)"/><text x="19.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.19%)</title><rect x="18" y="148" width="3" height="15" fill="rgb(231,25,7)"/><text x="21.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.19%)</title><rect x="18" y="164" width="3" height="15" fill="rgb(215,114,33)"/><text x="21.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.19%)</title><rect x="18" y="180" width="3" height="15" fill="rgb(243,132,34)"/><text x="21.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.19%)</title><rect x="18" y="196" width="3" height="15" fill="rgb(242,166,33)"/><text x="21.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="18" y="212" width="3" height="15" fill="rgb(238,112,17)"/><text x="21.00" y="222.50"></text></g><g><title>0x7fbdc4a34e54 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="18" y="228" width="3" height="15" fill="rgb(229,36,13)"/><text x="21.00" y="238.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.19%)</title><rect x="21" y="164" width="2" height="15" fill="rgb(206,116,38)"/><text x="24.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.19%)</title><rect x="21" y="180" width="2" height="15" fill="rgb(227,78,4)"/><text x="24.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="21" y="196" width="2" height="15" fill="rgb(227,105,43)"/><text x="24.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.19%)</title><rect x="21" y="212" width="2" height="15" fill="rgb(230,75,33)"/><text x="24.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.19%)</title><rect x="21" y="228" width="2" height="15" fill="rgb(252,98,27)"/><text x="24.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="23" y="212" width="2" height="15" fill="rgb(207,83,9)"/><text x="26.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="23" y="228" width="2" height="15" fill="rgb(236,98,8)"/><text x="26.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.19%)</title><rect x="23" y="244" width="2" height="15" fill="rgb(215,150,20)"/><text x="26.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.19%)</title><rect x="25" y="228" width="2" height="15" fill="rgb(248,55,23)"/><text x="28.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.19%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(236,225,10)"/><text x="28.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.37%)</title><rect x="29" y="244" width="5" height="15" fill="rgb(242,145,8)"/><text x="32.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="36" y="260" width="2" height="15" fill="rgb(239,109,39)"/><text x="39.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 1.31%)</title><rect x="25" y="212" width="15" height="15" fill="rgb(242,189,6)"/><text x="28.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 1.12%)</title><rect x="27" y="228" width="13" height="15" fill="rgb(245,148,27)"/><text x="30.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.56%)</title><rect x="34" y="244" width="6" height="15" fill="rgb(222,5,24)"/><text x="37.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="38" y="260" width="2" height="15" fill="rgb(254,2,23)"/><text x="41.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.19%)</title><rect x="40" y="244" width="3" height="15" fill="rgb(237,127,24)"/><text x="43.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.19%)</title><rect x="43" y="244" width="2" height="15" fill="rgb(218,57,21)"/><text x="46.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.19%)</title><rect x="47" y="260" width="2" height="15" fill="rgb(208,107,18)"/><text x="50.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.56%)</title><rect x="45" y="244" width="6" height="15" fill="rgb(217,162,51)"/><text x="48.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.19%)</title><rect x="49" y="260" width="2" height="15" fill="rgb(211,188,19)"/><text x="52.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.19%)</title><rect x="51" y="244" width="3" height="15" fill="rgb(229,30,7)"/><text x="54.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.19%)</title><rect x="51" y="260" width="3" height="15" fill="rgb(252,67,33)"/><text x="54.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.19%)</title><rect x="51" y="276" width="3" height="15" fill="rgb(212,14,51)"/><text x="54.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.19%)</title><rect x="51" y="292" width="3" height="15" fill="rgb(227,195,14)"/><text x="54.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.19%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(223,36,7)"/><text x="57.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.19%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(233,198,9)"/><text x="59.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.19%)</title><rect x="56" y="260" width="2" height="15" fill="rgb(230,227,8)"/><text x="59.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.37%)</title><rect x="58" y="244" width="4" height="15" fill="rgb(208,199,45)"/><text x="61.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.37%)</title><rect x="58" y="260" width="4" height="15" fill="rgb(238,122,53)"/><text x="61.00" y="270.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="60" y="276" width="2" height="15" fill="rgb(252,155,1)"/><text x="63.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (11 samples, 2.05%)</title><rect x="40" y="212" width="25" height="15" fill="rgb(212,124,31)"/><text x="43.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (11 samples, 2.05%)</title><rect x="40" y="228" width="25" height="15" fill="rgb(222,99,54)"/><text x="43.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.19%)</title><rect x="62" y="244" width="3" height="15" fill="rgb(213,172,36)"/><text x="65.00" y="254.50"></text></g><g><title>0x7fbd9e461f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="65" y="244" width="2" height="15" fill="rgb(244,59,24)"/><text x="68.00" y="254.50"></text></g><g><title>0x7fbd9e451d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="65" y="260" width="2" height="15" fill="rgb(211,186,54)"/><text x="68.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.19%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(254,86,37)"/><text x="68.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(237,85,46)"/><text x="68.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="65" y="308" width="2" height="15" fill="rgb(217,19,26)"/><text x="68.00" y="318.50"></text></g><g><title>0x7fbd9e4702df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="67" y="276" width="2" height="15" fill="rgb(232,152,39)"/><text x="70.00" y="286.50"></text></g><g><title>0x7fbd9e454d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="67" y="292" width="2" height="15" fill="rgb(228,176,8)"/><text x="70.00" y="302.50"></text></g><g><title>0x7fbd9e454666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="67" y="308" width="2" height="15" fill="rgb(254,167,54)"/><text x="70.00" y="318.50"></text></g><g><title>0x7fbd9e44a2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(209,36,46)"/><text x="70.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.19%)</title><rect x="67" y="340" width="2" height="15" fill="rgb(248,8,4)"/><text x="70.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.19%)</title><rect x="67" y="356" width="2" height="15" fill="rgb(243,193,48)"/><text x="70.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (3 samples, 0.56%)</title><rect x="65" y="212" width="6" height="15" fill="rgb(211,107,38)"/><text x="68.00" y="222.50"></text></g><g><title>0x7fbd9e462d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="65" y="228" width="6" height="15" fill="rgb(250,189,10)"/><text x="68.00" y="238.50"></text></g><g><title>0x7fbd9e461fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="67" y="244" width="4" height="15" fill="rgb(250,50,27)"/><text x="70.00" y="254.50"></text></g><g><title>0x7fbd9e471405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="67" y="260" width="4" height="15" fill="rgb(217,72,4)"/><text x="70.00" y="270.50"></text></g><g><title>0x7fbd9e47075a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="69" y="276" width="2" height="15" fill="rgb(238,205,9)"/><text x="72.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (2 samples, 0.37%)</title><rect x="71" y="212" width="5" height="15" fill="rgb(206,13,15)"/><text x="74.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.19%)</title><rect x="73" y="228" width="3" height="15" fill="rgb(240,58,4)"/><text x="76.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="73" y="244" width="3" height="15" fill="rgb(217,218,21)"/><text x="76.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c:1801) (1 samples, 0.19%)</title><rect x="76" y="228" width="2" height="15" fill="rgb(210,186,11)"/><text x="79.00" y="238.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.19%)</title><rect x="76" y="244" width="2" height="15" fill="rgb(217,109,22)"/><text x="79.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2028) (1 samples, 0.19%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(207,8,18)"/><text x="81.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.37%)</title><rect x="78" y="228" width="4" height="15" fill="rgb(206,137,37)"/><text x="81.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (2 samples, 0.37%)</title><rect x="78" y="244" width="4" height="15" fill="rgb(209,69,6)"/><text x="81.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.19%)</title><rect x="80" y="260" width="2" height="15" fill="rgb(223,99,29)"/><text x="83.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3851) (1 samples, 0.19%)</title><rect x="80" y="276" width="2" height="15" fill="rgb(237,75,12)"/><text x="83.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (4 samples, 0.75%)</title><rect x="76" y="212" width="8" height="15" fill="rgb(238,227,51)"/><text x="79.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.19%)</title><rect x="82" y="228" width="2" height="15" fill="rgb(254,89,23)"/><text x="85.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.19%)</title><rect x="82" y="244" width="2" height="15" fill="rgb(239,80,8)"/><text x="85.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="84" y="276" width="3" height="15" fill="rgb(217,52,1)"/><text x="87.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="84" y="292" width="3" height="15" fill="rgb(213,73,31)"/><text x="87.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.19%)</title><rect x="84" y="308" width="3" height="15" fill="rgb(236,161,34)"/><text x="87.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="87" y="276" width="2" height="15" fill="rgb(250,22,27)"/><text x="90.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="87" y="292" width="2" height="15" fill="rgb(226,212,20)"/><text x="90.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.19%)</title><rect x="87" y="308" width="2" height="15" fill="rgb(212,182,12)"/><text x="90.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (31 samples, 5.78%)</title><rect x="23" y="196" width="68" height="15" fill="rgb(238,124,48)"/><text x="26.00" y="206.50">_samme_..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (3 samples, 0.56%)</title><rect x="84" y="212" width="7" height="15" fill="rgb(223,217,35)"/><text x="87.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="84" y="228" width="7" height="15" fill="rgb(247,130,0)"/><text x="87.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="84" y="244" width="7" height="15" fill="rgb(239,58,23)"/><text x="87.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="84" y="260" width="7" height="15" fill="rgb(209,105,32)"/><text x="87.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="89" y="276" width="2" height="15" fill="rgb(222,192,46)"/><text x="92.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:763) (1 samples, 0.19%)</title><rect x="89" y="292" width="2" height="15" fill="rgb(230,215,30)"/><text x="92.00" y="302.50"></text></g><g><title>npy_blocked_end (lowlevel_strided_loops.h:468) (1 samples, 0.19%)</title><rect x="89" y="308" width="2" height="15" fill="rgb(225,174,48)"/><text x="92.00" y="318.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:373) (1 samples, 0.19%)</title><rect x="93" y="212" width="2" height="15" fill="rgb(234,55,12)"/><text x="96.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(247,70,52)"/><text x="98.00" y="222.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py:1971) (1 samples, 0.19%)</title><rect x="95" y="228" width="3" height="15" fill="rgb(219,150,20)"/><text x="98.00" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.19%)</title><rect x="98" y="308" width="2" height="15" fill="rgb(227,133,44)"/><text x="101.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="100" y="324" width="2" height="15" fill="rgb(205,101,43)"/><text x="103.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="100" y="340" width="2" height="15" fill="rgb(242,142,49)"/><text x="103.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.19%)</title><rect x="102" y="372" width="2" height="15" fill="rgb(242,135,10)"/><text x="105.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.37%)</title><rect x="102" y="356" width="4" height="15" fill="rgb(247,14,39)"/><text x="105.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="104" y="372" width="2" height="15" fill="rgb(226,29,47)"/><text x="107.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.19%)</title><rect x="104" y="388" width="2" height="15" fill="rgb(232,154,13)"/><text x="107.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.19%)</title><rect x="104" y="404" width="2" height="15" fill="rgb(213,0,16)"/><text x="107.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="104" y="420" width="2" height="15" fill="rgb(210,20,8)"/><text x="107.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="104" y="436" width="2" height="15" fill="rgb(211,199,27)"/><text x="107.00" y="446.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="104" y="452" width="2" height="15" fill="rgb(249,159,51)"/><text x="107.00" y="462.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="102" y="340" width="7" height="15" fill="rgb(208,77,38)"/><text x="105.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.19%)</title><rect x="106" y="356" width="3" height="15" fill="rgb(215,206,5)"/><text x="109.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.19%)</title><rect x="106" y="372" width="3" height="15" fill="rgb(241,109,32)"/><text x="109.00" y="382.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.19%)</title><rect x="106" y="388" width="3" height="15" fill="rgb(249,15,34)"/><text x="109.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.19%)</title><rect x="109" y="356" width="2" height="15" fill="rgb(238,109,35)"/><text x="112.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 1.12%)</title><rect x="100" y="308" width="13" height="15" fill="rgb(210,69,36)"/><text x="103.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.93%)</title><rect x="102" y="324" width="11" height="15" fill="rgb(232,10,7)"/><text x="105.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.37%)</title><rect x="109" y="340" width="4" height="15" fill="rgb(219,154,9)"/><text x="112.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.19%)</title><rect x="111" y="356" width="2" height="15" fill="rgb(214,204,31)"/><text x="114.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.56%)</title><rect x="115" y="324" width="7" height="15" fill="rgb(213,178,51)"/><text x="118.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.37%)</title><rect x="117" y="340" width="5" height="15" fill="rgb(205,78,9)"/><text x="120.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="122" y="324" width="2" height="15" fill="rgb(250,83,5)"/><text x="125.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="122" y="340" width="2" height="15" fill="rgb(251,214,30)"/><text x="125.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="122" y="356" width="2" height="15" fill="rgb(225,69,39)"/><text x="125.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.19%)</title><rect x="122" y="372" width="2" height="15" fill="rgb(214,30,51)"/><text x="125.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="122" y="388" width="2" height="15" fill="rgb(228,138,44)"/><text x="125.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.19%)</title><rect x="122" y="404" width="2" height="15" fill="rgb(254,41,4)"/><text x="125.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.19%)</title><rect x="122" y="420" width="2" height="15" fill="rgb(230,194,43)"/><text x="125.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="122" y="436" width="2" height="15" fill="rgb(246,39,8)"/><text x="125.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1627) (1 samples, 0.19%)</title><rect x="122" y="452" width="2" height="15" fill="rgb(218,17,10)"/><text x="125.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 1.12%)</title><rect x="113" y="308" width="13" height="15" fill="rgb(238,194,45)"/><text x="116.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.19%)</title><rect x="124" y="324" width="2" height="15" fill="rgb(220,46,13)"/><text x="127.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="124" y="340" width="2" height="15" fill="rgb(216,63,53)"/><text x="127.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="124" y="356" width="2" height="15" fill="rgb(236,208,35)"/><text x="127.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="124" y="372" width="2" height="15" fill="rgb(232,27,34)"/><text x="127.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="124" y="388" width="2" height="15" fill="rgb(213,144,22)"/><text x="127.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="126" y="340" width="2" height="15" fill="rgb(253,52,52)"/><text x="129.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="126" y="356" width="2" height="15" fill="rgb(234,119,21)"/><text x="129.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="126" y="372" width="2" height="15" fill="rgb(212,183,6)"/><text x="129.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="126" y="388" width="2" height="15" fill="rgb(230,56,48)"/><text x="129.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="126" y="404" width="2" height="15" fill="rgb(237,3,13)"/><text x="129.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.19%)</title><rect x="126" y="420" width="2" height="15" fill="rgb(215,181,47)"/><text x="129.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="128" y="372" width="3" height="15" fill="rgb(224,139,13)"/><text x="131.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.19%)</title><rect x="128" y="388" width="3" height="15" fill="rgb(226,101,25)"/><text x="131.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.19%)</title><rect x="128" y="404" width="3" height="15" fill="rgb(231,101,44)"/><text x="131.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="128" y="420" width="3" height="15" fill="rgb(233,125,12)"/><text x="131.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="128" y="436" width="3" height="15" fill="rgb(213,159,11)"/><text x="131.00" y="446.50"></text></g><g><title>npy_alloc_cache (alloc.c:121) (1 samples, 0.19%)</title><rect x="128" y="452" width="3" height="15" fill="rgb(250,148,31)"/><text x="131.00" y="462.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="128" y="340" width="5" height="15" fill="rgb(246,160,20)"/><text x="131.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.37%)</title><rect x="128" y="356" width="5" height="15" fill="rgb(205,160,39)"/><text x="131.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.19%)</title><rect x="131" y="372" width="2" height="15" fill="rgb(222,161,54)"/><text x="134.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.19%)</title><rect x="131" y="388" width="2" height="15" fill="rgb(222,35,1)"/><text x="134.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (20 samples, 3.73%)</title><rect x="91" y="196" width="44" height="15" fill="rgb(228,24,28)"/><text x="94.00" y="206.50">_sam..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (17 samples, 3.17%)</title><rect x="98" y="212" width="37" height="15" fill="rgb(226,21,7)"/><text x="101.00" y="222.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 3.17%)</title><rect x="98" y="228" width="37" height="15" fill="rgb(252,202,30)"/><text x="101.00" y="238.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (17 samples, 3.17%)</title><rect x="98" y="244" width="37" height="15" fill="rgb(215,20,5)"/><text x="101.00" y="254.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (17 samples, 3.17%)</title><rect x="98" y="260" width="37" height="15" fill="rgb(236,199,54)"/><text x="101.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (17 samples, 3.17%)</title><rect x="98" y="276" width="37" height="15" fill="rgb(247,85,23)"/><text x="101.00" y="286.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 3.17%)</title><rect x="98" y="292" width="37" height="15" fill="rgb(220,121,0)"/><text x="101.00" y="302.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:129) (4 samples, 0.75%)</title><rect x="126" y="308" width="9" height="15" fill="rgb(217,85,6)"/><text x="129.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.75%)</title><rect x="126" y="324" width="9" height="15" fill="rgb(225,216,37)"/><text x="129.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="133" y="340" width="2" height="15" fill="rgb(208,174,16)"/><text x="136.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="133" y="356" width="2" height="15" fill="rgb(229,196,25)"/><text x="136.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="133" y="372" width="2" height="15" fill="rgb(239,9,41)"/><text x="136.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="133" y="388" width="2" height="15" fill="rgb(235,16,9)"/><text x="136.00" y="398.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.19%)</title><rect x="135" y="212" width="2" height="15" fill="rgb(236,67,38)"/><text x="138.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="137" y="260" width="2" height="15" fill="rgb(252,134,27)"/><text x="140.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="137" y="276" width="2" height="15" fill="rgb(243,209,22)"/><text x="140.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="137" y="292" width="2" height="15" fill="rgb(236,229,18)"/><text x="140.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="137" y="308" width="2" height="15" fill="rgb(235,69,42)"/><text x="140.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="137" y="324" width="2" height="15" fill="rgb(252,200,16)"/><text x="140.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="137" y="340" width="2" height="15" fill="rgb(234,144,50)"/><text x="140.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (3 samples, 0.56%)</title><rect x="135" y="196" width="7" height="15" fill="rgb(244,134,36)"/><text x="138.00" y="206.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.37%)</title><rect x="137" y="212" width="5" height="15" fill="rgb(205,118,13)"/><text x="140.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.37%)</title><rect x="137" y="228" width="5" height="15" fill="rgb(229,211,36)"/><text x="140.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.37%)</title><rect x="137" y="244" width="5" height="15" fill="rgb(249,200,35)"/><text x="140.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="139" y="260" width="3" height="15" fill="rgb(213,28,21)"/><text x="142.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="139" y="276" width="3" height="15" fill="rgb(210,201,3)"/><text x="142.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="139" y="292" width="3" height="15" fill="rgb(234,140,9)"/><text x="142.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="139" y="308" width="3" height="15" fill="rgb(216,127,13)"/><text x="142.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="139" y="324" width="3" height="15" fill="rgb(252,119,0)"/><text x="142.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (55 samples, 10.26%)</title><rect x="23" y="180" width="121" height="15" fill="rgb(226,163,3)"/><text x="26.00" y="190.50">&lt;genexpr&gt; (skle..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="142" y="196" width="2" height="15" fill="rgb(210,166,5)"/><text x="145.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="144" y="212" width="2" height="15" fill="rgb(239,12,38)"/><text x="147.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.19%)</title><rect x="144" y="228" width="2" height="15" fill="rgb(238,128,52)"/><text x="147.00" y="238.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:18) (60 samples, 11.19%)</title><rect x="16" y="100" width="132" height="15" fill="rgb(253,60,50)"/><text x="19.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (60 samples, 11.19%)</title><rect x="16" y="116" width="132" height="15" fill="rgb(223,161,18)"/><text x="19.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (60 samples, 11.19%)</title><rect x="16" y="132" width="132" height="15" fill="rgb(240,62,9)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (58 samples, 10.82%)</title><rect x="21" y="148" width="127" height="15" fill="rgb(212,153,39)"/><text x="24.00" y="158.50">predict_proba (..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (57 samples, 10.63%)</title><rect x="23" y="164" width="125" height="15" fill="rgb(226,206,27)"/><text x="26.00" y="174.50">decision_functi..</text></g><g><title>array_add (number.c:330) (2 samples, 0.37%)</title><rect x="144" y="180" width="4" height="15" fill="rgb(228,73,26)"/><text x="147.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="144" y="196" width="4" height="15" fill="rgb(246,129,8)"/><text x="147.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="146" y="212" width="2" height="15" fill="rgb(233,170,48)"/><text x="149.00" y="222.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.19%)</title><rect x="146" y="228" width="2" height="15" fill="rgb(224,219,50)"/><text x="149.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="146" y="244" width="2" height="15" fill="rgb(228,65,42)"/><text x="149.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="146" y="260" width="2" height="15" fill="rgb(250,62,0)"/><text x="149.00" y="270.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.19%)</title><rect x="148" y="148" width="2" height="15" fill="rgb(236,169,42)"/><text x="151.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.19%)</title><rect x="148" y="164" width="2" height="15" fill="rgb(245,45,20)"/><text x="151.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.19%)</title><rect x="148" y="180" width="2" height="15" fill="rgb(212,68,22)"/><text x="151.00" y="190.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.19%)</title><rect x="148" y="196" width="2" height="15" fill="rgb(225,174,26)"/><text x="151.00" y="206.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.19%)</title><rect x="150" y="164" width="3" height="15" fill="rgb(246,59,22)"/><text x="153.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.19%)</title><rect x="150" y="180" width="3" height="15" fill="rgb(210,66,4)"/><text x="153.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.19%)</title><rect x="150" y="196" width="3" height="15" fill="rgb(205,141,8)"/><text x="153.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.37%)</title><rect x="166" y="244" width="4" height="15" fill="rgb(211,227,15)"/><text x="169.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 1.68%)</title><rect x="170" y="244" width="20" height="15" fill="rgb(212,0,3)"/><text x="173.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (7 samples, 1.31%)</title><rect x="175" y="260" width="15" height="15" fill="rgb(229,201,34)"/><text x="178.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (19 samples, 3.54%)</title><rect x="153" y="212" width="41" height="15" fill="rgb(249,67,38)"/><text x="156.00" y="222.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (18 samples, 3.36%)</title><rect x="155" y="228" width="39" height="15" fill="rgb(214,218,13)"/><text x="158.00" y="238.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.37%)</title><rect x="190" y="244" width="4" height="15" fill="rgb(245,7,17)"/><text x="193.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="192" y="260" width="2" height="15" fill="rgb(227,103,3)"/><text x="195.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.37%)</title><rect x="197" y="244" width="4" height="15" fill="rgb(241,196,9)"/><text x="200.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.19%)</title><rect x="205" y="260" width="3" height="15" fill="rgb(225,54,47)"/><text x="208.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.75%)</title><rect x="201" y="244" width="9" height="15" fill="rgb(239,172,42)"/><text x="204.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.19%)</title><rect x="208" y="260" width="2" height="15" fill="rgb(251,211,9)"/><text x="211.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.19%)</title><rect x="210" y="260" width="2" height="15" fill="rgb(251,93,8)"/><text x="213.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.19%)</title><rect x="212" y="260" width="2" height="15" fill="rgb(250,165,34)"/><text x="215.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 1.31%)</title><rect x="210" y="244" width="15" height="15" fill="rgb(217,0,37)"/><text x="213.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 0.93%)</title><rect x="214" y="260" width="11" height="15" fill="rgb(239,110,40)"/><text x="217.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 0.93%)</title><rect x="214" y="276" width="11" height="15" fill="rgb(232,193,9)"/><text x="217.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.37%)</title><rect x="225" y="244" width="5" height="15" fill="rgb(225,150,9)"/><text x="228.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.19%)</title><rect x="227" y="260" width="3" height="15" fill="rgb(226,188,19)"/><text x="230.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.56%)</title><rect x="230" y="244" width="6" height="15" fill="rgb(216,22,49)"/><text x="233.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.56%)</title><rect x="230" y="260" width="6" height="15" fill="rgb(253,27,10)"/><text x="233.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.37%)</title><rect x="232" y="276" width="4" height="15" fill="rgb(223,16,19)"/><text x="235.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.19%)</title><rect x="234" y="292" width="2" height="15" fill="rgb(247,150,9)"/><text x="237.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.19%)</title><rect x="234" y="308" width="2" height="15" fill="rgb(233,125,15)"/><text x="237.00" y="318.50"></text></g><g><title>0x7fbdc3c410a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="234" y="324" width="2" height="15" fill="rgb(211,3,32)"/><text x="237.00" y="334.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.19%)</title><rect x="236" y="260" width="2" height="15" fill="rgb(216,144,37)"/><text x="239.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.19%)</title><rect x="238" y="260" width="3" height="15" fill="rgb(223,214,11)"/><text x="241.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.56%)</title><rect x="236" y="244" width="7" height="15" fill="rgb(206,160,13)"/><text x="239.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.19%)</title><rect x="241" y="260" width="2" height="15" fill="rgb(243,68,15)"/><text x="244.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.19%)</title><rect x="243" y="244" width="2" height="15" fill="rgb(216,3,40)"/><text x="246.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.19%)</title><rect x="245" y="244" width="2" height="15" fill="rgb(253,62,12)"/><text x="248.00" y="254.50"></text></g><g><title>0x7fbdc4afd0e1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="256" y="276" width="2" height="15" fill="rgb(224,202,45)"/><text x="259.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="258" y="276" width="2" height="15" fill="rgb(211,95,15)"/><text x="261.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (7 samples, 1.31%)</title><rect x="247" y="260" width="16" height="15" fill="rgb(226,53,12)"/><text x="250.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.19%)</title><rect x="260" y="276" width="3" height="15" fill="rgb(217,86,1)"/><text x="263.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (10 samples, 1.87%)</title><rect x="247" y="244" width="22" height="15" fill="rgb(244,196,54)"/><text x="250.00" y="254.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 0.56%)</title><rect x="263" y="260" width="6" height="15" fill="rgb(251,154,51)"/><text x="266.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.37%)</title><rect x="269" y="260" width="5" height="15" fill="rgb(220,210,6)"/><text x="272.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.19%)</title><rect x="274" y="260" width="2" height="15" fill="rgb(241,95,37)"/><text x="277.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.19%)</title><rect x="276" y="260" width="2" height="15" fill="rgb(219,66,34)"/><text x="279.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 1.87%)</title><rect x="269" y="244" width="22" height="15" fill="rgb(235,48,13)"/><text x="272.00" y="254.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 1.12%)</title><rect x="278" y="260" width="13" height="15" fill="rgb(213,159,29)"/><text x="281.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 0.75%)</title><rect x="282" y="276" width="9" height="15" fill="rgb(221,56,2)"/><text x="285.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (45 samples, 8.40%)</title><rect x="194" y="228" width="99" height="15" fill="rgb(234,63,50)"/><text x="197.00" y="238.50">_validate_X..</text></g><g><title>check_array (sklearn/utils/validation.py:598) (1 samples, 0.19%)</title><rect x="291" y="244" width="2" height="15" fill="rgb(211,66,29)"/><text x="294.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (46 samples, 8.58%)</title><rect x="194" y="212" width="102" height="15" fill="rgb(254,28,3)"/><text x="197.00" y="222.50">predict_prob..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.19%)</title><rect x="293" y="228" width="3" height="15" fill="rgb(212,152,41)"/><text x="296.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="293" y="244" width="3" height="15" fill="rgb(244,100,12)"/><text x="296.00" y="254.50"></text></g><g><title>0x7fbd9e461f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="296" y="244" width="2" height="15" fill="rgb(246,31,15)"/><text x="299.00" y="254.50"></text></g><g><title>0x7fbd9e46ff32 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="298" y="276" width="2" height="15" fill="rgb(247,149,27)"/><text x="301.00" y="286.50"></text></g><g><title>0x7fbd9e470225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="300" y="276" width="2" height="15" fill="rgb(244,14,3)"/><text x="303.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.19%)</title><rect x="300" y="292" width="2" height="15" fill="rgb(250,201,9)"/><text x="303.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.19%)</title><rect x="300" y="308" width="2" height="15" fill="rgb(236,208,9)"/><text x="303.00" y="318.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.19%)</title><rect x="300" y="324" width="2" height="15" fill="rgb(229,46,19)"/><text x="303.00" y="334.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.19%)</title><rect x="300" y="340" width="2" height="15" fill="rgb(226,55,18)"/><text x="303.00" y="350.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.19%)</title><rect x="300" y="356" width="2" height="15" fill="rgb(253,203,54)"/><text x="303.00" y="366.50"></text></g><g><title>0x7fbd9e454d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="302" y="292" width="3" height="15" fill="rgb(219,31,6)"/><text x="305.00" y="302.50"></text></g><g><title>0x7fbd9e454666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="302" y="308" width="3" height="15" fill="rgb(249,178,24)"/><text x="305.00" y="318.50"></text></g><g><title>0x7fbd9e44a2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="302" y="324" width="3" height="15" fill="rgb(238,158,26)"/><text x="305.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.19%)</title><rect x="302" y="340" width="3" height="15" fill="rgb(226,51,22)"/><text x="305.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:666) (1 samples, 0.19%)</title><rect x="302" y="356" width="3" height="15" fill="rgb(251,99,18)"/><text x="305.00" y="366.50"></text></g><g><title>0x7fbd9e4702df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="302" y="276" width="5" height="15" fill="rgb(248,51,21)"/><text x="305.00" y="286.50"></text></g><g><title>0x7fbd9e454e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="305" y="292" width="2" height="15" fill="rgb(217,210,14)"/><text x="308.00" y="302.50"></text></g><g><title>0x7fbd9e4482bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="305" y="308" width="2" height="15" fill="rgb(223,145,18)"/><text x="308.00" y="318.50"></text></g><g><title>0x7fbd9e447dec (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="305" y="324" width="2" height="15" fill="rgb(219,218,42)"/><text x="308.00" y="334.50"></text></g><g><title>0x7fbd9e47048a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="307" y="276" width="2" height="15" fill="rgb(238,110,33)"/><text x="310.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.19%)</title><rect x="309" y="292" width="2" height="15" fill="rgb(237,221,33)"/><text x="312.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="309" y="308" width="2" height="15" fill="rgb(212,74,0)"/><text x="312.00" y="318.50"></text></g><g><title>0x7fbd9e470592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="309" y="276" width="4" height="15" fill="rgb(225,43,15)"/><text x="312.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.19%)</title><rect x="311" y="292" width="2" height="15" fill="rgb(252,206,25)"/><text x="314.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="311" y="308" width="2" height="15" fill="rgb(218,56,14)"/><text x="314.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.19%)</title><rect x="311" y="324" width="2" height="15" fill="rgb(252,156,26)"/><text x="314.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1025) (1 samples, 0.19%)</title><rect x="311" y="340" width="2" height="15" fill="rgb(226,220,42)"/><text x="314.00" y="350.50"></text></g><g><title>0x7fbd9e4708c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="313" y="276" width="3" height="15" fill="rgb(214,14,27)"/><text x="316.00" y="286.50"></text></g><g><title>0x7fbd9e47092f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="316" y="276" width="2" height="15" fill="rgb(211,174,24)"/><text x="319.00" y="286.50"></text></g><g><title>0x7fbd9e4459af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="316" y="292" width="2" height="15" fill="rgb(206,59,15)"/><text x="319.00" y="302.50"></text></g><g><title>0x7fbd9e461fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.05%)</title><rect x="298" y="244" width="24" height="15" fill="rgb(253,125,16)"/><text x="301.00" y="254.50">0..</text></g><g><title>0x7fbd9e471405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.05%)</title><rect x="298" y="260" width="24" height="15" fill="rgb(239,118,15)"/><text x="301.00" y="270.50">0..</text></g><g><title>0x7fbd9e470c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="318" y="276" width="4" height="15" fill="rgb(226,119,3)"/><text x="321.00" y="286.50"></text></g><g><title>0x7fbd9e448529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="318" y="292" width="4" height="15" fill="rgb(236,44,14)"/><text x="321.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.37%)</title><rect x="318" y="308" width="4" height="15" fill="rgb(227,75,19)"/><text x="321.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (2 samples, 0.37%)</title><rect x="318" y="324" width="4" height="15" fill="rgb(238,16,44)"/><text x="321.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.19%)</title><rect x="322" y="260" width="2" height="15" fill="rgb(216,127,17)"/><text x="325.00" y="270.50"></text></g><g><title>0x7fbd9e46205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="322" y="244" width="5" height="15" fill="rgb(247,13,16)"/><text x="325.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.19%)</title><rect x="324" y="260" width="3" height="15" fill="rgb(206,184,13)"/><text x="327.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.19%)</title><rect x="324" y="276" width="3" height="15" fill="rgb(222,65,5)"/><text x="327.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.19%)</title><rect x="324" y="292" width="3" height="15" fill="rgb(222,170,37)"/><text x="327.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.19%)</title><rect x="324" y="308" width="3" height="15" fill="rgb(229,192,2)"/><text x="327.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.19%)</title><rect x="324" y="324" width="3" height="15" fill="rgb(229,51,6)"/><text x="327.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (15 samples, 2.80%)</title><rect x="296" y="212" width="33" height="15" fill="rgb(238,131,15)"/><text x="299.00" y="222.50">pr..</text></g><g><title>0x7fbd9e462d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.80%)</title><rect x="296" y="228" width="33" height="15" fill="rgb(244,55,47)"/><text x="299.00" y="238.50">0x..</text></g><g><title>0x7fbd9e46214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="327" y="244" width="2" height="15" fill="rgb(249,5,33)"/><text x="330.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="327" y="260" width="2" height="15" fill="rgb(222,15,16)"/><text x="330.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (2 samples, 0.37%)</title><rect x="329" y="212" width="4" height="15" fill="rgb(215,83,54)"/><text x="332.00" y="222.50"></text></g><g><title>0x7fbdc4a3f124 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="340" y="228" width="2" height="15" fill="rgb(250,161,36)"/><text x="343.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.19%)</title><rect x="342" y="244" width="2" height="15" fill="rgb(225,81,35)"/><text x="345.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (6 samples, 1.12%)</title><rect x="333" y="212" width="13" height="15" fill="rgb(239,67,45)"/><text x="336.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.37%)</title><rect x="342" y="228" width="4" height="15" fill="rgb(251,6,47)"/><text x="345.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.19%)</title><rect x="344" y="244" width="2" height="15" fill="rgb(218,58,33)"/><text x="347.00" y="254.50"></text></g><g><title>unpack_indices (mapping.c:225) (1 samples, 0.19%)</title><rect x="344" y="260" width="2" height="15" fill="rgb(214,210,45)"/><text x="347.00" y="270.50"></text></g><g><title>unpack_tuple (mapping.c:171) (1 samples, 0.19%)</title><rect x="344" y="276" width="2" height="15" fill="rgb(215,83,48)"/><text x="347.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="346" y="276" width="3" height="15" fill="rgb(211,66,40)"/><text x="349.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="346" y="292" width="3" height="15" fill="rgb(231,109,1)"/><text x="349.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="346" y="308" width="3" height="15" fill="rgb(254,60,16)"/><text x="349.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="346" y="324" width="3" height="15" fill="rgb(245,156,28)"/><text x="349.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="346" y="340" width="3" height="15" fill="rgb(235,73,50)"/><text x="349.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="346" y="356" width="3" height="15" fill="rgb(218,37,35)"/><text x="349.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4529) (1 samples, 0.19%)</title><rect x="349" y="292" width="2" height="15" fill="rgb(206,144,38)"/><text x="352.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2191) (1 samples, 0.19%)</title><rect x="351" y="356" width="2" height="15" fill="rgb(220,91,51)"/><text x="354.00" y="366.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2199) (1 samples, 0.19%)</title><rect x="353" y="356" width="2" height="15" fill="rgb(206,211,48)"/><text x="356.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (3 samples, 0.56%)</title><rect x="351" y="308" width="6" height="15" fill="rgb(249,189,28)"/><text x="354.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (3 samples, 0.56%)</title><rect x="351" y="324" width="6" height="15" fill="rgb(254,75,13)"/><text x="354.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (3 samples, 0.56%)</title><rect x="351" y="340" width="6" height="15" fill="rgb(220,76,1)"/><text x="354.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.19%)</title><rect x="355" y="356" width="2" height="15" fill="rgb(233,221,15)"/><text x="358.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1721) (1 samples, 0.19%)</title><rect x="355" y="372" width="2" height="15" fill="rgb(229,226,35)"/><text x="358.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="357" y="324" width="3" height="15" fill="rgb(229,156,42)"/><text x="360.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="357" y="340" width="3" height="15" fill="rgb(245,75,28)"/><text x="360.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.19%)</title><rect x="357" y="356" width="3" height="15" fill="rgb(237,216,46)"/><text x="360.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="357" y="372" width="3" height="15" fill="rgb(216,135,20)"/><text x="360.00" y="382.50"></text></g><g><title>0x7fbdc49d6a4d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="357" y="388" width="3" height="15" fill="rgb(214,156,54)"/><text x="360.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:52) (1 samples, 0.19%)</title><rect x="360" y="372" width="2" height="15" fill="rgb(238,10,51)"/><text x="363.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.37%)</title><rect x="360" y="324" width="4" height="15" fill="rgb(227,13,24)"/><text x="363.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.37%)</title><rect x="360" y="340" width="4" height="15" fill="rgb(250,151,30)"/><text x="363.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.37%)</title><rect x="360" y="356" width="4" height="15" fill="rgb(220,111,51)"/><text x="363.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.19%)</title><rect x="362" y="372" width="2" height="15" fill="rgb(217,138,43)"/><text x="365.00" y="382.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.19%)</title><rect x="362" y="388" width="2" height="15" fill="rgb(227,216,11)"/><text x="365.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="362" y="404" width="2" height="15" fill="rgb(224,122,6)"/><text x="365.00" y="414.50"></text></g><g><title>0x7fbdc49d68b8 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="362" y="420" width="2" height="15" fill="rgb(208,180,30)"/><text x="365.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="364" y="340" width="2" height="15" fill="rgb(251,30,46)"/><text x="367.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.19%)</title><rect x="364" y="356" width="2" height="15" fill="rgb(240,60,49)"/><text x="367.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="366" y="340" width="2" height="15" fill="rgb(230,26,41)"/><text x="369.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3071) (1 samples, 0.19%)</title><rect x="366" y="356" width="2" height="15" fill="rgb(244,176,22)"/><text x="369.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.56%)</title><rect x="364" y="324" width="7" height="15" fill="rgb(212,100,35)"/><text x="367.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="368" y="340" width="3" height="15" fill="rgb(240,159,17)"/><text x="371.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1688) (1 samples, 0.19%)</title><rect x="368" y="356" width="3" height="15" fill="rgb(210,128,52)"/><text x="371.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.19%)</title><rect x="371" y="340" width="2" height="15" fill="rgb(221,202,24)"/><text x="374.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.37%)</title><rect x="371" y="324" width="4" height="15" fill="rgb(253,133,2)"/><text x="374.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="373" y="340" width="2" height="15" fill="rgb(247,35,51)"/><text x="376.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="373" y="356" width="2" height="15" fill="rgb(234,176,28)"/><text x="376.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (14 samples, 2.61%)</title><rect x="346" y="212" width="31" height="15" fill="rgb(232,14,28)"/><text x="349.00" y="222.50">pr..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 2.61%)</title><rect x="346" y="228" width="31" height="15" fill="rgb(237,207,3)"/><text x="349.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 2.61%)</title><rect x="346" y="244" width="31" height="15" fill="rgb(247,30,44)"/><text x="349.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 2.61%)</title><rect x="346" y="260" width="31" height="15" fill="rgb(207,96,33)"/><text x="349.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 2.43%)</title><rect x="349" y="276" width="28" height="15" fill="rgb(218,60,5)"/><text x="352.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 2.24%)</title><rect x="351" y="292" width="26" height="15" fill="rgb(247,103,21)"/><text x="354.00" y="302.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.68%)</title><rect x="357" y="308" width="20" height="15" fill="rgb(231,150,43)"/><text x="360.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="375" y="324" width="2" height="15" fill="rgb(206,50,17)"/><text x="378.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="375" y="340" width="2" height="15" fill="rgb(220,151,25)"/><text x="378.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="375" y="356" width="2" height="15" fill="rgb(225,179,47)"/><text x="378.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.19%)</title><rect x="377" y="228" width="2" height="15" fill="rgb(219,92,26)"/><text x="380.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1159) (1 samples, 0.19%)</title><rect x="377" y="244" width="2" height="15" fill="rgb(252,83,54)"/><text x="380.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="379" y="260" width="3" height="15" fill="rgb(210,68,26)"/><text x="382.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="379" y="276" width="3" height="15" fill="rgb(235,114,49)"/><text x="382.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="382" y="260" width="2" height="15" fill="rgb(237,21,40)"/><text x="385.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1325) (1 samples, 0.19%)</title><rect x="382" y="276" width="2" height="15" fill="rgb(210,203,46)"/><text x="385.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.19%)</title><rect x="384" y="276" width="2" height="15" fill="rgb(252,56,32)"/><text x="387.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.19%)</title><rect x="384" y="292" width="2" height="15" fill="rgb(248,201,12)"/><text x="387.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (5 samples, 0.93%)</title><rect x="377" y="212" width="11" height="15" fill="rgb(221,174,46)"/><text x="380.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (4 samples, 0.75%)</title><rect x="379" y="228" width="9" height="15" fill="rgb(239,200,29)"/><text x="382.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="379" y="244" width="9" height="15" fill="rgb(231,185,9)"/><text x="382.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="384" y="260" width="4" height="15" fill="rgb(231,58,31)"/><text x="387.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.19%)</title><rect x="386" y="276" width="2" height="15" fill="rgb(222,209,38)"/><text x="389.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1367) (1 samples, 0.19%)</title><rect x="386" y="292" width="2" height="15" fill="rgb(206,102,39)"/><text x="389.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="388" y="228" width="2" height="15" fill="rgb(206,90,16)"/><text x="391.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="388" y="244" width="2" height="15" fill="rgb(209,37,51)"/><text x="391.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.19%)</title><rect x="388" y="260" width="2" height="15" fill="rgb(240,11,51)"/><text x="391.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="390" y="292" width="3" height="15" fill="rgb(229,161,22)"/><text x="393.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="390" y="308" width="3" height="15" fill="rgb(246,78,42)"/><text x="393.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1071) (1 samples, 0.19%)</title><rect x="390" y="324" width="3" height="15" fill="rgb(221,189,14)"/><text x="393.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.19%)</title><rect x="390" y="340" width="3" height="15" fill="rgb(219,154,23)"/><text x="393.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="390" y="260" width="5" height="15" fill="rgb(253,114,15)"/><text x="393.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.37%)</title><rect x="390" y="276" width="5" height="15" fill="rgb(242,154,4)"/><text x="393.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:454) (1 samples, 0.19%)</title><rect x="393" y="292" width="2" height="15" fill="rgb(243,80,12)"/><text x="396.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (111 samples, 20.71%)</title><rect x="153" y="196" width="244" height="15" fill="rgb(245,121,4)"/><text x="156.00" y="206.50">_samme_proba (sklearn/ensemble/_..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (4 samples, 0.75%)</title><rect x="388" y="212" width="9" height="15" fill="rgb(205,46,41)"/><text x="391.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="390" y="228" width="7" height="15" fill="rgb(227,112,50)"/><text x="393.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="390" y="244" width="7" height="15" fill="rgb(245,139,28)"/><text x="393.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.19%)</title><rect x="395" y="260" width="2" height="15" fill="rgb(205,86,13)"/><text x="398.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="395" y="276" width="2" height="15" fill="rgb(245,125,18)"/><text x="398.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="395" y="292" width="2" height="15" fill="rgb(223,171,39)"/><text x="398.00" y="302.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="404" y="212" width="2" height="15" fill="rgb(238,206,25)"/><text x="407.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.19%)</title><rect x="406" y="228" width="2" height="15" fill="rgb(240,193,36)"/><text x="409.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="408" y="244" width="2" height="15" fill="rgb(215,216,13)"/><text x="411.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="408" y="260" width="2" height="15" fill="rgb(211,113,4)"/><text x="411.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="408" y="276" width="2" height="15" fill="rgb(247,132,37)"/><text x="411.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="408" y="292" width="2" height="15" fill="rgb(248,196,42)"/><text x="411.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.37%)</title><rect x="408" y="228" width="4" height="15" fill="rgb(239,29,35)"/><text x="411.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:94) (1 samples, 0.19%)</title><rect x="410" y="244" width="2" height="15" fill="rgb(229,198,40)"/><text x="413.00" y="254.50"></text></g><g><title>array_clip (methods.c:2380) (1 samples, 0.19%)</title><rect x="417" y="276" width="2" height="15" fill="rgb(219,90,54)"/><text x="420.00" y="286.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.19%)</title><rect x="421" y="324" width="2" height="15" fill="rgb(233,171,20)"/><text x="424.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.37%)</title><rect x="421" y="308" width="5" height="15" fill="rgb(230,130,51)"/><text x="424.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.19%)</title><rect x="423" y="324" width="3" height="15" fill="rgb(228,14,15)"/><text x="426.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2058) (1 samples, 0.19%)</title><rect x="423" y="340" width="3" height="15" fill="rgb(211,151,39)"/><text x="426.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (6 samples, 1.12%)</title><rect x="426" y="324" width="13" height="15" fill="rgb(241,102,40)"/><text x="429.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.56%)</title><rect x="432" y="340" width="7" height="15" fill="rgb(231,144,11)"/><text x="435.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (2 samples, 0.37%)</title><rect x="439" y="420" width="4" height="15" fill="rgb(239,3,2)"/><text x="442.00" y="430.50"></text></g><g><title>0x7fbdc3c41a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="441" y="436" width="2" height="15" fill="rgb(250,189,14)"/><text x="444.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.56%)</title><rect x="439" y="340" width="6" height="15" fill="rgb(215,3,11)"/><text x="442.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.56%)</title><rect x="439" y="356" width="6" height="15" fill="rgb(225,120,1)"/><text x="442.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.56%)</title><rect x="439" y="372" width="6" height="15" fill="rgb(239,215,2)"/><text x="442.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.56%)</title><rect x="439" y="388" width="6" height="15" fill="rgb(221,114,13)"/><text x="442.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.56%)</title><rect x="439" y="404" width="6" height="15" fill="rgb(235,78,37)"/><text x="442.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="443" y="420" width="2" height="15" fill="rgb(246,189,12)"/><text x="446.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.19%)</title><rect x="445" y="356" width="3" height="15" fill="rgb(223,22,35)"/><text x="448.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="448" y="388" width="2" height="15" fill="rgb(243,51,36)"/><text x="451.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.19%)</title><rect x="448" y="404" width="2" height="15" fill="rgb(237,69,25)"/><text x="451.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.19%)</title><rect x="448" y="420" width="2" height="15" fill="rgb(218,178,7)"/><text x="451.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.19%)</title><rect x="448" y="436" width="2" height="15" fill="rgb(248,199,39)"/><text x="451.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4593) (1 samples, 0.19%)</title><rect x="448" y="452" width="2" height="15" fill="rgb(238,190,51)"/><text x="451.00" y="462.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.19%)</title><rect x="450" y="404" width="2" height="15" fill="rgb(243,162,23)"/><text x="453.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="450" y="420" width="2" height="15" fill="rgb(232,174,2)"/><text x="453.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="450" y="436" width="2" height="15" fill="rgb(215,57,1)"/><text x="453.00" y="446.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="450" y="452" width="2" height="15" fill="rgb(219,106,7)"/><text x="453.00" y="462.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.19%)</title><rect x="450" y="468" width="2" height="15" fill="rgb(226,18,42)"/><text x="453.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.56%)</title><rect x="448" y="356" width="6" height="15" fill="rgb(216,44,43)"/><text x="451.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.56%)</title><rect x="448" y="372" width="6" height="15" fill="rgb(225,180,30)"/><text x="451.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (2 samples, 0.37%)</title><rect x="450" y="388" width="4" height="15" fill="rgb(227,94,49)"/><text x="453.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:341) (1 samples, 0.19%)</title><rect x="452" y="404" width="2" height="15" fill="rgb(240,133,1)"/><text x="455.00" y="414.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.19%)</title><rect x="454" y="388" width="2" height="15" fill="rgb(253,110,14)"/><text x="457.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4428) (1 samples, 0.19%)</title><rect x="454" y="404" width="2" height="15" fill="rgb(252,62,10)"/><text x="457.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.37%)</title><rect x="454" y="356" width="5" height="15" fill="rgb(220,213,48)"/><text x="457.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.37%)</title><rect x="454" y="372" width="5" height="15" fill="rgb(222,9,38)"/><text x="457.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="456" y="388" width="3" height="15" fill="rgb(254,141,28)"/><text x="459.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="456" y="404" width="3" height="15" fill="rgb(215,55,32)"/><text x="459.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1523) (1 samples, 0.19%)</title><rect x="456" y="420" width="3" height="15" fill="rgb(208,100,26)"/><text x="459.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.31%)</title><rect x="445" y="340" width="16" height="15" fill="rgb(217,108,35)"/><text x="448.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="459" y="356" width="2" height="15" fill="rgb(231,120,44)"/><text x="462.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.19%)</title><rect x="459" y="372" width="2" height="15" fill="rgb(246,206,17)"/><text x="462.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (17 samples, 3.17%)</title><rect x="426" y="308" width="37" height="15" fill="rgb(226,144,33)"/><text x="429.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (11 samples, 2.05%)</title><rect x="439" y="324" width="24" height="15" fill="rgb(212,67,19)"/><text x="442.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.19%)</title><rect x="461" y="340" width="2" height="15" fill="rgb(223,33,22)"/><text x="464.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.19%)</title><rect x="461" y="356" width="2" height="15" fill="rgb(240,185,1)"/><text x="464.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="461" y="372" width="2" height="15" fill="rgb(228,93,7)"/><text x="464.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="461" y="388" width="2" height="15" fill="rgb(247,147,4)"/><text x="464.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="461" y="404" width="2" height="15" fill="rgb(214,34,52)"/><text x="464.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="463" y="324" width="2" height="15" fill="rgb(221,177,52)"/><text x="466.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="463" y="340" width="2" height="15" fill="rgb(240,22,41)"/><text x="466.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (3 samples, 0.56%)</title><rect x="465" y="372" width="7" height="15" fill="rgb(243,213,53)"/><text x="468.00" y="382.50"></text></g><g><title>0x7fbdc4a34e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="470" y="388" width="2" height="15" fill="rgb(244,99,12)"/><text x="473.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.19%)</title><rect x="472" y="372" width="2" height="15" fill="rgb(250,14,5)"/><text x="475.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="474" y="388" width="2" height="15" fill="rgb(212,15,34)"/><text x="477.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="474" y="404" width="2" height="15" fill="rgb(214,197,23)"/><text x="477.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="474" y="420" width="2" height="15" fill="rgb(253,1,40)"/><text x="477.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (4 samples, 0.75%)</title><rect x="478" y="404" width="9" height="15" fill="rgb(252,69,49)"/><text x="481.00" y="414.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.19%)</title><rect x="485" y="420" width="2" height="15" fill="rgb(233,37,3)"/><text x="488.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.19%)</title><rect x="487" y="452" width="2" height="15" fill="rgb(252,64,32)"/><text x="490.00" y="462.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.19%)</title><rect x="487" y="468" width="2" height="15" fill="rgb(219,152,54)"/><text x="490.00" y="478.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (1 samples, 0.19%)</title><rect x="487" y="484" width="2" height="15" fill="rgb(224,24,39)"/><text x="490.00" y="494.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (3 samples, 0.56%)</title><rect x="489" y="452" width="7" height="15" fill="rgb(232,9,17)"/><text x="492.00" y="462.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1664) (1 samples, 0.19%)</title><rect x="496" y="452" width="2" height="15" fill="rgb(233,5,27)"/><text x="499.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (16 samples, 2.99%)</title><rect x="465" y="324" width="35" height="15" fill="rgb(218,227,48)"/><text x="468.00" y="334.50">_c..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (16 samples, 2.99%)</title><rect x="465" y="340" width="35" height="15" fill="rgb(248,193,28)"/><text x="468.00" y="350.50">nd..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 2.99%)</title><rect x="465" y="356" width="35" height="15" fill="rgb(229,148,51)"/><text x="468.00" y="366.50">ar..</text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (12 samples, 2.24%)</title><rect x="474" y="372" width="26" height="15" fill="rgb(217,15,53)"/><text x="477.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (11 samples, 2.05%)</title><rect x="476" y="388" width="24" height="15" fill="rgb(229,36,16)"/><text x="479.00" y="398.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (6 samples, 1.12%)</title><rect x="487" y="404" width="13" height="15" fill="rgb(244,159,19)"/><text x="490.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (6 samples, 1.12%)</title><rect x="487" y="420" width="13" height="15" fill="rgb(250,33,36)"/><text x="490.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (6 samples, 1.12%)</title><rect x="487" y="436" width="13" height="15" fill="rgb(254,72,0)"/><text x="490.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1703) (1 samples, 0.19%)</title><rect x="498" y="452" width="2" height="15" fill="rgb(206,95,49)"/><text x="501.00" y="462.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.19%)</title><rect x="503" y="404" width="2" height="15" fill="rgb(214,208,6)"/><text x="506.00" y="414.50"></text></g><g><title>_array_find_python_scalar_type (common.c:40) (1 samples, 0.19%)</title><rect x="503" y="420" width="2" height="15" fill="rgb(213,175,15)"/><text x="506.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.19%)</title><rect x="505" y="404" width="2" height="15" fill="rgb(238,161,6)"/><text x="508.00" y="414.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1664) (2 samples, 0.37%)</title><rect x="507" y="404" width="4" height="15" fill="rgb(245,0,36)"/><text x="510.00" y="414.50"></text></g><g><title>unicode_dealloc (python3.7) (2 samples, 0.37%)</title><rect x="507" y="420" width="4" height="15" fill="rgb(252,112,33)"/><text x="510.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (5 samples, 0.93%)</title><rect x="503" y="388" width="11" height="15" fill="rgb(231,78,51)"/><text x="506.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1665) (1 samples, 0.19%)</title><rect x="511" y="404" width="3" height="15" fill="rgb(250,216,52)"/><text x="514.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (6 samples, 1.12%)</title><rect x="503" y="356" width="13" height="15" fill="rgb(241,30,10)"/><text x="506.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (6 samples, 1.12%)</title><rect x="503" y="372" width="13" height="15" fill="rgb(231,1,14)"/><text x="506.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1881) (1 samples, 0.19%)</title><rect x="514" y="388" width="2" height="15" fill="rgb(235,164,3)"/><text x="517.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.19%)</title><rect x="516" y="372" width="2" height="15" fill="rgb(205,144,9)"/><text x="519.00" y="382.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.19%)</title><rect x="518" y="404" width="2" height="15" fill="rgb(230,175,27)"/><text x="521.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (27 samples, 5.04%)</title><rect x="463" y="308" width="59" height="15" fill="rgb(212,168,25)"/><text x="466.00" y="318.50">_clip ..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (10 samples, 1.87%)</title><rect x="500" y="324" width="22" height="15" fill="rgb(210,201,32)"/><text x="503.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.68%)</title><rect x="503" y="340" width="19" height="15" fill="rgb(228,84,3)"/><text x="506.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.56%)</title><rect x="516" y="356" width="6" height="15" fill="rgb(211,57,0)"/><text x="519.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.37%)</title><rect x="518" y="372" width="4" height="15" fill="rgb(215,139,23)"/><text x="521.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (2 samples, 0.37%)</title><rect x="518" y="388" width="4" height="15" fill="rgb(226,183,34)"/><text x="521.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.19%)</title><rect x="520" y="404" width="2" height="15" fill="rgb(209,136,14)"/><text x="523.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.19%)</title><rect x="520" y="420" width="2" height="15" fill="rgb(233,61,7)"/><text x="523.00" y="430.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:404) (1 samples, 0.19%)</title><rect x="520" y="436" width="2" height="15" fill="rgb(251,181,2)"/><text x="523.00" y="446.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:80) (1 samples, 0.19%)</title><rect x="525" y="324" width="2" height="15" fill="rgb(207,33,46)"/><text x="528.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="531" y="420" width="2" height="15" fill="rgb(222,66,34)"/><text x="534.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.37%)</title><rect x="531" y="340" width="5" height="15" fill="rgb(221,26,45)"/><text x="534.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.37%)</title><rect x="531" y="356" width="5" height="15" fill="rgb(231,30,12)"/><text x="534.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.37%)</title><rect x="531" y="372" width="5" height="15" fill="rgb(216,183,13)"/><text x="534.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.37%)</title><rect x="531" y="388" width="5" height="15" fill="rgb(242,155,50)"/><text x="534.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.37%)</title><rect x="531" y="404" width="5" height="15" fill="rgb(209,184,19)"/><text x="534.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="533" y="420" width="3" height="15" fill="rgb(234,194,9)"/><text x="536.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="536" y="356" width="2" height="15" fill="rgb(244,178,40)"/><text x="539.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="536" y="372" width="2" height="15" fill="rgb(246,45,22)"/><text x="539.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="536" y="388" width="2" height="15" fill="rgb(205,143,8)"/><text x="539.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.19%)</title><rect x="536" y="404" width="2" height="15" fill="rgb(231,190,2)"/><text x="539.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:913) (1 samples, 0.19%)</title><rect x="536" y="420" width="2" height="15" fill="rgb(215,181,36)"/><text x="539.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.19%)</title><rect x="538" y="436" width="2" height="15" fill="rgb(232,119,36)"/><text x="541.00" y="446.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.19%)</title><rect x="538" y="452" width="2" height="15" fill="rgb(254,15,35)"/><text x="541.00" y="462.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.37%)</title><rect x="538" y="388" width="4" height="15" fill="rgb(213,81,36)"/><text x="541.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.37%)</title><rect x="538" y="404" width="4" height="15" fill="rgb(212,175,24)"/><text x="541.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.37%)</title><rect x="538" y="420" width="4" height="15" fill="rgb(242,206,49)"/><text x="541.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:382) (1 samples, 0.19%)</title><rect x="540" y="436" width="2" height="15" fill="rgb(211,104,39)"/><text x="543.00" y="446.50"></text></g><g><title>gt_128 (npy_extint128.h:215) (1 samples, 0.19%)</title><rect x="540" y="452" width="2" height="15" fill="rgb(248,196,21)"/><text x="543.00" y="462.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="536" y="340" width="8" height="15" fill="rgb(220,61,16)"/><text x="539.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="538" y="356" width="6" height="15" fill="rgb(233,63,44)"/><text x="541.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.56%)</title><rect x="538" y="372" width="6" height="15" fill="rgb(211,127,43)"/><text x="541.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:730) (1 samples, 0.19%)</title><rect x="542" y="388" width="2" height="15" fill="rgb(230,165,17)"/><text x="545.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (68 samples, 12.69%)</title><rect x="397" y="196" width="150" height="15" fill="rgb(247,74,20)"/><text x="400.00" y="206.50">_samme_proba (sklea..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (64 samples, 11.94%)</title><rect x="406" y="212" width="141" height="15" fill="rgb(220,87,5)"/><text x="409.00" y="222.50">clip (&lt;__array_fu..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (61 samples, 11.38%)</title><rect x="412" y="228" width="135" height="15" fill="rgb(209,183,20)"/><text x="415.00" y="238.50">array_implement_a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (60 samples, 11.19%)</title><rect x="415" y="244" width="132" height="15" fill="rgb(214,43,1)"/><text x="418.00" y="254.50">clip (numpy/core..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (59 samples, 11.01%)</title><rect x="417" y="260" width="130" height="15" fill="rgb(209,118,39)"/><text x="420.00" y="270.50">_wrapfunc (numpy..</text></g><g><title>array_clip (methods.c:2381) (58 samples, 10.82%)</title><rect x="419" y="276" width="128" height="15" fill="rgb(209,51,46)"/><text x="422.00" y="286.50">array_clip (meth..</text></g><g><title>forward_ndarray_method (methods.c:108) (58 samples, 10.82%)</title><rect x="419" y="292" width="128" height="15" fill="rgb(228,44,3)"/><text x="422.00" y="302.50">forward_ndarray_..</text></g><g><title>_clip (numpy/core/_methods.py:129) (11 samples, 2.05%)</title><rect x="522" y="308" width="25" height="15" fill="rgb(247,130,4)"/><text x="525.00" y="318.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 1.68%)</title><rect x="527" y="324" width="20" height="15" fill="rgb(221,135,32)"/><text x="530.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.19%)</title><rect x="544" y="340" width="3" height="15" fill="rgb(221,140,53)"/><text x="547.00" y="350.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.19%)</title><rect x="544" y="356" width="3" height="15" fill="rgb(232,122,7)"/><text x="547.00" y="366.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (1 samples, 0.19%)</title><rect x="547" y="196" width="2" height="15" fill="rgb(242,228,40)"/><text x="550.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="547" y="212" width="2" height="15" fill="rgb(216,9,48)"/><text x="550.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="547" y="228" width="2" height="15" fill="rgb(242,137,50)"/><text x="550.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1054) (1 samples, 0.19%)</title><rect x="547" y="244" width="2" height="15" fill="rgb(220,195,28)"/><text x="550.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="558" y="228" width="2" height="15" fill="rgb(208,3,41)"/><text x="561.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="558" y="244" width="2" height="15" fill="rgb(234,101,21)"/><text x="561.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.19%)</title><rect x="558" y="260" width="2" height="15" fill="rgb(228,43,41)"/><text x="561.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="560" y="260" width="2" height="15" fill="rgb(250,35,26)"/><text x="563.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.19%)</title><rect x="562" y="276" width="2" height="15" fill="rgb(233,11,24)"/><text x="565.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="562" y="292" width="2" height="15" fill="rgb(238,185,24)"/><text x="565.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="562" y="308" width="2" height="15" fill="rgb(253,124,12)"/><text x="565.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.19%)</title><rect x="562" y="324" width="2" height="15" fill="rgb(237,157,3)"/><text x="565.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.56%)</title><rect x="560" y="244" width="6" height="15" fill="rgb(237,114,48)"/><text x="563.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.37%)</title><rect x="562" y="260" width="4" height="15" fill="rgb(246,176,6)"/><text x="565.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.19%)</title><rect x="564" y="276" width="2" height="15" fill="rgb(239,138,7)"/><text x="567.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.19%)</title><rect x="564" y="292" width="2" height="15" fill="rgb(210,35,19)"/><text x="567.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.19%)</title><rect x="564" y="308" width="2" height="15" fill="rgb(242,153,51)"/><text x="567.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.19%)</title><rect x="564" y="324" width="2" height="15" fill="rgb(213,84,42)"/><text x="567.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="566" y="244" width="3" height="15" fill="rgb(222,62,1)"/><text x="569.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="566" y="260" width="3" height="15" fill="rgb(242,165,29)"/><text x="569.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="566" y="276" width="3" height="15" fill="rgb(250,113,40)"/><text x="569.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.19%)</title><rect x="566" y="292" width="3" height="15" fill="rgb(228,21,36)"/><text x="569.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.19%)</title><rect x="566" y="308" width="3" height="15" fill="rgb(233,123,43)"/><text x="569.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:695) (1 samples, 0.19%)</title><rect x="566" y="324" width="3" height="15" fill="rgb(224,212,20)"/><text x="569.00" y="334.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 1.31%)</title><rect x="558" y="212" width="15" height="15" fill="rgb(250,184,13)"/><text x="561.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.12%)</title><rect x="560" y="228" width="13" height="15" fill="rgb(233,29,50)"/><text x="563.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="569" y="244" width="4" height="15" fill="rgb(240,12,34)"/><text x="572.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1723) (2 samples, 0.37%)</title><rect x="569" y="260" width="4" height="15" fill="rgb(253,30,3)"/><text x="572.00" y="270.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1458) (1 samples, 0.19%)</title><rect x="571" y="276" width="2" height="15" fill="rgb(225,159,23)"/><text x="574.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1508) (1 samples, 0.19%)</title><rect x="573" y="212" width="2" height="15" fill="rgb(225,118,34)"/><text x="576.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="575" y="244" width="2" height="15" fill="rgb(236,103,20)"/><text x="578.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:866) (1 samples, 0.19%)</title><rect x="575" y="260" width="2" height="15" fill="rgb(225,104,45)"/><text x="578.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="577" y="276" width="3" height="15" fill="rgb(243,120,14)"/><text x="580.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="577" y="292" width="3" height="15" fill="rgb(221,100,35)"/><text x="580.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.19%)</title><rect x="577" y="308" width="3" height="15" fill="rgb(244,110,8)"/><text x="580.00" y="318.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.19%)</title><rect x="577" y="324" width="3" height="15" fill="rgb(238,63,10)"/><text x="580.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="580" y="276" width="2" height="15" fill="rgb(245,77,43)"/><text x="583.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="580" y="292" width="2" height="15" fill="rgb(229,211,15)"/><text x="583.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2037) (1 samples, 0.19%)</title><rect x="580" y="308" width="2" height="15" fill="rgb(240,57,20)"/><text x="583.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="575" y="228" width="9" height="15" fill="rgb(212,224,48)"/><text x="578.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="577" y="244" width="7" height="15" fill="rgb(242,13,41)"/><text x="580.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="577" y="260" width="7" height="15" fill="rgb(210,206,27)"/><text x="580.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="582" y="276" width="2" height="15" fill="rgb(214,102,7)"/><text x="585.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="582" y="292" width="2" height="15" fill="rgb(236,126,25)"/><text x="585.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:245) (1 samples, 0.19%)</title><rect x="582" y="308" width="2" height="15" fill="rgb(229,45,20)"/><text x="585.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (5 samples, 0.93%)</title><rect x="575" y="212" width="11" height="15" fill="rgb(214,141,18)"/><text x="578.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="584" y="228" width="2" height="15" fill="rgb(210,129,49)"/><text x="587.00" y="238.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.19%)</title><rect x="584" y="244" width="2" height="15" fill="rgb(207,153,52)"/><text x="587.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.19%)</title><rect x="588" y="260" width="3" height="15" fill="rgb(211,19,28)"/><text x="591.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="591" y="308" width="2" height="15" fill="rgb(250,229,49)"/><text x="594.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="591" y="324" width="2" height="15" fill="rgb(221,32,1)"/><text x="594.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="591" y="340" width="2" height="15" fill="rgb(207,150,45)"/><text x="594.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="591" y="356" width="2" height="15" fill="rgb(249,194,47)"/><text x="594.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.19%)</title><rect x="591" y="372" width="2" height="15" fill="rgb(242,142,18)"/><text x="594.00" y="382.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="591" y="388" width="2" height="15" fill="rgb(232,144,54)"/><text x="594.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1488) (1 samples, 0.19%)</title><rect x="591" y="404" width="2" height="15" fill="rgb(254,171,16)"/><text x="594.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="593" y="308" width="2" height="15" fill="rgb(233,44,49)"/><text x="596.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="593" y="324" width="2" height="15" fill="rgb(218,222,41)"/><text x="596.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.19%)</title><rect x="593" y="340" width="2" height="15" fill="rgb(206,114,30)"/><text x="596.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.56%)</title><rect x="591" y="276" width="6" height="15" fill="rgb(238,37,39)"/><text x="594.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.56%)</title><rect x="591" y="292" width="6" height="15" fill="rgb(249,102,54)"/><text x="594.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="595" y="308" width="2" height="15" fill="rgb(224,214,6)"/><text x="598.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="595" y="324" width="2" height="15" fill="rgb(240,152,9)"/><text x="598.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="595" y="340" width="2" height="15" fill="rgb(242,26,22)"/><text x="598.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.19%)</title><rect x="595" y="356" width="2" height="15" fill="rgb(216,168,27)"/><text x="598.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (203 samples, 37.87%)</title><rect x="153" y="180" width="447" height="15" fill="rgb(245,103,39)"/><text x="156.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (23 samples, 4.29%)</title><rect x="549" y="196" width="51" height="15" fill="rgb(246,11,35)"/><text x="552.00" y="206.50">_samm..</text></g><g><title>array_sum (methods.c:2215) (6 samples, 1.12%)</title><rect x="586" y="212" width="14" height="15" fill="rgb(224,0,37)"/><text x="589.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 1.12%)</title><rect x="586" y="228" width="14" height="15" fill="rgb(212,122,10)"/><text x="589.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (6 samples, 1.12%)</title><rect x="586" y="244" width="14" height="15" fill="rgb(249,23,54)"/><text x="589.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.75%)</title><rect x="591" y="260" width="9" height="15" fill="rgb(231,29,5)"/><text x="594.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.19%)</title><rect x="597" y="276" width="3" height="15" fill="rgb(241,10,3)"/><text x="600.00" y="286.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.19%)</title><rect x="597" y="292" width="3" height="15" fill="rgb(244,131,45)"/><text x="600.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.19%)</title><rect x="602" y="228" width="2" height="15" fill="rgb(242,50,1)"/><text x="605.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="602" y="244" width="2" height="15" fill="rgb(216,90,24)"/><text x="605.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="602" y="260" width="2" height="15" fill="rgb(245,30,38)"/><text x="605.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="602" y="276" width="2" height="15" fill="rgb(222,94,32)"/><text x="605.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="602" y="196" width="4" height="15" fill="rgb(236,224,2)"/><text x="605.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="602" y="212" width="4" height="15" fill="rgb(206,191,36)"/><text x="605.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.19%)</title><rect x="604" y="228" width="2" height="15" fill="rgb(206,103,37)"/><text x="607.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.19%)</title><rect x="604" y="244" width="2" height="15" fill="rgb(251,34,38)"/><text x="607.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.19%)</title><rect x="604" y="260" width="2" height="15" fill="rgb(209,125,49)"/><text x="607.00" y="270.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (208 samples, 38.81%)</title><rect x="150" y="148" width="458" height="15" fill="rgb(251,55,44)"/><text x="153.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (207 samples, 38.62%)</title><rect x="153" y="164" width="455" height="15" fill="rgb(225,100,33)"/><text x="156.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_add (number.c:330) (4 samples, 0.75%)</title><rect x="600" y="180" width="8" height="15" fill="rgb(236,173,46)"/><text x="603.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="606" y="196" width="2" height="15" fill="rgb(240,82,1)"/><text x="609.00" y="206.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.19%)</title><rect x="606" y="212" width="2" height="15" fill="rgb(246,37,43)"/><text x="609.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.19%)</title><rect x="606" y="228" width="2" height="15" fill="rgb(222,219,30)"/><text x="609.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:38) (271 samples, 50.56%)</title><rect x="14" y="52" width="597" height="15" fill="rgb(212,152,37)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:37) (271 samples, 50.56%)</title><rect x="14" y="68" width="597" height="15" fill="rgb(210,122,28)"/><text x="17.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:29) (270 samples, 50.37%)</title><rect x="16" y="84" width="595" height="15" fill="rgb(239,228,17)"/><text x="19.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:23) (210 samples, 39.18%)</title><rect x="148" y="100" width="463" height="15" fill="rgb(215,20,37)"/><text x="151.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (210 samples, 39.18%)</title><rect x="148" y="116" width="463" height="15" fill="rgb(249,138,22)"/><text x="151.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (210 samples, 39.18%)</title><rect x="148" y="132" width="463" height="15" fill="rgb(209,95,41)"/><text x="151.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.19%)</title><rect x="608" y="148" width="3" height="15" fill="rgb(218,28,31)"/><text x="611.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.19%)</title><rect x="608" y="164" width="3" height="15" fill="rgb(238,51,28)"/><text x="611.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.19%)</title><rect x="608" y="180" width="3" height="15" fill="rgb(215,157,31)"/><text x="611.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (1 samples, 0.19%)</title><rect x="608" y="196" width="3" height="15" fill="rgb(210,173,35)"/><text x="611.00" y="206.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.19%)</title><rect x="611" y="372" width="2" height="15" fill="rgb(222,46,3)"/><text x="614.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="611" y="388" width="2" height="15" fill="rgb(234,148,9)"/><text x="614.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="611" y="404" width="2" height="15" fill="rgb(237,86,35)"/><text x="614.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="611" y="420" width="2" height="15" fill="rgb(235,218,19)"/><text x="614.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="611" y="436" width="2" height="15" fill="rgb(214,224,20)"/><text x="614.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="611" y="452" width="2" height="15" fill="rgb(251,63,46)"/><text x="614.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="611" y="468" width="2" height="15" fill="rgb(249,5,30)"/><text x="614.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="611" y="484" width="2" height="15" fill="rgb(220,146,36)"/><text x="614.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:146) (1 samples, 0.19%)</title><rect x="611" y="500" width="2" height="15" fill="rgb(235,144,23)"/><text x="614.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:203) (1 samples, 0.19%)</title><rect x="611" y="516" width="2" height="15" fill="rgb(234,91,46)"/><text x="614.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py:182) (1 samples, 0.19%)</title><rect x="611" y="532" width="2" height="15" fill="rgb(238,40,43)"/><text x="614.00" y="542.50"></text></g><g><title>&lt;module&gt; (&lt;__array_function__ internals&gt;:2) (1 samples, 0.19%)</title><rect x="611" y="548" width="2" height="15" fill="rgb(253,188,7)"/><text x="614.00" y="558.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.19%)</title><rect x="611" y="564" width="2" height="15" fill="rgb(223,166,35)"/><text x="614.00" y="574.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.19%)</title><rect x="613" y="372" width="2" height="15" fill="rgb(205,130,8)"/><text x="616.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="613" y="388" width="2" height="15" fill="rgb(230,57,43)"/><text x="616.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="613" y="404" width="2" height="15" fill="rgb(214,170,18)"/><text x="616.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="613" y="420" width="2" height="15" fill="rgb(244,44,30)"/><text x="616.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="613" y="436" width="2" height="15" fill="rgb(228,156,26)"/><text x="616.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="613" y="452" width="2" height="15" fill="rgb(216,33,16)"/><text x="616.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="613" y="468" width="2" height="15" fill="rgb(213,224,47)"/><text x="616.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="613" y="484" width="2" height="15" fill="rgb(223,147,3)"/><text x="616.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:33) (1 samples, 0.19%)</title><rect x="613" y="500" width="2" height="15" fill="rgb(238,119,51)"/><text x="616.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="613" y="516" width="2" height="15" fill="rgb(234,13,22)"/><text x="616.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="613" y="532" width="2" height="15" fill="rgb(248,153,6)"/><text x="616.00" y="542.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="613" y="548" width="2" height="15" fill="rgb(212,219,50)"/><text x="616.00" y="558.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="613" y="564" width="2" height="15" fill="rgb(218,9,5)"/><text x="616.00" y="574.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.19%)</title><rect x="613" y="580" width="2" height="15" fill="rgb(220,122,29)"/><text x="616.00" y="590.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:1) (3 samples, 0.56%)</title><rect x="611" y="148" width="6" height="15" fill="rgb(251,10,30)"/><text x="614.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="611" y="164" width="6" height="15" fill="rgb(226,64,54)"/><text x="614.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="611" y="180" width="6" height="15" fill="rgb(238,47,4)"/><text x="614.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="611" y="196" width="6" height="15" fill="rgb(234,147,27)"/><text x="614.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="611" y="212" width="6" height="15" fill="rgb(217,219,5)"/><text x="614.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="611" y="228" width="6" height="15" fill="rgb(237,121,47)"/><text x="614.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (3 samples, 0.56%)</title><rect x="611" y="244" width="6" height="15" fill="rgb(206,37,1)"/><text x="614.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.56%)</title><rect x="611" y="260" width="6" height="15" fill="rgb(232,6,4)"/><text x="614.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="611" y="276" width="6" height="15" fill="rgb(234,65,31)"/><text x="614.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="611" y="292" width="6" height="15" fill="rgb(233,52,2)"/><text x="614.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="611" y="308" width="6" height="15" fill="rgb(231,61,51)"/><text x="614.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="611" y="324" width="6" height="15" fill="rgb(214,19,47)"/><text x="614.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="611" y="340" width="6" height="15" fill="rgb(224,223,32)"/><text x="614.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="611" y="356" width="6" height="15" fill="rgb(225,26,21)"/><text x="614.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.19%)</title><rect x="615" y="372" width="2" height="15" fill="rgb(214,54,31)"/><text x="618.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="615" y="388" width="2" height="15" fill="rgb(244,186,6)"/><text x="618.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="615" y="404" width="2" height="15" fill="rgb(220,62,22)"/><text x="618.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="615" y="420" width="2" height="15" fill="rgb(213,173,26)"/><text x="618.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="615" y="436" width="2" height="15" fill="rgb(213,31,14)"/><text x="618.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="615" y="452" width="2" height="15" fill="rgb(251,182,9)"/><text x="618.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="615" y="468" width="2" height="15" fill="rgb(219,112,50)"/><text x="618.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="615" y="484" width="2" height="15" fill="rgb(231,196,33)"/><text x="618.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:270) (1 samples, 0.19%)</title><rect x="615" y="500" width="2" height="15" fill="rgb(237,156,49)"/><text x="618.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:182) (1 samples, 0.19%)</title><rect x="615" y="516" width="2" height="15" fill="rgb(240,139,10)"/><text x="618.00" y="526.50"></text></g><g><title>&lt;module&gt; (&lt;__array_function__ internals&gt;:2) (1 samples, 0.19%)</title><rect x="615" y="532" width="2" height="15" fill="rgb(221,214,34)"/><text x="618.00" y="542.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:2) (1 samples, 0.19%)</title><rect x="617" y="148" width="2" height="15" fill="rgb(211,129,42)"/><text x="620.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="164" width="2" height="15" fill="rgb(208,142,22)"/><text x="620.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="617" y="180" width="2" height="15" fill="rgb(245,186,0)"/><text x="620.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="196" width="2" height="15" fill="rgb(240,197,25)"/><text x="620.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="212" width="2" height="15" fill="rgb(252,226,47)"/><text x="620.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="617" y="228" width="2" height="15" fill="rgb(214,115,19)"/><text x="620.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="617" y="244" width="2" height="15" fill="rgb(251,118,38)"/><text x="620.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="617" y="260" width="2" height="15" fill="rgb(240,215,35)"/><text x="620.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="276" width="2" height="15" fill="rgb(210,165,28)"/><text x="620.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (1 samples, 0.19%)</title><rect x="617" y="292" width="2" height="15" fill="rgb(235,147,14)"/><text x="620.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="308" width="2" height="15" fill="rgb(209,148,16)"/><text x="620.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="617" y="324" width="2" height="15" fill="rgb(233,148,8)"/><text x="620.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="617" y="340" width="2" height="15" fill="rgb(211,96,9)"/><text x="620.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="617" y="356" width="2" height="15" fill="rgb(253,145,46)"/><text x="620.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="372" width="2" height="15" fill="rgb(217,170,26)"/><text x="620.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (1 samples, 0.19%)</title><rect x="617" y="388" width="2" height="15" fill="rgb(218,159,25)"/><text x="620.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="404" width="2" height="15" fill="rgb(237,36,44)"/><text x="620.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="617" y="420" width="2" height="15" fill="rgb(225,9,31)"/><text x="620.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="617" y="436" width="2" height="15" fill="rgb(229,125,49)"/><text x="620.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="617" y="452" width="2" height="15" fill="rgb(231,170,54)"/><text x="620.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="468" width="2" height="15" fill="rgb(231,192,4)"/><text x="620.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (1 samples, 0.19%)</title><rect x="617" y="484" width="2" height="15" fill="rgb(246,109,39)"/><text x="620.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="500" width="2" height="15" fill="rgb(253,9,53)"/><text x="620.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="617" y="516" width="2" height="15" fill="rgb(214,94,54)"/><text x="620.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="617" y="532" width="2" height="15" fill="rgb(238,150,51)"/><text x="620.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="617" y="548" width="2" height="15" fill="rgb(239,156,36)"/><text x="620.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="564" width="2" height="15" fill="rgb(253,27,50)"/><text x="620.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (1 samples, 0.19%)</title><rect x="617" y="580" width="2" height="15" fill="rgb(208,177,46)"/><text x="620.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="596" width="2" height="15" fill="rgb(248,185,42)"/><text x="620.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="617" y="612" width="2" height="15" fill="rgb(226,187,42)"/><text x="620.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="628" width="2" height="15" fill="rgb(242,195,43)"/><text x="620.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="644" width="2" height="15" fill="rgb(247,119,23)"/><text x="620.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="617" y="660" width="2" height="15" fill="rgb(206,11,6)"/><text x="620.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="617" y="676" width="2" height="15" fill="rgb(215,44,11)"/><text x="620.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="617" y="692" width="2" height="15" fill="rgb(220,138,6)"/><text x="620.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="708" width="2" height="15" fill="rgb(238,16,52)"/><text x="620.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (1 samples, 0.19%)</title><rect x="617" y="724" width="2" height="15" fill="rgb(225,162,27)"/><text x="620.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="617" y="740" width="2" height="15" fill="rgb(241,211,31)"/><text x="620.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="617" y="756" width="2" height="15" fill="rgb(228,151,51)"/><text x="620.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="617" y="772" width="2" height="15" fill="rgb(226,119,52)"/><text x="620.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="617" y="788" width="2" height="15" fill="rgb(217,61,40)"/><text x="620.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="617" y="804" width="2" height="15" fill="rgb(215,195,34)"/><text x="620.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.19%)</title><rect x="617" y="820" width="2" height="15" fill="rgb(229,170,7)"/><text x="620.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.19%)</title><rect x="617" y="836" width="2" height="15" fill="rgb(242,7,18)"/><text x="620.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.19%)</title><rect x="617" y="852" width="2" height="15" fill="rgb(253,13,49)"/><text x="620.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.19%)</title><rect x="617" y="868" width="2" height="15" fill="rgb(211,161,10)"/><text x="620.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.19%)</title><rect x="617" y="884" width="2" height="15" fill="rgb(224,85,8)"/><text x="620.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.19%)</title><rect x="617" y="900" width="2" height="15" fill="rgb(207,32,54)"/><text x="620.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.19%)</title><rect x="617" y="916" width="2" height="15" fill="rgb(217,194,5)"/><text x="620.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.19%)</title><rect x="617" y="932" width="2" height="15" fill="rgb(239,12,35)"/><text x="620.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="617" y="948" width="2" height="15" fill="rgb(240,226,34)"/><text x="620.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="617" y="964" width="2" height="15" fill="rgb(240,56,49)"/><text x="620.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.19%)</title><rect x="617" y="980" width="2" height="15" fill="rgb(223,222,0)"/><text x="620.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.19%)</title><rect x="617" y="996" width="2" height="15" fill="rgb(227,108,21)"/><text x="620.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.19%)</title><rect x="617" y="1012" width="2" height="15" fill="rgb(247,34,31)"/><text x="620.00" y="1022.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.19%)</title><rect x="619" y="484" width="3" height="15" fill="rgb(248,212,8)"/><text x="622.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="619" y="500" width="3" height="15" fill="rgb(237,84,32)"/><text x="622.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="619" y="516" width="3" height="15" fill="rgb(244,75,15)"/><text x="622.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="619" y="532" width="3" height="15" fill="rgb(244,29,20)"/><text x="622.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="619" y="548" width="3" height="15" fill="rgb(245,8,29)"/><text x="622.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="619" y="564" width="3" height="15" fill="rgb(254,88,26)"/><text x="622.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="619" y="580" width="3" height="15" fill="rgb(226,107,53)"/><text x="622.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="619" y="596" width="3" height="15" fill="rgb(213,204,44)"/><text x="622.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.19%)</title><rect x="619" y="612" width="3" height="15" fill="rgb(250,77,37)"/><text x="622.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="619" y="628" width="3" height="15" fill="rgb(233,61,48)"/><text x="622.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="619" y="644" width="3" height="15" fill="rgb(250,194,28)"/><text x="622.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="619" y="660" width="3" height="15" fill="rgb(226,106,35)"/><text x="622.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="619" y="676" width="3" height="15" fill="rgb(210,217,29)"/><text x="622.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="619" y="692" width="3" height="15" fill="rgb(246,37,20)"/><text x="622.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.19%)</title><rect x="619" y="708" width="3" height="15" fill="rgb(223,32,43)"/><text x="622.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="619" y="724" width="3" height="15" fill="rgb(216,197,12)"/><text x="622.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="619" y="740" width="3" height="15" fill="rgb(224,186,50)"/><text x="622.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="619" y="756" width="3" height="15" fill="rgb(222,124,12)"/><text x="622.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="619" y="772" width="3" height="15" fill="rgb(224,4,13)"/><text x="622.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="619" y="788" width="3" height="15" fill="rgb(236,126,8)"/><text x="622.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.19%)</title><rect x="619" y="804" width="3" height="15" fill="rgb(235,224,38)"/><text x="622.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="619" y="820" width="3" height="15" fill="rgb(215,164,37)"/><text x="622.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="619" y="836" width="3" height="15" fill="rgb(223,148,2)"/><text x="622.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="619" y="852" width="3" height="15" fill="rgb(230,143,32)"/><text x="622.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="619" y="868" width="3" height="15" fill="rgb(217,100,6)"/><text x="622.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="619" y="884" width="3" height="15" fill="rgb(224,83,7)"/><text x="622.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:7) (1 samples, 0.19%)</title><rect x="619" y="900" width="3" height="15" fill="rgb(247,45,5)"/><text x="622.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="619" y="916" width="3" height="15" fill="rgb(214,39,49)"/><text x="622.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="619" y="932" width="3" height="15" fill="rgb(205,6,0)"/><text x="622.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="619" y="948" width="3" height="15" fill="rgb(249,37,31)"/><text x="622.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="619" y="964" width="3" height="15" fill="rgb(253,90,4)"/><text x="622.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="619" y="980" width="3" height="15" fill="rgb(240,8,22)"/><text x="622.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py:106) (1 samples, 0.19%)</title><rect x="619" y="996" width="3" height="15" fill="rgb(208,40,25)"/><text x="622.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="619" y="1012" width="3" height="15" fill="rgb(215,64,31)"/><text x="622.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="619" y="1028" width="3" height="15" fill="rgb(245,33,38)"/><text x="622.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="619" y="1044" width="3" height="15" fill="rgb(217,119,53)"/><text x="622.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="619" y="1060" width="3" height="15" fill="rgb(237,52,19)"/><text x="622.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="619" y="1076" width="3" height="15" fill="rgb(216,185,13)"/><text x="622.00" y="1086.50"></text></g><g><title>&lt;module&gt; (json/decoder.py:254) (1 samples, 0.19%)</title><rect x="619" y="1092" width="3" height="15" fill="rgb(225,83,51)"/><text x="622.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:4) (2 samples, 0.37%)</title><rect x="619" y="148" width="5" height="15" fill="rgb(221,166,17)"/><text x="622.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="619" y="164" width="5" height="15" fill="rgb(246,155,5)"/><text x="622.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="619" y="180" width="5" height="15" fill="rgb(252,127,3)"/><text x="622.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="619" y="196" width="5" height="15" fill="rgb(246,88,1)"/><text x="622.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="619" y="212" width="5" height="15" fill="rgb(236,204,7)"/><text x="622.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="619" y="228" width="5" height="15" fill="rgb(239,32,49)"/><text x="622.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="619" y="244" width="5" height="15" fill="rgb(230,90,35)"/><text x="622.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="619" y="260" width="5" height="15" fill="rgb(233,25,5)"/><text x="622.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="619" y="276" width="5" height="15" fill="rgb(244,36,24)"/><text x="622.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.37%)</title><rect x="619" y="292" width="5" height="15" fill="rgb(254,116,54)"/><text x="622.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="619" y="308" width="5" height="15" fill="rgb(237,79,53)"/><text x="622.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="619" y="324" width="5" height="15" fill="rgb(253,199,41)"/><text x="622.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="619" y="340" width="5" height="15" fill="rgb(240,143,45)"/><text x="622.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="619" y="356" width="5" height="15" fill="rgb(254,170,32)"/><text x="622.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="619" y="372" width="5" height="15" fill="rgb(219,58,54)"/><text x="622.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.37%)</title><rect x="619" y="388" width="5" height="15" fill="rgb(216,185,21)"/><text x="622.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="619" y="404" width="5" height="15" fill="rgb(246,210,17)"/><text x="622.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="619" y="420" width="5" height="15" fill="rgb(242,72,6)"/><text x="622.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="619" y="436" width="5" height="15" fill="rgb(254,199,22)"/><text x="622.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="619" y="452" width="5" height="15" fill="rgb(213,152,29)"/><text x="622.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="619" y="468" width="5" height="15" fill="rgb(208,154,31)"/><text x="622.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.19%)</title><rect x="622" y="484" width="2" height="15" fill="rgb(243,8,15)"/><text x="625.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="500" width="2" height="15" fill="rgb(213,216,20)"/><text x="625.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="516" width="2" height="15" fill="rgb(253,224,1)"/><text x="625.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="532" width="2" height="15" fill="rgb(243,178,30)"/><text x="625.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="548" width="2" height="15" fill="rgb(254,194,41)"/><text x="625.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="564" width="2" height="15" fill="rgb(245,82,31)"/><text x="625.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.19%)</title><rect x="622" y="580" width="2" height="15" fill="rgb(236,79,34)"/><text x="625.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="596" width="2" height="15" fill="rgb(243,79,32)"/><text x="625.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="612" width="2" height="15" fill="rgb(246,58,49)"/><text x="625.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="628" width="2" height="15" fill="rgb(243,162,36)"/><text x="625.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="644" width="2" height="15" fill="rgb(223,166,19)"/><text x="625.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="660" width="2" height="15" fill="rgb(206,56,41)"/><text x="625.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.19%)</title><rect x="622" y="676" width="2" height="15" fill="rgb(245,226,45)"/><text x="625.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="692" width="2" height="15" fill="rgb(208,69,29)"/><text x="625.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="708" width="2" height="15" fill="rgb(242,192,48)"/><text x="625.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="724" width="2" height="15" fill="rgb(208,11,30)"/><text x="625.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="740" width="2" height="15" fill="rgb(229,31,13)"/><text x="625.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="756" width="2" height="15" fill="rgb(240,66,9)"/><text x="625.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.19%)</title><rect x="622" y="772" width="2" height="15" fill="rgb(249,199,46)"/><text x="625.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="622" y="788" width="2" height="15" fill="rgb(233,154,49)"/><text x="625.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="804" width="2" height="15" fill="rgb(230,201,35)"/><text x="625.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="820" width="2" height="15" fill="rgb(209,131,41)"/><text x="625.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="836" width="2" height="15" fill="rgb(224,6,47)"/><text x="625.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="852" width="2" height="15" fill="rgb(238,82,16)"/><text x="625.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="868" width="2" height="15" fill="rgb(224,34,18)"/><text x="625.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="884" width="2" height="15" fill="rgb(220,148,33)"/><text x="625.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.19%)</title><rect x="622" y="900" width="2" height="15" fill="rgb(223,143,20)"/><text x="625.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="916" width="2" height="15" fill="rgb(225,94,6)"/><text x="625.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="932" width="2" height="15" fill="rgb(248,37,3)"/><text x="625.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="948" width="2" height="15" fill="rgb(216,196,33)"/><text x="625.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="964" width="2" height="15" fill="rgb(206,190,21)"/><text x="625.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="980" width="2" height="15" fill="rgb(217,215,2)"/><text x="625.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.19%)</title><rect x="622" y="996" width="2" height="15" fill="rgb(236,84,32)"/><text x="625.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="622" y="1012" width="2" height="15" fill="rgb(254,131,28)"/><text x="625.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="1028" width="2" height="15" fill="rgb(247,124,32)"/><text x="625.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="1044" width="2" height="15" fill="rgb(225,40,26)"/><text x="625.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="1060" width="2" height="15" fill="rgb(229,68,3)"/><text x="625.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="1076" width="2" height="15" fill="rgb(245,8,47)"/><text x="625.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="1092" width="2" height="15" fill="rgb(207,113,17)"/><text x="625.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="1108" width="2" height="15" fill="rgb(248,44,14)"/><text x="625.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.19%)</title><rect x="622" y="1124" width="2" height="15" fill="rgb(228,201,45)"/><text x="625.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="1140" width="2" height="15" fill="rgb(205,109,37)"/><text x="625.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="1156" width="2" height="15" fill="rgb(215,116,5)"/><text x="625.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="1172" width="2" height="15" fill="rgb(239,217,54)"/><text x="625.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="1188" width="2" height="15" fill="rgb(221,144,23)"/><text x="625.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="1204" width="2" height="15" fill="rgb(231,41,27)"/><text x="625.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.19%)</title><rect x="622" y="1220" width="2" height="15" fill="rgb(222,56,30)"/><text x="625.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="1236" width="2" height="15" fill="rgb(210,72,41)"/><text x="625.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="622" y="1252" width="2" height="15" fill="rgb(226,138,38)"/><text x="625.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="622" y="1268" width="2" height="15" fill="rgb(222,59,7)"/><text x="625.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="622" y="1284" width="2" height="15" fill="rgb(205,153,49)"/><text x="625.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="622" y="1300" width="2" height="15" fill="rgb(254,60,11)"/><text x="625.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.19%)</title><rect x="622" y="1316" width="2" height="15" fill="rgb(247,159,38)"/><text x="625.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="622" y="1332" width="2" height="15" fill="rgb(252,217,8)"/><text x="625.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="622" y="1348" width="2" height="15" fill="rgb(219,8,23)"/><text x="625.00" y="1358.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="622" y="1364" width="2" height="15" fill="rgb(221,132,16)"/><text x="625.00" y="1374.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="622" y="1380" width="2" height="15" fill="rgb(251,136,4)"/><text x="625.00" y="1390.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.19%)</title><rect x="622" y="1396" width="2" height="15" fill="rgb(216,60,22)"/><text x="625.00" y="1406.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.19%)</title><rect x="622" y="1412" width="2" height="15" fill="rgb(236,45,18)"/><text x="625.00" y="1422.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.19%)</title><rect x="622" y="1428" width="2" height="15" fill="rgb(231,199,18)"/><text x="625.00" y="1438.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;:1449) (1 samples, 0.19%)</title><rect x="622" y="1444" width="2" height="15" fill="rgb(226,32,14)"/><text x="625.00" y="1454.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;:1325) (1 samples, 0.19%)</title><rect x="622" y="1460" width="2" height="15" fill="rgb(212,204,47)"/><text x="625.00" y="1470.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.19%)</title><rect x="624" y="484" width="2" height="15" fill="rgb(236,93,4)"/><text x="627.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="624" y="500" width="2" height="15" fill="rgb(234,131,50)"/><text x="627.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="624" y="516" width="2" height="15" fill="rgb(246,207,28)"/><text x="627.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="624" y="532" width="2" height="15" fill="rgb(232,180,26)"/><text x="627.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="624" y="548" width="2" height="15" fill="rgb(242,79,6)"/><text x="627.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="624" y="564" width="2" height="15" fill="rgb(213,70,4)"/><text x="627.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.19%)</title><rect x="624" y="580" width="2" height="15" fill="rgb(225,208,17)"/><text x="627.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="624" y="596" width="2" height="15" fill="rgb(242,207,30)"/><text x="627.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="624" y="612" width="2" height="15" fill="rgb(250,34,41)"/><text x="627.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="624" y="628" width="2" height="15" fill="rgb(222,33,36)"/><text x="627.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="624" y="644" width="2" height="15" fill="rgb(229,178,24)"/><text x="627.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="624" y="660" width="2" height="15" fill="rgb(208,196,37)"/><text x="627.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.19%)</title><rect x="624" y="676" width="2" height="15" fill="rgb(211,102,25)"/><text x="627.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="624" y="692" width="2" height="15" fill="rgb(249,7,16)"/><text x="627.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="624" y="708" width="2" height="15" fill="rgb(233,111,3)"/><text x="627.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="624" y="724" width="2" height="15" fill="rgb(227,32,48)"/><text x="627.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="624" y="740" width="2" height="15" fill="rgb(207,162,18)"/><text x="627.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="624" y="756" width="2" height="15" fill="rgb(233,49,11)"/><text x="627.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.19%)</title><rect x="624" y="772" width="2" height="15" fill="rgb(230,176,13)"/><text x="627.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="624" y="788" width="2" height="15" fill="rgb(246,74,20)"/><text x="627.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="624" y="804" width="2" height="15" fill="rgb(222,119,24)"/><text x="627.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="624" y="820" width="2" height="15" fill="rgb(208,166,23)"/><text x="627.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="624" y="836" width="2" height="15" fill="rgb(233,204,10)"/><text x="627.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="624" y="852" width="2" height="15" fill="rgb(229,138,17)"/><text x="627.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="624" y="868" width="2" height="15" fill="rgb(228,223,33)"/><text x="627.00" y="878.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="624" y="884" width="2" height="15" fill="rgb(212,34,2)"/><text x="627.00" y="894.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.19%)</title><rect x="624" y="900" width="2" height="15" fill="rgb(208,204,54)"/><text x="627.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.37%)</title><rect x="624" y="244" width="4" height="15" fill="rgb(224,219,50)"/><text x="627.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="624" y="260" width="4" height="15" fill="rgb(242,36,16)"/><text x="627.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="624" y="276" width="4" height="15" fill="rgb(205,163,24)"/><text x="627.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="624" y="292" width="4" height="15" fill="rgb(210,202,19)"/><text x="627.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="624" y="308" width="4" height="15" fill="rgb(244,64,30)"/><text x="627.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="624" y="324" width="4" height="15" fill="rgb(237,37,17)"/><text x="627.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.37%)</title><rect x="624" y="340" width="4" height="15" fill="rgb(247,197,26)"/><text x="627.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="624" y="356" width="4" height="15" fill="rgb(238,111,34)"/><text x="627.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="624" y="372" width="4" height="15" fill="rgb(250,181,53)"/><text x="627.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="624" y="388" width="4" height="15" fill="rgb(234,84,29)"/><text x="627.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="624" y="404" width="4" height="15" fill="rgb(229,117,22)"/><text x="627.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="624" y="420" width="4" height="15" fill="rgb(244,53,2)"/><text x="627.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="624" y="436" width="4" height="15" fill="rgb(232,49,13)"/><text x="627.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="624" y="452" width="4" height="15" fill="rgb(209,204,31)"/><text x="627.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="624" y="468" width="4" height="15" fill="rgb(233,178,27)"/><text x="627.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.19%)</title><rect x="626" y="484" width="2" height="15" fill="rgb(208,15,48)"/><text x="629.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="626" y="500" width="2" height="15" fill="rgb(250,75,22)"/><text x="629.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="626" y="516" width="2" height="15" fill="rgb(252,60,26)"/><text x="629.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="626" y="532" width="2" height="15" fill="rgb(238,35,16)"/><text x="629.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="626" y="548" width="2" height="15" fill="rgb(244,80,34)"/><text x="629.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="626" y="564" width="2" height="15" fill="rgb(215,95,52)"/><text x="629.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.19%)</title><rect x="626" y="580" width="2" height="15" fill="rgb(231,29,25)"/><text x="629.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="626" y="596" width="2" height="15" fill="rgb(241,23,12)"/><text x="629.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="626" y="612" width="2" height="15" fill="rgb(249,63,36)"/><text x="629.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="626" y="628" width="2" height="15" fill="rgb(228,215,38)"/><text x="629.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="626" y="644" width="2" height="15" fill="rgb(253,119,15)"/><text x="629.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="626" y="660" width="2" height="15" fill="rgb(243,146,34)"/><text x="629.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.19%)</title><rect x="626" y="676" width="2" height="15" fill="rgb(206,61,42)"/><text x="629.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="626" y="692" width="2" height="15" fill="rgb(225,153,32)"/><text x="629.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="626" y="708" width="2" height="15" fill="rgb(221,103,17)"/><text x="629.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="626" y="724" width="2" height="15" fill="rgb(209,93,23)"/><text x="629.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="626" y="740" width="2" height="15" fill="rgb(226,47,54)"/><text x="629.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="626" y="756" width="2" height="15" fill="rgb(227,182,40)"/><text x="629.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.19%)</title><rect x="626" y="772" width="2" height="15" fill="rgb(220,222,12)"/><text x="629.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.19%)</title><rect x="626" y="788" width="2" height="15" fill="rgb(254,87,6)"/><text x="629.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="626" y="804" width="2" height="15" fill="rgb(213,169,47)"/><text x="629.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.19%)</title><rect x="626" y="820" width="2" height="15" fill="rgb(217,192,2)"/><text x="629.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.19%)</title><rect x="626" y="836" width="2" height="15" fill="rgb(244,139,41)"/><text x="629.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="626" y="852" width="2" height="15" fill="rgb(220,22,44)"/><text x="629.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="626" y="868" width="2" height="15" fill="rgb(234,24,16)"/><text x="629.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="626" y="884" width="2" height="15" fill="rgb(209,202,8)"/><text x="629.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.19%)</title><rect x="626" y="900" width="2" height="15" fill="rgb(239,224,29)"/><text x="629.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.19%)</title><rect x="626" y="916" width="2" height="15" fill="rgb(205,21,6)"/><text x="629.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.19%)</title><rect x="626" y="932" width="2" height="15" fill="rgb(243,123,15)"/><text x="629.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.19%)</title><rect x="628" y="340" width="2" height="15" fill="rgb(225,159,31)"/><text x="631.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="356" width="2" height="15" fill="rgb(219,106,45)"/><text x="631.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="372" width="2" height="15" fill="rgb(225,190,2)"/><text x="631.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="388" width="2" height="15" fill="rgb(254,212,7)"/><text x="631.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="404" width="2" height="15" fill="rgb(214,200,40)"/><text x="631.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="420" width="2" height="15" fill="rgb(232,149,7)"/><text x="631.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.19%)</title><rect x="628" y="436" width="2" height="15" fill="rgb(242,83,45)"/><text x="631.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="452" width="2" height="15" fill="rgb(214,30,30)"/><text x="631.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="468" width="2" height="15" fill="rgb(219,208,7)"/><text x="631.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="484" width="2" height="15" fill="rgb(217,139,20)"/><text x="631.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="500" width="2" height="15" fill="rgb(244,207,6)"/><text x="631.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="516" width="2" height="15" fill="rgb(205,148,28)"/><text x="631.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.19%)</title><rect x="628" y="532" width="2" height="15" fill="rgb(223,112,29)"/><text x="631.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="548" width="2" height="15" fill="rgb(212,133,37)"/><text x="631.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="564" width="2" height="15" fill="rgb(222,141,41)"/><text x="631.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="580" width="2" height="15" fill="rgb(248,57,3)"/><text x="631.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="596" width="2" height="15" fill="rgb(240,19,11)"/><text x="631.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="612" width="2" height="15" fill="rgb(236,142,0)"/><text x="631.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (1 samples, 0.19%)</title><rect x="628" y="628" width="2" height="15" fill="rgb(211,88,36)"/><text x="631.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="644" width="2" height="15" fill="rgb(244,214,45)"/><text x="631.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="660" width="2" height="15" fill="rgb(222,43,45)"/><text x="631.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="676" width="2" height="15" fill="rgb(216,63,3)"/><text x="631.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="692" width="2" height="15" fill="rgb(215,77,3)"/><text x="631.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="708" width="2" height="15" fill="rgb(242,222,4)"/><text x="631.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py:1341) (1 samples, 0.19%)</title><rect x="628" y="724" width="2" height="15" fill="rgb(212,5,21)"/><text x="631.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="740" width="2" height="15" fill="rgb(236,29,24)"/><text x="631.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="756" width="2" height="15" fill="rgb(212,179,46)"/><text x="631.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="628" y="772" width="2" height="15" fill="rgb(239,218,47)"/><text x="631.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="628" y="788" width="2" height="15" fill="rgb(251,81,33)"/><text x="631.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="804" width="2" height="15" fill="rgb(223,17,5)"/><text x="631.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py:98) (1 samples, 0.19%)</title><rect x="628" y="820" width="2" height="15" fill="rgb(221,202,33)"/><text x="631.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="628" y="836" width="2" height="15" fill="rgb(248,155,13)"/><text x="631.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="628" y="852" width="2" height="15" fill="rgb(219,49,45)"/><text x="631.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="628" y="868" width="2" height="15" fill="rgb(251,17,7)"/><text x="631.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.19%)</title><rect x="628" y="884" width="2" height="15" fill="rgb(226,96,28)"/><text x="631.00" y="894.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.19%)</title><rect x="628" y="900" width="2" height="15" fill="rgb(210,17,22)"/><text x="631.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="628" y="916" width="2" height="15" fill="rgb(223,76,47)"/><text x="631.00" y="926.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="932" width="2" height="15" fill="rgb(220,110,16)"/><text x="631.00" y="942.50"></text></g><g><title>0x7fbdc4ca6995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="948" width="2" height="15" fill="rgb(233,141,41)"/><text x="631.00" y="958.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="964" width="2" height="15" fill="rgb(242,194,3)"/><text x="631.00" y="974.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="980" width="2" height="15" fill="rgb(206,12,40)"/><text x="631.00" y="990.50"></text></g><g><title>0x7fbdc4ca6258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="996" width="2" height="15" fill="rgb(224,75,51)"/><text x="631.00" y="1006.50"></text></g><g><title>0x7fbdc4cf3d7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="1012" width="2" height="15" fill="rgb(239,85,49)"/><text x="631.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="1028" width="2" height="15" fill="rgb(205,197,40)"/><text x="631.00" y="1038.50"></text></g><g><title>0x7fbdc4cf418b (ld-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="1044" width="2" height="15" fill="rgb(225,138,7)"/><text x="631.00" y="1054.50"></text></g><g><title>0x7fbdc4ce9ad9 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="1060" width="2" height="15" fill="rgb(217,184,36)"/><text x="631.00" y="1070.50"></text></g><g><title>0x7fbdc4cf14c5 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="1076" width="2" height="15" fill="rgb(220,194,37)"/><text x="631.00" y="1086.50"></text></g><g><title>0x7fbdc4cfbffe (ld-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="1092" width="2" height="15" fill="rgb(211,136,35)"/><text x="631.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.19%)</title><rect x="630" y="436" width="3" height="15" fill="rgb(238,118,1)"/><text x="633.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="630" y="452" width="3" height="15" fill="rgb(205,214,29)"/><text x="633.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="630" y="468" width="3" height="15" fill="rgb(212,3,6)"/><text x="633.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="630" y="484" width="3" height="15" fill="rgb(206,78,29)"/><text x="633.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="630" y="500" width="3" height="15" fill="rgb(242,163,4)"/><text x="633.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="630" y="516" width="3" height="15" fill="rgb(213,96,33)"/><text x="633.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.19%)</title><rect x="630" y="532" width="3" height="15" fill="rgb(207,33,15)"/><text x="633.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="630" y="548" width="3" height="15" fill="rgb(224,22,8)"/><text x="633.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="630" y="564" width="3" height="15" fill="rgb(254,144,33)"/><text x="633.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="630" y="580" width="3" height="15" fill="rgb(250,226,52)"/><text x="633.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="630" y="596" width="3" height="15" fill="rgb(252,159,8)"/><text x="633.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="630" y="612" width="3" height="15" fill="rgb(229,201,35)"/><text x="633.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.19%)</title><rect x="630" y="628" width="3" height="15" fill="rgb(252,28,54)"/><text x="633.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="630" y="644" width="3" height="15" fill="rgb(235,205,26)"/><text x="633.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="630" y="660" width="3" height="15" fill="rgb(222,203,25)"/><text x="633.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="630" y="676" width="3" height="15" fill="rgb(244,135,42)"/><text x="633.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="630" y="692" width="3" height="15" fill="rgb(220,104,24)"/><text x="633.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="630" y="708" width="3" height="15" fill="rgb(221,96,6)"/><text x="633.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.19%)</title><rect x="630" y="724" width="3" height="15" fill="rgb(227,34,54)"/><text x="633.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="630" y="740" width="3" height="15" fill="rgb(246,226,26)"/><text x="633.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="630" y="756" width="3" height="15" fill="rgb(216,176,14)"/><text x="633.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="630" y="772" width="3" height="15" fill="rgb(227,42,13)"/><text x="633.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="630" y="788" width="3" height="15" fill="rgb(234,179,35)"/><text x="633.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="630" y="804" width="3" height="15" fill="rgb(236,149,1)"/><text x="633.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.19%)</title><rect x="630" y="820" width="3" height="15" fill="rgb(236,24,29)"/><text x="633.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="630" y="836" width="3" height="15" fill="rgb(241,110,35)"/><text x="633.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="630" y="852" width="3" height="15" fill="rgb(252,34,11)"/><text x="633.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="630" y="868" width="3" height="15" fill="rgb(234,89,39)"/><text x="633.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="630" y="884" width="3" height="15" fill="rgb(211,223,5)"/><text x="633.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="630" y="900" width="3" height="15" fill="rgb(230,23,20)"/><text x="633.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:1353) (1 samples, 0.19%)</title><rect x="630" y="916" width="3" height="15" fill="rgb(232,130,47)"/><text x="633.00" y="926.50"></text></g><g><title>DataFrameGroupBy (pandas/core/groupby/generic.py:1360) (1 samples, 0.19%)</title><rect x="630" y="932" width="3" height="15" fill="rgb(231,94,23)"/><text x="633.00" y="942.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:134) (1 samples, 0.19%)</title><rect x="633" y="1508" width="2" height="15" fill="rgb(248,11,10)"/><text x="636.00" y="1518.50"></text></g><g><title>root (&lt;template&gt;:22) (1 samples, 0.19%)</title><rect x="635" y="1572" width="2" height="15" fill="rgb(211,75,20)"/><text x="638.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.19%)</title><rect x="635" y="1588" width="2" height="15" fill="rgb(224,201,27)"/><text x="638.00" y="1598.50"></text></g><g><title>format_name_with_domain (skl2onnx/algebra/automation.py:145) (1 samples, 0.19%)</title><rect x="635" y="1604" width="2" height="15" fill="rgb(237,35,33)"/><text x="638.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="635" y="1620" width="2" height="15" fill="rgb(246,171,17)"/><text x="638.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="635" y="1636" width="2" height="15" fill="rgb(245,165,54)"/><text x="638.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="635" y="1652" width="2" height="15" fill="rgb(229,123,20)"/><text x="638.00" y="1662.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.75] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="635" y="1668" width="2" height="15" fill="rgb(210,74,53)"/><text x="638.00" y="1678.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.56%)</title><rect x="633" y="1492" width="6" height="15" fill="rgb(229,224,26)"/><text x="636.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.37%)</title><rect x="635" y="1508" width="4" height="15" fill="rgb(223,76,23)"/><text x="638.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.37%)</title><rect x="635" y="1524" width="4" height="15" fill="rgb(234,41,12)"/><text x="638.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.37%)</title><rect x="635" y="1540" width="4" height="15" fill="rgb(244,96,6)"/><text x="638.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.37%)</title><rect x="635" y="1556" width="4" height="15" fill="rgb(225,1,32)"/><text x="638.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.19%)</title><rect x="637" y="1572" width="2" height="15" fill="rgb(254,178,42)"/><text x="640.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.19%)</title><rect x="637" y="1588" width="2" height="15" fill="rgb(220,201,25)"/><text x="640.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.19%)</title><rect x="637" y="1604" width="2" height="15" fill="rgb(249,133,26)"/><text x="640.00" y="1614.50"></text></g><g><title>0x7fbdb2d733b1 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="637" y="1620" width="2" height="15" fill="rgb(219,4,13)"/><text x="640.00" y="1630.50"></text></g><g><title>google::protobuf::python::cmessage::Clear (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="637" y="1636" width="2" height="15" fill="rgb(227,202,52)"/><text x="640.00" y="1646.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Clear (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="637" y="1652" width="2" height="15" fill="rgb(227,139,3)"/><text x="640.00" y="1662.50"></text></g><g><title>google::protobuf::Reflection::ListFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="637" y="1668" width="2" height="15" fill="rgb(227,115,41)"/><text x="640.00" y="1678.50"></text></g><g><title>0x7fbdb2e15c6d (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="637" y="1684" width="2" height="15" fill="rgb(224,59,18)"/><text x="640.00" y="1694.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.19%)</title><rect x="639" y="1492" width="2" height="15" fill="rgb(219,119,19)"/><text x="642.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.19%)</title><rect x="639" y="1508" width="2" height="15" fill="rgb(216,194,25)"/><text x="642.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:4) (15 samples, 2.80%)</title><rect x="611" y="52" width="33" height="15" fill="rgb(245,32,5)"/><text x="614.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 2.80%)</title><rect x="611" y="68" width="33" height="15" fill="rgb(211,29,32)"/><text x="614.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 2.80%)</title><rect x="611" y="84" width="33" height="15" fill="rgb(213,201,2)"/><text x="614.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 2.80%)</title><rect x="611" y="100" width="33" height="15" fill="rgb(253,174,2)"/><text x="614.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 2.80%)</title><rect x="611" y="116" width="33" height="15" fill="rgb(218,180,31)"/><text x="614.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 2.80%)</title><rect x="611" y="132" width="33" height="15" fill="rgb(242,115,49)"/><text x="614.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:7) (9 samples, 1.68%)</title><rect x="624" y="148" width="20" height="15" fill="rgb(247,222,2)"/><text x="627.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.68%)</title><rect x="624" y="164" width="20" height="15" fill="rgb(250,200,6)"/><text x="627.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.68%)</title><rect x="624" y="180" width="20" height="15" fill="rgb(221,192,53)"/><text x="627.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.68%)</title><rect x="624" y="196" width="20" height="15" fill="rgb(213,93,17)"/><text x="627.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.68%)</title><rect x="624" y="212" width="20" height="15" fill="rgb(247,137,42)"/><text x="627.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.68%)</title><rect x="624" y="228" width="20" height="15" fill="rgb(225,76,46)"/><text x="627.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.31%)</title><rect x="628" y="244" width="16" height="15" fill="rgb(249,176,15)"/><text x="631.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.31%)</title><rect x="628" y="260" width="16" height="15" fill="rgb(245,12,32)"/><text x="631.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.31%)</title><rect x="628" y="276" width="16" height="15" fill="rgb(216,103,10)"/><text x="631.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.31%)</title><rect x="628" y="292" width="16" height="15" fill="rgb(236,14,41)"/><text x="631.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.31%)</title><rect x="628" y="308" width="16" height="15" fill="rgb(226,146,6)"/><text x="631.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.31%)</title><rect x="628" y="324" width="16" height="15" fill="rgb(227,175,38)"/><text x="631.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.12%)</title><rect x="630" y="340" width="14" height="15" fill="rgb(223,92,10)"/><text x="633.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.12%)</title><rect x="630" y="356" width="14" height="15" fill="rgb(244,89,3)"/><text x="633.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.12%)</title><rect x="630" y="372" width="14" height="15" fill="rgb(225,163,2)"/><text x="633.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.12%)</title><rect x="630" y="388" width="14" height="15" fill="rgb(213,24,45)"/><text x="633.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.12%)</title><rect x="630" y="404" width="14" height="15" fill="rgb(226,163,39)"/><text x="633.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.12%)</title><rect x="630" y="420" width="14" height="15" fill="rgb(245,105,38)"/><text x="633.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 0.93%)</title><rect x="633" y="436" width="11" height="15" fill="rgb(212,66,10)"/><text x="636.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="452" width="11" height="15" fill="rgb(232,32,2)"/><text x="636.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.93%)</title><rect x="633" y="468" width="11" height="15" fill="rgb(213,74,36)"/><text x="636.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="484" width="11" height="15" fill="rgb(240,135,32)"/><text x="636.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="500" width="11" height="15" fill="rgb(247,22,50)"/><text x="636.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="516" width="11" height="15" fill="rgb(244,225,37)"/><text x="636.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="532" width="11" height="15" fill="rgb(221,64,10)"/><text x="636.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="548" width="11" height="15" fill="rgb(207,113,10)"/><text x="636.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="564" width="11" height="15" fill="rgb(211,1,36)"/><text x="636.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 0.93%)</title><rect x="633" y="580" width="11" height="15" fill="rgb(253,82,33)"/><text x="636.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="596" width="11" height="15" fill="rgb(240,97,5)"/><text x="636.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="612" width="11" height="15" fill="rgb(230,26,52)"/><text x="636.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="628" width="11" height="15" fill="rgb(232,207,51)"/><text x="636.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="644" width="11" height="15" fill="rgb(235,28,39)"/><text x="636.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="660" width="11" height="15" fill="rgb(245,73,17)"/><text x="636.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 0.93%)</title><rect x="633" y="676" width="11" height="15" fill="rgb(250,148,53)"/><text x="636.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="692" width="11" height="15" fill="rgb(246,102,48)"/><text x="636.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="708" width="11" height="15" fill="rgb(236,182,5)"/><text x="636.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="724" width="11" height="15" fill="rgb(206,198,46)"/><text x="636.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="740" width="11" height="15" fill="rgb(228,1,49)"/><text x="636.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="756" width="11" height="15" fill="rgb(207,173,7)"/><text x="636.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.93%)</title><rect x="633" y="772" width="11" height="15" fill="rgb(227,18,54)"/><text x="636.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="788" width="11" height="15" fill="rgb(231,69,29)"/><text x="636.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="804" width="11" height="15" fill="rgb(211,218,43)"/><text x="636.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="820" width="11" height="15" fill="rgb(230,175,52)"/><text x="636.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="836" width="11" height="15" fill="rgb(233,9,4)"/><text x="636.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="852" width="11" height="15" fill="rgb(225,121,15)"/><text x="636.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.93%)</title><rect x="633" y="868" width="11" height="15" fill="rgb(235,98,0)"/><text x="636.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="884" width="11" height="15" fill="rgb(216,2,52)"/><text x="636.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.93%)</title><rect x="633" y="900" width="11" height="15" fill="rgb(216,188,14)"/><text x="636.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="916" width="11" height="15" fill="rgb(231,63,9)"/><text x="636.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="932" width="11" height="15" fill="rgb(252,144,33)"/><text x="636.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="948" width="11" height="15" fill="rgb(236,131,16)"/><text x="636.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="964" width="11" height="15" fill="rgb(250,112,27)"/><text x="636.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="980" width="11" height="15" fill="rgb(238,36,3)"/><text x="636.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="996" width="11" height="15" fill="rgb(249,110,42)"/><text x="636.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.93%)</title><rect x="633" y="1012" width="11" height="15" fill="rgb(231,57,52)"/><text x="636.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="1028" width="11" height="15" fill="rgb(207,111,4)"/><text x="636.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="1044" width="11" height="15" fill="rgb(240,220,34)"/><text x="636.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="1060" width="11" height="15" fill="rgb(249,170,36)"/><text x="636.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="1076" width="11" height="15" fill="rgb(238,172,35)"/><text x="636.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="1092" width="11" height="15" fill="rgb(242,194,19)"/><text x="636.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 0.93%)</title><rect x="633" y="1108" width="11" height="15" fill="rgb(224,95,17)"/><text x="636.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 0.93%)</title><rect x="633" y="1124" width="11" height="15" fill="rgb(222,220,0)"/><text x="636.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="1140" width="11" height="15" fill="rgb(220,100,8)"/><text x="636.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="1156" width="11" height="15" fill="rgb(248,222,8)"/><text x="636.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="1172" width="11" height="15" fill="rgb(223,153,25)"/><text x="636.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="1188" width="11" height="15" fill="rgb(233,105,41)"/><text x="636.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="1204" width="11" height="15" fill="rgb(229,135,38)"/><text x="636.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="1220" width="11" height="15" fill="rgb(211,39,48)"/><text x="636.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (5 samples, 0.93%)</title><rect x="633" y="1236" width="11" height="15" fill="rgb(233,94,3)"/><text x="636.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 0.93%)</title><rect x="633" y="1252" width="11" height="15" fill="rgb(246,224,4)"/><text x="636.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="1268" width="11" height="15" fill="rgb(246,119,16)"/><text x="636.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="1284" width="11" height="15" fill="rgb(227,186,25)"/><text x="636.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="1300" width="11" height="15" fill="rgb(239,96,30)"/><text x="636.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="1316" width="11" height="15" fill="rgb(254,133,33)"/><text x="636.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="1332" width="11" height="15" fill="rgb(230,9,18)"/><text x="636.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="1348" width="11" height="15" fill="rgb(237,71,7)"/><text x="636.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (5 samples, 0.93%)</title><rect x="633" y="1364" width="11" height="15" fill="rgb(248,8,52)"/><text x="636.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="633" y="1380" width="11" height="15" fill="rgb(219,0,53)"/><text x="636.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="633" y="1396" width="11" height="15" fill="rgb(206,84,0)"/><text x="636.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="633" y="1412" width="11" height="15" fill="rgb(214,76,15)"/><text x="636.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="633" y="1428" width="11" height="15" fill="rgb(205,108,53)"/><text x="636.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="633" y="1444" width="11" height="15" fill="rgb(228,105,35)"/><text x="636.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (5 samples, 0.93%)</title><rect x="633" y="1460" width="11" height="15" fill="rgb(237,147,14)"/><text x="636.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (5 samples, 0.93%)</title><rect x="633" y="1476" width="11" height="15" fill="rgb(226,210,30)"/><text x="636.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.19%)</title><rect x="641" y="1492" width="3" height="15" fill="rgb(242,101,33)"/><text x="644.00" y="1502.50"></text></g><g><title>0x7fbdb4ada0e9 (?) (1 samples, 0.19%)</title><rect x="641" y="1508" width="3" height="15" fill="rgb(245,186,23)"/><text x="644.00" y="1518.50"></text></g><g><title>0x7fbdb4ac0c3b (?) (1 samples, 0.19%)</title><rect x="641" y="1524" width="3" height="15" fill="rgb(239,186,47)"/><text x="644.00" y="1534.50"></text></g><g><title>0x7fbdb4ae7c27 (?) (1 samples, 0.19%)</title><rect x="641" y="1540" width="3" height="15" fill="rgb(236,146,1)"/><text x="644.00" y="1550.50"></text></g><g><title>0x7fbdb4ae59a8 (?) (1 samples, 0.19%)</title><rect x="641" y="1556" width="3" height="15" fill="rgb(223,146,34)"/><text x="644.00" y="1566.50"></text></g><g><title>0x7fbdc4a1ed07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="641" y="1572" width="3" height="15" fill="rgb(216,211,45)"/><text x="644.00" y="1582.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="652" y="180" width="3" height="15" fill="rgb(214,123,23)"/><text x="655.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.56%)</title><rect x="655" y="180" width="6" height="15" fill="rgb(215,226,3)"/><text x="658.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.19%)</title><rect x="666" y="212" width="2" height="15" fill="rgb(207,14,37)"/><text x="669.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.19%)</title><rect x="666" y="228" width="2" height="15" fill="rgb(228,140,27)"/><text x="669.00" y="238.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.19%)</title><rect x="666" y="244" width="2" height="15" fill="rgb(220,2,32)"/><text x="669.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.19%)</title><rect x="666" y="260" width="2" height="15" fill="rgb(215,70,25)"/><text x="669.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.19%)</title><rect x="668" y="212" width="2" height="15" fill="rgb(252,48,14)"/><text x="671.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.56%)</title><rect x="666" y="196" width="6" height="15" fill="rgb(208,14,47)"/><text x="669.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.19%)</title><rect x="670" y="212" width="2" height="15" fill="rgb(209,183,7)"/><text x="673.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="670" y="228" width="2" height="15" fill="rgb(226,166,21)"/><text x="673.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="670" y="244" width="2" height="15" fill="rgb(226,209,2)"/><text x="673.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="670" y="260" width="2" height="15" fill="rgb(218,169,49)"/><text x="673.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:89) (1 samples, 0.19%)</title><rect x="670" y="276" width="2" height="15" fill="rgb(245,66,40)"/><text x="673.00" y="286.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.19%)</title><rect x="672" y="260" width="2" height="15" fill="rgb(207,221,12)"/><text x="675.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="672" y="276" width="2" height="15" fill="rgb(209,97,13)"/><text x="675.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="672" y="292" width="2" height="15" fill="rgb(216,177,50)"/><text x="675.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.19%)</title><rect x="672" y="308" width="2" height="15" fill="rgb(241,108,7)"/><text x="675.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (2 samples, 0.37%)</title><rect x="672" y="196" width="5" height="15" fill="rgb(222,196,22)"/><text x="675.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.37%)</title><rect x="672" y="212" width="5" height="15" fill="rgb(239,57,17)"/><text x="675.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (2 samples, 0.37%)</title><rect x="672" y="228" width="5" height="15" fill="rgb(234,13,31)"/><text x="675.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (2 samples, 0.37%)</title><rect x="672" y="244" width="5" height="15" fill="rgb(232,123,14)"/><text x="675.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="674" y="260" width="3" height="15" fill="rgb(240,167,18)"/><text x="677.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="674" y="276" width="3" height="15" fill="rgb(213,79,15)"/><text x="677.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="674" y="292" width="3" height="15" fill="rgb(249,159,12)"/><text x="677.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.19%)</title><rect x="679" y="276" width="2" height="15" fill="rgb(227,101,10)"/><text x="682.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.37%)</title><rect x="679" y="260" width="4" height="15" fill="rgb(211,69,7)"/><text x="682.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="681" y="276" width="2" height="15" fill="rgb(222,160,20)"/><text x="684.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.19%)</title><rect x="681" y="292" width="2" height="15" fill="rgb(245,221,5)"/><text x="684.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="683" y="308" width="2" height="15" fill="rgb(205,41,34)"/><text x="686.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.19%)</title><rect x="683" y="324" width="2" height="15" fill="rgb(249,39,39)"/><text x="686.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="683" y="340" width="2" height="15" fill="rgb(222,114,14)"/><text x="686.00" y="350.50"></text></g><g><title>0x7fbdc49d6aae (libc-2.29.so) (1 samples, 0.19%)</title><rect x="683" y="356" width="2" height="15" fill="rgb(223,115,42)"/><text x="686.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (5 samples, 0.93%)</title><rect x="677" y="228" width="11" height="15" fill="rgb(226,4,19)"/><text x="680.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="679" y="244" width="9" height="15" fill="rgb(218,197,15)"/><text x="682.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="683" y="260" width="5" height="15" fill="rgb(251,44,33)"/><text x="686.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.37%)</title><rect x="683" y="276" width="5" height="15" fill="rgb(246,227,50)"/><text x="686.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.37%)</title><rect x="683" y="292" width="5" height="15" fill="rgb(232,146,34)"/><text x="686.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="685" y="308" width="3" height="15" fill="rgb(235,133,52)"/><text x="688.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:547) (1 samples, 0.19%)</title><rect x="685" y="324" width="3" height="15" fill="rgb(246,90,26)"/><text x="688.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="685" y="340" width="3" height="15" fill="rgb(248,187,36)"/><text x="688.00" y="350.50"></text></g><g><title>0x7fbdc4a206df (libc-2.29.so) (1 samples, 0.19%)</title><rect x="685" y="356" width="3" height="15" fill="rgb(244,67,31)"/><text x="688.00" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.19%)</title><rect x="688" y="292" width="2" height="15" fill="rgb(229,71,13)"/><text x="691.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="690" y="308" width="2" height="15" fill="rgb(230,13,34)"/><text x="693.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="690" y="324" width="2" height="15" fill="rgb(243,53,45)"/><text x="693.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="690" y="340" width="2" height="15" fill="rgb(210,79,38)"/><text x="693.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="690" y="356" width="2" height="15" fill="rgb(205,160,48)"/><text x="693.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="690" y="372" width="2" height="15" fill="rgb(235,29,19)"/><text x="693.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="690" y="388" width="2" height="15" fill="rgb(243,42,8)"/><text x="693.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.37%)</title><rect x="692" y="324" width="4" height="15" fill="rgb(223,146,20)"/><text x="695.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="696" y="340" width="3" height="15" fill="rgb(251,5,53)"/><text x="699.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3425) (1 samples, 0.19%)</title><rect x="696" y="356" width="3" height="15" fill="rgb(208,137,3)"/><text x="699.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="699" y="356" width="2" height="15" fill="rgb(228,79,14)"/><text x="702.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="699" y="372" width="2" height="15" fill="rgb(253,82,47)"/><text x="702.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2996) (1 samples, 0.19%)</title><rect x="699" y="388" width="2" height="15" fill="rgb(210,107,27)"/><text x="702.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (12 samples, 2.24%)</title><rect x="677" y="196" width="26" height="15" fill="rgb(237,80,34)"/><text x="680.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (12 samples, 2.24%)</title><rect x="677" y="212" width="26" height="15" fill="rgb(239,119,53)"/><text x="680.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (7 samples, 1.31%)</title><rect x="688" y="228" width="15" height="15" fill="rgb(251,92,3)"/><text x="691.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (7 samples, 1.31%)</title><rect x="688" y="244" width="15" height="15" fill="rgb(209,227,51)"/><text x="691.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.31%)</title><rect x="688" y="260" width="15" height="15" fill="rgb(209,36,14)"/><text x="691.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (7 samples, 1.31%)</title><rect x="688" y="276" width="15" height="15" fill="rgb(229,189,17)"/><text x="691.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (6 samples, 1.12%)</title><rect x="690" y="292" width="13" height="15" fill="rgb(225,157,50)"/><text x="693.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.93%)</title><rect x="692" y="308" width="11" height="15" fill="rgb(242,213,34)"/><text x="695.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.56%)</title><rect x="696" y="324" width="7" height="15" fill="rgb(235,49,14)"/><text x="699.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.37%)</title><rect x="699" y="340" width="4" height="15" fill="rgb(250,216,30)"/><text x="702.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="701" y="356" width="2" height="15" fill="rgb(252,202,54)"/><text x="704.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.19%)</title><rect x="701" y="372" width="2" height="15" fill="rgb(238,226,1)"/><text x="704.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.19%)</title><rect x="701" y="388" width="2" height="15" fill="rgb(244,47,11)"/><text x="704.00" y="398.50"></text></g><g><title>0x7fbd8557c422 (?) (1 samples, 0.19%)</title><rect x="703" y="244" width="2" height="15" fill="rgb(205,158,17)"/><text x="706.00" y="254.50"></text></g><g><title>0x7fbd8558289e (?) (1 samples, 0.19%)</title><rect x="703" y="260" width="2" height="15" fill="rgb(230,66,41)"/><text x="706.00" y="270.50"></text></g><g><title>0x7fbd8558274f (?) (1 samples, 0.19%)</title><rect x="703" y="276" width="2" height="15" fill="rgb(247,217,6)"/><text x="706.00" y="286.50"></text></g><g><title>0x7fbd85588a3a (?) (1 samples, 0.19%)</title><rect x="703" y="292" width="2" height="15" fill="rgb(244,16,49)"/><text x="706.00" y="302.50"></text></g><g><title>0x7fbd8e9e4ab9 (?) (1 samples, 0.19%)</title><rect x="703" y="308" width="2" height="15" fill="rgb(206,180,20)"/><text x="706.00" y="318.50"></text></g><g><title>0x7fbd8e9e5eab (?) (1 samples, 0.19%)</title><rect x="703" y="324" width="2" height="15" fill="rgb(232,22,2)"/><text x="706.00" y="334.50"></text></g><g><title>0x7fbd8e9e5eab (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="705" y="468" width="2" height="15" fill="rgb(218,176,30)"/><text x="708.00" y="478.50"></text></g><g><title>0x7fbd8e9e4ab9 (libgomp.so.1.0.0) (4 samples, 0.75%)</title><rect x="705" y="452" width="9" height="15" fill="rgb(251,89,31)"/><text x="708.00" y="462.50"></text></g><g><title>0x7fbd8e9e5ead (libgomp.so.1.0.0) (3 samples, 0.56%)</title><rect x="707" y="468" width="7" height="15" fill="rgb(252,151,46)"/><text x="710.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (7 samples, 1.31%)</title><rect x="703" y="196" width="15" height="15" fill="rgb(215,217,26)"/><text x="706.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 1.31%)</title><rect x="703" y="212" width="15" height="15" fill="rgb(253,35,39)"/><text x="706.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (7 samples, 1.31%)</title><rect x="703" y="228" width="15" height="15" fill="rgb(250,69,14)"/><text x="706.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (6 samples, 1.12%)</title><rect x="705" y="244" width="13" height="15" fill="rgb(220,158,28)"/><text x="708.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (6 samples, 1.12%)</title><rect x="705" y="260" width="13" height="15" fill="rgb(210,170,35)"/><text x="708.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (6 samples, 1.12%)</title><rect x="705" y="276" width="13" height="15" fill="rgb(237,101,23)"/><text x="708.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (6 samples, 1.12%)</title><rect x="705" y="292" width="13" height="15" fill="rgb(209,162,21)"/><text x="708.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (6 samples, 1.12%)</title><rect x="705" y="308" width="13" height="15" fill="rgb(209,116,6)"/><text x="708.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (6 samples, 1.12%)</title><rect x="705" y="324" width="13" height="15" fill="rgb(210,127,5)"/><text x="708.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (6 samples, 1.12%)</title><rect x="705" y="340" width="13" height="15" fill="rgb(206,35,22)"/><text x="708.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (6 samples, 1.12%)</title><rect x="705" y="356" width="13" height="15" fill="rgb(241,91,43)"/><text x="708.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (6 samples, 1.12%)</title><rect x="705" y="372" width="13" height="15" fill="rgb(235,72,13)"/><text x="708.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (6 samples, 1.12%)</title><rect x="705" y="388" width="13" height="15" fill="rgb(226,29,21)"/><text x="708.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (6 samples, 1.12%)</title><rect x="705" y="404" width="13" height="15" fill="rgb(240,181,48)"/><text x="708.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (6 samples, 1.12%)</title><rect x="705" y="420" width="13" height="15" fill="rgb(216,111,32)"/><text x="708.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (6 samples, 1.12%)</title><rect x="705" y="436" width="13" height="15" fill="rgb(207,229,42)"/><text x="708.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.37%)</title><rect x="714" y="452" width="4" height="15" fill="rgb(216,10,38)"/><text x="717.00" y="462.50"></text></g><g><title>0x7fbd8e9e3daa (libgomp.so.1.0.0) (2 samples, 0.37%)</title><rect x="714" y="468" width="4" height="15" fill="rgb(229,99,22)"/><text x="717.00" y="478.50"></text></g><g><title>0x7fbd8e9e5cf9 (libgomp.so.1.0.0) (2 samples, 0.37%)</title><rect x="714" y="484" width="4" height="15" fill="rgb(244,181,19)"/><text x="717.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.19%)</title><rect x="718" y="196" width="3" height="15" fill="rgb(223,226,10)"/><text x="721.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py:17) (1 samples, 0.19%)</title><rect x="718" y="212" width="3" height="15" fill="rgb(254,71,52)"/><text x="721.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="718" y="228" width="3" height="15" fill="rgb(247,22,40)"/><text x="721.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="718" y="244" width="3" height="15" fill="rgb(253,49,13)"/><text x="721.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.19%)</title><rect x="718" y="260" width="3" height="15" fill="rgb(249,138,21)"/><text x="721.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.19%)</title><rect x="718" y="276" width="3" height="15" fill="rgb(247,226,36)"/><text x="721.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.19%)</title><rect x="718" y="292" width="3" height="15" fill="rgb(225,31,24)"/><text x="721.00" y="302.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.19%)</title><rect x="718" y="308" width="3" height="15" fill="rgb(214,181,16)"/><text x="721.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.37%)</title><rect x="723" y="228" width="4" height="15" fill="rgb(244,190,2)"/><text x="726.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.19%)</title><rect x="727" y="228" width="2" height="15" fill="rgb(213,150,17)"/><text x="730.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="727" y="244" width="2" height="15" fill="rgb(237,199,33)"/><text x="730.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="727" y="260" width="2" height="15" fill="rgb(254,148,23)"/><text x="730.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="727" y="276" width="2" height="15" fill="rgb(227,179,6)"/><text x="730.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="727" y="292" width="2" height="15" fill="rgb(215,25,43)"/><text x="730.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="727" y="308" width="2" height="15" fill="rgb(229,118,48)"/><text x="730.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2725) (1 samples, 0.19%)</title><rect x="727" y="324" width="2" height="15" fill="rgb(242,210,31)"/><text x="730.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="729" y="260" width="3" height="15" fill="rgb(239,25,13)"/><text x="732.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1069) (1 samples, 0.19%)</title><rect x="729" y="276" width="3" height="15" fill="rgb(209,45,45)"/><text x="732.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.19%)</title><rect x="732" y="308" width="2" height="15" fill="rgb(226,48,44)"/><text x="735.00" y="318.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:801) (1 samples, 0.19%)</title><rect x="732" y="324" width="2" height="15" fill="rgb(226,53,0)"/><text x="735.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="729" y="244" width="7" height="15" fill="rgb(248,188,8)"/><text x="732.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="732" y="260" width="4" height="15" fill="rgb(241,137,47)"/><text x="735.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="732" y="276" width="4" height="15" fill="rgb(246,155,11)"/><text x="735.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.37%)</title><rect x="732" y="292" width="4" height="15" fill="rgb(223,38,33)"/><text x="735.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="734" y="308" width="2" height="15" fill="rgb(252,44,2)"/><text x="737.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="734" y="324" width="2" height="15" fill="rgb(218,56,39)"/><text x="737.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="734" y="340" width="2" height="15" fill="rgb(249,71,14)"/><text x="737.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="734" y="356" width="2" height="15" fill="rgb(244,184,42)"/><text x="737.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="734" y="372" width="2" height="15" fill="rgb(219,66,44)"/><text x="737.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="734" y="388" width="2" height="15" fill="rgb(242,160,6)"/><text x="737.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="734" y="404" width="2" height="15" fill="rgb(250,78,44)"/><text x="737.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="734" y="420" width="2" height="15" fill="rgb(252,98,40)"/><text x="737.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="734" y="436" width="2" height="15" fill="rgb(222,92,6)"/><text x="737.00" y="446.50"></text></g><g><title>0x7fbdc4a1fb12 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="734" y="452" width="2" height="15" fill="rgb(227,103,30)"/><text x="737.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (8 samples, 1.49%)</title><rect x="721" y="196" width="17" height="15" fill="rgb(211,128,12)"/><text x="724.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 1.49%)</title><rect x="721" y="212" width="17" height="15" fill="rgb(210,10,21)"/><text x="724.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (4 samples, 0.75%)</title><rect x="729" y="228" width="9" height="15" fill="rgb(220,107,4)"/><text x="732.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.19%)</title><rect x="736" y="244" width="2" height="15" fill="rgb(217,4,49)"/><text x="739.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="738" y="228" width="2" height="15" fill="rgb(227,80,31)"/><text x="741.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="738" y="244" width="2" height="15" fill="rgb(228,127,21)"/><text x="741.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.19%)</title><rect x="738" y="260" width="2" height="15" fill="rgb(237,170,12)"/><text x="741.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.19%)</title><rect x="738" y="276" width="2" height="15" fill="rgb(234,82,25)"/><text x="741.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="738" y="292" width="2" height="15" fill="rgb(239,25,5)"/><text x="741.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.19%)</title><rect x="738" y="308" width="2" height="15" fill="rgb(215,98,22)"/><text x="741.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.19%)</title><rect x="738" y="324" width="2" height="15" fill="rgb(224,169,21)"/><text x="741.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="745" y="372" width="2" height="15" fill="rgb(210,129,54)"/><text x="748.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="745" y="388" width="2" height="15" fill="rgb(240,98,4)"/><text x="748.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="745" y="404" width="2" height="15" fill="rgb(208,63,21)"/><text x="748.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.19%)</title><rect x="745" y="420" width="2" height="15" fill="rgb(220,159,36)"/><text x="748.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="745" y="436" width="2" height="15" fill="rgb(229,158,51)"/><text x="748.00" y="446.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1515) (1 samples, 0.19%)</title><rect x="745" y="452" width="2" height="15" fill="rgb(244,157,52)"/><text x="748.00" y="462.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.37%)</title><rect x="747" y="404" width="4" height="15" fill="rgb(233,63,12)"/><text x="750.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (2 samples, 0.37%)</title><rect x="747" y="420" width="4" height="15" fill="rgb(236,189,34)"/><text x="750.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (2 samples, 0.37%)</title><rect x="747" y="436" width="4" height="15" fill="rgb(214,134,22)"/><text x="750.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.37%)</title><rect x="747" y="452" width="4" height="15" fill="rgb(229,211,16)"/><text x="750.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (42 samples, 7.84%)</title><rect x="661" y="180" width="93" height="15" fill="rgb(213,102,25)"/><text x="664.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (7 samples, 1.31%)</title><rect x="738" y="196" width="16" height="15" fill="rgb(233,71,8)"/><text x="741.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (7 samples, 1.31%)</title><rect x="738" y="212" width="16" height="15" fill="rgb(224,58,17)"/><text x="741.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (6 samples, 1.12%)</title><rect x="740" y="228" width="14" height="15" fill="rgb(234,185,45)"/><text x="743.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.12%)</title><rect x="740" y="244" width="14" height="15" fill="rgb(238,54,8)"/><text x="743.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (6 samples, 1.12%)</title><rect x="740" y="260" width="14" height="15" fill="rgb(214,4,17)"/><text x="743.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.93%)</title><rect x="743" y="276" width="11" height="15" fill="rgb(232,130,33)"/><text x="746.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (5 samples, 0.93%)</title><rect x="743" y="292" width="11" height="15" fill="rgb(220,191,4)"/><text x="746.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.93%)</title><rect x="743" y="308" width="11" height="15" fill="rgb(216,27,33)"/><text x="746.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (5 samples, 0.93%)</title><rect x="743" y="324" width="11" height="15" fill="rgb(235,21,40)"/><text x="746.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.75%)</title><rect x="745" y="340" width="9" height="15" fill="rgb(212,84,20)"/><text x="748.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="745" y="356" width="9" height="15" fill="rgb(215,146,18)"/><text x="748.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="747" y="372" width="7" height="15" fill="rgb(232,124,5)"/><text x="750.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="747" y="388" width="7" height="15" fill="rgb(216,213,36)"/><text x="750.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="751" y="404" width="3" height="15" fill="rgb(239,25,32)"/><text x="754.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="751" y="420" width="3" height="15" fill="rgb(233,196,2)"/><text x="754.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1949) (1 samples, 0.19%)</title><rect x="751" y="436" width="3" height="15" fill="rgb(253,115,9)"/><text x="754.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.56%)</title><rect x="754" y="180" width="6" height="15" fill="rgb(210,182,15)"/><text x="757.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:18) (54 samples, 10.07%)</title><rect x="644" y="100" width="118" height="15" fill="rgb(238,171,22)"/><text x="647.00" y="110.50">profile (bench..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (54 samples, 10.07%)</title><rect x="644" y="116" width="118" height="15" fill="rgb(240,158,47)"/><text x="647.00" y="126.50">time_predict (..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (54 samples, 10.07%)</title><rect x="644" y="132" width="118" height="15" fill="rgb(250,215,27)"/><text x="647.00" y="142.50">&lt;lambda&gt; (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (54 samples, 10.07%)</title><rect x="644" y="148" width="118" height="15" fill="rgb(216,85,8)"/><text x="647.00" y="158.50">run (mlprodict..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (53 samples, 9.89%)</title><rect x="646" y="164" width="116" height="15" fill="rgb(222,56,12)"/><text x="649.00" y="174.50">_run_sequence_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.19%)</title><rect x="760" y="180" width="2" height="15" fill="rgb(240,169,28)"/><text x="763.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (11 samples, 2.05%)</title><rect x="769" y="180" width="24" height="15" fill="rgb(250,156,30)"/><text x="772.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 1.12%)</title><rect x="780" y="196" width="13" height="15" fill="rgb(244,188,7)"/><text x="783.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.19%)</title><rect x="813" y="212" width="2" height="15" fill="rgb(216,159,26)"/><text x="816.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.19%)</title><rect x="813" y="228" width="2" height="15" fill="rgb(250,121,12)"/><text x="816.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:492) (1 samples, 0.19%)</title><rect x="813" y="244" width="2" height="15" fill="rgb(230,187,17)"/><text x="816.00" y="254.50"></text></g><g><title>0x7fbdc3c41a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="813" y="260" width="2" height="15" fill="rgb(225,124,17)"/><text x="816.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.19%)</title><rect x="815" y="212" width="2" height="15" fill="rgb(235,196,23)"/><text x="818.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.19%)</title><rect x="815" y="228" width="2" height="15" fill="rgb(214,26,48)"/><text x="818.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.19%)</title><rect x="815" y="244" width="2" height="15" fill="rgb(235,80,38)"/><text x="818.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="815" y="260" width="2" height="15" fill="rgb(237,156,17)"/><text x="818.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.19%)</title><rect x="815" y="276" width="2" height="15" fill="rgb(219,197,6)"/><text x="818.00" y="286.50"></text></g><g><title>0x7fbdc4a3f120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="815" y="292" width="2" height="15" fill="rgb(241,160,52)"/><text x="818.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="817" y="228" width="3" height="15" fill="rgb(219,60,24)"/><text x="820.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.19%)</title><rect x="817" y="244" width="3" height="15" fill="rgb(238,130,24)"/><text x="820.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.19%)</title><rect x="817" y="260" width="3" height="15" fill="rgb(244,203,17)"/><text x="820.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.19%)</title><rect x="817" y="276" width="3" height="15" fill="rgb(226,6,42)"/><text x="820.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:623) (1 samples, 0.19%)</title><rect x="817" y="292" width="3" height="15" fill="rgb(216,130,14)"/><text x="820.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="820" y="276" width="2" height="15" fill="rgb(207,139,49)"/><text x="823.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.19%)</title><rect x="820" y="292" width="2" height="15" fill="rgb(246,63,17)"/><text x="823.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.19%)</title><rect x="820" y="308" width="2" height="15" fill="rgb(211,228,53)"/><text x="823.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.56%)</title><rect x="817" y="212" width="7" height="15" fill="rgb(248,117,35)"/><text x="820.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.37%)</title><rect x="820" y="228" width="4" height="15" fill="rgb(240,121,30)"/><text x="823.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.37%)</title><rect x="820" y="244" width="4" height="15" fill="rgb(215,56,11)"/><text x="823.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (2 samples, 0.37%)</title><rect x="820" y="260" width="4" height="15" fill="rgb(228,141,19)"/><text x="823.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.19%)</title><rect x="822" y="276" width="2" height="15" fill="rgb(240,224,7)"/><text x="825.00" y="286.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:231) (1 samples, 0.19%)</title><rect x="822" y="292" width="2" height="15" fill="rgb(254,28,53)"/><text x="825.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 1.68%)</title><rect x="806" y="196" width="20" height="15" fill="rgb(237,210,9)"/><text x="809.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.19%)</title><rect x="824" y="212" width="2" height="15" fill="rgb(250,75,26)"/><text x="827.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="824" y="228" width="2" height="15" fill="rgb(214,39,2)"/><text x="827.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="824" y="244" width="2" height="15" fill="rgb(222,7,19)"/><text x="827.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="824" y="260" width="2" height="15" fill="rgb(225,120,8)"/><text x="827.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.19%)</title><rect x="824" y="276" width="2" height="15" fill="rgb(253,167,42)"/><text x="827.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="824" y="292" width="2" height="15" fill="rgb(227,42,47)"/><text x="827.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.19%)</title><rect x="824" y="308" width="2" height="15" fill="rgb(238,197,40)"/><text x="827.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="828" y="260" width="3" height="15" fill="rgb(229,225,46)"/><text x="831.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.19%)</title><rect x="828" y="276" width="3" height="15" fill="rgb(239,215,1)"/><text x="831.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:818) (1 samples, 0.19%)</title><rect x="828" y="292" width="3" height="15" fill="rgb(221,146,11)"/><text x="831.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="831" y="260" width="2" height="15" fill="rgb(217,104,46)"/><text x="834.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="831" y="276" width="2" height="15" fill="rgb(250,159,15)"/><text x="834.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="828" y="244" width="7" height="15" fill="rgb(211,161,24)"/><text x="831.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="833" y="260" width="2" height="15" fill="rgb(211,229,45)"/><text x="836.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.19%)</title><rect x="833" y="276" width="2" height="15" fill="rgb(220,45,45)"/><text x="836.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.19%)</title><rect x="833" y="292" width="2" height="15" fill="rgb(253,218,45)"/><text x="836.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="833" y="308" width="2" height="15" fill="rgb(240,196,13)"/><text x="836.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:545) (1 samples, 0.19%)</title><rect x="833" y="324" width="2" height="15" fill="rgb(207,5,30)"/><text x="836.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (5 samples, 0.93%)</title><rect x="826" y="228" width="11" height="15" fill="rgb(234,184,6)"/><text x="829.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.19%)</title><rect x="835" y="244" width="2" height="15" fill="rgb(232,104,37)"/><text x="838.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:28) (1 samples, 0.19%)</title><rect x="837" y="228" width="2" height="15" fill="rgb(235,167,7)"/><text x="840.00" y="238.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="855" y="308" width="2" height="15" fill="rgb(229,125,14)"/><text x="858.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (3 samples, 0.56%)</title><rect x="853" y="292" width="6" height="15" fill="rgb(236,182,19)"/><text x="856.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.19%)</title><rect x="857" y="308" width="2" height="15" fill="rgb(252,73,54)"/><text x="860.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="859" y="340" width="2" height="15" fill="rgb(252,184,41)"/><text x="862.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="859" y="356" width="2" height="15" fill="rgb(251,17,20)"/><text x="862.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="859" y="372" width="2" height="15" fill="rgb(242,181,14)"/><text x="862.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.19%)</title><rect x="861" y="388" width="3" height="15" fill="rgb(242,134,39)"/><text x="864.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.56%)</title><rect x="859" y="308" width="7" height="15" fill="rgb(231,212,47)"/><text x="862.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.56%)</title><rect x="859" y="324" width="7" height="15" fill="rgb(253,50,33)"/><text x="862.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.37%)</title><rect x="861" y="340" width="5" height="15" fill="rgb(239,155,27)"/><text x="864.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.37%)</title><rect x="861" y="356" width="5" height="15" fill="rgb(219,47,32)"/><text x="864.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.37%)</title><rect x="861" y="372" width="5" height="15" fill="rgb(245,68,19)"/><text x="864.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="864" y="388" width="2" height="15" fill="rgb(219,81,42)"/><text x="867.00" y="398.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:79) (1 samples, 0.19%)</title><rect x="868" y="340" width="2" height="15" fill="rgb(206,49,28)"/><text x="871.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (3 samples, 0.56%)</title><rect x="866" y="324" width="6" height="15" fill="rgb(248,163,54)"/><text x="869.00" y="334.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="870" y="340" width="2" height="15" fill="rgb(220,123,33)"/><text x="873.00" y="350.50"></text></g><g><title>0x7fbdc4afccf6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="870" y="356" width="2" height="15" fill="rgb(223,42,8)"/><text x="873.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.19%)</title><rect x="872" y="324" width="3" height="15" fill="rgb(213,2,43)"/><text x="875.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="872" y="340" width="3" height="15" fill="rgb(239,221,32)"/><text x="875.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4563) (1 samples, 0.19%)</title><rect x="875" y="324" width="2" height="15" fill="rgb(233,69,22)"/><text x="878.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.19%)</title><rect x="877" y="324" width="2" height="15" fill="rgb(242,30,43)"/><text x="880.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.19%)</title><rect x="877" y="340" width="2" height="15" fill="rgb(242,83,47)"/><text x="880.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.19%)</title><rect x="879" y="340" width="2" height="15" fill="rgb(211,39,36)"/><text x="882.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.19%)</title><rect x="879" y="356" width="2" height="15" fill="rgb(210,63,12)"/><text x="882.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.19%)</title><rect x="881" y="372" width="2" height="15" fill="rgb(217,34,51)"/><text x="884.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.37%)</title><rect x="881" y="356" width="5" height="15" fill="rgb(222,226,9)"/><text x="884.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="883" y="372" width="3" height="15" fill="rgb(214,134,37)"/><text x="886.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.19%)</title><rect x="883" y="388" width="3" height="15" fill="rgb(228,207,28)"/><text x="886.00" y="398.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:954) (1 samples, 0.19%)</title><rect x="883" y="404" width="3" height="15" fill="rgb(244,24,39)"/><text x="886.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:296) (1 samples, 0.19%)</title><rect x="886" y="372" width="2" height="15" fill="rgb(251,37,45)"/><text x="889.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.37%)</title><rect x="886" y="356" width="4" height="15" fill="rgb(218,116,28)"/><text x="889.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.19%)</title><rect x="888" y="372" width="2" height="15" fill="rgb(217,137,13)"/><text x="891.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.19%)</title><rect x="888" y="388" width="2" height="15" fill="rgb(237,77,3)"/><text x="891.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (30 samples, 5.60%)</title><rect x="826" y="196" width="66" height="15" fill="rgb(245,80,1)"/><text x="829.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 5.60%)</title><rect x="826" y="212" width="66" height="15" fill="rgb(226,197,44)"/><text x="829.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (24 samples, 4.48%)</title><rect x="839" y="228" width="53" height="15" fill="rgb(216,179,54)"/><text x="842.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (22 samples, 4.10%)</title><rect x="844" y="244" width="48" height="15" fill="rgb(254,227,7)"/><text x="847.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 4.10%)</title><rect x="844" y="260" width="48" height="15" fill="rgb(242,44,23)"/><text x="847.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (21 samples, 3.92%)</title><rect x="846" y="276" width="46" height="15" fill="rgb(243,4,50)"/><text x="849.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (15 samples, 2.80%)</title><rect x="859" y="292" width="33" height="15" fill="rgb(246,77,42)"/><text x="862.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 2.24%)</title><rect x="866" y="308" width="26" height="15" fill="rgb(213,103,20)"/><text x="869.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.12%)</title><rect x="879" y="324" width="13" height="15" fill="rgb(252,116,13)"/><text x="882.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.93%)</title><rect x="881" y="340" width="11" height="15" fill="rgb(250,20,52)"/><text x="884.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="890" y="356" width="2" height="15" fill="rgb(241,11,28)"/><text x="893.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="890" y="372" width="2" height="15" fill="rgb(227,100,6)"/><text x="893.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.19%)</title><rect x="892" y="196" width="3" height="15" fill="rgb(206,186,26)"/><text x="895.00" y="206.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.19%)</title><rect x="895" y="276" width="2" height="15" fill="rgb(218,227,33)"/><text x="898.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.19%)</title><rect x="895" y="292" width="2" height="15" fill="rgb(250,150,0)"/><text x="898.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.19%)</title><rect x="895" y="308" width="2" height="15" fill="rgb(252,83,43)"/><text x="898.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:984) (1 samples, 0.19%)</title><rect x="895" y="324" width="2" height="15" fill="rgb(223,185,17)"/><text x="898.00" y="334.50"></text></g><g><title>0x7fbd8e9e5ea0 (libgomp.so.1.0.0) (4 samples, 0.75%)</title><rect x="897" y="468" width="9" height="15" fill="rgb(243,159,6)"/><text x="900.00" y="478.50"></text></g><g><title>0x7fbd8e9e5ea9 (libgomp.so.1.0.0) (8 samples, 1.49%)</title><rect x="906" y="468" width="17" height="15" fill="rgb(205,197,18)"/><text x="909.00" y="478.50"></text></g><g><title>0x7fbd8e9e5eab (libgomp.so.1.0.0) (9 samples, 1.68%)</title><rect x="923" y="468" width="20" height="15" fill="rgb(208,8,40)"/><text x="926.00" y="478.50"></text></g><g><title>0x7fbd8e9e4ab9 (libgomp.so.1.0.0) (26 samples, 4.85%)</title><rect x="897" y="452" width="57" height="15" fill="rgb(238,92,25)"/><text x="900.00" y="462.50">0x7fbd..</text></g><g><title>0x7fbd8e9e5ead (libgomp.so.1.0.0) (5 samples, 0.93%)</title><rect x="943" y="468" width="11" height="15" fill="rgb(248,40,52)"/><text x="946.00" y="478.50"></text></g><g><title>0x7fbd8e9e5cf9 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="954" y="484" width="2" height="15" fill="rgb(236,226,37)"/><text x="957.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (29 samples, 5.41%)</title><rect x="895" y="196" width="63" height="15" fill="rgb(241,14,33)"/><text x="898.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (29 samples, 5.41%)</title><rect x="895" y="212" width="63" height="15" fill="rgb(223,124,51)"/><text x="898.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (29 samples, 5.41%)</title><rect x="895" y="228" width="63" height="15" fill="rgb(237,169,14)"/><text x="898.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (29 samples, 5.41%)</title><rect x="895" y="244" width="63" height="15" fill="rgb(254,132,31)"/><text x="898.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (29 samples, 5.41%)</title><rect x="895" y="260" width="63" height="15" fill="rgb(248,9,18)"/><text x="898.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (28 samples, 5.22%)</title><rect x="897" y="276" width="61" height="15" fill="rgb(215,116,20)"/><text x="900.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (28 samples, 5.22%)</title><rect x="897" y="292" width="61" height="15" fill="rgb(232,28,5)"/><text x="900.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (28 samples, 5.22%)</title><rect x="897" y="308" width="61" height="15" fill="rgb(214,170,3)"/><text x="900.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (28 samples, 5.22%)</title><rect x="897" y="324" width="61" height="15" fill="rgb(231,35,29)"/><text x="900.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (28 samples, 5.22%)</title><rect x="897" y="340" width="61" height="15" fill="rgb(208,108,9)"/><text x="900.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (28 samples, 5.22%)</title><rect x="897" y="356" width="61" height="15" fill="rgb(217,157,11)"/><text x="900.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (28 samples, 5.22%)</title><rect x="897" y="372" width="61" height="15" fill="rgb(250,14,39)"/><text x="900.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (28 samples, 5.22%)</title><rect x="897" y="388" width="61" height="15" fill="rgb(254,229,29)"/><text x="900.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (28 samples, 5.22%)</title><rect x="897" y="404" width="61" height="15" fill="rgb(250,76,22)"/><text x="900.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (28 samples, 5.22%)</title><rect x="897" y="420" width="61" height="15" fill="rgb(212,153,40)"/><text x="900.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (28 samples, 5.22%)</title><rect x="897" y="436" width="61" height="15" fill="rgb(249,205,33)"/><text x="900.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.37%)</title><rect x="954" y="452" width="4" height="15" fill="rgb(244,141,6)"/><text x="957.00" y="462.50"></text></g><g><title>0x7fbd8e9e3daa (libgomp.so.1.0.0) (2 samples, 0.37%)</title><rect x="954" y="468" width="4" height="15" fill="rgb(215,178,46)"/><text x="957.00" y="478.50"></text></g><g><title>0x7fbd8e9e5cfb (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="956" y="484" width="2" height="15" fill="rgb(252,156,54)"/><text x="959.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.19%)</title><rect x="961" y="212" width="2" height="15" fill="rgb(225,56,16)"/><text x="964.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.19%)</title><rect x="961" y="228" width="2" height="15" fill="rgb(224,14,0)"/><text x="964.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (3 samples, 0.56%)</title><rect x="965" y="228" width="7" height="15" fill="rgb(212,44,40)"/><text x="968.00" y="238.50"></text></g><g><title>array_size_get (getset.c:450) (1 samples, 0.19%)</title><rect x="969" y="244" width="3" height="15" fill="rgb(242,59,16)"/><text x="972.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.19%)</title><rect x="969" y="260" width="3" height="15" fill="rgb(221,79,24)"/><text x="972.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.19%)</title><rect x="972" y="244" width="2" height="15" fill="rgb(205,169,20)"/><text x="975.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="974" y="244" width="2" height="15" fill="rgb(232,24,24)"/><text x="977.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="974" y="260" width="2" height="15" fill="rgb(208,139,10)"/><text x="977.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="974" y="276" width="2" height="15" fill="rgb(228,122,37)"/><text x="977.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="974" y="292" width="2" height="15" fill="rgb(227,28,9)"/><text x="977.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="974" y="308" width="2" height="15" fill="rgb(223,71,17)"/><text x="977.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="976" y="260" width="2" height="15" fill="rgb(209,203,13)"/><text x="979.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.19%)</title><rect x="976" y="276" width="2" height="15" fill="rgb(213,101,22)"/><text x="979.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="978" y="308" width="2" height="15" fill="rgb(240,102,11)"/><text x="981.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:754) (1 samples, 0.19%)</title><rect x="978" y="324" width="2" height="15" fill="rgb(212,82,28)"/><text x="981.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="980" y="308" width="3" height="15" fill="rgb(215,132,32)"/><text x="983.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="980" y="324" width="3" height="15" fill="rgb(213,31,33)"/><text x="983.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1069) (1 samples, 0.19%)</title><rect x="980" y="340" width="3" height="15" fill="rgb(227,44,0)"/><text x="983.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.19%)</title><rect x="983" y="324" width="2" height="15" fill="rgb(245,196,25)"/><text x="986.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.75%)</title><rect x="978" y="292" width="9" height="15" fill="rgb(240,148,35)"/><text x="981.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.37%)</title><rect x="983" y="308" width="4" height="15" fill="rgb(207,83,34)"/><text x="986.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3042) (1 samples, 0.19%)</title><rect x="985" y="324" width="2" height="15" fill="rgb(246,166,47)"/><text x="988.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.19%)</title><rect x="987" y="308" width="2" height="15" fill="rgb(234,210,25)"/><text x="990.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.19%)</title><rect x="987" y="324" width="2" height="15" fill="rgb(206,125,33)"/><text x="990.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="987" y="340" width="2" height="15" fill="rgb(205,219,14)"/><text x="990.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.31%)</title><rect x="976" y="244" width="15" height="15" fill="rgb(251,0,30)"/><text x="979.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.12%)</title><rect x="978" y="260" width="13" height="15" fill="rgb(229,183,4)"/><text x="981.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.12%)</title><rect x="978" y="276" width="13" height="15" fill="rgb(245,101,16)"/><text x="981.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.37%)</title><rect x="987" y="292" width="4" height="15" fill="rgb(206,212,0)"/><text x="990.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="989" y="308" width="2" height="15" fill="rgb(227,166,24)"/><text x="992.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.19%)</title><rect x="989" y="324" width="2" height="15" fill="rgb(216,222,21)"/><text x="992.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (10 samples, 1.87%)</title><rect x="972" y="228" width="22" height="15" fill="rgb(254,37,40)"/><text x="975.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="991" y="244" width="3" height="15" fill="rgb(220,76,36)"/><text x="994.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.19%)</title><rect x="991" y="260" width="3" height="15" fill="rgb(229,163,8)"/><text x="994.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.19%)</title><rect x="994" y="228" width="2" height="15" fill="rgb(246,125,0)"/><text x="997.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.19%)</title><rect x="996" y="308" width="2" height="15" fill="rgb(226,217,40)"/><text x="999.00" y="318.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.19%)</title><rect x="996" y="324" width="2" height="15" fill="rgb(236,139,29)"/><text x="999.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.19%)</title><rect x="996" y="340" width="2" height="15" fill="rgb(244,107,11)"/><text x="999.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.37%)</title><rect x="996" y="292" width="4" height="15" fill="rgb(239,178,17)"/><text x="999.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="998" y="308" width="2" height="15" fill="rgb(244,37,30)"/><text x="1001.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3027) (1 samples, 0.19%)</title><rect x="998" y="324" width="2" height="15" fill="rgb(223,208,10)"/><text x="1001.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="1000" y="292" width="2" height="15" fill="rgb(235,93,5)"/><text x="1003.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:305) (1 samples, 0.19%)</title><rect x="1000" y="308" width="2" height="15" fill="rgb(211,67,10)"/><text x="1003.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (21 samples, 3.92%)</title><rect x="958" y="196" width="47" height="15" fill="rgb(241,127,51)"/><text x="961.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (19 samples, 3.54%)</title><rect x="963" y="212" width="42" height="15" fill="rgb(238,141,43)"/><text x="966.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (4 samples, 0.75%)</title><rect x="996" y="228" width="9" height="15" fill="rgb(232,168,36)"/><text x="999.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="996" y="244" width="9" height="15" fill="rgb(244,118,47)"/><text x="999.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.75%)</title><rect x="996" y="260" width="9" height="15" fill="rgb(214,13,45)"/><text x="999.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.75%)</title><rect x="996" y="276" width="9" height="15" fill="rgb(205,18,18)"/><text x="999.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="1002" y="292" width="3" height="15" fill="rgb(213,116,31)"/><text x="1005.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.19%)</title><rect x="1002" y="308" width="3" height="15" fill="rgb(249,80,36)"/><text x="1005.00" y="318.50"></text></g><g><title>0x7fbdc4afc130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1018" y="276" width="2" height="15" fill="rgb(241,33,3)"/><text x="1021.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.19%)</title><rect x="1022" y="324" width="2" height="15" fill="rgb(235,93,7)"/><text x="1025.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (6 samples, 1.12%)</title><rect x="1024" y="340" width="14" height="15" fill="rgb(253,226,27)"/><text x="1027.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (6 samples, 1.12%)</title><rect x="1024" y="356" width="14" height="15" fill="rgb(233,84,20)"/><text x="1027.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (8 samples, 1.49%)</title><rect x="1024" y="324" width="18" height="15" fill="rgb(243,222,39)"/><text x="1027.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.37%)</title><rect x="1038" y="340" width="4" height="15" fill="rgb(250,57,8)"/><text x="1041.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="1040" y="356" width="2" height="15" fill="rgb(231,9,24)"/><text x="1043.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="1042" y="340" width="2" height="15" fill="rgb(218,119,44)"/><text x="1045.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="1046" y="356" width="3" height="15" fill="rgb(214,172,9)"/><text x="1049.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.19%)</title><rect x="1049" y="388" width="2" height="15" fill="rgb(240,222,39)"/><text x="1052.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1579) (1 samples, 0.19%)</title><rect x="1051" y="420" width="2" height="15" fill="rgb(239,45,49)"/><text x="1054.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1863) (1 samples, 0.19%)</title><rect x="1053" y="452" width="2" height="15" fill="rgb(229,60,5)"/><text x="1056.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 1.12%)</title><rect x="1044" y="340" width="13" height="15" fill="rgb(247,161,1)"/><text x="1047.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (4 samples, 0.75%)</title><rect x="1049" y="356" width="8" height="15" fill="rgb(210,139,26)"/><text x="1052.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.75%)</title><rect x="1049" y="372" width="8" height="15" fill="rgb(254,220,36)"/><text x="1052.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.56%)</title><rect x="1051" y="388" width="6" height="15" fill="rgb(223,188,26)"/><text x="1054.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.56%)</title><rect x="1051" y="404" width="6" height="15" fill="rgb(252,182,49)"/><text x="1054.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.37%)</title><rect x="1053" y="420" width="4" height="15" fill="rgb(206,206,35)"/><text x="1056.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.37%)</title><rect x="1053" y="436" width="4" height="15" fill="rgb(229,134,14)"/><text x="1056.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.19%)</title><rect x="1055" y="452" width="2" height="15" fill="rgb(208,30,47)"/><text x="1058.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="1055" y="468" width="2" height="15" fill="rgb(237,34,34)"/><text x="1058.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="1055" y="484" width="2" height="15" fill="rgb(228,212,34)"/><text x="1058.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.19%)</title><rect x="1055" y="500" width="2" height="15" fill="rgb(244,167,45)"/><text x="1058.00" y="510.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="1057" y="356" width="3" height="15" fill="rgb(244,192,41)"/><text x="1060.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="1057" y="372" width="3" height="15" fill="rgb(252,139,45)"/><text x="1060.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.19%)</title><rect x="1057" y="388" width="3" height="15" fill="rgb(252,9,53)"/><text x="1060.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="1060" y="372" width="2" height="15" fill="rgb(238,90,30)"/><text x="1063.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="1060" y="388" width="2" height="15" fill="rgb(216,217,6)"/><text x="1063.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="1064" y="420" width="2" height="15" fill="rgb(249,156,52)"/><text x="1067.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="1064" y="436" width="2" height="15" fill="rgb(212,0,5)"/><text x="1067.00" y="446.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.19%)</title><rect x="1064" y="452" width="2" height="15" fill="rgb(237,172,33)"/><text x="1067.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.56%)</title><rect x="1062" y="372" width="6" height="15" fill="rgb(211,9,16)"/><text x="1065.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (3 samples, 0.56%)</title><rect x="1062" y="388" width="6" height="15" fill="rgb(246,138,29)"/><text x="1065.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (2 samples, 0.37%)</title><rect x="1064" y="404" width="4" height="15" fill="rgb(238,111,54)"/><text x="1067.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.19%)</title><rect x="1066" y="420" width="2" height="15" fill="rgb(234,10,45)"/><text x="1069.00" y="430.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:564) (1 samples, 0.19%)</title><rect x="1066" y="436" width="2" height="15" fill="rgb(250,141,0)"/><text x="1069.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="1068" y="372" width="3" height="15" fill="rgb(248,199,22)"/><text x="1071.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.19%)</title><rect x="1068" y="388" width="3" height="15" fill="rgb(250,100,36)"/><text x="1071.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (14 samples, 2.61%)</title><rect x="1042" y="324" width="31" height="15" fill="rgb(214,132,14)"/><text x="1045.00" y="334.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (7 samples, 1.31%)</title><rect x="1057" y="340" width="16" height="15" fill="rgb(223,56,27)"/><text x="1060.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.12%)</title><rect x="1060" y="356" width="13" height="15" fill="rgb(216,101,37)"/><text x="1063.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="1071" y="372" width="2" height="15" fill="rgb(212,123,20)"/><text x="1074.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="1071" y="388" width="2" height="15" fill="rgb(219,26,48)"/><text x="1074.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="1071" y="404" width="2" height="15" fill="rgb(246,134,18)"/><text x="1074.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="1071" y="420" width="2" height="15" fill="rgb(244,71,38)"/><text x="1074.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="1071" y="436" width="2" height="15" fill="rgb(206,104,39)"/><text x="1074.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="1077" y="388" width="2" height="15" fill="rgb(227,199,12)"/><text x="1080.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1929) (1 samples, 0.19%)</title><rect x="1077" y="404" width="2" height="15" fill="rgb(248,168,45)"/><text x="1080.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.19%)</title><rect x="1077" y="420" width="2" height="15" fill="rgb(222,141,0)"/><text x="1080.00" y="430.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.19%)</title><rect x="1077" y="436" width="2" height="15" fill="rgb(235,23,49)"/><text x="1080.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="1079" y="388" width="3" height="15" fill="rgb(214,25,49)"/><text x="1082.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.19%)</title><rect x="1079" y="404" width="3" height="15" fill="rgb(220,212,7)"/><text x="1082.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.56%)</title><rect x="1077" y="372" width="7" height="15" fill="rgb(236,220,30)"/><text x="1080.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.19%)</title><rect x="1082" y="388" width="2" height="15" fill="rgb(221,223,25)"/><text x="1085.00" y="398.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.19%)</title><rect x="1082" y="404" width="2" height="15" fill="rgb(241,79,14)"/><text x="1085.00" y="414.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.19%)</title><rect x="1082" y="420" width="2" height="15" fill="rgb(215,216,30)"/><text x="1085.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="1084" y="372" width="2" height="15" fill="rgb(220,50,31)"/><text x="1087.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="1084" y="388" width="2" height="15" fill="rgb(242,226,12)"/><text x="1087.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.19%)</title><rect x="1084" y="404" width="2" height="15" fill="rgb(219,42,11)"/><text x="1087.00" y="414.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.19%)</title><rect x="1084" y="420" width="2" height="15" fill="rgb(210,64,32)"/><text x="1087.00" y="430.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.19%)</title><rect x="1084" y="436" width="2" height="15" fill="rgb(210,196,3)"/><text x="1087.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="1086" y="372" width="2" height="15" fill="rgb(215,16,39)"/><text x="1089.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="1088" y="420" width="2" height="15" fill="rgb(227,77,42)"/><text x="1091.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1088" y="436" width="2" height="15" fill="rgb(224,26,47)"/><text x="1091.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="1090" y="420" width="3" height="15" fill="rgb(208,189,22)"/><text x="1093.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="1090" y="436" width="3" height="15" fill="rgb(242,66,12)"/><text x="1093.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.19%)</title><rect x="1090" y="452" width="3" height="15" fill="rgb(244,205,23)"/><text x="1093.00" y="462.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.19%)</title><rect x="1090" y="468" width="3" height="15" fill="rgb(218,84,53)"/><text x="1093.00" y="478.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.19%)</title><rect x="1090" y="484" width="3" height="15" fill="rgb(235,123,48)"/><text x="1093.00" y="494.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.56%)</title><rect x="1088" y="404" width="7" height="15" fill="rgb(235,157,51)"/><text x="1091.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="1093" y="420" width="2" height="15" fill="rgb(210,133,15)"/><text x="1096.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.19%)</title><rect x="1093" y="436" width="2" height="15" fill="rgb(251,187,5)"/><text x="1096.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="1095" y="404" width="2" height="15" fill="rgb(238,18,43)"/><text x="1098.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="1095" y="420" width="2" height="15" fill="rgb(236,199,35)"/><text x="1098.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="1095" y="436" width="2" height="15" fill="rgb(205,186,18)"/><text x="1098.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (1 samples, 0.19%)</title><rect x="1095" y="452" width="2" height="15" fill="rgb(210,42,12)"/><text x="1098.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.19%)</title><rect x="1095" y="468" width="2" height="15" fill="rgb(252,205,26)"/><text x="1098.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="1097" y="404" width="2" height="15" fill="rgb(247,68,13)"/><text x="1100.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="1097" y="420" width="2" height="15" fill="rgb(210,161,16)"/><text x="1100.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1949) (1 samples, 0.19%)</title><rect x="1097" y="436" width="2" height="15" fill="rgb(221,190,2)"/><text x="1100.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (13 samples, 2.43%)</title><rect x="1073" y="324" width="28" height="15" fill="rgb(207,23,24)"/><text x="1076.00" y="334.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (12 samples, 2.24%)</title><rect x="1075" y="340" width="26" height="15" fill="rgb(211,222,51)"/><text x="1078.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.05%)</title><rect x="1077" y="356" width="24" height="15" fill="rgb(250,182,24)"/><text x="1080.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.12%)</title><rect x="1088" y="372" width="13" height="15" fill="rgb(234,117,20)"/><text x="1091.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.12%)</title><rect x="1088" y="388" width="13" height="15" fill="rgb(242,171,43)"/><text x="1091.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="1099" y="404" width="2" height="15" fill="rgb(209,19,17)"/><text x="1102.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="1099" y="420" width="2" height="15" fill="rgb(241,173,49)"/><text x="1102.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (141 samples, 26.31%)</title><rect x="793" y="180" width="311" height="15" fill="rgb(206,13,41)"/><text x="796.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (45 samples, 8.40%)</title><rect x="1005" y="196" width="99" height="15" fill="rgb(220,228,28)"/><text x="1008.00" y="206.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (43 samples, 8.02%)</title><rect x="1009" y="212" width="95" height="15" fill="rgb(250,216,42)"/><text x="1012.00" y="222.50">_run (mlpro..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (41 samples, 7.65%)</title><rect x="1013" y="228" width="91" height="15" fill="rgb(250,2,20)"/><text x="1016.00" y="238.50">clip (&lt;__a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (40 samples, 7.46%)</title><rect x="1016" y="244" width="88" height="15" fill="rgb(242,206,16)"/><text x="1019.00" y="254.50">array_impl..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (40 samples, 7.46%)</title><rect x="1016" y="260" width="88" height="15" fill="rgb(221,42,40)"/><text x="1019.00" y="270.50">clip (nump..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (38 samples, 7.09%)</title><rect x="1020" y="276" width="84" height="15" fill="rgb(228,35,29)"/><text x="1023.00" y="286.50">_wrapfunc..</text></g><g><title>array_clip (methods.c:2381) (38 samples, 7.09%)</title><rect x="1020" y="292" width="84" height="15" fill="rgb(239,101,7)"/><text x="1023.00" y="302.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c:108) (38 samples, 7.09%)</title><rect x="1020" y="308" width="84" height="15" fill="rgb(243,160,5)"/><text x="1023.00" y="318.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py:98) (1 samples, 0.19%)</title><rect x="1101" y="324" width="3" height="15" fill="rgb(251,15,25)"/><text x="1104.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.37%)</title><rect x="1104" y="180" width="4" height="15" fill="rgb(237,162,18)"/><text x="1107.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.56%)</title><rect x="1108" y="180" width="7" height="15" fill="rgb(209,219,25)"/><text x="1111.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.37%)</title><rect x="1115" y="180" width="4" height="15" fill="rgb(239,55,35)"/><text x="1118.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (10 samples, 1.87%)</title><rect x="1119" y="180" width="22" height="15" fill="rgb(206,147,52)"/><text x="1122.00" y="190.50">r..</text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:45) (231 samples, 43.10%)</title><rect x="644" y="52" width="508" height="15" fill="rgb(235,201,15)"/><text x="647.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:4..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:44) (231 samples, 43.10%)</title><rect x="644" y="68" width="508" height="15" fill="rgb(207,143,33)"/><text x="647.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_...</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:29) (231 samples, 43.10%)</title><rect x="644" y="84" width="508" height="15" fill="rgb(240,79,53)"/><text x="647.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:23) (177 samples, 33.02%)</title><rect x="762" y="100" width="390" height="15" fill="rgb(225,150,6)"/><text x="765.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (177 samples, 33.02%)</title><rect x="762" y="116" width="390" height="15" fill="rgb(240,211,22)"/><text x="765.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (177 samples, 33.02%)</title><rect x="762" y="132" width="390" height="15" fill="rgb(254,89,3)"/><text x="765.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (177 samples, 33.02%)</title><rect x="762" y="148" width="390" height="15" fill="rgb(225,133,43)"/><text x="765.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (177 samples, 33.02%)</title><rect x="762" y="164" width="390" height="15" fill="rgb(249,26,18)"/><text x="765.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (5 samples, 0.93%)</title><rect x="1141" y="180" width="11" height="15" fill="rgb(223,24,32)"/><text x="1144.00" y="190.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:61) (1 samples, 0.19%)</title><rect x="1152" y="212" width="2" height="15" fill="rgb(227,227,25)"/><text x="1155.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.19%)</title><rect x="1152" y="228" width="2" height="15" fill="rgb(233,121,45)"/><text x="1155.00" y="238.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:28) (2 samples, 0.37%)</title><rect x="1152" y="84" width="4" height="15" fill="rgb(226,175,28)"/><text x="1155.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.37%)</title><rect x="1152" y="100" width="4" height="15" fill="rgb(232,101,8)"/><text x="1155.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.37%)</title><rect x="1152" y="116" width="4" height="15" fill="rgb(231,191,43)"/><text x="1155.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.37%)</title><rect x="1152" y="132" width="4" height="15" fill="rgb(227,142,47)"/><text x="1155.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.37%)</title><rect x="1152" y="148" width="4" height="15" fill="rgb(211,82,39)"/><text x="1155.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.37%)</title><rect x="1152" y="164" width="4" height="15" fill="rgb(216,170,24)"/><text x="1155.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.37%)</title><rect x="1152" y="180" width="4" height="15" fill="rgb(207,111,3)"/><text x="1155.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.37%)</title><rect x="1152" y="196" width="4" height="15" fill="rgb(207,49,33)"/><text x="1155.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.19%)</title><rect x="1154" y="212" width="2" height="15" fill="rgb(225,224,22)"/><text x="1157.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.19%)</title><rect x="1154" y="228" width="2" height="15" fill="rgb(231,86,15)"/><text x="1157.00" y="238.50"></text></g><g><title>0x7fbd846dcff9 (?) (1 samples, 0.19%)</title><rect x="1156" y="212" width="3" height="15" fill="rgb(225,54,6)"/><text x="1159.00" y="222.50"></text></g><g><title>0x7fbd846d7ef6 (?) (1 samples, 0.19%)</title><rect x="1156" y="228" width="3" height="15" fill="rgb(247,152,25)"/><text x="1159.00" y="238.50"></text></g><g><title>0x7fbd846cc962 (?) (1 samples, 0.19%)</title><rect x="1156" y="244" width="3" height="15" fill="rgb(231,191,3)"/><text x="1159.00" y="254.50"></text></g><g><title>0x7fbd847007a7 (?) (1 samples, 0.19%)</title><rect x="1156" y="260" width="3" height="15" fill="rgb(231,165,54)"/><text x="1159.00" y="270.50"></text></g><g><title>0x7fbd84700379 (?) (1 samples, 0.19%)</title><rect x="1156" y="276" width="3" height="15" fill="rgb(205,33,41)"/><text x="1159.00" y="286.50"></text></g><g><title>0x7fbd84b5e8b8 (?) (1 samples, 0.19%)</title><rect x="1156" y="292" width="3" height="15" fill="rgb(218,152,8)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fbd84b5cc7f (?) (1 samples, 0.19%)</title><rect x="1156" y="308" width="3" height="15" fill="rgb(234,72,48)"/><text x="1159.00" y="318.50"></text></g><g><title>0x7fbd84b6f99c (?) (1 samples, 0.19%)</title><rect x="1156" y="324" width="3" height="15" fill="rgb(212,187,15)"/><text x="1159.00" y="334.50"></text></g><g><title>0x7fbd847c6413 (?) (1 samples, 0.19%)</title><rect x="1156" y="340" width="3" height="15" fill="rgb(250,51,40)"/><text x="1159.00" y="350.50"></text></g><g><title>0x7fbd847c5bbf (?) (1 samples, 0.19%)</title><rect x="1156" y="356" width="3" height="15" fill="rgb(233,107,22)"/><text x="1159.00" y="366.50"></text></g><g><title>0x7fbd847bb36a (?) (1 samples, 0.19%)</title><rect x="1156" y="372" width="3" height="15" fill="rgb(246,172,13)"/><text x="1159.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1159" y="340" width="2" height="15" fill="rgb(213,53,48)"/><text x="1162.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1161" y="340" width="2" height="15" fill="rgb(246,112,36)"/><text x="1164.00" y="350.50"></text></g><g><title>0x7fbdc4ba09a4 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1161" y="356" width="2" height="15" fill="rgb(248,206,46)"/><text x="1164.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="340" width="2" height="15" fill="rgb(219,1,43)"/><text x="1166.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="356" width="2" height="15" fill="rgb(217,95,49)"/><text x="1166.00" y="366.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1165" y="340" width="2" height="15" fill="rgb(244,202,32)"/><text x="1168.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1165" y="356" width="2" height="15" fill="rgb(209,25,49)"/><text x="1168.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1165" y="372" width="2" height="15" fill="rgb(251,36,52)"/><text x="1168.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1165" y="388" width="2" height="15" fill="rgb(240,104,53)"/><text x="1168.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:18) (6 samples, 1.12%)</title><rect x="1156" y="100" width="14" height="15" fill="rgb(244,158,6)"/><text x="1159.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 1.12%)</title><rect x="1156" y="116" width="14" height="15" fill="rgb(220,182,42)"/><text x="1159.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (6 samples, 1.12%)</title><rect x="1156" y="132" width="14" height="15" fill="rgb(222,75,14)"/><text x="1159.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (6 samples, 1.12%)</title><rect x="1156" y="148" width="14" height="15" fill="rgb(246,33,2)"/><text x="1159.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (6 samples, 1.12%)</title><rect x="1156" y="164" width="14" height="15" fill="rgb(221,42,45)"/><text x="1159.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (6 samples, 1.12%)</title><rect x="1156" y="180" width="14" height="15" fill="rgb(254,151,23)"/><text x="1159.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (6 samples, 1.12%)</title><rect x="1156" y="196" width="14" height="15" fill="rgb(234,160,20)"/><text x="1159.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="212" width="11" height="15" fill="rgb(223,2,24)"/><text x="1162.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="228" width="11" height="15" fill="rgb(233,122,0)"/><text x="1162.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="244" width="11" height="15" fill="rgb(212,55,1)"/><text x="1162.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="260" width="11" height="15" fill="rgb(227,141,25)"/><text x="1162.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="276" width="11" height="15" fill="rgb(234,30,33)"/><text x="1162.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="292" width="11" height="15" fill="rgb(232,131,23)"/><text x="1162.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="308" width="11" height="15" fill="rgb(241,138,12)"/><text x="1162.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="1159" y="324" width="11" height="15" fill="rgb(229,213,29)"/><text x="1162.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1167" y="340" width="3" height="15" fill="rgb(245,32,24)"/><text x="1170.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1167" y="356" width="3" height="15" fill="rgb(221,147,49)"/><text x="1170.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1167" y="372" width="3" height="15" fill="rgb(224,160,53)"/><text x="1170.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1167" y="388" width="3" height="15" fill="rgb(231,119,51)"/><text x="1170.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1167" y="404" width="3" height="15" fill="rgb(213,174,42)"/><text x="1170.00" y="414.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1167" y="420" width="3" height="15" fill="rgb(211,25,35)"/><text x="1170.00" y="430.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1170" y="292" width="2" height="15" fill="rgb(210,32,37)"/><text x="1173.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1170" y="308" width="2" height="15" fill="rgb(244,7,38)"/><text x="1173.00" y="318.50"></text></g><g><title>0x7fbdc4a1ea01 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1170" y="324" width="2" height="15" fill="rgb(212,229,44)"/><text x="1173.00" y="334.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="340" width="2" height="15" fill="rgb(223,90,17)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="356" width="2" height="15" fill="rgb(216,50,50)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="372" width="2" height="15" fill="rgb(236,37,25)"/><text x="1175.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="388" width="2" height="15" fill="rgb(209,206,48)"/><text x="1175.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="404" width="2" height="15" fill="rgb(232,59,25)"/><text x="1175.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="420" width="2" height="15" fill="rgb(241,8,13)"/><text x="1175.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="436" width="2" height="15" fill="rgb(212,145,41)"/><text x="1175.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="452" width="2" height="15" fill="rgb(254,225,46)"/><text x="1175.00" y="462.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="468" width="2" height="15" fill="rgb(237,78,29)"/><text x="1175.00" y="478.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="372" width="2" height="15" fill="rgb(254,171,35)"/><text x="1177.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="388" width="2" height="15" fill="rgb(222,220,40)"/><text x="1177.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="404" width="2" height="15" fill="rgb(239,4,54)"/><text x="1177.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="420" width="2" height="15" fill="rgb(206,51,31)"/><text x="1177.00" y="430.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1174" y="340" width="4" height="15" fill="rgb(212,77,21)"/><text x="1177.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1174" y="356" width="4" height="15" fill="rgb(240,185,28)"/><text x="1177.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="372" width="2" height="15" fill="rgb(219,44,49)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="388" width="2" height="15" fill="rgb(250,160,54)"/><text x="1179.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastIterator::Append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="404" width="2" height="15" fill="rgb(237,175,13)"/><text x="1179.00" y="414.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1178" y="340" width="5" height="15" fill="rgb(230,45,53)"/><text x="1181.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1178" y="356" width="5" height="15" fill="rgb(214,193,50)"/><text x="1181.00" y="366.50"></text></g><g><title>0x7fbdc4a1e991 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1181" y="372" width="2" height="15" fill="rgb(254,125,29)"/><text x="1184.00" y="382.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="340" width="2" height="15" fill="rgb(252,209,21)"/><text x="1186.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="356" width="2" height="15" fill="rgb(252,178,3)"/><text x="1186.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="372" width="2" height="15" fill="rgb(254,133,54)"/><text x="1186.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="388" width="2" height="15" fill="rgb(240,218,21)"/><text x="1186.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="404" width="2" height="15" fill="rgb(213,175,2)"/><text x="1186.00" y="414.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="340" width="2" height="15" fill="rgb(253,93,42)"/><text x="1188.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="356" width="2" height="15" fill="rgb(231,36,36)"/><text x="1188.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="372" width="2" height="15" fill="rgb(248,26,24)"/><text x="1188.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="388" width="2" height="15" fill="rgb(239,39,41)"/><text x="1188.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="404" width="2" height="15" fill="rgb(206,85,34)"/><text x="1188.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="420" width="2" height="15" fill="rgb(241,112,50)"/><text x="1188.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="436" width="2" height="15" fill="rgb(252,12,46)"/><text x="1188.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="452" width="2" height="15" fill="rgb(222,107,37)"/><text x="1188.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="468" width="2" height="15" fill="rgb(208,53,23)"/><text x="1188.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="484" width="2" height="15" fill="rgb(219,33,29)"/><text x="1188.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="500" width="2" height="15" fill="rgb(250,152,2)"/><text x="1188.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="516" width="2" height="15" fill="rgb(232,20,21)"/><text x="1188.00" y="526.50"></text></g><g><title>0x7fbdc4a3ed5f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1185" y="532" width="2" height="15" fill="rgb(245,174,28)"/><text x="1188.00" y="542.50"></text></g><g><title>all (536 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(208,43,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:52) (17 samples, 3.17%)</title><rect x="1152" y="52" width="38" height="15" fill="rgb(239,90,22)"/><text x="1155.00" y="62.50">&lt;mo..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:51) (17 samples, 3.17%)</title><rect x="1152" y="68" width="38" height="15" fill="rgb(205,192,47)"/><text x="1155.00" y="78.50">pro..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:29) (15 samples, 2.80%)</title><rect x="1156" y="84" width="34" height="15" fill="rgb(215,9,19)"/><text x="1159.00" y="94.50">se..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py:23) (9 samples, 1.68%)</title><rect x="1170" y="100" width="20" height="15" fill="rgb(238,93,11)"/><text x="1173.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (9 samples, 1.68%)</title><rect x="1170" y="116" width="20" height="15" fill="rgb(238,1,16)"/><text x="1173.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (9 samples, 1.68%)</title><rect x="1170" y="132" width="20" height="15" fill="rgb(235,55,48)"/><text x="1173.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (9 samples, 1.68%)</title><rect x="1170" y="148" width="20" height="15" fill="rgb(238,44,37)"/><text x="1173.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (9 samples, 1.68%)</title><rect x="1170" y="164" width="20" height="15" fill="rgb(227,171,26)"/><text x="1173.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (9 samples, 1.68%)</title><rect x="1170" y="180" width="20" height="15" fill="rgb(246,229,10)"/><text x="1173.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (9 samples, 1.68%)</title><rect x="1170" y="196" width="20" height="15" fill="rgb(251,177,28)"/><text x="1173.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.68%)</title><rect x="1170" y="212" width="20" height="15" fill="rgb(235,85,22)"/><text x="1173.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.68%)</title><rect x="1170" y="228" width="20" height="15" fill="rgb(230,154,45)"/><text x="1173.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.68%)</title><rect x="1170" y="244" width="20" height="15" fill="rgb(247,138,36)"/><text x="1173.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.68%)</title><rect x="1170" y="260" width="20" height="15" fill="rgb(241,125,28)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.68%)</title><rect x="1170" y="276" width="20" height="15" fill="rgb(224,126,28)"/><text x="1173.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="292" width="18" height="15" fill="rgb(249,105,44)"/><text x="1175.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="308" width="18" height="15" fill="rgb(239,216,32)"/><text x="1175.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="324" width="18" height="15" fill="rgb(216,3,36)"/><text x="1175.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(231,37,15)"/><text x="1190.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(252,162,22)"/><text x="1190.00" y="366.50"></text></g></g></svg>