<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2422" onload="init(evt)" viewBox="0 0 1200 2422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2422" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2405.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2405.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:31) (1 samples, 0.11%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(223,21,22)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:11) (1 samples, 0.11%)</title><rect x="10" y="68" width="1" height="15" fill="rgb(237,162,45)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:39) (1 samples, 0.11%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(235,164,36)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.11%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(219,175,47)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (1 samples, 0.11%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(214,106,0)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (1 samples, 0.11%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(212,173,28)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (1 samples, 0.11%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(250,31,34)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.11%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(205,79,14)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.11%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(249,185,34)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:149) (1 samples, 0.11%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(231,116,45)"/><text x="13.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.11%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(253,62,34)"/><text x="13.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(215,172,1)"/><text x="14.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(241,47,41)"/><text x="14.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(253,15,36)"/><text x="14.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(234,134,24)"/><text x="14.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(217,95,14)"/><text x="14.00" y="286.50"></text></g><g><title>0x7fd725edbb16 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="11" y="292" width="1" height="15" fill="rgb(252,0,34)"/><text x="14.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="15" y="228" width="1" height="15" fill="rgb(218,146,37)"/><text x="18.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="16" y="244" width="1" height="15" fill="rgb(254,222,17)"/><text x="19.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.22%)</title><rect x="19" y="260" width="2" height="15" fill="rgb(240,186,12)"/><text x="22.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (8 samples, 0.89%)</title><rect x="12" y="212" width="11" height="15" fill="rgb(223,66,37)"/><text x="15.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.56%)</title><rect x="16" y="228" width="7" height="15" fill="rgb(214,223,19)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.45%)</title><rect x="17" y="244" width="6" height="15" fill="rgb(239,42,53)"/><text x="20.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(227,171,13)"/><text x="24.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="24" y="244" width="1" height="15" fill="rgb(209,48,32)"/><text x="27.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.11%)</title><rect x="24" y="260" width="1" height="15" fill="rgb(207,203,23)"/><text x="27.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.11%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(245,128,8)"/><text x="28.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.11%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(210,176,11)"/><text x="30.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.22%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(216,19,11)"/><text x="30.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (2 samples, 0.22%)</title><rect x="27" y="260" width="2" height="15" fill="rgb(251,199,52)"/><text x="30.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.11%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(245,132,51)"/><text x="31.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="29" y="244" width="2" height="15" fill="rgb(213,180,22)"/><text x="32.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="29" y="260" width="2" height="15" fill="rgb(211,102,29)"/><text x="32.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="29" y="276" width="2" height="15" fill="rgb(241,78,38)"/><text x="32.00" y="286.50"></text></g><g><title>0x7fd725ef1757 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="29" y="292" width="2" height="15" fill="rgb(214,169,52)"/><text x="32.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 0.56%)</title><rect x="31" y="244" width="6" height="15" fill="rgb(223,228,32)"/><text x="34.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.45%)</title><rect x="32" y="260" width="5" height="15" fill="rgb(216,53,53)"/><text x="35.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.22%)</title><rect x="35" y="276" width="2" height="15" fill="rgb(225,194,11)"/><text x="38.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.34%)</title><rect x="37" y="260" width="4" height="15" fill="rgb(236,213,11)"/><text x="40.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="40" y="276" width="1" height="15" fill="rgb(252,217,52)"/><text x="43.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (18 samples, 2.01%)</title><rect x="23" y="212" width="23" height="15" fill="rgb(210,208,1)"/><text x="26.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (18 samples, 2.01%)</title><rect x="23" y="228" width="23" height="15" fill="rgb(233,177,28)"/><text x="26.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 0.78%)</title><rect x="37" y="244" width="9" height="15" fill="rgb(248,191,18)"/><text x="40.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.45%)</title><rect x="41" y="260" width="5" height="15" fill="rgb(217,219,39)"/><text x="44.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.34%)</title><rect x="42" y="276" width="4" height="15" fill="rgb(221,223,5)"/><text x="45.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.11%)</title><rect x="45" y="292" width="1" height="15" fill="rgb(243,128,28)"/><text x="48.00" y="302.50"></text></g><g><title>0x7fd6ff92d4a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="46" y="276" width="2" height="15" fill="rgb(230,183,24)"/><text x="49.00" y="286.50"></text></g><g><title>0x7fd6ff92d92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="276" width="1" height="15" fill="rgb(246,11,43)"/><text x="51.00" y="286.50"></text></g><g><title>0x7fd6ff9029af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="292" width="1" height="15" fill="rgb(248,29,17)"/><text x="51.00" y="302.50"></text></g><g><title>0x7fd6ff8f98e0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="308" width="1" height="15" fill="rgb(210,128,16)"/><text x="51.00" y="318.50"></text></g><g><title>0x7fd6ff91efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="46" y="244" width="4" height="15" fill="rgb(251,116,48)"/><text x="49.00" y="254.50"></text></g><g><title>0x7fd6ff92e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="46" y="260" width="4" height="15" fill="rgb(224,2,11)"/><text x="49.00" y="270.50"></text></g><g><title>0x7fd6ff92dc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="49" y="276" width="1" height="15" fill="rgb(235,146,1)"/><text x="52.00" y="286.50"></text></g><g><title>0x7fd6ff905529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="49" y="292" width="1" height="15" fill="rgb(220,157,42)"/><text x="52.00" y="302.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.11%)</title><rect x="50" y="260" width="2" height="15" fill="rgb(253,46,33)"/><text x="53.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.11%)</title><rect x="50" y="276" width="2" height="15" fill="rgb(247,0,35)"/><text x="53.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.11%)</title><rect x="52" y="276" width="1" height="15" fill="rgb(212,224,47)"/><text x="55.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.11%)</title><rect x="52" y="292" width="1" height="15" fill="rgb(232,180,33)"/><text x="55.00" y="302.50"></text></g><g><title>0x7fd6ff91f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="50" y="244" width="4" height="15" fill="rgb(211,122,25)"/><text x="53.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.22%)</title><rect x="52" y="260" width="2" height="15" fill="rgb(234,18,43)"/><text x="55.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.11%)</title><rect x="53" y="276" width="1" height="15" fill="rgb(229,129,30)"/><text x="56.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="53" y="292" width="1" height="15" fill="rgb(238,194,3)"/><text x="56.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="53" y="308" width="1" height="15" fill="rgb(248,133,30)"/><text x="56.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="53" y="324" width="1" height="15" fill="rgb(219,137,35)"/><text x="56.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:142) (1 samples, 0.11%)</title><rect x="53" y="340" width="1" height="15" fill="rgb(238,47,4)"/><text x="56.00" y="350.50"></text></g><g><title>0x7fd6ff91f13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(212,168,12)"/><text x="57.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="54" y="260" width="2" height="15" fill="rgb(216,195,51)"/><text x="57.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="54" y="276" width="2" height="15" fill="rgb(238,123,42)"/><text x="57.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="54" y="292" width="2" height="15" fill="rgb(248,25,23)"/><text x="57.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (8 samples, 0.89%)</title><rect x="46" y="212" width="11" height="15" fill="rgb(237,194,38)"/><text x="49.00" y="222.50"></text></g><g><title>0x7fd6ff91fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.89%)</title><rect x="46" y="228" width="11" height="15" fill="rgb(224,202,41)"/><text x="49.00" y="238.50"></text></g><g><title>0x7fd6ff91f328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="56" y="244" width="1" height="15" fill="rgb(221,5,39)"/><text x="59.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="56" y="260" width="1" height="15" fill="rgb(237,13,44)"/><text x="59.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="56" y="276" width="1" height="15" fill="rgb(217,188,21)"/><text x="59.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="56" y="292" width="1" height="15" fill="rgb(220,59,36)"/><text x="59.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="56" y="308" width="1" height="15" fill="rgb(215,62,23)"/><text x="59.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.11%)</title><rect x="56" y="324" width="1" height="15" fill="rgb(252,169,27)"/><text x="59.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.11%)</title><rect x="56" y="340" width="1" height="15" fill="rgb(243,192,24)"/><text x="59.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.11%)</title><rect x="56" y="356" width="1" height="15" fill="rgb(223,220,35)"/><text x="59.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="57" y="324" width="1" height="15" fill="rgb(254,224,19)"/><text x="60.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="57" y="340" width="1" height="15" fill="rgb(244,100,25)"/><text x="60.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.11%)</title><rect x="57" y="356" width="1" height="15" fill="rgb(205,175,51)"/><text x="60.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="57" y="372" width="1" height="15" fill="rgb(252,9,11)"/><text x="60.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="58" y="340" width="2" height="15" fill="rgb(243,51,48)"/><text x="61.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="61" y="356" width="3" height="15" fill="rgb(242,120,35)"/><text x="64.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="62" y="372" width="2" height="15" fill="rgb(243,4,0)"/><text x="65.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="64" y="356" width="1" height="15" fill="rgb(241,214,27)"/><text x="67.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="65" y="356" width="1" height="15" fill="rgb(211,196,17)"/><text x="68.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 0.89%)</title><rect x="58" y="324" width="11" height="15" fill="rgb(234,64,42)"/><text x="61.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.78%)</title><rect x="60" y="340" width="9" height="15" fill="rgb(224,173,43)"/><text x="63.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (2 samples, 0.22%)</title><rect x="66" y="356" width="3" height="15" fill="rgb(240,29,3)"/><text x="69.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (10 samples, 1.12%)</title><rect x="57" y="212" width="13" height="15" fill="rgb(229,57,29)"/><text x="60.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 1.12%)</title><rect x="57" y="228" width="13" height="15" fill="rgb(208,204,26)"/><text x="60.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.12%)</title><rect x="57" y="244" width="13" height="15" fill="rgb(248,38,7)"/><text x="60.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.12%)</title><rect x="57" y="260" width="13" height="15" fill="rgb(210,160,11)"/><text x="60.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.12%)</title><rect x="57" y="276" width="13" height="15" fill="rgb(209,171,0)"/><text x="60.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.12%)</title><rect x="57" y="292" width="13" height="15" fill="rgb(235,109,36)"/><text x="60.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.12%)</title><rect x="57" y="308" width="13" height="15" fill="rgb(227,84,50)"/><text x="60.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.11%)</title><rect x="69" y="324" width="1" height="15" fill="rgb(248,112,0)"/><text x="72.00" y="334.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c:1060) (1 samples, 0.11%)</title><rect x="69" y="340" width="1" height="15" fill="rgb(240,196,32)"/><text x="72.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.11%)</title><rect x="71" y="228" width="2" height="15" fill="rgb(228,95,54)"/><text x="74.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.11%)</title><rect x="71" y="244" width="2" height="15" fill="rgb(246,38,46)"/><text x="74.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.11%)</title><rect x="73" y="228" width="1" height="15" fill="rgb(207,89,9)"/><text x="76.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.11%)</title><rect x="73" y="244" width="1" height="15" fill="rgb(238,211,5)"/><text x="76.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.11%)</title><rect x="73" y="260" width="1" height="15" fill="rgb(212,108,12)"/><text x="76.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.11%)</title><rect x="73" y="276" width="1" height="15" fill="rgb(239,156,52)"/><text x="76.00" y="286.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="73" y="292" width="1" height="15" fill="rgb(254,118,36)"/><text x="76.00" y="302.50"></text></g><g><title>0x7fd725efbd50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="73" y="308" width="1" height="15" fill="rgb(243,112,36)"/><text x="76.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (4 samples, 0.45%)</title><rect x="70" y="212" width="5" height="15" fill="rgb(231,168,27)"/><text x="73.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.11%)</title><rect x="74" y="228" width="1" height="15" fill="rgb(207,216,33)"/><text x="77.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="74" y="244" width="1" height="15" fill="rgb(211,113,28)"/><text x="77.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="74" y="260" width="1" height="15" fill="rgb(228,60,52)"/><text x="77.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="74" y="276" width="1" height="15" fill="rgb(248,139,26)"/><text x="77.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="74" y="292" width="1" height="15" fill="rgb(211,155,19)"/><text x="77.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.11%)</title><rect x="74" y="308" width="1" height="15" fill="rgb(236,56,18)"/><text x="77.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (1 samples, 0.11%)</title><rect x="74" y="324" width="1" height="15" fill="rgb(252,190,14)"/><text x="77.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:985) (1 samples, 0.11%)</title><rect x="74" y="340" width="1" height="15" fill="rgb(237,49,30)"/><text x="77.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:794) (1 samples, 0.11%)</title><rect x="74" y="356" width="1" height="15" fill="rgb(249,100,12)"/><text x="77.00" y="366.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h:931) (1 samples, 0.11%)</title><rect x="74" y="372" width="1" height="15" fill="rgb(245,159,54)"/><text x="77.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="75" y="276" width="2" height="15" fill="rgb(250,173,8)"/><text x="78.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="75" y="292" width="2" height="15" fill="rgb(243,57,7)"/><text x="78.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="75" y="308" width="2" height="15" fill="rgb(239,133,19)"/><text x="78.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="75" y="324" width="2" height="15" fill="rgb(226,37,38)"/><text x="78.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="75" y="340" width="2" height="15" fill="rgb(242,4,45)"/><text x="78.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (51 samples, 5.70%)</title><rect x="11" y="196" width="67" height="15" fill="rgb(243,187,37)"/><text x="14.00" y="206.50">_samme_..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (2 samples, 0.22%)</title><rect x="75" y="212" width="3" height="15" fill="rgb(211,84,25)"/><text x="78.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="75" y="228" width="3" height="15" fill="rgb(208,229,46)"/><text x="78.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="75" y="244" width="3" height="15" fill="rgb(219,214,34)"/><text x="78.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.22%)</title><rect x="75" y="260" width="3" height="15" fill="rgb(240,173,3)"/><text x="78.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="77" y="276" width="1" height="15" fill="rgb(250,164,4)"/><text x="80.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="77" y="292" width="1" height="15" fill="rgb(240,74,48)"/><text x="80.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="77" y="308" width="1" height="15" fill="rgb(221,210,16)"/><text x="80.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="77" y="324" width="1" height="15" fill="rgb(253,4,15)"/><text x="80.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.11%)</title><rect x="77" y="340" width="1" height="15" fill="rgb(209,116,39)"/><text x="80.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="81" y="212" width="1" height="15" fill="rgb(243,118,19)"/><text x="84.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="82" y="212" width="1" height="15" fill="rgb(244,79,1)"/><text x="85.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="83" y="228" width="2" height="15" fill="rgb(210,82,32)"/><text x="86.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:77) (1 samples, 0.11%)</title><rect x="83" y="244" width="2" height="15" fill="rgb(241,149,20)"/><text x="86.00" y="254.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.34%)</title><rect x="86" y="324" width="4" height="15" fill="rgb(219,204,15)"/><text x="89.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.45%)</title><rect x="86" y="308" width="5" height="15" fill="rgb(246,169,25)"/><text x="89.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="90" y="324" width="1" height="15" fill="rgb(239,203,25)"/><text x="93.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="90" y="340" width="1" height="15" fill="rgb(228,45,22)"/><text x="93.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2983) (1 samples, 0.11%)</title><rect x="90" y="356" width="1" height="15" fill="rgb(208,49,1)"/><text x="93.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="91" y="372" width="2" height="15" fill="rgb(210,137,32)"/><text x="94.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="91" y="324" width="3" height="15" fill="rgb(211,168,25)"/><text x="94.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="91" y="340" width="3" height="15" fill="rgb(229,118,47)"/><text x="94.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="91" y="356" width="3" height="15" fill="rgb(233,12,18)"/><text x="94.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="93" y="372" width="1" height="15" fill="rgb(231,64,17)"/><text x="96.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="93" y="388" width="1" height="15" fill="rgb(241,201,32)"/><text x="96.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.11%)</title><rect x="93" y="404" width="1" height="15" fill="rgb(250,132,16)"/><text x="96.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (4 samples, 0.45%)</title><rect x="91" y="308" width="6" height="15" fill="rgb(232,141,6)"/><text x="94.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="94" y="324" width="3" height="15" fill="rgb(240,182,28)"/><text x="97.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="95" y="340" width="2" height="15" fill="rgb(249,204,29)"/><text x="98.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.11%)</title><rect x="95" y="356" width="2" height="15" fill="rgb(236,170,15)"/><text x="98.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="99" y="356" width="1" height="15" fill="rgb(208,97,28)"/><text x="102.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.11%)</title><rect x="99" y="372" width="1" height="15" fill="rgb(216,110,11)"/><text x="102.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="100" y="356" width="2" height="15" fill="rgb(248,38,52)"/><text x="103.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.11%)</title><rect x="100" y="372" width="2" height="15" fill="rgb(206,4,52)"/><text x="103.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="102" y="356" width="1" height="15" fill="rgb(252,54,19)"/><text x="105.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.11%)</title><rect x="102" y="372" width="1" height="15" fill="rgb(211,151,41)"/><text x="105.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="103" y="372" width="1" height="15" fill="rgb(239,224,17)"/><text x="106.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.11%)</title><rect x="103" y="388" width="1" height="15" fill="rgb(213,124,42)"/><text x="106.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.11%)</title><rect x="104" y="372" width="2" height="15" fill="rgb(231,1,15)"/><text x="107.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="104" y="388" width="2" height="15" fill="rgb(224,38,13)"/><text x="107.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.11%)</title><rect x="104" y="404" width="2" height="15" fill="rgb(252,11,54)"/><text x="107.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.11%)</title><rect x="104" y="420" width="2" height="15" fill="rgb(218,211,16)"/><text x="107.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="104" y="436" width="2" height="15" fill="rgb(223,117,29)"/><text x="107.00" y="446.50"></text></g><g><title>0x7fd725e937a5 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="104" y="452" width="2" height="15" fill="rgb(254,214,24)"/><text x="107.00" y="462.50"></text></g><g><title>0x7fd725e93760 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="104" y="468" width="2" height="15" fill="rgb(253,30,30)"/><text x="107.00" y="478.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (1 samples, 0.11%)</title><rect x="106" y="404" width="1" height="15" fill="rgb(244,54,32)"/><text x="109.00" y="414.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="106" y="388" width="2" height="15" fill="rgb(248,197,30)"/><text x="109.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (1 samples, 0.11%)</title><rect x="107" y="404" width="1" height="15" fill="rgb(235,29,20)"/><text x="110.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.34%)</title><rect x="106" y="372" width="4" height="15" fill="rgb(226,53,39)"/><text x="109.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.11%)</title><rect x="108" y="388" width="2" height="15" fill="rgb(251,149,4)"/><text x="111.00" y="398.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="108" y="404" width="2" height="15" fill="rgb(205,190,35)"/><text x="111.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (25 samples, 2.79%)</title><rect x="78" y="196" width="33" height="15" fill="rgb(226,43,24)"/><text x="81.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (21 samples, 2.35%)</title><rect x="83" y="212" width="28" height="15" fill="rgb(219,36,8)"/><text x="86.00" y="222.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 2.23%)</title><rect x="85" y="228" width="26" height="15" fill="rgb(237,214,42)"/><text x="88.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (20 samples, 2.23%)</title><rect x="85" y="244" width="26" height="15" fill="rgb(214,102,22)"/><text x="88.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (19 samples, 2.12%)</title><rect x="86" y="260" width="25" height="15" fill="rgb(251,15,50)"/><text x="89.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (19 samples, 2.12%)</title><rect x="86" y="276" width="25" height="15" fill="rgb(217,13,8)"/><text x="89.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 2.12%)</title><rect x="86" y="292" width="25" height="15" fill="rgb(212,11,27)"/><text x="89.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (11 samples, 1.23%)</title><rect x="97" y="308" width="14" height="15" fill="rgb(214,16,22)"/><text x="100.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 1.01%)</title><rect x="99" y="324" width="12" height="15" fill="rgb(235,206,48)"/><text x="102.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="99" y="340" width="12" height="15" fill="rgb(250,135,46)"/><text x="102.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.67%)</title><rect x="103" y="356" width="8" height="15" fill="rgb(240,104,45)"/><text x="106.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.11%)</title><rect x="110" y="372" width="1" height="15" fill="rgb(238,15,27)"/><text x="113.00" y="382.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (3 samples, 0.34%)</title><rect x="112" y="276" width="4" height="15" fill="rgb(252,189,0)"/><text x="115.00" y="286.50"></text></g><g><title>0x7fd7260addee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="116" y="292" width="2" height="15" fill="rgb(239,9,12)"/><text x="119.00" y="302.50"></text></g><g><title>0x7fd7260ade8d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="118" y="292" width="2" height="15" fill="rgb(224,208,45)"/><text x="121.00" y="302.50"></text></g><g><title>0x7fd7260adeee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="120" y="292" width="2" height="15" fill="rgb(209,125,36)"/><text x="123.00" y="302.50"></text></g><g><title>0x7fd7260adfd3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="122" y="292" width="1" height="15" fill="rgb(223,61,1)"/><text x="125.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (10 samples, 1.12%)</title><rect x="111" y="196" width="13" height="15" fill="rgb(218,104,30)"/><text x="114.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="112" y="212" width="12" height="15" fill="rgb(213,188,16)"/><text x="115.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.01%)</title><rect x="112" y="228" width="12" height="15" fill="rgb(209,22,31)"/><text x="115.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (9 samples, 1.01%)</title><rect x="112" y="244" width="12" height="15" fill="rgb(253,218,40)"/><text x="115.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 1.01%)</title><rect x="112" y="260" width="12" height="15" fill="rgb(245,131,16)"/><text x="115.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (6 samples, 0.67%)</title><rect x="116" y="276" width="8" height="15" fill="rgb(233,162,19)"/><text x="119.00" y="286.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.11%)</title><rect x="123" y="292" width="1" height="15" fill="rgb(248,27,25)"/><text x="126.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.11%)</title><rect x="124" y="260" width="2" height="15" fill="rgb(206,126,43)"/><text x="127.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.11%)</title><rect x="124" y="276" width="2" height="15" fill="rgb(222,71,38)"/><text x="127.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.11%)</title><rect x="124" y="292" width="2" height="15" fill="rgb(250,180,24)"/><text x="127.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="124" y="308" width="2" height="15" fill="rgb(218,93,29)"/><text x="127.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.11%)</title><rect x="124" y="324" width="2" height="15" fill="rgb(246,57,30)"/><text x="127.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.11%)</title><rect x="124" y="340" width="2" height="15" fill="rgb(254,15,48)"/><text x="127.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="124" y="228" width="3" height="15" fill="rgb(246,56,41)"/><text x="127.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.22%)</title><rect x="124" y="244" width="3" height="15" fill="rgb(230,178,8)"/><text x="127.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.11%)</title><rect x="126" y="260" width="1" height="15" fill="rgb(252,158,6)"/><text x="129.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.11%)</title><rect x="126" y="276" width="1" height="15" fill="rgb(213,189,43)"/><text x="129.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="126" y="292" width="1" height="15" fill="rgb(250,94,32)"/><text x="129.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.34%)</title><rect x="124" y="212" width="4" height="15" fill="rgb(238,193,53)"/><text x="127.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="127" y="228" width="1" height="15" fill="rgb(221,118,35)"/><text x="130.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="127" y="244" width="1" height="15" fill="rgb(209,183,48)"/><text x="130.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="127" y="260" width="1" height="15" fill="rgb(248,101,5)"/><text x="130.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="127" y="276" width="1" height="15" fill="rgb(233,206,1)"/><text x="130.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1526) (1 samples, 0.11%)</title><rect x="128" y="276" width="1" height="15" fill="rgb(210,56,5)"/><text x="131.00" y="286.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.11%)</title><rect x="128" y="292" width="1" height="15" fill="rgb(231,71,36)"/><text x="131.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="129" y="292" width="2" height="15" fill="rgb(250,10,43)"/><text x="132.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="129" y="308" width="2" height="15" fill="rgb(232,200,12)"/><text x="132.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="129" y="324" width="2" height="15" fill="rgb(206,23,9)"/><text x="132.00" y="334.50"></text></g><g><title>0x7fd725edd700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="129" y="340" width="2" height="15" fill="rgb(234,191,6)"/><text x="132.00" y="350.50"></text></g><g><title>0x7fd725edaab9 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="129" y="356" width="2" height="15" fill="rgb(244,67,40)"/><text x="132.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="131" y="324" width="1" height="15" fill="rgb(236,216,26)"/><text x="134.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.34%)</title><rect x="129" y="276" width="4" height="15" fill="rgb(225,105,37)"/><text x="132.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="131" y="292" width="2" height="15" fill="rgb(252,94,6)"/><text x="134.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="131" y="308" width="2" height="15" fill="rgb(230,209,21)"/><text x="134.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="132" y="324" width="1" height="15" fill="rgb(212,55,35)"/><text x="135.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="132" y="340" width="1" height="15" fill="rgb(244,50,14)"/><text x="135.00" y="350.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (2 samples, 0.22%)</title><rect x="133" y="324" width="3" height="15" fill="rgb(244,106,40)"/><text x="136.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (2 samples, 0.22%)</title><rect x="133" y="340" width="3" height="15" fill="rgb(240,87,5)"/><text x="136.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.78%)</title><rect x="128" y="228" width="9" height="15" fill="rgb(205,110,2)"/><text x="131.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.78%)</title><rect x="128" y="244" width="9" height="15" fill="rgb(218,181,2)"/><text x="131.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.78%)</title><rect x="128" y="260" width="9" height="15" fill="rgb(240,148,54)"/><text x="131.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.34%)</title><rect x="133" y="276" width="4" height="15" fill="rgb(208,17,4)"/><text x="136.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (3 samples, 0.34%)</title><rect x="133" y="292" width="4" height="15" fill="rgb(231,171,32)"/><text x="136.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (3 samples, 0.34%)</title><rect x="133" y="308" width="4" height="15" fill="rgb(217,34,11)"/><text x="136.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="136" y="324" width="1" height="15" fill="rgb(254,99,2)"/><text x="139.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="136" y="340" width="1" height="15" fill="rgb(241,17,23)"/><text x="139.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (8 samples, 0.89%)</title><rect x="128" y="212" width="11" height="15" fill="rgb(244,216,18)"/><text x="131.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.11%)</title><rect x="137" y="228" width="2" height="15" fill="rgb(229,142,24)"/><text x="140.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="137" y="244" width="2" height="15" fill="rgb(242,209,43)"/><text x="140.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="140" y="276" width="1" height="15" fill="rgb(218,217,36)"/><text x="143.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="141" y="292" width="2" height="15" fill="rgb(210,94,4)"/><text x="144.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="141" y="308" width="2" height="15" fill="rgb(248,158,15)"/><text x="144.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="141" y="324" width="2" height="15" fill="rgb(233,225,30)"/><text x="144.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.11%)</title><rect x="141" y="340" width="2" height="15" fill="rgb(222,40,45)"/><text x="144.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="143" y="308" width="1" height="15" fill="rgb(217,167,11)"/><text x="146.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.11%)</title><rect x="143" y="324" width="1" height="15" fill="rgb(206,50,54)"/><text x="146.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.11%)</title><rect x="144" y="340" width="1" height="15" fill="rgb(246,20,5)"/><text x="147.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="144" y="356" width="1" height="15" fill="rgb(212,225,3)"/><text x="147.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.11%)</title><rect x="145" y="340" width="2" height="15" fill="rgb(233,97,21)"/><text x="148.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1874) (1 samples, 0.11%)</title><rect x="145" y="356" width="2" height="15" fill="rgb(241,159,30)"/><text x="148.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (104 samples, 11.62%)</title><rect x="11" y="180" width="137" height="15" fill="rgb(206,8,21)"/><text x="14.00" y="190.50">&lt;genexpr&gt; (sklear..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (18 samples, 2.01%)</title><rect x="124" y="196" width="24" height="15" fill="rgb(250,163,42)"/><text x="127.00" y="206.50">_..</text></g><g><title>array_sum (methods.c:2215) (7 samples, 0.78%)</title><rect x="139" y="212" width="9" height="15" fill="rgb(227,127,1)"/><text x="142.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 0.78%)</title><rect x="139" y="228" width="9" height="15" fill="rgb(212,158,36)"/><text x="142.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 0.78%)</title><rect x="139" y="244" width="9" height="15" fill="rgb(233,121,26)"/><text x="142.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 0.67%)</title><rect x="140" y="260" width="8" height="15" fill="rgb(235,108,24)"/><text x="143.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.56%)</title><rect x="141" y="276" width="7" height="15" fill="rgb(207,223,21)"/><text x="144.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.45%)</title><rect x="143" y="292" width="5" height="15" fill="rgb(235,58,48)"/><text x="146.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.34%)</title><rect x="144" y="308" width="4" height="15" fill="rgb(211,226,29)"/><text x="147.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.34%)</title><rect x="144" y="324" width="4" height="15" fill="rgb(240,62,52)"/><text x="147.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="147" y="340" width="1" height="15" fill="rgb(218,103,39)"/><text x="150.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1723) (1 samples, 0.11%)</title><rect x="149" y="228" width="2" height="15" fill="rgb(217,165,21)"/><text x="152.00" y="238.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (107 samples, 11.96%)</title><rect x="11" y="148" width="141" height="15" fill="rgb(248,82,54)"/><text x="14.00" y="158.50">predict_proba (sk..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (107 samples, 11.96%)</title><rect x="11" y="164" width="141" height="15" fill="rgb(224,170,7)"/><text x="14.00" y="174.50">decision_function..</text></g><g><title>array_add (number.c:330) (3 samples, 0.34%)</title><rect x="148" y="180" width="4" height="15" fill="rgb(215,35,40)"/><text x="151.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="149" y="196" width="3" height="15" fill="rgb(222,228,1)"/><text x="152.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="149" y="212" width="3" height="15" fill="rgb(215,100,52)"/><text x="152.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="151" y="228" width="1" height="15" fill="rgb(235,132,7)"/><text x="154.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="151" y="244" width="1" height="15" fill="rgb(248,11,39)"/><text x="154.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="151" y="260" width="1" height="15" fill="rgb(245,191,36)"/><text x="154.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="151" y="276" width="1" height="15" fill="rgb(212,25,17)"/><text x="154.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="151" y="292" width="1" height="15" fill="rgb(235,52,29)"/><text x="154.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="151" y="308" width="1" height="15" fill="rgb(221,74,47)"/><text x="154.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="152" y="196" width="1" height="15" fill="rgb(217,35,18)"/><text x="155.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="152" y="212" width="1" height="15" fill="rgb(225,176,20)"/><text x="155.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1901) (1 samples, 0.11%)</title><rect x="152" y="228" width="1" height="15" fill="rgb(219,61,9)"/><text x="155.00" y="238.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:778) (2 samples, 0.22%)</title><rect x="152" y="164" width="3" height="15" fill="rgb(253,123,53)"/><text x="155.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="152" y="180" width="3" height="15" fill="rgb(231,143,45)"/><text x="155.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="153" y="196" width="2" height="15" fill="rgb(243,137,54)"/><text x="156.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="153" y="212" width="2" height="15" fill="rgb(244,125,9)"/><text x="156.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.11%)</title><rect x="153" y="228" width="2" height="15" fill="rgb(216,94,27)"/><text x="156.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="153" y="244" width="2" height="15" fill="rgb(217,28,48)"/><text x="156.00" y="254.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.11%)</title><rect x="155" y="180" width="1" height="15" fill="rgb(230,215,41)"/><text x="158.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="155" y="196" width="1" height="15" fill="rgb(247,157,39)"/><text x="158.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="155" y="212" width="1" height="15" fill="rgb(232,148,53)"/><text x="158.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.11%)</title><rect x="155" y="228" width="1" height="15" fill="rgb(238,7,32)"/><text x="158.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="155" y="244" width="1" height="15" fill="rgb(242,185,6)"/><text x="158.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="155" y="260" width="1" height="15" fill="rgb(231,215,15)"/><text x="158.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.11%)</title><rect x="155" y="276" width="1" height="15" fill="rgb(215,3,25)"/><text x="158.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="155" y="292" width="1" height="15" fill="rgb(212,207,51)"/><text x="158.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="155" y="308" width="1" height="15" fill="rgb(221,194,19)"/><text x="158.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="155" y="324" width="1" height="15" fill="rgb(252,103,38)"/><text x="158.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.11%)</title><rect x="155" y="340" width="1" height="15" fill="rgb(252,97,29)"/><text x="158.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.11%)</title><rect x="155" y="356" width="1" height="15" fill="rgb(235,99,31)"/><text x="158.00" y="366.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.11%)</title><rect x="155" y="372" width="1" height="15" fill="rgb(227,212,19)"/><text x="158.00" y="382.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.11%)</title><rect x="156" y="180" width="1" height="15" fill="rgb(253,53,24)"/><text x="159.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="156" y="196" width="1" height="15" fill="rgb(240,226,47)"/><text x="159.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="156" y="212" width="1" height="15" fill="rgb(221,208,22)"/><text x="159.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="156" y="228" width="1" height="15" fill="rgb(242,180,21)"/><text x="159.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="156" y="244" width="1" height="15" fill="rgb(239,89,36)"/><text x="159.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.11%)</title><rect x="156" y="260" width="1" height="15" fill="rgb(206,215,47)"/><text x="159.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.11%)</title><rect x="156" y="276" width="1" height="15" fill="rgb(242,102,3)"/><text x="159.00" y="286.50"></text></g><g><title>0x7fd7260adc7f (libm-2.29.so) (1 samples, 0.11%)</title><rect x="156" y="292" width="1" height="15" fill="rgb(234,47,26)"/><text x="159.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="157" y="308" width="1" height="15" fill="rgb(225,201,36)"/><text x="160.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="157" y="324" width="1" height="15" fill="rgb(214,188,33)"/><text x="160.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:309) (1 samples, 0.11%)</title><rect x="157" y="340" width="1" height="15" fill="rgb(244,74,52)"/><text x="160.00" y="350.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (2 samples, 0.22%)</title><rect x="157" y="180" width="3" height="15" fill="rgb(224,14,4)"/><text x="160.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="157" y="196" width="3" height="15" fill="rgb(229,97,7)"/><text x="160.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="157" y="212" width="3" height="15" fill="rgb(215,61,38)"/><text x="160.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.22%)</title><rect x="157" y="228" width="3" height="15" fill="rgb(248,49,13)"/><text x="160.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.22%)</title><rect x="157" y="244" width="3" height="15" fill="rgb(228,16,17)"/><text x="160.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.22%)</title><rect x="157" y="260" width="3" height="15" fill="rgb(208,149,45)"/><text x="160.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.22%)</title><rect x="157" y="276" width="3" height="15" fill="rgb(210,204,0)"/><text x="160.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.22%)</title><rect x="157" y="292" width="3" height="15" fill="rgb(232,86,52)"/><text x="160.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.11%)</title><rect x="158" y="308" width="2" height="15" fill="rgb(250,22,31)"/><text x="161.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.11%)</title><rect x="158" y="324" width="2" height="15" fill="rgb(205,214,38)"/><text x="161.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.11%)</title><rect x="158" y="340" width="2" height="15" fill="rgb(214,50,40)"/><text x="161.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="158" y="356" width="2" height="15" fill="rgb(240,50,25)"/><text x="161.00" y="366.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:18) (114 samples, 12.74%)</title><rect x="11" y="100" width="150" height="15" fill="rgb(238,42,41)"/><text x="14.00" y="110.50">profile (bench_AdaB..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (114 samples, 12.74%)</title><rect x="11" y="116" width="150" height="15" fill="rgb(220,86,17)"/><text x="14.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (114 samples, 12.74%)</title><rect x="11" y="132" width="150" height="15" fill="rgb(249,122,19)"/><text x="14.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (7 samples, 0.78%)</title><rect x="152" y="148" width="9" height="15" fill="rgb(232,133,36)"/><text x="155.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (5 samples, 0.56%)</title><rect x="155" y="164" width="6" height="15" fill="rgb(206,165,14)"/><text x="158.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:615) (1 samples, 0.11%)</title><rect x="160" y="180" width="1" height="15" fill="rgb(208,113,31)"/><text x="163.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="160" y="196" width="1" height="15" fill="rgb(219,168,14)"/><text x="163.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="160" y="212" width="1" height="15" fill="rgb(248,134,5)"/><text x="163.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="160" y="228" width="1" height="15" fill="rgb(205,147,5)"/><text x="163.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="160" y="244" width="1" height="15" fill="rgb(227,21,53)"/><text x="163.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="160" y="260" width="1" height="15" fill="rgb(229,81,27)"/><text x="163.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="160" y="276" width="1" height="15" fill="rgb(254,190,27)"/><text x="163.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="160" y="292" width="1" height="15" fill="rgb(247,112,28)"/><text x="163.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="162" y="212" width="2" height="15" fill="rgb(213,154,15)"/><text x="165.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="162" y="228" width="2" height="15" fill="rgb(206,187,15)"/><text x="165.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.11%)</title><rect x="162" y="244" width="2" height="15" fill="rgb(220,49,26)"/><text x="165.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.11%)</title><rect x="164" y="228" width="1" height="15" fill="rgb(213,49,46)"/><text x="167.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="165" y="228" width="1" height="15" fill="rgb(231,182,32)"/><text x="168.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.11%)</title><rect x="165" y="244" width="1" height="15" fill="rgb(242,187,36)"/><text x="168.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.22%)</title><rect x="170" y="260" width="3" height="15" fill="rgb(239,225,7)"/><text x="173.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.56%)</title><rect x="168" y="244" width="6" height="15" fill="rgb(227,171,29)"/><text x="171.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="173" y="260" width="1" height="15" fill="rgb(236,47,46)"/><text x="176.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (9 samples, 1.01%)</title><rect x="164" y="212" width="12" height="15" fill="rgb(208,7,15)"/><text x="167.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 0.78%)</title><rect x="166" y="228" width="10" height="15" fill="rgb(213,219,2)"/><text x="169.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.11%)</title><rect x="174" y="244" width="2" height="15" fill="rgb(238,208,7)"/><text x="177.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.11%)</title><rect x="177" y="244" width="1" height="15" fill="rgb(229,184,30)"/><text x="180.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (2 samples, 0.22%)</title><rect x="178" y="244" width="3" height="15" fill="rgb(220,203,52)"/><text x="181.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:461) (1 samples, 0.11%)</title><rect x="181" y="244" width="1" height="15" fill="rgb(230,45,45)"/><text x="184.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.11%)</title><rect x="182" y="244" width="2" height="15" fill="rgb(211,216,16)"/><text x="185.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="184" y="244" width="1" height="15" fill="rgb(254,203,32)"/><text x="187.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="184" y="260" width="1" height="15" fill="rgb(237,220,54)"/><text x="187.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.11%)</title><rect x="187" y="260" width="2" height="15" fill="rgb(246,200,2)"/><text x="190.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.11%)</title><rect x="189" y="260" width="1" height="15" fill="rgb(214,152,28)"/><text x="192.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.11%)</title><rect x="190" y="260" width="1" height="15" fill="rgb(209,160,38)"/><text x="193.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 0.67%)</title><rect x="185" y="244" width="8" height="15" fill="rgb(226,94,20)"/><text x="188.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.11%)</title><rect x="191" y="260" width="2" height="15" fill="rgb(212,146,3)"/><text x="194.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.11%)</title><rect x="193" y="260" width="1" height="15" fill="rgb(241,178,18)"/><text x="196.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="194" y="276" width="1" height="15" fill="rgb(215,157,27)"/><text x="197.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.11%)</title><rect x="195" y="276" width="2" height="15" fill="rgb(246,141,36)"/><text x="198.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.45%)</title><rect x="193" y="244" width="5" height="15" fill="rgb(226,61,42)"/><text x="196.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.34%)</title><rect x="194" y="260" width="4" height="15" fill="rgb(231,174,22)"/><text x="197.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.11%)</title><rect x="197" y="276" width="1" height="15" fill="rgb(220,155,39)"/><text x="200.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.22%)</title><rect x="198" y="244" width="3" height="15" fill="rgb(242,60,50)"/><text x="201.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="198" y="260" width="3" height="15" fill="rgb(237,33,40)"/><text x="201.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.22%)</title><rect x="198" y="276" width="3" height="15" fill="rgb(254,88,13)"/><text x="201.00" y="286.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.11%)</title><rect x="203" y="260" width="2" height="15" fill="rgb(234,72,1)"/><text x="206.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.45%)</title><rect x="201" y="244" width="5" height="15" fill="rgb(226,155,23)"/><text x="204.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.11%)</title><rect x="205" y="260" width="1" height="15" fill="rgb(243,222,21)"/><text x="208.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.11%)</title><rect x="206" y="244" width="1" height="15" fill="rgb(208,108,42)"/><text x="209.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.11%)</title><rect x="206" y="260" width="1" height="15" fill="rgb(212,107,19)"/><text x="209.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 0.67%)</title><rect x="207" y="244" width="8" height="15" fill="rgb(217,132,35)"/><text x="210.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 0.67%)</title><rect x="207" y="260" width="8" height="15" fill="rgb(231,119,28)"/><text x="210.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.45%)</title><rect x="210" y="276" width="5" height="15" fill="rgb(211,204,42)"/><text x="213.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.11%)</title><rect x="215" y="260" width="1" height="15" fill="rgb(243,12,43)"/><text x="218.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.11%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(232,152,6)"/><text x="219.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (36 samples, 4.02%)</title><rect x="176" y="212" width="47" height="15" fill="rgb(241,39,51)"/><text x="179.00" y="222.50">pred..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (36 samples, 4.02%)</title><rect x="176" y="228" width="47" height="15" fill="rgb(227,125,8)"/><text x="179.00" y="238.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 0.67%)</title><rect x="215" y="244" width="8" height="15" fill="rgb(224,117,12)"/><text x="218.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.45%)</title><rect x="218" y="260" width="5" height="15" fill="rgb(212,136,14)"/><text x="221.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.22%)</title><rect x="220" y="276" width="3" height="15" fill="rgb(244,205,40)"/><text x="223.00" y="286.50"></text></g><g><title>0x7fd6ff92d1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="223" y="276" width="1" height="15" fill="rgb(231,191,20)"/><text x="226.00" y="286.50"></text></g><g><title>0x7fd6ff92d2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="224" y="276" width="2" height="15" fill="rgb(237,182,33)"/><text x="227.00" y="286.50"></text></g><g><title>0x7fd6ff911d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="224" y="292" width="2" height="15" fill="rgb(225,22,10)"/><text x="227.00" y="302.50"></text></g><g><title>0x7fd6ff911666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="224" y="308" width="2" height="15" fill="rgb(212,175,14)"/><text x="227.00" y="318.50"></text></g><g><title>0x7fd6ff9072fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="224" y="324" width="2" height="15" fill="rgb(210,25,5)"/><text x="227.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="224" y="340" width="2" height="15" fill="rgb(212,162,44)"/><text x="227.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:641) (1 samples, 0.11%)</title><rect x="224" y="356" width="2" height="15" fill="rgb(230,216,51)"/><text x="227.00" y="366.50"></text></g><g><title>0x7fd6ff92d592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="226" y="276" width="1" height="15" fill="rgb(215,176,16)"/><text x="229.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.11%)</title><rect x="226" y="292" width="1" height="15" fill="rgb(248,41,9)"/><text x="229.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.11%)</title><rect x="226" y="308" width="1" height="15" fill="rgb(250,74,12)"/><text x="229.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="226" y="324" width="1" height="15" fill="rgb(244,152,16)"/><text x="229.00" y="334.50"></text></g><g><title>0x7fd6ff92d6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="227" y="276" width="1" height="15" fill="rgb(232,165,21)"/><text x="230.00" y="286.50"></text></g><g><title>0x7fd6ff91efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="223" y="244" width="7" height="15" fill="rgb(233,27,38)"/><text x="226.00" y="254.50"></text></g><g><title>0x7fd6ff92e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="223" y="260" width="7" height="15" fill="rgb(251,163,48)"/><text x="226.00" y="270.50"></text></g><g><title>0x7fd6ff92d7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="228" y="276" width="2" height="15" fill="rgb(221,115,30)"/><text x="231.00" y="286.50"></text></g><g><title>0x7fd6ff91f011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="230" y="244" width="1" height="15" fill="rgb(243,217,24)"/><text x="233.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.11%)</title><rect x="231" y="260" width="1" height="15" fill="rgb(238,83,48)"/><text x="234.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.11%)</title><rect x="231" y="276" width="1" height="15" fill="rgb(234,183,51)"/><text x="234.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.11%)</title><rect x="232" y="292" width="2" height="15" fill="rgb(244,20,43)"/><text x="235.00" y="302.50"></text></g><g><title>0x7fd6ff91f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="231" y="244" width="7" height="15" fill="rgb(205,79,0)"/><text x="234.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.45%)</title><rect x="232" y="260" width="6" height="15" fill="rgb(229,154,32)"/><text x="235.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (4 samples, 0.45%)</title><rect x="232" y="276" width="6" height="15" fill="rgb(208,40,51)"/><text x="235.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (3 samples, 0.34%)</title><rect x="234" y="292" width="4" height="15" fill="rgb(209,95,17)"/><text x="237.00" y="302.50"></text></g><g><title>0x7fd6ff91f18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="238" y="244" width="2" height="15" fill="rgb(223,191,6)"/><text x="241.00" y="254.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.11%)</title><rect x="242" y="260" width="1" height="15" fill="rgb(236,22,54)"/><text x="245.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.11%)</title><rect x="242" y="276" width="1" height="15" fill="rgb(212,112,31)"/><text x="245.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (16 samples, 1.79%)</title><rect x="223" y="212" width="21" height="15" fill="rgb(240,110,38)"/><text x="226.00" y="222.50"></text></g><g><title>0x7fd6ff91fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 1.79%)</title><rect x="223" y="228" width="21" height="15" fill="rgb(235,94,38)"/><text x="226.00" y="238.50"></text></g><g><title>0x7fd6ff91f328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="240" y="244" width="4" height="15" fill="rgb(233,159,12)"/><text x="243.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="243" y="260" width="1" height="15" fill="rgb(252,119,26)"/><text x="246.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="243" y="276" width="1" height="15" fill="rgb(230,122,8)"/><text x="246.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="243" y="292" width="1" height="15" fill="rgb(233,180,3)"/><text x="246.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1134) (1 samples, 0.11%)</title><rect x="243" y="308" width="1" height="15" fill="rgb(232,83,8)"/><text x="246.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (1 samples, 0.11%)</title><rect x="244" y="212" width="2" height="15" fill="rgb(213,44,18)"/><text x="247.00" y="222.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.22%)</title><rect x="246" y="212" width="2" height="15" fill="rgb(219,15,2)"/><text x="249.00" y="222.50"></text></g><g><title>0x7fd725efc14a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="251" y="260" width="1" height="15" fill="rgb(235,106,13)"/><text x="254.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="253" y="276" width="2" height="15" fill="rgb(219,44,52)"/><text x="256.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="253" y="292" width="2" height="15" fill="rgb(215,204,20)"/><text x="256.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="253" y="308" width="2" height="15" fill="rgb(236,9,54)"/><text x="256.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="253" y="324" width="2" height="15" fill="rgb(212,19,32)"/><text x="256.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="253" y="340" width="2" height="15" fill="rgb(252,24,52)"/><text x="256.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="253" y="356" width="2" height="15" fill="rgb(210,156,37)"/><text x="256.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="255" y="308" width="1" height="15" fill="rgb(209,62,31)"/><text x="258.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="255" y="324" width="1" height="15" fill="rgb(215,174,4)"/><text x="258.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="255" y="340" width="1" height="15" fill="rgb(238,112,13)"/><text x="258.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.11%)</title><rect x="255" y="356" width="1" height="15" fill="rgb(212,68,16)"/><text x="258.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="256" y="324" width="1" height="15" fill="rgb(243,157,42)"/><text x="259.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="256" y="340" width="1" height="15" fill="rgb(208,112,4)"/><text x="259.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="256" y="356" width="1" height="15" fill="rgb(226,167,3)"/><text x="259.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="256" y="372" width="1" height="15" fill="rgb(252,42,48)"/><text x="259.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="256" y="388" width="1" height="15" fill="rgb(238,189,27)"/><text x="259.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="256" y="404" width="1" height="15" fill="rgb(254,162,1)"/><text x="259.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="257" y="324" width="2" height="15" fill="rgb(235,142,36)"/><text x="260.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="257" y="340" width="2" height="15" fill="rgb(235,21,50)"/><text x="260.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3034) (1 samples, 0.11%)</title><rect x="257" y="356" width="2" height="15" fill="rgb(206,31,0)"/><text x="260.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.11%)</title><rect x="259" y="340" width="1" height="15" fill="rgb(246,110,48)"/><text x="262.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="261" y="356" width="2" height="15" fill="rgb(234,44,45)"/><text x="264.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.22%)</title><rect x="263" y="356" width="2" height="15" fill="rgb(240,55,38)"/><text x="266.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.45%)</title><rect x="265" y="356" width="6" height="15" fill="rgb(211,129,47)"/><text x="268.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.45%)</title><rect x="265" y="372" width="6" height="15" fill="rgb(232,129,52)"/><text x="268.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.12%)</title><rect x="259" y="324" width="13" height="15" fill="rgb(230,169,5)"/><text x="262.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 1.01%)</title><rect x="260" y="340" width="12" height="15" fill="rgb(222,42,44)"/><text x="263.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="271" y="356" width="1" height="15" fill="rgb(250,79,7)"/><text x="274.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 1.56%)</title><rect x="255" y="292" width="18" height="15" fill="rgb(224,109,40)"/><text x="258.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 1.45%)</title><rect x="256" y="308" width="17" height="15" fill="rgb(209,9,24)"/><text x="259.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="272" y="324" width="1" height="15" fill="rgb(253,175,22)"/><text x="275.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:687) (1 samples, 0.11%)</title><rect x="272" y="340" width="1" height="15" fill="rgb(211,17,0)"/><text x="275.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (20 samples, 2.23%)</title><rect x="248" y="212" width="27" height="15" fill="rgb(252,226,5)"/><text x="251.00" y="222.50">p..</text></g><g><title>array_sum (methods.c:2215) (18 samples, 2.01%)</title><rect x="251" y="228" width="24" height="15" fill="rgb(212,109,20)"/><text x="254.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 2.01%)</title><rect x="251" y="244" width="24" height="15" fill="rgb(238,110,32)"/><text x="254.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 1.90%)</title><rect x="252" y="260" width="23" height="15" fill="rgb(232,61,52)"/><text x="255.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 1.68%)</title><rect x="255" y="276" width="20" height="15" fill="rgb(237,52,19)"/><text x="258.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4634) (1 samples, 0.11%)</title><rect x="273" y="292" width="2" height="15" fill="rgb(228,211,15)"/><text x="276.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (2 samples, 0.22%)</title><rect x="275" y="212" width="2" height="15" fill="rgb(218,45,19)"/><text x="278.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.22%)</title><rect x="275" y="228" width="2" height="15" fill="rgb(238,140,18)"/><text x="278.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="275" y="244" width="2" height="15" fill="rgb(220,139,51)"/><text x="278.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="275" y="260" width="2" height="15" fill="rgb(219,122,13)"/><text x="278.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (2 samples, 0.22%)</title><rect x="275" y="276" width="2" height="15" fill="rgb(243,28,13)"/><text x="278.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="275" y="292" width="2" height="15" fill="rgb(205,67,54)"/><text x="278.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (2 samples, 0.22%)</title><rect x="275" y="308" width="2" height="15" fill="rgb(247,40,38)"/><text x="278.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (2 samples, 0.22%)</title><rect x="275" y="324" width="2" height="15" fill="rgb(223,67,28)"/><text x="278.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="277" y="276" width="1" height="15" fill="rgb(213,68,6)"/><text x="280.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="277" y="292" width="1" height="15" fill="rgb(249,173,38)"/><text x="280.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1459) (1 samples, 0.11%)</title><rect x="277" y="308" width="1" height="15" fill="rgb(234,31,9)"/><text x="280.00" y="318.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.11%)</title><rect x="277" y="324" width="1" height="15" fill="rgb(230,101,49)"/><text x="280.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.11%)</title><rect x="278" y="276" width="2" height="15" fill="rgb(222,219,29)"/><text x="281.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="280" y="292" width="1" height="15" fill="rgb(245,98,1)"/><text x="283.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="280" y="308" width="1" height="15" fill="rgb(230,149,4)"/><text x="283.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="280" y="324" width="1" height="15" fill="rgb(230,86,35)"/><text x="283.00" y="334.50"></text></g><g><title>0x7fd725edcb24 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="280" y="340" width="1" height="15" fill="rgb(229,2,49)"/><text x="283.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="280" y="276" width="2" height="15" fill="rgb(228,21,46)"/><text x="283.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="281" y="292" width="1" height="15" fill="rgb(237,178,11)"/><text x="284.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="281" y="308" width="1" height="15" fill="rgb(211,77,5)"/><text x="284.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="281" y="324" width="1" height="15" fill="rgb(227,63,12)"/><text x="284.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="281" y="340" width="1" height="15" fill="rgb(221,38,0)"/><text x="284.00" y="350.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:249) (1 samples, 0.11%)</title><rect x="282" y="308" width="2" height="15" fill="rgb(213,144,32)"/><text x="285.00" y="318.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.11%)</title><rect x="282" y="324" width="2" height="15" fill="rgb(212,222,33)"/><text x="285.00" y="334.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="284" y="324" width="1" height="15" fill="rgb(253,227,41)"/><text x="287.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.11%)</title><rect x="284" y="340" width="1" height="15" fill="rgb(244,7,3)"/><text x="287.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 0.56%)</title><rect x="282" y="276" width="7" height="15" fill="rgb(226,167,26)"/><text x="285.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 0.56%)</title><rect x="282" y="292" width="7" height="15" fill="rgb(229,201,23)"/><text x="285.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.45%)</title><rect x="284" y="308" width="5" height="15" fill="rgb(248,110,8)"/><text x="287.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.34%)</title><rect x="285" y="324" width="4" height="15" fill="rgb(210,176,13)"/><text x="288.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.34%)</title><rect x="285" y="340" width="4" height="15" fill="rgb(239,92,31)"/><text x="288.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.12%)</title><rect x="277" y="244" width="13" height="15" fill="rgb(231,196,47)"/><text x="280.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.12%)</title><rect x="277" y="260" width="13" height="15" fill="rgb(209,95,54)"/><text x="280.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="289" y="276" width="1" height="15" fill="rgb(233,85,11)"/><text x="292.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="289" y="292" width="1" height="15" fill="rgb(244,88,18)"/><text x="292.00" y="302.50"></text></g><g><title>0x7fd725edb900 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="289" y="308" width="1" height="15" fill="rgb(218,123,18)"/><text x="292.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (98 samples, 10.95%)</title><rect x="162" y="196" width="130" height="15" fill="rgb(221,132,0)"/><text x="165.00" y="206.50">_samme_proba (sk..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (11 samples, 1.23%)</title><rect x="277" y="212" width="15" height="15" fill="rgb(219,65,46)"/><text x="280.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.23%)</title><rect x="277" y="228" width="15" height="15" fill="rgb(231,137,17)"/><text x="280.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="290" y="244" width="2" height="15" fill="rgb(240,49,47)"/><text x="293.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="292" y="212" width="1" height="15" fill="rgb(238,9,36)"/><text x="295.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="293" y="212" width="1" height="15" fill="rgb(252,4,12)"/><text x="296.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.22%)</title><rect x="296" y="228" width="2" height="15" fill="rgb(220,16,7)"/><text x="299.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.22%)</title><rect x="296" y="244" width="2" height="15" fill="rgb(240,209,46)"/><text x="299.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.22%)</title><rect x="296" y="260" width="2" height="15" fill="rgb(208,222,13)"/><text x="299.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="296" y="276" width="2" height="15" fill="rgb(239,189,45)"/><text x="299.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.22%)</title><rect x="296" y="292" width="2" height="15" fill="rgb(236,90,13)"/><text x="299.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="300" y="260" width="1" height="15" fill="rgb(249,57,47)"/><text x="303.00" y="270.50"></text></g><g><title>array_clip (methods.c:2380) (1 samples, 0.11%)</title><rect x="301" y="276" width="1" height="15" fill="rgb(244,86,43)"/><text x="304.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="302" y="420" width="2" height="15" fill="rgb(209,220,48)"/><text x="305.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.34%)</title><rect x="302" y="324" width="4" height="15" fill="rgb(219,129,26)"/><text x="305.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.34%)</title><rect x="302" y="340" width="4" height="15" fill="rgb(223,24,21)"/><text x="305.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.34%)</title><rect x="302" y="356" width="4" height="15" fill="rgb(232,185,30)"/><text x="305.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.34%)</title><rect x="302" y="372" width="4" height="15" fill="rgb(239,186,11)"/><text x="305.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.34%)</title><rect x="302" y="388" width="4" height="15" fill="rgb(230,46,27)"/><text x="305.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.34%)</title><rect x="302" y="404" width="4" height="15" fill="rgb(247,29,47)"/><text x="305.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.22%)</title><rect x="304" y="420" width="2" height="15" fill="rgb(242,111,21)"/><text x="307.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="306" y="356" width="1" height="15" fill="rgb(207,117,17)"/><text x="309.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="306" y="372" width="1" height="15" fill="rgb(215,113,30)"/><text x="309.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="306" y="388" width="1" height="15" fill="rgb(212,131,43)"/><text x="309.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.11%)</title><rect x="306" y="404" width="1" height="15" fill="rgb(251,1,36)"/><text x="309.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.11%)</title><rect x="306" y="420" width="1" height="15" fill="rgb(254,32,20)"/><text x="309.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.11%)</title><rect x="306" y="436" width="1" height="15" fill="rgb(249,147,46)"/><text x="309.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.11%)</title><rect x="306" y="452" width="1" height="15" fill="rgb(205,49,29)"/><text x="309.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.11%)</title><rect x="306" y="468" width="1" height="15" fill="rgb(239,109,50)"/><text x="309.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="307" y="356" width="2" height="15" fill="rgb(244,55,48)"/><text x="310.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="307" y="372" width="2" height="15" fill="rgb(234,113,14)"/><text x="310.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.11%)</title><rect x="307" y="388" width="2" height="15" fill="rgb(227,145,39)"/><text x="310.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.11%)</title><rect x="307" y="404" width="2" height="15" fill="rgb(214,34,52)"/><text x="310.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 0.67%)</title><rect x="302" y="308" width="8" height="15" fill="rgb(254,103,43)"/><text x="305.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.34%)</title><rect x="306" y="324" width="4" height="15" fill="rgb(206,36,12)"/><text x="309.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="306" y="340" width="4" height="15" fill="rgb(241,172,24)"/><text x="309.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="309" y="356" width="1" height="15" fill="rgb(234,171,49)"/><text x="312.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="309" y="372" width="1" height="15" fill="rgb(227,25,33)"/><text x="312.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1338) (1 samples, 0.11%)</title><rect x="309" y="388" width="1" height="15" fill="rgb(205,21,49)"/><text x="312.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="310" y="324" width="1" height="15" fill="rgb(230,84,43)"/><text x="313.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="310" y="340" width="1" height="15" fill="rgb(242,214,25)"/><text x="313.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="311" y="324" width="3" height="15" fill="rgb(206,104,32)"/><text x="314.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="313" y="340" width="1" height="15" fill="rgb(253,27,14)"/><text x="316.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="313" y="356" width="1" height="15" fill="rgb(248,179,35)"/><text x="316.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.11%)</title><rect x="313" y="372" width="1" height="15" fill="rgb(243,75,21)"/><text x="316.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="314" y="356" width="1" height="15" fill="rgb(242,114,26)"/><text x="317.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="314" y="372" width="1" height="15" fill="rgb(222,2,8)"/><text x="317.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="314" y="388" width="1" height="15" fill="rgb(209,184,40)"/><text x="317.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.11%)</title><rect x="314" y="404" width="1" height="15" fill="rgb(228,112,3)"/><text x="317.00" y="414.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.11%)</title><rect x="317" y="388" width="1" height="15" fill="rgb(234,225,52)"/><text x="320.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.11%)</title><rect x="318" y="388" width="1" height="15" fill="rgb(232,66,24)"/><text x="321.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:890) (1 samples, 0.11%)</title><rect x="318" y="404" width="1" height="15" fill="rgb(224,36,40)"/><text x="321.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (8 samples, 0.89%)</title><rect x="310" y="308" width="11" height="15" fill="rgb(245,55,6)"/><text x="313.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.56%)</title><rect x="314" y="324" width="7" height="15" fill="rgb(233,17,49)"/><text x="317.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="314" y="340" width="7" height="15" fill="rgb(217,217,21)"/><text x="317.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (4 samples, 0.45%)</title><rect x="315" y="356" width="6" height="15" fill="rgb(245,127,23)"/><text x="318.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (4 samples, 0.45%)</title><rect x="315" y="372" width="6" height="15" fill="rgb(253,225,43)"/><text x="318.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1714) (1 samples, 0.11%)</title><rect x="319" y="388" width="2" height="15" fill="rgb(241,133,49)"/><text x="322.00" y="398.50"></text></g><g><title>0x7fd725efc12f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="324" width="1" height="15" fill="rgb(218,119,45)"/><text x="324.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="323" y="372" width="2" height="15" fill="rgb(228,12,47)"/><text x="326.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="323" y="388" width="2" height="15" fill="rgb(248,61,21)"/><text x="326.00" y="398.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.11%)</title><rect x="325" y="420" width="1" height="15" fill="rgb(254,13,51)"/><text x="328.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="326" y="420" width="1" height="15" fill="rgb(227,37,43)"/><text x="329.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (4 samples, 0.45%)</title><rect x="323" y="340" width="6" height="15" fill="rgb(216,222,23)"/><text x="326.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.45%)</title><rect x="323" y="356" width="6" height="15" fill="rgb(215,168,0)"/><text x="326.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.34%)</title><rect x="325" y="372" width="4" height="15" fill="rgb(214,95,24)"/><text x="328.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.34%)</title><rect x="325" y="388" width="4" height="15" fill="rgb(247,74,13)"/><text x="328.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.34%)</title><rect x="325" y="404" width="4" height="15" fill="rgb(210,21,19)"/><text x="328.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="327" y="420" width="2" height="15" fill="rgb(249,52,15)"/><text x="330.00" y="430.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:287) (1 samples, 0.11%)</title><rect x="329" y="404" width="1" height="15" fill="rgb(239,37,22)"/><text x="332.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.11%)</title><rect x="329" y="420" width="1" height="15" fill="rgb(206,8,31)"/><text x="332.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="329" y="356" width="2" height="15" fill="rgb(225,219,44)"/><text x="332.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.22%)</title><rect x="329" y="372" width="2" height="15" fill="rgb(239,96,47)"/><text x="332.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (2 samples, 0.22%)</title><rect x="329" y="388" width="2" height="15" fill="rgb(226,120,3)"/><text x="332.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.11%)</title><rect x="330" y="404" width="1" height="15" fill="rgb(206,132,11)"/><text x="333.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="330" y="420" width="1" height="15" fill="rgb(250,107,2)"/><text x="333.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="330" y="436" width="1" height="15" fill="rgb(208,37,11)"/><text x="333.00" y="446.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.11%)</title><rect x="330" y="452" width="1" height="15" fill="rgb(210,160,1)"/><text x="333.00" y="462.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.11%)</title><rect x="330" y="468" width="1" height="15" fill="rgb(235,160,28)"/><text x="333.00" y="478.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.11%)</title><rect x="331" y="388" width="2" height="15" fill="rgb(243,122,14)"/><text x="334.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.22%)</title><rect x="331" y="372" width="3" height="15" fill="rgb(250,78,22)"/><text x="334.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="333" y="388" width="1" height="15" fill="rgb(206,66,47)"/><text x="336.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.11%)</title><rect x="333" y="404" width="1" height="15" fill="rgb(217,0,34)"/><text x="336.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.11%)</title><rect x="333" y="420" width="1" height="15" fill="rgb(206,54,17)"/><text x="336.00" y="430.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="334" y="388" width="2" height="15" fill="rgb(207,212,8)"/><text x="337.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.22%)</title><rect x="334" y="404" width="2" height="15" fill="rgb(209,1,38)"/><text x="337.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.56%)</title><rect x="331" y="356" width="7" height="15" fill="rgb(210,17,38)"/><text x="334.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.34%)</title><rect x="334" y="372" width="4" height="15" fill="rgb(231,82,8)"/><text x="337.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.11%)</title><rect x="336" y="388" width="2" height="15" fill="rgb(253,121,36)"/><text x="339.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="338" y="356" width="1" height="15" fill="rgb(243,187,11)"/><text x="341.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="329" y="340" width="11" height="15" fill="rgb(207,228,34)"/><text x="332.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.11%)</title><rect x="339" y="356" width="1" height="15" fill="rgb(224,70,2)"/><text x="342.00" y="366.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (30 samples, 3.35%)</title><rect x="302" y="292" width="40" height="15" fill="rgb(253,221,18)"/><text x="305.00" y="302.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:129) (16 samples, 1.79%)</title><rect x="321" y="308" width="21" height="15" fill="rgb(226,166,38)"/><text x="324.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (15 samples, 1.68%)</title><rect x="322" y="324" width="20" height="15" fill="rgb(215,159,10)"/><text x="325.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="340" y="340" width="2" height="15" fill="rgb(219,223,5)"/><text x="343.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="340" y="356" width="2" height="15" fill="rgb(251,105,19)"/><text x="343.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="340" y="372" width="2" height="15" fill="rgb(243,169,50)"/><text x="343.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="340" y="388" width="2" height="15" fill="rgb(222,165,10)"/><text x="343.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (39 samples, 4.36%)</title><rect x="292" y="196" width="51" height="15" fill="rgb(240,145,24)"/><text x="295.00" y="206.50">_samm..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (37 samples, 4.13%)</title><rect x="294" y="212" width="49" height="15" fill="rgb(216,225,31)"/><text x="297.00" y="222.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (34 samples, 3.80%)</title><rect x="298" y="228" width="45" height="15" fill="rgb(254,83,42)"/><text x="301.00" y="238.50">arra..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (34 samples, 3.80%)</title><rect x="298" y="244" width="45" height="15" fill="rgb(222,32,49)"/><text x="301.00" y="254.50">clip..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (32 samples, 3.58%)</title><rect x="301" y="260" width="42" height="15" fill="rgb(234,87,13)"/><text x="304.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (31 samples, 3.46%)</title><rect x="302" y="276" width="41" height="15" fill="rgb(245,186,20)"/><text x="305.00" y="286.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.11%)</title><rect x="342" y="292" width="1" height="15" fill="rgb(227,187,25)"/><text x="345.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="343" y="212" width="1" height="15" fill="rgb(242,205,35)"/><text x="346.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="343" y="228" width="1" height="15" fill="rgb(236,183,12)"/><text x="346.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.11%)</title><rect x="343" y="244" width="1" height="15" fill="rgb(226,194,28)"/><text x="346.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:186) (1 samples, 0.11%)</title><rect x="344" y="276" width="2" height="15" fill="rgb(211,29,44)"/><text x="347.00" y="286.50"></text></g><g><title>0x7fd7250ff0c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="346" y="292" width="1" height="15" fill="rgb(239,95,51)"/><text x="349.00" y="302.50"></text></g><g><title>0x7fd7260addee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="347" y="292" width="1" height="15" fill="rgb(239,31,3)"/><text x="350.00" y="302.50"></text></g><g><title>0x7fd7260ade40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="348" y="292" width="2" height="15" fill="rgb(247,218,2)"/><text x="351.00" y="302.50"></text></g><g><title>0x7fd7260ade4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="350" y="292" width="1" height="15" fill="rgb(213,141,1)"/><text x="353.00" y="302.50"></text></g><g><title>0x7fd7260ade61 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="351" y="292" width="1" height="15" fill="rgb(240,212,47)"/><text x="354.00" y="302.50"></text></g><g><title>0x7fd7260ade8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="352" y="292" width="2" height="15" fill="rgb(223,64,49)"/><text x="355.00" y="302.50"></text></g><g><title>0x7fd7260adea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="354" y="292" width="1" height="15" fill="rgb(247,146,53)"/><text x="357.00" y="302.50"></text></g><g><title>0x7fd7260adeb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="355" y="292" width="1" height="15" fill="rgb(211,135,30)"/><text x="358.00" y="302.50"></text></g><g><title>0x7fd7260adeca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="356" y="292" width="2" height="15" fill="rgb(233,46,17)"/><text x="359.00" y="302.50"></text></g><g><title>0x7fd7260aded2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="358" y="292" width="1" height="15" fill="rgb(237,151,32)"/><text x="361.00" y="302.50"></text></g><g><title>0x7fd7260adeee (libm-2.29.so) (4 samples, 0.45%)</title><rect x="359" y="292" width="5" height="15" fill="rgb(242,59,5)"/><text x="362.00" y="302.50"></text></g><g><title>0x7fd7260adef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="364" y="292" width="1" height="15" fill="rgb(221,124,6)"/><text x="367.00" y="302.50"></text></g><g><title>0x7fd7260adefa (libm-2.29.so) (1 samples, 0.11%)</title><rect x="365" y="292" width="2" height="15" fill="rgb(220,179,25)"/><text x="368.00" y="302.50"></text></g><g><title>0x7fd7260adf97 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="367" y="292" width="1" height="15" fill="rgb(208,61,15)"/><text x="370.00" y="302.50"></text></g><g><title>0x7fd7260ae017 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="368" y="292" width="1" height="15" fill="rgb(231,94,34)"/><text x="371.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (23 samples, 2.57%)</title><rect x="343" y="196" width="30" height="15" fill="rgb(214,125,26)"/><text x="346.00" y="206.50">_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 2.46%)</title><rect x="344" y="212" width="29" height="15" fill="rgb(241,2,46)"/><text x="347.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (22 samples, 2.46%)</title><rect x="344" y="228" width="29" height="15" fill="rgb(228,43,13)"/><text x="347.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (22 samples, 2.46%)</title><rect x="344" y="244" width="29" height="15" fill="rgb(246,220,28)"/><text x="347.00" y="254.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (22 samples, 2.46%)</title><rect x="344" y="260" width="29" height="15" fill="rgb(227,83,35)"/><text x="347.00" y="270.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (21 samples, 2.35%)</title><rect x="346" y="276" width="27" height="15" fill="rgb(238,112,49)"/><text x="349.00" y="286.50">P..</text></g><g><title>log (libm-2.29.so) (3 samples, 0.34%)</title><rect x="369" y="292" width="4" height="15" fill="rgb(247,34,0)"/><text x="372.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.11%)</title><rect x="373" y="196" width="2" height="15" fill="rgb(212,211,45)"/><text x="376.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="381" y="244" width="2" height="15" fill="rgb(217,0,24)"/><text x="384.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="381" y="260" width="2" height="15" fill="rgb(249,95,46)"/><text x="384.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="383" y="244" width="1" height="15" fill="rgb(229,207,29)"/><text x="386.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.11%)</title><rect x="383" y="260" width="1" height="15" fill="rgb(222,99,21)"/><text x="386.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.11%)</title><rect x="383" y="276" width="1" height="15" fill="rgb(251,95,31)"/><text x="386.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.11%)</title><rect x="383" y="292" width="1" height="15" fill="rgb(233,167,32)"/><text x="386.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:928) (1 samples, 0.11%)</title><rect x="383" y="308" width="1" height="15" fill="rgb(208,71,48)"/><text x="386.00" y="318.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src:1924) (1 samples, 0.11%)</title><rect x="383" y="324" width="1" height="15" fill="rgb(225,207,28)"/><text x="386.00" y="334.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1887) (1 samples, 0.11%)</title><rect x="383" y="340" width="1" height="15" fill="rgb(211,91,22)"/><text x="386.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="384" y="244" width="1" height="15" fill="rgb(246,170,6)"/><text x="387.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1290) (1 samples, 0.11%)</title><rect x="384" y="260" width="1" height="15" fill="rgb(213,119,3)"/><text x="387.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.11%)</title><rect x="385" y="276" width="2" height="15" fill="rgb(241,55,4)"/><text x="388.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="385" y="292" width="2" height="15" fill="rgb(206,204,6)"/><text x="388.00" y="302.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:698) (2 samples, 0.22%)</title><rect x="387" y="292" width="2" height="15" fill="rgb(244,20,8)"/><text x="390.00" y="302.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (2 samples, 0.22%)</title><rect x="387" y="308" width="2" height="15" fill="rgb(220,13,18)"/><text x="390.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.78%)</title><rect x="381" y="228" width="10" height="15" fill="rgb(209,42,4)"/><text x="384.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.45%)</title><rect x="385" y="244" width="6" height="15" fill="rgb(231,27,19)"/><text x="388.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.45%)</title><rect x="385" y="260" width="6" height="15" fill="rgb(221,89,37)"/><text x="388.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.34%)</title><rect x="387" y="276" width="4" height="15" fill="rgb(216,120,4)"/><text x="390.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.11%)</title><rect x="389" y="292" width="2" height="15" fill="rgb(253,122,21)"/><text x="392.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="389" y="308" width="2" height="15" fill="rgb(208,21,8)"/><text x="392.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (8 samples, 0.89%)</title><rect x="381" y="212" width="11" height="15" fill="rgb(215,85,31)"/><text x="384.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="391" y="228" width="1" height="15" fill="rgb(246,92,20)"/><text x="394.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="391" y="244" width="1" height="15" fill="rgb(236,8,5)"/><text x="394.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="391" y="260" width="1" height="15" fill="rgb(231,107,16)"/><text x="394.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="391" y="276" width="1" height="15" fill="rgb(249,226,43)"/><text x="394.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="392" y="292" width="1" height="15" fill="rgb(254,10,19)"/><text x="395.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.11%)</title><rect x="392" y="308" width="1" height="15" fill="rgb(208,156,8)"/><text x="395.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="392" y="276" width="2" height="15" fill="rgb(236,215,12)"/><text x="395.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="393" y="292" width="1" height="15" fill="rgb(213,196,1)"/><text x="396.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.11%)</title><rect x="393" y="308" width="1" height="15" fill="rgb(209,106,48)"/><text x="396.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.11%)</title><rect x="393" y="324" width="1" height="15" fill="rgb(212,158,16)"/><text x="396.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="393" y="340" width="1" height="15" fill="rgb(247,93,37)"/><text x="396.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.11%)</title><rect x="393" y="356" width="1" height="15" fill="rgb(232,81,32)"/><text x="396.00" y="366.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="393" y="372" width="1" height="15" fill="rgb(235,113,50)"/><text x="396.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="394" y="324" width="2" height="15" fill="rgb(253,59,33)"/><text x="397.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (2 samples, 0.22%)</title><rect x="396" y="324" width="2" height="15" fill="rgb(245,98,35)"/><text x="399.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="400" y="340" width="1" height="15" fill="rgb(206,178,46)"/><text x="403.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (8 samples, 0.89%)</title><rect x="392" y="212" width="10" height="15" fill="rgb(227,5,13)"/><text x="395.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.89%)</title><rect x="392" y="228" width="10" height="15" fill="rgb(220,117,40)"/><text x="395.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.89%)</title><rect x="392" y="244" width="10" height="15" fill="rgb(207,114,24)"/><text x="395.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.89%)</title><rect x="392" y="260" width="10" height="15" fill="rgb(248,1,3)"/><text x="395.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.67%)</title><rect x="394" y="276" width="8" height="15" fill="rgb(229,103,0)"/><text x="397.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.67%)</title><rect x="394" y="292" width="8" height="15" fill="rgb(215,18,17)"/><text x="397.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.67%)</title><rect x="394" y="308" width="8" height="15" fill="rgb(228,88,20)"/><text x="397.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.34%)</title><rect x="398" y="324" width="4" height="15" fill="rgb(240,10,22)"/><text x="401.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="401" y="340" width="1" height="15" fill="rgb(232,32,13)"/><text x="404.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.11%)</title><rect x="402" y="324" width="2" height="15" fill="rgb(248,38,18)"/><text x="405.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:23) (1 samples, 0.11%)</title><rect x="402" y="340" width="2" height="15" fill="rgb(244,198,12)"/><text x="405.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="402" y="260" width="3" height="15" fill="rgb(206,190,9)"/><text x="405.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="402" y="276" width="3" height="15" fill="rgb(238,51,9)"/><text x="405.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.22%)</title><rect x="402" y="292" width="3" height="15" fill="rgb(225,105,0)"/><text x="405.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.22%)</title><rect x="402" y="308" width="3" height="15" fill="rgb(241,167,52)"/><text x="405.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="404" y="324" width="1" height="15" fill="rgb(249,160,36)"/><text x="407.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="404" y="340" width="1" height="15" fill="rgb(245,216,27)"/><text x="407.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3607) (1 samples, 0.11%)</title><rect x="405" y="292" width="1" height="15" fill="rgb(218,105,53)"/><text x="408.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.11%)</title><rect x="406" y="292" width="2" height="15" fill="rgb(226,0,46)"/><text x="409.00" y="302.50"></text></g><g><title>0x7fd725efc202 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="406" y="308" width="2" height="15" fill="rgb(229,196,38)"/><text x="409.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="408" y="308" width="1" height="15" fill="rgb(252,145,12)"/><text x="411.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="408" y="324" width="1" height="15" fill="rgb(220,154,47)"/><text x="411.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="408" y="340" width="1" height="15" fill="rgb(209,74,28)"/><text x="411.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="408" y="356" width="1" height="15" fill="rgb(237,216,44)"/><text x="411.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="408" y="372" width="1" height="15" fill="rgb(209,26,25)"/><text x="411.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="408" y="388" width="1" height="15" fill="rgb(224,20,4)"/><text x="411.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="408" y="404" width="1" height="15" fill="rgb(247,149,3)"/><text x="411.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="408" y="420" width="1" height="15" fill="rgb(230,212,10)"/><text x="411.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="408" y="436" width="1" height="15" fill="rgb(238,192,37)"/><text x="411.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="409" y="308" width="1" height="15" fill="rgb(233,56,10)"/><text x="412.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="409" y="324" width="1" height="15" fill="rgb(222,216,1)"/><text x="412.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.11%)</title><rect x="409" y="340" width="1" height="15" fill="rgb(211,208,53)"/><text x="412.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3466) (1 samples, 0.11%)</title><rect x="410" y="324" width="2" height="15" fill="rgb(208,162,22)"/><text x="413.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="413" y="340" width="1" height="15" fill="rgb(231,211,17)"/><text x="416.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="414" y="356" width="2" height="15" fill="rgb(254,40,15)"/><text x="417.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="414" y="340" width="3" height="15" fill="rgb(216,114,26)"/><text x="417.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="416" y="356" width="1" height="15" fill="rgb(206,149,14)"/><text x="419.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (195 samples, 21.79%)</title><rect x="161" y="180" width="257" height="15" fill="rgb(251,115,54)"/><text x="164.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weigh..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (33 samples, 3.69%)</title><rect x="375" y="196" width="43" height="15" fill="rgb(223,112,13)"/><text x="378.00" y="206.50">_sam..</text></g><g><title>array_sum (methods.c:2215) (12 samples, 1.34%)</title><rect x="402" y="212" width="16" height="15" fill="rgb(213,79,2)"/><text x="405.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 1.34%)</title><rect x="402" y="228" width="16" height="15" fill="rgb(248,102,43)"/><text x="405.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 1.34%)</title><rect x="402" y="244" width="16" height="15" fill="rgb(206,68,42)"/><text x="405.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.12%)</title><rect x="405" y="260" width="13" height="15" fill="rgb(237,143,22)"/><text x="408.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.12%)</title><rect x="405" y="276" width="13" height="15" fill="rgb(240,209,43)"/><text x="408.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 0.89%)</title><rect x="408" y="292" width="10" height="15" fill="rgb(205,127,54)"/><text x="411.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.67%)</title><rect x="410" y="308" width="8" height="15" fill="rgb(206,26,1)"/><text x="413.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.56%)</title><rect x="412" y="324" width="6" height="15" fill="rgb(216,35,14)"/><text x="415.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="417" y="340" width="1" height="15" fill="rgb(238,101,32)"/><text x="420.00" y="350.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.11%)</title><rect x="418" y="180" width="2" height="15" fill="rgb(219,127,24)"/><text x="421.00" y="190.50"></text></g><g><title>try_binary_elide (temp_elide.c:341) (1 samples, 0.11%)</title><rect x="418" y="196" width="2" height="15" fill="rgb(231,30,31)"/><text x="421.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c:293) (1 samples, 0.11%)</title><rect x="418" y="212" width="2" height="15" fill="rgb(228,1,2)"/><text x="421.00" y="222.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.11%)</title><rect x="418" y="228" width="2" height="15" fill="rgb(219,72,18)"/><text x="421.00" y="238.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.22%)</title><rect x="420" y="292" width="2" height="15" fill="rgb(225,96,28)"/><text x="423.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.22%)</title><rect x="420" y="308" width="2" height="15" fill="rgb(241,212,33)"/><text x="423.00" y="318.50"></text></g><g><title>array_add (number.c:330) (4 samples, 0.45%)</title><rect x="420" y="180" width="5" height="15" fill="rgb(243,227,54)"/><text x="423.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.45%)</title><rect x="420" y="196" width="5" height="15" fill="rgb(243,164,39)"/><text x="423.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.45%)</title><rect x="420" y="212" width="5" height="15" fill="rgb(207,127,20)"/><text x="423.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.45%)</title><rect x="420" y="228" width="5" height="15" fill="rgb(226,74,15)"/><text x="423.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.45%)</title><rect x="420" y="244" width="5" height="15" fill="rgb(232,60,30)"/><text x="423.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (4 samples, 0.45%)</title><rect x="420" y="260" width="5" height="15" fill="rgb(236,44,13)"/><text x="423.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (4 samples, 0.45%)</title><rect x="420" y="276" width="5" height="15" fill="rgb(244,150,21)"/><text x="423.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.22%)</title><rect x="422" y="292" width="3" height="15" fill="rgb(209,2,8)"/><text x="425.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.22%)</title><rect x="422" y="308" width="3" height="15" fill="rgb(223,141,53)"/><text x="425.00" y="318.50"></text></g><g><title>0x7fd725edba97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="425" y="244" width="1" height="15" fill="rgb(252,67,17)"/><text x="428.00" y="254.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (202 samples, 22.57%)</title><rect x="161" y="148" width="266" height="15" fill="rgb(236,223,17)"/><text x="164.00" y="158.50">predict_proba (sklearn/ensemble/_we..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (202 samples, 22.57%)</title><rect x="161" y="164" width="266" height="15" fill="rgb(212,108,29)"/><text x="164.00" y="174.50">decision_function (sklearn/ensemble..</text></g><g><title>array_dealloc (arrayobject.c:537) (2 samples, 0.22%)</title><rect x="425" y="180" width="2" height="15" fill="rgb(224,106,16)"/><text x="428.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c:147) (2 samples, 0.22%)</title><rect x="425" y="196" width="2" height="15" fill="rgb(254,199,36)"/><text x="428.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (2 samples, 0.22%)</title><rect x="425" y="212" width="2" height="15" fill="rgb(228,12,33)"/><text x="428.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (2 samples, 0.22%)</title><rect x="425" y="228" width="2" height="15" fill="rgb(221,208,15)"/><text x="428.00" y="238.50"></text></g><g><title>0x7fd725edbd2d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="426" y="244" width="1" height="15" fill="rgb(211,219,14)"/><text x="429.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:38) (317 samples, 35.42%)</title><rect x="11" y="52" width="418" height="15" fill="rgb(226,80,47)"/><text x="14.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:37) (317 samples, 35.42%)</title><rect x="11" y="68" width="418" height="15" fill="rgb(228,210,34)"/><text x="14.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_100..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:29) (317 samples, 35.42%)</title><rect x="11" y="84" width="418" height="15" fill="rgb(229,137,2)"/><text x="14.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:23) (203 samples, 22.68%)</title><rect x="161" y="100" width="268" height="15" fill="rgb(234,60,4)"/><text x="164.00" y="110.50">profile (bench_AdaBoostClassifier_d..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (203 samples, 22.68%)</title><rect x="161" y="116" width="268" height="15" fill="rgb(230,147,42)"/><text x="164.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (203 samples, 22.68%)</title><rect x="161" y="132" width="268" height="15" fill="rgb(214,155,48)"/><text x="164.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/c..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.11%)</title><rect x="427" y="148" width="2" height="15" fill="rgb(216,173,14)"/><text x="430.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.11%)</title><rect x="427" y="164" width="2" height="15" fill="rgb(226,117,31)"/><text x="430.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.11%)</title><rect x="427" y="180" width="2" height="15" fill="rgb(232,201,38)"/><text x="430.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="427" y="196" width="2" height="15" fill="rgb(230,187,46)"/><text x="430.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="427" y="212" width="2" height="15" fill="rgb(237,229,46)"/><text x="430.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.11%)</title><rect x="427" y="228" width="2" height="15" fill="rgb(210,62,44)"/><text x="430.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="427" y="244" width="2" height="15" fill="rgb(244,142,53)"/><text x="430.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="427" y="260" width="2" height="15" fill="rgb(250,84,6)"/><text x="430.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="427" y="276" width="2" height="15" fill="rgb(229,153,22)"/><text x="430.00" y="286.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:1) (1 samples, 0.11%)</title><rect x="429" y="148" width="1" height="15" fill="rgb(221,74,35)"/><text x="432.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="429" y="164" width="1" height="15" fill="rgb(253,156,33)"/><text x="432.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="429" y="180" width="1" height="15" fill="rgb(234,132,21)"/><text x="432.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="429" y="196" width="1" height="15" fill="rgb(247,204,34)"/><text x="432.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="429" y="212" width="1" height="15" fill="rgb(206,163,11)"/><text x="432.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="429" y="228" width="1" height="15" fill="rgb(247,162,26)"/><text x="432.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.11%)</title><rect x="429" y="244" width="1" height="15" fill="rgb(230,171,46)"/><text x="432.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="429" y="260" width="1" height="15" fill="rgb(219,75,7)"/><text x="432.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="429" y="276" width="1" height="15" fill="rgb(217,144,16)"/><text x="432.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="429" y="292" width="1" height="15" fill="rgb(218,134,0)"/><text x="432.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="429" y="308" width="1" height="15" fill="rgb(243,53,21)"/><text x="432.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="429" y="324" width="1" height="15" fill="rgb(218,115,26)"/><text x="432.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="429" y="340" width="1" height="15" fill="rgb(242,98,47)"/><text x="432.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="429" y="356" width="1" height="15" fill="rgb(214,120,34)"/><text x="432.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:13) (1 samples, 0.11%)</title><rect x="429" y="372" width="1" height="15" fill="rgb(223,42,4)"/><text x="432.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="429" y="388" width="1" height="15" fill="rgb(210,181,20)"/><text x="432.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="429" y="404" width="1" height="15" fill="rgb(209,210,46)"/><text x="432.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="429" y="420" width="1" height="15" fill="rgb(252,66,2)"/><text x="432.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="429" y="436" width="1" height="15" fill="rgb(210,222,37)"/><text x="432.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="429" y="452" width="1" height="15" fill="rgb(253,33,3)"/><text x="432.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/shape_base.py:1051) (1 samples, 0.11%)</title><rect x="429" y="468" width="1" height="15" fill="rgb(245,102,20)"/><text x="432.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.11%)</title><rect x="429" y="484" width="1" height="15" fill="rgb(209,144,17)"/><text x="432.00" y="494.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.11%)</title><rect x="429" y="500" width="1" height="15" fill="rgb(222,114,38)"/><text x="432.00" y="510.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.11%)</title><rect x="429" y="516" width="1" height="15" fill="rgb(245,226,6)"/><text x="432.00" y="526.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.11%)</title><rect x="429" y="532" width="1" height="15" fill="rgb(241,85,7)"/><text x="432.00" y="542.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.11%)</title><rect x="429" y="548" width="1" height="15" fill="rgb(223,26,9)"/><text x="432.00" y="558.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="429" y="564" width="1" height="15" fill="rgb(237,151,19)"/><text x="432.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:8) (1 samples, 0.11%)</title><rect x="430" y="292" width="1" height="15" fill="rgb(213,82,3)"/><text x="433.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="308" width="1" height="15" fill="rgb(223,10,5)"/><text x="433.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="324" width="1" height="15" fill="rgb(208,127,15)"/><text x="433.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.11%)</title><rect x="430" y="340" width="1" height="15" fill="rgb(254,77,36)"/><text x="433.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.11%)</title><rect x="430" y="356" width="1" height="15" fill="rgb(224,25,24)"/><text x="433.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.11%)</title><rect x="430" y="372" width="1" height="15" fill="rgb(217,162,32)"/><text x="433.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="388" width="1" height="15" fill="rgb(213,15,28)"/><text x="433.00" y="398.50"></text></g><g><title>0x7fd715f7d203 (?) (1 samples, 0.11%)</title><rect x="430" y="404" width="1" height="15" fill="rgb(248,30,25)"/><text x="433.00" y="414.50"></text></g><g><title>0x7fd715f7aded (?) (1 samples, 0.11%)</title><rect x="430" y="420" width="1" height="15" fill="rgb(244,7,46)"/><text x="433.00" y="430.50"></text></g><g><title>0x7fd715f84437 (?) (1 samples, 0.11%)</title><rect x="430" y="436" width="1" height="15" fill="rgb(218,193,24)"/><text x="433.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:23) (1 samples, 0.11%)</title><rect x="431" y="580" width="2" height="15" fill="rgb(221,191,46)"/><text x="434.00" y="590.50"></text></g><g><title>__new__ (protobuf/descriptor.py:884) (1 samples, 0.11%)</title><rect x="431" y="596" width="2" height="15" fill="rgb(239,118,40)"/><text x="434.00" y="606.50"></text></g><g><title>0x7fd714243b12 (?) (1 samples, 0.11%)</title><rect x="431" y="612" width="2" height="15" fill="rgb(231,42,28)"/><text x="434.00" y="622.50"></text></g><g><title>0x7fd714283409 (?) (1 samples, 0.11%)</title><rect x="431" y="628" width="2" height="15" fill="rgb(239,213,51)"/><text x="434.00" y="638.50"></text></g><g><title>0x7fd714282f85 (?) (1 samples, 0.11%)</title><rect x="431" y="644" width="2" height="15" fill="rgb(221,227,1)"/><text x="434.00" y="654.50"></text></g><g><title>0x7fd714281789 (?) (1 samples, 0.11%)</title><rect x="431" y="660" width="2" height="15" fill="rgb(211,36,54)"/><text x="434.00" y="670.50"></text></g><g><title>0x7fd71427e2b3 (?) (1 samples, 0.11%)</title><rect x="431" y="676" width="2" height="15" fill="rgb(228,125,25)"/><text x="434.00" y="686.50"></text></g><g><title>0x7fd71427e0fe (?) (1 samples, 0.11%)</title><rect x="431" y="692" width="2" height="15" fill="rgb(245,103,2)"/><text x="434.00" y="702.50"></text></g><g><title>0x7fd714270879 (?) (1 samples, 0.11%)</title><rect x="431" y="708" width="2" height="15" fill="rgb(231,163,33)"/><text x="434.00" y="718.50"></text></g><g><title>0x7fd71432b1a9 (?) (1 samples, 0.11%)</title><rect x="431" y="724" width="2" height="15" fill="rgb(213,114,37)"/><text x="434.00" y="734.50"></text></g><g><title>std::string::append (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="431" y="740" width="2" height="15" fill="rgb(252,211,52)"/><text x="434.00" y="750.50"></text></g><g><title>std::string::reserve (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="431" y="756" width="2" height="15" fill="rgb(209,91,44)"/><text x="434.00" y="766.50"></text></g><g><title>std::string::_Rep::_M_clone (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="431" y="772" width="2" height="15" fill="rgb(205,13,39)"/><text x="434.00" y="782.50"></text></g><g><title>std::string::_Rep::_S_create (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="431" y="788" width="2" height="15" fill="rgb(248,5,51)"/><text x="434.00" y="798.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="431" y="804" width="2" height="15" fill="rgb(224,107,23)"/><text x="434.00" y="814.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="431" y="820" width="2" height="15" fill="rgb(206,21,20)"/><text x="434.00" y="830.50"></text></g><g><title>0x7fd725edcfdd (libc-2.29.so) (1 samples, 0.11%)</title><rect x="431" y="836" width="2" height="15" fill="rgb(208,94,53)"/><text x="434.00" y="846.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2031) (1 samples, 0.11%)</title><rect x="433" y="948" width="1" height="15" fill="rgb(225,88,15)"/><text x="436.00" y="958.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.11%)</title><rect x="433" y="964" width="1" height="15" fill="rgb(220,128,44)"/><text x="436.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.11%)</title><rect x="434" y="980" width="1" height="15" fill="rgb(252,207,45)"/><text x="437.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.11%)</title><rect x="434" y="996" width="1" height="15" fill="rgb(253,227,24)"/><text x="437.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.11%)</title><rect x="435" y="1012" width="2" height="15" fill="rgb(251,200,39)"/><text x="438.00" y="1022.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 0.45%)</title><rect x="433" y="900" width="5" height="15" fill="rgb(234,137,53)"/><text x="436.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (4 samples, 0.45%)</title><rect x="433" y="916" width="5" height="15" fill="rgb(235,96,24)"/><text x="436.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (4 samples, 0.45%)</title><rect x="433" y="932" width="5" height="15" fill="rgb(249,65,46)"/><text x="436.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 0.34%)</title><rect x="434" y="948" width="4" height="15" fill="rgb(236,196,14)"/><text x="437.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 0.34%)</title><rect x="434" y="964" width="4" height="15" fill="rgb(217,177,25)"/><text x="437.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (2 samples, 0.22%)</title><rect x="435" y="980" width="3" height="15" fill="rgb(212,205,25)"/><text x="438.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (2 samples, 0.22%)</title><rect x="435" y="996" width="3" height="15" fill="rgb(242,216,32)"/><text x="438.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:152) (1 samples, 0.11%)</title><rect x="437" y="1012" width="1" height="15" fill="rgb(253,214,27)"/><text x="440.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:2) (7 samples, 0.78%)</title><rect x="430" y="148" width="9" height="15" fill="rgb(221,196,29)"/><text x="433.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="430" y="164" width="9" height="15" fill="rgb(242,202,16)"/><text x="433.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 0.78%)</title><rect x="430" y="180" width="9" height="15" fill="rgb(235,185,16)"/><text x="433.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="430" y="196" width="9" height="15" fill="rgb(231,197,8)"/><text x="433.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="430" y="212" width="9" height="15" fill="rgb(243,0,16)"/><text x="433.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.78%)</title><rect x="430" y="228" width="9" height="15" fill="rgb(248,11,15)"/><text x="433.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.78%)</title><rect x="430" y="244" width="9" height="15" fill="rgb(243,106,16)"/><text x="433.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.78%)</title><rect x="430" y="260" width="9" height="15" fill="rgb(218,169,16)"/><text x="433.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="430" y="276" width="9" height="15" fill="rgb(213,94,17)"/><text x="433.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 0.67%)</title><rect x="431" y="292" width="8" height="15" fill="rgb(237,28,0)"/><text x="434.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.67%)</title><rect x="431" y="308" width="8" height="15" fill="rgb(205,20,40)"/><text x="434.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.67%)</title><rect x="431" y="324" width="8" height="15" fill="rgb(238,41,10)"/><text x="434.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.67%)</title><rect x="431" y="340" width="8" height="15" fill="rgb(225,34,32)"/><text x="434.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.67%)</title><rect x="431" y="356" width="8" height="15" fill="rgb(216,27,47)"/><text x="434.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="431" y="372" width="8" height="15" fill="rgb(226,162,13)"/><text x="434.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 0.67%)</title><rect x="431" y="388" width="8" height="15" fill="rgb(211,55,13)"/><text x="434.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.67%)</title><rect x="431" y="404" width="8" height="15" fill="rgb(224,23,33)"/><text x="434.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.67%)</title><rect x="431" y="420" width="8" height="15" fill="rgb(216,80,11)"/><text x="434.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.67%)</title><rect x="431" y="436" width="8" height="15" fill="rgb(246,163,15)"/><text x="434.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.67%)</title><rect x="431" y="452" width="8" height="15" fill="rgb(226,166,9)"/><text x="434.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="431" y="468" width="8" height="15" fill="rgb(209,117,21)"/><text x="434.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 0.67%)</title><rect x="431" y="484" width="8" height="15" fill="rgb(208,192,6)"/><text x="434.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.67%)</title><rect x="431" y="500" width="8" height="15" fill="rgb(226,125,24)"/><text x="434.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.67%)</title><rect x="431" y="516" width="8" height="15" fill="rgb(236,178,29)"/><text x="434.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.67%)</title><rect x="431" y="532" width="8" height="15" fill="rgb(212,215,14)"/><text x="434.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.67%)</title><rect x="431" y="548" width="8" height="15" fill="rgb(222,189,51)"/><text x="434.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="431" y="564" width="8" height="15" fill="rgb(221,159,17)"/><text x="434.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.56%)</title><rect x="433" y="580" width="6" height="15" fill="rgb(229,36,20)"/><text x="436.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="433" y="596" width="6" height="15" fill="rgb(232,167,25)"/><text x="436.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.56%)</title><rect x="433" y="612" width="6" height="15" fill="rgb(222,87,24)"/><text x="436.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="433" y="628" width="6" height="15" fill="rgb(246,117,7)"/><text x="436.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="433" y="644" width="6" height="15" fill="rgb(218,174,13)"/><text x="436.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="433" y="660" width="6" height="15" fill="rgb(221,152,52)"/><text x="436.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="433" y="676" width="6" height="15" fill="rgb(232,128,48)"/><text x="436.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="433" y="692" width="6" height="15" fill="rgb(224,41,38)"/><text x="436.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="433" y="708" width="6" height="15" fill="rgb(243,27,28)"/><text x="436.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.56%)</title><rect x="433" y="724" width="6" height="15" fill="rgb(205,222,10)"/><text x="436.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="433" y="740" width="6" height="15" fill="rgb(234,79,5)"/><text x="436.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="433" y="756" width="6" height="15" fill="rgb(212,104,38)"/><text x="436.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="433" y="772" width="6" height="15" fill="rgb(244,39,5)"/><text x="436.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="433" y="788" width="6" height="15" fill="rgb(228,117,29)"/><text x="436.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="433" y="804" width="6" height="15" fill="rgb(213,12,30)"/><text x="436.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.56%)</title><rect x="433" y="820" width="6" height="15" fill="rgb(244,45,40)"/><text x="436.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.56%)</title><rect x="433" y="836" width="6" height="15" fill="rgb(238,50,33)"/><text x="436.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (5 samples, 0.56%)</title><rect x="433" y="852" width="6" height="15" fill="rgb(222,10,13)"/><text x="436.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (5 samples, 0.56%)</title><rect x="433" y="868" width="6" height="15" fill="rgb(222,151,49)"/><text x="436.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (5 samples, 0.56%)</title><rect x="433" y="884" width="6" height="15" fill="rgb(243,3,3)"/><text x="436.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.11%)</title><rect x="438" y="900" width="1" height="15" fill="rgb(210,126,36)"/><text x="441.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.11%)</title><rect x="438" y="916" width="1" height="15" fill="rgb(233,179,4)"/><text x="441.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:4) (1 samples, 0.11%)</title><rect x="439" y="148" width="2" height="15" fill="rgb(254,158,50)"/><text x="442.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="164" width="2" height="15" fill="rgb(225,75,46)"/><text x="442.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="180" width="2" height="15" fill="rgb(249,66,42)"/><text x="442.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="196" width="2" height="15" fill="rgb(224,79,39)"/><text x="442.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="439" y="212" width="2" height="15" fill="rgb(207,32,31)"/><text x="442.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="228" width="2" height="15" fill="rgb(224,71,51)"/><text x="442.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.11%)</title><rect x="439" y="244" width="2" height="15" fill="rgb(253,22,16)"/><text x="442.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="260" width="2" height="15" fill="rgb(251,1,7)"/><text x="442.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="276" width="2" height="15" fill="rgb(247,169,16)"/><text x="442.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="292" width="2" height="15" fill="rgb(225,221,30)"/><text x="442.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="439" y="308" width="2" height="15" fill="rgb(236,73,48)"/><text x="442.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="324" width="2" height="15" fill="rgb(224,40,11)"/><text x="442.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.11%)</title><rect x="439" y="340" width="2" height="15" fill="rgb(227,64,7)"/><text x="442.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="356" width="2" height="15" fill="rgb(225,111,42)"/><text x="442.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="372" width="2" height="15" fill="rgb(249,217,12)"/><text x="442.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="388" width="2" height="15" fill="rgb(209,99,7)"/><text x="442.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="439" y="404" width="2" height="15" fill="rgb(213,218,32)"/><text x="442.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="420" width="2" height="15" fill="rgb(232,66,12)"/><text x="442.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.11%)</title><rect x="439" y="436" width="2" height="15" fill="rgb(228,205,53)"/><text x="442.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="452" width="2" height="15" fill="rgb(227,227,23)"/><text x="442.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="468" width="2" height="15" fill="rgb(214,107,4)"/><text x="442.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="484" width="2" height="15" fill="rgb(244,210,41)"/><text x="442.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="439" y="500" width="2" height="15" fill="rgb(226,143,43)"/><text x="442.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="516" width="2" height="15" fill="rgb(240,194,0)"/><text x="442.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.11%)</title><rect x="439" y="532" width="2" height="15" fill="rgb(243,204,27)"/><text x="442.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="548" width="2" height="15" fill="rgb(230,19,3)"/><text x="442.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="564" width="2" height="15" fill="rgb(213,79,54)"/><text x="442.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="580" width="2" height="15" fill="rgb(251,95,5)"/><text x="442.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="439" y="596" width="2" height="15" fill="rgb(241,51,9)"/><text x="442.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="612" width="2" height="15" fill="rgb(234,188,29)"/><text x="442.00" y="622.50"></text></g><g><title>0x7fd6ffda2373 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="439" y="628" width="2" height="15" fill="rgb(239,133,9)"/><text x="442.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="644" width="2" height="15" fill="rgb(240,146,4)"/><text x="442.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="660" width="2" height="15" fill="rgb(228,216,3)"/><text x="442.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="676" width="2" height="15" fill="rgb(224,107,16)"/><text x="442.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="439" y="692" width="2" height="15" fill="rgb(225,87,7)"/><text x="442.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="708" width="2" height="15" fill="rgb(205,117,48)"/><text x="442.00" y="718.50"></text></g><g><title>0x7fd6ffb65eea (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="439" y="724" width="2" height="15" fill="rgb(231,176,2)"/><text x="442.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="740" width="2" height="15" fill="rgb(254,17,34)"/><text x="442.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="756" width="2" height="15" fill="rgb(206,74,24)"/><text x="442.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="772" width="2" height="15" fill="rgb(226,65,22)"/><text x="442.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="439" y="788" width="2" height="15" fill="rgb(225,157,8)"/><text x="442.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="804" width="2" height="15" fill="rgb(242,218,19)"/><text x="442.00" y="814.50"></text></g><g><title>0x7fd6ff8fe887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="439" y="820" width="2" height="15" fill="rgb(227,126,36)"/><text x="442.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="836" width="2" height="15" fill="rgb(233,97,3)"/><text x="442.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="852" width="2" height="15" fill="rgb(240,52,5)"/><text x="442.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="868" width="2" height="15" fill="rgb(223,53,48)"/><text x="442.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="439" y="884" width="2" height="15" fill="rgb(250,17,0)"/><text x="442.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="900" width="2" height="15" fill="rgb(236,202,4)"/><text x="442.00" y="910.50"></text></g><g><title>0x7fd6fcf385e5 (sklearn/neighbors/_quad_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="439" y="916" width="2" height="15" fill="rgb(244,131,14)"/><text x="442.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="932" width="2" height="15" fill="rgb(234,88,35)"/><text x="442.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="948" width="2" height="15" fill="rgb(237,4,35)"/><text x="442.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="964" width="2" height="15" fill="rgb(215,214,49)"/><text x="442.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="439" y="980" width="2" height="15" fill="rgb(247,223,48)"/><text x="442.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="996" width="2" height="15" fill="rgb(254,211,46)"/><text x="442.00" y="1006.50"></text></g><g><title>0x7fd6fccfffd0 (sklearn/tree/_utils.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="439" y="1012" width="2" height="15" fill="rgb(222,53,34)"/><text x="442.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.11%)</title><rect x="441" y="484" width="1" height="15" fill="rgb(246,219,36)"/><text x="444.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="441" y="500" width="1" height="15" fill="rgb(214,211,18)"/><text x="444.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="441" y="516" width="1" height="15" fill="rgb(207,209,30)"/><text x="444.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="441" y="532" width="1" height="15" fill="rgb(207,36,42)"/><text x="444.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="441" y="548" width="1" height="15" fill="rgb(244,143,26)"/><text x="444.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="441" y="564" width="1" height="15" fill="rgb(225,12,14)"/><text x="444.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:17) (1 samples, 0.11%)</title><rect x="441" y="580" width="1" height="15" fill="rgb(241,51,26)"/><text x="444.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="441" y="596" width="1" height="15" fill="rgb(248,6,17)"/><text x="444.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="441" y="612" width="1" height="15" fill="rgb(219,65,21)"/><text x="444.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="441" y="628" width="1" height="15" fill="rgb(205,52,52)"/><text x="444.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="441" y="644" width="1" height="15" fill="rgb(209,68,17)"/><text x="444.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="441" y="660" width="1" height="15" fill="rgb(216,91,35)"/><text x="444.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py:58) (1 samples, 0.11%)</title><rect x="441" y="676" width="1" height="15" fill="rgb(211,189,35)"/><text x="444.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py:35) (1 samples, 0.11%)</title><rect x="441" y="692" width="1" height="15" fill="rgb(208,211,39)"/><text x="444.00" y="702.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.22%)</title><rect x="441" y="244" width="2" height="15" fill="rgb(231,162,33)"/><text x="444.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="441" y="260" width="2" height="15" fill="rgb(250,73,46)"/><text x="444.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="441" y="276" width="2" height="15" fill="rgb(205,211,2)"/><text x="444.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="441" y="292" width="2" height="15" fill="rgb(240,129,54)"/><text x="444.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="441" y="308" width="2" height="15" fill="rgb(211,113,29)"/><text x="444.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="441" y="324" width="2" height="15" fill="rgb(223,97,45)"/><text x="444.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.22%)</title><rect x="441" y="340" width="2" height="15" fill="rgb(210,70,2)"/><text x="444.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="441" y="356" width="2" height="15" fill="rgb(254,166,38)"/><text x="444.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="441" y="372" width="2" height="15" fill="rgb(224,54,13)"/><text x="444.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="441" y="388" width="2" height="15" fill="rgb(250,181,38)"/><text x="444.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="441" y="404" width="2" height="15" fill="rgb(238,63,27)"/><text x="444.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="441" y="420" width="2" height="15" fill="rgb(212,106,2)"/><text x="444.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="441" y="436" width="2" height="15" fill="rgb(236,159,42)"/><text x="444.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="441" y="452" width="2" height="15" fill="rgb(250,140,7)"/><text x="444.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="441" y="468" width="2" height="15" fill="rgb(232,225,4)"/><text x="444.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.11%)</title><rect x="442" y="484" width="1" height="15" fill="rgb(231,216,16)"/><text x="445.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="442" y="500" width="1" height="15" fill="rgb(254,43,6)"/><text x="445.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="442" y="516" width="1" height="15" fill="rgb(241,128,35)"/><text x="445.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="442" y="532" width="1" height="15" fill="rgb(247,41,20)"/><text x="445.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="442" y="548" width="1" height="15" fill="rgb(223,36,49)"/><text x="445.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="442" y="564" width="1" height="15" fill="rgb(240,195,13)"/><text x="445.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.11%)</title><rect x="442" y="580" width="1" height="15" fill="rgb(225,161,26)"/><text x="445.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="442" y="596" width="1" height="15" fill="rgb(234,215,10)"/><text x="445.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="442" y="612" width="1" height="15" fill="rgb(235,75,36)"/><text x="445.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="442" y="628" width="1" height="15" fill="rgb(207,16,23)"/><text x="445.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="442" y="644" width="1" height="15" fill="rgb(247,48,30)"/><text x="445.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="442" y="660" width="1" height="15" fill="rgb(254,173,0)"/><text x="445.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.11%)</title><rect x="442" y="676" width="1" height="15" fill="rgb(230,58,45)"/><text x="445.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="442" y="692" width="1" height="15" fill="rgb(218,158,21)"/><text x="445.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="442" y="708" width="1" height="15" fill="rgb(242,218,31)"/><text x="445.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="442" y="724" width="1" height="15" fill="rgb(238,51,8)"/><text x="445.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="442" y="740" width="1" height="15" fill="rgb(215,116,0)"/><text x="445.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="442" y="756" width="1" height="15" fill="rgb(212,171,28)"/><text x="445.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:270) (1 samples, 0.11%)</title><rect x="442" y="772" width="1" height="15" fill="rgb(235,105,4)"/><text x="445.00" y="782.50"></text></g><g><title>register_check (pycodestyle.py:183) (1 samples, 0.11%)</title><rect x="442" y="788" width="1" height="15" fill="rgb(219,229,31)"/><text x="445.00" y="798.50"></text></g><g><title>_get_parameters (pycodestyle.py:169) (1 samples, 0.11%)</title><rect x="442" y="804" width="1" height="15" fill="rgb(238,204,26)"/><text x="445.00" y="814.50"></text></g><g><title>&lt;listcomp&gt; (pycodestyle.py:170) (1 samples, 0.11%)</title><rect x="442" y="820" width="1" height="15" fill="rgb(234,166,37)"/><text x="445.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.11%)</title><rect x="443" y="340" width="2" height="15" fill="rgb(213,41,46)"/><text x="446.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="443" y="356" width="2" height="15" fill="rgb(217,114,2)"/><text x="446.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="443" y="372" width="2" height="15" fill="rgb(235,138,29)"/><text x="446.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="443" y="388" width="2" height="15" fill="rgb(230,212,18)"/><text x="446.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="443" y="404" width="2" height="15" fill="rgb(235,106,54)"/><text x="446.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="443" y="420" width="2" height="15" fill="rgb(205,161,31)"/><text x="446.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.11%)</title><rect x="443" y="436" width="2" height="15" fill="rgb(236,197,3)"/><text x="446.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="443" y="452" width="2" height="15" fill="rgb(252,211,20)"/><text x="446.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="443" y="468" width="2" height="15" fill="rgb(217,108,14)"/><text x="446.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="443" y="484" width="2" height="15" fill="rgb(250,110,11)"/><text x="446.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="443" y="500" width="2" height="15" fill="rgb(205,29,42)"/><text x="446.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="443" y="516" width="2" height="15" fill="rgb(254,23,15)"/><text x="446.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.11%)</title><rect x="443" y="532" width="2" height="15" fill="rgb(243,85,31)"/><text x="446.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="443" y="548" width="2" height="15" fill="rgb(237,183,20)"/><text x="446.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="443" y="564" width="2" height="15" fill="rgb(234,47,52)"/><text x="446.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="443" y="580" width="2" height="15" fill="rgb(222,40,47)"/><text x="446.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="443" y="596" width="2" height="15" fill="rgb(212,135,24)"/><text x="446.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="443" y="612" width="2" height="15" fill="rgb(250,10,14)"/><text x="446.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:1031) (1 samples, 0.11%)</title><rect x="443" y="628" width="2" height="15" fill="rgb(222,27,54)"/><text x="446.00" y="638.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.11%)</title><rect x="445" y="436" width="1" height="15" fill="rgb(232,195,35)"/><text x="448.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="452" width="1" height="15" fill="rgb(232,152,5)"/><text x="448.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="468" width="1" height="15" fill="rgb(207,200,50)"/><text x="448.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="484" width="1" height="15" fill="rgb(220,223,11)"/><text x="448.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="500" width="1" height="15" fill="rgb(233,153,13)"/><text x="448.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="516" width="1" height="15" fill="rgb(214,116,30)"/><text x="448.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.11%)</title><rect x="445" y="532" width="1" height="15" fill="rgb(240,135,35)"/><text x="448.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="548" width="1" height="15" fill="rgb(252,133,34)"/><text x="448.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="564" width="1" height="15" fill="rgb(221,123,11)"/><text x="448.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="580" width="1" height="15" fill="rgb(208,18,54)"/><text x="448.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="596" width="1" height="15" fill="rgb(209,136,19)"/><text x="448.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="612" width="1" height="15" fill="rgb(243,83,31)"/><text x="448.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.11%)</title><rect x="445" y="628" width="1" height="15" fill="rgb(230,209,41)"/><text x="448.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="644" width="1" height="15" fill="rgb(245,35,22)"/><text x="448.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="660" width="1" height="15" fill="rgb(239,91,22)"/><text x="448.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="676" width="1" height="15" fill="rgb(247,197,38)"/><text x="448.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="692" width="1" height="15" fill="rgb(218,183,38)"/><text x="448.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="708" width="1" height="15" fill="rgb(217,179,33)"/><text x="448.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.11%)</title><rect x="445" y="724" width="1" height="15" fill="rgb(248,184,15)"/><text x="448.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="740" width="1" height="15" fill="rgb(251,57,43)"/><text x="448.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="756" width="1" height="15" fill="rgb(254,155,51)"/><text x="448.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="772" width="1" height="15" fill="rgb(207,229,42)"/><text x="448.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="788" width="1" height="15" fill="rgb(228,81,14)"/><text x="448.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="804" width="1" height="15" fill="rgb(235,178,19)"/><text x="448.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.11%)</title><rect x="445" y="820" width="1" height="15" fill="rgb(235,92,4)"/><text x="448.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="836" width="1" height="15" fill="rgb(235,157,15)"/><text x="448.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="852" width="1" height="15" fill="rgb(231,9,14)"/><text x="448.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="868" width="1" height="15" fill="rgb(207,192,7)"/><text x="448.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="884" width="1" height="15" fill="rgb(233,159,43)"/><text x="448.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="900" width="1" height="15" fill="rgb(206,224,49)"/><text x="448.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.11%)</title><rect x="445" y="916" width="1" height="15" fill="rgb(248,127,53)"/><text x="448.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="932" width="1" height="15" fill="rgb(224,226,40)"/><text x="448.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="948" width="1" height="15" fill="rgb(218,119,34)"/><text x="448.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="964" width="1" height="15" fill="rgb(228,74,28)"/><text x="448.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="980" width="1" height="15" fill="rgb(215,141,14)"/><text x="448.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="996" width="1" height="15" fill="rgb(221,25,51)"/><text x="448.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.11%)</title><rect x="445" y="1012" width="1" height="15" fill="rgb(237,183,36)"/><text x="448.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1028" width="1" height="15" fill="rgb(231,222,6)"/><text x="448.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1044" width="1" height="15" fill="rgb(253,98,32)"/><text x="448.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1060" width="1" height="15" fill="rgb(247,147,35)"/><text x="448.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1076" width="1" height="15" fill="rgb(232,174,51)"/><text x="448.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1092" width="1" height="15" fill="rgb(216,121,19)"/><text x="448.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.11%)</title><rect x="445" y="1108" width="1" height="15" fill="rgb(205,159,17)"/><text x="448.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1124" width="1" height="15" fill="rgb(253,189,43)"/><text x="448.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1140" width="1" height="15" fill="rgb(251,178,5)"/><text x="448.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1156" width="1" height="15" fill="rgb(238,194,51)"/><text x="448.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1172" width="1" height="15" fill="rgb(213,27,26)"/><text x="448.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1188" width="1" height="15" fill="rgb(249,71,10)"/><text x="448.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.11%)</title><rect x="445" y="1204" width="1" height="15" fill="rgb(244,80,30)"/><text x="448.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1220" width="1" height="15" fill="rgb(223,198,40)"/><text x="448.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1236" width="1" height="15" fill="rgb(230,137,21)"/><text x="448.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1252" width="1" height="15" fill="rgb(240,122,45)"/><text x="448.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1268" width="1" height="15" fill="rgb(217,3,41)"/><text x="448.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1284" width="1" height="15" fill="rgb(235,17,12)"/><text x="448.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.11%)</title><rect x="445" y="1300" width="1" height="15" fill="rgb(238,36,47)"/><text x="448.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1316" width="1" height="15" fill="rgb(247,196,52)"/><text x="448.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1332" width="1" height="15" fill="rgb(233,27,37)"/><text x="448.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1348" width="1" height="15" fill="rgb(216,135,43)"/><text x="448.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1364" width="1" height="15" fill="rgb(245,7,49)"/><text x="448.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1380" width="1" height="15" fill="rgb(247,27,2)"/><text x="448.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.11%)</title><rect x="445" y="1396" width="1" height="15" fill="rgb(218,183,33)"/><text x="448.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1412" width="1" height="15" fill="rgb(229,24,1)"/><text x="448.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1428" width="1" height="15" fill="rgb(241,25,44)"/><text x="448.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1444" width="1" height="15" fill="rgb(207,137,26)"/><text x="448.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1460" width="1" height="15" fill="rgb(233,204,52)"/><text x="448.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1476" width="1" height="15" fill="rgb(225,165,48)"/><text x="448.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.11%)</title><rect x="445" y="1492" width="1" height="15" fill="rgb(207,113,11)"/><text x="448.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1508" width="1" height="15" fill="rgb(222,217,4)"/><text x="448.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="445" y="1524" width="1" height="15" fill="rgb(234,47,27)"/><text x="448.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1540" width="1" height="15" fill="rgb(228,185,10)"/><text x="448.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1556" width="1" height="15" fill="rgb(244,9,52)"/><text x="448.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1572" width="1" height="15" fill="rgb(210,36,15)"/><text x="448.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1588" width="1" height="15" fill="rgb(245,162,44)"/><text x="448.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1604" width="1" height="15" fill="rgb(227,180,24)"/><text x="448.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1620" width="1" height="15" fill="rgb(212,129,34)"/><text x="448.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.11%)</title><rect x="445" y="1636" width="1" height="15" fill="rgb(249,190,33)"/><text x="448.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="445" y="1652" width="1" height="15" fill="rgb(214,218,41)"/><text x="448.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1668" width="1" height="15" fill="rgb(250,19,42)"/><text x="448.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1684" width="1" height="15" fill="rgb(253,222,48)"/><text x="448.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1700" width="1" height="15" fill="rgb(242,201,47)"/><text x="448.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1716" width="1" height="15" fill="rgb(224,197,18)"/><text x="448.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1732" width="1" height="15" fill="rgb(210,57,33)"/><text x="448.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1748" width="1" height="15" fill="rgb(217,95,46)"/><text x="448.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.11%)</title><rect x="445" y="1764" width="1" height="15" fill="rgb(250,62,0)"/><text x="448.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="445" y="1780" width="1" height="15" fill="rgb(231,5,3)"/><text x="448.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="445" y="1796" width="1" height="15" fill="rgb(226,141,2)"/><text x="448.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="445" y="1812" width="1" height="15" fill="rgb(246,179,22)"/><text x="448.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="445" y="1828" width="1" height="15" fill="rgb(254,136,25)"/><text x="448.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="445" y="1844" width="1" height="15" fill="rgb(229,69,15)"/><text x="448.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:26) (1 samples, 0.11%)</title><rect x="445" y="1860" width="1" height="15" fill="rgb(224,125,16)"/><text x="448.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="445" y="1876" width="1" height="15" fill="rgb(211,194,25)"/><text x="448.00" y="1886.50"></text></g><g><title>_compile (re.py:279) (1 samples, 0.11%)</title><rect x="445" y="1892" width="1" height="15" fill="rgb(216,214,32)"/><text x="448.00" y="1902.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.11%)</title><rect x="446" y="1108" width="1" height="15" fill="rgb(216,137,0)"/><text x="449.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="446" y="1124" width="1" height="15" fill="rgb(220,190,16)"/><text x="449.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="446" y="1140" width="1" height="15" fill="rgb(247,4,50)"/><text x="449.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="446" y="1156" width="1" height="15" fill="rgb(221,200,2)"/><text x="449.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="446" y="1172" width="1" height="15" fill="rgb(229,36,0)"/><text x="449.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="446" y="1188" width="1" height="15" fill="rgb(227,14,30)"/><text x="449.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.11%)</title><rect x="446" y="1204" width="1" height="15" fill="rgb(246,157,10)"/><text x="449.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="446" y="1220" width="1" height="15" fill="rgb(239,99,47)"/><text x="449.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="446" y="1236" width="1" height="15" fill="rgb(228,54,39)"/><text x="449.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="446" y="1252" width="1" height="15" fill="rgb(210,178,5)"/><text x="449.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="446" y="1268" width="1" height="15" fill="rgb(212,135,33)"/><text x="449.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="446" y="1284" width="1" height="15" fill="rgb(219,217,8)"/><text x="449.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.11%)</title><rect x="446" y="1300" width="1" height="15" fill="rgb(205,78,11)"/><text x="449.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.11%)</title><rect x="446" y="1316" width="1" height="15" fill="rgb(245,94,38)"/><text x="449.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.11%)</title><rect x="446" y="1332" width="1" height="15" fill="rgb(248,162,17)"/><text x="449.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.11%)</title><rect x="446" y="1348" width="1" height="15" fill="rgb(243,212,5)"/><text x="449.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.11%)</title><rect x="446" y="1364" width="1" height="15" fill="rgb(232,203,48)"/><text x="449.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.11%)</title><rect x="446" y="1380" width="1" height="15" fill="rgb(232,14,16)"/><text x="449.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.11%)</title><rect x="446" y="1396" width="1" height="15" fill="rgb(244,181,39)"/><text x="449.00" y="1406.50"></text></g><g><title>0x7fd725edbb35 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="446" y="1412" width="1" height="15" fill="rgb(249,76,51)"/><text x="449.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:107) (1 samples, 0.11%)</title><rect x="447" y="1572" width="2" height="15" fill="rgb(234,0,51)"/><text x="450.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.11%)</title><rect x="447" y="1588" width="2" height="15" fill="rgb(223,202,37)"/><text x="450.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="447" y="1604" width="2" height="15" fill="rgb(251,228,31)"/><text x="450.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="447" y="1620" width="2" height="15" fill="rgb(237,101,23)"/><text x="450.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="447" y="1636" width="2" height="15" fill="rgb(226,61,47)"/><text x="450.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="447" y="1652" width="2" height="15" fill="rgb(207,48,10)"/><text x="450.00" y="1662.50"></text></g><g><title>pybind11::detail::instance::allocate_layout (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="447" y="1668" width="2" height="15" fill="rgb(208,32,49)"/><text x="450.00" y="1678.50"></text></g><g><title>pybind11::detail::all_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="447" y="1684" width="2" height="15" fill="rgb(233,206,49)"/><text x="450.00" y="1694.50"></text></g><g><title>root (&lt;template&gt;:138) (1 samples, 0.11%)</title><rect x="449" y="1572" width="1" height="15" fill="rgb(220,43,20)"/><text x="452.00" y="1582.50"></text></g><g><title>root (&lt;template&gt;:73) (1 samples, 0.11%)</title><rect x="450" y="1572" width="1" height="15" fill="rgb(222,126,10)"/><text x="453.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.11%)</title><rect x="450" y="1588" width="1" height="15" fill="rgb(219,183,33)"/><text x="453.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="450" y="1604" width="1" height="15" fill="rgb(239,149,21)"/><text x="453.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;::def_readonly&lt;onnx::OpSchema::Attribute, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::Attribute::*, const&amp;)::{lambda(onnx::OpSchema::Attribute const&amp;)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::Attribute const&amp;, pybind11::is_method&gt;(pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;::def_readonly&lt;onnx::OpSchema::Attribute, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::Attribute::*, const&amp;)::{lambda(onnx::OpSchema::Attribute const&amp;)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema::Attribute const&amp;), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="450" y="1620" width="1" height="15" fill="rgb(241,215,1)"/><text x="453.00" y="1630.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.594] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="450" y="1636" width="1" height="15" fill="rgb(233,29,14)"/><text x="453.00" y="1646.50"></text></g><g><title>0x7fd715f76b90 (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="450" y="1652" width="1" height="15" fill="rgb(232,25,33)"/><text x="453.00" y="1662.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 0.45%)</title><rect x="447" y="1460" width="5" height="15" fill="rgb(219,95,36)"/><text x="450.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 0.45%)</title><rect x="447" y="1476" width="5" height="15" fill="rgb(244,128,0)"/><text x="450.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (4 samples, 0.45%)</title><rect x="447" y="1492" width="5" height="15" fill="rgb(206,180,17)"/><text x="450.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (4 samples, 0.45%)</title><rect x="447" y="1508" width="5" height="15" fill="rgb(232,86,27)"/><text x="450.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (4 samples, 0.45%)</title><rect x="447" y="1524" width="5" height="15" fill="rgb(238,142,37)"/><text x="450.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (4 samples, 0.45%)</title><rect x="447" y="1540" width="5" height="15" fill="rgb(231,66,4)"/><text x="450.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (4 samples, 0.45%)</title><rect x="447" y="1556" width="5" height="15" fill="rgb(226,86,37)"/><text x="450.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.11%)</title><rect x="451" y="1572" width="1" height="15" fill="rgb(216,168,26)"/><text x="454.00" y="1582.50"></text></g><g><title>0x7fd7142287d7 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="451" y="1588" width="1" height="15" fill="rgb(218,53,17)"/><text x="454.00" y="1598.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="451" y="1604" width="1" height="15" fill="rgb(217,72,48)"/><text x="454.00" y="1614.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="451" y="1620" width="1" height="15" fill="rgb(250,201,17)"/><text x="454.00" y="1630.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.11%)</title><rect x="452" y="1668" width="2" height="15" fill="rgb(226,98,21)"/><text x="455.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1684" width="2" height="15" fill="rgb(242,44,8)"/><text x="455.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1700" width="2" height="15" fill="rgb(225,67,47)"/><text x="455.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1716" width="2" height="15" fill="rgb(246,63,0)"/><text x="455.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1732" width="2" height="15" fill="rgb(247,179,40)"/><text x="455.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1748" width="2" height="15" fill="rgb(219,118,31)"/><text x="455.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:22) (1 samples, 0.11%)</title><rect x="452" y="1764" width="2" height="15" fill="rgb(222,102,16)"/><text x="455.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1780" width="2" height="15" fill="rgb(217,181,2)"/><text x="455.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1796" width="2" height="15" fill="rgb(235,8,28)"/><text x="455.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1812" width="2" height="15" fill="rgb(225,36,44)"/><text x="455.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1828" width="2" height="15" fill="rgb(242,211,35)"/><text x="455.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1844" width="2" height="15" fill="rgb(233,70,1)"/><text x="455.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/lexer.py:46) (1 samples, 0.11%)</title><rect x="452" y="1860" width="2" height="15" fill="rgb(208,46,26)"/><text x="455.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="452" y="1876" width="2" height="15" fill="rgb(239,149,10)"/><text x="455.00" y="1886.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="452" y="1892" width="2" height="15" fill="rgb(234,229,43)"/><text x="455.00" y="1902.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.11%)</title><rect x="452" y="1908" width="2" height="15" fill="rgb(237,144,5)"/><text x="455.00" y="1918.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.11%)</title><rect x="452" y="1924" width="2" height="15" fill="rgb(207,208,45)"/><text x="455.00" y="1934.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.11%)</title><rect x="452" y="1940" width="2" height="15" fill="rgb(233,124,29)"/><text x="455.00" y="1950.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.11%)</title><rect x="452" y="1956" width="2" height="15" fill="rgb(227,57,16)"/><text x="455.00" y="1966.50"></text></g><g><title>_optimize_charset (sre_compile.py:296) (1 samples, 0.11%)</title><rect x="452" y="1972" width="2" height="15" fill="rgb(224,20,52)"/><text x="455.00" y="1982.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:4) (20 samples, 2.23%)</title><rect x="429" y="52" width="26" height="15" fill="rgb(215,21,20)"/><text x="432.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 2.23%)</title><rect x="429" y="68" width="26" height="15" fill="rgb(209,161,27)"/><text x="432.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 2.23%)</title><rect x="429" y="84" width="26" height="15" fill="rgb(252,112,51)"/><text x="432.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 2.23%)</title><rect x="429" y="100" width="26" height="15" fill="rgb(210,26,4)"/><text x="432.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 2.23%)</title><rect x="429" y="116" width="26" height="15" fill="rgb(220,114,28)"/><text x="432.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 2.23%)</title><rect x="429" y="132" width="26" height="15" fill="rgb(221,106,20)"/><text x="432.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:7) (11 samples, 1.23%)</title><rect x="441" y="148" width="14" height="15" fill="rgb(240,67,39)"/><text x="444.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.23%)</title><rect x="441" y="164" width="14" height="15" fill="rgb(228,220,36)"/><text x="444.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 1.23%)</title><rect x="441" y="180" width="14" height="15" fill="rgb(233,63,1)"/><text x="444.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 1.23%)</title><rect x="441" y="196" width="14" height="15" fill="rgb(235,222,49)"/><text x="444.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 1.23%)</title><rect x="441" y="212" width="14" height="15" fill="rgb(219,52,34)"/><text x="444.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.23%)</title><rect x="441" y="228" width="14" height="15" fill="rgb(230,79,1)"/><text x="444.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 1.01%)</title><rect x="443" y="244" width="12" height="15" fill="rgb(250,203,45)"/><text x="446.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.01%)</title><rect x="443" y="260" width="12" height="15" fill="rgb(214,78,37)"/><text x="446.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.01%)</title><rect x="443" y="276" width="12" height="15" fill="rgb(233,84,46)"/><text x="446.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.01%)</title><rect x="443" y="292" width="12" height="15" fill="rgb(212,117,19)"/><text x="446.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.01%)</title><rect x="443" y="308" width="12" height="15" fill="rgb(234,53,52)"/><text x="446.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.01%)</title><rect x="443" y="324" width="12" height="15" fill="rgb(251,36,16)"/><text x="446.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 0.89%)</title><rect x="445" y="340" width="10" height="15" fill="rgb(209,35,21)"/><text x="448.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.89%)</title><rect x="445" y="356" width="10" height="15" fill="rgb(218,12,16)"/><text x="448.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.89%)</title><rect x="445" y="372" width="10" height="15" fill="rgb(242,113,25)"/><text x="448.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.89%)</title><rect x="445" y="388" width="10" height="15" fill="rgb(223,217,14)"/><text x="448.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.89%)</title><rect x="445" y="404" width="10" height="15" fill="rgb(228,21,50)"/><text x="448.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.89%)</title><rect x="445" y="420" width="10" height="15" fill="rgb(239,13,44)"/><text x="448.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 0.78%)</title><rect x="446" y="436" width="9" height="15" fill="rgb(251,95,35)"/><text x="449.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="452" width="9" height="15" fill="rgb(216,58,31)"/><text x="449.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 0.78%)</title><rect x="446" y="468" width="9" height="15" fill="rgb(213,228,44)"/><text x="449.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="484" width="9" height="15" fill="rgb(213,197,46)"/><text x="449.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="500" width="9" height="15" fill="rgb(252,119,24)"/><text x="449.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.78%)</title><rect x="446" y="516" width="9" height="15" fill="rgb(241,193,37)"/><text x="449.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.78%)</title><rect x="446" y="532" width="9" height="15" fill="rgb(250,221,44)"/><text x="449.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.78%)</title><rect x="446" y="548" width="9" height="15" fill="rgb(216,179,32)"/><text x="449.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="564" width="9" height="15" fill="rgb(248,168,54)"/><text x="449.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 0.78%)</title><rect x="446" y="580" width="9" height="15" fill="rgb(242,222,38)"/><text x="449.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="596" width="9" height="15" fill="rgb(218,158,47)"/><text x="449.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.78%)</title><rect x="446" y="612" width="9" height="15" fill="rgb(242,103,31)"/><text x="449.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.78%)</title><rect x="446" y="628" width="9" height="15" fill="rgb(214,38,53)"/><text x="449.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.78%)</title><rect x="446" y="644" width="9" height="15" fill="rgb(242,115,4)"/><text x="449.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="660" width="9" height="15" fill="rgb(244,171,25)"/><text x="449.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (7 samples, 0.78%)</title><rect x="446" y="676" width="9" height="15" fill="rgb(253,79,13)"/><text x="449.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="692" width="9" height="15" fill="rgb(248,181,49)"/><text x="449.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.78%)</title><rect x="446" y="708" width="9" height="15" fill="rgb(228,176,32)"/><text x="449.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.78%)</title><rect x="446" y="724" width="9" height="15" fill="rgb(230,226,19)"/><text x="449.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.78%)</title><rect x="446" y="740" width="9" height="15" fill="rgb(234,32,53)"/><text x="449.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="756" width="9" height="15" fill="rgb(248,7,13)"/><text x="449.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (7 samples, 0.78%)</title><rect x="446" y="772" width="9" height="15" fill="rgb(253,187,34)"/><text x="449.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="788" width="9" height="15" fill="rgb(207,161,5)"/><text x="449.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.78%)</title><rect x="446" y="804" width="9" height="15" fill="rgb(219,210,10)"/><text x="449.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.78%)</title><rect x="446" y="820" width="9" height="15" fill="rgb(219,92,44)"/><text x="449.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.78%)</title><rect x="446" y="836" width="9" height="15" fill="rgb(217,38,17)"/><text x="449.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="852" width="9" height="15" fill="rgb(228,142,46)"/><text x="449.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (7 samples, 0.78%)</title><rect x="446" y="868" width="9" height="15" fill="rgb(252,52,11)"/><text x="449.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="884" width="9" height="15" fill="rgb(214,210,46)"/><text x="449.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 0.78%)</title><rect x="446" y="900" width="9" height="15" fill="rgb(221,92,39)"/><text x="449.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="916" width="9" height="15" fill="rgb(250,71,27)"/><text x="449.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="932" width="9" height="15" fill="rgb(205,68,14)"/><text x="449.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.78%)</title><rect x="446" y="948" width="9" height="15" fill="rgb(236,141,0)"/><text x="449.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.78%)</title><rect x="446" y="964" width="9" height="15" fill="rgb(220,175,53)"/><text x="449.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.78%)</title><rect x="446" y="980" width="9" height="15" fill="rgb(208,216,6)"/><text x="449.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="996" width="9" height="15" fill="rgb(238,10,32)"/><text x="449.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (7 samples, 0.78%)</title><rect x="446" y="1012" width="9" height="15" fill="rgb(220,190,43)"/><text x="449.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.78%)</title><rect x="446" y="1028" width="9" height="15" fill="rgb(222,13,51)"/><text x="449.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.78%)</title><rect x="446" y="1044" width="9" height="15" fill="rgb(245,49,22)"/><text x="449.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.78%)</title><rect x="446" y="1060" width="9" height="15" fill="rgb(248,224,26)"/><text x="449.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.78%)</title><rect x="446" y="1076" width="9" height="15" fill="rgb(249,47,15)"/><text x="449.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.78%)</title><rect x="446" y="1092" width="9" height="15" fill="rgb(223,172,41)"/><text x="449.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (6 samples, 0.67%)</title><rect x="447" y="1108" width="8" height="15" fill="rgb(247,114,53)"/><text x="450.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (6 samples, 0.67%)</title><rect x="447" y="1124" width="8" height="15" fill="rgb(209,55,50)"/><text x="450.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="447" y="1140" width="8" height="15" fill="rgb(223,39,49)"/><text x="450.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.67%)</title><rect x="447" y="1156" width="8" height="15" fill="rgb(220,166,6)"/><text x="450.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.67%)</title><rect x="447" y="1172" width="8" height="15" fill="rgb(208,125,52)"/><text x="450.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.67%)</title><rect x="447" y="1188" width="8" height="15" fill="rgb(252,56,26)"/><text x="450.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.67%)</title><rect x="447" y="1204" width="8" height="15" fill="rgb(228,194,36)"/><text x="450.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="447" y="1220" width="8" height="15" fill="rgb(236,208,17)"/><text x="450.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (6 samples, 0.67%)</title><rect x="447" y="1236" width="8" height="15" fill="rgb(232,103,8)"/><text x="450.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (6 samples, 0.67%)</title><rect x="447" y="1252" width="8" height="15" fill="rgb(217,103,36)"/><text x="450.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="447" y="1268" width="8" height="15" fill="rgb(221,154,51)"/><text x="450.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.67%)</title><rect x="447" y="1284" width="8" height="15" fill="rgb(235,164,4)"/><text x="450.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.67%)</title><rect x="447" y="1300" width="8" height="15" fill="rgb(215,105,20)"/><text x="450.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.67%)</title><rect x="447" y="1316" width="8" height="15" fill="rgb(224,6,42)"/><text x="450.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.67%)</title><rect x="447" y="1332" width="8" height="15" fill="rgb(207,181,39)"/><text x="450.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="447" y="1348" width="8" height="15" fill="rgb(233,38,42)"/><text x="450.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (6 samples, 0.67%)</title><rect x="447" y="1364" width="8" height="15" fill="rgb(230,10,44)"/><text x="450.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.67%)</title><rect x="447" y="1380" width="8" height="15" fill="rgb(220,31,32)"/><text x="450.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.67%)</title><rect x="447" y="1396" width="8" height="15" fill="rgb(212,220,7)"/><text x="450.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.67%)</title><rect x="447" y="1412" width="8" height="15" fill="rgb(254,75,31)"/><text x="450.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.67%)</title><rect x="447" y="1428" width="8" height="15" fill="rgb(238,172,2)"/><text x="450.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="447" y="1444" width="8" height="15" fill="rgb(253,103,27)"/><text x="450.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.22%)</title><rect x="452" y="1460" width="3" height="15" fill="rgb(232,57,42)"/><text x="455.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="1476" width="3" height="15" fill="rgb(254,28,40)"/><text x="455.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="1492" width="3" height="15" fill="rgb(245,147,17)"/><text x="455.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="1508" width="3" height="15" fill="rgb(243,111,51)"/><text x="455.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="1524" width="3" height="15" fill="rgb(243,143,16)"/><text x="455.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="1540" width="3" height="15" fill="rgb(230,201,36)"/><text x="455.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.22%)</title><rect x="452" y="1556" width="3" height="15" fill="rgb(254,138,8)"/><text x="455.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (2 samples, 0.22%)</title><rect x="452" y="1572" width="3" height="15" fill="rgb(207,184,40)"/><text x="455.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="1588" width="3" height="15" fill="rgb(247,26,23)"/><text x="455.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="1604" width="3" height="15" fill="rgb(252,227,50)"/><text x="455.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="1620" width="3" height="15" fill="rgb(241,10,0)"/><text x="455.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="1636" width="3" height="15" fill="rgb(242,131,4)"/><text x="455.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="1652" width="3" height="15" fill="rgb(242,192,34)"/><text x="455.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.11%)</title><rect x="454" y="1668" width="1" height="15" fill="rgb(239,210,18)"/><text x="457.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.11%)</title><rect x="454" y="1684" width="1" height="15" fill="rgb(230,47,48)"/><text x="457.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="454" y="1700" width="1" height="15" fill="rgb(236,143,43)"/><text x="457.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="454" y="1716" width="1" height="15" fill="rgb(243,75,1)"/><text x="457.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="454" y="1732" width="1" height="15" fill="rgb(208,80,10)"/><text x="457.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="454" y="1748" width="1" height="15" fill="rgb(224,109,17)"/><text x="457.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="454" y="1764" width="1" height="15" fill="rgb(250,204,53)"/><text x="457.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.11%)</title><rect x="454" y="1780" width="1" height="15" fill="rgb(225,91,54)"/><text x="457.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="454" y="1796" width="1" height="15" fill="rgb(251,200,1)"/><text x="457.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="454" y="1812" width="1" height="15" fill="rgb(218,69,13)"/><text x="457.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="454" y="1828" width="1" height="15" fill="rgb(245,147,33)"/><text x="457.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="454" y="1844" width="1" height="15" fill="rgb(243,177,45)"/><text x="457.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="454" y="1860" width="1" height="15" fill="rgb(222,9,1)"/><text x="457.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.11%)</title><rect x="454" y="1876" width="1" height="15" fill="rgb(222,157,14)"/><text x="457.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="454" y="1892" width="1" height="15" fill="rgb(252,142,51)"/><text x="457.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="454" y="1908" width="1" height="15" fill="rgb(222,53,3)"/><text x="457.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="454" y="1924" width="1" height="15" fill="rgb(235,170,31)"/><text x="457.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="454" y="1940" width="1" height="15" fill="rgb(226,100,32)"/><text x="457.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="454" y="1956" width="1" height="15" fill="rgb(240,52,10)"/><text x="457.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:39) (1 samples, 0.11%)</title><rect x="454" y="1972" width="1" height="15" fill="rgb(218,112,15)"/><text x="457.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="454" y="1988" width="1" height="15" fill="rgb(249,136,30)"/><text x="457.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="454" y="2004" width="1" height="15" fill="rgb(238,211,24)"/><text x="457.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="454" y="2020" width="1" height="15" fill="rgb(211,169,27)"/><text x="457.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="454" y="2036" width="1" height="15" fill="rgb(234,54,43)"/><text x="457.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="454" y="2052" width="1" height="15" fill="rgb(227,213,26)"/><text x="457.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="454" y="2068" width="1" height="15" fill="rgb(234,146,32)"/><text x="457.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="454" y="2084" width="1" height="15" fill="rgb(215,16,54)"/><text x="457.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/events.py:787) (1 samples, 0.11%)</title><rect x="454" y="2100" width="1" height="15" fill="rgb(213,48,33)"/><text x="457.00" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="454" y="2116" width="1" height="15" fill="rgb(216,4,34)"/><text x="457.00" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="454" y="2132" width="1" height="15" fill="rgb(212,196,2)"/><text x="457.00" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.11%)</title><rect x="454" y="2148" width="1" height="15" fill="rgb(230,118,8)"/><text x="457.00" y="2158.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.11%)</title><rect x="454" y="2164" width="1" height="15" fill="rgb(220,21,36)"/><text x="457.00" y="2174.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.11%)</title><rect x="454" y="2180" width="1" height="15" fill="rgb(212,165,16)"/><text x="457.00" y="2190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="454" y="2196" width="1" height="15" fill="rgb(249,78,39)"/><text x="457.00" y="2206.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2212" width="1" height="15" fill="rgb(218,123,46)"/><text x="457.00" y="2222.50"></text></g><g><title>0x7fd726163995 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2228" width="1" height="15" fill="rgb(238,33,17)"/><text x="457.00" y="2238.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2244" width="1" height="15" fill="rgb(234,114,47)"/><text x="457.00" y="2254.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2260" width="1" height="15" fill="rgb(253,187,53)"/><text x="457.00" y="2270.50"></text></g><g><title>0x7fd726163258 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2276" width="1" height="15" fill="rgb(250,53,33)"/><text x="457.00" y="2286.50"></text></g><g><title>0x7fd7261b0d7a (ld-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2292" width="1" height="15" fill="rgb(246,205,23)"/><text x="457.00" y="2302.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2308" width="1" height="15" fill="rgb(217,217,21)"/><text x="457.00" y="2318.50"></text></g><g><title>0x7fd7261b118b (ld-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2324" width="1" height="15" fill="rgb(215,13,20)"/><text x="457.00" y="2334.50"></text></g><g><title>0x7fd7261a6c1a (ld-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2340" width="1" height="15" fill="rgb(226,173,38)"/><text x="457.00" y="2350.50"></text></g><g><title>0x7fd7261a427b (ld-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2356" width="1" height="15" fill="rgb(249,46,52)"/><text x="457.00" y="2366.50"></text></g><g><title>0x7fd7261b8bd2 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="2372" width="1" height="15" fill="rgb(214,136,27)"/><text x="457.00" y="2382.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:28) (1 samples, 0.11%)</title><rect x="455" y="84" width="1" height="15" fill="rgb(246,172,8)"/><text x="458.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.11%)</title><rect x="455" y="100" width="1" height="15" fill="rgb(247,17,48)"/><text x="458.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="455" y="116" width="1" height="15" fill="rgb(210,175,43)"/><text x="458.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="455" y="132" width="1" height="15" fill="rgb(249,15,14)"/><text x="458.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="455" y="148" width="1" height="15" fill="rgb(231,161,52)"/><text x="458.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="455" y="164" width="1" height="15" fill="rgb(219,92,27)"/><text x="458.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="455" y="180" width="1" height="15" fill="rgb(207,75,36)"/><text x="458.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.11%)</title><rect x="455" y="196" width="1" height="15" fill="rgb(225,183,32)"/><text x="458.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.11%)</title><rect x="455" y="212" width="1" height="15" fill="rgb(251,162,26)"/><text x="458.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.11%)</title><rect x="455" y="228" width="1" height="15" fill="rgb(246,203,54)"/><text x="458.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="455" y="244" width="1" height="15" fill="rgb(239,16,33)"/><text x="458.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.11%)</title><rect x="455" y="260" width="1" height="15" fill="rgb(240,190,35)"/><text x="458.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.11%)</title><rect x="455" y="276" width="1" height="15" fill="rgb(228,180,11)"/><text x="458.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.11%)</title><rect x="455" y="292" width="1" height="15" fill="rgb(233,48,32)"/><text x="458.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:200) (1 samples, 0.11%)</title><rect x="455" y="308" width="1" height="15" fill="rgb(236,83,45)"/><text x="458.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.11%)</title><rect x="459" y="180" width="1" height="15" fill="rgb(224,195,22)"/><text x="462.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.34%)</title><rect x="460" y="180" width="4" height="15" fill="rgb(223,76,10)"/><text x="463.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.11%)</title><rect x="467" y="212" width="1" height="15" fill="rgb(209,139,23)"/><text x="470.00" y="222.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.11%)</title><rect x="467" y="228" width="1" height="15" fill="rgb(214,111,21)"/><text x="470.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.22%)</title><rect x="467" y="196" width="3" height="15" fill="rgb(220,199,50)"/><text x="470.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.11%)</title><rect x="468" y="212" width="2" height="15" fill="rgb(222,71,23)"/><text x="471.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="468" y="228" width="2" height="15" fill="rgb(231,7,27)"/><text x="471.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="468" y="244" width="2" height="15" fill="rgb(209,167,7)"/><text x="471.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="468" y="260" width="2" height="15" fill="rgb(229,198,14)"/><text x="471.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.11%)</title><rect x="468" y="276" width="2" height="15" fill="rgb(223,92,16)"/><text x="471.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="468" y="292" width="2" height="15" fill="rgb(254,68,19)"/><text x="471.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="468" y="308" width="2" height="15" fill="rgb(233,47,46)"/><text x="471.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.11%)</title><rect x="468" y="324" width="2" height="15" fill="rgb(247,150,18)"/><text x="471.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="471" y="260" width="1" height="15" fill="rgb(213,0,25)"/><text x="474.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="471" y="276" width="1" height="15" fill="rgb(215,157,30)"/><text x="474.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:770) (1 samples, 0.11%)</title><rect x="472" y="308" width="2" height="15" fill="rgb(219,112,4)"/><text x="475.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.11%)</title><rect x="474" y="308" width="1" height="15" fill="rgb(253,108,6)"/><text x="477.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.11%)</title><rect x="474" y="324" width="1" height="15" fill="rgb(212,69,14)"/><text x="477.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="474" y="340" width="1" height="15" fill="rgb(235,165,11)"/><text x="477.00" y="350.50"></text></g><g><title>0x7fd725e937c2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="474" y="356" width="1" height="15" fill="rgb(228,113,13)"/><text x="477.00" y="366.50"></text></g><g><title>0x7fd725efbd6a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="474" y="372" width="1" height="15" fill="rgb(233,168,24)"/><text x="477.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 0.34%)</title><rect x="472" y="276" width="4" height="15" fill="rgb(235,3,12)"/><text x="475.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.34%)</title><rect x="472" y="292" width="4" height="15" fill="rgb(234,220,28)"/><text x="475.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="475" y="308" width="1" height="15" fill="rgb(246,4,30)"/><text x="478.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="475" y="324" width="1" height="15" fill="rgb(250,226,49)"/><text x="478.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.11%)</title><rect x="475" y="340" width="1" height="15" fill="rgb(210,170,42)"/><text x="478.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.11%)</title><rect x="475" y="356" width="1" height="15" fill="rgb(210,141,43)"/><text x="478.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.11%)</title><rect x="475" y="372" width="1" height="15" fill="rgb(212,163,54)"/><text x="478.00" y="382.50"></text></g><g><title>0x7fd72605d960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="476" y="324" width="2" height="15" fill="rgb(242,203,50)"/><text x="479.00" y="334.50"></text></g><g><title>0x7fd72605d979 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="478" y="324" width="2" height="15" fill="rgb(237,54,24)"/><text x="481.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (4 samples, 0.45%)</title><rect x="476" y="308" width="6" height="15" fill="rgb(221,50,46)"/><text x="479.00" y="318.50"></text></g><g><title>0x7fd72605da15 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="480" y="324" width="2" height="15" fill="rgb(208,78,32)"/><text x="483.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 1.01%)</title><rect x="471" y="228" width="12" height="15" fill="rgb(247,229,12)"/><text x="474.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="471" y="244" width="12" height="15" fill="rgb(232,221,2)"/><text x="474.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.89%)</title><rect x="472" y="260" width="11" height="15" fill="rgb(208,112,52)"/><text x="475.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (5 samples, 0.56%)</title><rect x="476" y="276" width="7" height="15" fill="rgb(246,196,44)"/><text x="479.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (5 samples, 0.56%)</title><rect x="476" y="292" width="7" height="15" fill="rgb(238,208,38)"/><text x="479.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (1 samples, 0.11%)</title><rect x="482" y="308" width="1" height="15" fill="rgb(218,190,27)"/><text x="485.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (1 samples, 0.11%)</title><rect x="482" y="324" width="1" height="15" fill="rgb(209,69,44)"/><text x="485.00" y="334.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.11%)</title><rect x="483" y="276" width="1" height="15" fill="rgb(241,155,51)"/><text x="486.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="488" y="356" width="1" height="15" fill="rgb(206,213,18)"/><text x="491.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="488" y="372" width="1" height="15" fill="rgb(254,146,50)"/><text x="491.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="488" y="388" width="1" height="15" fill="rgb(237,18,21)"/><text x="491.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="488" y="404" width="1" height="15" fill="rgb(220,120,52)"/><text x="491.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="488" y="420" width="1" height="15" fill="rgb(238,203,45)"/><text x="491.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.11%)</title><rect x="488" y="436" width="1" height="15" fill="rgb(228,188,3)"/><text x="491.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.11%)</title><rect x="488" y="452" width="1" height="15" fill="rgb(220,105,33)"/><text x="491.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="488" y="468" width="1" height="15" fill="rgb(226,108,23)"/><text x="491.00" y="478.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.11%)</title><rect x="489" y="372" width="2" height="15" fill="rgb(242,132,32)"/><text x="492.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.11%)</title><rect x="491" y="372" width="1" height="15" fill="rgb(240,97,14)"/><text x="494.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="492" y="372" width="1" height="15" fill="rgb(245,5,46)"/><text x="495.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.11%)</title><rect x="493" y="372" width="2" height="15" fill="rgb(205,24,33)"/><text x="496.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="495" y="388" width="1" height="15" fill="rgb(215,164,17)"/><text x="498.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (22 samples, 2.46%)</title><rect x="470" y="196" width="29" height="15" fill="rgb(247,225,13)"/><text x="473.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 2.35%)</title><rect x="471" y="212" width="28" height="15" fill="rgb(249,34,2)"/><text x="474.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (12 samples, 1.34%)</title><rect x="483" y="228" width="16" height="15" fill="rgb(224,125,41)"/><text x="486.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (12 samples, 1.34%)</title><rect x="483" y="244" width="16" height="15" fill="rgb(245,159,44)"/><text x="486.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.34%)</title><rect x="483" y="260" width="16" height="15" fill="rgb(249,175,33)"/><text x="486.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (11 samples, 1.23%)</title><rect x="484" y="276" width="15" height="15" fill="rgb(229,46,19)"/><text x="487.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (11 samples, 1.23%)</title><rect x="484" y="292" width="15" height="15" fill="rgb(233,148,12)"/><text x="487.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 0.89%)</title><rect x="488" y="308" width="11" height="15" fill="rgb(220,134,7)"/><text x="491.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 0.89%)</title><rect x="488" y="324" width="11" height="15" fill="rgb(238,80,38)"/><text x="491.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 0.89%)</title><rect x="488" y="340" width="11" height="15" fill="rgb(206,225,34)"/><text x="491.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 0.78%)</title><rect x="489" y="356" width="10" height="15" fill="rgb(231,131,46)"/><text x="492.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.34%)</title><rect x="495" y="372" width="4" height="15" fill="rgb(237,157,49)"/><text x="498.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (2 samples, 0.22%)</title><rect x="496" y="388" width="3" height="15" fill="rgb(244,124,7)"/><text x="499.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.11%)</title><rect x="499" y="196" width="1" height="15" fill="rgb(213,135,2)"/><text x="502.00" y="206.50"></text></g><g><title>0x7fd6e6a39422 (?) (1 samples, 0.11%)</title><rect x="500" y="244" width="1" height="15" fill="rgb(235,62,13)"/><text x="503.00" y="254.50"></text></g><g><title>0x7fd6e6a3f89e (?) (1 samples, 0.11%)</title><rect x="500" y="260" width="1" height="15" fill="rgb(206,225,44)"/><text x="503.00" y="270.50"></text></g><g><title>0x7fd6e6a3f74f (?) (1 samples, 0.11%)</title><rect x="500" y="276" width="1" height="15" fill="rgb(217,41,14)"/><text x="503.00" y="286.50"></text></g><g><title>0x7fd6e6a45a3a (?) (1 samples, 0.11%)</title><rect x="500" y="292" width="1" height="15" fill="rgb(244,136,43)"/><text x="503.00" y="302.50"></text></g><g><title>0x7fd6efe97cfa (?) (1 samples, 0.11%)</title><rect x="500" y="308" width="1" height="15" fill="rgb(241,185,27)"/><text x="503.00" y="318.50"></text></g><g><title>0x7fd6efea0daa (?) (1 samples, 0.11%)</title><rect x="500" y="324" width="1" height="15" fill="rgb(205,89,13)"/><text x="503.00" y="334.50"></text></g><g><title>0x7fd6efea2cfb (?) (1 samples, 0.11%)</title><rect x="500" y="340" width="1" height="15" fill="rgb(222,24,4)"/><text x="503.00" y="350.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (cast.h:44) (1 samples, 0.11%)</title><rect x="501" y="260" width="2" height="15" fill="rgb(221,6,29)"/><text x="504.00" y="270.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.11%)</title><rect x="501" y="276" width="2" height="15" fill="rgb(230,38,19)"/><text x="504.00" y="286.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::emplace_back&lt;_object*&gt; (vector.tcc:94) (1 samples, 0.11%)</title><rect x="501" y="292" width="2" height="15" fill="rgb(241,64,54)"/><text x="504.00" y="302.50"></text></g><g><title>pybind11::detail::get_internals (internals.h:234) (1 samples, 0.11%)</title><rect x="501" y="308" width="2" height="15" fill="rgb(253,49,51)"/><text x="504.00" y="318.50"></text></g><g><title>0x7fd6efea2ea0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="503" y="468" width="1" height="15" fill="rgb(226,19,42)"/><text x="506.00" y="478.50"></text></g><g><title>0x7fd6efea2ea9 (libgomp.so.1.0.0) (11 samples, 1.23%)</title><rect x="504" y="468" width="14" height="15" fill="rgb(233,186,13)"/><text x="507.00" y="478.50"></text></g><g><title>0x7fd6efea2eab (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="518" y="468" width="8" height="15" fill="rgb(243,221,54)"/><text x="521.00" y="478.50"></text></g><g><title>0x7fd6efea1ab9 (libgomp.so.1.0.0) (23 samples, 2.57%)</title><rect x="503" y="452" width="30" height="15" fill="rgb(226,64,48)"/><text x="506.00" y="462.50">0x..</text></g><g><title>0x7fd6efea2ead (libgomp.so.1.0.0) (5 samples, 0.56%)</title><rect x="526" y="468" width="7" height="15" fill="rgb(231,221,27)"/><text x="529.00" y="478.50"></text></g><g><title>0x7fd6efea2cf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="533" y="484" width="1" height="15" fill="rgb(216,149,9)"/><text x="536.00" y="494.50"></text></g><g><title>0x7fd6efea2cf9 (libgomp.so.1.0.0) (4 samples, 0.45%)</title><rect x="534" y="484" width="6" height="15" fill="rgb(220,175,32)"/><text x="537.00" y="494.50"></text></g><g><title>0x7fd6efea2cfb (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="540" y="484" width="3" height="15" fill="rgb(209,153,31)"/><text x="543.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (34 samples, 3.80%)</title><rect x="500" y="196" width="45" height="15" fill="rgb(237,178,44)"/><text x="503.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (34 samples, 3.80%)</title><rect x="500" y="212" width="45" height="15" fill="rgb(227,218,34)"/><text x="503.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (34 samples, 3.80%)</title><rect x="500" y="228" width="45" height="15" fill="rgb(213,214,4)"/><text x="503.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (33 samples, 3.69%)</title><rect x="501" y="244" width="44" height="15" fill="rgb(254,45,25)"/><text x="504.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (32 samples, 3.58%)</title><rect x="503" y="260" width="42" height="15" fill="rgb(234,103,19)"/><text x="506.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (32 samples, 3.58%)</title><rect x="503" y="276" width="42" height="15" fill="rgb(242,183,37)"/><text x="506.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (32 samples, 3.58%)</title><rect x="503" y="292" width="42" height="15" fill="rgb(238,57,16)"/><text x="506.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (32 samples, 3.58%)</title><rect x="503" y="308" width="42" height="15" fill="rgb(253,36,22)"/><text x="506.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (32 samples, 3.58%)</title><rect x="503" y="324" width="42" height="15" fill="rgb(248,19,31)"/><text x="506.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (32 samples, 3.58%)</title><rect x="503" y="340" width="42" height="15" fill="rgb(236,219,45)"/><text x="506.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (32 samples, 3.58%)</title><rect x="503" y="356" width="42" height="15" fill="rgb(243,176,7)"/><text x="506.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (32 samples, 3.58%)</title><rect x="503" y="372" width="42" height="15" fill="rgb(250,118,12)"/><text x="506.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (32 samples, 3.58%)</title><rect x="503" y="388" width="42" height="15" fill="rgb(253,164,21)"/><text x="506.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (32 samples, 3.58%)</title><rect x="503" y="404" width="42" height="15" fill="rgb(240,7,43)"/><text x="506.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (32 samples, 3.58%)</title><rect x="503" y="420" width="42" height="15" fill="rgb(234,105,37)"/><text x="506.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (32 samples, 3.58%)</title><rect x="503" y="436" width="42" height="15" fill="rgb(226,208,28)"/><text x="506.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (9 samples, 1.01%)</title><rect x="533" y="452" width="12" height="15" fill="rgb(229,211,23)"/><text x="536.00" y="462.50"></text></g><g><title>0x7fd6efea0daa (libgomp.so.1.0.0) (9 samples, 1.01%)</title><rect x="533" y="468" width="12" height="15" fill="rgb(251,104,33)"/><text x="536.00" y="478.50"></text></g><g><title>0x7fd6efea2cfd (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="543" y="484" width="2" height="15" fill="rgb(220,78,28)"/><text x="546.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.11%)</title><rect x="545" y="228" width="1" height="15" fill="rgb(221,39,51)"/><text x="548.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.11%)</title><rect x="546" y="244" width="1" height="15" fill="rgb(206,127,15)"/><text x="549.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (2 samples, 0.22%)</title><rect x="546" y="228" width="3" height="15" fill="rgb(222,43,54)"/><text x="549.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.11%)</title><rect x="547" y="244" width="2" height="15" fill="rgb(211,189,20)"/><text x="550.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="549" y="260" width="1" height="15" fill="rgb(237,159,15)"/><text x="552.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="549" y="276" width="1" height="15" fill="rgb(206,193,46)"/><text x="552.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.11%)</title><rect x="549" y="292" width="1" height="15" fill="rgb(236,206,44)"/><text x="552.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="550" y="292" width="1" height="15" fill="rgb(209,138,50)"/><text x="553.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:130) (1 samples, 0.11%)</title><rect x="550" y="308" width="1" height="15" fill="rgb(224,79,44)"/><text x="553.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="551" y="292" width="2" height="15" fill="rgb(223,55,20)"/><text x="554.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="551" y="308" width="2" height="15" fill="rgb(243,156,40)"/><text x="554.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2047) (1 samples, 0.11%)</title><rect x="551" y="324" width="2" height="15" fill="rgb(218,4,42)"/><text x="554.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (4 samples, 0.45%)</title><rect x="549" y="228" width="5" height="15" fill="rgb(214,76,46)"/><text x="552.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.45%)</title><rect x="549" y="244" width="5" height="15" fill="rgb(254,134,37)"/><text x="552.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="550" y="260" width="4" height="15" fill="rgb(254,195,53)"/><text x="553.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="550" y="276" width="4" height="15" fill="rgb(220,122,24)"/><text x="553.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="553" y="292" width="1" height="15" fill="rgb(218,66,3)"/><text x="556.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.11%)</title><rect x="553" y="308" width="1" height="15" fill="rgb(238,16,47)"/><text x="556.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="554" y="260" width="1" height="15" fill="rgb(234,185,10)"/><text x="557.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="554" y="276" width="1" height="15" fill="rgb(244,1,54)"/><text x="557.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="555" y="292" width="2" height="15" fill="rgb(213,103,53)"/><text x="558.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.11%)</title><rect x="555" y="308" width="2" height="15" fill="rgb(207,176,48)"/><text x="558.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (10 samples, 1.12%)</title><rect x="545" y="196" width="13" height="15" fill="rgb(239,8,8)"/><text x="548.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (10 samples, 1.12%)</title><rect x="545" y="212" width="13" height="15" fill="rgb(208,22,50)"/><text x="548.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.34%)</title><rect x="554" y="228" width="4" height="15" fill="rgb(253,169,29)"/><text x="557.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="554" y="244" width="4" height="15" fill="rgb(213,222,45)"/><text x="557.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="555" y="260" width="3" height="15" fill="rgb(213,111,49)"/><text x="558.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.22%)</title><rect x="555" y="276" width="3" height="15" fill="rgb(248,123,30)"/><text x="558.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="557" y="292" width="1" height="15" fill="rgb(241,5,51)"/><text x="560.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="557" y="308" width="1" height="15" fill="rgb(239,185,51)"/><text x="560.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="557" y="324" width="1" height="15" fill="rgb(223,81,17)"/><text x="560.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="557" y="340" width="1" height="15" fill="rgb(209,27,33)"/><text x="560.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (2 samples, 0.22%)</title><rect x="563" y="324" width="3" height="15" fill="rgb(222,192,51)"/><text x="566.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="563" y="340" width="3" height="15" fill="rgb(219,225,19)"/><text x="566.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="563" y="356" width="3" height="15" fill="rgb(205,204,10)"/><text x="566.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="565" y="372" width="1" height="15" fill="rgb(225,92,4)"/><text x="568.00" y="382.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:82) (1 samples, 0.11%)</title><rect x="565" y="388" width="1" height="15" fill="rgb(216,220,11)"/><text x="568.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="567" y="340" width="2" height="15" fill="rgb(217,186,14)"/><text x="570.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(242,90,8)"/><text x="570.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.67%)</title><rect x="566" y="324" width="8" height="15" fill="rgb(245,196,53)"/><text x="569.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.45%)</title><rect x="569" y="340" width="5" height="15" fill="rgb(216,59,2)"/><text x="572.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.34%)</title><rect x="570" y="356" width="4" height="15" fill="rgb(232,189,25)"/><text x="573.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.34%)</title><rect x="570" y="372" width="4" height="15" fill="rgb(223,226,28)"/><text x="573.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.34%)</title><rect x="570" y="388" width="4" height="15" fill="rgb(215,211,12)"/><text x="573.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="572" y="404" width="2" height="15" fill="rgb(237,132,33)"/><text x="575.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1692) (1 samples, 0.11%)</title><rect x="572" y="420" width="2" height="15" fill="rgb(247,198,44)"/><text x="575.00" y="430.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.11%)</title><rect x="574" y="468" width="1" height="15" fill="rgb(252,171,13)"/><text x="577.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="574" y="404" width="2" height="15" fill="rgb(214,138,53)"/><text x="577.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="574" y="420" width="2" height="15" fill="rgb(242,76,38)"/><text x="577.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="574" y="436" width="2" height="15" fill="rgb(252,70,25)"/><text x="577.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (2 samples, 0.22%)</title><rect x="574" y="452" width="2" height="15" fill="rgb(225,29,23)"/><text x="577.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.11%)</title><rect x="575" y="468" width="1" height="15" fill="rgb(241,189,23)"/><text x="578.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (88 samples, 9.83%)</title><rect x="464" y="180" width="116" height="15" fill="rgb(206,143,23)"/><text x="467.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (17 samples, 1.90%)</title><rect x="558" y="196" width="22" height="15" fill="rgb(246,37,35)"/><text x="561.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (15 samples, 1.68%)</title><rect x="561" y="212" width="19" height="15" fill="rgb(249,108,49)"/><text x="564.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (15 samples, 1.68%)</title><rect x="561" y="228" width="19" height="15" fill="rgb(253,69,22)"/><text x="564.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (15 samples, 1.68%)</title><rect x="561" y="244" width="19" height="15" fill="rgb(236,134,23)"/><text x="564.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (14 samples, 1.56%)</title><rect x="562" y="260" width="18" height="15" fill="rgb(240,123,45)"/><text x="565.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (14 samples, 1.56%)</title><rect x="562" y="276" width="18" height="15" fill="rgb(234,147,27)"/><text x="565.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (14 samples, 1.56%)</title><rect x="562" y="292" width="18" height="15" fill="rgb(230,71,6)"/><text x="565.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 1.56%)</title><rect x="562" y="308" width="18" height="15" fill="rgb(242,97,43)"/><text x="565.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (5 samples, 0.56%)</title><rect x="574" y="324" width="6" height="15" fill="rgb(239,119,46)"/><text x="577.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (5 samples, 0.56%)</title><rect x="574" y="340" width="6" height="15" fill="rgb(227,117,17)"/><text x="577.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="574" y="356" width="6" height="15" fill="rgb(244,31,8)"/><text x="577.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.56%)</title><rect x="574" y="372" width="6" height="15" fill="rgb(221,226,35)"/><text x="577.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.56%)</title><rect x="574" y="388" width="6" height="15" fill="rgb(229,87,54)"/><text x="577.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.34%)</title><rect x="576" y="404" width="4" height="15" fill="rgb(248,184,13)"/><text x="579.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.34%)</title><rect x="576" y="420" width="4" height="15" fill="rgb(227,128,28)"/><text x="579.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.34%)</title><rect x="580" y="180" width="4" height="15" fill="rgb(236,111,8)"/><text x="583.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="584" y="180" width="2" height="15" fill="rgb(246,147,17)"/><text x="587.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (101 samples, 11.28%)</title><rect x="456" y="164" width="134" height="15" fill="rgb(220,20,11)"/><text x="459.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.34%)</title><rect x="586" y="180" width="4" height="15" fill="rgb(213,24,42)"/><text x="589.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:18) (102 samples, 11.40%)</title><rect x="456" y="100" width="135" height="15" fill="rgb(241,100,31)"/><text x="459.00" y="110.50">profile (bench_Ad..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (102 samples, 11.40%)</title><rect x="456" y="116" width="135" height="15" fill="rgb(243,202,34)"/><text x="459.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (102 samples, 11.40%)</title><rect x="456" y="132" width="135" height="15" fill="rgb(210,90,42)"/><text x="459.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (102 samples, 11.40%)</title><rect x="456" y="148" width="135" height="15" fill="rgb(253,117,11)"/><text x="459.00" y="158.50">run (mlprodict/on..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="590" y="164" width="1" height="15" fill="rgb(236,187,9)"/><text x="593.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="590" y="180" width="1" height="15" fill="rgb(245,103,0)"/><text x="593.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="590" y="196" width="1" height="15" fill="rgb(231,101,43)"/><text x="593.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (9 samples, 1.01%)</title><rect x="596" y="180" width="12" height="15" fill="rgb(245,190,47)"/><text x="599.00" y="190.50"></text></g><g><title>0x7fd725efc1d1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="616" y="196" width="1" height="15" fill="rgb(244,158,5)"/><text x="619.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.11%)</title><rect x="617" y="212" width="2" height="15" fill="rgb(240,28,32)"/><text x="620.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.11%)</title><rect x="619" y="244" width="1" height="15" fill="rgb(213,182,36)"/><text x="622.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.11%)</title><rect x="619" y="260" width="1" height="15" fill="rgb(208,24,1)"/><text x="622.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="620" y="260" width="1" height="15" fill="rgb(219,196,44)"/><text x="623.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.11%)</title><rect x="620" y="276" width="1" height="15" fill="rgb(238,99,7)"/><text x="623.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:836) (1 samples, 0.11%)</title><rect x="620" y="292" width="1" height="15" fill="rgb(245,209,28)"/><text x="623.00" y="302.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.11%)</title><rect x="621" y="260" width="2" height="15" fill="rgb(214,205,16)"/><text x="624.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.11%)</title><rect x="621" y="276" width="2" height="15" fill="rgb(244,60,50)"/><text x="624.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.11%)</title><rect x="621" y="292" width="2" height="15" fill="rgb(254,100,16)"/><text x="624.00" y="302.50"></text></g><g><title>long_index (scalartypes.c.src:3032) (1 samples, 0.11%)</title><rect x="621" y="308" width="2" height="15" fill="rgb(217,170,20)"/><text x="624.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (4 samples, 0.45%)</title><rect x="619" y="212" width="5" height="15" fill="rgb(238,167,53)"/><text x="622.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (4 samples, 0.45%)</title><rect x="619" y="228" width="5" height="15" fill="rgb(239,126,17)"/><text x="622.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (3 samples, 0.34%)</title><rect x="620" y="244" width="4" height="15" fill="rgb(206,169,17)"/><text x="623.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.11%)</title><rect x="623" y="260" width="1" height="15" fill="rgb(206,214,42)"/><text x="626.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.11%)</title><rect x="623" y="276" width="1" height="15" fill="rgb(247,113,11)"/><text x="626.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="623" y="292" width="1" height="15" fill="rgb(238,16,47)"/><text x="626.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="623" y="308" width="1" height="15" fill="rgb(218,1,13)"/><text x="626.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 0.67%)</title><rect x="617" y="196" width="8" height="15" fill="rgb(222,16,15)"/><text x="620.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.11%)</title><rect x="624" y="212" width="1" height="15" fill="rgb(237,143,19)"/><text x="627.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="624" y="228" width="1" height="15" fill="rgb(236,212,15)"/><text x="627.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="624" y="244" width="1" height="15" fill="rgb(230,32,20)"/><text x="627.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="624" y="260" width="1" height="15" fill="rgb(207,210,2)"/><text x="627.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="624" y="276" width="1" height="15" fill="rgb(230,120,3)"/><text x="627.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1479) (1 samples, 0.11%)</title><rect x="624" y="292" width="1" height="15" fill="rgb(230,202,37)"/><text x="627.00" y="302.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.11%)</title><rect x="625" y="260" width="2" height="15" fill="rgb(205,13,25)"/><text x="628.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="625" y="276" width="2" height="15" fill="rgb(248,206,46)"/><text x="628.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="625" y="292" width="2" height="15" fill="rgb(224,90,10)"/><text x="628.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.11%)</title><rect x="625" y="308" width="2" height="15" fill="rgb(237,57,29)"/><text x="628.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.11%)</title><rect x="625" y="324" width="2" height="15" fill="rgb(209,79,44)"/><text x="628.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.11%)</title><rect x="625" y="340" width="2" height="15" fill="rgb(237,41,30)"/><text x="628.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.11%)</title><rect x="625" y="356" width="2" height="15" fill="rgb(240,120,3)"/><text x="628.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3131) (1 samples, 0.11%)</title><rect x="625" y="372" width="2" height="15" fill="rgb(236,75,21)"/><text x="628.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (2 samples, 0.22%)</title><rect x="625" y="196" width="3" height="15" fill="rgb(216,153,25)"/><text x="628.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.22%)</title><rect x="625" y="212" width="3" height="15" fill="rgb(221,60,29)"/><text x="628.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (2 samples, 0.22%)</title><rect x="625" y="228" width="3" height="15" fill="rgb(225,212,8)"/><text x="628.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (2 samples, 0.22%)</title><rect x="625" y="244" width="3" height="15" fill="rgb(216,195,40)"/><text x="628.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.11%)</title><rect x="627" y="260" width="1" height="15" fill="rgb(251,182,3)"/><text x="630.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="627" y="276" width="1" height="15" fill="rgb(245,20,47)"/><text x="630.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="627" y="292" width="1" height="15" fill="rgb(249,147,53)"/><text x="630.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.11%)</title><rect x="627" y="308" width="1" height="15" fill="rgb(218,101,12)"/><text x="630.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="632" y="244" width="1" height="15" fill="rgb(206,27,45)"/><text x="635.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="632" y="260" width="1" height="15" fill="rgb(208,220,26)"/><text x="635.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="632" y="276" width="1" height="15" fill="rgb(245,225,9)"/><text x="635.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="632" y="292" width="1" height="15" fill="rgb(214,100,0)"/><text x="635.00" y="302.50"></text></g><g><title>0x7fd72605d9a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="633" y="324" width="1" height="15" fill="rgb(226,92,35)"/><text x="636.00" y="334.50"></text></g><g><title>0x7fd72605d9f8 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="634" y="324" width="3" height="15" fill="rgb(217,133,42)"/><text x="637.00" y="334.50"></text></g><g><title>0x7fd72605da04 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="637" y="324" width="3" height="15" fill="rgb(243,102,45)"/><text x="640.00" y="334.50"></text></g><g><title>0x7fd72605da15 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="640" y="324" width="1" height="15" fill="rgb(223,152,5)"/><text x="643.00" y="334.50"></text></g><g><title>0x7fd72605da1d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="641" y="324" width="1" height="15" fill="rgb(239,81,49)"/><text x="644.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 1.01%)</title><rect x="632" y="228" width="12" height="15" fill="rgb(215,164,4)"/><text x="635.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.89%)</title><rect x="633" y="244" width="11" height="15" fill="rgb(250,59,2)"/><text x="636.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.89%)</title><rect x="633" y="260" width="11" height="15" fill="rgb(231,151,40)"/><text x="636.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (8 samples, 0.89%)</title><rect x="633" y="276" width="11" height="15" fill="rgb(210,93,50)"/><text x="636.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (8 samples, 0.89%)</title><rect x="633" y="292" width="11" height="15" fill="rgb(209,209,30)"/><text x="636.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (8 samples, 0.89%)</title><rect x="633" y="308" width="11" height="15" fill="rgb(232,116,19)"/><text x="636.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="642" y="324" width="2" height="15" fill="rgb(211,142,54)"/><text x="645.00" y="334.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="646" y="244" width="2" height="15" fill="rgb(225,22,32)"/><text x="649.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:231) (1 samples, 0.11%)</title><rect x="648" y="260" width="1" height="15" fill="rgb(219,15,43)"/><text x="651.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (1 samples, 0.11%)</title><rect x="649" y="276" width="1" height="15" fill="rgb(208,151,3)"/><text x="652.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="650" y="292" width="2" height="15" fill="rgb(207,217,20)"/><text x="653.00" y="302.50"></text></g><g><title>0x7fd725ef1e50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="652" y="404" width="1" height="15" fill="rgb(234,216,17)"/><text x="655.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="652" y="308" width="2" height="15" fill="rgb(252,180,27)"/><text x="655.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="652" y="324" width="2" height="15" fill="rgb(221,42,51)"/><text x="655.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.22%)</title><rect x="652" y="340" width="2" height="15" fill="rgb(217,59,52)"/><text x="655.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.22%)</title><rect x="652" y="356" width="2" height="15" fill="rgb(238,14,24)"/><text x="655.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="652" y="372" width="2" height="15" fill="rgb(241,112,8)"/><text x="655.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.22%)</title><rect x="652" y="388" width="2" height="15" fill="rgb(246,183,53)"/><text x="655.00" y="398.50"></text></g><g><title>0x7fd725ef1e86 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="653" y="404" width="1" height="15" fill="rgb(237,99,53)"/><text x="656.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.11%)</title><rect x="654" y="340" width="2" height="15" fill="rgb(249,174,7)"/><text x="657.00" y="350.50"></text></g><g><title>0x7fd7250fcc90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="654" y="356" width="2" height="15" fill="rgb(225,117,29)"/><text x="657.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:235) (1 samples, 0.11%)</title><rect x="656" y="372" width="1" height="15" fill="rgb(240,72,48)"/><text x="659.00" y="382.50"></text></g><g><title>0x7fd725efc120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="656" y="388" width="1" height="15" fill="rgb(227,54,44)"/><text x="659.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="656" y="356" width="2" height="15" fill="rgb(206,229,30)"/><text x="659.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="657" y="372" width="1" height="15" fill="rgb(244,91,39)"/><text x="660.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3283) (1 samples, 0.11%)</title><rect x="657" y="388" width="1" height="15" fill="rgb(253,164,5)"/><text x="660.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.11%)</title><rect x="658" y="372" width="1" height="15" fill="rgb(214,45,36)"/><text x="661.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="665" y="404" width="1" height="15" fill="rgb(233,15,37)"/><text x="668.00" y="414.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="666" y="404" width="1" height="15" fill="rgb(244,59,20)"/><text x="669.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (5 samples, 0.56%)</title><rect x="662" y="388" width="7" height="15" fill="rgb(226,67,54)"/><text x="665.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="667" y="404" width="2" height="15" fill="rgb(225,14,4)"/><text x="670.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="669" y="388" width="1" height="15" fill="rgb(250,31,53)"/><text x="672.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="670" y="388" width="1" height="15" fill="rgb(251,22,27)"/><text x="673.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.22%)</title><rect x="671" y="388" width="3" height="15" fill="rgb(226,215,9)"/><text x="674.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 4.02%)</title><rect x="628" y="196" width="47" height="15" fill="rgb(250,165,39)"/><text x="631.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (33 samples, 3.69%)</title><rect x="632" y="212" width="43" height="15" fill="rgb(218,209,52)"/><text x="635.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (24 samples, 2.68%)</title><rect x="644" y="228" width="31" height="15" fill="rgb(223,52,4)"/><text x="647.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (21 samples, 2.35%)</title><rect x="648" y="244" width="27" height="15" fill="rgb(221,75,11)"/><text x="651.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 2.23%)</title><rect x="649" y="260" width="26" height="15" fill="rgb(228,156,44)"/><text x="652.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (19 samples, 2.12%)</title><rect x="650" y="276" width="25" height="15" fill="rgb(240,42,43)"/><text x="653.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (18 samples, 2.01%)</title><rect x="652" y="292" width="23" height="15" fill="rgb(206,83,15)"/><text x="655.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (16 samples, 1.79%)</title><rect x="654" y="308" width="21" height="15" fill="rgb(226,10,13)"/><text x="657.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 1.79%)</title><rect x="654" y="324" width="21" height="15" fill="rgb(230,62,5)"/><text x="657.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (15 samples, 1.68%)</title><rect x="656" y="340" width="19" height="15" fill="rgb(248,21,40)"/><text x="659.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 1.45%)</title><rect x="658" y="356" width="17" height="15" fill="rgb(222,91,38)"/><text x="661.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (12 samples, 1.34%)</title><rect x="659" y="372" width="16" height="15" fill="rgb(205,135,30)"/><text x="662.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.11%)</title><rect x="674" y="388" width="1" height="15" fill="rgb(215,70,13)"/><text x="677.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:353) (1 samples, 0.11%)</title><rect x="675" y="196" width="2" height="15" fill="rgb(221,62,8)"/><text x="678.00" y="206.50"></text></g><g><title>0x7fd6efea2ea0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="677" y="468" width="2" height="15" fill="rgb(207,164,0)"/><text x="680.00" y="478.50"></text></g><g><title>0x7fd6efea2ea9 (libgomp.so.1.0.0) (14 samples, 1.56%)</title><rect x="679" y="468" width="19" height="15" fill="rgb(220,180,24)"/><text x="682.00" y="478.50"></text></g><g><title>0x7fd6efea2eab (libgomp.so.1.0.0) (9 samples, 1.01%)</title><rect x="698" y="468" width="12" height="15" fill="rgb(236,164,21)"/><text x="701.00" y="478.50"></text></g><g><title>0x7fd6efea1ab9 (libgomp.so.1.0.0) (36 samples, 4.02%)</title><rect x="677" y="452" width="47" height="15" fill="rgb(208,154,9)"/><text x="680.00" y="462.50">0x7f..</text></g><g><title>0x7fd6efea2ead (libgomp.so.1.0.0) (11 samples, 1.23%)</title><rect x="710" y="468" width="14" height="15" fill="rgb(219,98,10)"/><text x="713.00" y="478.50"></text></g><g><title>0x7fd6efea2cf9 (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="724" y="484" width="4" height="15" fill="rgb(229,78,54)"/><text x="727.00" y="494.50"></text></g><g><title>0x7fd6efea2cfb (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="728" y="484" width="4" height="15" fill="rgb(219,60,10)"/><text x="731.00" y="494.50"></text></g><g><title>0x7fd6efea0daa (libgomp.so.1.0.0) (9 samples, 1.01%)</title><rect x="724" y="468" width="12" height="15" fill="rgb(209,169,16)"/><text x="727.00" y="478.50"></text></g><g><title>0x7fd6efea2cfd (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="732" y="484" width="4" height="15" fill="rgb(218,14,39)"/><text x="735.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (46 samples, 5.14%)</title><rect x="677" y="196" width="60" height="15" fill="rgb(235,110,15)"/><text x="680.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (46 samples, 5.14%)</title><rect x="677" y="212" width="60" height="15" fill="rgb(241,21,32)"/><text x="680.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (46 samples, 5.14%)</title><rect x="677" y="228" width="60" height="15" fill="rgb(235,212,37)"/><text x="680.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (46 samples, 5.14%)</title><rect x="677" y="244" width="60" height="15" fill="rgb(214,117,23)"/><text x="680.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (46 samples, 5.14%)</title><rect x="677" y="260" width="60" height="15" fill="rgb(246,161,48)"/><text x="680.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (46 samples, 5.14%)</title><rect x="677" y="276" width="60" height="15" fill="rgb(216,120,29)"/><text x="680.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (46 samples, 5.14%)</title><rect x="677" y="292" width="60" height="15" fill="rgb(218,200,51)"/><text x="680.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (46 samples, 5.14%)</title><rect x="677" y="308" width="60" height="15" fill="rgb(222,128,20)"/><text x="680.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (46 samples, 5.14%)</title><rect x="677" y="324" width="60" height="15" fill="rgb(208,125,18)"/><text x="680.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (46 samples, 5.14%)</title><rect x="677" y="340" width="60" height="15" fill="rgb(247,227,29)"/><text x="680.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (46 samples, 5.14%)</title><rect x="677" y="356" width="60" height="15" fill="rgb(220,69,51)"/><text x="680.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (46 samples, 5.14%)</title><rect x="677" y="372" width="60" height="15" fill="rgb(241,229,53)"/><text x="680.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (46 samples, 5.14%)</title><rect x="677" y="388" width="60" height="15" fill="rgb(216,162,16)"/><text x="680.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (46 samples, 5.14%)</title><rect x="677" y="404" width="60" height="15" fill="rgb(229,207,38)"/><text x="680.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (46 samples, 5.14%)</title><rect x="677" y="420" width="60" height="15" fill="rgb(218,223,48)"/><text x="680.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (46 samples, 5.14%)</title><rect x="677" y="436" width="60" height="15" fill="rgb(250,8,30)"/><text x="680.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (10 samples, 1.12%)</title><rect x="724" y="452" width="13" height="15" fill="rgb(253,194,43)"/><text x="727.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:424) (1 samples, 0.11%)</title><rect x="736" y="468" width="1" height="15" fill="rgb(207,213,49)"/><text x="739.00" y="478.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (stl_bvector.h:595) (1 samples, 0.11%)</title><rect x="736" y="484" width="1" height="15" fill="rgb(220,49,14)"/><text x="739.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (stl_bvector.h:1084) (1 samples, 0.11%)</title><rect x="736" y="500" width="1" height="15" fill="rgb(251,168,13)"/><text x="739.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator+ (stl_bvector.h:281) (1 samples, 0.11%)</title><rect x="736" y="516" width="1" height="15" fill="rgb(252,222,12)"/><text x="739.00" y="526.50"></text></g><g><title>std::_Bit_iterator::operator+= (stl_bvector.h:266) (1 samples, 0.11%)</title><rect x="736" y="532" width="1" height="15" fill="rgb(236,59,43)"/><text x="739.00" y="542.50"></text></g><g><title>std::_Bit_iterator_base::_M_incr (stl_bvector.h:169) (1 samples, 0.11%)</title><rect x="736" y="548" width="1" height="15" fill="rgb(221,49,49)"/><text x="739.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="736" y="564" width="1" height="15" fill="rgb(236,117,34)"/><text x="739.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="736" y="580" width="1" height="15" fill="rgb(237,129,2)"/><text x="739.00" y="590.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.11%)</title><rect x="737" y="212" width="2" height="15" fill="rgb(231,34,50)"/><text x="740.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.11%)</title><rect x="739" y="228" width="1" height="15" fill="rgb(235,134,36)"/><text x="742.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.11%)</title><rect x="739" y="244" width="1" height="15" fill="rgb(219,207,45)"/><text x="742.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="741" y="260" width="2" height="15" fill="rgb(223,30,53)"/><text x="744.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="741" y="276" width="2" height="15" fill="rgb(242,203,8)"/><text x="744.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="743" y="260" width="1" height="15" fill="rgb(233,165,20)"/><text x="746.00" y="270.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c:1030) (1 samples, 0.11%)</title><rect x="743" y="276" width="1" height="15" fill="rgb(236,12,25)"/><text x="746.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="744" y="260" width="1" height="15" fill="rgb(222,24,11)"/><text x="747.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1290) (1 samples, 0.11%)</title><rect x="744" y="276" width="1" height="15" fill="rgb(220,110,40)"/><text x="747.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="745" y="308" width="2" height="15" fill="rgb(248,228,26)"/><text x="748.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1612) (1 samples, 0.11%)</title><rect x="745" y="324" width="2" height="15" fill="rgb(244,27,38)"/><text x="748.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="745" y="292" width="3" height="15" fill="rgb(231,4,14)"/><text x="748.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.11%)</title><rect x="747" y="308" width="1" height="15" fill="rgb(249,182,23)"/><text x="750.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.11%)</title><rect x="747" y="324" width="1" height="15" fill="rgb(229,108,34)"/><text x="750.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="745" y="260" width="4" height="15" fill="rgb(249,121,46)"/><text x="748.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="745" y="276" width="4" height="15" fill="rgb(249,201,37)"/><text x="748.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="748" y="292" width="1" height="15" fill="rgb(243,9,45)"/><text x="751.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:765) (1 samples, 0.11%)</title><rect x="748" y="308" width="1" height="15" fill="rgb(230,151,2)"/><text x="751.00" y="318.50"></text></g><g><title>_mm_mul_ps (xmmintrin.h:169) (1 samples, 0.11%)</title><rect x="748" y="324" width="1" height="15" fill="rgb(233,66,31)"/><text x="751.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (8 samples, 0.89%)</title><rect x="740" y="228" width="10" height="15" fill="rgb(247,153,24)"/><text x="743.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.78%)</title><rect x="741" y="244" width="9" height="15" fill="rgb(254,195,31)"/><text x="744.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="749" y="260" width="1" height="15" fill="rgb(217,55,43)"/><text x="752.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.11%)</title><rect x="749" y="276" width="1" height="15" fill="rgb(224,187,41)"/><text x="752.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.11%)</title><rect x="749" y="292" width="1" height="15" fill="rgb(236,202,49)"/><text x="752.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1676) (1 samples, 0.11%)</title><rect x="750" y="276" width="2" height="15" fill="rgb(231,42,8)"/><text x="753.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="752" y="292" width="1" height="15" fill="rgb(234,124,25)"/><text x="755.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:301) (1 samples, 0.11%)</title><rect x="752" y="308" width="1" height="15" fill="rgb(232,134,44)"/><text x="755.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="753" y="340" width="1" height="15" fill="rgb(230,110,6)"/><text x="756.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="754" y="356" width="2" height="15" fill="rgb(213,7,19)"/><text x="757.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (2 samples, 0.22%)</title><rect x="756" y="356" width="2" height="15" fill="rgb(252,112,50)"/><text x="759.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.67%)</title><rect x="753" y="292" width="8" height="15" fill="rgb(229,29,9)"/><text x="756.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.67%)</title><rect x="753" y="308" width="8" height="15" fill="rgb(214,205,8)"/><text x="756.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.67%)</title><rect x="753" y="324" width="8" height="15" fill="rgb(254,199,12)"/><text x="756.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.56%)</title><rect x="754" y="340" width="7" height="15" fill="rgb(223,49,27)"/><text x="757.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (2 samples, 0.22%)</title><rect x="758" y="356" width="3" height="15" fill="rgb(205,161,25)"/><text x="761.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (19 samples, 2.12%)</title><rect x="737" y="196" width="25" height="15" fill="rgb(231,172,26)"/><text x="740.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (18 samples, 2.01%)</title><rect x="739" y="212" width="23" height="15" fill="rgb(249,191,24)"/><text x="742.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (9 samples, 1.01%)</title><rect x="750" y="228" width="12" height="15" fill="rgb(232,183,2)"/><text x="753.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="750" y="244" width="12" height="15" fill="rgb(207,5,28)"/><text x="753.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.01%)</title><rect x="750" y="260" width="12" height="15" fill="rgb(245,49,50)"/><text x="753.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.89%)</title><rect x="752" y="276" width="10" height="15" fill="rgb(252,171,11)"/><text x="755.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="761" y="292" width="1" height="15" fill="rgb(218,226,13)"/><text x="764.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="761" y="308" width="1" height="15" fill="rgb(236,46,47)"/><text x="764.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="761" y="324" width="1" height="15" fill="rgb(247,167,31)"/><text x="764.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="761" y="340" width="1" height="15" fill="rgb(237,27,28)"/><text x="764.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.11%)</title><rect x="761" y="356" width="1" height="15" fill="rgb(206,199,50)"/><text x="764.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:61) (1 samples, 0.11%)</title><rect x="764" y="212" width="1" height="15" fill="rgb(237,121,20)"/><text x="767.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.11%)</title><rect x="769" y="324" width="1" height="15" fill="rgb(211,167,38)"/><text x="772.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.11%)</title><rect x="770" y="324" width="2" height="15" fill="rgb(249,216,6)"/><text x="773.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="770" y="340" width="2" height="15" fill="rgb(226,59,5)"/><text x="773.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="770" y="356" width="2" height="15" fill="rgb(254,7,11)"/><text x="773.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="772" y="356" width="1" height="15" fill="rgb(230,193,13)"/><text x="775.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.34%)</title><rect x="772" y="340" width="4" height="15" fill="rgb(221,198,48)"/><text x="775.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="773" y="356" width="3" height="15" fill="rgb(249,190,12)"/><text x="776.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="773" y="372" width="3" height="15" fill="rgb(218,46,29)"/><text x="776.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="773" y="388" width="3" height="15" fill="rgb(209,58,31)"/><text x="776.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="773" y="404" width="3" height="15" fill="rgb(220,186,24)"/><text x="776.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.22%)</title><rect x="773" y="420" width="3" height="15" fill="rgb(238,147,50)"/><text x="776.00" y="430.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="776" y="388" width="1" height="15" fill="rgb(210,171,17)"/><text x="779.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.11%)</title><rect x="776" y="404" width="1" height="15" fill="rgb(213,21,46)"/><text x="779.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.22%)</title><rect x="776" y="356" width="2" height="15" fill="rgb(227,199,1)"/><text x="779.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="776" y="372" width="2" height="15" fill="rgb(215,10,39)"/><text x="779.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="777" y="388" width="1" height="15" fill="rgb(221,77,47)"/><text x="780.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.11%)</title><rect x="777" y="404" width="1" height="15" fill="rgb(252,50,18)"/><text x="780.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.67%)</title><rect x="772" y="324" width="7" height="15" fill="rgb(222,122,35)"/><text x="775.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.34%)</title><rect x="776" y="340" width="3" height="15" fill="rgb(206,132,28)"/><text x="779.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="778" y="356" width="1" height="15" fill="rgb(237,220,14)"/><text x="781.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="778" y="372" width="1" height="15" fill="rgb(219,51,0)"/><text x="781.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.11%)</title><rect x="778" y="388" width="1" height="15" fill="rgb(227,97,24)"/><text x="781.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.11%)</title><rect x="785" y="404" width="1" height="15" fill="rgb(211,67,2)"/><text x="788.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="786" y="420" width="1" height="15" fill="rgb(232,47,3)"/><text x="789.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="786" y="436" width="1" height="15" fill="rgb(237,122,53)"/><text x="789.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="786" y="452" width="1" height="15" fill="rgb(247,9,44)"/><text x="789.00" y="462.50"></text></g><g><title>0x7fd725edce07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="786" y="468" width="1" height="15" fill="rgb(212,93,11)"/><text x="789.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.45%)</title><rect x="786" y="404" width="5" height="15" fill="rgb(248,58,3)"/><text x="789.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.34%)</title><rect x="787" y="420" width="4" height="15" fill="rgb(232,27,27)"/><text x="790.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.34%)</title><rect x="787" y="436" width="4" height="15" fill="rgb(249,219,47)"/><text x="790.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (3 samples, 0.34%)</title><rect x="787" y="452" width="4" height="15" fill="rgb(242,70,13)"/><text x="790.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:873) (3 samples, 0.34%)</title><rect x="787" y="468" width="4" height="15" fill="rgb(224,214,33)"/><text x="790.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.34%)</title><rect x="791" y="420" width="4" height="15" fill="rgb(245,125,3)"/><text x="794.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.45%)</title><rect x="791" y="404" width="6" height="15" fill="rgb(231,213,42)"/><text x="794.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.11%)</title><rect x="795" y="420" width="2" height="15" fill="rgb(234,13,23)"/><text x="798.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.11%)</title><rect x="795" y="436" width="2" height="15" fill="rgb(211,37,38)"/><text x="798.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (1 samples, 0.11%)</title><rect x="795" y="452" width="2" height="15" fill="rgb(224,229,8)"/><text x="798.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="795" y="468" width="2" height="15" fill="rgb(228,213,48)"/><text x="798.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.12%)</title><rect x="785" y="372" width="13" height="15" fill="rgb(250,25,49)"/><text x="788.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.12%)</title><rect x="785" y="388" width="13" height="15" fill="rgb(208,0,35)"/><text x="788.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="797" y="404" width="1" height="15" fill="rgb(208,163,33)"/><text x="800.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="797" y="420" width="1" height="15" fill="rgb(231,193,18)"/><text x="800.00" y="430.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (23 samples, 2.57%)</title><rect x="769" y="308" width="30" height="15" fill="rgb(222,216,24)"/><text x="772.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (15 samples, 1.68%)</title><rect x="779" y="324" width="20" height="15" fill="rgb(223,142,1)"/><text x="782.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (11 samples, 1.23%)</title><rect x="785" y="340" width="14" height="15" fill="rgb(216,167,25)"/><text x="788.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.23%)</title><rect x="785" y="356" width="14" height="15" fill="rgb(237,100,24)"/><text x="788.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="798" y="372" width="1" height="15" fill="rgb(212,207,20)"/><text x="801.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (27 samples, 3.02%)</title><rect x="766" y="244" width="36" height="15" fill="rgb(252,97,52)"/><text x="769.00" y="254.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (27 samples, 3.02%)</title><rect x="766" y="260" width="36" height="15" fill="rgb(229,150,46)"/><text x="769.00" y="270.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (25 samples, 2.79%)</title><rect x="769" y="276" width="33" height="15" fill="rgb(205,214,1)"/><text x="772.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (25 samples, 2.79%)</title><rect x="769" y="292" width="33" height="15" fill="rgb(242,24,52)"/><text x="772.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:95) (2 samples, 0.22%)</title><rect x="799" y="308" width="3" height="15" fill="rgb(223,10,52)"/><text x="802.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (148 samples, 16.54%)</title><rect x="608" y="180" width="195" height="15" fill="rgb(253,67,28)"/><text x="611.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (31 samples, 3.46%)</title><rect x="762" y="196" width="41" height="15" fill="rgb(239,26,25)"/><text x="765.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (29 samples, 3.24%)</title><rect x="765" y="212" width="38" height="15" fill="rgb(224,3,40)"/><text x="768.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (28 samples, 3.13%)</title><rect x="766" y="228" width="37" height="15" fill="rgb(210,103,7)"/><text x="769.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:318) (1 samples, 0.11%)</title><rect x="802" y="244" width="1" height="15" fill="rgb(232,105,21)"/><text x="805.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.11%)</title><rect x="803" y="180" width="2" height="15" fill="rgb(247,97,53)"/><text x="806.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.22%)</title><rect x="805" y="180" width="2" height="15" fill="rgb(240,46,8)"/><text x="808.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.34%)</title><rect x="807" y="180" width="4" height="15" fill="rgb(217,132,10)"/><text x="810.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (168 samples, 18.77%)</title><rect x="592" y="164" width="222" height="15" fill="rgb(218,142,47)"/><text x="595.00" y="174.50">_run_sequence_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.22%)</title><rect x="811" y="180" width="3" height="15" fill="rgb(254,113,18)"/><text x="814.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:45) (273 samples, 30.50%)</title><rect x="455" y="52" width="360" height="15" fill="rgb(235,25,2)"/><text x="458.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:44) (273 samples, 30.50%)</title><rect x="455" y="68" width="360" height="15" fill="rgb(254,216,7)"/><text x="458.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:29) (272 samples, 30.39%)</title><rect x="456" y="84" width="359" height="15" fill="rgb(243,124,49)"/><text x="459.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:23) (170 samples, 18.99%)</title><rect x="591" y="100" width="224" height="15" fill="rgb(231,162,34)"/><text x="594.00" y="110.50">profile (bench_AdaBoostClassi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (170 samples, 18.99%)</title><rect x="591" y="116" width="224" height="15" fill="rgb(242,107,28)"/><text x="594.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (169 samples, 18.88%)</title><rect x="592" y="132" width="223" height="15" fill="rgb(226,164,13)"/><text x="595.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (169 samples, 18.88%)</title><rect x="592" y="148" width="223" height="15" fill="rgb(231,229,20)"/><text x="595.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="814" y="164" width="1" height="15" fill="rgb(210,210,45)"/><text x="817.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="814" y="180" width="1" height="15" fill="rgb(246,171,44)"/><text x="817.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="814" y="196" width="1" height="15" fill="rgb(229,40,36)"/><text x="817.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="814" y="212" width="1" height="15" fill="rgb(251,124,5)"/><text x="817.00" y="222.50"></text></g><g><title>0x7fd725edbeb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="814" y="228" width="1" height="15" fill="rgb(206,53,3)"/><text x="817.00" y="238.50"></text></g><g><title>0x7fd725edab9b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="814" y="244" width="1" height="15" fill="rgb(208,150,13)"/><text x="817.00" y="254.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:28) (1 samples, 0.11%)</title><rect x="815" y="84" width="1" height="15" fill="rgb(229,211,43)"/><text x="818.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.11%)</title><rect x="815" y="100" width="1" height="15" fill="rgb(242,117,14)"/><text x="818.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="815" y="116" width="1" height="15" fill="rgb(228,62,8)"/><text x="818.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="815" y="132" width="1" height="15" fill="rgb(222,169,11)"/><text x="818.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="815" y="148" width="1" height="15" fill="rgb(243,62,34)"/><text x="818.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="815" y="164" width="1" height="15" fill="rgb(251,191,43)"/><text x="818.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="815" y="180" width="1" height="15" fill="rgb(240,170,23)"/><text x="818.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.11%)</title><rect x="815" y="196" width="1" height="15" fill="rgb(248,200,3)"/><text x="818.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.11%)</title><rect x="815" y="212" width="1" height="15" fill="rgb(222,106,47)"/><text x="818.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:211) (1 samples, 0.11%)</title><rect x="815" y="228" width="1" height="15" fill="rgb(219,221,1)"/><text x="818.00" y="238.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.11%)</title><rect x="815" y="244" width="1" height="15" fill="rgb(223,107,34)"/><text x="818.00" y="254.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.11%)</title><rect x="815" y="260" width="1" height="15" fill="rgb(244,15,45)"/><text x="818.00" y="270.50"></text></g><g><title>0x7fd6e5b99ff9 (?) (1 samples, 0.11%)</title><rect x="816" y="212" width="2" height="15" fill="rgb(241,117,36)"/><text x="819.00" y="222.50"></text></g><g><title>0x7fd6e5b94ef6 (?) (1 samples, 0.11%)</title><rect x="816" y="228" width="2" height="15" fill="rgb(230,143,30)"/><text x="819.00" y="238.50"></text></g><g><title>0x7fd6e5b89962 (?) (1 samples, 0.11%)</title><rect x="816" y="244" width="2" height="15" fill="rgb(233,52,46)"/><text x="819.00" y="254.50"></text></g><g><title>0x7fd6e5bbd7a7 (?) (1 samples, 0.11%)</title><rect x="816" y="260" width="2" height="15" fill="rgb(243,92,41)"/><text x="819.00" y="270.50"></text></g><g><title>0x7fd6e5bbd379 (?) (1 samples, 0.11%)</title><rect x="816" y="276" width="2" height="15" fill="rgb(222,131,22)"/><text x="819.00" y="286.50"></text></g><g><title>0x7fd6e601b8b8 (?) (1 samples, 0.11%)</title><rect x="816" y="292" width="2" height="15" fill="rgb(223,227,13)"/><text x="819.00" y="302.50"></text></g><g><title>0x7fd6e6019c7f (?) (1 samples, 0.11%)</title><rect x="816" y="308" width="2" height="15" fill="rgb(206,103,2)"/><text x="819.00" y="318.50"></text></g><g><title>0x7fd6e602c99c (?) (1 samples, 0.11%)</title><rect x="816" y="324" width="2" height="15" fill="rgb(222,105,15)"/><text x="819.00" y="334.50"></text></g><g><title>0x7fd6e5d4a396 (?) (1 samples, 0.11%)</title><rect x="816" y="340" width="2" height="15" fill="rgb(214,190,11)"/><text x="819.00" y="350.50"></text></g><g><title>0x7fd6e5b77e08 (?) (1 samples, 0.11%)</title><rect x="816" y="356" width="2" height="15" fill="rgb(233,43,18)"/><text x="819.00" y="366.50"></text></g><g><title>0x7fd725edb991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="816" y="372" width="2" height="15" fill="rgb(227,165,38)"/><text x="819.00" y="382.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="340" width="1" height="15" fill="rgb(244,15,47)"/><text x="822.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="356" width="1" height="15" fill="rgb(244,87,45)"/><text x="822.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="372" width="1" height="15" fill="rgb(237,75,52)"/><text x="822.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="820" y="340" width="3" height="15" fill="rgb(212,136,52)"/><text x="823.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="820" y="356" width="3" height="15" fill="rgb(252,125,47)"/><text x="823.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="820" y="372" width="3" height="15" fill="rgb(220,59,50)"/><text x="823.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="822" y="388" width="1" height="15" fill="rgb(206,27,19)"/><text x="825.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="822" y="404" width="1" height="15" fill="rgb(208,11,37)"/><text x="825.00" y="414.50"></text></g><g><title>0x7fd725edbd07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="822" y="420" width="1" height="15" fill="rgb(241,118,43)"/><text x="825.00" y="430.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="823" y="340" width="7" height="15" fill="rgb(226,193,4)"/><text x="826.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="830" y="340" width="4" height="15" fill="rgb(239,163,12)"/><text x="833.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="830" y="356" width="4" height="15" fill="rgb(223,229,7)"/><text x="833.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="830" y="372" width="4" height="15" fill="rgb(217,19,39)"/><text x="833.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="830" y="388" width="4" height="15" fill="rgb(206,125,29)"/><text x="833.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="834" y="340" width="3" height="15" fill="rgb(207,26,11)"/><text x="837.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="836" y="356" width="1" height="15" fill="rgb(221,91,25)"/><text x="839.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="836" y="372" width="1" height="15" fill="rgb(242,19,0)"/><text x="839.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="836" y="388" width="1" height="15" fill="rgb(247,108,26)"/><text x="839.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="836" y="404" width="1" height="15" fill="rgb(232,151,47)"/><text x="839.00" y="414.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="837" y="372" width="8" height="15" fill="rgb(230,6,32)"/><text x="840.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="844" y="388" width="1" height="15" fill="rgb(219,29,34)"/><text x="847.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="837" y="340" width="10" height="15" fill="rgb(225,152,5)"/><text x="840.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="837" y="356" width="10" height="15" fill="rgb(217,56,32)"/><text x="840.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="845" y="372" width="2" height="15" fill="rgb(244,106,38)"/><text x="848.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="845" y="388" width="2" height="15" fill="rgb(233,95,12)"/><text x="848.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="845" y="404" width="2" height="15" fill="rgb(242,39,11)"/><text x="848.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="845" y="420" width="2" height="15" fill="rgb(235,90,22)"/><text x="848.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="845" y="436" width="2" height="15" fill="rgb(236,135,40)"/><text x="848.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="845" y="452" width="2" height="15" fill="rgb(249,100,24)"/><text x="848.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="845" y="468" width="2" height="15" fill="rgb(213,57,51)"/><text x="848.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="845" y="484" width="2" height="15" fill="rgb(244,171,13)"/><text x="848.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="845" y="500" width="2" height="15" fill="rgb(219,160,51)"/><text x="848.00" y="510.50"></text></g><g><title>0x7fd6e5b619d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="865" y="356" width="1" height="15" fill="rgb(248,224,53)"/><text x="868.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="866" y="356" width="2" height="15" fill="rgb(228,216,42)"/><text x="869.00" y="366.50"></text></g><g><title>0x7fd7159a7d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="895" y="404" width="2" height="15" fill="rgb(248,61,46)"/><text x="898.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.56%)</title><rect x="895" y="388" width="7" height="15" fill="rgb(211,148,22)"/><text x="898.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.45%)</title><rect x="897" y="404" width="5" height="15" fill="rgb(234,33,7)"/><text x="900.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.58%)</title><rect x="868" y="356" width="42" height="15" fill="rgb(211,147,36)"/><text x="871.00" y="366.50">onn..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.79%)</title><rect x="889" y="372" width="21" height="15" fill="rgb(214,75,10)"/><text x="892.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (6 samples, 0.67%)</title><rect x="902" y="388" width="8" height="15" fill="rgb(205,141,54)"/><text x="905.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="910" y="356" width="9" height="15" fill="rgb(213,201,36)"/><text x="913.00" y="366.50"></text></g><g><title>0x7fd725efbdae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="918" y="372" width="1" height="15" fill="rgb(233,159,33)"/><text x="921.00" y="382.50"></text></g><g><title>0x7fd725edb92c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="922" y="372" width="1" height="15" fill="rgb(223,215,18)"/><text x="925.00" y="382.50"></text></g><g><title>0x7fd725edb945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="923" y="372" width="1" height="15" fill="rgb(246,150,48)"/><text x="926.00" y="382.50"></text></g><g><title>0x7fd725edb991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="924" y="372" width="2" height="15" fill="rgb(248,175,5)"/><text x="927.00" y="382.50"></text></g><g><title>0x7fd725edba41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="926" y="372" width="1" height="15" fill="rgb(248,167,49)"/><text x="929.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="927" y="372" width="3" height="15" fill="rgb(234,210,16)"/><text x="930.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="930" y="372" width="2" height="15" fill="rgb(235,112,26)"/><text x="933.00" y="382.50"></text></g><g><title>0x7fd725edb909 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="939" y="388" width="1" height="15" fill="rgb(225,131,4)"/><text x="942.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.90%)</title><rect x="919" y="356" width="23" height="15" fill="rgb(246,211,11)"/><text x="922.00" y="366.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="932" y="372" width="10" height="15" fill="rgb(221,22,37)"/><text x="935.00" y="382.50"></text></g><g><title>0x7fd725edb96a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="940" y="388" width="2" height="15" fill="rgb(219,27,14)"/><text x="943.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 8.27%)</title><rect x="847" y="340" width="97" height="15" fill="rgb(206,203,7)"/><text x="850.00" y="350.50">onnxruntime..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="942" y="356" width="2" height="15" fill="rgb(209,216,0)"/><text x="945.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 10.95%)</title><rect x="818" y="260" width="129" height="15" fill="rgb(229,127,52)"/><text x="821.00" y="270.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 10.95%)</title><rect x="818" y="276" width="129" height="15" fill="rgb(218,213,49)"/><text x="821.00" y="286.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 10.95%)</title><rect x="818" y="292" width="129" height="15" fill="rgb(231,177,43)"/><text x="821.00" y="302.50">onnxruntime::uti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 10.95%)</title><rect x="818" y="308" width="129" height="15" fill="rgb(206,26,16)"/><text x="821.00" y="318.50">onnxruntime::uti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 10.95%)</title><rect x="818" y="324" width="129" height="15" fill="rgb(221,228,32)"/><text x="821.00" y="334.50">onnxruntime::Seq..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="944" y="340" width="3" height="15" fill="rgb(211,106,16)"/><text x="947.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="946" y="356" width="1" height="15" fill="rgb(211,194,53)"/><text x="949.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="946" y="372" width="1" height="15" fill="rgb(242,150,44)"/><text x="949.00" y="382.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:18) (101 samples, 11.28%)</title><rect x="816" y="100" width="134" height="15" fill="rgb(222,194,40)"/><text x="819.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (101 samples, 11.28%)</title><rect x="816" y="116" width="134" height="15" fill="rgb(234,115,20)"/><text x="819.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (101 samples, 11.28%)</title><rect x="816" y="132" width="134" height="15" fill="rgb(213,31,23)"/><text x="819.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (101 samples, 11.28%)</title><rect x="816" y="148" width="134" height="15" fill="rgb(223,28,51)"/><text x="819.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (101 samples, 11.28%)</title><rect x="816" y="164" width="134" height="15" fill="rgb(231,67,44)"/><text x="819.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (101 samples, 11.28%)</title><rect x="816" y="180" width="134" height="15" fill="rgb(241,169,20)"/><text x="819.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (101 samples, 11.28%)</title><rect x="816" y="196" width="134" height="15" fill="rgb(213,41,38)"/><text x="819.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.17%)</title><rect x="818" y="212" width="132" height="15" fill="rgb(238,119,1)"/><text x="821.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.17%)</title><rect x="818" y="228" width="132" height="15" fill="rgb(252,202,32)"/><text x="821.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.17%)</title><rect x="818" y="244" width="132" height="15" fill="rgb(225,210,47)"/><text x="821.00" y="254.50">onnxruntime::pyt..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="947" y="260" width="3" height="15" fill="rgb(226,192,47)"/><text x="950.00" y="270.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="340" width="1" height="15" fill="rgb(218,187,12)"/><text x="957.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="356" width="1" height="15" fill="rgb(250,123,32)"/><text x="957.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="372" width="1" height="15" fill="rgb(224,224,51)"/><text x="957.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="388" width="1" height="15" fill="rgb(235,2,29)"/><text x="957.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="404" width="1" height="15" fill="rgb(240,157,21)"/><text x="957.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="420" width="1" height="15" fill="rgb(211,99,0)"/><text x="957.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="436" width="1" height="15" fill="rgb(205,100,44)"/><text x="957.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="452" width="1" height="15" fill="rgb(212,25,15)"/><text x="957.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="468" width="1" height="15" fill="rgb(248,113,42)"/><text x="957.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="954" y="484" width="1" height="15" fill="rgb(215,75,37)"/><text x="957.00" y="494.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="955" y="340" width="1" height="15" fill="rgb(215,189,28)"/><text x="958.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="956" y="340" width="1" height="15" fill="rgb(254,79,1)"/><text x="959.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="956" y="356" width="1" height="15" fill="rgb(239,76,30)"/><text x="959.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="956" y="372" width="1" height="15" fill="rgb(206,80,40)"/><text x="959.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="956" y="388" width="1" height="15" fill="rgb(211,147,38)"/><text x="959.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="956" y="404" width="1" height="15" fill="rgb(244,227,38)"/><text x="959.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="956" y="420" width="1" height="15" fill="rgb(235,81,25)"/><text x="959.00" y="430.50"></text></g><g><title>0x7fd725edd028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="956" y="436" width="1" height="15" fill="rgb(215,67,38)"/><text x="959.00" y="446.50"></text></g><g><title>0x7fd725edac04 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="956" y="452" width="1" height="15" fill="rgb(211,2,10)"/><text x="959.00" y="462.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="957" y="340" width="2" height="15" fill="rgb(218,213,46)"/><text x="960.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="959" y="340" width="4" height="15" fill="rgb(239,212,36)"/><text x="962.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.01%)</title><rect x="963" y="372" width="12" height="15" fill="rgb(224,179,20)"/><text x="966.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="968" y="388" width="7" height="15" fill="rgb(222,23,21)"/><text x="971.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.23%)</title><rect x="963" y="340" width="14" height="15" fill="rgb(246,98,0)"/><text x="966.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.23%)</title><rect x="963" y="356" width="14" height="15" fill="rgb(236,78,48)"/><text x="966.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="975" y="372" width="2" height="15" fill="rgb(247,160,41)"/><text x="978.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="975" y="388" width="2" height="15" fill="rgb(223,48,21)"/><text x="978.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="975" y="404" width="2" height="15" fill="rgb(247,41,31)"/><text x="978.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="976" y="420" width="1" height="15" fill="rgb(209,194,16)"/><text x="979.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="976" y="436" width="1" height="15" fill="rgb(211,208,49)"/><text x="979.00" y="446.50"></text></g><g><title>0x7fd725edcde0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="976" y="452" width="1" height="15" fill="rgb(208,121,47)"/><text x="979.00" y="462.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="977" y="340" width="2" height="15" fill="rgb(213,196,22)"/><text x="980.00" y="350.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="340" width="1" height="15" fill="rgb(239,100,0)"/><text x="982.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="356" width="1" height="15" fill="rgb(236,31,23)"/><text x="982.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="372" width="1" height="15" fill="rgb(242,3,48)"/><text x="982.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="388" width="1" height="15" fill="rgb(248,66,3)"/><text x="982.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="404" width="1" height="15" fill="rgb(217,202,2)"/><text x="982.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="420" width="1" height="15" fill="rgb(233,82,54)"/><text x="982.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="436" width="1" height="15" fill="rgb(233,52,32)"/><text x="982.00" y="446.50"></text></g><g><title>0x7fd6e5b60930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="979" y="452" width="1" height="15" fill="rgb(244,184,11)"/><text x="982.00" y="462.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.23%)</title><rect x="980" y="372" width="14" height="15" fill="rgb(237,64,27)"/><text x="983.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="988" y="388" width="6" height="15" fill="rgb(221,125,29)"/><text x="991.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.34%)</title><rect x="980" y="340" width="16" height="15" fill="rgb(211,100,48)"/><text x="983.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.34%)</title><rect x="980" y="356" width="16" height="15" fill="rgb(253,15,28)"/><text x="983.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="994" y="372" width="2" height="15" fill="rgb(209,222,6)"/><text x="997.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="994" y="388" width="2" height="15" fill="rgb(231,92,19)"/><text x="997.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="994" y="404" width="2" height="15" fill="rgb(247,217,16)"/><text x="997.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="994" y="420" width="2" height="15" fill="rgb(219,17,2)"/><text x="997.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="994" y="436" width="2" height="15" fill="rgb(217,181,46)"/><text x="997.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="994" y="452" width="2" height="15" fill="rgb(245,125,4)"/><text x="997.00" y="462.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="996" y="340" width="1" height="15" fill="rgb(231,40,6)"/><text x="999.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="996" y="356" width="1" height="15" fill="rgb(232,47,5)"/><text x="999.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="996" y="372" width="1" height="15" fill="rgb(238,222,19)"/><text x="999.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1026" y="356" width="3" height="15" fill="rgb(215,164,38)"/><text x="1029.00" y="366.50"></text></g><g><title>0x7fd6e5b60930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="1079" y="388" width="4" height="15" fill="rgb(237,42,42)"/><text x="1082.00" y="398.50"></text></g><g><title>0x7fd7159a7d50 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="1084" y="404" width="3" height="15" fill="rgb(239,73,43)"/><text x="1087.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (15 samples, 1.68%)</title><rect x="1083" y="388" width="19" height="15" fill="rgb(222,194,36)"/><text x="1086.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (12 samples, 1.34%)</title><rect x="1087" y="404" width="15" height="15" fill="rgb(246,167,44)"/><text x="1090.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (67 samples, 7.49%)</title><rect x="1029" y="356" width="88" height="15" fill="rgb(206,189,38)"/><text x="1032.00" y="366.50">onnxruntim..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 4.13%)</title><rect x="1068" y="372" width="49" height="15" fill="rgb(254,33,27)"/><text x="1071.00" y="382.50">std:..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (11 samples, 1.23%)</title><rect x="1102" y="388" width="15" height="15" fill="rgb(231,203,20)"/><text x="1105.00" y="398.50"></text></g><g><title>0x7fd725edb906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1121" y="372" width="1" height="15" fill="rgb(223,204,5)"/><text x="1124.00" y="382.50"></text></g><g><title>0x7fd725edb922 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1122" y="372" width="2" height="15" fill="rgb(214,146,27)"/><text x="1125.00" y="382.50"></text></g><g><title>0x7fd725edb92c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1124" y="372" width="1" height="15" fill="rgb(235,43,14)"/><text x="1127.00" y="382.50"></text></g><g><title>0x7fd725edb965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1125" y="372" width="1" height="15" fill="rgb(209,5,26)"/><text x="1128.00" y="382.50"></text></g><g><title>0x7fd725edb96a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1126" y="372" width="2" height="15" fill="rgb(232,153,23)"/><text x="1129.00" y="382.50"></text></g><g><title>0x7fd725edb971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1128" y="372" width="1" height="15" fill="rgb(239,141,31)"/><text x="1131.00" y="382.50"></text></g><g><title>0x7fd725edb991 (libc-2.29.so) (3 samples, 0.34%)</title><rect x="1129" y="372" width="4" height="15" fill="rgb(245,24,12)"/><text x="1132.00" y="382.50"></text></g><g><title>0x7fd725edb998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1133" y="372" width="1" height="15" fill="rgb(254,118,11)"/><text x="1136.00" y="382.50"></text></g><g><title>0x7fd725edba41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1134" y="372" width="1" height="15" fill="rgb(226,222,1)"/><text x="1137.00" y="382.50"></text></g><g><title>0x7fd725edba4d (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1135" y="372" width="3" height="15" fill="rgb(209,203,6)"/><text x="1138.00" y="382.50"></text></g><g><title>0x7fd725edba53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1138" y="372" width="1" height="15" fill="rgb(206,145,8)"/><text x="1141.00" y="382.50"></text></g><g><title>0x7fd725edba55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1139" y="372" width="2" height="15" fill="rgb(250,178,39)"/><text x="1142.00" y="382.50"></text></g><g><title>0x7fd725edbbd8 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1141" y="372" width="2" height="15" fill="rgb(222,23,26)"/><text x="1144.00" y="382.50"></text></g><g><title>0x7fd725edbbe8 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1143" y="372" width="3" height="15" fill="rgb(248,88,9)"/><text x="1146.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.45%)</title><rect x="1146" y="372" width="5" height="15" fill="rgb(218,10,32)"/><text x="1149.00" y="382.50"></text></g><g><title>0x7fd725edb904 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1160" y="388" width="2" height="15" fill="rgb(214,205,8)"/><text x="1163.00" y="398.50"></text></g><g><title>0x7fd725edb92f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1162" y="388" width="1" height="15" fill="rgb(221,171,5)"/><text x="1165.00" y="398.50"></text></g><g><title>0x7fd725edb938 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1163" y="388" width="3" height="15" fill="rgb(227,205,52)"/><text x="1166.00" y="398.50"></text></g><g><title>0x7fd725edb965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="388" width="1" height="15" fill="rgb(213,109,14)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7fd725edb991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1167" y="388" width="1" height="15" fill="rgb(228,180,8)"/><text x="1170.00" y="398.50"></text></g><g><title>0x7fd725edba55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="388" width="2" height="15" fill="rgb(246,223,44)"/><text x="1171.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 4.58%)</title><rect x="1117" y="356" width="54" height="15" fill="rgb(218,229,49)"/><text x="1120.00" y="366.50">std::..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.68%)</title><rect x="1151" y="372" width="20" height="15" fill="rgb(217,13,34)"/><text x="1154.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(219,11,34)"/><text x="1173.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (139 samples, 15.53%)</title><rect x="997" y="340" width="183" height="15" fill="rgb(229,117,13)"/><text x="1000.00" y="350.50">onnxruntime::ml::TreeEn..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (7 samples, 0.78%)</title><rect x="1171" y="356" width="9" height="15" fill="rgb(206,194,24)"/><text x="1174.00" y="366.50"></text></g><g><title>0x7fd725edcdd2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1182" y="388" width="1" height="15" fill="rgb(235,201,49)"/><text x="1185.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.55%)</title><rect x="954" y="260" width="230" height="15" fill="rgb(213,88,17)"/><text x="957.00" y="270.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.55%)</title><rect x="954" y="276" width="230" height="15" fill="rgb(241,70,31)"/><text x="957.00" y="286.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.55%)</title><rect x="954" y="292" width="230" height="15" fill="rgb(251,150,34)"/><text x="957.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.55%)</title><rect x="954" y="308" width="230" height="15" fill="rgb(233,215,19)"/><text x="957.00" y="318.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 19.55%)</title><rect x="954" y="324" width="230" height="15" fill="rgb(218,13,31)"/><text x="957.00" y="334.50">onnxruntime::SequentialExecuto..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="1180" y="340" width="4" height="15" fill="rgb(229,84,16)"/><text x="1183.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="1182" y="356" width="2" height="15" fill="rgb(230,95,15)"/><text x="1185.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1182" y="372" width="2" height="15" fill="rgb(250,113,34)"/><text x="1185.00" y="382.50"></text></g><g><title>0x7fd725edd395 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1183" y="388" width="1" height="15" fill="rgb(252,53,48)"/><text x="1186.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1184" y="260" width="3" height="15" fill="rgb(242,53,43)"/><text x="1187.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1184" y="276" width="3" height="15" fill="rgb(234,144,54)"/><text x="1187.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 19.89%)</title><rect x="954" y="244" width="234" height="15" fill="rgb(212,55,15)"/><text x="957.00" y="254.50">onnxruntime::python::addObjectM..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(253,120,49)"/><text x="1190.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(243,86,22)"/><text x="1190.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(213,17,50)"/><text x="1190.00" y="302.50"></text></g><g><title>0x7fd725edbd07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(207,176,28)"/><text x="1190.00" y="318.50"></text></g><g><title>all (895 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(205,120,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:52) (284 samples, 31.73%)</title><rect x="815" y="52" width="375" height="15" fill="rgb(239,165,48)"/><text x="818.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:51) (284 samples, 31.73%)</title><rect x="815" y="68" width="375" height="15" fill="rgb(239,189,9)"/><text x="818.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:29) (283 samples, 31.62%)</title><rect x="816" y="84" width="374" height="15" fill="rgb(205,147,7)"/><text x="819.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py:23) (182 samples, 20.34%)</title><rect x="950" y="100" width="240" height="15" fill="rgb(211,140,54)"/><text x="953.00" y="110.50">profile (bench_AdaBoostClassifi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (179 samples, 20.00%)</title><rect x="954" y="116" width="236" height="15" fill="rgb(223,106,46)"/><text x="957.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (179 samples, 20.00%)</title><rect x="954" y="132" width="236" height="15" fill="rgb(227,36,18)"/><text x="957.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (179 samples, 20.00%)</title><rect x="954" y="148" width="236" height="15" fill="rgb(245,10,51)"/><text x="957.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (179 samples, 20.00%)</title><rect x="954" y="164" width="236" height="15" fill="rgb(241,30,47)"/><text x="957.00" y="174.50">_run_whole_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (179 samples, 20.00%)</title><rect x="954" y="180" width="236" height="15" fill="rgb(221,134,16)"/><text x="957.00" y="190.50">run (mlprodict/onnxrt/ops_whole..</text></g><g><title>run (onnxruntime/capi/session.py:136) (179 samples, 20.00%)</title><rect x="954" y="196" width="236" height="15" fill="rgb(235,84,54)"/><text x="957.00" y="206.50">run (onnxruntime/capi/session.p..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 20.00%)</title><rect x="954" y="212" width="236" height="15" fill="rgb(215,130,22)"/><text x="957.00" y="222.50">pybind11::cpp_function::dispatc..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 20.00%)</title><rect x="954" y="228" width="236" height="15" fill="rgb(208,87,19)"/><text x="957.00" y="238.50">void pybind11::cpp_function::in..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(236,135,47)"/><text x="1191.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(225,222,34)"/><text x="1191.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(238,55,48)"/><text x="1191.00" y="286.50"></text></g><g><title>0x7fd725efbd50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(230,21,30)"/><text x="1191.00" y="302.50"></text></g></g></svg>