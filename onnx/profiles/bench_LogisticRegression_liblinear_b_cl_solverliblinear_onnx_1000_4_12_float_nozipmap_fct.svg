<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2118" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2101.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2101.00"> </text><g id="frames"><g><title>0x7f30c4b0eb16 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(234,160,7)"/><text x="13.00" y="62.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="628" width="3" height="15" fill="rgb(248,37,16)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="644" width="3" height="15" fill="rgb(218,46,52)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="660" width="3" height="15" fill="rgb(243,46,14)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="676" width="3" height="15" fill="rgb(223,42,13)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="692" width="3" height="15" fill="rgb(251,213,2)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="708" width="3" height="15" fill="rgb(228,44,26)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.22%)</title><rect x="12" y="724" width="3" height="15" fill="rgb(208,41,51)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="740" width="3" height="15" fill="rgb(227,229,29)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="756" width="3" height="15" fill="rgb(223,20,46)"/><text x="15.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="772" width="3" height="15" fill="rgb(211,157,5)"/><text x="15.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="788" width="3" height="15" fill="rgb(226,85,37)"/><text x="15.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="804" width="3" height="15" fill="rgb(207,185,0)"/><text x="15.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="820" width="3" height="15" fill="rgb(253,119,43)"/><text x="15.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="836" width="3" height="15" fill="rgb(232,177,42)"/><text x="15.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="852" width="3" height="15" fill="rgb(227,122,35)"/><text x="15.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(231,222,54)"/><text x="15.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(239,50,49)"/><text x="15.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(247,76,45)"/><text x="15.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(237,6,8)"/><text x="15.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(210,138,3)"/><text x="15.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(232,52,39)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.22%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(220,177,15)"/><text x="15.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(246,77,27)"/><text x="15.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(247,50,1)"/><text x="15.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(218,214,21)"/><text x="15.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(240,18,35)"/><text x="15.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1044" width="3" height="15" fill="rgb(244,214,14)"/><text x="15.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="1060" width="3" height="15" fill="rgb(217,161,34)"/><text x="15.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1076" width="3" height="15" fill="rgb(232,49,45)"/><text x="15.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="1092" width="3" height="15" fill="rgb(221,220,18)"/><text x="15.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1108" width="3" height="15" fill="rgb(212,133,15)"/><text x="15.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1124" width="3" height="15" fill="rgb(243,32,0)"/><text x="15.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1140" width="3" height="15" fill="rgb(208,62,40)"/><text x="15.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1156" width="3" height="15" fill="rgb(226,143,47)"/><text x="15.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1172" width="3" height="15" fill="rgb(208,98,1)"/><text x="15.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="1188" width="3" height="15" fill="rgb(254,177,52)"/><text x="15.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="1204" width="3" height="15" fill="rgb(253,158,3)"/><text x="15.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="1220" width="3" height="15" fill="rgb(213,213,6)"/><text x="15.00" y="1230.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="1236" width="3" height="15" fill="rgb(232,198,40)"/><text x="15.00" y="1246.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="12" y="1252" width="3" height="15" fill="rgb(228,1,17)"/><text x="15.00" y="1262.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="12" y="1268" width="3" height="15" fill="rgb(254,37,41)"/><text x="15.00" y="1278.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.22%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(245,123,53)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(232,20,50)"/><text x="18.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(252,195,53)"/><text x="18.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(228,79,21)"/><text x="18.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(241,58,1)"/><text x="18.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(219,225,39)"/><text x="18.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.22%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(248,88,29)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(235,189,6)"/><text x="18.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(215,119,39)"/><text x="18.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(220,102,0)"/><text x="18.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(248,75,23)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(249,164,48)"/><text x="18.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py) (1 samples, 0.22%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(253,17,26)"/><text x="18.00" y="830.50"></text></g><g><title>compile (re.py) (1 samples, 0.22%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(228,12,50)"/><text x="18.00" y="846.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(230,11,52)"/><text x="18.00" y="862.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(208,35,31)"/><text x="18.00" y="878.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(206,5,42)"/><text x="18.00" y="894.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(215,34,20)"/><text x="18.00" y="910.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(213,87,37)"/><text x="18.00" y="926.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(228,171,50)"/><text x="18.00" y="942.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(210,172,0)"/><text x="18.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="340" width="8" height="15" fill="rgb(225,148,40)"/><text x="15.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="356" width="8" height="15" fill="rgb(236,112,21)"/><text x="15.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="372" width="8" height="15" fill="rgb(247,147,53)"/><text x="15.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="388" width="8" height="15" fill="rgb(254,66,19)"/><text x="15.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="12" y="404" width="8" height="15" fill="rgb(228,93,25)"/><text x="15.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="420" width="8" height="15" fill="rgb(237,1,48)"/><text x="15.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.66%)</title><rect x="12" y="436" width="8" height="15" fill="rgb(236,117,36)"/><text x="15.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="452" width="8" height="15" fill="rgb(243,155,3)"/><text x="15.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="468" width="8" height="15" fill="rgb(230,129,6)"/><text x="15.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="484" width="8" height="15" fill="rgb(252,87,13)"/><text x="15.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="12" y="500" width="8" height="15" fill="rgb(212,150,49)"/><text x="15.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="516" width="8" height="15" fill="rgb(228,216,53)"/><text x="15.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.66%)</title><rect x="12" y="532" width="8" height="15" fill="rgb(234,27,10)"/><text x="15.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="548" width="8" height="15" fill="rgb(235,110,12)"/><text x="15.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="564" width="8" height="15" fill="rgb(216,109,39)"/><text x="15.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="580" width="8" height="15" fill="rgb(235,175,16)"/><text x="15.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="12" y="596" width="8" height="15" fill="rgb(221,222,53)"/><text x="15.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="12" y="612" width="8" height="15" fill="rgb(232,41,18)"/><text x="15.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="628" width="3" height="15" fill="rgb(238,142,15)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="644" width="3" height="15" fill="rgb(225,38,12)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="660" width="3" height="15" fill="rgb(210,68,8)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="676" width="3" height="15" fill="rgb(232,192,4)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="692" width="3" height="15" fill="rgb(220,212,37)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="708" width="3" height="15" fill="rgb(254,142,10)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.22%)</title><rect x="17" y="724" width="3" height="15" fill="rgb(217,5,33)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="740" width="3" height="15" fill="rgb(207,9,52)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="756" width="3" height="15" fill="rgb(220,27,6)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="772" width="3" height="15" fill="rgb(234,4,22)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="788" width="3" height="15" fill="rgb(207,193,35)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="804" width="3" height="15" fill="rgb(206,31,13)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="820" width="3" height="15" fill="rgb(211,30,37)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="836" width="3" height="15" fill="rgb(254,110,33)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="852" width="3" height="15" fill="rgb(221,69,2)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="868" width="3" height="15" fill="rgb(216,131,11)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(250,73,6)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(208,148,19)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.22%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(249,87,18)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(219,15,13)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(248,74,41)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(244,63,53)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(253,45,53)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(212,165,34)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="1012" width="3" height="15" fill="rgb(211,226,12)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1028" width="3" height="15" fill="rgb(205,121,15)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1044" width="3" height="15" fill="rgb(254,223,48)"/><text x="20.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1060" width="3" height="15" fill="rgb(244,190,44)"/><text x="20.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="1076" width="3" height="15" fill="rgb(235,15,6)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1092" width="3" height="15" fill="rgb(206,142,50)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.22%)</title><rect x="17" y="1108" width="3" height="15" fill="rgb(225,89,50)"/><text x="20.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1124" width="3" height="15" fill="rgb(235,63,24)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1140" width="3" height="15" fill="rgb(211,164,37)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1156" width="3" height="15" fill="rgb(243,89,32)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1172" width="3" height="15" fill="rgb(205,78,43)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1188" width="3" height="15" fill="rgb(227,83,4)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="1204" width="3" height="15" fill="rgb(233,228,42)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1220" width="3" height="15" fill="rgb(248,34,3)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.22%)</title><rect x="17" y="1236" width="3" height="15" fill="rgb(238,112,41)"/><text x="20.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1252" width="3" height="15" fill="rgb(228,139,38)"/><text x="20.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1268" width="3" height="15" fill="rgb(216,94,21)"/><text x="20.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1284" width="3" height="15" fill="rgb(246,52,50)"/><text x="20.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="1300" width="3" height="15" fill="rgb(210,197,17)"/><text x="20.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1316" width="3" height="15" fill="rgb(236,223,53)"/><text x="20.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="17" y="1332" width="3" height="15" fill="rgb(220,201,51)"/><text x="20.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1348" width="3" height="15" fill="rgb(253,19,0)"/><text x="20.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1364" width="3" height="15" fill="rgb(254,16,20)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1380" width="3" height="15" fill="rgb(240,138,24)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1396" width="3" height="15" fill="rgb(244,144,27)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1412" width="3" height="15" fill="rgb(225,177,52)"/><text x="20.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="1428" width="3" height="15" fill="rgb(234,147,10)"/><text x="20.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1444" width="3" height="15" fill="rgb(250,11,39)"/><text x="20.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="1460" width="3" height="15" fill="rgb(209,55,25)"/><text x="20.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1476" width="3" height="15" fill="rgb(210,224,39)"/><text x="20.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1492" width="3" height="15" fill="rgb(214,194,20)"/><text x="20.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1508" width="3" height="15" fill="rgb(213,46,9)"/><text x="20.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="1524" width="3" height="15" fill="rgb(244,89,33)"/><text x="20.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1540" width="3" height="15" fill="rgb(253,68,44)"/><text x="20.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog.py) (1 samples, 0.22%)</title><rect x="17" y="1556" width="3" height="15" fill="rgb(243,113,41)"/><text x="20.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1572" width="3" height="15" fill="rgb(222,79,54)"/><text x="20.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1588" width="3" height="15" fill="rgb(226,91,42)"/><text x="20.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1604" width="3" height="15" fill="rgb(213,126,29)"/><text x="20.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="17" y="1620" width="3" height="15" fill="rgb(233,155,54)"/><text x="20.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1636" width="3" height="15" fill="rgb(236,28,0)"/><text x="20.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog_ip.py) (1 samples, 0.22%)</title><rect x="17" y="1652" width="3" height="15" fill="rgb(243,164,10)"/><text x="20.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1668" width="3" height="15" fill="rgb(230,74,52)"/><text x="20.00" y="1678.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="17" y="1684" width="3" height="15" fill="rgb(218,1,43)"/><text x="20.00" y="1694.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(219,19,0)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(241,172,42)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(232,178,10)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(239,201,21)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(229,5,27)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(243,119,6)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(209,198,1)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(240,177,22)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(226,219,22)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(249,147,12)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(240,163,41)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(252,202,6)"/><text x="23.00" y="766.50"></text></g><g><title>0x7f30b135440e (?) (1 samples, 0.22%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(231,188,6)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(228,16,10)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(212,164,21)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(215,42,8)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(215,78,2)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(244,92,34)"/><text x="23.00" y="862.50"></text></g><g><title>0x7f30b110dcd2 (?) (1 samples, 0.22%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(230,145,49)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(218,20,14)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(222,74,37)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(253,18,32)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(232,141,10)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(234,41,36)"/><text x="23.00" y="958.50"></text></g><g><title>0x7f30b08030e5 (?) (1 samples, 0.22%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(217,3,12)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(206,10,6)"/><text x="23.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(242,39,45)"/><text x="23.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(230,51,17)"/><text x="23.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(244,27,12)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(230,203,20)"/><text x="23.00" y="1054.50"></text></g><g><title>0x7f30b0587e68 (?) (1 samples, 0.22%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(214,221,32)"/><text x="23.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(246,62,52)"/><text x="23.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(212,196,16)"/><text x="23.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(251,211,54)"/><text x="23.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(228,82,40)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(219,30,31)"/><text x="23.00" y="1150.50"></text></g><g><title>0x7f30b03182fb (?) (1 samples, 0.22%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(229,142,29)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(237,70,32)"/><text x="23.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(229,196,20)"/><text x="23.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(209,180,43)"/><text x="23.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(247,139,5)"/><text x="23.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(240,180,37)"/><text x="23.00" y="1246.50"></text></g><g><title>0x7f30b00fc153 (?) (1 samples, 0.22%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(210,45,41)"/><text x="23.00" y="1262.50"></text></g><g><title>0x7f30b00fac13 (?) (1 samples, 0.22%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(224,204,9)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(241,7,26)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(233,127,37)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1316" width="2" height="15" fill="rgb(233,32,25)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="1332" width="2" height="15" fill="rgb(217,218,53)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1348" width="2" height="15" fill="rgb(217,63,30)"/><text x="23.00" y="1358.50"></text></g><g><title>0x7f30afe97181 (?) (1 samples, 0.22%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(245,180,33)"/><text x="23.00" y="1374.50"></text></g><g><title>0x7f30afe9a1c9 (?) (1 samples, 0.22%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(233,103,12)"/><text x="23.00" y="1390.50"></text></g><g><title>0x7f30afec6167 (?) (1 samples, 0.22%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(215,81,14)"/><text x="23.00" y="1406.50"></text></g><g><title>0x7f30afec1b64 (?) (1 samples, 0.22%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(211,2,51)"/><text x="23.00" y="1422.50"></text></g><g><title>0x7f30afea507b (?) (1 samples, 0.22%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(247,153,7)"/><text x="23.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.22%)</title><rect x="20" y="1444" width="2" height="15" fill="rgb(249,167,53)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="1460" width="2" height="15" fill="rgb(233,132,23)"/><text x="23.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="1476" width="2" height="15" fill="rgb(242,210,45)"/><text x="23.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(229,90,21)"/><text x="23.00" y="1502.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.22%)</title><rect x="20" y="1508" width="2" height="15" fill="rgb(252,188,47)"/><text x="23.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.10%)</title><rect x="12" y="292" width="13" height="15" fill="rgb(237,0,41)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="12" y="308" width="13" height="15" fill="rgb(253,85,3)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="12" y="324" width="13" height="15" fill="rgb(208,19,34)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="340" width="5" height="15" fill="rgb(210,39,46)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="20" y="356" width="5" height="15" fill="rgb(244,33,46)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="372" width="5" height="15" fill="rgb(220,12,42)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.44%)</title><rect x="20" y="388" width="5" height="15" fill="rgb(247,103,25)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="404" width="5" height="15" fill="rgb(226,39,53)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="420" width="5" height="15" fill="rgb(225,110,30)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="436" width="5" height="15" fill="rgb(243,169,8)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="20" y="452" width="5" height="15" fill="rgb(218,169,5)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="468" width="5" height="15" fill="rgb(209,60,51)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.44%)</title><rect x="20" y="484" width="5" height="15" fill="rgb(216,190,27)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="500" width="5" height="15" fill="rgb(228,137,39)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="516" width="5" height="15" fill="rgb(250,16,25)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="532" width="5" height="15" fill="rgb(244,112,9)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="20" y="548" width="5" height="15" fill="rgb(210,62,44)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="20" y="564" width="5" height="15" fill="rgb(228,53,6)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.22%)</title><rect x="22" y="580" width="3" height="15" fill="rgb(244,81,45)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="596" width="3" height="15" fill="rgb(212,143,53)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="612" width="3" height="15" fill="rgb(205,116,7)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="628" width="3" height="15" fill="rgb(250,62,12)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="644" width="3" height="15" fill="rgb(249,94,33)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="660" width="3" height="15" fill="rgb(246,114,49)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="676" width="3" height="15" fill="rgb(235,41,0)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="692" width="3" height="15" fill="rgb(216,225,30)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="708" width="3" height="15" fill="rgb(238,63,8)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="724" width="3" height="15" fill="rgb(215,102,4)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="740" width="3" height="15" fill="rgb(252,161,43)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="756" width="3" height="15" fill="rgb(209,77,52)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.22%)</title><rect x="22" y="772" width="3" height="15" fill="rgb(213,146,51)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="788" width="3" height="15" fill="rgb(252,86,2)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(254,95,8)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(225,43,46)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(233,75,54)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(236,211,7)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.22%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(214,39,39)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(213,10,48)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(219,109,30)"/><text x="25.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(213,215,9)"/><text x="25.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(242,96,17)"/><text x="25.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(219,127,14)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.22%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(224,70,15)"/><text x="25.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="980" width="3" height="15" fill="rgb(234,227,17)"/><text x="25.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="996" width="3" height="15" fill="rgb(218,76,48)"/><text x="25.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1012" width="3" height="15" fill="rgb(222,47,5)"/><text x="25.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1028" width="3" height="15" fill="rgb(213,131,41)"/><text x="25.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1044" width="3" height="15" fill="rgb(234,105,43)"/><text x="25.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="1060" width="3" height="15" fill="rgb(240,157,49)"/><text x="25.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1076" width="3" height="15" fill="rgb(213,157,1)"/><text x="25.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1092" width="3" height="15" fill="rgb(219,84,35)"/><text x="25.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1108" width="3" height="15" fill="rgb(243,121,0)"/><text x="25.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1124" width="3" height="15" fill="rgb(251,83,13)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1140" width="3" height="15" fill="rgb(211,205,19)"/><text x="25.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.22%)</title><rect x="22" y="1156" width="3" height="15" fill="rgb(245,132,20)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1172" width="3" height="15" fill="rgb(222,226,5)"/><text x="25.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1188" width="3" height="15" fill="rgb(213,138,36)"/><text x="25.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1204" width="3" height="15" fill="rgb(232,54,7)"/><text x="25.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1220" width="3" height="15" fill="rgb(254,59,20)"/><text x="25.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1236" width="3" height="15" fill="rgb(242,20,2)"/><text x="25.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="1252" width="3" height="15" fill="rgb(213,187,5)"/><text x="25.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1268" width="3" height="15" fill="rgb(218,181,36)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1284" width="3" height="15" fill="rgb(208,209,20)"/><text x="25.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1300" width="3" height="15" fill="rgb(252,38,53)"/><text x="25.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1316" width="3" height="15" fill="rgb(221,59,5)"/><text x="25.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1332" width="3" height="15" fill="rgb(233,143,49)"/><text x="25.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.22%)</title><rect x="22" y="1348" width="3" height="15" fill="rgb(253,119,8)"/><text x="25.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1364" width="3" height="15" fill="rgb(207,177,36)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1380" width="3" height="15" fill="rgb(249,225,48)"/><text x="25.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1396" width="3" height="15" fill="rgb(237,20,37)"/><text x="25.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1412" width="3" height="15" fill="rgb(253,77,1)"/><text x="25.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1428" width="3" height="15" fill="rgb(222,3,36)"/><text x="25.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.22%)</title><rect x="22" y="1444" width="3" height="15" fill="rgb(252,160,44)"/><text x="25.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1460" width="3" height="15" fill="rgb(225,207,3)"/><text x="25.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1476" width="3" height="15" fill="rgb(240,199,21)"/><text x="25.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1492" width="3" height="15" fill="rgb(238,20,43)"/><text x="25.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1508" width="3" height="15" fill="rgb(223,108,1)"/><text x="25.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1524" width="3" height="15" fill="rgb(232,48,22)"/><text x="25.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.22%)</title><rect x="22" y="1540" width="3" height="15" fill="rgb(251,205,49)"/><text x="25.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1556" width="3" height="15" fill="rgb(228,55,21)"/><text x="25.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1572" width="3" height="15" fill="rgb(239,74,19)"/><text x="25.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1588" width="3" height="15" fill="rgb(236,66,35)"/><text x="25.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1604" width="3" height="15" fill="rgb(243,41,29)"/><text x="25.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1620" width="3" height="15" fill="rgb(213,211,40)"/><text x="25.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.22%)</title><rect x="22" y="1636" width="3" height="15" fill="rgb(252,118,19)"/><text x="25.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1652" width="3" height="15" fill="rgb(223,111,23)"/><text x="25.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1668" width="3" height="15" fill="rgb(244,16,50)"/><text x="25.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1684" width="3" height="15" fill="rgb(232,146,51)"/><text x="25.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1700" width="3" height="15" fill="rgb(248,106,52)"/><text x="25.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1716" width="3" height="15" fill="rgb(215,46,27)"/><text x="25.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.22%)</title><rect x="22" y="1732" width="3" height="15" fill="rgb(229,225,16)"/><text x="25.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1748" width="3" height="15" fill="rgb(247,43,3)"/><text x="25.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1764" width="3" height="15" fill="rgb(244,128,29)"/><text x="25.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1780" width="3" height="15" fill="rgb(218,220,42)"/><text x="25.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1796" width="3" height="15" fill="rgb(250,17,13)"/><text x="25.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1812" width="3" height="15" fill="rgb(236,115,53)"/><text x="25.00" y="1822.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.22%)</title><rect x="22" y="1828" width="3" height="15" fill="rgb(231,182,16)"/><text x="25.00" y="1838.50"></text></g><g><title>json_load (matplotlib/font_manager.py) (1 samples, 0.22%)</title><rect x="22" y="1844" width="3" height="15" fill="rgb(253,120,5)"/><text x="25.00" y="1854.50"></text></g><g><title>load (json/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="1860" width="3" height="15" fill="rgb(236,78,48)"/><text x="25.00" y="1870.50"></text></g><g><title>loads (json/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="1876" width="3" height="15" fill="rgb(252,120,2)"/><text x="25.00" y="1886.50"></text></g><g><title>decode (json/decoder.py) (1 samples, 0.22%)</title><rect x="22" y="1892" width="3" height="15" fill="rgb(236,34,40)"/><text x="25.00" y="1902.50"></text></g><g><title>raw_decode (json/decoder.py) (1 samples, 0.22%)</title><rect x="22" y="1908" width="3" height="15" fill="rgb(244,179,9)"/><text x="25.00" y="1918.50"></text></g><g><title>scanner_call (_json.c) (1 samples, 0.22%)</title><rect x="22" y="1924" width="3" height="15" fill="rgb(221,150,15)"/><text x="25.00" y="1934.50"></text></g><g><title>scan_once_unicode (_json.c) (1 samples, 0.22%)</title><rect x="22" y="1940" width="3" height="15" fill="rgb(219,67,41)"/><text x="25.00" y="1950.50"></text></g><g><title>_parse_object_unicode (_json.c) (1 samples, 0.22%)</title><rect x="22" y="1956" width="3" height="15" fill="rgb(247,189,54)"/><text x="25.00" y="1966.50"></text></g><g><title>scan_once_unicode (_json.c) (1 samples, 0.22%)</title><rect x="22" y="1972" width="3" height="15" fill="rgb(222,101,51)"/><text x="25.00" y="1982.50"></text></g><g><title>_parse_array_unicode (_json.c) (1 samples, 0.22%)</title><rect x="22" y="1988" width="3" height="15" fill="rgb(226,87,36)"/><text x="25.00" y="1998.50"></text></g><g><title>scan_once_unicode (_json.c) (1 samples, 0.22%)</title><rect x="22" y="2004" width="3" height="15" fill="rgb(211,107,21)"/><text x="25.00" y="2014.50"></text></g><g><title>_parse_object_unicode (_json.c) (1 samples, 0.22%)</title><rect x="22" y="2020" width="3" height="15" fill="rgb(211,82,19)"/><text x="25.00" y="2030.50"></text></g><g><title>_json_decode (matplotlib/font_manager.py) (1 samples, 0.22%)</title><rect x="22" y="2036" width="3" height="15" fill="rgb(252,194,46)"/><text x="25.00" y="2046.50"></text></g><g><title>isabs (posixpath.py) (1 samples, 0.22%)</title><rect x="22" y="2052" width="3" height="15" fill="rgb(243,81,14)"/><text x="25.00" y="2062.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.22%)</title><rect x="22" y="2068" width="3" height="15" fill="rgb(215,137,4)"/><text x="25.00" y="2078.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="836" width="3" height="15" fill="rgb(253,188,16)"/><text x="28.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="852" width="3" height="15" fill="rgb(241,68,46)"/><text x="28.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(210,134,30)"/><text x="28.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(236,147,6)"/><text x="28.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(210,191,15)"/><text x="28.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(252,27,33)"/><text x="28.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(207,60,17)"/><text x="28.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(234,66,45)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(233,162,4)"/><text x="28.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="25" y="980" width="3" height="15" fill="rgb(235,113,51)"/><text x="28.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="25" y="996" width="3" height="15" fill="rgb(212,40,36)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="12" y="196" width="18" height="15" fill="rgb(224,172,1)"/><text x="15.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="12" y="212" width="18" height="15" fill="rgb(249,7,22)"/><text x="15.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="12" y="228" width="18" height="15" fill="rgb(220,5,6)"/><text x="15.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="12" y="244" width="18" height="15" fill="rgb(219,105,4)"/><text x="15.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.54%)</title><rect x="12" y="260" width="18" height="15" fill="rgb(222,12,26)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="12" y="276" width="18" height="15" fill="rgb(252,34,40)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.44%)</title><rect x="25" y="292" width="5" height="15" fill="rgb(205,58,22)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="308" width="5" height="15" fill="rgb(217,99,25)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="324" width="5" height="15" fill="rgb(207,208,19)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="340" width="5" height="15" fill="rgb(215,178,37)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="25" y="356" width="5" height="15" fill="rgb(220,153,31)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="372" width="5" height="15" fill="rgb(221,217,42)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.44%)</title><rect x="25" y="388" width="5" height="15" fill="rgb(226,218,22)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="404" width="5" height="15" fill="rgb(249,142,12)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="420" width="5" height="15" fill="rgb(228,122,18)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="436" width="5" height="15" fill="rgb(208,102,14)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="25" y="452" width="5" height="15" fill="rgb(244,113,41)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="468" width="5" height="15" fill="rgb(243,222,17)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.44%)</title><rect x="25" y="484" width="5" height="15" fill="rgb(220,55,8)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="500" width="5" height="15" fill="rgb(232,100,17)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="516" width="5" height="15" fill="rgb(233,53,18)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="532" width="5" height="15" fill="rgb(253,48,2)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="25" y="548" width="5" height="15" fill="rgb(216,119,33)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="564" width="5" height="15" fill="rgb(217,164,46)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.44%)</title><rect x="25" y="580" width="5" height="15" fill="rgb(218,156,34)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="596" width="5" height="15" fill="rgb(237,134,11)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="612" width="5" height="15" fill="rgb(207,51,33)"/><text x="28.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="628" width="5" height="15" fill="rgb(222,114,54)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="644" width="5" height="15" fill="rgb(252,228,11)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="660" width="5" height="15" fill="rgb(243,120,13)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="676" width="5" height="15" fill="rgb(244,48,43)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="25" y="692" width="5" height="15" fill="rgb(205,107,34)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="708" width="5" height="15" fill="rgb(249,53,35)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.44%)</title><rect x="25" y="724" width="5" height="15" fill="rgb(234,124,0)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="740" width="5" height="15" fill="rgb(205,180,53)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="756" width="5" height="15" fill="rgb(232,206,41)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="772" width="5" height="15" fill="rgb(239,226,43)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="25" y="788" width="5" height="15" fill="rgb(211,156,32)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="804" width="5" height="15" fill="rgb(221,148,11)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.44%)</title><rect x="25" y="820" width="5" height="15" fill="rgb(251,14,13)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(233,110,14)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(229,228,22)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(234,214,42)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(225,50,48)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(230,149,39)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.22%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(244,191,52)"/><text x="31.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.22%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(227,84,48)"/><text x="31.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.22%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(210,36,49)"/><text x="31.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(205,223,16)"/><text x="31.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(208,177,27)"/><text x="31.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(232,124,45)"/><text x="31.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(227,216,20)"/><text x="31.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(225,32,4)"/><text x="31.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(234,149,28)"/><text x="31.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(205,51,47)"/><text x="31.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(235,7,0)"/><text x="31.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(242,0,49)"/><text x="31.00" y="1102.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.22%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(247,145,5)"/><text x="31.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="628" width="3" height="15" fill="rgb(208,119,42)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="644" width="3" height="15" fill="rgb(251,228,14)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="660" width="3" height="15" fill="rgb(228,100,16)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="676" width="3" height="15" fill="rgb(220,225,13)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="692" width="3" height="15" fill="rgb(254,187,9)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="708" width="3" height="15" fill="rgb(232,123,17)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.22%)</title><rect x="30" y="724" width="3" height="15" fill="rgb(247,104,3)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="740" width="3" height="15" fill="rgb(229,6,28)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="756" width="3" height="15" fill="rgb(250,1,40)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="772" width="3" height="15" fill="rgb(220,146,14)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="788" width="3" height="15" fill="rgb(220,207,44)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="804" width="3" height="15" fill="rgb(211,86,26)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.22%)</title><rect x="30" y="820" width="3" height="15" fill="rgb(217,11,3)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="836" width="3" height="15" fill="rgb(239,1,8)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="852" width="3" height="15" fill="rgb(232,117,12)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="868" width="3" height="15" fill="rgb(242,52,38)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="884" width="3" height="15" fill="rgb(252,70,53)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(224,194,47)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.22%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(222,91,19)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="932" width="3" height="15" fill="rgb(229,176,11)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="948" width="3" height="15" fill="rgb(225,171,20)"/><text x="33.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="964" width="3" height="15" fill="rgb(242,45,48)"/><text x="33.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="980" width="3" height="15" fill="rgb(239,144,3)"/><text x="33.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="996" width="3" height="15" fill="rgb(227,28,38)"/><text x="33.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1012" width="3" height="15" fill="rgb(245,129,6)"/><text x="33.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1028" width="3" height="15" fill="rgb(206,155,36)"/><text x="33.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1044" width="3" height="15" fill="rgb(219,13,25)"/><text x="33.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.22%)</title><rect x="30" y="1060" width="3" height="15" fill="rgb(211,175,52)"/><text x="33.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1076" width="3" height="15" fill="rgb(213,67,26)"/><text x="33.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1092" width="3" height="15" fill="rgb(235,90,9)"/><text x="33.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1108" width="3" height="15" fill="rgb(250,120,34)"/><text x="33.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1124" width="3" height="15" fill="rgb(213,60,4)"/><text x="33.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1140" width="3" height="15" fill="rgb(244,171,10)"/><text x="33.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (1 samples, 0.22%)</title><rect x="30" y="1156" width="3" height="15" fill="rgb(238,47,13)"/><text x="33.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1172" width="3" height="15" fill="rgb(238,218,28)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1188" width="3" height="15" fill="rgb(239,127,14)"/><text x="33.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1204" width="3" height="15" fill="rgb(215,45,16)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1220" width="3" height="15" fill="rgb(238,157,21)"/><text x="33.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1236" width="3" height="15" fill="rgb(219,78,43)"/><text x="33.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1252" width="3" height="15" fill="rgb(252,157,44)"/><text x="33.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1268" width="3" height="15" fill="rgb(244,38,29)"/><text x="33.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py) (1 samples, 0.22%)</title><rect x="30" y="1284" width="3" height="15" fill="rgb(222,174,13)"/><text x="33.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1300" width="3" height="15" fill="rgb(249,7,38)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1316" width="3" height="15" fill="rgb(233,182,24)"/><text x="33.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1332" width="3" height="15" fill="rgb(240,154,0)"/><text x="33.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1348" width="3" height="15" fill="rgb(227,31,34)"/><text x="33.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1364" width="3" height="15" fill="rgb(236,44,25)"/><text x="33.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1380" width="3" height="15" fill="rgb(222,55,5)"/><text x="33.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1396" width="3" height="15" fill="rgb(208,58,5)"/><text x="33.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1412" width="3" height="15" fill="rgb(217,95,51)"/><text x="33.00" y="1422.50"></text></g><g><title>&lt;module&gt; (xml/sax/__init__.py) (1 samples, 0.22%)</title><rect x="30" y="1428" width="3" height="15" fill="rgb(247,1,12)"/><text x="33.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1444" width="3" height="15" fill="rgb(237,79,20)"/><text x="33.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1460" width="3" height="15" fill="rgb(253,137,2)"/><text x="33.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1476" width="3" height="15" fill="rgb(212,220,7)"/><text x="33.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1492" width="3" height="15" fill="rgb(207,173,0)"/><text x="33.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1508" width="3" height="15" fill="rgb(214,93,28)"/><text x="33.00" y="1518.50"></text></g><g><title>&lt;module&gt; (xml/sax/xmlreader.py) (1 samples, 0.22%)</title><rect x="30" y="1524" width="3" height="15" fill="rgb(223,11,42)"/><text x="33.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1540" width="3" height="15" fill="rgb(251,32,47)"/><text x="33.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1556" width="3" height="15" fill="rgb(239,195,54)"/><text x="33.00" y="1566.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1572" width="3" height="15" fill="rgb(229,208,20)"/><text x="33.00" y="1582.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1588" width="3" height="15" fill="rgb(224,144,34)"/><text x="33.00" y="1598.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1604" width="3" height="15" fill="rgb(217,73,41)"/><text x="33.00" y="1614.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1620" width="3" height="15" fill="rgb(221,16,25)"/><text x="33.00" y="1630.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1636" width="3" height="15" fill="rgb(250,2,30)"/><text x="33.00" y="1646.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="30" y="1652" width="3" height="15" fill="rgb(205,106,31)"/><text x="33.00" y="1662.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.22%)</title><rect x="30" y="1668" width="3" height="15" fill="rgb(250,90,37)"/><text x="33.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.44%)</title><rect x="30" y="580" width="5" height="15" fill="rgb(240,58,0)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="30" y="596" width="5" height="15" fill="rgb(225,22,51)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="30" y="612" width="5" height="15" fill="rgb(215,50,7)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="628" width="2" height="15" fill="rgb(224,62,43)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="644" width="2" height="15" fill="rgb(225,4,29)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="660" width="2" height="15" fill="rgb(215,23,1)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.22%)</title><rect x="33" y="676" width="2" height="15" fill="rgb(246,113,8)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="692" width="2" height="15" fill="rgb(207,1,18)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="708" width="2" height="15" fill="rgb(214,48,53)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="724" width="2" height="15" fill="rgb(234,88,37)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="740" width="2" height="15" fill="rgb(230,149,41)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="756" width="2" height="15" fill="rgb(228,75,49)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.22%)</title><rect x="33" y="772" width="2" height="15" fill="rgb(242,48,22)"/><text x="36.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.22%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(237,210,13)"/><text x="36.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(217,37,35)"/><text x="36.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="33" y="820" width="2" height="15" fill="rgb(214,100,7)"/><text x="36.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="33" y="836" width="2" height="15" fill="rgb(250,35,20)"/><text x="36.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="33" y="852" width="2" height="15" fill="rgb(232,216,35)"/><text x="36.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="33" y="868" width="2" height="15" fill="rgb(225,200,3)"/><text x="36.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="33" y="884" width="2" height="15" fill="rgb(222,141,25)"/><text x="36.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="33" y="900" width="2" height="15" fill="rgb(214,81,47)"/><text x="36.00" y="910.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.22%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(236,65,32)"/><text x="36.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (3 samples, 0.66%)</title><rect x="30" y="244" width="8" height="15" fill="rgb(214,15,14)"/><text x="33.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="260" width="8" height="15" fill="rgb(220,209,18)"/><text x="33.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="276" width="8" height="15" fill="rgb(253,132,33)"/><text x="33.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="292" width="8" height="15" fill="rgb(241,72,17)"/><text x="33.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="30" y="308" width="8" height="15" fill="rgb(229,114,47)"/><text x="33.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="324" width="8" height="15" fill="rgb(241,2,51)"/><text x="33.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.66%)</title><rect x="30" y="340" width="8" height="15" fill="rgb(219,11,44)"/><text x="33.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="356" width="8" height="15" fill="rgb(245,18,9)"/><text x="33.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="372" width="8" height="15" fill="rgb(228,224,27)"/><text x="33.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="388" width="8" height="15" fill="rgb(247,139,19)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="404" width="8" height="15" fill="rgb(233,114,0)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="420" width="8" height="15" fill="rgb(240,141,29)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="436" width="8" height="15" fill="rgb(250,185,11)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="30" y="452" width="8" height="15" fill="rgb(235,125,29)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="468" width="8" height="15" fill="rgb(206,52,27)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.66%)</title><rect x="30" y="484" width="8" height="15" fill="rgb(236,170,14)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="500" width="8" height="15" fill="rgb(237,194,52)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="516" width="8" height="15" fill="rgb(209,215,54)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="532" width="8" height="15" fill="rgb(222,206,54)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="30" y="548" width="8" height="15" fill="rgb(242,165,15)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="30" y="564" width="8" height="15" fill="rgb(218,199,31)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.22%)</title><rect x="35" y="580" width="3" height="15" fill="rgb(210,197,45)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="596" width="3" height="15" fill="rgb(244,34,25)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="612" width="3" height="15" fill="rgb(208,38,34)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="628" width="3" height="15" fill="rgb(235,175,51)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="644" width="3" height="15" fill="rgb(221,170,32)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="660" width="3" height="15" fill="rgb(207,93,4)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.22%)</title><rect x="35" y="676" width="3" height="15" fill="rgb(231,152,41)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="692" width="3" height="15" fill="rgb(221,204,35)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="708" width="3" height="15" fill="rgb(214,139,47)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="724" width="3" height="15" fill="rgb(208,214,43)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="740" width="3" height="15" fill="rgb(232,170,53)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="756" width="3" height="15" fill="rgb(222,16,24)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.22%)</title><rect x="35" y="772" width="3" height="15" fill="rgb(226,138,8)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="788" width="3" height="15" fill="rgb(242,158,12)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="804" width="3" height="15" fill="rgb(237,192,2)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="820" width="3" height="15" fill="rgb(238,38,8)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="836" width="3" height="15" fill="rgb(215,154,50)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="852" width="3" height="15" fill="rgb(231,6,0)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (requests/models.py) (1 samples, 0.22%)</title><rect x="35" y="868" width="3" height="15" fill="rgb(234,170,9)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="884" width="3" height="15" fill="rgb(251,4,41)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="900" width="3" height="15" fill="rgb(229,216,22)"/><text x="38.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="916" width="3" height="15" fill="rgb(210,138,28)"/><text x="38.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="932" width="3" height="15" fill="rgb(212,163,24)"/><text x="38.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="948" width="3" height="15" fill="rgb(218,208,51)"/><text x="38.00" y="958.50"></text></g><g><title>&lt;module&gt; (encodings/idna.py) (1 samples, 0.22%)</title><rect x="35" y="964" width="3" height="15" fill="rgb(226,164,4)"/><text x="38.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="980" width="3" height="15" fill="rgb(228,3,4)"/><text x="38.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="996" width="3" height="15" fill="rgb(210,12,25)"/><text x="38.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="1012" width="3" height="15" fill="rgb(206,145,35)"/><text x="38.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="1028" width="3" height="15" fill="rgb(216,105,42)"/><text x="38.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="1044" width="3" height="15" fill="rgb(210,155,24)"/><text x="38.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="1060" width="3" height="15" fill="rgb(209,195,51)"/><text x="38.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="260" width="3" height="15" fill="rgb(214,1,22)"/><text x="41.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="276" width="3" height="15" fill="rgb(216,207,38)"/><text x="41.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="292" width="3" height="15" fill="rgb(230,141,50)"/><text x="41.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="308" width="3" height="15" fill="rgb(240,89,24)"/><text x="41.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="324" width="3" height="15" fill="rgb(240,27,12)"/><text x="41.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="340" width="3" height="15" fill="rgb(234,60,33)"/><text x="41.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="356" width="3" height="15" fill="rgb(247,187,42)"/><text x="41.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="372" width="3" height="15" fill="rgb(237,200,28)"/><text x="41.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="388" width="3" height="15" fill="rgb(217,16,49)"/><text x="41.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="404" width="3" height="15" fill="rgb(219,195,1)"/><text x="41.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="420" width="3" height="15" fill="rgb(218,202,43)"/><text x="41.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="436" width="3" height="15" fill="rgb(222,216,0)"/><text x="41.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="452" width="3" height="15" fill="rgb(213,107,14)"/><text x="41.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="468" width="3" height="15" fill="rgb(245,49,36)"/><text x="41.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="484" width="3" height="15" fill="rgb(245,89,31)"/><text x="41.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.22%)</title><rect x="38" y="500" width="3" height="15" fill="rgb(237,64,9)"/><text x="41.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="516" width="3" height="15" fill="rgb(252,109,6)"/><text x="41.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="532" width="3" height="15" fill="rgb(218,6,0)"/><text x="41.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="548" width="3" height="15" fill="rgb(241,64,28)"/><text x="41.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="564" width="3" height="15" fill="rgb(238,73,16)"/><text x="41.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="580" width="3" height="15" fill="rgb(253,69,1)"/><text x="41.00" y="590.50"></text></g><g><title>0x7f30b73d3169 (?) (1 samples, 0.22%)</title><rect x="38" y="596" width="3" height="15" fill="rgb(206,91,16)"/><text x="41.00" y="606.50"></text></g><g><title>0x7f30c4becff4 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="38" y="612" width="3" height="15" fill="rgb(210,195,39)"/><text x="41.00" y="622.50"></text></g><g><title>__init__ (numpy/core/getlimits.py) (1 samples, 0.22%)</title><rect x="41" y="276" width="2" height="15" fill="rgb(246,223,33)"/><text x="44.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (numpy/core/getlimits.py) (1 samples, 0.22%)</title><rect x="41" y="292" width="2" height="15" fill="rgb(244,37,46)"/><text x="44.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (numpy/core/getlimits.py) (1 samples, 0.22%)</title><rect x="41" y="308" width="2" height="15" fill="rgb(219,128,20)"/><text x="44.00" y="318.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="41" y="324" width="2" height="15" fill="rgb(219,151,27)"/><text x="44.00" y="334.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.22%)</title><rect x="41" y="340" width="2" height="15" fill="rgb(243,36,39)"/><text x="44.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.22%)</title><rect x="41" y="356" width="2" height="15" fill="rgb(254,129,39)"/><text x="44.00" y="366.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.22%)</title><rect x="41" y="372" width="2" height="15" fill="rgb(226,112,35)"/><text x="44.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.86%)</title><rect x="12" y="68" width="34" height="15" fill="rgb(231,187,41)"/><text x="15.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.86%)</title><rect x="12" y="84" width="34" height="15" fill="rgb(216,108,29)"/><text x="15.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.86%)</title><rect x="12" y="100" width="34" height="15" fill="rgb(221,158,35)"/><text x="15.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.86%)</title><rect x="12" y="116" width="34" height="15" fill="rgb(218,220,48)"/><text x="15.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.86%)</title><rect x="12" y="132" width="34" height="15" fill="rgb(239,208,15)"/><text x="15.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (13 samples, 2.86%)</title><rect x="12" y="148" width="34" height="15" fill="rgb(247,211,2)"/><text x="15.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.86%)</title><rect x="12" y="164" width="34" height="15" fill="rgb(236,82,54)"/><text x="15.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.86%)</title><rect x="12" y="180" width="34" height="15" fill="rgb(243,115,13)"/><text x="15.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.32%)</title><rect x="30" y="196" width="16" height="15" fill="rgb(233,51,40)"/><text x="33.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.32%)</title><rect x="30" y="212" width="16" height="15" fill="rgb(253,136,19)"/><text x="33.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.32%)</title><rect x="30" y="228" width="16" height="15" fill="rgb(244,163,34)"/><text x="33.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.66%)</title><rect x="38" y="244" width="8" height="15" fill="rgb(226,118,11)"/><text x="41.00" y="254.50"></text></g><g><title>_register_known_types (numpy/core/getlimits.py) (2 samples, 0.44%)</title><rect x="41" y="260" width="5" height="15" fill="rgb(245,134,47)"/><text x="44.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.22%)</title><rect x="43" y="276" width="3" height="15" fill="rgb(241,84,27)"/><text x="46.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="43" y="292" width="3" height="15" fill="rgb(228,47,24)"/><text x="46.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="43" y="308" width="3" height="15" fill="rgb(237,201,52)"/><text x="46.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.22%)</title><rect x="43" y="324" width="3" height="15" fill="rgb(227,157,54)"/><text x="46.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.22%)</title><rect x="43" y="340" width="3" height="15" fill="rgb(208,228,51)"/><text x="46.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.22%)</title><rect x="43" y="356" width="3" height="15" fill="rgb(254,163,4)"/><text x="46.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="43" y="372" width="3" height="15" fill="rgb(229,90,35)"/><text x="46.00" y="382.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="85" y="260" width="2" height="15" fill="rgb(231,105,44)"/><text x="88.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 0.88%)</title><rect x="80" y="212" width="10" height="15" fill="rgb(238,201,10)"/><text x="83.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.88%)</title><rect x="80" y="228" width="10" height="15" fill="rgb(220,37,8)"/><text x="83.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="85" y="244" width="5" height="15" fill="rgb(221,84,40)"/><text x="88.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="87" y="260" width="3" height="15" fill="rgb(216,178,31)"/><text x="90.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="87" y="276" width="3" height="15" fill="rgb(223,26,32)"/><text x="90.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="87" y="292" width="3" height="15" fill="rgb(223,212,23)"/><text x="90.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="90" y="228" width="2" height="15" fill="rgb(228,123,32)"/><text x="93.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (2 samples, 0.44%)</title><rect x="92" y="260" width="6" height="15" fill="rgb(236,67,45)"/><text x="95.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="98" y="292" width="2" height="15" fill="rgb(221,100,41)"/><text x="101.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="98" y="308" width="2" height="15" fill="rgb(226,47,23)"/><text x="101.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="98" y="324" width="2" height="15" fill="rgb(234,29,14)"/><text x="101.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="100" y="356" width="3" height="15" fill="rgb(234,12,22)"/><text x="103.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="100" y="372" width="3" height="15" fill="rgb(224,205,29)"/><text x="103.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="100" y="388" width="3" height="15" fill="rgb(225,152,10)"/><text x="103.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="100" y="340" width="5" height="15" fill="rgb(210,117,4)"/><text x="103.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="103" y="356" width="2" height="15" fill="rgb(245,131,10)"/><text x="106.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="103" y="372" width="2" height="15" fill="rgb(220,174,30)"/><text x="106.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="340" width="3" height="15" fill="rgb(234,18,8)"/><text x="108.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="356" width="3" height="15" fill="rgb(227,28,50)"/><text x="108.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="372" width="3" height="15" fill="rgb(247,3,28)"/><text x="108.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="388" width="3" height="15" fill="rgb(227,61,20)"/><text x="108.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="404" width="3" height="15" fill="rgb(229,78,15)"/><text x="108.00" y="414.50"></text></g><g><title>0x7f30c4b2ed97 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="227" y="372" width="3" height="15" fill="rgb(206,102,29)"/><text x="230.00" y="382.50"></text></g><g><title>0x7f30c4b2edb3 (libc-2.29.so) (2 samples, 0.44%)</title><rect x="230" y="372" width="5" height="15" fill="rgb(236,166,52)"/><text x="233.00" y="382.50"></text></g><g><title>0x7f30c4b2edbb (libc-2.29.so) (1 samples, 0.22%)</title><rect x="235" y="372" width="3" height="15" fill="rgb(223,184,13)"/><text x="238.00" y="382.50"></text></g><g><title>0x7f30c4c8de00 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="238" y="372" width="2" height="15" fill="rgb(219,202,13)"/><text x="241.00" y="382.50"></text></g><g><title>0x7f30c4c8de2f (libm-2.29.so) (1 samples, 0.22%)</title><rect x="240" y="372" width="3" height="15" fill="rgb(246,31,51)"/><text x="243.00" y="382.50"></text></g><g><title>0x7f30c4c8de4e (libm-2.29.so) (1 samples, 0.22%)</title><rect x="243" y="372" width="3" height="15" fill="rgb(254,126,13)"/><text x="246.00" y="382.50"></text></g><g><title>0x7f30c4c8de71 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="246" y="372" width="5" height="15" fill="rgb(218,101,21)"/><text x="249.00" y="382.50"></text></g><g><title>0x7f30c4c8de76 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="251" y="372" width="5" height="15" fill="rgb(215,147,46)"/><text x="254.00" y="382.50"></text></g><g><title>0x7f30c4c8de86 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="256" y="372" width="5" height="15" fill="rgb(226,60,14)"/><text x="259.00" y="382.50"></text></g><g><title>0x7f30c4c8de96 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="261" y="372" width="5" height="15" fill="rgb(247,107,0)"/><text x="264.00" y="382.50"></text></g><g><title>0x7f30c4c8dea2 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="266" y="372" width="3" height="15" fill="rgb(242,110,21)"/><text x="269.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (65 samples, 14.29%)</title><rect x="108" y="340" width="169" height="15" fill="rgb(239,42,54)"/><text x="111.00" y="350.50">onnxruntime::ml::Line..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 7.03%)</title><rect x="194" y="356" width="83" height="15" fill="rgb(254,10,33)"/><text x="197.00" y="366.50">onnxrunti..</text></g><g><title>0x7f30c4c8dea6 (libm-2.29.so) (3 samples, 0.66%)</title><rect x="269" y="372" width="8" height="15" fill="rgb(224,152,32)"/><text x="272.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 19.12%)</title><rect x="98" y="260" width="225" height="15" fill="rgb(216,174,50)"/><text x="101.00" y="270.50">onnxruntime::InferenceSession..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 19.12%)</title><rect x="98" y="276" width="225" height="15" fill="rgb(240,190,10)"/><text x="101.00" y="286.50">onnxruntime::InferenceSession..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 18.90%)</title><rect x="100" y="292" width="223" height="15" fill="rgb(230,98,15)"/><text x="103.00" y="302.50">onnxruntime::utils::ExecuteGr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 18.90%)</title><rect x="100" y="308" width="223" height="15" fill="rgb(246,149,17)"/><text x="103.00" y="318.50">onnxruntime::utils::ExecuteGr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 18.90%)</title><rect x="100" y="324" width="223" height="15" fill="rgb(225,45,47)"/><text x="103.00" y="334.50">onnxruntime::SequentialExecut..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 3.96%)</title><rect x="277" y="340" width="46" height="15" fill="rgb(227,181,0)"/><text x="280.00" y="350.50">onnx..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 3.96%)</title><rect x="277" y="356" width="46" height="15" fill="rgb(235,109,51)"/><text x="280.00" y="366.50">onnx..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="323" y="260" width="3" height="15" fill="rgb(235,6,34)"/><text x="326.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.22%)</title><rect x="323" y="276" width="3" height="15" fill="rgb(210,227,35)"/><text x="326.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="323" y="292" width="3" height="15" fill="rgb(232,128,6)"/><text x="326.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="323" y="308" width="3" height="15" fill="rgb(215,209,14)"/><text x="326.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (110 samples, 24.18%)</title><rect x="46" y="100" width="285" height="15" fill="rgb(253,159,0)"/><text x="49.00" y="110.50">profile (bench_LogisticRegression_libl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 23.96%)</title><rect x="48" y="116" width="283" height="15" fill="rgb(217,65,32)"/><text x="51.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (108 samples, 23.74%)</title><rect x="51" y="132" width="280" height="15" fill="rgb(225,204,38)"/><text x="54.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (108 samples, 23.74%)</title><rect x="51" y="148" width="280" height="15" fill="rgb(230,0,46)"/><text x="54.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (106 samples, 23.30%)</title><rect x="56" y="164" width="275" height="15" fill="rgb(214,112,38)"/><text x="59.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (104 samples, 22.86%)</title><rect x="61" y="180" width="270" height="15" fill="rgb(247,52,7)"/><text x="64.00" y="190.50">run (mlprodict/onnxrt/ops_whole/sess..</text></g><g><title>run (onnxruntime/capi/session.py) (101 samples, 22.20%)</title><rect x="69" y="196" width="262" height="15" fill="rgb(207,42,12)"/><text x="72.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (93 samples, 20.44%)</title><rect x="90" y="212" width="241" height="15" fill="rgb(233,43,1)"/><text x="93.00" y="222.50">pybind11::cpp_function::dispatch..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 20.22%)</title><rect x="92" y="228" width="239" height="15" fill="rgb(243,186,47)"/><text x="95.00" y="238.50">void pybind11::cpp_function::in..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 20.22%)</title><rect x="92" y="244" width="239" height="15" fill="rgb(228,3,3)"/><text x="95.00" y="254.50">onnxruntime::python::addObjectM..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="260" width="5" height="15" fill="rgb(253,96,12)"/><text x="329.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="276" width="5" height="15" fill="rgb(250,36,26)"/><text x="329.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="292" width="5" height="15" fill="rgb(246,39,14)"/><text x="329.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="308" width="5" height="15" fill="rgb(246,190,24)"/><text x="329.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="324" width="5" height="15" fill="rgb(252,62,45)"/><text x="329.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="340" width="5" height="15" fill="rgb(234,158,42)"/><text x="329.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="356" width="5" height="15" fill="rgb(245,16,0)"/><text x="329.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="326" y="372" width="5" height="15" fill="rgb(250,214,37)"/><text x="329.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="328" y="388" width="3" height="15" fill="rgb(222,144,16)"/><text x="331.00" y="398.50"></text></g><g><title>0x7f30853c0677 (?) (1 samples, 0.22%)</title><rect x="331" y="564" width="3" height="15" fill="rgb(212,44,14)"/><text x="334.00" y="574.50"></text></g><g><title>0x7f30853ace1f (?) (1 samples, 0.22%)</title><rect x="331" y="580" width="3" height="15" fill="rgb(230,224,20)"/><text x="334.00" y="590.50"></text></g><g><title>0x7f30c4b24e9d (libc-2.29.so) (1 samples, 0.22%)</title><rect x="331" y="596" width="3" height="15" fill="rgb(226,226,49)"/><text x="334.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="372" width="5" height="15" fill="rgb(226,26,54)"/><text x="334.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="388" width="5" height="15" fill="rgb(247,151,40)"/><text x="334.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="404" width="5" height="15" fill="rgb(247,146,40)"/><text x="334.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="331" y="420" width="5" height="15" fill="rgb(249,141,24)"/><text x="334.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="436" width="5" height="15" fill="rgb(251,218,1)"/><text x="334.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.44%)</title><rect x="331" y="452" width="5" height="15" fill="rgb(209,29,29)"/><text x="334.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="468" width="5" height="15" fill="rgb(230,23,41)"/><text x="334.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="484" width="5" height="15" fill="rgb(217,35,54)"/><text x="334.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="500" width="5" height="15" fill="rgb(214,24,9)"/><text x="334.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="516" width="5" height="15" fill="rgb(224,93,35)"/><text x="334.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="331" y="532" width="5" height="15" fill="rgb(254,175,0)"/><text x="334.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="331" y="548" width="5" height="15" fill="rgb(248,110,2)"/><text x="334.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="564" width="2" height="15" fill="rgb(246,46,39)"/><text x="337.00" y="574.50"></text></g><g><title>0x7f30c4d96995 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="580" width="2" height="15" fill="rgb(240,123,30)"/><text x="337.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="596" width="2" height="15" fill="rgb(206,158,47)"/><text x="337.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="612" width="2" height="15" fill="rgb(213,151,49)"/><text x="337.00" y="622.50"></text></g><g><title>0x7f30c4d96258 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="628" width="2" height="15" fill="rgb(221,127,39)"/><text x="337.00" y="638.50"></text></g><g><title>0x7f30c4de3d81 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="644" width="2" height="15" fill="rgb(230,212,33)"/><text x="337.00" y="654.50"></text></g><g><title>0x7f30c4de76d8 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="660" width="2" height="15" fill="rgb(209,21,4)"/><text x="337.00" y="670.50"></text></g><g><title>0x7f30c4debc57 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="334" y="676" width="2" height="15" fill="rgb(235,79,54)"/><text x="337.00" y="686.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (113 samples, 24.84%)</title><rect x="46" y="68" width="293" height="15" fill="rgb(206,164,6)"/><text x="49.00" y="78.50">profile_ort (bench_LogisticRegression_l..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (113 samples, 24.84%)</title><rect x="46" y="84" width="293" height="15" fill="rgb(252,200,47)"/><text x="49.00" y="94.50">setup_profile (bench_LogisticRegression..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.66%)</title><rect x="331" y="100" width="8" height="15" fill="rgb(220,59,47)"/><text x="334.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.66%)</title><rect x="331" y="116" width="8" height="15" fill="rgb(229,193,28)"/><text x="334.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.66%)</title><rect x="331" y="132" width="8" height="15" fill="rgb(233,95,30)"/><text x="334.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.66%)</title><rect x="331" y="148" width="8" height="15" fill="rgb(224,22,10)"/><text x="334.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.66%)</title><rect x="331" y="164" width="8" height="15" fill="rgb(239,110,29)"/><text x="334.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="180" width="8" height="15" fill="rgb(245,133,46)"/><text x="334.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="196" width="8" height="15" fill="rgb(230,196,29)"/><text x="334.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="212" width="8" height="15" fill="rgb(248,182,39)"/><text x="334.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="331" y="228" width="8" height="15" fill="rgb(253,79,47)"/><text x="334.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="244" width="8" height="15" fill="rgb(223,136,18)"/><text x="334.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (3 samples, 0.66%)</title><rect x="331" y="260" width="8" height="15" fill="rgb(253,80,5)"/><text x="334.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="276" width="8" height="15" fill="rgb(252,172,12)"/><text x="334.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="292" width="8" height="15" fill="rgb(244,118,44)"/><text x="334.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="308" width="8" height="15" fill="rgb(216,30,15)"/><text x="334.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="331" y="324" width="8" height="15" fill="rgb(205,24,54)"/><text x="334.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="331" y="340" width="8" height="15" fill="rgb(224,192,15)"/><text x="334.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (3 samples, 0.66%)</title><rect x="331" y="356" width="8" height="15" fill="rgb(239,148,42)"/><text x="334.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.22%)</title><rect x="336" y="372" width="3" height="15" fill="rgb(213,160,10)"/><text x="339.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.22%)</title><rect x="336" y="388" width="3" height="15" fill="rgb(249,10,37)"/><text x="339.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.22%)</title><rect x="336" y="404" width="3" height="15" fill="rgb(218,50,20)"/><text x="339.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.22%)</title><rect x="336" y="420" width="3" height="15" fill="rgb(250,117,8)"/><text x="339.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.22%)</title><rect x="336" y="436" width="3" height="15" fill="rgb(221,154,3)"/><text x="339.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.22%)</title><rect x="336" y="452" width="3" height="15" fill="rgb(225,79,28)"/><text x="339.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.22%)</title><rect x="336" y="468" width="3" height="15" fill="rgb(238,147,5)"/><text x="339.00" y="478.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (4 samples, 0.88%)</title><rect x="404" y="340" width="10" height="15" fill="rgb(207,204,42)"/><text x="407.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.44%)</title><rect x="414" y="340" width="5" height="15" fill="rgb(235,197,26)"/><text x="417.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.44%)</title><rect x="414" y="356" width="5" height="15" fill="rgb(239,131,26)"/><text x="417.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.44%)</title><rect x="414" y="372" width="5" height="15" fill="rgb(228,146,9)"/><text x="417.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.44%)</title><rect x="414" y="388" width="5" height="15" fill="rgb(207,177,24)"/><text x="417.00" y="398.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (11 samples, 2.42%)</title><rect x="393" y="244" width="29" height="15" fill="rgb(208,155,28)"/><text x="396.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 1.98%)</title><rect x="399" y="260" width="23" height="15" fill="rgb(235,3,13)"/><text x="402.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (9 samples, 1.98%)</title><rect x="399" y="276" width="23" height="15" fill="rgb(224,126,5)"/><text x="402.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (9 samples, 1.98%)</title><rect x="399" y="292" width="23" height="15" fill="rgb(246,170,33)"/><text x="402.00" y="302.50">_..</text></g><g><title>array_argmax (methods.c) (9 samples, 1.98%)</title><rect x="399" y="308" width="23" height="15" fill="rgb(228,193,41)"/><text x="402.00" y="318.50">a..</text></g><g><title>PyArray_ArgMax (calculation.c) (8 samples, 1.76%)</title><rect x="401" y="324" width="21" height="15" fill="rgb(216,174,37)"/><text x="404.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="419" y="340" width="3" height="15" fill="rgb(205,88,12)"/><text x="422.00" y="350.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="430" y="324" width="2" height="15" fill="rgb(231,182,18)"/><text x="433.00" y="334.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 0.88%)</title><rect x="427" y="292" width="10" height="15" fill="rgb(231,96,48)"/><text x="430.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 0.88%)</title><rect x="427" y="308" width="10" height="15" fill="rgb(216,161,38)"/><text x="430.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.44%)</title><rect x="432" y="324" width="5" height="15" fill="rgb(219,222,49)"/><text x="435.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.44%)</title><rect x="432" y="340" width="5" height="15" fill="rgb(230,99,35)"/><text x="435.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.22%)</title><rect x="435" y="356" width="2" height="15" fill="rgb(253,12,29)"/><text x="438.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="435" y="372" width="2" height="15" fill="rgb(212,191,28)"/><text x="438.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="435" y="388" width="2" height="15" fill="rgb(207,127,44)"/><text x="438.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="435" y="404" width="2" height="15" fill="rgb(246,46,51)"/><text x="438.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.22%)</title><rect x="435" y="420" width="2" height="15" fill="rgb(211,97,23)"/><text x="438.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="435" y="436" width="2" height="15" fill="rgb(237,109,50)"/><text x="438.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.10%)</title><rect x="427" y="276" width="13" height="15" fill="rgb(246,122,40)"/><text x="430.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="437" y="292" width="3" height="15" fill="rgb(210,49,43)"/><text x="440.00" y="302.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (19 samples, 4.18%)</title><rect x="422" y="244" width="49" height="15" fill="rgb(231,22,51)"/><text x="425.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (19 samples, 4.18%)</title><rect x="422" y="260" width="49" height="15" fill="rgb(252,102,29)"/><text x="425.00" y="270.50">dot ..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.64%)</title><rect x="440" y="276" width="31" height="15" fill="rgb(240,40,37)"/><text x="443.00" y="286.50">sg..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="471" y="260" width="3" height="15" fill="rgb(239,94,43)"/><text x="474.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="471" y="276" width="3" height="15" fill="rgb(216,200,5)"/><text x="474.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.22%)</title><rect x="474" y="324" width="2" height="15" fill="rgb(222,192,40)"/><text x="477.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="474" y="340" width="2" height="15" fill="rgb(224,39,0)"/><text x="477.00" y="350.50"></text></g><g><title>0x7f30c4ac6a98 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="474" y="356" width="2" height="15" fill="rgb(250,180,46)"/><text x="477.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.44%)</title><rect x="474" y="292" width="5" height="15" fill="rgb(241,70,46)"/><text x="477.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.44%)</title><rect x="474" y="308" width="5" height="15" fill="rgb(210,130,48)"/><text x="477.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.22%)</title><rect x="476" y="324" width="3" height="15" fill="rgb(223,156,21)"/><text x="479.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.22%)</title><rect x="476" y="340" width="3" height="15" fill="rgb(231,60,21)"/><text x="479.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.22%)</title><rect x="479" y="324" width="3" height="15" fill="rgb(227,80,37)"/><text x="482.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.22%)</title><rect x="482" y="324" width="2" height="15" fill="rgb(247,160,38)"/><text x="485.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="482" y="340" width="2" height="15" fill="rgb(207,61,14)"/><text x="485.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.66%)</title><rect x="479" y="308" width="8" height="15" fill="rgb(232,6,47)"/><text x="482.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.22%)</title><rect x="484" y="324" width="3" height="15" fill="rgb(249,19,32)"/><text x="487.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.22%)</title><rect x="484" y="340" width="3" height="15" fill="rgb(225,174,28)"/><text x="487.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="484" y="356" width="3" height="15" fill="rgb(228,187,19)"/><text x="487.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.22%)</title><rect x="484" y="372" width="3" height="15" fill="rgb(249,210,19)"/><text x="487.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="487" y="324" width="2" height="15" fill="rgb(211,26,39)"/><text x="490.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="487" y="340" width="2" height="15" fill="rgb(253,132,3)"/><text x="490.00" y="350.50"></text></g><g><title>0x7f30c4b1021c (libc-2.29.so) (1 samples, 0.22%)</title><rect x="487" y="356" width="2" height="15" fill="rgb(244,28,29)"/><text x="490.00" y="366.50"></text></g><g><title>0x7f30c4b2ed50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="489" y="356" width="3" height="15" fill="rgb(218,119,44)"/><text x="492.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.88%)</title><rect x="487" y="308" width="10" height="15" fill="rgb(237,143,15)"/><text x="490.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.66%)</title><rect x="489" y="324" width="8" height="15" fill="rgb(222,225,23)"/><text x="492.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.66%)</title><rect x="489" y="340" width="8" height="15" fill="rgb(238,102,20)"/><text x="492.00" y="350.50"></text></g><g><title>0x7f30c4b2edbb (libc-2.29.so) (2 samples, 0.44%)</title><rect x="492" y="356" width="5" height="15" fill="rgb(223,58,9)"/><text x="495.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.76%)</title><rect x="479" y="292" width="21" height="15" fill="rgb(224,86,41)"/><text x="482.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.22%)</title><rect x="497" y="308" width="3" height="15" fill="rgb(235,191,44)"/><text x="500.00" y="318.50"></text></g><g><title>0x7f30a6f1333a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.66%)</title><rect x="500" y="308" width="7" height="15" fill="rgb(218,225,15)"/><text x="503.00" y="318.50"></text></g><g><title>0x7f30a6f35204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="507" y="324" width="3" height="15" fill="rgb(218,157,2)"/><text x="510.00" y="334.50"></text></g><g><title>0x7f30a6f3520c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="510" y="324" width="3" height="15" fill="rgb(206,110,17)"/><text x="513.00" y="334.50"></text></g><g><title>0x7f30c4c5a1a0 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="523" y="356" width="3" height="15" fill="rgb(226,224,7)"/><text x="526.00" y="366.50"></text></g><g><title>0x7f30c4c8de00 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="526" y="356" width="2" height="15" fill="rgb(254,27,15)"/><text x="529.00" y="366.50"></text></g><g><title>0x7f30c4c8de0e (libm-2.29.so) (1 samples, 0.22%)</title><rect x="528" y="356" width="3" height="15" fill="rgb(234,89,46)"/><text x="531.00" y="366.50"></text></g><g><title>0x7f30c4c8de4e (libm-2.29.so) (2 samples, 0.44%)</title><rect x="531" y="356" width="5" height="15" fill="rgb(207,132,54)"/><text x="534.00" y="366.50"></text></g><g><title>0x7f30c4c8de62 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="536" y="356" width="5" height="15" fill="rgb(245,212,46)"/><text x="539.00" y="366.50"></text></g><g><title>0x7f30c4c8de96 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="541" y="356" width="3" height="15" fill="rgb(212,195,29)"/><text x="544.00" y="366.50"></text></g><g><title>0x7f30a6f35214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 2.86%)</title><rect x="513" y="324" width="33" height="15" fill="rgb(216,16,0)"/><text x="516.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (13 samples, 2.86%)</title><rect x="513" y="340" width="33" height="15" fill="rgb(231,93,3)"/><text x="516.00" y="350.50">ex..</text></g><g><title>0x7f30c4c8dea6 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="544" y="356" width="2" height="15" fill="rgb(207,170,53)"/><text x="547.00" y="366.50"></text></g><g><title>0x7f30a6f35224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="546" y="324" width="3" height="15" fill="rgb(225,163,31)"/><text x="549.00" y="334.50"></text></g><g><title>0x7f30a6f1333d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 5.49%)</title><rect x="507" y="308" width="65" height="15" fill="rgb(243,205,34)"/><text x="510.00" y="318.50">0x7f30a..</text></g><g><title>0x7f30a6f35228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.98%)</title><rect x="549" y="324" width="23" height="15" fill="rgb(206,71,8)"/><text x="552.00" y="334.50">0..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (40 samples, 8.79%)</title><rect x="474" y="276" width="103" height="15" fill="rgb(232,203,36)"/><text x="477.00" y="286.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (30 samples, 6.59%)</title><rect x="500" y="292" width="77" height="15" fill="rgb(215,74,50)"/><text x="503.00" y="302.50">trivial_..</text></g><g><title>0x7f30a6f13345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.44%)</title><rect x="572" y="308" width="5" height="15" fill="rgb(250,196,50)"/><text x="575.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (76 samples, 16.70%)</title><rect x="383" y="228" width="197" height="15" fill="rgb(224,149,51)"/><text x="386.00" y="238.50">_run (mlprodict/onnxrt/op..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (42 samples, 9.23%)</title><rect x="471" y="244" width="109" height="15" fill="rgb(222,139,17)"/><text x="474.00" y="254.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (41 samples, 9.01%)</title><rect x="474" y="260" width="106" height="15" fill="rgb(220,123,43)"/><text x="477.00" y="270.50">PyUFunc_Gene..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="577" y="276" width="3" height="15" fill="rgb(214,152,36)"/><text x="580.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="588" y="260" width="2" height="15" fill="rgb(249,121,39)"/><text x="591.00" y="270.50"></text></g><g><title>array_free (arrayobject.c) (1 samples, 0.22%)</title><rect x="588" y="276" width="2" height="15" fill="rgb(233,208,10)"/><text x="591.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.44%)</title><rect x="590" y="324" width="6" height="15" fill="rgb(228,210,45)"/><text x="593.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.44%)</title><rect x="590" y="340" width="6" height="15" fill="rgb(254,63,49)"/><text x="593.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.44%)</title><rect x="590" y="356" width="6" height="15" fill="rgb(237,110,24)"/><text x="593.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.44%)</title><rect x="590" y="372" width="6" height="15" fill="rgb(206,221,41)"/><text x="593.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.44%)</title><rect x="590" y="388" width="6" height="15" fill="rgb(223,216,21)"/><text x="593.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.44%)</title><rect x="601" y="372" width="5" height="15" fill="rgb(237,110,26)"/><text x="604.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.22%)</title><rect x="603" y="388" width="3" height="15" fill="rgb(228,129,42)"/><text x="606.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.44%)</title><rect x="606" y="372" width="5" height="15" fill="rgb(254,81,27)"/><text x="609.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="609" y="388" width="2" height="15" fill="rgb(233,122,25)"/><text x="612.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.22%)</title><rect x="611" y="372" width="3" height="15" fill="rgb(227,180,50)"/><text x="614.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.22%)</title><rect x="611" y="388" width="3" height="15" fill="rgb(209,27,11)"/><text x="614.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="611" y="404" width="3" height="15" fill="rgb(212,152,25)"/><text x="614.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="611" y="420" width="3" height="15" fill="rgb(239,200,5)"/><text x="614.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="611" y="436" width="3" height="15" fill="rgb(221,152,27)"/><text x="614.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="611" y="452" width="3" height="15" fill="rgb(242,4,23)"/><text x="614.00" y="462.50"></text></g><g><title>FLOAT_add (loops.c.src) (8 samples, 1.76%)</title><rect x="622" y="388" width="20" height="15" fill="rgb(213,205,27)"/><text x="625.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (3 samples, 0.66%)</title><rect x="635" y="404" width="7" height="15" fill="rgb(209,78,45)"/><text x="638.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (19 samples, 4.18%)</title><rect x="601" y="356" width="49" height="15" fill="rgb(228,197,37)"/><text x="604.00" y="366.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (14 samples, 3.08%)</title><rect x="614" y="372" width="36" height="15" fill="rgb(224,211,14)"/><text x="617.00" y="382.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.66%)</title><rect x="642" y="388" width="8" height="15" fill="rgb(230,98,41)"/><text x="645.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="647" y="404" width="3" height="15" fill="rgb(246,51,32)"/><text x="650.00" y="414.50"></text></g><g><title>array_sum (methods.c) (24 samples, 5.27%)</title><rect x="590" y="260" width="63" height="15" fill="rgb(254,103,32)"/><text x="593.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (24 samples, 5.27%)</title><rect x="590" y="276" width="63" height="15" fill="rgb(236,106,5)"/><text x="593.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (24 samples, 5.27%)</title><rect x="590" y="292" width="63" height="15" fill="rgb(217,149,14)"/><text x="593.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (24 samples, 5.27%)</title><rect x="590" y="308" width="63" height="15" fill="rgb(252,62,36)"/><text x="593.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (22 samples, 4.84%)</title><rect x="596" y="324" width="57" height="15" fill="rgb(222,54,21)"/><text x="599.00" y="334.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (20 samples, 4.40%)</title><rect x="601" y="340" width="52" height="15" fill="rgb(205,113,52)"/><text x="604.00" y="350.50">PyUFu..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.22%)</title><rect x="650" y="356" width="3" height="15" fill="rgb(242,69,50)"/><text x="653.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="650" y="372" width="3" height="15" fill="rgb(226,195,51)"/><text x="653.00" y="382.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.22%)</title><rect x="653" y="292" width="2" height="15" fill="rgb(250,69,54)"/><text x="656.00" y="302.50"></text></g><g><title>_mm_div_ps (xmmintrin.h) (1 samples, 0.22%)</title><rect x="655" y="372" width="3" height="15" fill="rgb(234,161,11)"/><text x="658.00" y="382.50"></text></g><g><title>FLOAT_divide (loops.c.src) (4 samples, 0.88%)</title><rect x="655" y="324" width="11" height="15" fill="rgb(237,88,12)"/><text x="658.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (4 samples, 0.88%)</title><rect x="655" y="340" width="11" height="15" fill="rgb(251,180,25)"/><text x="658.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (4 samples, 0.88%)</title><rect x="655" y="356" width="11" height="15" fill="rgb(210,52,48)"/><text x="658.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (3 samples, 0.66%)</title><rect x="658" y="372" width="8" height="15" fill="rgb(209,36,28)"/><text x="661.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.66%)</title><rect x="666" y="340" width="7" height="15" fill="rgb(214,73,38)"/><text x="669.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.66%)</title><rect x="666" y="356" width="7" height="15" fill="rgb(230,94,2)"/><text x="669.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.44%)</title><rect x="668" y="372" width="5" height="15" fill="rgb(249,57,25)"/><text x="671.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (130 samples, 28.57%)</title><rect x="339" y="100" width="337" height="15" fill="rgb(230,54,40)"/><text x="342.00" y="110.50">profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 28.57%)</title><rect x="339" y="116" width="337" height="15" fill="rgb(214,0,1)"/><text x="342.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 28.57%)</title><rect x="339" y="132" width="337" height="15" fill="rgb(240,136,21)"/><text x="342.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (129 samples, 28.35%)</title><rect x="341" y="148" width="335" height="15" fill="rgb(221,189,49)"/><text x="344.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (128 samples, 28.13%)</title><rect x="344" y="164" width="332" height="15" fill="rgb(213,24,33)"/><text x="347.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (123 samples, 27.03%)</title><rect x="357" y="180" width="319" height="15" fill="rgb(226,178,3)"/><text x="360.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (115 samples, 25.27%)</title><rect x="378" y="196" width="298" height="15" fill="rgb(224,88,12)"/><text x="381.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (115 samples, 25.27%)</title><rect x="378" y="212" width="298" height="15" fill="rgb(254,32,17)"/><text x="381.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (37 samples, 8.13%)</title><rect x="580" y="228" width="96" height="15" fill="rgb(242,144,8)"/><text x="583.00" y="238.50">_run (mlpro..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (37 samples, 8.13%)</title><rect x="580" y="244" width="96" height="15" fill="rgb(219,140,0)"/><text x="583.00" y="254.50">norm_l1 (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.98%)</title><rect x="653" y="260" width="23" height="15" fill="rgb(206,195,1)"/><text x="656.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.98%)</title><rect x="653" y="276" width="23" height="15" fill="rgb(246,220,4)"/><text x="656.00" y="286.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.76%)</title><rect x="655" y="292" width="21" height="15" fill="rgb(249,94,51)"/><text x="658.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.76%)</title><rect x="655" y="308" width="21" height="15" fill="rgb(252,166,28)"/><text x="658.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.88%)</title><rect x="666" y="324" width="10" height="15" fill="rgb(254,63,29)"/><text x="669.00" y="334.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.22%)</title><rect x="673" y="340" width="3" height="15" fill="rgb(219,132,34)"/><text x="676.00" y="350.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="676" y="436" width="3" height="15" fill="rgb(227,210,19)"/><text x="679.00" y="446.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (132 samples, 29.01%)</title><rect x="339" y="68" width="342" height="15" fill="rgb(237,142,37)"/><text x="342.00" y="78.50">profile_pyrt (bench_LogisticRegression_libline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (132 samples, 29.01%)</title><rect x="339" y="84" width="342" height="15" fill="rgb(254,120,45)"/><text x="342.00" y="94.50">setup_profile (bench_LogisticRegression_liblin..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.44%)</title><rect x="676" y="100" width="5" height="15" fill="rgb(235,144,36)"/><text x="679.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.44%)</title><rect x="676" y="116" width="5" height="15" fill="rgb(217,134,9)"/><text x="679.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.44%)</title><rect x="676" y="132" width="5" height="15" fill="rgb(242,2,40)"/><text x="679.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.44%)</title><rect x="676" y="148" width="5" height="15" fill="rgb(253,38,24)"/><text x="679.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.44%)</title><rect x="676" y="164" width="5" height="15" fill="rgb(237,52,5)"/><text x="679.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.44%)</title><rect x="676" y="180" width="5" height="15" fill="rgb(246,219,3)"/><text x="679.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.44%)</title><rect x="676" y="196" width="5" height="15" fill="rgb(240,121,38)"/><text x="679.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="212" width="5" height="15" fill="rgb(223,157,12)"/><text x="679.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="228" width="5" height="15" fill="rgb(220,74,43)"/><text x="679.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="244" width="5" height="15" fill="rgb(252,41,48)"/><text x="679.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="676" y="260" width="5" height="15" fill="rgb(228,62,36)"/><text x="679.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="276" width="5" height="15" fill="rgb(243,222,22)"/><text x="679.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.44%)</title><rect x="676" y="292" width="5" height="15" fill="rgb(240,5,11)"/><text x="679.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="308" width="5" height="15" fill="rgb(222,56,43)"/><text x="679.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="324" width="5" height="15" fill="rgb(214,64,46)"/><text x="679.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="340" width="5" height="15" fill="rgb(219,139,43)"/><text x="679.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="676" y="356" width="5" height="15" fill="rgb(228,77,11)"/><text x="679.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="372" width="5" height="15" fill="rgb(253,48,52)"/><text x="679.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.44%)</title><rect x="676" y="388" width="5" height="15" fill="rgb(240,139,54)"/><text x="679.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="404" width="5" height="15" fill="rgb(234,110,54)"/><text x="679.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="676" y="420" width="5" height="15" fill="rgb(229,119,12)"/><text x="679.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="679" y="436" width="2" height="15" fill="rgb(220,43,35)"/><text x="682.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="679" y="452" width="2" height="15" fill="rgb(254,219,25)"/><text x="682.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="679" y="468" width="2" height="15" fill="rgb(226,35,12)"/><text x="682.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_cdist.py) (1 samples, 0.22%)</title><rect x="679" y="484" width="2" height="15" fill="rgb(224,168,10)"/><text x="682.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="679" y="500" width="2" height="15" fill="rgb(241,226,9)"/><text x="682.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="681" y="116" width="3" height="15" fill="rgb(244,108,49)"/><text x="684.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="681" y="132" width="3" height="15" fill="rgb(227,40,15)"/><text x="684.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="681" y="148" width="3" height="15" fill="rgb(231,17,49)"/><text x="684.00" y="158.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.22%)</title><rect x="699" y="212" width="3" height="15" fill="rgb(215,20,35)"/><text x="702.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="699" y="228" width="3" height="15" fill="rgb(254,188,47)"/><text x="702.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.22%)</title><rect x="699" y="244" width="3" height="15" fill="rgb(241,119,54)"/><text x="702.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 1.10%)</title><rect x="692" y="180" width="13" height="15" fill="rgb(232,211,5)"/><text x="695.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (3 samples, 0.66%)</title><rect x="697" y="196" width="8" height="15" fill="rgb(222,197,12)"/><text x="700.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.22%)</title><rect x="702" y="212" width="3" height="15" fill="rgb(219,111,12)"/><text x="705.00" y="222.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="702" y="228" width="3" height="15" fill="rgb(236,172,49)"/><text x="705.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="707" y="244" width="3" height="15" fill="rgb(205,122,12)"/><text x="710.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="707" y="260" width="3" height="15" fill="rgb(212,207,50)"/><text x="710.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.22%)</title><rect x="707" y="276" width="3" height="15" fill="rgb(249,80,48)"/><text x="710.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.22%)</title><rect x="707" y="292" width="3" height="15" fill="rgb(246,125,47)"/><text x="710.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.22%)</title><rect x="707" y="308" width="3" height="15" fill="rgb(253,224,39)"/><text x="710.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="707" y="324" width="3" height="15" fill="rgb(216,139,47)"/><text x="710.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="710" y="308" width="2" height="15" fill="rgb(223,102,26)"/><text x="713.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.44%)</title><rect x="710" y="292" width="5" height="15" fill="rgb(207,145,50)"/><text x="713.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.22%)</title><rect x="712" y="308" width="3" height="15" fill="rgb(251,105,36)"/><text x="715.00" y="318.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="715" y="324" width="3" height="15" fill="rgb(210,209,26)"/><text x="718.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="720" y="340" width="3" height="15" fill="rgb(209,86,52)"/><text x="723.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.88%)</title><rect x="715" y="292" width="10" height="15" fill="rgb(215,220,37)"/><text x="718.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 0.88%)</title><rect x="715" y="308" width="10" height="15" fill="rgb(237,207,5)"/><text x="718.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.66%)</title><rect x="718" y="324" width="7" height="15" fill="rgb(239,86,10)"/><text x="721.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="723" y="340" width="2" height="15" fill="rgb(248,154,51)"/><text x="726.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (9 samples, 1.98%)</title><rect x="728" y="308" width="23" height="15" fill="rgb(210,209,16)"/><text x="731.00" y="318.50">D..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 1.10%)</title><rect x="738" y="324" width="13" height="15" fill="rgb(213,123,33)"/><text x="741.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="751" y="308" width="3" height="15" fill="rgb(243,113,20)"/><text x="754.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (21 samples, 4.62%)</title><rect x="710" y="276" width="54" height="15" fill="rgb(214,202,50)"/><text x="713.00" y="286.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (15 samples, 3.30%)</title><rect x="725" y="292" width="39" height="15" fill="rgb(217,85,12)"/><text x="728.00" y="302.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 0.88%)</title><rect x="754" y="308" width="10" height="15" fill="rgb(205,18,19)"/><text x="757.00" y="318.50"></text></g><g><title>array_sum (methods.c) (24 samples, 5.27%)</title><rect x="705" y="180" width="62" height="15" fill="rgb(211,16,20)"/><text x="708.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (23 samples, 5.05%)</title><rect x="707" y="196" width="60" height="15" fill="rgb(215,95,3)"/><text x="710.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (23 samples, 5.05%)</title><rect x="707" y="212" width="60" height="15" fill="rgb(235,61,18)"/><text x="710.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (23 samples, 5.05%)</title><rect x="707" y="228" width="60" height="15" fill="rgb(233,185,42)"/><text x="710.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (22 samples, 4.84%)</title><rect x="710" y="244" width="57" height="15" fill="rgb(206,148,52)"/><text x="713.00" y="254.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (22 samples, 4.84%)</title><rect x="710" y="260" width="57" height="15" fill="rgb(211,54,42)"/><text x="713.00" y="270.50">PyUFun..</text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.22%)</title><rect x="764" y="276" width="3" height="15" fill="rgb(205,190,12)"/><text x="767.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (3 samples, 0.66%)</title><rect x="772" y="196" width="8" height="15" fill="rgb(226,15,28)"/><text x="775.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.44%)</title><rect x="775" y="212" width="5" height="15" fill="rgb(243,24,44)"/><text x="778.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="777" y="228" width="3" height="15" fill="rgb(243,60,5)"/><text x="780.00" y="238.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.22%)</title><rect x="780" y="324" width="2" height="15" fill="rgb(253,177,27)"/><text x="783.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.44%)</title><rect x="780" y="276" width="5" height="15" fill="rgb(216,37,41)"/><text x="783.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.44%)</title><rect x="780" y="292" width="5" height="15" fill="rgb(245,225,38)"/><text x="783.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.44%)</title><rect x="780" y="308" width="5" height="15" fill="rgb(211,228,2)"/><text x="783.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.22%)</title><rect x="782" y="324" width="3" height="15" fill="rgb(224,135,27)"/><text x="785.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="785" y="276" width="3" height="15" fill="rgb(250,14,48)"/><text x="788.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="788" y="292" width="2" height="15" fill="rgb(222,211,50)"/><text x="791.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.76%)</title><rect x="780" y="244" width="20" height="15" fill="rgb(250,173,17)"/><text x="783.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.76%)</title><rect x="780" y="260" width="20" height="15" fill="rgb(208,106,29)"/><text x="783.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.10%)</title><rect x="788" y="276" width="12" height="15" fill="rgb(234,153,5)"/><text x="791.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.88%)</title><rect x="790" y="292" width="10" height="15" fill="rgb(238,171,5)"/><text x="793.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.88%)</title><rect x="790" y="308" width="10" height="15" fill="rgb(214,58,23)"/><text x="793.00" y="318.50"></text></g><g><title>0x7f30c4b2ed6f (libc-2.29.so) (2 samples, 0.44%)</title><rect x="795" y="324" width="5" height="15" fill="rgb(245,83,38)"/><text x="798.00" y="334.50"></text></g><g><title>array_add (number.c) (9 samples, 1.98%)</title><rect x="780" y="196" width="23" height="15" fill="rgb(212,28,34)"/><text x="783.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.98%)</title><rect x="780" y="212" width="23" height="15" fill="rgb(212,162,12)"/><text x="783.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.98%)</title><rect x="780" y="228" width="23" height="15" fill="rgb(227,46,54)"/><text x="783.00" y="238.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="800" y="244" width="3" height="15" fill="rgb(239,112,45)"/><text x="803.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="803" y="196" width="3" height="15" fill="rgb(254,94,29)"/><text x="806.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="803" y="212" width="3" height="15" fill="rgb(237,148,23)"/><text x="806.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="803" y="228" width="3" height="15" fill="rgb(234,7,16)"/><text x="806.00" y="238.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.22%)</title><rect x="806" y="196" width="2" height="15" fill="rgb(250,224,31)"/><text x="809.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.22%)</title><rect x="834" y="212" width="3" height="15" fill="rgb(210,29,39)"/><text x="837.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 0.88%)</title><rect x="837" y="212" width="10" height="15" fill="rgb(227,122,54)"/><text x="840.00" y="222.50"></text></g><g><title>0x7f30c4b24e7a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="855" y="228" width="3" height="15" fill="rgb(251,122,51)"/><text x="858.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.32%)</title><rect x="847" y="212" width="16" height="15" fill="rgb(254,212,19)"/><text x="850.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="858" y="228" width="5" height="15" fill="rgb(232,151,54)"/><text x="861.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.66%)</title><rect x="863" y="212" width="8" height="15" fill="rgb(210,122,11)"/><text x="866.00" y="222.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.22%)</title><rect x="868" y="228" width="3" height="15" fill="rgb(214,95,39)"/><text x="871.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 1.32%)</title><rect x="871" y="212" width="15" height="15" fill="rgb(231,129,16)"/><text x="874.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.44%)</title><rect x="881" y="228" width="5" height="15" fill="rgb(252,121,51)"/><text x="884.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.22%)</title><rect x="883" y="244" width="3" height="15" fill="rgb(249,56,2)"/><text x="886.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.66%)</title><rect x="886" y="212" width="8" height="15" fill="rgb(247,148,17)"/><text x="889.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="891" y="228" width="3" height="15" fill="rgb(231,99,15)"/><text x="894.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.22%)</title><rect x="894" y="212" width="2" height="15" fill="rgb(235,214,10)"/><text x="897.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (40 samples, 8.79%)</title><rect x="808" y="196" width="104" height="15" fill="rgb(212,170,33)"/><text x="811.00" y="206.50">check_array ..</text></g><g><title>simplefilter (warnings.py) (6 samples, 1.32%)</title><rect x="896" y="212" width="16" height="15" fill="rgb(206,91,12)"/><text x="899.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 1.32%)</title><rect x="896" y="228" width="16" height="15" fill="rgb(240,7,45)"/><text x="899.00" y="238.50"></text></g><g><title>0x7f30c4b24e54 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="909" y="244" width="3" height="15" fill="rgb(209,188,53)"/><text x="912.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.88%)</title><rect x="915" y="212" width="10" height="15" fill="rgb(218,128,50)"/><text x="918.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.22%)</title><rect x="922" y="228" width="3" height="15" fill="rgb(213,225,17)"/><text x="925.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.32%)</title><rect x="912" y="196" width="16" height="15" fill="rgb(243,34,40)"/><text x="915.00" y="206.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.22%)</title><rect x="925" y="212" width="3" height="15" fill="rgb(219,40,42)"/><text x="928.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.66%)</title><rect x="928" y="212" width="7" height="15" fill="rgb(250,110,19)"/><text x="931.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.22%)</title><rect x="935" y="212" width="3" height="15" fill="rgb(223,163,12)"/><text x="938.00" y="222.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src) (1 samples, 0.22%)</title><rect x="941" y="276" width="2" height="15" fill="rgb(252,71,8)"/><text x="944.00" y="286.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="943" y="292" width="3" height="15" fill="rgb(240,131,24)"/><text x="946.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (5 samples, 1.10%)</title><rect x="938" y="260" width="13" height="15" fill="rgb(218,209,5)"/><text x="941.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.66%)</title><rect x="943" y="276" width="8" height="15" fill="rgb(232,215,29)"/><text x="946.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.44%)</title><rect x="946" y="292" width="5" height="15" fill="rgb(243,227,5)"/><text x="949.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.44%)</title><rect x="946" y="308" width="5" height="15" fill="rgb(230,140,24)"/><text x="949.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.10%)</title><rect x="954" y="292" width="12" height="15" fill="rgb(212,68,5)"/><text x="957.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.10%)</title><rect x="954" y="308" width="12" height="15" fill="rgb(249,66,28)"/><text x="957.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (4 samples, 0.88%)</title><rect x="956" y="324" width="10" height="15" fill="rgb(253,223,25)"/><text x="959.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 1.76%)</title><rect x="951" y="260" width="21" height="15" fill="rgb(251,43,48)"/><text x="954.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 1.54%)</title><rect x="954" y="276" width="18" height="15" fill="rgb(251,115,49)"/><text x="957.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.44%)</title><rect x="966" y="292" width="6" height="15" fill="rgb(219,123,3)"/><text x="969.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="969" y="308" width="3" height="15" fill="rgb(214,167,52)"/><text x="972.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="969" y="324" width="3" height="15" fill="rgb(248,160,13)"/><text x="972.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="969" y="340" width="3" height="15" fill="rgb(241,165,44)"/><text x="972.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="969" y="356" width="3" height="15" fill="rgb(246,109,35)"/><text x="972.00" y="366.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.22%)</title><rect x="972" y="260" width="2" height="15" fill="rgb(230,220,23)"/><text x="975.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.22%)</title><rect x="972" y="276" width="2" height="15" fill="rgb(240,76,43)"/><text x="975.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.22%)</title><rect x="972" y="292" width="2" height="15" fill="rgb(219,99,36)"/><text x="975.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.44%)</title><rect x="974" y="260" width="5" height="15" fill="rgb(251,189,17)"/><text x="977.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="977" y="276" width="2" height="15" fill="rgb(218,156,44)"/><text x="980.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="977" y="292" width="2" height="15" fill="rgb(233,181,21)"/><text x="980.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="977" y="308" width="2" height="15" fill="rgb(251,44,21)"/><text x="980.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="977" y="324" width="2" height="15" fill="rgb(235,180,34)"/><text x="980.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.22%)</title><rect x="979" y="260" width="3" height="15" fill="rgb(236,212,43)"/><text x="982.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (84 samples, 18.46%)</title><rect x="767" y="180" width="218" height="15" fill="rgb(252,136,15)"/><text x="770.00" y="190.50">decision_function (sklearn/l..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (22 samples, 4.84%)</title><rect x="928" y="196" width="57" height="15" fill="rgb(223,144,10)"/><text x="931.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 3.96%)</title><rect x="938" y="212" width="47" height="15" fill="rgb(237,34,31)"/><text x="941.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 3.96%)</title><rect x="938" y="228" width="47" height="15" fill="rgb(215,164,21)"/><text x="941.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (18 samples, 3.96%)</title><rect x="938" y="244" width="47" height="15" fill="rgb(244,25,42)"/><text x="941.00" y="254.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="982" y="260" width="3" height="15" fill="rgb(212,56,42)"/><text x="985.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.22%)</title><rect x="990" y="228" width="2" height="15" fill="rgb(236,20,7)"/><text x="993.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (4 samples, 0.88%)</title><rect x="987" y="212" width="11" height="15" fill="rgb(207,31,8)"/><text x="990.00" y="222.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (2 samples, 0.44%)</title><rect x="992" y="228" width="6" height="15" fill="rgb(206,215,7)"/><text x="995.00" y="238.50"></text></g><g><title>0x7f30c4ac67c2 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="998" y="308" width="2" height="15" fill="rgb(218,165,21)"/><text x="1001.00" y="318.50"></text></g><g><title>0x7f30c4ac69e8 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="998" y="324" width="2" height="15" fill="rgb(221,18,48)"/><text x="1001.00" y="334.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.44%)</title><rect x="998" y="260" width="5" height="15" fill="rgb(231,167,21)"/><text x="1001.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.44%)</title><rect x="998" y="276" width="5" height="15" fill="rgb(238,172,2)"/><text x="1001.00" y="286.50"></text></g><g><title>0x7f30c4ac67a5 (libc-2.29.so) (2 samples, 0.44%)</title><rect x="998" y="292" width="5" height="15" fill="rgb(225,169,30)"/><text x="1001.00" y="302.50"></text></g><g><title>0x7f30c4b2ed62 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1000" y="308" width="3" height="15" fill="rgb(229,45,33)"/><text x="1003.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.66%)</title><rect x="998" y="228" width="7" height="15" fill="rgb(252,74,23)"/><text x="1001.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.66%)</title><rect x="998" y="244" width="7" height="15" fill="rgb(213,21,31)"/><text x="1001.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1003" y="260" width="2" height="15" fill="rgb(224,214,42)"/><text x="1006.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1003" y="276" width="2" height="15" fill="rgb(248,189,22)"/><text x="1006.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1003" y="292" width="2" height="15" fill="rgb(205,76,44)"/><text x="1006.00" y="302.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.22%)</title><rect x="1003" y="308" width="2" height="15" fill="rgb(244,45,38)"/><text x="1006.00" y="318.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.22%)</title><rect x="1003" y="324" width="2" height="15" fill="rgb(243,189,42)"/><text x="1006.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.22%)</title><rect x="1008" y="292" width="3" height="15" fill="rgb(219,169,6)"/><text x="1011.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (8 samples, 1.76%)</title><rect x="1008" y="244" width="21" height="15" fill="rgb(240,10,23)"/><text x="1011.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (8 samples, 1.76%)</title><rect x="1008" y="260" width="21" height="15" fill="rgb(247,164,11)"/><text x="1011.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (8 samples, 1.76%)</title><rect x="1008" y="276" width="21" height="15" fill="rgb(247,126,37)"/><text x="1011.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (7 samples, 1.54%)</title><rect x="1011" y="292" width="18" height="15" fill="rgb(206,76,51)"/><text x="1014.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1029" y="260" width="2" height="15" fill="rgb(224,154,25)"/><text x="1032.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.44%)</title><rect x="1029" y="244" width="5" height="15" fill="rgb(235,190,39)"/><text x="1032.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1031" y="260" width="3" height="15" fill="rgb(221,123,27)"/><text x="1034.00" y="270.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1031" y="276" width="3" height="15" fill="rgb(230,77,41)"/><text x="1034.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 3.30%)</title><rect x="1005" y="228" width="39" height="15" fill="rgb(218,112,46)"/><text x="1008.00" y="238.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.88%)</title><rect x="1034" y="244" width="10" height="15" fill="rgb(233,42,23)"/><text x="1037.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.88%)</title><rect x="1034" y="260" width="10" height="15" fill="rgb(217,49,38)"/><text x="1037.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.88%)</title><rect x="1034" y="276" width="10" height="15" fill="rgb(232,27,44)"/><text x="1037.00" y="286.50"></text></g><g><title>0x7f30a6f149dd (?) (1 samples, 0.22%)</title><rect x="1044" y="244" width="3" height="15" fill="rgb(230,70,17)"/><text x="1047.00" y="254.50"></text></g><g><title>0x7f30a6f35279 (?) (1 samples, 0.22%)</title><rect x="1044" y="260" width="3" height="15" fill="rgb(218,209,38)"/><text x="1047.00" y="270.50"></text></g><g><title>0x7f30a6ef2fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.88%)</title><rect x="1049" y="276" width="11" height="15" fill="rgb(226,178,23)"/><text x="1052.00" y="286.50"></text></g><g><title>0x7f30a703e9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.66%)</title><rect x="1060" y="276" width="8" height="15" fill="rgb(205,196,8)"/><text x="1063.00" y="286.50"></text></g><g><title>0x7f30c4ce0ba0 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="1073" y="292" width="5" height="15" fill="rgb(237,201,17)"/><text x="1076.00" y="302.50"></text></g><g><title>0x7f30c4ce0bb4 (libm-2.29.so) (3 samples, 0.66%)</title><rect x="1078" y="292" width="8" height="15" fill="rgb(245,198,40)"/><text x="1081.00" y="302.50"></text></g><g><title>0x7f30c4ce0be7 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="1086" y="292" width="2" height="15" fill="rgb(230,228,2)"/><text x="1089.00" y="302.50"></text></g><g><title>0x7f30c4ce0bf9 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="1088" y="292" width="6" height="15" fill="rgb(232,103,54)"/><text x="1091.00" y="302.50"></text></g><g><title>0x7f30c4ce0c07 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="1094" y="292" width="2" height="15" fill="rgb(247,149,21)"/><text x="1097.00" y="302.50"></text></g><g><title>0x7f30c4ce0c18 (libm-2.29.so) (2 samples, 0.44%)</title><rect x="1096" y="292" width="5" height="15" fill="rgb(220,54,54)"/><text x="1099.00" y="302.50"></text></g><g><title>0x7f30c4ce0c2e (libm-2.29.so) (1 samples, 0.22%)</title><rect x="1101" y="292" width="3" height="15" fill="rgb(210,151,19)"/><text x="1104.00" y="302.50"></text></g><g><title>0x7f30c4ce0c56 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="1104" y="292" width="3" height="15" fill="rgb(227,40,28)"/><text x="1107.00" y="302.50"></text></g><g><title>0x7f30a6f35265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 5.27%)</title><rect x="1047" y="260" width="62" height="15" fill="rgb(228,12,53)"/><text x="1050.00" y="270.50">0x7f30..</text></g><g><title>exp (libm-2.29.so) (16 samples, 3.52%)</title><rect x="1068" y="276" width="41" height="15" fill="rgb(215,209,16)"/><text x="1071.00" y="286.50">exp..</text></g><g><title>0x7f30c4ce0c6a (libm-2.29.so) (1 samples, 0.22%)</title><rect x="1107" y="292" width="2" height="15" fill="rgb(226,2,27)"/><text x="1110.00" y="302.50"></text></g><g><title>0x7f30a6f149dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (37 samples, 8.13%)</title><rect x="1047" y="244" width="96" height="15" fill="rgb(251,112,31)"/><text x="1050.00" y="254.50">0x7f30a6f14..</text></g><g><title>0x7f30a6f35279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 2.86%)</title><rect x="1109" y="260" width="34" height="15" fill="rgb(252,61,1)"/><text x="1112.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (178 samples, 39.12%)</title><rect x="689" y="164" width="462" height="15" fill="rgb(214,99,4)"/><text x="692.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (64 samples, 14.07%)</title><rect x="985" y="180" width="166" height="15" fill="rgb(231,46,4)"/><text x="988.00" y="190.50">ufunc_generic_call (u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (63 samples, 13.85%)</title><rect x="987" y="196" width="164" height="15" fill="rgb(226,118,45)"/><text x="990.00" y="206.50">PyUFunc_GenericFuncti..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (59 samples, 12.97%)</title><rect x="998" y="212" width="153" height="15" fill="rgb(212,212,31)"/><text x="1001.00" y="222.50">execute_legacy_ufun..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (41 samples, 9.01%)</title><rect x="1044" y="228" width="107" height="15" fill="rgb(209,8,11)"/><text x="1047.00" y="238.50">trivial_two_o..</text></g><g><title>0x7f30a6f149e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.66%)</title><rect x="1143" y="244" width="8" height="15" fill="rgb(238,100,14)"/><text x="1146.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.44%)</title><rect x="1166" y="196" width="5" height="15" fill="rgb(213,175,3)"/><text x="1169.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 1.98%)</title><rect x="1156" y="180" width="23" height="15" fill="rgb(208,82,32)"/><text x="1159.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.66%)</title><rect x="1171" y="196" width="8" height="15" fill="rgb(233,153,8)"/><text x="1174.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 42.64%)</title><rect x="684" y="132" width="503" height="15" fill="rgb(227,173,11)"/><text x="687.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (194 samples, 42.64%)</title><rect x="684" y="148" width="503" height="15" fill="rgb(247,77,40)"/><text x="687.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 3.08%)</title><rect x="1151" y="164" width="36" height="15" fill="rgb(218,141,20)"/><text x="1154.00" y="174.50">che..</text></g><g><title>isclass (inspect.py) (3 samples, 0.66%)</title><rect x="1179" y="180" width="8" height="15" fill="rgb(247,30,6)"/><text x="1182.00" y="190.50"></text></g><g><title>all (455 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,165,24)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (454 samples, 99.78%)</title><rect x="12" y="52" width="1178" height="15" fill="rgb(230,140,49)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (196 samples, 43.08%)</title><rect x="681" y="68" width="509" height="15" fill="rgb(207,180,37)"/><text x="684.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (196 samples, 43.08%)</title><rect x="681" y="84" width="509" height="15" fill="rgb(222,202,20)"/><text x="684.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinea..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (196 samples, 43.08%)</title><rect x="681" y="100" width="509" height="15" fill="rgb(249,70,20)"/><text x="684.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (195 samples, 42.86%)</title><rect x="684" y="116" width="506" height="15" fill="rgb(215,216,37)"/><text x="687.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(237,180,37)"/><text x="1190.00" y="142.50"></text></g></g></svg>