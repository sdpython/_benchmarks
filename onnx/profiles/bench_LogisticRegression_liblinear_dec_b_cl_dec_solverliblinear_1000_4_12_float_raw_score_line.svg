<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.23%)</title><rect x="31" y="164" width="3" height="15" fill="rgb(216,213,35)"/><text x="34.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.23%)</title><rect x="34" y="164" width="3" height="15" fill="rgb(216,9,11)"/><text x="37.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.23%)</title><rect x="37" y="164" width="3" height="15" fill="rgb(228,229,51)"/><text x="40.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 0.69%)</title><rect x="42" y="180" width="8" height="15" fill="rgb(252,200,13)"/><text x="45.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.46%)</title><rect x="59" y="196" width="5" height="15" fill="rgb(209,26,35)"/><text x="62.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (14 samples, 3.24%)</title><rect x="29" y="148" width="38" height="15" fill="rgb(251,1,31)"/><text x="32.00" y="158.50">dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 2.31%)</title><rect x="40" y="164" width="27" height="15" fill="rgb(222,121,23)"/><text x="43.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.39%)</title><rect x="50" y="180" width="17" height="15" fill="rgb(250,162,21)"/><text x="53.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.23%)</title><rect x="64" y="196" width="3" height="15" fill="rgb(218,83,45)"/><text x="67.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.23%)</title><rect x="67" y="164" width="3" height="15" fill="rgb(221,207,43)"/><text x="70.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.46%)</title><rect x="70" y="164" width="5" height="15" fill="rgb(244,33,42)"/><text x="73.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.23%)</title><rect x="75" y="164" width="3" height="15" fill="rgb(249,39,49)"/><text x="78.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.23%)</title><rect x="75" y="180" width="3" height="15" fill="rgb(206,201,2)"/><text x="78.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.23%)</title><rect x="78" y="180" width="3" height="15" fill="rgb(228,21,45)"/><text x="81.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.46%)</title><rect x="78" y="164" width="5" height="15" fill="rgb(242,28,42)"/><text x="81.00" y="174.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.23%)</title><rect x="81" y="180" width="2" height="15" fill="rgb(235,142,5)"/><text x="84.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.23%)</title><rect x="83" y="180" width="3" height="15" fill="rgb(240,217,53)"/><text x="86.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 0.93%)</title><rect x="89" y="196" width="11" height="15" fill="rgb(249,97,8)"/><text x="92.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 1.85%)</title><rect x="83" y="164" width="22" height="15" fill="rgb(215,61,15)"/><text x="86.00" y="174.50">c..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 1.62%)</title><rect x="86" y="180" width="19" height="15" fill="rgb(223,159,12)"/><text x="89.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.46%)</title><rect x="100" y="196" width="5" height="15" fill="rgb(216,112,10)"/><text x="103.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.46%)</title><rect x="105" y="164" width="6" height="15" fill="rgb(246,95,3)"/><text x="108.00" y="174.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.23%)</title><rect x="108" y="180" width="3" height="15" fill="rgb(227,145,54)"/><text x="111.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.23%)</title><rect x="111" y="164" width="2" height="15" fill="rgb(206,137,53)"/><text x="114.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.23%)</title><rect x="111" y="180" width="2" height="15" fill="rgb(220,199,43)"/><text x="114.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.23%)</title><rect x="113" y="164" width="3" height="15" fill="rgb(220,204,17)"/><text x="116.00" y="174.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.23%)</title><rect x="113" y="180" width="3" height="15" fill="rgb(239,51,51)"/><text x="116.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (5 samples, 1.16%)</title><rect x="116" y="196" width="14" height="15" fill="rgb(241,104,43)"/><text x="119.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:329) (1 samples, 0.23%)</title><rect x="130" y="196" width="2" height="15" fill="rgb(239,107,7)"/><text x="133.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (7 samples, 1.62%)</title><rect x="116" y="180" width="19" height="15" fill="rgb(251,97,34)"/><text x="119.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.23%)</title><rect x="132" y="196" width="3" height="15" fill="rgb(208,36,47)"/><text x="135.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (9 samples, 2.08%)</title><rect x="116" y="164" width="25" height="15" fill="rgb(222,149,41)"/><text x="119.00" y="174.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.46%)</title><rect x="135" y="180" width="6" height="15" fill="rgb(248,91,25)"/><text x="138.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.23%)</title><rect x="138" y="196" width="3" height="15" fill="rgb(240,135,11)"/><text x="141.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.23%)</title><rect x="141" y="164" width="2" height="15" fill="rgb(230,172,9)"/><text x="144.00" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.46%)</title><rect x="154" y="196" width="6" height="15" fill="rgb(236,163,46)"/><text x="157.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 2.31%)</title><rect x="143" y="180" width="28" height="15" fill="rgb(222,95,7)"/><text x="146.00" y="190.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (4 samples, 0.93%)</title><rect x="160" y="196" width="11" height="15" fill="rgb(231,3,15)"/><text x="163.00" y="206.50"></text></g><g><title>0x7f2aae91f12b (libc-2.29.so) (1 samples, 0.23%)</title><rect x="168" y="212" width="3" height="15" fill="rgb(252,90,13)"/><text x="171.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (11 samples, 2.55%)</title><rect x="143" y="164" width="30" height="15" fill="rgb(246,169,35)"/><text x="146.00" y="174.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.23%)</title><rect x="171" y="180" width="2" height="15" fill="rgb(213,149,13)"/><text x="174.00" y="190.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.23%)</title><rect x="171" y="196" width="2" height="15" fill="rgb(217,45,1)"/><text x="174.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.23%)</title><rect x="176" y="180" width="3" height="15" fill="rgb(209,179,15)"/><text x="179.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.23%)</title><rect x="179" y="180" width="3" height="15" fill="rgb(209,163,4)"/><text x="182.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.16%)</title><rect x="182" y="180" width="13" height="15" fill="rgb(226,226,52)"/><text x="185.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.69%)</title><rect x="187" y="196" width="8" height="15" fill="rgb(245,101,39)"/><text x="190.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.46%)</title><rect x="190" y="212" width="5" height="15" fill="rgb(209,112,19)"/><text x="193.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 2.08%)</title><rect x="173" y="164" width="25" height="15" fill="rgb(240,145,54)"/><text x="176.00" y="174.50">c..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.23%)</title><rect x="195" y="180" width="3" height="15" fill="rgb(228,119,1)"/><text x="198.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (49 samples, 11.34%)</title><rect x="67" y="148" width="134" height="15" fill="rgb(211,137,33)"/><text x="70.00" y="158.50">decision_functio..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.23%)</title><rect x="198" y="164" width="3" height="15" fill="rgb(251,3,29)"/><text x="201.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.23%)</title><rect x="201" y="148" width="2" height="15" fill="rgb(253,69,9)"/><text x="204.00" y="158.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.23%)</title><rect x="201" y="164" width="2" height="15" fill="rgb(223,180,12)"/><text x="204.00" y="174.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.23%)</title><rect x="201" y="180" width="2" height="15" fill="rgb(206,33,22)"/><text x="204.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.23%)</title><rect x="201" y="196" width="2" height="15" fill="rgb(220,85,20)"/><text x="204.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.23%)</title><rect x="201" y="212" width="2" height="15" fill="rgb(227,154,2)"/><text x="204.00" y="222.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:143) (1 samples, 0.23%)</title><rect x="201" y="228" width="2" height="15" fill="rgb(211,182,6)"/><text x="204.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="209" y="196" width="3" height="15" fill="rgb(225,65,24)"/><text x="212.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.23%)</title><rect x="209" y="212" width="3" height="15" fill="rgb(248,54,40)"/><text x="212.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.23%)</title><rect x="212" y="196" width="2" height="15" fill="rgb(224,23,6)"/><text x="215.00" y="206.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.23%)</title><rect x="212" y="212" width="2" height="15" fill="rgb(226,193,35)"/><text x="215.00" y="222.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.23%)</title><rect x="212" y="228" width="2" height="15" fill="rgb(241,88,46)"/><text x="215.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.23%)</title><rect x="214" y="196" width="3" height="15" fill="rgb(228,41,15)"/><text x="217.00" y="206.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.23%)</title><rect x="214" y="212" width="3" height="15" fill="rgb(228,41,53)"/><text x="217.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.23%)</title><rect x="217" y="212" width="3" height="15" fill="rgb(249,62,30)"/><text x="220.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.23%)</title><rect x="217" y="228" width="3" height="15" fill="rgb(213,193,18)"/><text x="220.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.23%)</title><rect x="220" y="244" width="3" height="15" fill="rgb(216,103,19)"/><text x="223.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="223" y="244" width="2" height="15" fill="rgb(205,9,2)"/><text x="226.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.23%)</title><rect x="223" y="260" width="2" height="15" fill="rgb(228,17,18)"/><text x="226.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.23%)</title><rect x="225" y="340" width="3" height="15" fill="rgb(235,181,28)"/><text x="228.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.23%)</title><rect x="225" y="356" width="3" height="15" fill="rgb(224,223,11)"/><text x="228.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="225" y="372" width="3" height="15" fill="rgb(223,56,14)"/><text x="228.00" y="382.50"></text></g><g><title>0x7f2aae900428 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="225" y="388" width="3" height="15" fill="rgb(228,207,47)"/><text x="228.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.46%)</title><rect x="225" y="308" width="6" height="15" fill="rgb(212,143,28)"/><text x="228.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.46%)</title><rect x="225" y="324" width="6" height="15" fill="rgb(227,208,13)"/><text x="228.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.23%)</title><rect x="228" y="340" width="3" height="15" fill="rgb(237,32,39)"/><text x="231.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.69%)</title><rect x="225" y="244" width="8" height="15" fill="rgb(244,64,53)"/><text x="228.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (3 samples, 0.69%)</title><rect x="225" y="260" width="8" height="15" fill="rgb(240,161,41)"/><text x="228.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (3 samples, 0.69%)</title><rect x="225" y="276" width="8" height="15" fill="rgb(214,97,3)"/><text x="228.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.69%)</title><rect x="225" y="292" width="8" height="15" fill="rgb(228,214,26)"/><text x="228.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.23%)</title><rect x="231" y="308" width="2" height="15" fill="rgb(234,16,54)"/><text x="234.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.23%)</title><rect x="231" y="324" width="2" height="15" fill="rgb(250,94,1)"/><text x="234.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (6 samples, 1.39%)</title><rect x="220" y="228" width="16" height="15" fill="rgb(242,110,30)"/><text x="223.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.23%)</title><rect x="233" y="244" width="3" height="15" fill="rgb(252,163,29)"/><text x="236.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.23%)</title><rect x="233" y="260" width="3" height="15" fill="rgb(247,71,35)"/><text x="236.00" y="270.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3687) (1 samples, 0.23%)</title><rect x="233" y="276" width="3" height="15" fill="rgb(215,55,9)"/><text x="236.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.69%)</title><rect x="236" y="276" width="8" height="15" fill="rgb(226,117,39)"/><text x="239.00" y="286.50"></text></g><g><title>0x7f2aae91ed67 (libc-2.29.so) (2 samples, 0.46%)</title><rect x="244" y="292" width="6" height="15" fill="rgb(210,201,5)"/><text x="247.00" y="302.50"></text></g><g><title>0x7f2aae91ed6f (libc-2.29.so) (1 samples, 0.23%)</title><rect x="250" y="292" width="3" height="15" fill="rgb(252,19,10)"/><text x="253.00" y="302.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:329) (1 samples, 0.23%)</title><rect x="253" y="292" width="2" height="15" fill="rgb(253,192,32)"/><text x="256.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 1.85%)</title><rect x="236" y="228" width="22" height="15" fill="rgb(236,54,53)"/><text x="239.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 1.85%)</title><rect x="236" y="244" width="22" height="15" fill="rgb(239,164,15)"/><text x="239.00" y="254.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (8 samples, 1.85%)</title><rect x="236" y="260" width="22" height="15" fill="rgb(217,1,37)"/><text x="239.00" y="270.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 1.16%)</title><rect x="244" y="276" width="14" height="15" fill="rgb(205,211,13)"/><text x="247.00" y="286.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.23%)</title><rect x="255" y="292" width="3" height="15" fill="rgb(245,0,8)"/><text x="258.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.23%)</title><rect x="258" y="228" width="3" height="15" fill="rgb(234,206,4)"/><text x="261.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="258" y="244" width="3" height="15" fill="rgb(226,196,0)"/><text x="261.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.23%)</title><rect x="261" y="244" width="3" height="15" fill="rgb(248,45,41)"/><text x="264.00" y="254.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.23%)</title><rect x="264" y="276" width="2" height="15" fill="rgb(248,203,42)"/><text x="267.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.69%)</title><rect x="261" y="228" width="8" height="15" fill="rgb(230,158,3)"/><text x="264.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.46%)</title><rect x="264" y="244" width="5" height="15" fill="rgb(228,177,29)"/><text x="267.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.46%)</title><rect x="264" y="260" width="5" height="15" fill="rgb(215,71,52)"/><text x="267.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.23%)</title><rect x="266" y="276" width="3" height="15" fill="rgb(232,130,17)"/><text x="269.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.23%)</title><rect x="266" y="292" width="3" height="15" fill="rgb(236,159,26)"/><text x="269.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (19 samples, 4.40%)</title><rect x="220" y="212" width="52" height="15" fill="rgb(223,161,31)"/><text x="223.00" y="222.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.23%)</title><rect x="269" y="228" width="3" height="15" fill="rgb(206,58,25)"/><text x="272.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.23%)</title><rect x="269" y="244" width="3" height="15" fill="rgb(206,15,29)"/><text x="272.00" y="254.50"></text></g><g><title>array_add (number.c:330) (25 samples, 5.79%)</title><rect x="206" y="164" width="68" height="15" fill="rgb(216,163,24)"/><text x="209.00" y="174.50">array_a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (24 samples, 5.56%)</title><rect x="209" y="180" width="65" height="15" fill="rgb(239,227,42)"/><text x="212.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (21 samples, 4.86%)</title><rect x="217" y="196" width="57" height="15" fill="rgb(245,144,5)"/><text x="220.00" y="206.50">PyUFun..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.23%)</title><rect x="272" y="212" width="2" height="15" fill="rgb(226,177,30)"/><text x="275.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="280" y="180" width="5" height="15" fill="rgb(233,166,13)"/><text x="283.00" y="190.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.08%)</title><rect x="285" y="180" width="25" height="15" fill="rgb(225,100,23)"/><text x="288.00" y="190.50">d..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.23%)</title><rect x="310" y="212" width="3" height="15" fill="rgb(211,27,41)"/><text x="313.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.23%)</title><rect x="310" y="228" width="3" height="15" fill="rgb(236,19,17)"/><text x="313.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2719) (1 samples, 0.23%)</title><rect x="313" y="212" width="2" height="15" fill="rgb(227,39,4)"/><text x="316.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.23%)</title><rect x="315" y="228" width="3" height="15" fill="rgb(253,161,15)"/><text x="318.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.23%)</title><rect x="315" y="244" width="3" height="15" fill="rgb(244,202,20)"/><text x="318.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.23%)</title><rect x="315" y="260" width="3" height="15" fill="rgb(214,177,21)"/><text x="318.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.23%)</title><rect x="315" y="276" width="3" height="15" fill="rgb(233,26,3)"/><text x="318.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.46%)</title><rect x="315" y="212" width="6" height="15" fill="rgb(206,88,52)"/><text x="318.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.23%)</title><rect x="318" y="228" width="3" height="15" fill="rgb(205,129,3)"/><text x="321.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:241) (1 samples, 0.23%)</title><rect x="318" y="244" width="3" height="15" fill="rgb(250,132,46)"/><text x="321.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.23%)</title><rect x="321" y="212" width="3" height="15" fill="rgb(218,54,37)"/><text x="324.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.23%)</title><rect x="321" y="228" width="3" height="15" fill="rgb(251,12,4)"/><text x="324.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.23%)</title><rect x="321" y="244" width="3" height="15" fill="rgb(252,161,37)"/><text x="324.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="324" y="292" width="2" height="15" fill="rgb(222,12,1)"/><text x="327.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="324" y="308" width="2" height="15" fill="rgb(233,184,52)"/><text x="327.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.46%)</title><rect x="324" y="244" width="5" height="15" fill="rgb(254,153,42)"/><text x="327.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.46%)</title><rect x="324" y="260" width="5" height="15" fill="rgb(240,68,30)"/><text x="327.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.46%)</title><rect x="324" y="276" width="5" height="15" fill="rgb(214,129,50)"/><text x="327.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.23%)</title><rect x="326" y="292" width="3" height="15" fill="rgb(230,200,12)"/><text x="329.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.23%)</title><rect x="326" y="308" width="3" height="15" fill="rgb(231,9,54)"/><text x="329.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.23%)</title><rect x="326" y="324" width="3" height="15" fill="rgb(212,6,31)"/><text x="329.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.23%)</title><rect x="326" y="340" width="3" height="15" fill="rgb(242,103,49)"/><text x="329.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="326" y="356" width="3" height="15" fill="rgb(247,183,52)"/><text x="329.00" y="366.50"></text></g><g><title>0x7f2aae9008a8 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="326" y="372" width="3" height="15" fill="rgb(246,55,32)"/><text x="329.00" y="382.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2642) (1 samples, 0.23%)</title><rect x="329" y="260" width="3" height="15" fill="rgb(228,12,29)"/><text x="332.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (2 samples, 0.46%)</title><rect x="329" y="244" width="6" height="15" fill="rgb(244,194,31)"/><text x="332.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.23%)</title><rect x="332" y="260" width="3" height="15" fill="rgb(214,187,31)"/><text x="335.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="332" y="276" width="3" height="15" fill="rgb(206,15,51)"/><text x="335.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.23%)</title><rect x="332" y="292" width="3" height="15" fill="rgb(215,183,10)"/><text x="335.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.23%)</title><rect x="332" y="308" width="3" height="15" fill="rgb(240,108,25)"/><text x="335.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.23%)</title><rect x="332" y="324" width="3" height="15" fill="rgb(228,190,11)"/><text x="335.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.23%)</title><rect x="335" y="260" width="2" height="15" fill="rgb(247,61,27)"/><text x="338.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.23%)</title><rect x="335" y="276" width="2" height="15" fill="rgb(232,32,13)"/><text x="338.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:836) (1 samples, 0.23%)</title><rect x="335" y="292" width="2" height="15" fill="rgb(238,160,36)"/><text x="338.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.23%)</title><rect x="337" y="276" width="3" height="15" fill="rgb(235,145,36)"/><text x="340.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.23%)</title><rect x="337" y="292" width="3" height="15" fill="rgb(241,97,48)"/><text x="340.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.23%)</title><rect x="337" y="308" width="3" height="15" fill="rgb(218,31,10)"/><text x="340.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.23%)</title><rect x="340" y="276" width="3" height="15" fill="rgb(220,223,22)"/><text x="343.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="340" y="292" width="3" height="15" fill="rgb(230,188,36)"/><text x="343.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (12 samples, 2.78%)</title><rect x="324" y="212" width="32" height="15" fill="rgb(230,128,42)"/><text x="327.00" y="222.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (12 samples, 2.78%)</title><rect x="324" y="228" width="32" height="15" fill="rgb(228,205,3)"/><text x="327.00" y="238.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (8 samples, 1.85%)</title><rect x="335" y="244" width="21" height="15" fill="rgb(221,70,4)"/><text x="338.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (7 samples, 1.62%)</title><rect x="337" y="260" width="19" height="15" fill="rgb(238,74,37)"/><text x="340.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (5 samples, 1.16%)</title><rect x="343" y="276" width="13" height="15" fill="rgb(236,226,14)"/><text x="346.00" y="286.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (4 samples, 0.93%)</title><rect x="345" y="292" width="11" height="15" fill="rgb(221,10,4)"/><text x="348.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.23%)</title><rect x="356" y="212" width="3" height="15" fill="rgb(236,19,33)"/><text x="359.00" y="222.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.23%)</title><rect x="356" y="228" width="3" height="15" fill="rgb(230,53,6)"/><text x="359.00" y="238.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1635) (1 samples, 0.23%)</title><rect x="356" y="244" width="3" height="15" fill="rgb(240,120,17)"/><text x="359.00" y="254.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="362" y="260" width="5" height="15" fill="rgb(242,101,27)"/><text x="365.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="365" y="276" width="2" height="15" fill="rgb(221,8,22)"/><text x="368.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (12 samples, 2.78%)</title><rect x="359" y="212" width="33" height="15" fill="rgb(254,179,8)"/><text x="362.00" y="222.50">Py..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (12 samples, 2.78%)</title><rect x="359" y="228" width="33" height="15" fill="rgb(212,140,33)"/><text x="362.00" y="238.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.55%)</title><rect x="362" y="244" width="30" height="15" fill="rgb(222,68,45)"/><text x="365.00" y="254.50">cb..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.08%)</title><rect x="367" y="260" width="25" height="15" fill="rgb(245,98,29)"/><text x="370.00" y="270.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.08%)</title><rect x="367" y="276" width="25" height="15" fill="rgb(216,180,32)"/><text x="370.00" y="286.50">d..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3011) (1 samples, 0.23%)</title><rect x="392" y="212" width="3" height="15" fill="rgb(210,212,2)"/><text x="395.00" y="222.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="392" y="228" width="3" height="15" fill="rgb(237,220,0)"/><text x="395.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.23%)</title><rect x="395" y="212" width="2" height="15" fill="rgb(217,196,24)"/><text x="398.00" y="222.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.23%)</title><rect x="395" y="228" width="2" height="15" fill="rgb(245,150,11)"/><text x="398.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.23%)</title><rect x="395" y="244" width="2" height="15" fill="rgb(233,71,25)"/><text x="398.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.23%)</title><rect x="395" y="260" width="2" height="15" fill="rgb(205,59,38)"/><text x="398.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:685) (1 samples, 0.23%)</title><rect x="397" y="228" width="3" height="15" fill="rgb(223,217,18)"/><text x="400.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="400" y="244" width="3" height="15" fill="rgb(217,218,9)"/><text x="403.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="400" y="260" width="3" height="15" fill="rgb(250,133,34)"/><text x="403.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.23%)</title><rect x="400" y="276" width="3" height="15" fill="rgb(253,198,23)"/><text x="403.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.23%)</title><rect x="403" y="244" width="3" height="15" fill="rgb(229,104,42)"/><text x="406.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.23%)</title><rect x="403" y="260" width="3" height="15" fill="rgb(248,24,54)"/><text x="406.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (4 samples, 0.93%)</title><rect x="397" y="212" width="11" height="15" fill="rgb(231,72,3)"/><text x="400.00" y="222.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (3 samples, 0.69%)</title><rect x="400" y="228" width="8" height="15" fill="rgb(225,211,19)"/><text x="403.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.23%)</title><rect x="406" y="244" width="2" height="15" fill="rgb(226,82,1)"/><text x="409.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.23%)</title><rect x="406" y="260" width="2" height="15" fill="rgb(230,65,37)"/><text x="409.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.23%)</title><rect x="406" y="276" width="2" height="15" fill="rgb(228,165,41)"/><text x="409.00" y="286.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.23%)</title><rect x="406" y="292" width="2" height="15" fill="rgb(238,10,3)"/><text x="409.00" y="302.50"></text></g><g><title>0x7f2aadb20380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="406" y="308" width="2" height="15" fill="rgb(218,108,15)"/><text x="409.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (50 samples, 11.57%)</title><rect x="274" y="164" width="137" height="15" fill="rgb(216,0,43)"/><text x="277.00" y="174.50">safe_sparse_dot (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (37 samples, 8.56%)</title><rect x="310" y="180" width="101" height="15" fill="rgb(222,139,13)"/><text x="313.00" y="190.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (37 samples, 8.56%)</title><rect x="310" y="196" width="101" height="15" fill="rgb(211,55,12)"/><text x="313.00" y="206.50">PyUFunc_Gene..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3087) (1 samples, 0.23%)</title><rect x="408" y="212" width="3" height="15" fill="rgb(210,75,54)"/><text x="411.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (78 samples, 18.06%)</title><rect x="203" y="148" width="213" height="15" fill="rgb(220,185,33)"/><text x="206.00" y="158.50">decision_function (sklearn/l..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.46%)</title><rect x="411" y="164" width="5" height="15" fill="rgb(217,208,22)"/><text x="414.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.46%)</title><rect x="411" y="180" width="5" height="15" fill="rgb(221,188,38)"/><text x="414.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (147 samples, 34.03%)</title><rect x="20" y="132" width="402" height="15" fill="rgb(250,219,43)"/><text x="23.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:25..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.46%)</title><rect x="416" y="148" width="6" height="15" fill="rgb(213,6,46)"/><text x="419.00" y="158.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.23%)</title><rect x="422" y="132" width="3" height="15" fill="rgb(223,9,35)"/><text x="425.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:38) (153 samples, 35.42%)</title><rect x="10" y="52" width="417" height="15" fill="rgb(237,115,40)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_de..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:37) (153 samples, 35.42%)</title><rect x="10" y="68" width="417" height="15" fill="rgb(206,185,32)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_b_cl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:29) (153 samples, 35.42%)</title><rect x="10" y="84" width="417" height="15" fill="rgb(212,135,38)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:23) (153 samples, 35.42%)</title><rect x="10" y="100" width="417" height="15" fill="rgb(210,127,0)"/><text x="13.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (153 samples, 35.42%)</title><rect x="10" y="116" width="417" height="15" fill="rgb(235,185,12)"/><text x="13.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="425" y="132" width="2" height="15" fill="rgb(250,147,24)"/><text x="428.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:1) (1 samples, 0.23%)</title><rect x="427" y="148" width="3" height="15" fill="rgb(210,146,1)"/><text x="430.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="427" y="164" width="3" height="15" fill="rgb(228,65,15)"/><text x="430.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="427" y="180" width="3" height="15" fill="rgb(239,166,0)"/><text x="430.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="427" y="196" width="3" height="15" fill="rgb(239,186,54)"/><text x="430.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="427" y="212" width="3" height="15" fill="rgb(213,217,49)"/><text x="430.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="427" y="228" width="3" height="15" fill="rgb(220,185,51)"/><text x="430.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.23%)</title><rect x="427" y="244" width="3" height="15" fill="rgb(253,107,28)"/><text x="430.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="427" y="260" width="3" height="15" fill="rgb(216,225,4)"/><text x="430.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="427" y="276" width="3" height="15" fill="rgb(213,10,44)"/><text x="430.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="427" y="292" width="3" height="15" fill="rgb(235,150,32)"/><text x="430.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="427" y="308" width="3" height="15" fill="rgb(216,112,48)"/><text x="430.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="427" y="324" width="3" height="15" fill="rgb(230,204,32)"/><text x="430.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.23%)</title><rect x="427" y="340" width="3" height="15" fill="rgb(241,213,19)"/><text x="430.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="427" y="356" width="3" height="15" fill="rgb(227,122,36)"/><text x="430.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="427" y="372" width="3" height="15" fill="rgb(249,30,37)"/><text x="430.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="427" y="388" width="3" height="15" fill="rgb(252,32,52)"/><text x="430.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="427" y="404" width="3" height="15" fill="rgb(247,147,25)"/><text x="430.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="427" y="420" width="3" height="15" fill="rgb(239,77,26)"/><text x="430.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:59) (1 samples, 0.23%)</title><rect x="427" y="436" width="3" height="15" fill="rgb(241,112,15)"/><text x="430.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="427" y="452" width="3" height="15" fill="rgb(215,180,36)"/><text x="430.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="427" y="468" width="3" height="15" fill="rgb(223,200,17)"/><text x="430.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="427" y="484" width="3" height="15" fill="rgb(239,105,42)"/><text x="430.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="427" y="500" width="3" height="15" fill="rgb(234,96,30)"/><text x="430.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="427" y="516" width="3" height="15" fill="rgb(218,174,5)"/><text x="430.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py:5) (1 samples, 0.23%)</title><rect x="427" y="532" width="3" height="15" fill="rgb(242,116,12)"/><text x="430.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="427" y="548" width="3" height="15" fill="rgb(234,105,19)"/><text x="430.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="427" y="564" width="3" height="15" fill="rgb(218,38,36)"/><text x="430.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="427" y="580" width="3" height="15" fill="rgb(233,16,45)"/><text x="430.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="427" y="596" width="3" height="15" fill="rgb(253,63,37)"/><text x="430.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="427" y="612" width="3" height="15" fill="rgb(216,120,17)"/><text x="430.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="427" y="628" width="3" height="15" fill="rgb(236,92,24)"/><text x="430.00" y="638.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.23%)</title><rect x="430" y="900" width="3" height="15" fill="rgb(213,14,38)"/><text x="433.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.23%)</title><rect x="430" y="916" width="3" height="15" fill="rgb(212,9,33)"/><text x="433.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.23%)</title><rect x="430" y="932" width="3" height="15" fill="rgb(253,170,17)"/><text x="433.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.23%)</title><rect x="430" y="948" width="3" height="15" fill="rgb(247,219,43)"/><text x="433.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="430" y="964" width="3" height="15" fill="rgb(225,157,27)"/><text x="433.00" y="974.50"></text></g><g><title>0x7f2aae93e237 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="430" y="980" width="3" height="15" fill="rgb(217,58,15)"/><text x="433.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.46%)</title><rect x="430" y="852" width="6" height="15" fill="rgb(252,53,6)"/><text x="433.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.46%)</title><rect x="430" y="868" width="6" height="15" fill="rgb(252,106,8)"/><text x="433.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.46%)</title><rect x="430" y="884" width="6" height="15" fill="rgb(219,7,12)"/><text x="433.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.23%)</title><rect x="433" y="900" width="3" height="15" fill="rgb(254,180,7)"/><text x="436.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.23%)</title><rect x="433" y="916" width="3" height="15" fill="rgb(220,82,7)"/><text x="436.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py:2640) (1 samples, 0.23%)</title><rect x="433" y="932" width="3" height="15" fill="rgb(233,221,39)"/><text x="436.00" y="942.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.23%)</title><rect x="436" y="964" width="2" height="15" fill="rgb(214,119,10)"/><text x="439.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.23%)</title><rect x="436" y="980" width="2" height="15" fill="rgb(209,139,30)"/><text x="439.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.23%)</title><rect x="436" y="996" width="2" height="15" fill="rgb(231,133,4)"/><text x="439.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.23%)</title><rect x="436" y="1012" width="2" height="15" fill="rgb(218,19,40)"/><text x="439.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="436" y="1028" width="2" height="15" fill="rgb(207,1,44)"/><text x="439.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="436" y="1044" width="2" height="15" fill="rgb(232,42,8)"/><text x="439.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.46%)</title><rect x="436" y="852" width="5" height="15" fill="rgb(222,160,22)"/><text x="439.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.46%)</title><rect x="436" y="868" width="5" height="15" fill="rgb(234,210,12)"/><text x="439.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.46%)</title><rect x="436" y="884" width="5" height="15" fill="rgb(217,184,27)"/><text x="439.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.46%)</title><rect x="436" y="900" width="5" height="15" fill="rgb(248,117,51)"/><text x="439.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.46%)</title><rect x="436" y="916" width="5" height="15" fill="rgb(251,32,0)"/><text x="439.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.46%)</title><rect x="436" y="932" width="5" height="15" fill="rgb(248,137,47)"/><text x="439.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.46%)</title><rect x="436" y="948" width="5" height="15" fill="rgb(244,191,32)"/><text x="439.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.23%)</title><rect x="438" y="964" width="3" height="15" fill="rgb(211,200,4)"/><text x="441.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.23%)</title><rect x="438" y="980" width="3" height="15" fill="rgb(241,114,10)"/><text x="441.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.23%)</title><rect x="438" y="996" width="3" height="15" fill="rgb(233,20,27)"/><text x="441.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.23%)</title><rect x="438" y="1012" width="3" height="15" fill="rgb(224,192,4)"/><text x="441.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="438" y="1028" width="3" height="15" fill="rgb(243,22,20)"/><text x="441.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="438" y="1044" width="3" height="15" fill="rgb(216,187,42)"/><text x="441.00" y="1054.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.23%)</title><rect x="441" y="948" width="3" height="15" fill="rgb(252,89,29)"/><text x="444.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:225) (1 samples, 0.23%)</title><rect x="441" y="964" width="3" height="15" fill="rgb(245,224,39)"/><text x="444.00" y="974.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.46%)</title><rect x="441" y="884" width="6" height="15" fill="rgb(210,139,37)"/><text x="444.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.46%)</title><rect x="441" y="900" width="6" height="15" fill="rgb(209,134,50)"/><text x="444.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.46%)</title><rect x="441" y="916" width="6" height="15" fill="rgb(210,161,16)"/><text x="444.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.46%)</title><rect x="441" y="932" width="6" height="15" fill="rgb(211,83,15)"/><text x="444.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.23%)</title><rect x="444" y="948" width="3" height="15" fill="rgb(221,61,54)"/><text x="447.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.23%)</title><rect x="444" y="964" width="3" height="15" fill="rgb(253,124,23)"/><text x="447.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.23%)</title><rect x="444" y="980" width="3" height="15" fill="rgb(205,125,16)"/><text x="447.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:116) (1 samples, 0.23%)</title><rect x="444" y="996" width="3" height="15" fill="rgb(227,209,48)"/><text x="447.00" y="1006.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="444" y="1012" width="3" height="15" fill="rgb(213,123,0)"/><text x="447.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:2) (7 samples, 1.62%)</title><rect x="430" y="148" width="19" height="15" fill="rgb(248,151,48)"/><text x="433.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="164" width="19" height="15" fill="rgb(206,78,44)"/><text x="433.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.62%)</title><rect x="430" y="180" width="19" height="15" fill="rgb(245,113,51)"/><text x="433.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="196" width="19" height="15" fill="rgb(232,207,11)"/><text x="433.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="212" width="19" height="15" fill="rgb(236,98,29)"/><text x="433.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="430" y="228" width="19" height="15" fill="rgb(247,7,47)"/><text x="433.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="430" y="244" width="19" height="15" fill="rgb(215,27,40)"/><text x="433.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="430" y="260" width="19" height="15" fill="rgb(226,125,24)"/><text x="433.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="276" width="19" height="15" fill="rgb(235,85,49)"/><text x="433.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 1.62%)</title><rect x="430" y="292" width="19" height="15" fill="rgb(250,52,24)"/><text x="433.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="308" width="19" height="15" fill="rgb(251,136,24)"/><text x="433.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="430" y="324" width="19" height="15" fill="rgb(239,60,43)"/><text x="433.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="430" y="340" width="19" height="15" fill="rgb(219,125,21)"/><text x="433.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="430" y="356" width="19" height="15" fill="rgb(219,24,48)"/><text x="433.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="372" width="19" height="15" fill="rgb(238,223,40)"/><text x="433.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 1.62%)</title><rect x="430" y="388" width="19" height="15" fill="rgb(246,111,31)"/><text x="433.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="404" width="19" height="15" fill="rgb(213,58,24)"/><text x="433.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="430" y="420" width="19" height="15" fill="rgb(226,212,45)"/><text x="433.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="430" y="436" width="19" height="15" fill="rgb(226,73,7)"/><text x="433.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="430" y="452" width="19" height="15" fill="rgb(228,65,13)"/><text x="433.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="468" width="19" height="15" fill="rgb(241,156,14)"/><text x="433.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 1.62%)</title><rect x="430" y="484" width="19" height="15" fill="rgb(215,77,30)"/><text x="433.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="500" width="19" height="15" fill="rgb(212,117,23)"/><text x="433.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="430" y="516" width="19" height="15" fill="rgb(244,17,5)"/><text x="433.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="430" y="532" width="19" height="15" fill="rgb(205,36,39)"/><text x="433.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="430" y="548" width="19" height="15" fill="rgb(217,7,18)"/><text x="433.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="564" width="19" height="15" fill="rgb(212,71,33)"/><text x="433.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 1.62%)</title><rect x="430" y="580" width="19" height="15" fill="rgb(212,27,2)"/><text x="433.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="596" width="19" height="15" fill="rgb(222,132,18)"/><text x="433.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.62%)</title><rect x="430" y="612" width="19" height="15" fill="rgb(240,77,14)"/><text x="433.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="628" width="19" height="15" fill="rgb(211,64,30)"/><text x="433.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="644" width="19" height="15" fill="rgb(217,187,49)"/><text x="433.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="430" y="660" width="19" height="15" fill="rgb(241,192,45)"/><text x="433.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="430" y="676" width="19" height="15" fill="rgb(237,146,38)"/><text x="433.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="430" y="692" width="19" height="15" fill="rgb(252,199,12)"/><text x="433.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="708" width="19" height="15" fill="rgb(226,207,6)"/><text x="433.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 1.62%)</title><rect x="430" y="724" width="19" height="15" fill="rgb(244,156,47)"/><text x="433.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="430" y="740" width="19" height="15" fill="rgb(225,113,4)"/><text x="433.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="430" y="756" width="19" height="15" fill="rgb(246,61,11)"/><text x="433.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="430" y="772" width="19" height="15" fill="rgb(227,57,5)"/><text x="433.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="430" y="788" width="19" height="15" fill="rgb(214,40,8)"/><text x="433.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="430" y="804" width="19" height="15" fill="rgb(232,184,38)"/><text x="433.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 1.62%)</title><rect x="430" y="820" width="19" height="15" fill="rgb(215,187,49)"/><text x="433.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 1.62%)</title><rect x="430" y="836" width="19" height="15" fill="rgb(213,143,50)"/><text x="433.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.69%)</title><rect x="441" y="852" width="8" height="15" fill="rgb(243,1,19)"/><text x="444.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.69%)</title><rect x="441" y="868" width="8" height="15" fill="rgb(225,46,1)"/><text x="444.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.23%)</title><rect x="447" y="884" width="2" height="15" fill="rgb(237,190,43)"/><text x="450.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.23%)</title><rect x="447" y="900" width="2" height="15" fill="rgb(230,162,12)"/><text x="450.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.23%)</title><rect x="447" y="916" width="2" height="15" fill="rgb(229,168,29)"/><text x="450.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.23%)</title><rect x="447" y="932" width="2" height="15" fill="rgb(246,111,18)"/><text x="450.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py:2772) (1 samples, 0.23%)</title><rect x="447" y="948" width="2" height="15" fill="rgb(254,6,16)"/><text x="450.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py:2558) (1 samples, 0.23%)</title><rect x="447" y="964" width="2" height="15" fill="rgb(211,156,29)"/><text x="450.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.23%)</title><rect x="447" y="980" width="2" height="15" fill="rgb(254,3,43)"/><text x="450.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.23%)</title><rect x="447" y="996" width="2" height="15" fill="rgb(224,7,36)"/><text x="450.00" y="1006.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.23%)</title><rect x="447" y="1012" width="2" height="15" fill="rgb(225,131,44)"/><text x="450.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="449" y="180" width="3" height="15" fill="rgb(214,129,14)"/><text x="452.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="196" width="3" height="15" fill="rgb(207,97,50)"/><text x="452.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="212" width="3" height="15" fill="rgb(214,223,46)"/><text x="452.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="228" width="3" height="15" fill="rgb(213,204,35)"/><text x="452.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="244" width="3" height="15" fill="rgb(230,146,33)"/><text x="452.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="260" width="3" height="15" fill="rgb(225,176,44)"/><text x="452.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="276" width="3" height="15" fill="rgb(254,208,28)"/><text x="452.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.23%)</title><rect x="449" y="292" width="3" height="15" fill="rgb(222,177,50)"/><text x="452.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="308" width="3" height="15" fill="rgb(248,29,6)"/><text x="452.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="324" width="3" height="15" fill="rgb(223,53,20)"/><text x="452.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="340" width="3" height="15" fill="rgb(252,203,53)"/><text x="452.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="356" width="3" height="15" fill="rgb(239,92,14)"/><text x="452.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="372" width="3" height="15" fill="rgb(230,99,2)"/><text x="452.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.23%)</title><rect x="449" y="388" width="3" height="15" fill="rgb(231,21,49)"/><text x="452.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="404" width="3" height="15" fill="rgb(245,135,46)"/><text x="452.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="420" width="3" height="15" fill="rgb(232,5,45)"/><text x="452.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="436" width="3" height="15" fill="rgb(210,21,1)"/><text x="452.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="452" width="3" height="15" fill="rgb(212,52,10)"/><text x="452.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="468" width="3" height="15" fill="rgb(228,101,18)"/><text x="452.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.23%)</title><rect x="449" y="484" width="3" height="15" fill="rgb(205,201,15)"/><text x="452.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="500" width="3" height="15" fill="rgb(235,40,22)"/><text x="452.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="516" width="3" height="15" fill="rgb(221,111,12)"/><text x="452.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="532" width="3" height="15" fill="rgb(210,213,45)"/><text x="452.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="548" width="3" height="15" fill="rgb(223,194,11)"/><text x="452.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="564" width="3" height="15" fill="rgb(218,156,11)"/><text x="452.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.23%)</title><rect x="449" y="580" width="3" height="15" fill="rgb(248,27,46)"/><text x="452.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="596" width="3" height="15" fill="rgb(214,228,34)"/><text x="452.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="612" width="3" height="15" fill="rgb(210,157,29)"/><text x="452.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="628" width="3" height="15" fill="rgb(216,226,10)"/><text x="452.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="644" width="3" height="15" fill="rgb(242,18,8)"/><text x="452.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="660" width="3" height="15" fill="rgb(219,107,42)"/><text x="452.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.23%)</title><rect x="449" y="676" width="3" height="15" fill="rgb(207,179,47)"/><text x="452.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="692" width="3" height="15" fill="rgb(233,127,39)"/><text x="452.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="708" width="3" height="15" fill="rgb(220,219,49)"/><text x="452.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="724" width="3" height="15" fill="rgb(227,126,4)"/><text x="452.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="740" width="3" height="15" fill="rgb(219,122,11)"/><text x="452.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="756" width="3" height="15" fill="rgb(248,227,47)"/><text x="452.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.23%)</title><rect x="449" y="772" width="3" height="15" fill="rgb(254,215,53)"/><text x="452.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="449" y="788" width="3" height="15" fill="rgb(237,166,6)"/><text x="452.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="804" width="3" height="15" fill="rgb(228,175,7)"/><text x="452.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="820" width="3" height="15" fill="rgb(234,68,51)"/><text x="452.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="836" width="3" height="15" fill="rgb(237,48,37)"/><text x="452.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="852" width="3" height="15" fill="rgb(233,160,26)"/><text x="452.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="868" width="3" height="15" fill="rgb(221,119,21)"/><text x="452.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="884" width="3" height="15" fill="rgb(233,189,38)"/><text x="452.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.23%)</title><rect x="449" y="900" width="3" height="15" fill="rgb(215,212,27)"/><text x="452.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="916" width="3" height="15" fill="rgb(220,199,20)"/><text x="452.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="932" width="3" height="15" fill="rgb(220,26,46)"/><text x="452.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="948" width="3" height="15" fill="rgb(238,176,28)"/><text x="452.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="964" width="3" height="15" fill="rgb(252,114,49)"/><text x="452.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="980" width="3" height="15" fill="rgb(212,205,28)"/><text x="452.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.23%)</title><rect x="449" y="996" width="3" height="15" fill="rgb(228,6,43)"/><text x="452.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="449" y="1012" width="3" height="15" fill="rgb(234,167,3)"/><text x="452.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="1028" width="3" height="15" fill="rgb(208,203,34)"/><text x="452.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="1044" width="3" height="15" fill="rgb(218,116,48)"/><text x="452.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="1060" width="3" height="15" fill="rgb(214,212,33)"/><text x="452.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="1076" width="3" height="15" fill="rgb(208,65,4)"/><text x="452.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="1092" width="3" height="15" fill="rgb(254,127,4)"/><text x="452.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="1108" width="3" height="15" fill="rgb(215,60,10)"/><text x="452.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.23%)</title><rect x="449" y="1124" width="3" height="15" fill="rgb(210,136,25)"/><text x="452.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="1140" width="3" height="15" fill="rgb(254,191,0)"/><text x="452.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="1156" width="3" height="15" fill="rgb(225,191,27)"/><text x="452.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="1172" width="3" height="15" fill="rgb(228,214,35)"/><text x="452.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="1188" width="3" height="15" fill="rgb(229,98,14)"/><text x="452.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="1204" width="3" height="15" fill="rgb(245,140,42)"/><text x="452.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:33) (1 samples, 0.23%)</title><rect x="449" y="1220" width="3" height="15" fill="rgb(219,34,14)"/><text x="452.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="1236" width="3" height="15" fill="rgb(239,12,19)"/><text x="452.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="1252" width="3" height="15" fill="rgb(231,159,37)"/><text x="452.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="1268" width="3" height="15" fill="rgb(207,17,0)"/><text x="452.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="1284" width="3" height="15" fill="rgb(214,174,9)"/><text x="452.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="1300" width="3" height="15" fill="rgb(238,23,12)"/><text x="452.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/lbfgsb.py:40) (1 samples, 0.23%)</title><rect x="449" y="1316" width="3" height="15" fill="rgb(230,107,38)"/><text x="452.00" y="1326.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="449" y="1332" width="3" height="15" fill="rgb(226,36,47)"/><text x="452.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="1348" width="3" height="15" fill="rgb(245,225,29)"/><text x="452.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="1364" width="3" height="15" fill="rgb(227,117,52)"/><text x="452.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="1380" width="3" height="15" fill="rgb(236,134,41)"/><text x="452.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.23%)</title><rect x="449" y="1396" width="3" height="15" fill="rgb(245,16,26)"/><text x="452.00" y="1406.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.23%)</title><rect x="449" y="1412" width="3" height="15" fill="rgb(223,190,49)"/><text x="452.00" y="1422.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.23%)</title><rect x="449" y="1428" width="3" height="15" fill="rgb(210,180,22)"/><text x="452.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="1444" width="3" height="15" fill="rgb(241,2,30)"/><text x="452.00" y="1454.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1460" width="3" height="15" fill="rgb(253,183,11)"/><text x="452.00" y="1470.50"></text></g><g><title>0x7f2aaeb86995 (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1476" width="3" height="15" fill="rgb(216,20,2)"/><text x="452.00" y="1486.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1492" width="3" height="15" fill="rgb(219,90,15)"/><text x="452.00" y="1502.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1508" width="3" height="15" fill="rgb(212,107,24)"/><text x="452.00" y="1518.50"></text></g><g><title>0x7f2aaeb86258 (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1524" width="3" height="15" fill="rgb(230,12,30)"/><text x="452.00" y="1534.50"></text></g><g><title>0x7f2aaebd3d7a (ld-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1540" width="3" height="15" fill="rgb(235,128,40)"/><text x="452.00" y="1550.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1556" width="3" height="15" fill="rgb(248,9,20)"/><text x="452.00" y="1566.50"></text></g><g><title>0x7f2aaebd418b (ld-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1572" width="3" height="15" fill="rgb(219,118,18)"/><text x="452.00" y="1582.50"></text></g><g><title>0x7f2aaebc9c1a (ld-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1588" width="3" height="15" fill="rgb(221,214,1)"/><text x="452.00" y="1598.50"></text></g><g><title>0x7f2aaebc73da (ld-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1604" width="3" height="15" fill="rgb(239,36,23)"/><text x="452.00" y="1614.50"></text></g><g><title>0x7f2aaebdbbd2 (ld-2.29.so) (1 samples, 0.23%)</title><rect x="449" y="1620" width="3" height="15" fill="rgb(220,116,26)"/><text x="452.00" y="1630.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:4) (2 samples, 0.46%)</title><rect x="449" y="148" width="6" height="15" fill="rgb(220,60,15)"/><text x="452.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="449" y="164" width="6" height="15" fill="rgb(207,202,30)"/><text x="452.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="452" y="180" width="3" height="15" fill="rgb(231,23,17)"/><text x="455.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="452" y="196" width="3" height="15" fill="rgb(211,13,24)"/><text x="455.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="452" y="212" width="3" height="15" fill="rgb(237,212,26)"/><text x="455.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="452" y="228" width="3" height="15" fill="rgb(247,135,22)"/><text x="455.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:9) (1 samples, 0.23%)</title><rect x="452" y="244" width="3" height="15" fill="rgb(220,160,47)"/><text x="455.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="452" y="260" width="3" height="15" fill="rgb(246,221,44)"/><text x="455.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="452" y="276" width="3" height="15" fill="rgb(227,158,23)"/><text x="455.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="452" y="292" width="3" height="15" fill="rgb(246,215,7)"/><text x="455.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="452" y="308" width="3" height="15" fill="rgb(251,5,39)"/><text x="455.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="452" y="324" width="3" height="15" fill="rgb(230,175,41)"/><text x="455.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_base.py:38) (1 samples, 0.23%)</title><rect x="452" y="340" width="3" height="15" fill="rgb(208,210,50)"/><text x="455.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="452" y="356" width="3" height="15" fill="rgb(236,182,46)"/><text x="455.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="452" y="372" width="3" height="15" fill="rgb(216,101,31)"/><text x="455.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="452" y="388" width="3" height="15" fill="rgb(254,169,49)"/><text x="455.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="452" y="404" width="3" height="15" fill="rgb(225,132,1)"/><text x="455.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="452" y="420" width="3" height="15" fill="rgb(215,9,24)"/><text x="455.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py:8) (1 samples, 0.23%)</title><rect x="452" y="436" width="3" height="15" fill="rgb(214,121,22)"/><text x="455.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="452" y="452" width="3" height="15" fill="rgb(235,161,42)"/><text x="455.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="452" y="468" width="3" height="15" fill="rgb(212,194,24)"/><text x="455.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="452" y="484" width="3" height="15" fill="rgb(253,79,2)"/><text x="455.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="452" y="500" width="3" height="15" fill="rgb(212,99,34)"/><text x="455.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="452" y="516" width="3" height="15" fill="rgb(240,19,34)"/><text x="455.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_data.py:36) (1 samples, 0.23%)</title><rect x="452" y="532" width="3" height="15" fill="rgb(207,1,44)"/><text x="455.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="452" y="548" width="3" height="15" fill="rgb(213,218,20)"/><text x="455.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="452" y="564" width="3" height="15" fill="rgb(231,20,46)"/><text x="455.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="452" y="580" width="3" height="15" fill="rgb(252,161,46)"/><text x="455.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="452" y="596" width="3" height="15" fill="rgb(247,21,12)"/><text x="455.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="452" y="612" width="3" height="15" fill="rgb(240,78,25)"/><text x="455.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_encoders.py:13) (1 samples, 0.23%)</title><rect x="452" y="628" width="3" height="15" fill="rgb(211,78,47)"/><text x="455.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="452" y="644" width="3" height="15" fill="rgb(225,64,14)"/><text x="455.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="452" y="660" width="3" height="15" fill="rgb(227,211,37)"/><text x="455.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="452" y="676" width="3" height="15" fill="rgb(212,38,39)"/><text x="455.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="452" y="692" width="3" height="15" fill="rgb(231,74,10)"/><text x="455.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="452" y="708" width="3" height="15" fill="rgb(253,45,52)"/><text x="455.00" y="718.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="452" y="724" width="3" height="15" fill="rgb(230,175,46)"/><text x="455.00" y="734.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.23%)</title><rect x="455" y="244" width="2" height="15" fill="rgb(232,214,27)"/><text x="458.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="260" width="2" height="15" fill="rgb(244,147,20)"/><text x="458.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="276" width="2" height="15" fill="rgb(250,74,54)"/><text x="458.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="292" width="2" height="15" fill="rgb(225,56,53)"/><text x="458.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="308" width="2" height="15" fill="rgb(244,86,1)"/><text x="458.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(247,210,5)"/><text x="458.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.23%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(224,177,30)"/><text x="458.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(230,178,19)"/><text x="458.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="455" y="372" width="2" height="15" fill="rgb(223,153,54)"/><text x="458.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="388" width="2" height="15" fill="rgb(217,145,11)"/><text x="458.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="404" width="2" height="15" fill="rgb(234,211,21)"/><text x="458.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="420" width="2" height="15" fill="rgb(207,45,20)"/><text x="458.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="436" width="2" height="15" fill="rgb(220,77,31)"/><text x="458.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="452" width="2" height="15" fill="rgb(221,90,13)"/><text x="458.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="468" width="2" height="15" fill="rgb(250,77,26)"/><text x="458.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.23%)</title><rect x="455" y="484" width="2" height="15" fill="rgb(221,32,49)"/><text x="458.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="500" width="2" height="15" fill="rgb(207,185,43)"/><text x="458.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="516" width="2" height="15" fill="rgb(206,186,42)"/><text x="458.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="532" width="2" height="15" fill="rgb(249,131,53)"/><text x="458.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="548" width="2" height="15" fill="rgb(244,16,3)"/><text x="458.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="564" width="2" height="15" fill="rgb(242,26,7)"/><text x="458.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.23%)</title><rect x="455" y="580" width="2" height="15" fill="rgb(232,167,25)"/><text x="458.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="596" width="2" height="15" fill="rgb(210,46,7)"/><text x="458.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="612" width="2" height="15" fill="rgb(210,92,44)"/><text x="458.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="628" width="2" height="15" fill="rgb(209,20,20)"/><text x="458.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="644" width="2" height="15" fill="rgb(219,46,36)"/><text x="458.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="660" width="2" height="15" fill="rgb(251,77,15)"/><text x="458.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.23%)</title><rect x="455" y="676" width="2" height="15" fill="rgb(205,176,29)"/><text x="458.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="692" width="2" height="15" fill="rgb(233,53,21)"/><text x="458.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="708" width="2" height="15" fill="rgb(228,17,12)"/><text x="458.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="724" width="2" height="15" fill="rgb(209,71,14)"/><text x="458.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="740" width="2" height="15" fill="rgb(226,124,43)"/><text x="458.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="756" width="2" height="15" fill="rgb(237,54,9)"/><text x="458.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.23%)</title><rect x="455" y="772" width="2" height="15" fill="rgb(247,23,14)"/><text x="458.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="455" y="788" width="2" height="15" fill="rgb(248,76,24)"/><text x="458.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="804" width="2" height="15" fill="rgb(219,38,54)"/><text x="458.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="820" width="2" height="15" fill="rgb(227,222,34)"/><text x="458.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="836" width="2" height="15" fill="rgb(209,1,45)"/><text x="458.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="852" width="2" height="15" fill="rgb(226,103,15)"/><text x="458.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="868" width="2" height="15" fill="rgb(212,77,50)"/><text x="458.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="884" width="2" height="15" fill="rgb(212,186,24)"/><text x="458.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.23%)</title><rect x="455" y="900" width="2" height="15" fill="rgb(248,106,48)"/><text x="458.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="916" width="2" height="15" fill="rgb(212,200,27)"/><text x="458.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="932" width="2" height="15" fill="rgb(245,211,11)"/><text x="458.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="948" width="2" height="15" fill="rgb(220,205,54)"/><text x="458.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="964" width="2" height="15" fill="rgb(224,157,20)"/><text x="458.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="980" width="2" height="15" fill="rgb(247,94,8)"/><text x="458.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.23%)</title><rect x="455" y="996" width="2" height="15" fill="rgb(235,215,35)"/><text x="458.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="455" y="1012" width="2" height="15" fill="rgb(230,178,40)"/><text x="458.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="455" y="1028" width="2" height="15" fill="rgb(246,187,11)"/><text x="458.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="455" y="1044" width="2" height="15" fill="rgb(212,48,13)"/><text x="458.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="455" y="1060" width="2" height="15" fill="rgb(207,146,46)"/><text x="458.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="455" y="1076" width="2" height="15" fill="rgb(226,18,26)"/><text x="458.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:112) (1 samples, 0.23%)</title><rect x="455" y="1092" width="2" height="15" fill="rgb(246,213,21)"/><text x="458.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.23%)</title><rect x="455" y="1108" width="2" height="15" fill="rgb(248,10,49)"/><text x="458.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py:107) (1 samples, 0.23%)</title><rect x="455" y="1124" width="2" height="15" fill="rgb(210,171,52)"/><text x="458.00" y="1134.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.23%)</title><rect x="455" y="1140" width="2" height="15" fill="rgb(231,209,50)"/><text x="458.00" y="1150.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.23%)</title><rect x="455" y="1156" width="2" height="15" fill="rgb(245,218,19)"/><text x="458.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.23%)</title><rect x="455" y="1172" width="2" height="15" fill="rgb(216,42,52)"/><text x="458.00" y="1182.50"></text></g><g><title>_signature_from_function (inspect.py:2135) (1 samples, 0.23%)</title><rect x="455" y="1188" width="2" height="15" fill="rgb(230,68,16)"/><text x="458.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.23%)</title><rect x="457" y="628" width="3" height="15" fill="rgb(236,67,27)"/><text x="460.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="644" width="3" height="15" fill="rgb(219,25,6)"/><text x="460.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="660" width="3" height="15" fill="rgb(254,174,23)"/><text x="460.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="676" width="3" height="15" fill="rgb(210,85,14)"/><text x="460.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="692" width="3" height="15" fill="rgb(245,59,23)"/><text x="460.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="708" width="3" height="15" fill="rgb(224,24,20)"/><text x="460.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.23%)</title><rect x="457" y="724" width="3" height="15" fill="rgb(228,226,49)"/><text x="460.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="740" width="3" height="15" fill="rgb(249,22,52)"/><text x="460.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="756" width="3" height="15" fill="rgb(219,95,23)"/><text x="460.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="772" width="3" height="15" fill="rgb(238,150,12)"/><text x="460.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="788" width="3" height="15" fill="rgb(208,90,33)"/><text x="460.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="804" width="3" height="15" fill="rgb(246,144,15)"/><text x="460.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.23%)</title><rect x="457" y="820" width="3" height="15" fill="rgb(252,214,19)"/><text x="460.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="836" width="3" height="15" fill="rgb(253,113,48)"/><text x="460.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="852" width="3" height="15" fill="rgb(226,189,44)"/><text x="460.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="868" width="3" height="15" fill="rgb(227,117,12)"/><text x="460.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="884" width="3" height="15" fill="rgb(244,121,45)"/><text x="460.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="900" width="3" height="15" fill="rgb(234,183,42)"/><text x="460.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.23%)</title><rect x="457" y="916" width="3" height="15" fill="rgb(229,182,37)"/><text x="460.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="932" width="3" height="15" fill="rgb(239,76,23)"/><text x="460.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="948" width="3" height="15" fill="rgb(236,20,0)"/><text x="460.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="964" width="3" height="15" fill="rgb(221,122,2)"/><text x="460.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="980" width="3" height="15" fill="rgb(252,74,1)"/><text x="460.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="996" width="3" height="15" fill="rgb(245,160,53)"/><text x="460.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py:708) (1 samples, 0.23%)</title><rect x="457" y="1012" width="3" height="15" fill="rgb(230,206,48)"/><text x="460.00" y="1022.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.23%)</title><rect x="457" y="1028" width="3" height="15" fill="rgb(233,117,34)"/><text x="460.00" y="1038.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.23%)</title><rect x="457" y="1044" width="3" height="15" fill="rgb(213,1,33)"/><text x="460.00" y="1054.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.23%)</title><rect x="457" y="1060" width="3" height="15" fill="rgb(253,143,38)"/><text x="460.00" y="1070.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.23%)</title><rect x="457" y="1076" width="3" height="15" fill="rgb(206,5,24)"/><text x="460.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="457" y="1092" width="3" height="15" fill="rgb(233,95,43)"/><text x="460.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.23%)</title><rect x="460" y="1012" width="3" height="15" fill="rgb(209,200,29)"/><text x="463.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="460" y="1028" width="3" height="15" fill="rgb(250,126,29)"/><text x="463.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="460" y="1044" width="3" height="15" fill="rgb(234,50,10)"/><text x="463.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="460" y="1060" width="3" height="15" fill="rgb(215,16,50)"/><text x="463.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="460" y="1076" width="3" height="15" fill="rgb(219,149,40)"/><text x="463.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="460" y="1092" width="3" height="15" fill="rgb(208,7,6)"/><text x="463.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="460" y="1108" width="3" height="15" fill="rgb(234,183,54)"/><text x="463.00" y="1118.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.23%)</title><rect x="463" y="1012" width="3" height="15" fill="rgb(225,213,21)"/><text x="466.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1028" width="3" height="15" fill="rgb(230,111,31)"/><text x="466.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1044" width="3" height="15" fill="rgb(220,11,11)"/><text x="466.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1060" width="3" height="15" fill="rgb(248,163,53)"/><text x="466.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1076" width="3" height="15" fill="rgb(219,102,16)"/><text x="466.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1092" width="3" height="15" fill="rgb(228,152,44)"/><text x="466.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.23%)</title><rect x="463" y="1108" width="3" height="15" fill="rgb(215,190,44)"/><text x="466.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1124" width="3" height="15" fill="rgb(221,22,49)"/><text x="466.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1140" width="3" height="15" fill="rgb(249,176,9)"/><text x="466.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1156" width="3" height="15" fill="rgb(219,104,28)"/><text x="466.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1172" width="3" height="15" fill="rgb(239,34,47)"/><text x="466.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1188" width="3" height="15" fill="rgb(210,65,11)"/><text x="466.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.23%)</title><rect x="463" y="1204" width="3" height="15" fill="rgb(241,133,2)"/><text x="466.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1220" width="3" height="15" fill="rgb(220,45,35)"/><text x="466.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1236" width="3" height="15" fill="rgb(241,126,12)"/><text x="466.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1252" width="3" height="15" fill="rgb(221,92,19)"/><text x="466.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1268" width="3" height="15" fill="rgb(248,27,1)"/><text x="466.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1284" width="3" height="15" fill="rgb(235,112,16)"/><text x="466.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.23%)</title><rect x="463" y="1300" width="3" height="15" fill="rgb(215,60,48)"/><text x="466.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1316" width="3" height="15" fill="rgb(215,42,52)"/><text x="466.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1332" width="3" height="15" fill="rgb(217,34,44)"/><text x="466.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1348" width="3" height="15" fill="rgb(243,1,34)"/><text x="466.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1364" width="3" height="15" fill="rgb(240,118,30)"/><text x="466.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1380" width="3" height="15" fill="rgb(244,29,25)"/><text x="466.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.23%)</title><rect x="463" y="1396" width="3" height="15" fill="rgb(253,175,49)"/><text x="466.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1412" width="3" height="15" fill="rgb(238,21,0)"/><text x="466.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1428" width="3" height="15" fill="rgb(238,75,33)"/><text x="466.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1444" width="3" height="15" fill="rgb(242,48,2)"/><text x="466.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1460" width="3" height="15" fill="rgb(234,41,7)"/><text x="466.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1476" width="3" height="15" fill="rgb(250,87,44)"/><text x="466.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.23%)</title><rect x="463" y="1492" width="3" height="15" fill="rgb(214,101,39)"/><text x="466.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1508" width="3" height="15" fill="rgb(227,31,46)"/><text x="466.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="463" y="1524" width="3" height="15" fill="rgb(244,138,1)"/><text x="466.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1540" width="3" height="15" fill="rgb(247,190,52)"/><text x="466.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1556" width="3" height="15" fill="rgb(208,63,10)"/><text x="466.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1572" width="3" height="15" fill="rgb(211,213,4)"/><text x="466.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1588" width="3" height="15" fill="rgb(241,6,5)"/><text x="466.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1604" width="3" height="15" fill="rgb(215,182,41)"/><text x="466.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1620" width="3" height="15" fill="rgb(233,124,7)"/><text x="466.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.23%)</title><rect x="463" y="1636" width="3" height="15" fill="rgb(241,114,6)"/><text x="466.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="463" y="1652" width="3" height="15" fill="rgb(237,88,43)"/><text x="466.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1668" width="3" height="15" fill="rgb(241,205,46)"/><text x="466.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1684" width="3" height="15" fill="rgb(251,165,25)"/><text x="466.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1700" width="3" height="15" fill="rgb(218,174,22)"/><text x="466.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1716" width="3" height="15" fill="rgb(238,55,36)"/><text x="466.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1732" width="3" height="15" fill="rgb(205,206,44)"/><text x="466.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1748" width="3" height="15" fill="rgb(251,0,24)"/><text x="466.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.23%)</title><rect x="463" y="1764" width="3" height="15" fill="rgb(212,123,17)"/><text x="466.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1780" width="3" height="15" fill="rgb(224,89,40)"/><text x="466.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1796" width="3" height="15" fill="rgb(234,72,20)"/><text x="466.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1812" width="3" height="15" fill="rgb(244,213,17)"/><text x="466.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1828" width="3" height="15" fill="rgb(236,30,53)"/><text x="466.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1844" width="3" height="15" fill="rgb(209,96,48)"/><text x="466.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.23%)</title><rect x="463" y="1860" width="3" height="15" fill="rgb(223,130,32)"/><text x="466.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="463" y="1876" width="3" height="15" fill="rgb(215,88,49)"/><text x="466.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="463" y="1892" width="3" height="15" fill="rgb(210,223,41)"/><text x="466.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="463" y="1908" width="3" height="15" fill="rgb(228,34,8)"/><text x="466.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="463" y="1924" width="3" height="15" fill="rgb(232,10,14)"/><text x="466.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="463" y="1940" width="3" height="15" fill="rgb(225,127,33)"/><text x="466.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.23%)</title><rect x="463" y="1956" width="3" height="15" fill="rgb(215,131,13)"/><text x="466.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6537) (1 samples, 0.23%)</title><rect x="463" y="1972" width="3" height="15" fill="rgb(246,90,35)"/><text x="466.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py:3154) (1 samples, 0.23%)</title><rect x="463" y="1988" width="3" height="15" fill="rgb(221,90,4)"/><text x="466.00" y="1998.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.23%)</title><rect x="463" y="2004" width="3" height="15" fill="rgb(216,19,45)"/><text x="466.00" y="2014.50"></text></g><g><title>__str__ (pyparsing.py:3224) (1 samples, 0.23%)</title><rect x="463" y="2020" width="3" height="15" fill="rgb(213,141,9)"/><text x="466.00" y="2030.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 0.93%)</title><rect x="457" y="532" width="11" height="15" fill="rgb(249,39,1)"/><text x="460.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="457" y="548" width="11" height="15" fill="rgb(251,62,10)"/><text x="460.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="457" y="564" width="11" height="15" fill="rgb(213,198,33)"/><text x="460.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="457" y="580" width="11" height="15" fill="rgb(224,71,54)"/><text x="460.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="457" y="596" width="11" height="15" fill="rgb(232,111,53)"/><text x="460.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="457" y="612" width="11" height="15" fill="rgb(247,223,19)"/><text x="460.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.69%)</title><rect x="460" y="628" width="8" height="15" fill="rgb(218,49,14)"/><text x="463.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.69%)</title><rect x="460" y="644" width="8" height="15" fill="rgb(241,4,51)"/><text x="463.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.69%)</title><rect x="460" y="660" width="8" height="15" fill="rgb(226,36,30)"/><text x="463.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.69%)</title><rect x="460" y="676" width="8" height="15" fill="rgb(243,191,48)"/><text x="463.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.69%)</title><rect x="460" y="692" width="8" height="15" fill="rgb(245,18,52)"/><text x="463.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.69%)</title><rect x="460" y="708" width="8" height="15" fill="rgb(211,10,1)"/><text x="463.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.69%)</title><rect x="460" y="724" width="8" height="15" fill="rgb(224,69,32)"/><text x="463.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.69%)</title><rect x="460" y="740" width="8" height="15" fill="rgb(247,149,17)"/><text x="463.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.69%)</title><rect x="460" y="756" width="8" height="15" fill="rgb(243,190,34)"/><text x="463.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.69%)</title><rect x="460" y="772" width="8" height="15" fill="rgb(242,56,9)"/><text x="463.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.69%)</title><rect x="460" y="788" width="8" height="15" fill="rgb(253,112,16)"/><text x="463.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.69%)</title><rect x="460" y="804" width="8" height="15" fill="rgb(209,58,17)"/><text x="463.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.69%)</title><rect x="460" y="820" width="8" height="15" fill="rgb(249,165,21)"/><text x="463.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.69%)</title><rect x="460" y="836" width="8" height="15" fill="rgb(237,158,53)"/><text x="463.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.69%)</title><rect x="460" y="852" width="8" height="15" fill="rgb(205,88,25)"/><text x="463.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.69%)</title><rect x="460" y="868" width="8" height="15" fill="rgb(227,81,3)"/><text x="463.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.69%)</title><rect x="460" y="884" width="8" height="15" fill="rgb(210,116,14)"/><text x="463.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.69%)</title><rect x="460" y="900" width="8" height="15" fill="rgb(247,75,23)"/><text x="463.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.69%)</title><rect x="460" y="916" width="8" height="15" fill="rgb(249,71,13)"/><text x="463.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.69%)</title><rect x="460" y="932" width="8" height="15" fill="rgb(211,129,31)"/><text x="463.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.69%)</title><rect x="460" y="948" width="8" height="15" fill="rgb(221,3,39)"/><text x="463.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.69%)</title><rect x="460" y="964" width="8" height="15" fill="rgb(208,169,33)"/><text x="463.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.69%)</title><rect x="460" y="980" width="8" height="15" fill="rgb(229,166,48)"/><text x="463.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.69%)</title><rect x="460" y="996" width="8" height="15" fill="rgb(230,148,31)"/><text x="463.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.23%)</title><rect x="466" y="1012" width="2" height="15" fill="rgb(216,19,49)"/><text x="469.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="466" y="1028" width="2" height="15" fill="rgb(225,221,42)"/><text x="469.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="466" y="1044" width="2" height="15" fill="rgb(249,86,50)"/><text x="469.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="466" y="1060" width="2" height="15" fill="rgb(230,13,53)"/><text x="469.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="466" y="1076" width="2" height="15" fill="rgb(241,75,12)"/><text x="469.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="466" y="1092" width="2" height="15" fill="rgb(217,39,22)"/><text x="469.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.23%)</title><rect x="466" y="1108" width="2" height="15" fill="rgb(218,187,32)"/><text x="469.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="466" y="1124" width="2" height="15" fill="rgb(221,102,34)"/><text x="469.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="466" y="1140" width="2" height="15" fill="rgb(205,124,38)"/><text x="469.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="466" y="1156" width="2" height="15" fill="rgb(225,181,34)"/><text x="469.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="466" y="1172" width="2" height="15" fill="rgb(247,208,50)"/><text x="469.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="466" y="1188" width="2" height="15" fill="rgb(230,20,18)"/><text x="469.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.23%)</title><rect x="466" y="1204" width="2" height="15" fill="rgb(229,202,51)"/><text x="469.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="466" y="1220" width="2" height="15" fill="rgb(250,0,4)"/><text x="469.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="466" y="1236" width="2" height="15" fill="rgb(247,213,35)"/><text x="469.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="466" y="1252" width="2" height="15" fill="rgb(239,191,4)"/><text x="469.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="466" y="1268" width="2" height="15" fill="rgb(249,77,6)"/><text x="469.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="466" y="1284" width="2" height="15" fill="rgb(225,65,18)"/><text x="469.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.23%)</title><rect x="466" y="1300" width="2" height="15" fill="rgb(253,16,20)"/><text x="469.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="466" y="1316" width="2" height="15" fill="rgb(222,96,54)"/><text x="469.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="466" y="1332" width="2" height="15" fill="rgb(248,21,3)"/><text x="469.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="466" y="1348" width="2" height="15" fill="rgb(254,130,41)"/><text x="469.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="466" y="1364" width="2" height="15" fill="rgb(252,146,48)"/><text x="469.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="466" y="1380" width="2" height="15" fill="rgb(250,223,5)"/><text x="469.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="466" y="1396" width="2" height="15" fill="rgb(254,98,27)"/><text x="469.00" y="1406.50"></text></g><g><title>0x7f2aae9dcdf3 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="466" y="1412" width="2" height="15" fill="rgb(236,34,21)"/><text x="469.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 1.16%)</title><rect x="457" y="436" width="14" height="15" fill="rgb(226,50,35)"/><text x="460.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.16%)</title><rect x="457" y="452" width="14" height="15" fill="rgb(234,216,33)"/><text x="460.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.16%)</title><rect x="457" y="468" width="14" height="15" fill="rgb(247,33,22)"/><text x="460.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.16%)</title><rect x="457" y="484" width="14" height="15" fill="rgb(205,65,51)"/><text x="460.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.16%)</title><rect x="457" y="500" width="14" height="15" fill="rgb(227,192,44)"/><text x="460.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.16%)</title><rect x="457" y="516" width="14" height="15" fill="rgb(240,220,4)"/><text x="460.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.23%)</title><rect x="468" y="532" width="3" height="15" fill="rgb(253,60,36)"/><text x="471.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="548" width="3" height="15" fill="rgb(210,13,31)"/><text x="471.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="564" width="3" height="15" fill="rgb(242,206,22)"/><text x="471.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="580" width="3" height="15" fill="rgb(221,107,25)"/><text x="471.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="596" width="3" height="15" fill="rgb(250,88,20)"/><text x="471.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="612" width="3" height="15" fill="rgb(222,214,48)"/><text x="471.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:11) (1 samples, 0.23%)</title><rect x="468" y="628" width="3" height="15" fill="rgb(238,187,11)"/><text x="471.00" y="638.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.23%)</title><rect x="471" y="1572" width="3" height="15" fill="rgb(208,55,10)"/><text x="474.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.23%)</title><rect x="471" y="1588" width="3" height="15" fill="rgb(244,162,22)"/><text x="474.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.23%)</title><rect x="471" y="1604" width="3" height="15" fill="rgb(241,29,14)"/><text x="474.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.23%)</title><rect x="471" y="1620" width="3" height="15" fill="rgb(241,21,26)"/><text x="474.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.23%)</title><rect x="471" y="1636" width="3" height="15" fill="rgb(209,9,53)"/><text x="474.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.23%)</title><rect x="471" y="1652" width="3" height="15" fill="rgb(251,88,9)"/><text x="474.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="471" y="1668" width="3" height="15" fill="rgb(209,217,25)"/><text x="474.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:4) (18 samples, 4.17%)</title><rect x="427" y="52" width="50" height="15" fill="rgb(216,119,34)"/><text x="430.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 4.17%)</title><rect x="427" y="68" width="50" height="15" fill="rgb(220,18,16)"/><text x="430.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 4.17%)</title><rect x="427" y="84" width="50" height="15" fill="rgb(241,54,14)"/><text x="430.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 4.17%)</title><rect x="427" y="100" width="50" height="15" fill="rgb(225,6,18)"/><text x="430.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 4.17%)</title><rect x="427" y="116" width="50" height="15" fill="rgb(219,63,27)"/><text x="430.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 4.17%)</title><rect x="427" y="132" width="50" height="15" fill="rgb(236,1,3)"/><text x="430.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:7) (8 samples, 1.85%)</title><rect x="455" y="148" width="22" height="15" fill="rgb(210,49,25)"/><text x="458.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.85%)</title><rect x="455" y="164" width="22" height="15" fill="rgb(239,48,49)"/><text x="458.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.85%)</title><rect x="455" y="180" width="22" height="15" fill="rgb(234,128,35)"/><text x="458.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.85%)</title><rect x="455" y="196" width="22" height="15" fill="rgb(234,71,14)"/><text x="458.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.85%)</title><rect x="455" y="212" width="22" height="15" fill="rgb(224,212,49)"/><text x="458.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.85%)</title><rect x="455" y="228" width="22" height="15" fill="rgb(249,134,24)"/><text x="458.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.62%)</title><rect x="457" y="244" width="20" height="15" fill="rgb(224,220,45)"/><text x="460.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="457" y="260" width="20" height="15" fill="rgb(241,98,32)"/><text x="460.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="457" y="276" width="20" height="15" fill="rgb(238,196,4)"/><text x="460.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="457" y="292" width="20" height="15" fill="rgb(211,218,12)"/><text x="460.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="457" y="308" width="20" height="15" fill="rgb(205,25,35)"/><text x="460.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="457" y="324" width="20" height="15" fill="rgb(248,36,46)"/><text x="460.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.62%)</title><rect x="457" y="340" width="20" height="15" fill="rgb(211,227,47)"/><text x="460.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="457" y="356" width="20" height="15" fill="rgb(246,199,3)"/><text x="460.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="457" y="372" width="20" height="15" fill="rgb(235,109,29)"/><text x="460.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="457" y="388" width="20" height="15" fill="rgb(245,14,45)"/><text x="460.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="457" y="404" width="20" height="15" fill="rgb(244,156,17)"/><text x="460.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="457" y="420" width="20" height="15" fill="rgb(223,185,14)"/><text x="460.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.46%)</title><rect x="471" y="436" width="6" height="15" fill="rgb(236,150,13)"/><text x="474.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="452" width="6" height="15" fill="rgb(247,165,41)"/><text x="474.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.46%)</title><rect x="471" y="468" width="6" height="15" fill="rgb(246,104,23)"/><text x="474.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="484" width="6" height="15" fill="rgb(231,180,46)"/><text x="474.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="500" width="6" height="15" fill="rgb(234,215,8)"/><text x="474.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="516" width="6" height="15" fill="rgb(215,26,27)"/><text x="474.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="532" width="6" height="15" fill="rgb(234,89,17)"/><text x="474.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="548" width="6" height="15" fill="rgb(226,180,48)"/><text x="474.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="564" width="6" height="15" fill="rgb(221,176,40)"/><text x="474.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.46%)</title><rect x="471" y="580" width="6" height="15" fill="rgb(215,212,45)"/><text x="474.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="596" width="6" height="15" fill="rgb(210,152,9)"/><text x="474.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="612" width="6" height="15" fill="rgb(236,13,31)"/><text x="474.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="628" width="6" height="15" fill="rgb(223,165,37)"/><text x="474.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="644" width="6" height="15" fill="rgb(241,55,50)"/><text x="474.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="660" width="6" height="15" fill="rgb(228,223,20)"/><text x="474.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.46%)</title><rect x="471" y="676" width="6" height="15" fill="rgb(217,157,20)"/><text x="474.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="692" width="6" height="15" fill="rgb(232,190,10)"/><text x="474.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="708" width="6" height="15" fill="rgb(226,27,30)"/><text x="474.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="724" width="6" height="15" fill="rgb(220,207,44)"/><text x="474.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="740" width="6" height="15" fill="rgb(221,157,14)"/><text x="474.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="756" width="6" height="15" fill="rgb(227,113,41)"/><text x="474.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.46%)</title><rect x="471" y="772" width="6" height="15" fill="rgb(215,118,30)"/><text x="474.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="788" width="6" height="15" fill="rgb(218,57,37)"/><text x="474.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="804" width="6" height="15" fill="rgb(211,178,51)"/><text x="474.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="820" width="6" height="15" fill="rgb(208,46,5)"/><text x="474.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="836" width="6" height="15" fill="rgb(218,157,35)"/><text x="474.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="852" width="6" height="15" fill="rgb(253,27,14)"/><text x="474.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.46%)</title><rect x="471" y="868" width="6" height="15" fill="rgb(207,144,12)"/><text x="474.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="884" width="6" height="15" fill="rgb(214,171,24)"/><text x="474.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.46%)</title><rect x="471" y="900" width="6" height="15" fill="rgb(231,98,54)"/><text x="474.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="916" width="6" height="15" fill="rgb(211,28,28)"/><text x="474.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="932" width="6" height="15" fill="rgb(206,118,4)"/><text x="474.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="948" width="6" height="15" fill="rgb(214,170,50)"/><text x="474.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="964" width="6" height="15" fill="rgb(245,164,32)"/><text x="474.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="980" width="6" height="15" fill="rgb(216,63,14)"/><text x="474.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="996" width="6" height="15" fill="rgb(212,59,13)"/><text x="474.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.46%)</title><rect x="471" y="1012" width="6" height="15" fill="rgb(230,178,17)"/><text x="474.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="1028" width="6" height="15" fill="rgb(250,221,25)"/><text x="474.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="1044" width="6" height="15" fill="rgb(215,106,12)"/><text x="474.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="1060" width="6" height="15" fill="rgb(228,185,40)"/><text x="474.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="1076" width="6" height="15" fill="rgb(209,196,34)"/><text x="474.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="1092" width="6" height="15" fill="rgb(252,43,17)"/><text x="474.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.46%)</title><rect x="471" y="1108" width="6" height="15" fill="rgb(242,190,46)"/><text x="474.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.46%)</title><rect x="471" y="1124" width="6" height="15" fill="rgb(216,67,12)"/><text x="474.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="1140" width="6" height="15" fill="rgb(207,91,16)"/><text x="474.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="1156" width="6" height="15" fill="rgb(206,30,39)"/><text x="474.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="1172" width="6" height="15" fill="rgb(218,170,51)"/><text x="474.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="1188" width="6" height="15" fill="rgb(247,212,15)"/><text x="474.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="1204" width="6" height="15" fill="rgb(221,30,37)"/><text x="474.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="1220" width="6" height="15" fill="rgb(207,160,23)"/><text x="474.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.46%)</title><rect x="471" y="1236" width="6" height="15" fill="rgb(236,113,43)"/><text x="474.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.46%)</title><rect x="471" y="1252" width="6" height="15" fill="rgb(250,199,26)"/><text x="474.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="1268" width="6" height="15" fill="rgb(207,227,23)"/><text x="474.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="1284" width="6" height="15" fill="rgb(229,167,49)"/><text x="474.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="1300" width="6" height="15" fill="rgb(215,163,12)"/><text x="474.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="1316" width="6" height="15" fill="rgb(252,119,37)"/><text x="474.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="1332" width="6" height="15" fill="rgb(214,26,11)"/><text x="474.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="1348" width="6" height="15" fill="rgb(240,8,19)"/><text x="474.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.46%)</title><rect x="471" y="1364" width="6" height="15" fill="rgb(212,130,36)"/><text x="474.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="471" y="1380" width="6" height="15" fill="rgb(211,30,3)"/><text x="474.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="471" y="1396" width="6" height="15" fill="rgb(237,212,10)"/><text x="474.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="471" y="1412" width="6" height="15" fill="rgb(217,24,41)"/><text x="474.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="471" y="1428" width="6" height="15" fill="rgb(217,228,38)"/><text x="474.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="471" y="1444" width="6" height="15" fill="rgb(234,152,11)"/><text x="474.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.46%)</title><rect x="471" y="1460" width="6" height="15" fill="rgb(213,194,34)"/><text x="474.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.46%)</title><rect x="471" y="1476" width="6" height="15" fill="rgb(254,78,38)"/><text x="474.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.46%)</title><rect x="471" y="1492" width="6" height="15" fill="rgb(239,42,31)"/><text x="474.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.46%)</title><rect x="471" y="1508" width="6" height="15" fill="rgb(231,119,27)"/><text x="474.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.46%)</title><rect x="471" y="1524" width="6" height="15" fill="rgb(230,190,18)"/><text x="474.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.46%)</title><rect x="471" y="1540" width="6" height="15" fill="rgb(215,184,1)"/><text x="474.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.46%)</title><rect x="471" y="1556" width="6" height="15" fill="rgb(213,74,19)"/><text x="474.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:61) (1 samples, 0.23%)</title><rect x="474" y="1572" width="3" height="15" fill="rgb(211,47,39)"/><text x="477.00" y="1582.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:28) (1 samples, 0.23%)</title><rect x="477" y="84" width="2" height="15" fill="rgb(249,151,16)"/><text x="480.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.23%)</title><rect x="477" y="100" width="2" height="15" fill="rgb(240,93,17)"/><text x="480.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:255) (1 samples, 0.23%)</title><rect x="477" y="116" width="2" height="15" fill="rgb(247,67,33)"/><text x="480.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.23%)</title><rect x="477" y="132" width="2" height="15" fill="rgb(245,32,38)"/><text x="480.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.23%)</title><rect x="477" y="148" width="2" height="15" fill="rgb(215,159,45)"/><text x="480.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.23%)</title><rect x="477" y="164" width="2" height="15" fill="rgb(220,76,50)"/><text x="480.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.23%)</title><rect x="477" y="180" width="2" height="15" fill="rgb(247,34,43)"/><text x="480.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.23%)</title><rect x="477" y="196" width="2" height="15" fill="rgb(205,88,14)"/><text x="480.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="477" y="212" width="2" height="15" fill="rgb(252,208,46)"/><text x="480.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="477" y="228" width="2" height="15" fill="rgb(207,145,49)"/><text x="480.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="477" y="244" width="2" height="15" fill="rgb(236,104,1)"/><text x="480.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="477" y="260" width="2" height="15" fill="rgb(244,116,48)"/><text x="480.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="477" y="276" width="2" height="15" fill="rgb(250,14,1)"/><text x="480.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.23%)</title><rect x="477" y="292" width="2" height="15" fill="rgb(215,69,5)"/><text x="480.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="477" y="308" width="2" height="15" fill="rgb(249,74,51)"/><text x="480.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="477" y="324" width="2" height="15" fill="rgb(245,195,30)"/><text x="480.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="477" y="340" width="2" height="15" fill="rgb(205,15,29)"/><text x="480.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="477" y="356" width="2" height="15" fill="rgb(238,61,27)"/><text x="480.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="477" y="372" width="2" height="15" fill="rgb(230,98,36)"/><text x="480.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.23%)</title><rect x="477" y="388" width="2" height="15" fill="rgb(221,73,5)"/><text x="480.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="477" y="404" width="2" height="15" fill="rgb(231,166,54)"/><text x="480.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="477" y="420" width="2" height="15" fill="rgb(218,45,45)"/><text x="480.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="477" y="436" width="2" height="15" fill="rgb(242,97,8)"/><text x="480.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="477" y="452" width="2" height="15" fill="rgb(209,80,10)"/><text x="480.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="477" y="468" width="2" height="15" fill="rgb(215,217,19)"/><text x="480.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.23%)</title><rect x="477" y="484" width="2" height="15" fill="rgb(245,215,33)"/><text x="480.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.23%)</title><rect x="477" y="500" width="2" height="15" fill="rgb(205,97,38)"/><text x="480.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.23%)</title><rect x="477" y="516" width="2" height="15" fill="rgb(205,19,21)"/><text x="480.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.23%)</title><rect x="477" y="532" width="2" height="15" fill="rgb(212,46,31)"/><text x="480.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.23%)</title><rect x="477" y="548" width="2" height="15" fill="rgb(209,191,28)"/><text x="480.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.23%)</title><rect x="477" y="564" width="2" height="15" fill="rgb(216,47,8)"/><text x="480.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.23%)</title><rect x="477" y="580" width="2" height="15" fill="rgb(246,164,15)"/><text x="480.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.23%)</title><rect x="477" y="596" width="2" height="15" fill="rgb(235,44,22)"/><text x="480.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.23%)</title><rect x="477" y="612" width="2" height="15" fill="rgb(212,17,49)"/><text x="480.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.23%)</title><rect x="477" y="628" width="2" height="15" fill="rgb(211,67,30)"/><text x="480.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.23%)</title><rect x="477" y="644" width="2" height="15" fill="rgb(220,65,28)"/><text x="480.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:881) (1 samples, 0.23%)</title><rect x="477" y="660" width="2" height="15" fill="rgb(253,64,10)"/><text x="480.00" y="670.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:18) (1 samples, 0.23%)</title><rect x="479" y="100" width="3" height="15" fill="rgb(252,180,31)"/><text x="482.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.23%)</title><rect x="479" y="116" width="3" height="15" fill="rgb(212,118,10)"/><text x="482.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (1 samples, 0.23%)</title><rect x="479" y="132" width="3" height="15" fill="rgb(249,115,49)"/><text x="482.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.23%)</title><rect x="479" y="148" width="3" height="15" fill="rgb(253,212,21)"/><text x="482.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.23%)</title><rect x="479" y="164" width="3" height="15" fill="rgb(208,122,54)"/><text x="482.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.23%)</title><rect x="479" y="180" width="3" height="15" fill="rgb(228,41,25)"/><text x="482.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.23%)</title><rect x="479" y="196" width="3" height="15" fill="rgb(244,104,29)"/><text x="482.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.23%)</title><rect x="479" y="212" width="3" height="15" fill="rgb(242,105,43)"/><text x="482.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (1 samples, 0.23%)</title><rect x="479" y="228" width="3" height="15" fill="rgb(222,111,12)"/><text x="482.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="479" y="244" width="3" height="15" fill="rgb(207,93,25)"/><text x="482.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="479" y="260" width="3" height="15" fill="rgb(232,160,43)"/><text x="482.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.23%)</title><rect x="479" y="276" width="3" height="15" fill="rgb(220,64,20)"/><text x="482.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.23%)</title><rect x="479" y="292" width="3" height="15" fill="rgb(234,51,29)"/><text x="482.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.23%)</title><rect x="479" y="308" width="3" height="15" fill="rgb(211,10,13)"/><text x="482.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.23%)</title><rect x="479" y="324" width="3" height="15" fill="rgb(208,24,44)"/><text x="482.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.23%)</title><rect x="479" y="340" width="3" height="15" fill="rgb(226,65,4)"/><text x="482.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="485" y="116" width="3" height="15" fill="rgb(225,10,22)"/><text x="488.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="485" y="132" width="3" height="15" fill="rgb(217,226,21)"/><text x="488.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.23%)</title><rect x="485" y="148" width="3" height="15" fill="rgb(250,208,0)"/><text x="488.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.46%)</title><rect x="496" y="148" width="5" height="15" fill="rgb(246,178,49)"/><text x="499.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.23%)</title><rect x="509" y="164" width="3" height="15" fill="rgb(242,54,20)"/><text x="512.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.23%)</title><rect x="512" y="164" width="3" height="15" fill="rgb(213,3,49)"/><text x="515.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:448) (1 samples, 0.23%)</title><rect x="515" y="164" width="3" height="15" fill="rgb(247,112,32)"/><text x="518.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.69%)</title><rect x="523" y="180" width="8" height="15" fill="rgb(206,177,36)"/><text x="526.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.23%)</title><rect x="548" y="372" width="2" height="15" fill="rgb(207,91,27)"/><text x="551.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:166) (1 samples, 0.23%)</title><rect x="548" y="388" width="2" height="15" fill="rgb(224,166,11)"/><text x="551.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.23%)</title><rect x="550" y="372" width="3" height="15" fill="rgb(254,62,28)"/><text x="553.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.23%)</title><rect x="550" y="388" width="3" height="15" fill="rgb(240,154,30)"/><text x="553.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (4 samples, 0.93%)</title><rect x="548" y="324" width="11" height="15" fill="rgb(244,171,24)"/><text x="551.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (4 samples, 0.93%)</title><rect x="548" y="340" width="11" height="15" fill="rgb(232,1,21)"/><text x="551.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (4 samples, 0.93%)</title><rect x="548" y="356" width="11" height="15" fill="rgb(242,124,35)"/><text x="551.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.46%)</title><rect x="553" y="372" width="6" height="15" fill="rgb(209,33,49)"/><text x="556.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.46%)</title><rect x="553" y="388" width="6" height="15" fill="rgb(222,188,34)"/><text x="556.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.46%)</title><rect x="553" y="404" width="6" height="15" fill="rgb(254,43,8)"/><text x="556.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.46%)</title><rect x="553" y="420" width="6" height="15" fill="rgb(216,160,47)"/><text x="556.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.46%)</title><rect x="553" y="436" width="6" height="15" fill="rgb(206,146,42)"/><text x="556.00" y="446.50"></text></g><g><title>0x7f2aae8ffd92 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="556" y="452" width="3" height="15" fill="rgb(238,204,46)"/><text x="559.00" y="462.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="559" y="372" width="2" height="15" fill="rgb(225,215,17)"/><text x="562.00" y="382.50"></text></g><g><title>0x7f2aabe4a7e0 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="559" y="388" width="2" height="15" fill="rgb(209,131,36)"/><text x="562.00" y="398.50"></text></g><g><title>blas_memory_free (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="561" y="372" width="3" height="15" fill="rgb(237,59,50)"/><text x="564.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="561" y="388" width="3" height="15" fill="rgb(242,145,26)"/><text x="564.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 2.31%)</title><rect x="548" y="276" width="27" height="15" fill="rgb(249,82,28)"/><text x="551.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (10 samples, 2.31%)</title><rect x="548" y="292" width="27" height="15" fill="rgb(233,112,20)"/><text x="551.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (10 samples, 2.31%)</title><rect x="548" y="308" width="27" height="15" fill="rgb(240,0,3)"/><text x="551.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (6 samples, 1.39%)</title><rect x="559" y="324" width="16" height="15" fill="rgb(208,178,50)"/><text x="562.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (6 samples, 1.39%)</title><rect x="559" y="340" width="16" height="15" fill="rgb(229,106,29)"/><text x="562.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.39%)</title><rect x="559" y="356" width="16" height="15" fill="rgb(207,134,38)"/><text x="562.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.93%)</title><rect x="564" y="372" width="11" height="15" fill="rgb(242,224,4)"/><text x="567.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="572" y="388" width="3" height="15" fill="rgb(219,114,47)"/><text x="575.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.16%)</title><rect x="575" y="276" width="14" height="15" fill="rgb(231,75,40)"/><text x="578.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (31 samples, 7.18%)</title><rect x="539" y="228" width="85" height="15" fill="rgb(208,152,43)"/><text x="542.00" y="238.50">_run (mlpr..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (31 samples, 7.18%)</title><rect x="539" y="244" width="85" height="15" fill="rgb(234,216,44)"/><text x="542.00" y="254.50">numpy_dot_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (29 samples, 6.71%)</title><rect x="545" y="260" width="79" height="15" fill="rgb(247,150,42)"/><text x="548.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 3.01%)</title><rect x="589" y="276" width="35" height="15" fill="rgb(227,25,16)"/><text x="592.00" y="286.50">sg..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.23%)</title><rect x="627" y="244" width="3" height="15" fill="rgb(237,102,40)"/><text x="630.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="627" y="260" width="3" height="15" fill="rgb(208,7,52)"/><text x="630.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.23%)</title><rect x="627" y="276" width="3" height="15" fill="rgb(227,211,12)"/><text x="630.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.23%)</title><rect x="627" y="292" width="3" height="15" fill="rgb(252,108,17)"/><text x="630.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.23%)</title><rect x="630" y="276" width="2" height="15" fill="rgb(230,207,43)"/><text x="633.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.23%)</title><rect x="630" y="292" width="2" height="15" fill="rgb(252,97,40)"/><text x="633.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.46%)</title><rect x="630" y="260" width="5" height="15" fill="rgb(209,206,48)"/><text x="633.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.23%)</title><rect x="632" y="276" width="3" height="15" fill="rgb(240,3,42)"/><text x="635.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.23%)</title><rect x="635" y="292" width="3" height="15" fill="rgb(217,144,12)"/><text x="638.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.23%)</title><rect x="635" y="308" width="3" height="15" fill="rgb(250,64,4)"/><text x="638.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2757) (1 samples, 0.23%)</title><rect x="635" y="324" width="3" height="15" fill="rgb(228,108,41)"/><text x="638.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.46%)</title><rect x="638" y="340" width="5" height="15" fill="rgb(242,153,39)"/><text x="641.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.46%)</title><rect x="643" y="340" width="6" height="15" fill="rgb(222,121,8)"/><text x="646.00" y="350.50"></text></g><g><title>0x7f2aae91ed97 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="649" y="356" width="2" height="15" fill="rgb(239,64,46)"/><text x="652.00" y="366.50"></text></g><g><title>0x7f2aae91edae (libc-2.29.so) (1 samples, 0.23%)</title><rect x="651" y="356" width="3" height="15" fill="rgb(240,129,52)"/><text x="654.00" y="366.50"></text></g><g><title>0x7f2aae91edbe (libc-2.29.so) (2 samples, 0.46%)</title><rect x="654" y="356" width="6" height="15" fill="rgb(219,15,6)"/><text x="657.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (6 samples, 1.39%)</title><rect x="649" y="340" width="16" height="15" fill="rgb(238,33,19)"/><text x="652.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (2 samples, 0.46%)</title><rect x="660" y="356" width="5" height="15" fill="rgb(239,209,13)"/><text x="663.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (13 samples, 3.01%)</title><rect x="638" y="292" width="35" height="15" fill="rgb(247,14,25)"/><text x="641.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (13 samples, 3.01%)</title><rect x="638" y="308" width="35" height="15" fill="rgb(234,159,47)"/><text x="641.00" y="318.50">Np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (13 samples, 3.01%)</title><rect x="638" y="324" width="35" height="15" fill="rgb(219,19,24)"/><text x="641.00" y="334.50">np..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (3 samples, 0.69%)</title><rect x="665" y="340" width="8" height="15" fill="rgb(245,165,14)"/><text x="668.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.23%)</title><rect x="673" y="292" width="3" height="15" fill="rgb(225,79,52)"/><text x="676.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.23%)</title><rect x="673" y="308" width="3" height="15" fill="rgb(246,201,9)"/><text x="676.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.23%)</title><rect x="673" y="324" width="3" height="15" fill="rgb(209,88,16)"/><text x="676.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.23%)</title><rect x="673" y="340" width="3" height="15" fill="rgb(248,152,50)"/><text x="676.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.23%)</title><rect x="673" y="356" width="3" height="15" fill="rgb(227,85,17)"/><text x="676.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (20 samples, 4.63%)</title><rect x="624" y="228" width="55" height="15" fill="rgb(237,99,5)"/><text x="627.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 4.17%)</title><rect x="630" y="244" width="49" height="15" fill="rgb(235,117,54)"/><text x="633.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 3.70%)</title><rect x="635" y="260" width="44" height="15" fill="rgb(237,87,10)"/><text x="638.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (16 samples, 3.70%)</title><rect x="635" y="276" width="44" height="15" fill="rgb(209,57,5)"/><text x="638.00" y="286.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.23%)</title><rect x="676" y="292" width="3" height="15" fill="rgb(249,186,51)"/><text x="679.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.23%)</title><rect x="676" y="308" width="3" height="15" fill="rgb(238,37,41)"/><text x="679.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="676" y="324" width="3" height="15" fill="rgb(242,88,1)"/><text x="679.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.23%)</title><rect x="679" y="228" width="2" height="15" fill="rgb(224,194,9)"/><text x="682.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.23%)</title><rect x="681" y="228" width="3" height="15" fill="rgb(234,200,28)"/><text x="684.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:5) (1 samples, 0.23%)</title><rect x="687" y="244" width="3" height="15" fill="rgb(240,50,2)"/><text x="690.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.23%)</title><rect x="698" y="292" width="3" height="15" fill="rgb(224,152,0)"/><text x="701.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.23%)</title><rect x="701" y="308" width="2" height="15" fill="rgb(238,88,35)"/><text x="704.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.23%)</title><rect x="703" y="324" width="3" height="15" fill="rgb(228,153,40)"/><text x="706.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="703" y="340" width="3" height="15" fill="rgb(229,78,10)"/><text x="706.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.23%)</title><rect x="703" y="356" width="3" height="15" fill="rgb(254,193,51)"/><text x="706.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.23%)</title><rect x="703" y="372" width="3" height="15" fill="rgb(218,145,35)"/><text x="706.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.23%)</title><rect x="703" y="388" width="3" height="15" fill="rgb(249,172,53)"/><text x="706.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.23%)</title><rect x="703" y="404" width="3" height="15" fill="rgb(251,73,3)"/><text x="706.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="703" y="420" width="3" height="15" fill="rgb(213,83,32)"/><text x="706.00" y="430.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.23%)</title><rect x="709" y="340" width="2" height="15" fill="rgb(224,150,42)"/><text x="712.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (3 samples, 0.69%)</title><rect x="711" y="340" width="9" height="15" fill="rgb(230,184,30)"/><text x="714.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (7 samples, 1.62%)</title><rect x="706" y="324" width="19" height="15" fill="rgb(233,16,25)"/><text x="709.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (2 samples, 0.46%)</title><rect x="720" y="340" width="5" height="15" fill="rgb(227,178,18)"/><text x="723.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (2 samples, 0.46%)</title><rect x="725" y="324" width="6" height="15" fill="rgb(217,215,47)"/><text x="728.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (74 samples, 17.13%)</title><rect x="531" y="196" width="202" height="15" fill="rgb(243,143,20)"/><text x="534.00" y="206.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (73 samples, 16.90%)</title><rect x="534" y="212" width="199" height="15" fill="rgb(236,106,12)"/><text x="537.00" y="222.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (18 samples, 4.17%)</title><rect x="684" y="228" width="49" height="15" fill="rgb(218,59,3)"/><text x="687.00" y="238.50">_run..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (16 samples, 3.70%)</title><rect x="690" y="244" width="43" height="15" fill="rgb(208,200,7)"/><text x="693.00" y="254.50">argm..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 3.70%)</title><rect x="690" y="260" width="43" height="15" fill="rgb(234,221,23)"/><text x="693.00" y="270.50">arra..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (15 samples, 3.47%)</title><rect x="692" y="276" width="41" height="15" fill="rgb(234,69,35)"/><text x="695.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (12 samples, 2.78%)</title><rect x="701" y="292" width="32" height="15" fill="rgb(237,167,33)"/><text x="704.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c:302) (11 samples, 2.55%)</title><rect x="703" y="308" width="30" height="15" fill="rgb(219,187,26)"/><text x="706.00" y="318.50">ar..</text></g><g><title>PyArray_ArgMax (calculation.c:133) (1 samples, 0.23%)</title><rect x="731" y="324" width="2" height="15" fill="rgb(216,131,19)"/><text x="734.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (77 samples, 17.82%)</title><rect x="531" y="180" width="211" height="15" fill="rgb(252,29,18)"/><text x="534.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 0.69%)</title><rect x="733" y="196" width="9" height="15" fill="rgb(225,213,48)"/><text x="736.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.23%)</title><rect x="739" y="212" width="3" height="15" fill="rgb(232,28,15)"/><text x="742.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.23%)</title><rect x="739" y="228" width="3" height="15" fill="rgb(247,181,26)"/><text x="742.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.23%)</title><rect x="742" y="180" width="2" height="15" fill="rgb(226,67,27)"/><text x="745.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.46%)</title><rect x="744" y="180" width="6" height="15" fill="rgb(246,188,6)"/><text x="747.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (94 samples, 21.76%)</title><rect x="496" y="132" width="256" height="15" fill="rgb(225,112,12)"/><text x="499.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (92 samples, 21.30%)</title><rect x="501" y="148" width="251" height="15" fill="rgb(209,202,19)"/><text x="504.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (86 samples, 19.91%)</title><rect x="518" y="164" width="234" height="15" fill="rgb(209,192,0)"/><text x="521.00" y="174.50">_run_sequence_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.23%)</title><rect x="750" y="180" width="2" height="15" fill="rgb(226,10,43)"/><text x="753.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:45) (102 samples, 23.61%)</title><rect x="477" y="52" width="278" height="15" fill="rgb(250,184,20)"/><text x="480.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_li..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:44) (102 samples, 23.61%)</title><rect x="477" y="68" width="278" height="15" fill="rgb(206,13,4)"/><text x="480.00" y="78.50">profile_pyrt (bench_LogisticRegressio..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:29) (101 samples, 23.38%)</title><rect x="479" y="84" width="276" height="15" fill="rgb(250,56,46)"/><text x="482.00" y="94.50">setup_profile (bench_LogisticRegress..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:23) (100 samples, 23.15%)</title><rect x="482" y="100" width="273" height="15" fill="rgb(241,162,21)"/><text x="485.00" y="110.50">profile (bench_LogisticRegression_li..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (98 samples, 22.69%)</title><rect x="488" y="116" width="267" height="15" fill="rgb(208,120,5)"/><text x="491.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.23%)</title><rect x="752" y="132" width="3" height="15" fill="rgb(218,95,2)"/><text x="755.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.23%)</title><rect x="772" y="196" width="2" height="15" fill="rgb(235,188,26)"/><text x="775.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 1.16%)</title><rect x="774" y="196" width="14" height="15" fill="rgb(236,174,25)"/><text x="777.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.16%)</title><rect x="774" y="212" width="14" height="15" fill="rgb(245,45,50)"/><text x="777.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="785" y="228" width="3" height="15" fill="rgb(240,29,13)"/><text x="788.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="785" y="244" width="3" height="15" fill="rgb(240,80,8)"/><text x="788.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="785" y="260" width="3" height="15" fill="rgb(253,175,29)"/><text x="788.00" y="270.50"></text></g><g><title>0x7f2a6e96eff9 (?) (1 samples, 0.23%)</title><rect x="793" y="212" width="3" height="15" fill="rgb(212,118,18)"/><text x="796.00" y="222.50"></text></g><g><title>0x7f2a6e969ef6 (?) (1 samples, 0.23%)</title><rect x="793" y="228" width="3" height="15" fill="rgb(215,76,6)"/><text x="796.00" y="238.50"></text></g><g><title>0x7f2a6e95e962 (?) (1 samples, 0.23%)</title><rect x="793" y="244" width="3" height="15" fill="rgb(246,48,50)"/><text x="796.00" y="254.50"></text></g><g><title>0x7f2a6e9927a7 (?) (1 samples, 0.23%)</title><rect x="793" y="260" width="3" height="15" fill="rgb(247,22,4)"/><text x="796.00" y="270.50"></text></g><g><title>0x7f2a6e992379 (?) (1 samples, 0.23%)</title><rect x="793" y="276" width="3" height="15" fill="rgb(249,227,31)"/><text x="796.00" y="286.50"></text></g><g><title>0x7f2a6edf08b8 (?) (1 samples, 0.23%)</title><rect x="793" y="292" width="3" height="15" fill="rgb(245,196,30)"/><text x="796.00" y="302.50"></text></g><g><title>0x7f2a6edeec7f (?) (1 samples, 0.23%)</title><rect x="793" y="308" width="3" height="15" fill="rgb(253,219,10)"/><text x="796.00" y="318.50"></text></g><g><title>0x7f2a6ee0199c (?) (1 samples, 0.23%)</title><rect x="793" y="324" width="3" height="15" fill="rgb(208,102,16)"/><text x="796.00" y="334.50"></text></g><g><title>0x7f2a6eae6b26 (?) (1 samples, 0.23%)</title><rect x="793" y="340" width="3" height="15" fill="rgb(212,44,33)"/><text x="796.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="810" y="292" width="3" height="15" fill="rgb(224,77,40)"/><text x="813.00" y="302.50"></text></g><g><title>0x7f2aae8fe922 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="810" y="308" width="3" height="15" fill="rgb(213,33,50)"/><text x="813.00" y="318.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1102" y="356" width="6" height="15" fill="rgb(229,79,13)"/><text x="1105.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1102" y="372" width="6" height="15" fill="rgb(226,187,42)"/><text x="1105.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1102" y="388" width="6" height="15" fill="rgb(209,79,9)"/><text x="1105.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1102" y="404" width="6" height="15" fill="rgb(213,90,25)"/><text x="1105.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1102" y="420" width="6" height="15" fill="rgb(254,15,2)"/><text x="1105.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1102" y="436" width="6" height="15" fill="rgb(248,106,34)"/><text x="1105.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1102" y="452" width="6" height="15" fill="rgb(253,63,19)"/><text x="1105.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1105" y="468" width="3" height="15" fill="rgb(238,18,26)"/><text x="1108.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1105" y="484" width="3" height="15" fill="rgb(222,96,48)"/><text x="1108.00" y="494.50"></text></g><g><title>0x7f2a6e935850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1127" y="372" width="2" height="15" fill="rgb(237,105,7)"/><text x="1130.00" y="382.50"></text></g><g><title>0x7f2aae91ed50 (libc-2.29.so) (3 samples, 0.69%)</title><rect x="1129" y="372" width="9" height="15" fill="rgb(233,203,7)"/><text x="1132.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 28.01%)</title><rect x="813" y="292" width="330" height="15" fill="rgb(227,0,31)"/><text x="816.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 28.01%)</title><rect x="813" y="308" width="330" height="15" fill="rgb(235,190,14)"/><text x="816.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 28.01%)</title><rect x="813" y="324" width="330" height="15" fill="rgb(241,135,24)"/><text x="816.00" y="334.50">onnxruntime::SequentialExecutor::Execute (on..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 27.55%)</title><rect x="818" y="340" width="325" height="15" fill="rgb(212,90,40)"/><text x="821.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::C..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.01%)</title><rect x="1108" y="356" width="35" height="15" fill="rgb(229,209,38)"/><text x="1111.00" y="366.50">on..</text></g><g><title>0x7f2aae91ed97 (libc-2.29.so) (2 samples, 0.46%)</title><rect x="1138" y="372" width="5" height="15" fill="rgb(217,126,43)"/><text x="1141.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (123 samples, 28.47%)</title><rect x="810" y="276" width="336" height="15" fill="rgb(233,218,9)"/><text x="813.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1143" y="292" width="3" height="15" fill="rgb(240,28,50)"/><text x="1146.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1143" y="308" width="3" height="15" fill="rgb(231,137,48)"/><text x="1146.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 28.70%)</title><rect x="810" y="260" width="339" height="15" fill="rgb(211,88,44)"/><text x="813.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1146" y="276" width="3" height="15" fill="rgb(229,65,2)"/><text x="1149.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1146" y="292" width="3" height="15" fill="rgb(240,216,39)"/><text x="1149.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1146" y="308" width="3" height="15" fill="rgb(246,23,29)"/><text x="1149.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1149" y="276" width="2" height="15" fill="rgb(214,62,52)"/><text x="1152.00" y="286.50"></text></g><g><title>0x7f2aae8febc0 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1149" y="292" width="2" height="15" fill="rgb(234,85,46)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7f2aae9dc151 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1151" y="292" width="3" height="15" fill="rgb(207,52,30)"/><text x="1154.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1149" y="260" width="8" height="15" fill="rgb(219,122,40)"/><text x="1152.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.46%)</title><rect x="1151" y="276" width="6" height="15" fill="rgb(249,49,41)"/><text x="1154.00" y="286.50"></text></g><g><title>0x7f2aae9dce65 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1154" y="292" width="3" height="15" fill="rgb(215,32,54)"/><text x="1157.00" y="302.50"></text></g><g><title>PyArray_New (ctors.c:1362) (2 samples, 0.46%)</title><rect x="1159" y="276" width="6" height="15" fill="rgb(225,129,50)"/><text x="1162.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (2 samples, 0.46%)</title><rect x="1159" y="292" width="6" height="15" fill="rgb(209,72,26)"/><text x="1162.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="1165" y="292" width="3" height="15" fill="rgb(212,116,49)"/><text x="1168.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="1165" y="308" width="3" height="15" fill="rgb(242,139,50)"/><text x="1168.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.23%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(224,88,15)"/><text x="1171.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.23%)</title><rect x="1168" y="308" width="2" height="15" fill="rgb(240,191,43)"/><text x="1171.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.23%)</title><rect x="1168" y="324" width="2" height="15" fill="rgb(220,28,47)"/><text x="1171.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.23%)</title><rect x="1168" y="340" width="2" height="15" fill="rgb(223,7,40)"/><text x="1171.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1168" y="356" width="2" height="15" fill="rgb(207,84,20)"/><text x="1171.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.39%)</title><rect x="1157" y="260" width="16" height="15" fill="rgb(245,3,44)"/><text x="1160.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.69%)</title><rect x="1165" y="276" width="8" height="15" fill="rgb(232,26,41)"/><text x="1168.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.23%)</title><rect x="1170" y="292" width="3" height="15" fill="rgb(221,123,25)"/><text x="1173.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.23%)</title><rect x="1170" y="308" width="3" height="15" fill="rgb(250,172,2)"/><text x="1173.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:143) (1 samples, 0.23%)</title><rect x="1170" y="324" width="3" height="15" fill="rgb(253,81,52)"/><text x="1173.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (136 samples, 31.48%)</title><rect x="804" y="244" width="372" height="15" fill="rgb(248,190,7)"/><text x="807.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mo..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1173" y="260" width="3" height="15" fill="rgb(219,186,52)"/><text x="1176.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (151 samples, 34.95%)</title><rect x="769" y="164" width="412" height="15" fill="rgb(240,151,34)"/><text x="772.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:6..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (151 samples, 34.95%)</title><rect x="769" y="180" width="412" height="15" fill="rgb(219,89,17)"/><text x="772.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (144 samples, 33.33%)</title><rect x="788" y="196" width="393" height="15" fill="rgb(244,118,47)"/><text x="791.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 32.64%)</title><rect x="796" y="212" width="385" height="15" fill="rgb(208,60,18)"/><text x="799.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 32.64%)</title><rect x="796" y="228" width="385" height="15" fill="rgb(226,193,45)"/><text x="799.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime:..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1176" y="244" width="5" height="15" fill="rgb(220,0,12)"/><text x="1179.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1176" y="260" width="5" height="15" fill="rgb(233,91,24)"/><text x="1179.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1179" y="276" width="2" height="15" fill="rgb(238,197,33)"/><text x="1182.00" y="286.50"></text></g><g><title>0x7f2aae91ed50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1179" y="292" width="2" height="15" fill="rgb(227,68,26)"/><text x="1182.00" y="302.50"></text></g><g><title>all (432 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,27,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:52) (159 samples, 36.81%)</title><rect x="755" y="52" width="435" height="15" fill="rgb(223,11,28)"/><text x="758.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_s..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:51) (159 samples, 36.81%)</title><rect x="755" y="68" width="435" height="15" fill="rgb(227,39,0)"/><text x="758.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_de..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:29) (159 samples, 36.81%)</title><rect x="755" y="84" width="435" height="15" fill="rgb(254,66,42)"/><text x="758.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:23) (159 samples, 36.81%)</title><rect x="755" y="100" width="435" height="15" fill="rgb(254,205,34)"/><text x="758.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_so..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (158 samples, 36.57%)</title><rect x="758" y="116" width="432" height="15" fill="rgb(209,192,44)"/><text x="761.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (155 samples, 35.88%)</title><rect x="766" y="132" width="424" height="15" fill="rgb(206,133,20)"/><text x="769.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (154 samples, 35.65%)</title><rect x="769" y="148" width="421" height="15" fill="rgb(206,42,23)"/><text x="772.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.69%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(214,150,34)"/><text x="1184.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.23%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(225,214,46)"/><text x="1190.00" y="190.50"></text></g></g></svg>