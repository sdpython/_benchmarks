<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1974" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1957.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1957.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:31) (1 samples, 0.12%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(241,69,13)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:11) (1 samples, 0.12%)</title><rect x="10" y="68" width="1" height="15" fill="rgb(235,135,30)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:39) (1 samples, 0.12%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(235,175,44)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.12%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(228,102,51)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.12%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(226,182,8)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.12%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(226,187,40)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:243) (1 samples, 0.12%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(236,151,49)"/><text x="13.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.12%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(222,114,34)"/><text x="13.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.12%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(231,202,17)"/><text x="13.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.12%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(234,195,34)"/><text x="13.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.12%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(207,84,43)"/><text x="13.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.12%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(224,159,1)"/><text x="13.00" y="238.50"></text></g><g><title>discover_dimensions (ctors.c:775) (1 samples, 0.12%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(221,72,28)"/><text x="13.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h:123) (1 samples, 0.12%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(250,26,21)"/><text x="13.00" y="270.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:13) (1 samples, 0.12%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(238,79,4)"/><text x="13.00" y="286.50"></text></g><g><title>0x7fa26862a3fd (?) (1 samples, 0.12%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(240,117,54)"/><text x="14.00" y="190.50"></text></g><g><title>0x7fa268628553 (?) (1 samples, 0.12%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(245,19,29)"/><text x="14.00" y="206.50"></text></g><g><title>0x7fa268623a09 (?) (1 samples, 0.12%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(241,10,38)"/><text x="14.00" y="222.50"></text></g><g><title>0x7fa268636283 (?) (1 samples, 0.12%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(215,149,42)"/><text x="14.00" y="238.50"></text></g><g><title>0x7fa268635e11 (?) (1 samples, 0.12%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(205,13,12)"/><text x="14.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.12%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(217,131,39)"/><text x="14.00" y="270.50"></text></g><g><title>0x7fa28dd0bbe2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(215,220,54)"/><text x="14.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(223,6,49)"/><text x="19.00" y="254.50"></text></g><g><title>0x7fa28dd0bbde (libm-2.29.so) (1 samples, 0.12%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(225,201,31)"/><text x="31.00" y="286.50"></text></g><g><title>0x7fa28dd0bbeb (libm-2.29.so) (1 samples, 0.12%)</title><rect x="29" y="276" width="1" height="15" fill="rgb(233,29,5)"/><text x="32.00" y="286.50"></text></g><g><title>0x7fa28dd0bc3a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="30" y="276" width="2" height="15" fill="rgb(218,209,54)"/><text x="33.00" y="286.50"></text></g><g><title>0x7fa28dd0bc5a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="32" y="276" width="1" height="15" fill="rgb(212,14,43)"/><text x="35.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (10 samples, 1.18%)</title><rect x="21" y="260" width="14" height="15" fill="rgb(246,118,21)"/><text x="24.00" y="270.50"></text></g><g><title>0x7fa28dd0bc7b (libm-2.29.so) (1 samples, 0.12%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(252,67,21)"/><text x="36.00" y="286.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:18) (54 samples, 6.40%)</title><rect x="11" y="100" width="75" height="15" fill="rgb(234,33,25)"/><text x="14.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (54 samples, 6.40%)</title><rect x="11" y="116" width="75" height="15" fill="rgb(238,151,13)"/><text x="14.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (54 samples, 6.40%)</title><rect x="11" y="132" width="75" height="15" fill="rgb(225,161,36)"/><text x="14.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (54 samples, 6.40%)</title><rect x="11" y="148" width="75" height="15" fill="rgb(206,82,21)"/><text x="14.00" y="158.50">_predict..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (54 samples, 6.40%)</title><rect x="11" y="164" width="75" height="15" fill="rgb(215,11,45)"/><text x="14.00" y="174.50">_dense_p..</text></g><g><title>0x7fa26862a3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (53 samples, 6.28%)</title><rect x="12" y="180" width="74" height="15" fill="rgb(239,212,42)"/><text x="15.00" y="190.50">0x7fa268..</text></g><g><title>0x7fa268628553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (53 samples, 6.28%)</title><rect x="12" y="196" width="74" height="15" fill="rgb(236,198,52)"/><text x="15.00" y="206.50">0x7fa268..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (53 samples, 6.28%)</title><rect x="12" y="212" width="74" height="15" fill="rgb(254,70,27)"/><text x="15.00" y="222.50">copy_pre..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (53 samples, 6.28%)</title><rect x="12" y="228" width="74" height="15" fill="rgb(246,161,45)"/><text x="15.00" y="238.50">svm_pred..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (49 samples, 5.81%)</title><rect x="18" y="244" width="68" height="15" fill="rgb(251,160,27)"/><text x="21.00" y="254.50">svm_pre..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (37 samples, 4.38%)</title><rect x="35" y="260" width="51" height="15" fill="rgb(228,92,6)"/><text x="38.00" y="270.50">svm::..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.12%)</title><rect x="86" y="148" width="2" height="15" fill="rgb(251,10,22)"/><text x="89.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (1 samples, 0.12%)</title><rect x="86" y="164" width="2" height="15" fill="rgb(253,109,5)"/><text x="89.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.12%)</title><rect x="86" y="180" width="2" height="15" fill="rgb(205,220,36)"/><text x="89.00" y="190.50"></text></g><g><title>0x7fa268627d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="88" y="196" width="1" height="15" fill="rgb(221,109,4)"/><text x="91.00" y="206.50"></text></g><g><title>0x7fa2686115ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="88" y="212" width="1" height="15" fill="rgb(235,88,10)"/><text x="91.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.12%)</title><rect x="88" y="228" width="1" height="15" fill="rgb(220,155,32)"/><text x="91.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.12%)</title><rect x="88" y="244" width="1" height="15" fill="rgb(213,108,33)"/><text x="91.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.12%)</title><rect x="88" y="260" width="1" height="15" fill="rgb(251,185,14)"/><text x="91.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="88" y="276" width="1" height="15" fill="rgb(246,82,8)"/><text x="91.00" y="286.50"></text></g><g><title>0x7fa268628237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="89" y="196" width="2" height="15" fill="rgb(226,55,44)"/><text x="92.00" y="206.50"></text></g><g><title>0x7fa268612ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="89" y="212" width="2" height="15" fill="rgb(241,202,0)"/><text x="92.00" y="222.50"></text></g><g><title>0x7fa28dc17ff0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="89" y="228" width="2" height="15" fill="rgb(226,137,30)"/><text x="92.00" y="238.50"></text></g><g><title>0x7fa28db3990e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="105" y="244" width="1" height="15" fill="rgb(239,91,32)"/><text x="108.00" y="254.50"></text></g><g><title>0x7fa28dd0bc0c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="107" y="260" width="2" height="15" fill="rgb(210,139,19)"/><text x="110.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (3 samples, 0.36%)</title><rect x="106" y="244" width="4" height="15" fill="rgb(226,45,35)"/><text x="109.00" y="254.50"></text></g><g><title>0x7fa28dd0bc52 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="109" y="260" width="1" height="15" fill="rgb(251,174,39)"/><text x="112.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.36%)</title><rect x="110" y="244" width="4" height="15" fill="rgb(208,67,51)"/><text x="113.00" y="254.50"></text></g><g><title>0x7fa28db3ac38 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="119" y="260" width="1" height="15" fill="rgb(214,49,42)"/><text x="122.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.59%)</title><rect x="114" y="244" width="7" height="15" fill="rgb(205,175,38)"/><text x="117.00" y="254.50"></text></g><g><title>0x7fa28db3ac48 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="120" y="260" width="1" height="15" fill="rgb(216,10,0)"/><text x="123.00" y="270.50"></text></g><g><title>0x7fa28dd0bba0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="135" y="276" width="2" height="15" fill="rgb(248,179,46)"/><text x="138.00" y="286.50"></text></g><g><title>0x7fa28dd0bbb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="137" y="276" width="1" height="15" fill="rgb(250,218,45)"/><text x="140.00" y="286.50"></text></g><g><title>0x7fa28dd0bbba (libm-2.29.so) (2 samples, 0.24%)</title><rect x="138" y="276" width="3" height="15" fill="rgb(222,112,13)"/><text x="141.00" y="286.50"></text></g><g><title>0x7fa28dd0bbc3 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="141" y="276" width="1" height="15" fill="rgb(249,35,38)"/><text x="144.00" y="286.50"></text></g><g><title>0x7fa28dd0bbe2 (libm-2.29.so) (5 samples, 0.59%)</title><rect x="142" y="276" width="7" height="15" fill="rgb(232,144,43)"/><text x="145.00" y="286.50"></text></g><g><title>0x7fa28dd0bbeb (libm-2.29.so) (1 samples, 0.12%)</title><rect x="149" y="276" width="2" height="15" fill="rgb(251,131,3)"/><text x="152.00" y="286.50"></text></g><g><title>0x7fa28dd0bc04 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="151" y="276" width="4" height="15" fill="rgb(236,79,26)"/><text x="154.00" y="286.50"></text></g><g><title>0x7fa28dd0bc28 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="155" y="276" width="3" height="15" fill="rgb(214,45,31)"/><text x="158.00" y="286.50"></text></g><g><title>0x7fa28dd0bc2e (libm-2.29.so) (3 samples, 0.36%)</title><rect x="158" y="276" width="4" height="15" fill="rgb(249,31,15)"/><text x="161.00" y="286.50"></text></g><g><title>0x7fa28dd0bc32 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="162" y="276" width="3" height="15" fill="rgb(242,219,21)"/><text x="165.00" y="286.50"></text></g><g><title>0x7fa28dd0bc3e (libm-2.29.so) (2 samples, 0.24%)</title><rect x="165" y="276" width="2" height="15" fill="rgb(247,120,10)"/><text x="168.00" y="286.50"></text></g><g><title>0x7fa28dd0bc46 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="167" y="276" width="3" height="15" fill="rgb(240,15,27)"/><text x="170.00" y="286.50"></text></g><g><title>0x7fa28dd0bc52 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="170" y="276" width="3" height="15" fill="rgb(219,139,26)"/><text x="173.00" y="286.50"></text></g><g><title>0x7fa28dd0bc5a (libm-2.29.so) (3 samples, 0.36%)</title><rect x="173" y="276" width="4" height="15" fill="rgb(247,194,35)"/><text x="176.00" y="286.50"></text></g><g><title>0x7fa28dd0bc6e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="177" y="276" width="2" height="15" fill="rgb(239,131,34)"/><text x="180.00" y="286.50"></text></g><g><title>0x7fa28dd0bc7b (libm-2.29.so) (5 samples, 0.59%)</title><rect x="179" y="276" width="7" height="15" fill="rgb(240,184,38)"/><text x="182.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (43 samples, 5.09%)</title><rect x="127" y="260" width="60" height="15" fill="rgb(217,199,32)"/><text x="130.00" y="270.50">exp (l..</text></g><g><title>0x7fa28dd0bc7f (libm-2.29.so) (1 samples, 0.12%)</title><rect x="186" y="276" width="1" height="15" fill="rgb(251,137,15)"/><text x="189.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="187" y="260" width="1" height="15" fill="rgb(216,189,48)"/><text x="190.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:38) (226 samples, 26.78%)</title><rect x="11" y="52" width="316" height="15" fill="rgb(236,92,36)"/><text x="14.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTr..</text></g><g><title>profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:37) (226 samples, 26.78%)</title><rect x="11" y="68" width="316" height="15" fill="rgb(252,215,34)"/><text x="14.00" y="78.50">profile_skl (bench_SVC_rbf_m_cl_probabilit..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:29) (226 samples, 26.78%)</title><rect x="11" y="84" width="316" height="15" fill="rgb(218,79,13)"/><text x="14.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabil..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:23) (172 samples, 20.38%)</title><rect x="86" y="100" width="241" height="15" fill="rgb(227,54,40)"/><text x="89.00" y="110.50">profile (bench_SVC_rbf_m_cl_prob..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (172 samples, 20.38%)</title><rect x="86" y="116" width="241" height="15" fill="rgb(219,107,7)"/><text x="89.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (172 samples, 20.38%)</title><rect x="86" y="132" width="241" height="15" fill="rgb(211,48,22)"/><text x="89.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (171 samples, 20.26%)</title><rect x="88" y="148" width="239" height="15" fill="rgb(223,42,38)"/><text x="91.00" y="158.50">_predict_proba (sklearn/svm/_ba..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (171 samples, 20.26%)</title><rect x="88" y="164" width="239" height="15" fill="rgb(240,157,33)"/><text x="91.00" y="174.50">_dense_predict_proba (sklearn/s..</text></g><g><title>0x7fa26862a3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (171 samples, 20.26%)</title><rect x="88" y="180" width="239" height="15" fill="rgb(238,56,25)"/><text x="91.00" y="190.50">0x7fa26862a3fd (sklearn/svm/_li..</text></g><g><title>0x7fa268628553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (169 samples, 20.02%)</title><rect x="91" y="196" width="236" height="15" fill="rgb(240,16,23)"/><text x="94.00" y="206.50">0x7fa268628553 (sklearn/svm/_li..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (169 samples, 20.02%)</title><rect x="91" y="212" width="236" height="15" fill="rgb(236,225,45)"/><text x="94.00" y="222.50">copy_predict_proba (sklearn/svm..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (169 samples, 20.02%)</title><rect x="91" y="228" width="236" height="15" fill="rgb(251,203,11)"/><text x="94.00" y="238.50">svm_predict_probability (sklear..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (147 samples, 17.42%)</title><rect x="121" y="244" width="206" height="15" fill="rgb(218,90,3)"/><text x="124.00" y="254.50">svm_predict_values (sklearn..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (99 samples, 11.73%)</title><rect x="188" y="260" width="139" height="15" fill="rgb(215,222,4)"/><text x="191.00" y="270.50">svm::Kernel::k_fu..</text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.12%)</title><rect x="327" y="244" width="1" height="15" fill="rgb(253,91,9)"/><text x="330.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="327" y="260" width="1" height="15" fill="rgb(229,55,14)"/><text x="330.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="327" y="276" width="1" height="15" fill="rgb(236,225,0)"/><text x="330.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="327" y="292" width="1" height="15" fill="rgb(237,0,12)"/><text x="330.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="327" y="308" width="1" height="15" fill="rgb(210,109,42)"/><text x="330.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="327" y="324" width="1" height="15" fill="rgb(240,207,27)"/><text x="330.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="327" y="340" width="1" height="15" fill="rgb(246,67,14)"/><text x="330.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="327" y="356" width="1" height="15" fill="rgb(205,140,40)"/><text x="330.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.12%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(247,201,34)"/><text x="330.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="327" y="388" width="1" height="15" fill="rgb(242,94,27)"/><text x="330.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="327" y="404" width="1" height="15" fill="rgb(246,185,30)"/><text x="330.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="327" y="420" width="1" height="15" fill="rgb(212,148,9)"/><text x="330.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="327" y="436" width="1" height="15" fill="rgb(248,115,52)"/><text x="330.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="327" y="452" width="1" height="15" fill="rgb(230,37,26)"/><text x="330.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="327" y="468" width="1" height="15" fill="rgb(230,106,18)"/><text x="330.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="327" y="484" width="1" height="15" fill="rgb(251,139,44)"/><text x="330.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.12%)</title><rect x="327" y="500" width="1" height="15" fill="rgb(213,117,32)"/><text x="330.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="327" y="516" width="1" height="15" fill="rgb(252,225,24)"/><text x="330.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="327" y="532" width="1" height="15" fill="rgb(211,81,41)"/><text x="330.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="327" y="548" width="1" height="15" fill="rgb(237,164,23)"/><text x="330.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.12%)</title><rect x="327" y="564" width="1" height="15" fill="rgb(227,222,27)"/><text x="330.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="327" y="580" width="1" height="15" fill="rgb(240,216,22)"/><text x="330.00" y="590.50"></text></g><g><title>0x7fa280400585 (?) (1 samples, 0.12%)</title><rect x="327" y="596" width="1" height="15" fill="rgb(224,129,28)"/><text x="330.00" y="606.50"></text></g><g><title>0x7fa280406075 (?) (1 samples, 0.12%)</title><rect x="327" y="612" width="1" height="15" fill="rgb(216,211,40)"/><text x="330.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="327" y="628" width="1" height="15" fill="rgb(227,162,38)"/><text x="330.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="327" y="644" width="1" height="15" fill="rgb(246,138,21)"/><text x="330.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="327" y="660" width="1" height="15" fill="rgb(244,133,17)"/><text x="330.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.12%)</title><rect x="327" y="676" width="1" height="15" fill="rgb(213,95,49)"/><text x="330.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="327" y="692" width="1" height="15" fill="rgb(238,41,12)"/><text x="330.00" y="702.50"></text></g><g><title>0x7fa27fd3d543 (?) (1 samples, 0.12%)</title><rect x="327" y="708" width="1" height="15" fill="rgb(237,2,16)"/><text x="330.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="327" y="724" width="1" height="15" fill="rgb(210,169,44)"/><text x="330.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="327" y="740" width="1" height="15" fill="rgb(218,107,50)"/><text x="330.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="327" y="756" width="1" height="15" fill="rgb(218,202,47)"/><text x="330.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.12%)</title><rect x="327" y="772" width="1" height="15" fill="rgb(222,143,19)"/><text x="330.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="327" y="788" width="1" height="15" fill="rgb(218,39,53)"/><text x="330.00" y="798.50"></text></g><g><title>0x7fa27fb12b9c (?) (1 samples, 0.12%)</title><rect x="327" y="804" width="1" height="15" fill="rgb(239,73,0)"/><text x="330.00" y="814.50"></text></g><g><title>0x7fa27fb16885 (?) (1 samples, 0.12%)</title><rect x="327" y="820" width="1" height="15" fill="rgb(225,213,42)"/><text x="330.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="327" y="836" width="1" height="15" fill="rgb(216,25,43)"/><text x="330.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="327" y="852" width="1" height="15" fill="rgb(223,136,50)"/><text x="330.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="327" y="868" width="1" height="15" fill="rgb(224,95,10)"/><text x="330.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="327" y="884" width="1" height="15" fill="rgb(229,191,1)"/><text x="330.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.12%)</title><rect x="327" y="900" width="1" height="15" fill="rgb(249,64,16)"/><text x="330.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.12%)</title><rect x="327" y="916" width="1" height="15" fill="rgb(226,193,34)"/><text x="330.00" y="926.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.12%)</title><rect x="327" y="932" width="1" height="15" fill="rgb(227,217,33)"/><text x="330.00" y="942.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="327" y="948" width="1" height="15" fill="rgb(226,41,46)"/><text x="330.00" y="958.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.12%)</title><rect x="327" y="964" width="1" height="15" fill="rgb(234,116,52)"/><text x="330.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:1) (2 samples, 0.24%)</title><rect x="327" y="148" width="3" height="15" fill="rgb(247,90,12)"/><text x="330.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="327" y="164" width="3" height="15" fill="rgb(243,169,10)"/><text x="330.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="327" y="180" width="3" height="15" fill="rgb(205,192,17)"/><text x="330.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="327" y="196" width="3" height="15" fill="rgb(205,75,44)"/><text x="330.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="327" y="212" width="3" height="15" fill="rgb(224,169,41)"/><text x="330.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="327" y="228" width="3" height="15" fill="rgb(254,194,51)"/><text x="330.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.12%)</title><rect x="328" y="244" width="2" height="15" fill="rgb(212,148,12)"/><text x="331.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="328" y="260" width="2" height="15" fill="rgb(237,29,20)"/><text x="331.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="328" y="276" width="2" height="15" fill="rgb(245,193,51)"/><text x="331.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="328" y="292" width="2" height="15" fill="rgb(243,175,41)"/><text x="331.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="328" y="308" width="2" height="15" fill="rgb(237,216,3)"/><text x="331.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="328" y="324" width="2" height="15" fill="rgb(233,149,51)"/><text x="331.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.12%)</title><rect x="328" y="340" width="2" height="15" fill="rgb(242,20,25)"/><text x="331.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="328" y="356" width="2" height="15" fill="rgb(218,44,43)"/><text x="331.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(230,191,8)"/><text x="331.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="328" y="388" width="2" height="15" fill="rgb(231,187,21)"/><text x="331.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="328" y="404" width="2" height="15" fill="rgb(227,65,36)"/><text x="331.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="328" y="420" width="2" height="15" fill="rgb(214,217,47)"/><text x="331.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:64) (1 samples, 0.12%)</title><rect x="328" y="436" width="2" height="15" fill="rgb(206,166,32)"/><text x="331.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="328" y="452" width="2" height="15" fill="rgb(254,224,31)"/><text x="331.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="328" y="468" width="2" height="15" fill="rgb(214,38,26)"/><text x="331.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="328" y="484" width="2" height="15" fill="rgb(251,62,54)"/><text x="331.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="328" y="500" width="2" height="15" fill="rgb(245,182,18)"/><text x="331.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="328" y="516" width="2" height="15" fill="rgb(228,155,7)"/><text x="331.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py:4) (1 samples, 0.12%)</title><rect x="328" y="532" width="2" height="15" fill="rgb(224,141,49)"/><text x="331.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="328" y="548" width="2" height="15" fill="rgb(252,171,26)"/><text x="331.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="328" y="564" width="2" height="15" fill="rgb(248,5,8)"/><text x="331.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="328" y="580" width="2" height="15" fill="rgb(245,223,43)"/><text x="331.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="328" y="596" width="2" height="15" fill="rgb(206,199,21)"/><text x="331.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="328" y="612" width="2" height="15" fill="rgb(245,186,39)"/><text x="331.00" y="622.50"></text></g><g><title>&lt;module&gt; (argparse.py:90) (1 samples, 0.12%)</title><rect x="328" y="628" width="2" height="15" fill="rgb(239,27,20)"/><text x="331.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="328" y="644" width="2" height="15" fill="rgb(218,198,32)"/><text x="331.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="328" y="660" width="2" height="15" fill="rgb(253,15,30)"/><text x="331.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="328" y="676" width="2" height="15" fill="rgb(218,220,40)"/><text x="331.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="328" y="692" width="2" height="15" fill="rgb(254,216,41)"/><text x="331.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="328" y="708" width="2" height="15" fill="rgb(217,156,14)"/><text x="331.00" y="718.50"></text></g><g><title>&lt;module&gt; (gettext.py:84) (1 samples, 0.12%)</title><rect x="328" y="724" width="2" height="15" fill="rgb(211,30,25)"/><text x="331.00" y="734.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="328" y="740" width="2" height="15" fill="rgb(246,22,34)"/><text x="331.00" y="750.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="328" y="756" width="2" height="15" fill="rgb(219,76,53)"/><text x="331.00" y="766.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="328" y="772" width="2" height="15" fill="rgb(242,108,7)"/><text x="331.00" y="782.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="328" y="788" width="2" height="15" fill="rgb(231,47,25)"/><text x="331.00" y="798.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="328" y="804" width="2" height="15" fill="rgb(244,82,20)"/><text x="331.00" y="814.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.12%)</title><rect x="328" y="820" width="2" height="15" fill="rgb(214,157,0)"/><text x="331.00" y="830.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.12%)</title><rect x="328" y="836" width="2" height="15" fill="rgb(246,52,4)"/><text x="331.00" y="846.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="330" y="916" width="1" height="15" fill="rgb(214,119,34)"/><text x="333.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="330" y="932" width="1" height="15" fill="rgb(229,158,31)"/><text x="333.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.12%)</title><rect x="330" y="948" width="1" height="15" fill="rgb(209,61,45)"/><text x="333.00" y="958.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.12%)</title><rect x="331" y="932" width="1" height="15" fill="rgb(222,226,7)"/><text x="334.00" y="942.50"></text></g><g><title>dirname (posixpath.py:161) (1 samples, 0.12%)</title><rect x="331" y="948" width="1" height="15" fill="rgb(245,193,15)"/><text x="334.00" y="958.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.12%)</title><rect x="331" y="964" width="1" height="15" fill="rgb(244,117,29)"/><text x="334.00" y="974.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.36%)</title><rect x="330" y="900" width="4" height="15" fill="rgb(251,208,48)"/><text x="333.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.24%)</title><rect x="331" y="916" width="3" height="15" fill="rgb(251,88,26)"/><text x="334.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.12%)</title><rect x="332" y="932" width="2" height="15" fill="rgb(239,70,0)"/><text x="335.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.12%)</title><rect x="332" y="948" width="2" height="15" fill="rgb(250,102,45)"/><text x="335.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.12%)</title><rect x="332" y="964" width="2" height="15" fill="rgb(217,217,7)"/><text x="335.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.12%)</title><rect x="332" y="980" width="2" height="15" fill="rgb(233,35,34)"/><text x="335.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:225) (1 samples, 0.12%)</title><rect x="332" y="996" width="2" height="15" fill="rgb(220,6,6)"/><text x="335.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:2) (4 samples, 0.47%)</title><rect x="330" y="148" width="5" height="15" fill="rgb(240,164,48)"/><text x="333.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="164" width="5" height="15" fill="rgb(229,71,9)"/><text x="333.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.47%)</title><rect x="330" y="180" width="5" height="15" fill="rgb(241,19,44)"/><text x="333.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="196" width="5" height="15" fill="rgb(221,1,52)"/><text x="333.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="212" width="5" height="15" fill="rgb(231,200,45)"/><text x="333.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="330" y="228" width="5" height="15" fill="rgb(213,115,38)"/><text x="333.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="330" y="244" width="5" height="15" fill="rgb(221,62,39)"/><text x="333.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="330" y="260" width="5" height="15" fill="rgb(216,11,16)"/><text x="333.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="276" width="5" height="15" fill="rgb(247,122,8)"/><text x="333.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.47%)</title><rect x="330" y="292" width="5" height="15" fill="rgb(211,168,36)"/><text x="333.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="308" width="5" height="15" fill="rgb(212,69,15)"/><text x="333.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="330" y="324" width="5" height="15" fill="rgb(211,146,27)"/><text x="333.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="330" y="340" width="5" height="15" fill="rgb(239,116,32)"/><text x="333.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="330" y="356" width="5" height="15" fill="rgb(227,58,42)"/><text x="333.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="372" width="5" height="15" fill="rgb(215,153,1)"/><text x="333.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.47%)</title><rect x="330" y="388" width="5" height="15" fill="rgb(247,124,11)"/><text x="333.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="404" width="5" height="15" fill="rgb(205,209,39)"/><text x="333.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="330" y="420" width="5" height="15" fill="rgb(251,111,50)"/><text x="333.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="330" y="436" width="5" height="15" fill="rgb(229,223,43)"/><text x="333.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="330" y="452" width="5" height="15" fill="rgb(208,130,28)"/><text x="333.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="468" width="5" height="15" fill="rgb(248,222,30)"/><text x="333.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.47%)</title><rect x="330" y="484" width="5" height="15" fill="rgb(240,38,39)"/><text x="333.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="500" width="5" height="15" fill="rgb(205,87,31)"/><text x="333.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="330" y="516" width="5" height="15" fill="rgb(236,24,50)"/><text x="333.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="330" y="532" width="5" height="15" fill="rgb(224,88,12)"/><text x="333.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="330" y="548" width="5" height="15" fill="rgb(211,19,51)"/><text x="333.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="564" width="5" height="15" fill="rgb(218,110,2)"/><text x="333.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.47%)</title><rect x="330" y="580" width="5" height="15" fill="rgb(225,227,37)"/><text x="333.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="596" width="5" height="15" fill="rgb(247,207,35)"/><text x="333.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.47%)</title><rect x="330" y="612" width="5" height="15" fill="rgb(239,113,1)"/><text x="333.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="628" width="5" height="15" fill="rgb(253,80,16)"/><text x="333.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="644" width="5" height="15" fill="rgb(243,77,30)"/><text x="333.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="330" y="660" width="5" height="15" fill="rgb(217,196,38)"/><text x="333.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="330" y="676" width="5" height="15" fill="rgb(211,110,0)"/><text x="333.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="330" y="692" width="5" height="15" fill="rgb(205,128,6)"/><text x="333.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="708" width="5" height="15" fill="rgb(237,30,27)"/><text x="333.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.47%)</title><rect x="330" y="724" width="5" height="15" fill="rgb(224,175,42)"/><text x="333.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="330" y="740" width="5" height="15" fill="rgb(213,87,17)"/><text x="333.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="330" y="756" width="5" height="15" fill="rgb(209,229,10)"/><text x="333.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="330" y="772" width="5" height="15" fill="rgb(243,79,24)"/><text x="333.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="330" y="788" width="5" height="15" fill="rgb(244,99,43)"/><text x="333.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="330" y="804" width="5" height="15" fill="rgb(215,191,19)"/><text x="333.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.47%)</title><rect x="330" y="820" width="5" height="15" fill="rgb(211,130,39)"/><text x="333.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.47%)</title><rect x="330" y="836" width="5" height="15" fill="rgb(210,161,8)"/><text x="333.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (4 samples, 0.47%)</title><rect x="330" y="852" width="5" height="15" fill="rgb(241,36,12)"/><text x="333.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (4 samples, 0.47%)</title><rect x="330" y="868" width="5" height="15" fill="rgb(253,176,52)"/><text x="333.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (4 samples, 0.47%)</title><rect x="330" y="884" width="5" height="15" fill="rgb(215,135,6)"/><text x="333.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.12%)</title><rect x="334" y="900" width="1" height="15" fill="rgb(213,196,13)"/><text x="337.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:709) (1 samples, 0.12%)</title><rect x="334" y="916" width="1" height="15" fill="rgb(246,23,41)"/><text x="337.00" y="926.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.12%)</title><rect x="335" y="484" width="2" height="15" fill="rgb(218,23,10)"/><text x="338.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="335" y="500" width="2" height="15" fill="rgb(251,19,41)"/><text x="338.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="516" width="2" height="15" fill="rgb(215,191,20)"/><text x="338.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="532" width="2" height="15" fill="rgb(230,160,50)"/><text x="338.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="548" width="2" height="15" fill="rgb(205,120,4)"/><text x="338.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="564" width="2" height="15" fill="rgb(252,93,46)"/><text x="338.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="580" width="2" height="15" fill="rgb(239,95,29)"/><text x="338.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="596" width="2" height="15" fill="rgb(245,159,25)"/><text x="338.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.12%)</title><rect x="335" y="612" width="2" height="15" fill="rgb(248,156,33)"/><text x="338.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="628" width="2" height="15" fill="rgb(226,73,19)"/><text x="338.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="644" width="2" height="15" fill="rgb(252,55,14)"/><text x="338.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="660" width="2" height="15" fill="rgb(224,103,38)"/><text x="338.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="676" width="2" height="15" fill="rgb(223,89,48)"/><text x="338.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="692" width="2" height="15" fill="rgb(229,173,29)"/><text x="338.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.12%)</title><rect x="335" y="708" width="2" height="15" fill="rgb(242,75,49)"/><text x="338.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="724" width="2" height="15" fill="rgb(214,217,3)"/><text x="338.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="740" width="2" height="15" fill="rgb(210,47,23)"/><text x="338.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="756" width="2" height="15" fill="rgb(205,174,40)"/><text x="338.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="772" width="2" height="15" fill="rgb(239,21,21)"/><text x="338.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="788" width="2" height="15" fill="rgb(210,190,0)"/><text x="338.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.12%)</title><rect x="335" y="804" width="2" height="15" fill="rgb(212,176,35)"/><text x="338.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="820" width="2" height="15" fill="rgb(207,38,50)"/><text x="338.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="836" width="2" height="15" fill="rgb(238,140,48)"/><text x="338.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="852" width="2" height="15" fill="rgb(224,214,15)"/><text x="338.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="868" width="2" height="15" fill="rgb(214,35,16)"/><text x="338.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="884" width="2" height="15" fill="rgb(235,71,5)"/><text x="338.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.12%)</title><rect x="335" y="900" width="2" height="15" fill="rgb(234,125,2)"/><text x="338.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="916" width="2" height="15" fill="rgb(226,200,19)"/><text x="338.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="932" width="2" height="15" fill="rgb(227,139,27)"/><text x="338.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="948" width="2" height="15" fill="rgb(225,212,48)"/><text x="338.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="964" width="2" height="15" fill="rgb(208,101,28)"/><text x="338.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="980" width="2" height="15" fill="rgb(250,149,36)"/><text x="338.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.12%)</title><rect x="335" y="996" width="2" height="15" fill="rgb(248,194,8)"/><text x="338.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="1012" width="2" height="15" fill="rgb(216,196,31)"/><text x="338.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="335" y="1028" width="2" height="15" fill="rgb(246,71,7)"/><text x="338.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="1044" width="2" height="15" fill="rgb(249,1,12)"/><text x="338.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="1060" width="2" height="15" fill="rgb(245,193,1)"/><text x="338.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="1076" width="2" height="15" fill="rgb(214,156,18)"/><text x="338.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="1092" width="2" height="15" fill="rgb(231,35,41)"/><text x="338.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="1108" width="2" height="15" fill="rgb(223,114,15)"/><text x="338.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="1124" width="2" height="15" fill="rgb(231,103,42)"/><text x="338.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.12%)</title><rect x="335" y="1140" width="2" height="15" fill="rgb(221,46,26)"/><text x="338.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="1156" width="2" height="15" fill="rgb(243,114,15)"/><text x="338.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="1172" width="2" height="15" fill="rgb(246,221,18)"/><text x="338.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="1188" width="2" height="15" fill="rgb(220,184,35)"/><text x="338.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="1204" width="2" height="15" fill="rgb(248,71,26)"/><text x="338.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="1220" width="2" height="15" fill="rgb(225,101,16)"/><text x="338.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.12%)</title><rect x="335" y="1236" width="2" height="15" fill="rgb(206,124,14)"/><text x="338.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="1252" width="2" height="15" fill="rgb(214,204,31)"/><text x="338.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="1268" width="2" height="15" fill="rgb(248,82,3)"/><text x="338.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="1284" width="2" height="15" fill="rgb(251,167,23)"/><text x="338.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="1300" width="2" height="15" fill="rgb(247,51,36)"/><text x="338.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="1316" width="2" height="15" fill="rgb(235,119,10)"/><text x="338.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.12%)</title><rect x="335" y="1332" width="2" height="15" fill="rgb(205,200,16)"/><text x="338.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="1348" width="2" height="15" fill="rgb(245,206,33)"/><text x="338.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="1364" width="2" height="15" fill="rgb(239,86,23)"/><text x="338.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="1380" width="2" height="15" fill="rgb(229,137,22)"/><text x="338.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="335" y="1396" width="2" height="15" fill="rgb(232,87,17)"/><text x="338.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="335" y="1412" width="2" height="15" fill="rgb(224,102,6)"/><text x="338.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.12%)</title><rect x="335" y="1428" width="2" height="15" fill="rgb(228,62,29)"/><text x="338.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="335" y="1444" width="2" height="15" fill="rgb(250,113,42)"/><text x="338.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="335" y="1460" width="2" height="15" fill="rgb(238,137,1)"/><text x="338.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="335" y="1476" width="2" height="15" fill="rgb(240,91,46)"/><text x="338.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="335" y="1492" width="2" height="15" fill="rgb(232,227,22)"/><text x="338.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.12%)</title><rect x="335" y="1508" width="2" height="15" fill="rgb(250,216,51)"/><text x="338.00" y="1518.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.12%)</title><rect x="335" y="1524" width="2" height="15" fill="rgb(246,7,20)"/><text x="338.00" y="1534.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="335" y="1540" width="2" height="15" fill="rgb(216,217,17)"/><text x="338.00" y="1550.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:4) (2 samples, 0.24%)</title><rect x="335" y="148" width="3" height="15" fill="rgb(235,59,6)"/><text x="338.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="335" y="164" width="3" height="15" fill="rgb(210,90,20)"/><text x="338.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.24%)</title><rect x="335" y="180" width="3" height="15" fill="rgb(241,197,41)"/><text x="338.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="335" y="196" width="3" height="15" fill="rgb(234,61,30)"/><text x="338.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="335" y="212" width="3" height="15" fill="rgb(243,145,17)"/><text x="338.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="335" y="228" width="3" height="15" fill="rgb(241,45,26)"/><text x="338.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="335" y="244" width="3" height="15" fill="rgb(251,76,21)"/><text x="338.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="335" y="260" width="3" height="15" fill="rgb(250,32,1)"/><text x="338.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="335" y="276" width="3" height="15" fill="rgb(251,135,46)"/><text x="338.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.24%)</title><rect x="335" y="292" width="3" height="15" fill="rgb(246,134,40)"/><text x="338.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="335" y="308" width="3" height="15" fill="rgb(248,176,4)"/><text x="338.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="335" y="324" width="3" height="15" fill="rgb(238,53,1)"/><text x="338.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="335" y="340" width="3" height="15" fill="rgb(211,30,23)"/><text x="338.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="335" y="356" width="3" height="15" fill="rgb(230,161,44)"/><text x="338.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="335" y="372" width="3" height="15" fill="rgb(225,169,21)"/><text x="338.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.24%)</title><rect x="335" y="388" width="3" height="15" fill="rgb(222,53,38)"/><text x="338.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="335" y="404" width="3" height="15" fill="rgb(224,58,27)"/><text x="338.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="335" y="420" width="3" height="15" fill="rgb(209,187,36)"/><text x="338.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="335" y="436" width="3" height="15" fill="rgb(210,0,39)"/><text x="338.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="335" y="452" width="3" height="15" fill="rgb(213,101,53)"/><text x="338.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="335" y="468" width="3" height="15" fill="rgb(235,196,0)"/><text x="338.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.12%)</title><rect x="337" y="484" width="1" height="15" fill="rgb(224,210,17)"/><text x="340.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="337" y="500" width="1" height="15" fill="rgb(253,225,5)"/><text x="340.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="337" y="516" width="1" height="15" fill="rgb(234,187,31)"/><text x="340.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="337" y="532" width="1" height="15" fill="rgb(230,77,15)"/><text x="340.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="337" y="548" width="1" height="15" fill="rgb(211,42,3)"/><text x="340.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="337" y="564" width="1" height="15" fill="rgb(244,151,49)"/><text x="340.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.12%)</title><rect x="337" y="580" width="1" height="15" fill="rgb(212,29,36)"/><text x="340.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="337" y="596" width="1" height="15" fill="rgb(249,9,42)"/><text x="340.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="337" y="612" width="1" height="15" fill="rgb(212,35,43)"/><text x="340.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="337" y="628" width="1" height="15" fill="rgb(236,42,49)"/><text x="340.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="337" y="644" width="1" height="15" fill="rgb(209,63,33)"/><text x="340.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="337" y="660" width="1" height="15" fill="rgb(241,122,20)"/><text x="340.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.12%)</title><rect x="337" y="676" width="1" height="15" fill="rgb(210,183,40)"/><text x="340.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="337" y="692" width="1" height="15" fill="rgb(239,207,5)"/><text x="340.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="337" y="708" width="1" height="15" fill="rgb(225,79,17)"/><text x="340.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="337" y="724" width="1" height="15" fill="rgb(217,135,33)"/><text x="340.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="337" y="740" width="1" height="15" fill="rgb(215,176,4)"/><text x="340.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="337" y="756" width="1" height="15" fill="rgb(226,14,1)"/><text x="340.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.12%)</title><rect x="337" y="772" width="1" height="15" fill="rgb(213,66,16)"/><text x="340.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="337" y="788" width="1" height="15" fill="rgb(213,71,40)"/><text x="340.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="337" y="804" width="1" height="15" fill="rgb(248,94,19)"/><text x="340.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="337" y="820" width="1" height="15" fill="rgb(224,127,28)"/><text x="340.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="337" y="836" width="1" height="15" fill="rgb(224,91,32)"/><text x="340.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="337" y="852" width="1" height="15" fill="rgb(216,87,49)"/><text x="340.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="337" y="868" width="1" height="15" fill="rgb(211,148,37)"/><text x="340.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="337" y="884" width="1" height="15" fill="rgb(222,212,14)"/><text x="340.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.12%)</title><rect x="337" y="900" width="1" height="15" fill="rgb(237,69,10)"/><text x="340.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="337" y="916" width="1" height="15" fill="rgb(254,206,15)"/><text x="340.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="337" y="932" width="1" height="15" fill="rgb(236,203,8)"/><text x="340.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="337" y="948" width="1" height="15" fill="rgb(245,21,6)"/><text x="340.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="337" y="964" width="1" height="15" fill="rgb(227,9,44)"/><text x="340.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="337" y="980" width="1" height="15" fill="rgb(206,175,26)"/><text x="340.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="337" y="996" width="1" height="15" fill="rgb(248,160,38)"/><text x="340.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="337" y="1012" width="1" height="15" fill="rgb(217,29,39)"/><text x="340.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3709) (1 samples, 0.12%)</title><rect x="337" y="1028" width="1" height="15" fill="rgb(222,3,4)"/><text x="340.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1584) (1 samples, 0.12%)</title><rect x="337" y="1044" width="1" height="15" fill="rgb(239,168,37)"/><text x="340.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.12%)</title><rect x="338" y="628" width="1" height="15" fill="rgb(234,105,41)"/><text x="341.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="338" y="644" width="1" height="15" fill="rgb(209,215,3)"/><text x="341.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="338" y="660" width="1" height="15" fill="rgb(244,128,42)"/><text x="341.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="338" y="676" width="1" height="15" fill="rgb(237,33,23)"/><text x="341.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="338" y="692" width="1" height="15" fill="rgb(207,43,9)"/><text x="341.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="338" y="708" width="1" height="15" fill="rgb(227,90,26)"/><text x="341.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:17) (1 samples, 0.12%)</title><rect x="338" y="724" width="1" height="15" fill="rgb(252,136,24)"/><text x="341.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="338" y="740" width="1" height="15" fill="rgb(212,165,14)"/><text x="341.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="338" y="756" width="1" height="15" fill="rgb(219,57,27)"/><text x="341.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="338" y="772" width="1" height="15" fill="rgb(248,124,30)"/><text x="341.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="338" y="788" width="1" height="15" fill="rgb(238,180,41)"/><text x="341.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="338" y="804" width="1" height="15" fill="rgb(229,136,0)"/><text x="341.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py:4413) (1 samples, 0.12%)</title><rect x="338" y="820" width="1" height="15" fill="rgb(218,13,49)"/><text x="341.00" y="830.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.12%)</title><rect x="339" y="1012" width="2" height="15" fill="rgb(249,35,53)"/><text x="342.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="339" y="1028" width="2" height="15" fill="rgb(222,143,35)"/><text x="342.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="339" y="1044" width="2" height="15" fill="rgb(207,172,41)"/><text x="342.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="339" y="1060" width="2" height="15" fill="rgb(242,181,33)"/><text x="342.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="339" y="1076" width="2" height="15" fill="rgb(215,69,32)"/><text x="342.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="339" y="1092" width="2" height="15" fill="rgb(224,1,51)"/><text x="342.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:4892) (1 samples, 0.12%)</title><rect x="339" y="1108" width="2" height="15" fill="rgb(228,189,21)"/><text x="342.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py:10747) (1 samples, 0.12%)</title><rect x="339" y="1124" width="2" height="15" fill="rgb(217,16,36)"/><text x="342.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="339" y="1140" width="2" height="15" fill="rgb(234,131,45)"/><text x="342.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="339" y="1156" width="2" height="15" fill="rgb(208,104,3)"/><text x="342.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="339" y="1172" width="2" height="15" fill="rgb(249,97,9)"/><text x="342.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="339" y="1188" width="2" height="15" fill="rgb(210,59,22)"/><text x="342.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="339" y="1204" width="2" height="15" fill="rgb(214,224,21)"/><text x="342.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="339" y="1220" width="2" height="15" fill="rgb(223,91,16)"/><text x="342.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="339" y="1236" width="2" height="15" fill="rgb(228,210,29)"/><text x="342.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py:1985) (1 samples, 0.12%)</title><rect x="339" y="1252" width="2" height="15" fill="rgb(230,12,25)"/><text x="342.00" y="1262.50"></text></g><g><title>Expanding (pandas/core/window.py:2226) (1 samples, 0.12%)</title><rect x="339" y="1268" width="2" height="15" fill="rgb(248,222,20)"/><text x="342.00" y="1278.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.12%)</title><rect x="339" y="1284" width="2" height="15" fill="rgb(208,195,3)"/><text x="342.00" y="1294.50"></text></g><g><title>dedent (textwrap.py:438) (1 samples, 0.12%)</title><rect x="339" y="1300" width="2" height="15" fill="rgb(211,143,36)"/><text x="342.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:123) (1 samples, 0.12%)</title><rect x="341" y="1108" width="1" height="15" fill="rgb(244,4,22)"/><text x="344.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py:6618) (1 samples, 0.12%)</title><rect x="341" y="1124" width="1" height="15" fill="rgb(225,64,51)"/><text x="344.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.12%)</title><rect x="341" y="1140" width="1" height="15" fill="rgb(231,97,22)"/><text x="344.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.12%)</title><rect x="341" y="1156" width="1" height="15" fill="rgb(254,27,30)"/><text x="344.00" y="1166.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.12%)</title><rect x="341" y="1172" width="1" height="15" fill="rgb(237,85,32)"/><text x="344.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.12%)</title><rect x="341" y="1188" width="1" height="15" fill="rgb(209,157,42)"/><text x="344.00" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.12%)</title><rect x="341" y="1204" width="1" height="15" fill="rgb(243,209,5)"/><text x="344.00" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="341" y="1220" width="1" height="15" fill="rgb(252,184,33)"/><text x="344.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 0.47%)</title><rect x="338" y="436" width="6" height="15" fill="rgb(211,131,30)"/><text x="341.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="338" y="452" width="6" height="15" fill="rgb(229,166,45)"/><text x="341.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="338" y="468" width="6" height="15" fill="rgb(226,194,42)"/><text x="341.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="338" y="484" width="6" height="15" fill="rgb(236,62,15)"/><text x="341.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="338" y="500" width="6" height="15" fill="rgb(208,57,10)"/><text x="341.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="338" y="516" width="6" height="15" fill="rgb(233,177,18)"/><text x="341.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 0.47%)</title><rect x="338" y="532" width="6" height="15" fill="rgb(210,187,35)"/><text x="341.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="338" y="548" width="6" height="15" fill="rgb(224,137,24)"/><text x="341.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="338" y="564" width="6" height="15" fill="rgb(240,163,22)"/><text x="341.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="338" y="580" width="6" height="15" fill="rgb(224,65,54)"/><text x="341.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="338" y="596" width="6" height="15" fill="rgb(237,66,52)"/><text x="341.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="338" y="612" width="6" height="15" fill="rgb(235,229,9)"/><text x="341.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.36%)</title><rect x="339" y="628" width="5" height="15" fill="rgb(214,112,1)"/><text x="342.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="339" y="644" width="5" height="15" fill="rgb(209,204,50)"/><text x="342.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="339" y="660" width="5" height="15" fill="rgb(247,130,52)"/><text x="342.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="339" y="676" width="5" height="15" fill="rgb(233,145,7)"/><text x="342.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="339" y="692" width="5" height="15" fill="rgb(210,174,6)"/><text x="342.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="339" y="708" width="5" height="15" fill="rgb(237,222,22)"/><text x="342.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.36%)</title><rect x="339" y="724" width="5" height="15" fill="rgb(247,177,47)"/><text x="342.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="339" y="740" width="5" height="15" fill="rgb(250,216,31)"/><text x="342.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="339" y="756" width="5" height="15" fill="rgb(225,63,7)"/><text x="342.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="339" y="772" width="5" height="15" fill="rgb(238,208,24)"/><text x="342.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="339" y="788" width="5" height="15" fill="rgb(233,143,6)"/><text x="342.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="339" y="804" width="5" height="15" fill="rgb(247,33,44)"/><text x="342.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.36%)</title><rect x="339" y="820" width="5" height="15" fill="rgb(206,118,6)"/><text x="342.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="339" y="836" width="5" height="15" fill="rgb(214,172,19)"/><text x="342.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="339" y="852" width="5" height="15" fill="rgb(233,135,43)"/><text x="342.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="339" y="868" width="5" height="15" fill="rgb(253,214,8)"/><text x="342.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="339" y="884" width="5" height="15" fill="rgb(233,226,42)"/><text x="342.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="339" y="900" width="5" height="15" fill="rgb(237,192,19)"/><text x="342.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.36%)</title><rect x="339" y="916" width="5" height="15" fill="rgb(221,29,14)"/><text x="342.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="339" y="932" width="5" height="15" fill="rgb(229,52,44)"/><text x="342.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="339" y="948" width="5" height="15" fill="rgb(252,200,21)"/><text x="342.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="339" y="964" width="5" height="15" fill="rgb(249,119,1)"/><text x="342.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="339" y="980" width="5" height="15" fill="rgb(251,0,18)"/><text x="342.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="339" y="996" width="5" height="15" fill="rgb(224,104,39)"/><text x="342.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.24%)</title><rect x="341" y="1012" width="3" height="15" fill="rgb(239,85,32)"/><text x="344.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="341" y="1028" width="3" height="15" fill="rgb(254,23,2)"/><text x="344.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="341" y="1044" width="3" height="15" fill="rgb(211,11,29)"/><text x="344.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="341" y="1060" width="3" height="15" fill="rgb(206,221,23)"/><text x="344.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="341" y="1076" width="3" height="15" fill="rgb(220,146,14)"/><text x="344.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="341" y="1092" width="3" height="15" fill="rgb(212,64,37)"/><text x="344.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.12%)</title><rect x="342" y="1108" width="2" height="15" fill="rgb(241,229,9)"/><text x="345.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="342" y="1124" width="2" height="15" fill="rgb(208,227,35)"/><text x="345.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="342" y="1140" width="2" height="15" fill="rgb(227,228,37)"/><text x="345.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="342" y="1156" width="2" height="15" fill="rgb(244,46,30)"/><text x="345.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="342" y="1172" width="2" height="15" fill="rgb(221,87,35)"/><text x="345.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="342" y="1188" width="2" height="15" fill="rgb(239,141,42)"/><text x="345.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.12%)</title><rect x="342" y="1204" width="2" height="15" fill="rgb(249,60,31)"/><text x="345.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="342" y="1220" width="2" height="15" fill="rgb(227,102,25)"/><text x="345.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="342" y="1236" width="2" height="15" fill="rgb(228,81,28)"/><text x="345.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="342" y="1252" width="2" height="15" fill="rgb(254,146,45)"/><text x="345.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="342" y="1268" width="2" height="15" fill="rgb(234,136,32)"/><text x="345.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="342" y="1284" width="2" height="15" fill="rgb(223,185,24)"/><text x="345.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.12%)</title><rect x="342" y="1300" width="2" height="15" fill="rgb(233,118,31)"/><text x="345.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="342" y="1316" width="2" height="15" fill="rgb(238,116,36)"/><text x="345.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="342" y="1332" width="2" height="15" fill="rgb(226,103,9)"/><text x="345.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="342" y="1348" width="2" height="15" fill="rgb(253,109,45)"/><text x="345.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="342" y="1364" width="2" height="15" fill="rgb(213,195,31)"/><text x="345.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="342" y="1380" width="2" height="15" fill="rgb(253,92,51)"/><text x="345.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:52) (1 samples, 0.12%)</title><rect x="342" y="1396" width="2" height="15" fill="rgb(253,169,46)"/><text x="345.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="342" y="1412" width="2" height="15" fill="rgb(234,215,41)"/><text x="345.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="342" y="1428" width="2" height="15" fill="rgb(246,93,10)"/><text x="345.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="342" y="1444" width="2" height="15" fill="rgb(222,204,39)"/><text x="345.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="342" y="1460" width="2" height="15" fill="rgb(233,39,49)"/><text x="345.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="342" y="1476" width="2" height="15" fill="rgb(217,12,43)"/><text x="345.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="342" y="1492" width="2" height="15" fill="rgb(216,49,8)"/><text x="345.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.12%)</title><rect x="344" y="1108" width="1" height="15" fill="rgb(240,100,14)"/><text x="347.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="344" y="1124" width="1" height="15" fill="rgb(237,154,5)"/><text x="347.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="344" y="1140" width="1" height="15" fill="rgb(208,135,8)"/><text x="347.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="344" y="1156" width="1" height="15" fill="rgb(249,133,21)"/><text x="347.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="344" y="1172" width="1" height="15" fill="rgb(221,48,36)"/><text x="347.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="344" y="1188" width="1" height="15" fill="rgb(238,209,39)"/><text x="347.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.12%)</title><rect x="344" y="1204" width="1" height="15" fill="rgb(224,76,52)"/><text x="347.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="344" y="1220" width="1" height="15" fill="rgb(241,7,28)"/><text x="347.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="344" y="1236" width="1" height="15" fill="rgb(205,24,30)"/><text x="347.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="344" y="1252" width="1" height="15" fill="rgb(214,16,17)"/><text x="347.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="344" y="1268" width="1" height="15" fill="rgb(254,111,45)"/><text x="347.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="344" y="1284" width="1" height="15" fill="rgb(235,148,51)"/><text x="347.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.12%)</title><rect x="344" y="1300" width="1" height="15" fill="rgb(245,64,14)"/><text x="347.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.12%)</title><rect x="344" y="1316" width="1" height="15" fill="rgb(234,56,49)"/><text x="347.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.12%)</title><rect x="344" y="1332" width="1" height="15" fill="rgb(246,99,27)"/><text x="347.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.12%)</title><rect x="344" y="1348" width="1" height="15" fill="rgb(224,49,53)"/><text x="347.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.12%)</title><rect x="344" y="1364" width="1" height="15" fill="rgb(229,207,16)"/><text x="347.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.12%)</title><rect x="344" y="1380" width="1" height="15" fill="rgb(209,47,43)"/><text x="347.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.12%)</title><rect x="344" y="1396" width="1" height="15" fill="rgb(228,101,54)"/><text x="347.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.12%)</title><rect x="345" y="1460" width="1" height="15" fill="rgb(206,141,15)"/><text x="348.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.12%)</title><rect x="345" y="1476" width="1" height="15" fill="rgb(213,94,2)"/><text x="348.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.12%)</title><rect x="345" y="1492" width="1" height="15" fill="rgb(230,200,31)"/><text x="348.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.12%)</title><rect x="345" y="1508" width="1" height="15" fill="rgb(209,136,51)"/><text x="348.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.12%)</title><rect x="345" y="1524" width="1" height="15" fill="rgb(252,87,30)"/><text x="348.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.12%)</title><rect x="345" y="1540" width="1" height="15" fill="rgb(213,33,18)"/><text x="348.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="345" y="1556" width="1" height="15" fill="rgb(214,151,41)"/><text x="348.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.12%)</title><rect x="345" y="1572" width="1" height="15" fill="rgb(241,213,34)"/><text x="348.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.12%)</title><rect x="345" y="1588" width="1" height="15" fill="rgb(217,86,51)"/><text x="348.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.12%)</title><rect x="345" y="1604" width="1" height="15" fill="rgb(213,197,46)"/><text x="348.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.12%)</title><rect x="345" y="1620" width="1" height="15" fill="rgb(227,229,33)"/><text x="348.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.12%)</title><rect x="345" y="1636" width="1" height="15" fill="rgb(217,63,54)"/><text x="348.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="345" y="1652" width="1" height="15" fill="rgb(253,40,42)"/><text x="348.00" y="1662.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.12%)</title><rect x="346" y="1732" width="2" height="15" fill="rgb(205,148,30)"/><text x="349.00" y="1742.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.12%)</title><rect x="346" y="1748" width="2" height="15" fill="rgb(243,167,25)"/><text x="349.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.12%)</title><rect x="346" y="1764" width="2" height="15" fill="rgb(211,72,10)"/><text x="349.00" y="1774.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.12%)</title><rect x="346" y="1780" width="2" height="15" fill="rgb(218,149,31)"/><text x="349.00" y="1790.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.12%)</title><rect x="346" y="1796" width="2" height="15" fill="rgb(232,221,50)"/><text x="349.00" y="1806.50"></text></g><g><title>iter_fields (jinja2/nodes.py:160) (1 samples, 0.12%)</title><rect x="346" y="1812" width="2" height="15" fill="rgb(218,170,46)"/><text x="349.00" y="1822.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:4) (16 samples, 1.90%)</title><rect x="327" y="52" width="22" height="15" fill="rgb(214,143,9)"/><text x="330.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 1.90%)</title><rect x="327" y="68" width="22" height="15" fill="rgb(222,63,22)"/><text x="330.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 1.90%)</title><rect x="327" y="84" width="22" height="15" fill="rgb(232,93,46)"/><text x="330.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 1.90%)</title><rect x="327" y="100" width="22" height="15" fill="rgb(224,216,20)"/><text x="330.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 1.90%)</title><rect x="327" y="116" width="22" height="15" fill="rgb(249,30,6)"/><text x="330.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 1.90%)</title><rect x="327" y="132" width="22" height="15" fill="rgb(235,39,3)"/><text x="330.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:7) (8 samples, 0.95%)</title><rect x="338" y="148" width="11" height="15" fill="rgb(233,17,43)"/><text x="341.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.95%)</title><rect x="338" y="164" width="11" height="15" fill="rgb(246,135,43)"/><text x="341.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.95%)</title><rect x="338" y="180" width="11" height="15" fill="rgb(210,205,12)"/><text x="341.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.95%)</title><rect x="338" y="196" width="11" height="15" fill="rgb(242,64,41)"/><text x="341.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.95%)</title><rect x="338" y="212" width="11" height="15" fill="rgb(211,188,50)"/><text x="341.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.95%)</title><rect x="338" y="228" width="11" height="15" fill="rgb(237,130,25)"/><text x="341.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 0.95%)</title><rect x="338" y="244" width="11" height="15" fill="rgb(248,125,21)"/><text x="341.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.95%)</title><rect x="338" y="260" width="11" height="15" fill="rgb(246,130,34)"/><text x="341.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.95%)</title><rect x="338" y="276" width="11" height="15" fill="rgb(222,8,4)"/><text x="341.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.95%)</title><rect x="338" y="292" width="11" height="15" fill="rgb(246,38,41)"/><text x="341.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.95%)</title><rect x="338" y="308" width="11" height="15" fill="rgb(232,0,49)"/><text x="341.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.95%)</title><rect x="338" y="324" width="11" height="15" fill="rgb(209,207,8)"/><text x="341.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 0.95%)</title><rect x="338" y="340" width="11" height="15" fill="rgb(245,207,17)"/><text x="341.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.95%)</title><rect x="338" y="356" width="11" height="15" fill="rgb(216,177,54)"/><text x="341.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.95%)</title><rect x="338" y="372" width="11" height="15" fill="rgb(242,124,11)"/><text x="341.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.95%)</title><rect x="338" y="388" width="11" height="15" fill="rgb(221,46,14)"/><text x="341.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.95%)</title><rect x="338" y="404" width="11" height="15" fill="rgb(210,42,1)"/><text x="341.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.95%)</title><rect x="338" y="420" width="11" height="15" fill="rgb(227,169,1)"/><text x="341.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.47%)</title><rect x="344" y="436" width="5" height="15" fill="rgb(222,62,14)"/><text x="347.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="452" width="5" height="15" fill="rgb(228,83,43)"/><text x="347.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.47%)</title><rect x="344" y="468" width="5" height="15" fill="rgb(212,185,0)"/><text x="347.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="484" width="5" height="15" fill="rgb(228,59,50)"/><text x="347.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="500" width="5" height="15" fill="rgb(246,194,19)"/><text x="347.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="344" y="516" width="5" height="15" fill="rgb(241,198,45)"/><text x="347.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="344" y="532" width="5" height="15" fill="rgb(210,193,7)"/><text x="347.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="344" y="548" width="5" height="15" fill="rgb(245,116,20)"/><text x="347.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="564" width="5" height="15" fill="rgb(232,168,30)"/><text x="347.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.47%)</title><rect x="344" y="580" width="5" height="15" fill="rgb(216,55,41)"/><text x="347.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="596" width="5" height="15" fill="rgb(243,3,53)"/><text x="347.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="344" y="612" width="5" height="15" fill="rgb(240,228,16)"/><text x="347.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="344" y="628" width="5" height="15" fill="rgb(211,59,27)"/><text x="347.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="344" y="644" width="5" height="15" fill="rgb(229,113,29)"/><text x="347.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="660" width="5" height="15" fill="rgb(251,16,8)"/><text x="347.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.47%)</title><rect x="344" y="676" width="5" height="15" fill="rgb(242,144,45)"/><text x="347.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="692" width="5" height="15" fill="rgb(244,132,2)"/><text x="347.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="344" y="708" width="5" height="15" fill="rgb(238,105,35)"/><text x="347.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="344" y="724" width="5" height="15" fill="rgb(245,186,24)"/><text x="347.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="344" y="740" width="5" height="15" fill="rgb(220,198,42)"/><text x="347.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="756" width="5" height="15" fill="rgb(237,68,51)"/><text x="347.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.47%)</title><rect x="344" y="772" width="5" height="15" fill="rgb(230,59,2)"/><text x="347.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="788" width="5" height="15" fill="rgb(244,119,54)"/><text x="347.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="344" y="804" width="5" height="15" fill="rgb(205,7,24)"/><text x="347.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="344" y="820" width="5" height="15" fill="rgb(227,193,14)"/><text x="347.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="344" y="836" width="5" height="15" fill="rgb(205,217,21)"/><text x="347.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="852" width="5" height="15" fill="rgb(253,46,13)"/><text x="347.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.47%)</title><rect x="344" y="868" width="5" height="15" fill="rgb(235,133,22)"/><text x="347.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="884" width="5" height="15" fill="rgb(212,128,33)"/><text x="347.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.47%)</title><rect x="344" y="900" width="5" height="15" fill="rgb(213,26,30)"/><text x="347.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="916" width="5" height="15" fill="rgb(240,123,36)"/><text x="347.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="932" width="5" height="15" fill="rgb(228,220,15)"/><text x="347.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="344" y="948" width="5" height="15" fill="rgb(246,15,26)"/><text x="347.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="344" y="964" width="5" height="15" fill="rgb(254,100,28)"/><text x="347.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="344" y="980" width="5" height="15" fill="rgb(239,155,42)"/><text x="347.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="996" width="5" height="15" fill="rgb(207,74,9)"/><text x="347.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.47%)</title><rect x="344" y="1012" width="5" height="15" fill="rgb(208,22,35)"/><text x="347.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.47%)</title><rect x="344" y="1028" width="5" height="15" fill="rgb(233,84,13)"/><text x="347.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.47%)</title><rect x="344" y="1044" width="5" height="15" fill="rgb(218,92,8)"/><text x="347.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.47%)</title><rect x="344" y="1060" width="5" height="15" fill="rgb(224,73,5)"/><text x="347.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.47%)</title><rect x="344" y="1076" width="5" height="15" fill="rgb(224,163,9)"/><text x="347.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.47%)</title><rect x="344" y="1092" width="5" height="15" fill="rgb(211,69,3)"/><text x="347.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.36%)</title><rect x="345" y="1108" width="4" height="15" fill="rgb(251,137,24)"/><text x="348.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.36%)</title><rect x="345" y="1124" width="4" height="15" fill="rgb(254,168,10)"/><text x="348.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="345" y="1140" width="4" height="15" fill="rgb(254,46,20)"/><text x="348.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="345" y="1156" width="4" height="15" fill="rgb(209,55,27)"/><text x="348.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="345" y="1172" width="4" height="15" fill="rgb(230,57,40)"/><text x="348.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="345" y="1188" width="4" height="15" fill="rgb(207,93,24)"/><text x="348.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="345" y="1204" width="4" height="15" fill="rgb(220,95,29)"/><text x="348.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="345" y="1220" width="4" height="15" fill="rgb(210,85,15)"/><text x="348.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.36%)</title><rect x="345" y="1236" width="4" height="15" fill="rgb(208,30,48)"/><text x="348.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.36%)</title><rect x="345" y="1252" width="4" height="15" fill="rgb(246,75,19)"/><text x="348.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="345" y="1268" width="4" height="15" fill="rgb(217,92,25)"/><text x="348.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="345" y="1284" width="4" height="15" fill="rgb(249,192,0)"/><text x="348.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="345" y="1300" width="4" height="15" fill="rgb(228,10,40)"/><text x="348.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="345" y="1316" width="4" height="15" fill="rgb(238,191,31)"/><text x="348.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="345" y="1332" width="4" height="15" fill="rgb(220,21,25)"/><text x="348.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="345" y="1348" width="4" height="15" fill="rgb(246,0,22)"/><text x="348.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.36%)</title><rect x="345" y="1364" width="4" height="15" fill="rgb(206,18,33)"/><text x="348.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="345" y="1380" width="4" height="15" fill="rgb(240,133,11)"/><text x="348.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="345" y="1396" width="4" height="15" fill="rgb(216,31,7)"/><text x="348.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="345" y="1412" width="4" height="15" fill="rgb(249,177,37)"/><text x="348.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="345" y="1428" width="4" height="15" fill="rgb(208,134,18)"/><text x="348.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="345" y="1444" width="4" height="15" fill="rgb(210,150,29)"/><text x="348.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.24%)</title><rect x="346" y="1460" width="3" height="15" fill="rgb(225,137,20)"/><text x="349.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="346" y="1476" width="3" height="15" fill="rgb(239,209,50)"/><text x="349.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="346" y="1492" width="3" height="15" fill="rgb(241,178,52)"/><text x="349.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="346" y="1508" width="3" height="15" fill="rgb(252,213,50)"/><text x="349.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="346" y="1524" width="3" height="15" fill="rgb(244,169,3)"/><text x="349.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="346" y="1540" width="3" height="15" fill="rgb(219,91,48)"/><text x="349.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.24%)</title><rect x="346" y="1556" width="3" height="15" fill="rgb(220,104,40)"/><text x="349.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (2 samples, 0.24%)</title><rect x="346" y="1572" width="3" height="15" fill="rgb(247,143,48)"/><text x="349.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.24%)</title><rect x="346" y="1588" width="3" height="15" fill="rgb(238,137,35)"/><text x="349.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.24%)</title><rect x="346" y="1604" width="3" height="15" fill="rgb(244,40,11)"/><text x="349.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (2 samples, 0.24%)</title><rect x="346" y="1620" width="3" height="15" fill="rgb(232,226,50)"/><text x="349.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (2 samples, 0.24%)</title><rect x="346" y="1636" width="3" height="15" fill="rgb(249,87,37)"/><text x="349.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (2 samples, 0.24%)</title><rect x="346" y="1652" width="3" height="15" fill="rgb(247,220,37)"/><text x="349.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (2 samples, 0.24%)</title><rect x="346" y="1668" width="3" height="15" fill="rgb(233,173,27)"/><text x="349.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (2 samples, 0.24%)</title><rect x="346" y="1684" width="3" height="15" fill="rgb(207,49,12)"/><text x="349.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (2 samples, 0.24%)</title><rect x="346" y="1700" width="3" height="15" fill="rgb(251,30,41)"/><text x="349.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (2 samples, 0.24%)</title><rect x="346" y="1716" width="3" height="15" fill="rgb(233,16,45)"/><text x="349.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1040) (1 samples, 0.12%)</title><rect x="348" y="1732" width="1" height="15" fill="rgb(228,49,32)"/><text x="351.00" y="1742.50"></text></g><g><title>analyze_node (jinja2/idtracking.py:41) (1 samples, 0.12%)</title><rect x="348" y="1748" width="1" height="15" fill="rgb(230,154,36)"/><text x="351.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="348" y="1764" width="1" height="15" fill="rgb(233,41,17)"/><text x="351.00" y="1774.50"></text></g><g><title>visit_For (jinja2/idtracking.py:190) (1 samples, 0.12%)</title><rect x="348" y="1780" width="1" height="15" fill="rgb(220,125,0)"/><text x="351.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="348" y="1796" width="1" height="15" fill="rgb(254,189,52)"/><text x="351.00" y="1806.50"></text></g><g><title>visit_If (jinja2/idtracking.py:233) (1 samples, 0.12%)</title><rect x="348" y="1812" width="1" height="15" fill="rgb(208,167,54)"/><text x="351.00" y="1822.50"></text></g><g><title>inner_visit (jinja2/idtracking.py:229) (1 samples, 0.12%)</title><rect x="348" y="1828" width="1" height="15" fill="rgb(207,194,31)"/><text x="351.00" y="1838.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="348" y="1844" width="1" height="15" fill="rgb(228,61,9)"/><text x="351.00" y="1854.50"></text></g><g><title>visit_If (jinja2/idtracking.py:233) (1 samples, 0.12%)</title><rect x="348" y="1860" width="1" height="15" fill="rgb(245,87,8)"/><text x="351.00" y="1870.50"></text></g><g><title>inner_visit (jinja2/idtracking.py:229) (1 samples, 0.12%)</title><rect x="348" y="1876" width="1" height="15" fill="rgb(209,95,16)"/><text x="351.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.12%)</title><rect x="348" y="1892" width="1" height="15" fill="rgb(239,28,53)"/><text x="351.00" y="1902.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.12%)</title><rect x="348" y="1908" width="1" height="15" fill="rgb(216,108,11)"/><text x="351.00" y="1918.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.12%)</title><rect x="348" y="1924" width="1" height="15" fill="rgb(216,137,41)"/><text x="351.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:36) (1 samples, 0.12%)</title><rect x="349" y="388" width="2" height="15" fill="rgb(242,212,47)"/><text x="352.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="349" y="404" width="2" height="15" fill="rgb(238,149,4)"/><text x="352.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="349" y="420" width="2" height="15" fill="rgb(223,23,26)"/><text x="352.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="349" y="436" width="2" height="15" fill="rgb(212,217,42)"/><text x="352.00" y="446.50"></text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:28) (2 samples, 0.24%)</title><rect x="349" y="84" width="3" height="15" fill="rgb(225,210,31)"/><text x="352.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.24%)</title><rect x="349" y="100" width="3" height="15" fill="rgb(218,176,18)"/><text x="352.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.24%)</title><rect x="349" y="116" width="3" height="15" fill="rgb(209,48,20)"/><text x="352.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.24%)</title><rect x="349" y="132" width="3" height="15" fill="rgb(230,158,34)"/><text x="352.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.24%)</title><rect x="349" y="148" width="3" height="15" fill="rgb(206,220,25)"/><text x="352.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.24%)</title><rect x="349" y="164" width="3" height="15" fill="rgb(223,43,28)"/><text x="352.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.24%)</title><rect x="349" y="180" width="3" height="15" fill="rgb(210,123,44)"/><text x="352.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.24%)</title><rect x="349" y="196" width="3" height="15" fill="rgb(235,60,41)"/><text x="352.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="349" y="212" width="3" height="15" fill="rgb(253,214,31)"/><text x="352.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="349" y="228" width="3" height="15" fill="rgb(236,58,42)"/><text x="352.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="349" y="244" width="3" height="15" fill="rgb(253,67,39)"/><text x="352.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="349" y="260" width="3" height="15" fill="rgb(232,130,44)"/><text x="352.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="349" y="276" width="3" height="15" fill="rgb(219,177,8)"/><text x="352.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.24%)</title><rect x="349" y="292" width="3" height="15" fill="rgb(226,152,28)"/><text x="352.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="349" y="308" width="3" height="15" fill="rgb(238,189,11)"/><text x="352.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="349" y="324" width="3" height="15" fill="rgb(209,67,43)"/><text x="352.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="349" y="340" width="3" height="15" fill="rgb(214,154,27)"/><text x="352.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="349" y="356" width="3" height="15" fill="rgb(217,206,52)"/><text x="352.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="349" y="372" width="3" height="15" fill="rgb(208,216,43)"/><text x="352.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.12%)</title><rect x="351" y="388" width="1" height="15" fill="rgb(206,38,7)"/><text x="354.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.12%)</title><rect x="351" y="404" width="1" height="15" fill="rgb(221,121,31)"/><text x="354.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.12%)</title><rect x="351" y="420" width="1" height="15" fill="rgb(209,116,33)"/><text x="354.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.12%)</title><rect x="351" y="436" width="1" height="15" fill="rgb(228,127,1)"/><text x="354.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="351" y="452" width="1" height="15" fill="rgb(221,135,30)"/><text x="354.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:107) (1 samples, 0.12%)</title><rect x="351" y="468" width="1" height="15" fill="rgb(238,32,32)"/><text x="354.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.12%)</title><rect x="351" y="484" width="1" height="15" fill="rgb(205,54,18)"/><text x="354.00" y="494.50"></text></g><g><title>getconstraint (mlprodict/onnxrt/doc/doc_helper.py:170) (1 samples, 0.12%)</title><rect x="351" y="500" width="1" height="15" fill="rgb(218,210,54)"/><text x="354.00" y="510.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="351" y="516" width="1" height="15" fill="rgb(236,183,38)"/><text x="354.00" y="526.50"></text></g><g><title>0x7fa24eca8c29 (?) (1 samples, 0.12%)</title><rect x="352" y="244" width="1" height="15" fill="rgb(223,14,25)"/><text x="355.00" y="254.50"></text></g><g><title>0x7fa24ecafd9e (?) (1 samples, 0.12%)</title><rect x="352" y="260" width="1" height="15" fill="rgb(245,215,39)"/><text x="355.00" y="270.50"></text></g><g><title>0x7fa24ecafc56 (?) (1 samples, 0.12%)</title><rect x="352" y="276" width="1" height="15" fill="rgb(215,190,44)"/><text x="355.00" y="286.50"></text></g><g><title>0x7fa24ecb5ac7 (?) (1 samples, 0.12%)</title><rect x="352" y="292" width="1" height="15" fill="rgb(243,115,10)"/><text x="355.00" y="302.50"></text></g><g><title>0x7fa24ecb4c5c (?) (1 samples, 0.12%)</title><rect x="352" y="308" width="1" height="15" fill="rgb(206,190,32)"/><text x="355.00" y="318.50"></text></g><g><title>0x7fa24ec9e31d (?) (1 samples, 0.12%)</title><rect x="352" y="324" width="1" height="15" fill="rgb(214,111,14)"/><text x="355.00" y="334.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (3 samples, 0.36%)</title><rect x="353" y="468" width="5" height="15" fill="rgb(249,57,31)"/><text x="356.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (3 samples, 0.36%)</title><rect x="353" y="484" width="5" height="15" fill="rgb(216,189,14)"/><text x="356.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (3 samples, 0.36%)</title><rect x="353" y="500" width="5" height="15" fill="rgb(207,75,6)"/><text x="356.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (3 samples, 0.36%)</title><rect x="353" y="516" width="5" height="15" fill="rgb(253,120,44)"/><text x="356.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.36%)</title><rect x="353" y="532" width="5" height="15" fill="rgb(248,227,28)"/><text x="356.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.36%)</title><rect x="353" y="548" width="5" height="15" fill="rgb(231,57,38)"/><text x="356.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (4 samples, 0.47%)</title><rect x="353" y="452" width="6" height="15" fill="rgb(222,34,5)"/><text x="356.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="358" y="468" width="1" height="15" fill="rgb(220,92,17)"/><text x="361.00" y="478.50"></text></g><g><title>0x7fa28db39a4c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="358" y="484" width="1" height="15" fill="rgb(251,220,24)"/><text x="361.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (2 samples, 0.24%)</title><rect x="360" y="468" width="3" height="15" fill="rgb(223,212,42)"/><text x="363.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:292) (8 samples, 0.95%)</title><rect x="363" y="468" width="11" height="15" fill="rgb(219,167,49)"/><text x="366.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (15 samples, 1.78%)</title><rect x="374" y="468" width="21" height="15" fill="rgb(247,180,36)"/><text x="377.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:294) (9 samples, 1.07%)</title><rect x="395" y="468" width="13" height="15" fill="rgb(211,97,45)"/><text x="398.00" y="478.50"></text></g><g><title>0x7fa28dd0bbc3 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="419" y="500" width="2" height="15" fill="rgb(237,45,33)"/><text x="422.00" y="510.50"></text></g><g><title>0x7fa28dd0bc04 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="421" y="500" width="1" height="15" fill="rgb(234,149,6)"/><text x="424.00" y="510.50"></text></g><g><title>0x7fa28dd0bc0c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="422" y="500" width="1" height="15" fill="rgb(235,182,33)"/><text x="425.00" y="510.50"></text></g><g><title>0x7fa28dd0bc28 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="423" y="500" width="2" height="15" fill="rgb(245,133,23)"/><text x="426.00" y="510.50"></text></g><g><title>0x7fa28dd0bc32 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="425" y="500" width="3" height="15" fill="rgb(216,58,47)"/><text x="428.00" y="510.50"></text></g><g><title>0x7fa28dd0bc46 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="428" y="500" width="1" height="15" fill="rgb(254,127,2)"/><text x="431.00" y="510.50"></text></g><g><title>0x7fa28dd0bc5a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="429" y="500" width="1" height="15" fill="rgb(253,137,14)"/><text x="432.00" y="510.50"></text></g><g><title>0x7fa28dd0bc7b (libm-2.29.so) (1 samples, 0.12%)</title><rect x="430" y="500" width="2" height="15" fill="rgb(222,195,20)"/><text x="433.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (53 samples, 6.28%)</title><rect x="359" y="452" width="74" height="15" fill="rgb(205,146,25)"/><text x="362.00" y="462.50">RuntimeS..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (18 samples, 2.13%)</title><rect x="408" y="468" width="25" height="15" fill="rgb(241,158,31)"/><text x="411.00" y="478.50">R..</text></g><g><title>expf32x (libm-2.29.so) (13 samples, 1.54%)</title><rect x="415" y="484" width="18" height="15" fill="rgb(209,206,17)"/><text x="418.00" y="494.50"></text></g><g><title>0x7fa28dd0bc7f (libm-2.29.so) (1 samples, 0.12%)</title><rect x="432" y="500" width="1" height="15" fill="rgb(240,136,14)"/><text x="435.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (1 samples, 0.12%)</title><rect x="433" y="452" width="2" height="15" fill="rgb(209,62,18)"/><text x="436.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:920) (1 samples, 0.12%)</title><rect x="433" y="468" width="2" height="15" fill="rgb(225,103,28)"/><text x="436.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:414) (1 samples, 0.12%)</title><rect x="435" y="452" width="1" height="15" fill="rgb(206,48,7)"/><text x="438.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (1 samples, 0.12%)</title><rect x="436" y="452" width="1" height="15" fill="rgb(247,1,29)"/><text x="439.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.12%)</title><rect x="437" y="500" width="2" height="15" fill="rgb(221,113,49)"/><text x="440.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1422) (1 samples, 0.12%)</title><rect x="437" y="516" width="2" height="15" fill="rgb(237,100,44)"/><text x="440.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.12%)</title><rect x="437" y="532" width="2" height="15" fill="rgb(218,225,40)"/><text x="440.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.24%)</title><rect x="439" y="500" width="3" height="15" fill="rgb(238,183,23)"/><text x="442.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.24%)</title><rect x="439" y="516" width="3" height="15" fill="rgb(240,1,53)"/><text x="442.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.24%)</title><rect x="439" y="532" width="3" height="15" fill="rgb(229,57,43)"/><text x="442.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.24%)</title><rect x="439" y="548" width="3" height="15" fill="rgb(210,123,53)"/><text x="442.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="439" y="564" width="3" height="15" fill="rgb(229,103,20)"/><text x="442.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="439" y="580" width="3" height="15" fill="rgb(249,63,36)"/><text x="442.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (4 samples, 0.47%)</title><rect x="437" y="452" width="6" height="15" fill="rgb(216,56,3)"/><text x="440.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (4 samples, 0.47%)</title><rect x="437" y="468" width="6" height="15" fill="rgb(254,17,40)"/><text x="440.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (4 samples, 0.47%)</title><rect x="437" y="484" width="6" height="15" fill="rgb(251,217,6)"/><text x="440.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="442" y="500" width="1" height="15" fill="rgb(246,61,49)"/><text x="445.00" y="510.50"></text></g><g><title>0x7fa28db3995e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="442" y="516" width="1" height="15" fill="rgb(225,155,36)"/><text x="445.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.12%)</title><rect x="443" y="500" width="1" height="15" fill="rgb(214,61,54)"/><text x="446.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1422) (1 samples, 0.12%)</title><rect x="443" y="516" width="1" height="15" fill="rgb(243,83,34)"/><text x="446.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.12%)</title><rect x="443" y="532" width="1" height="15" fill="rgb(254,107,47)"/><text x="446.00" y="542.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (2 samples, 0.24%)</title><rect x="443" y="484" width="3" height="15" fill="rgb(235,215,13)"/><text x="446.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.12%)</title><rect x="444" y="500" width="2" height="15" fill="rgb(229,170,6)"/><text x="447.00" y="510.50"></text></g><g><title>0x7fa28db59d97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="444" y="516" width="2" height="15" fill="rgb(249,120,6)"/><text x="447.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (1 samples, 0.12%)</title><rect x="446" y="484" width="1" height="15" fill="rgb(215,175,6)"/><text x="449.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (1 samples, 0.12%)</title><rect x="447" y="484" width="2" height="15" fill="rgb(208,92,31)"/><text x="450.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (1 samples, 0.12%)</title><rect x="449" y="484" width="1" height="15" fill="rgb(238,217,21)"/><text x="452.00" y="494.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:18) (71 samples, 8.41%)</title><rect x="352" y="100" width="99" height="15" fill="rgb(213,60,8)"/><text x="355.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (71 samples, 8.41%)</title><rect x="352" y="116" width="99" height="15" fill="rgb(222,126,6)"/><text x="355.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (71 samples, 8.41%)</title><rect x="352" y="132" width="99" height="15" fill="rgb(243,18,13)"/><text x="355.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (71 samples, 8.41%)</title><rect x="352" y="148" width="99" height="15" fill="rgb(251,153,53)"/><text x="355.00" y="158.50">run (mlprod..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (71 samples, 8.41%)</title><rect x="352" y="164" width="99" height="15" fill="rgb(220,155,22)"/><text x="355.00" y="174.50">_run_sequen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (71 samples, 8.41%)</title><rect x="352" y="180" width="99" height="15" fill="rgb(241,8,23)"/><text x="355.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (71 samples, 8.41%)</title><rect x="352" y="196" width="99" height="15" fill="rgb(214,11,32)"/><text x="355.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (71 samples, 8.41%)</title><rect x="352" y="212" width="99" height="15" fill="rgb(225,145,26)"/><text x="355.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (71 samples, 8.41%)</title><rect x="352" y="228" width="99" height="15" fill="rgb(208,229,23)"/><text x="355.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (70 samples, 8.29%)</title><rect x="353" y="244" width="98" height="15" fill="rgb(246,4,28)"/><text x="356.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (70 samples, 8.29%)</title><rect x="353" y="260" width="98" height="15" fill="rgb(243,195,27)"/><text x="356.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (70 samples, 8.29%)</title><rect x="353" y="276" width="98" height="15" fill="rgb(211,176,11)"/><text x="356.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (70 samples, 8.29%)</title><rect x="353" y="292" width="98" height="15" fill="rgb(235,22,35)"/><text x="356.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (70 samples, 8.29%)</title><rect x="353" y="308" width="98" height="15" fill="rgb(220,165,16)"/><text x="356.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (70 samples, 8.29%)</title><rect x="353" y="324" width="98" height="15" fill="rgb(246,219,33)"/><text x="356.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (70 samples, 8.29%)</title><rect x="353" y="340" width="98" height="15" fill="rgb(242,66,23)"/><text x="356.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h:538) (70 samples, 8.29%)</title><rect x="353" y="356" width="98" height="15" fill="rgb(229,52,22)"/><text x="356.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (70 samples, 8.29%)</title><rect x="353" y="372" width="98" height="15" fill="rgb(239,95,23)"/><text x="356.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (70 samples, 8.29%)</title><rect x="353" y="388" width="98" height="15" fill="rgb(223,96,5)"/><text x="356.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (70 samples, 8.29%)</title><rect x="353" y="404" width="98" height="15" fill="rgb(254,119,23)"/><text x="356.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (70 samples, 8.29%)</title><rect x="353" y="420" width="98" height="15" fill="rgb(206,102,28)"/><text x="356.00" y="430.50">RuntimeSVMC..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (70 samples, 8.29%)</title><rect x="353" y="436" width="98" height="15" fill="rgb(229,154,22)"/><text x="356.00" y="446.50">pybind11::g..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (6 samples, 0.71%)</title><rect x="443" y="452" width="8" height="15" fill="rgb(246,125,43)"/><text x="446.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (6 samples, 0.71%)</title><rect x="443" y="468" width="8" height="15" fill="rgb(238,152,0)"/><text x="446.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:358) (1 samples, 0.12%)</title><rect x="450" y="484" width="1" height="15" fill="rgb(206,155,39)"/><text x="453.00" y="494.50"></text></g><g><title>0x7fa27d6067a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="450" y="500" width="1" height="15" fill="rgb(223,52,37)"/><text x="453.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="453" y="468" width="1" height="15" fill="rgb(253,94,32)"/><text x="456.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.24%)</title><rect x="454" y="468" width="3" height="15" fill="rgb(243,179,8)"/><text x="457.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.24%)</title><rect x="454" y="484" width="3" height="15" fill="rgb(240,198,13)"/><text x="457.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.24%)</title><rect x="454" y="500" width="3" height="15" fill="rgb(245,1,23)"/><text x="457.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.24%)</title><rect x="454" y="516" width="3" height="15" fill="rgb(233,221,26)"/><text x="457.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="454" y="532" width="3" height="15" fill="rgb(231,214,15)"/><text x="457.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="454" y="548" width="3" height="15" fill="rgb(236,164,1)"/><text x="457.00" y="558.50"></text></g><g><title>0x7fa28db39906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="457" y="484" width="1" height="15" fill="rgb(249,120,43)"/><text x="460.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.24%)</title><rect x="457" y="468" width="3" height="15" fill="rgb(241,162,47)"/><text x="460.00" y="478.50"></text></g><g><title>0x7fa28db39998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="458" y="484" width="2" height="15" fill="rgb(227,42,54)"/><text x="461.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (7 samples, 0.83%)</title><rect x="451" y="452" width="10" height="15" fill="rgb(209,180,39)"/><text x="454.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.12%)</title><rect x="460" y="468" width="1" height="15" fill="rgb(226,174,51)"/><text x="463.00" y="478.50"></text></g><g><title>0x7fa24ec98440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="468" y="468" width="1" height="15" fill="rgb(206,6,36)"/><text x="471.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (1 samples, 0.12%)</title><rect x="469" y="468" width="2" height="15" fill="rgb(207,131,42)"/><text x="472.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:292) (35 samples, 4.15%)</title><rect x="471" y="468" width="49" height="15" fill="rgb(240,93,15)"/><text x="474.00" y="478.50">Runt..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (62 samples, 7.35%)</title><rect x="520" y="468" width="86" height="15" fill="rgb(237,147,43)"/><text x="523.00" y="478.50">RuntimeSVM..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:294) (29 samples, 3.44%)</title><rect x="606" y="468" width="41" height="15" fill="rgb(230,102,29)"/><text x="609.00" y="478.50">Run..</text></g><g><title>0x7fa28dc851b0 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="674" y="500" width="2" height="15" fill="rgb(249,113,34)"/><text x="677.00" y="510.50"></text></g><g><title>0x7fa28dd0bba0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="676" y="500" width="2" height="15" fill="rgb(207,122,37)"/><text x="679.00" y="510.50"></text></g><g><title>0x7fa28dd0bbb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="678" y="500" width="1" height="15" fill="rgb(233,224,22)"/><text x="681.00" y="510.50"></text></g><g><title>0x7fa28dd0bbba (libm-2.29.so) (3 samples, 0.36%)</title><rect x="679" y="500" width="4" height="15" fill="rgb(249,184,45)"/><text x="682.00" y="510.50"></text></g><g><title>0x7fa28dd0bbde (libm-2.29.so) (3 samples, 0.36%)</title><rect x="683" y="500" width="5" height="15" fill="rgb(223,8,5)"/><text x="686.00" y="510.50"></text></g><g><title>0x7fa28dd0bbe2 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="688" y="500" width="4" height="15" fill="rgb(205,0,29)"/><text x="691.00" y="510.50"></text></g><g><title>0x7fa28dd0bbeb (libm-2.29.so) (3 samples, 0.36%)</title><rect x="692" y="500" width="4" height="15" fill="rgb(238,203,23)"/><text x="695.00" y="510.50"></text></g><g><title>0x7fa28dd0bbfc (libm-2.29.so) (1 samples, 0.12%)</title><rect x="696" y="500" width="1" height="15" fill="rgb(208,213,10)"/><text x="699.00" y="510.50"></text></g><g><title>0x7fa28dd0bc04 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="697" y="500" width="2" height="15" fill="rgb(251,146,24)"/><text x="700.00" y="510.50"></text></g><g><title>0x7fa28dd0bc0c (libm-2.29.so) (2 samples, 0.24%)</title><rect x="699" y="500" width="3" height="15" fill="rgb(205,102,28)"/><text x="702.00" y="510.50"></text></g><g><title>0x7fa28dd0bc10 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="702" y="500" width="2" height="15" fill="rgb(240,83,48)"/><text x="705.00" y="510.50"></text></g><g><title>0x7fa28dd0bc28 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="704" y="500" width="2" height="15" fill="rgb(228,67,39)"/><text x="707.00" y="510.50"></text></g><g><title>0x7fa28dd0bc32 (libm-2.29.so) (4 samples, 0.47%)</title><rect x="706" y="500" width="5" height="15" fill="rgb(234,87,29)"/><text x="709.00" y="510.50"></text></g><g><title>0x7fa28dd0bc3e (libm-2.29.so) (2 samples, 0.24%)</title><rect x="711" y="500" width="3" height="15" fill="rgb(233,67,2)"/><text x="714.00" y="510.50"></text></g><g><title>0x7fa28dd0bc46 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="714" y="500" width="4" height="15" fill="rgb(227,167,25)"/><text x="717.00" y="510.50"></text></g><g><title>0x7fa28dd0bc52 (libm-2.29.so) (5 samples, 0.59%)</title><rect x="718" y="500" width="7" height="15" fill="rgb(208,60,11)"/><text x="721.00" y="510.50"></text></g><g><title>0x7fa28dd0bc5a (libm-2.29.so) (8 samples, 0.95%)</title><rect x="725" y="500" width="12" height="15" fill="rgb(214,176,51)"/><text x="728.00" y="510.50"></text></g><g><title>0x7fa28dd0bc6e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="737" y="500" width="1" height="15" fill="rgb(229,143,38)"/><text x="740.00" y="510.50"></text></g><g><title>0x7fa28dd0bc7b (libm-2.29.so) (6 samples, 0.71%)</title><rect x="738" y="500" width="8" height="15" fill="rgb(215,10,40)"/><text x="741.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (205 samples, 24.29%)</title><rect x="461" y="452" width="287" height="15" fill="rgb(236,215,19)"/><text x="464.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_g..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (72 samples, 8.53%)</title><rect x="647" y="468" width="101" height="15" fill="rgb(205,227,49)"/><text x="650.00" y="478.50">RuntimeSVMCl..</text></g><g><title>expf32x (libm-2.29.so) (60 samples, 7.11%)</title><rect x="664" y="484" width="84" height="15" fill="rgb(214,149,11)"/><text x="667.00" y="494.50">expf32x (..</text></g><g><title>0x7fa28dd0bc7f (libm-2.29.so) (1 samples, 0.12%)</title><rect x="746" y="500" width="2" height="15" fill="rgb(219,88,25)"/><text x="749.00" y="510.50"></text></g><g><title>0x7fa24ec98710 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="748" y="500" width="1" height="15" fill="rgb(246,65,48)"/><text x="751.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (2 samples, 0.24%)</title><rect x="748" y="452" width="2" height="15" fill="rgb(227,16,31)"/><text x="751.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (2 samples, 0.24%)</title><rect x="748" y="468" width="2" height="15" fill="rgb(234,157,12)"/><text x="751.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (2 samples, 0.24%)</title><rect x="748" y="484" width="2" height="15" fill="rgb(228,94,0)"/><text x="751.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (1 samples, 0.12%)</title><rect x="749" y="500" width="1" height="15" fill="rgb(243,116,27)"/><text x="752.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="749" y="516" width="1" height="15" fill="rgb(231,127,13)"/><text x="752.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="749" y="532" width="1" height="15" fill="rgb(217,3,49)"/><text x="752.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="749" y="548" width="1" height="15" fill="rgb(249,22,46)"/><text x="752.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="749" y="564" width="1" height="15" fill="rgb(227,190,25)"/><text x="752.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="749" y="580" width="1" height="15" fill="rgb(209,16,2)"/><text x="752.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:417) (1 samples, 0.12%)</title><rect x="750" y="452" width="2" height="15" fill="rgb(251,190,26)"/><text x="753.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:424) (1 samples, 0.12%)</title><rect x="752" y="452" width="1" height="15" fill="rgb(230,174,2)"/><text x="755.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:425) (1 samples, 0.12%)</title><rect x="753" y="452" width="2" height="15" fill="rgb(240,116,50)"/><text x="756.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::operator[] (stl_vector.h:781) (1 samples, 0.12%)</title><rect x="753" y="468" width="2" height="15" fill="rgb(239,39,0)"/><text x="756.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (3 samples, 0.36%)</title><rect x="755" y="452" width="4" height="15" fill="rgb(226,48,17)"/><text x="758.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:427) (1 samples, 0.12%)</title><rect x="759" y="452" width="1" height="15" fill="rgb(249,76,13)"/><text x="762.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (2 samples, 0.24%)</title><rect x="760" y="452" width="3" height="15" fill="rgb(240,209,8)"/><text x="763.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.12%)</title><rect x="763" y="500" width="1" height="15" fill="rgb(221,109,23)"/><text x="766.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="763" y="516" width="1" height="15" fill="rgb(224,186,46)"/><text x="766.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="763" y="532" width="1" height="15" fill="rgb(224,126,28)"/><text x="766.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="763" y="548" width="1" height="15" fill="rgb(250,94,19)"/><text x="766.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="763" y="564" width="1" height="15" fill="rgb(219,24,22)"/><text x="766.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="763" y="580" width="1" height="15" fill="rgb(236,150,15)"/><text x="766.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="764" y="500" width="2" height="15" fill="rgb(252,163,16)"/><text x="767.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="764" y="516" width="2" height="15" fill="rgb(240,7,44)"/><text x="767.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (3 samples, 0.36%)</title><rect x="763" y="452" width="4" height="15" fill="rgb(208,105,49)"/><text x="766.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (3 samples, 0.36%)</title><rect x="763" y="468" width="4" height="15" fill="rgb(224,69,53)"/><text x="766.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (3 samples, 0.36%)</title><rect x="763" y="484" width="4" height="15" fill="rgb(248,51,24)"/><text x="766.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.12%)</title><rect x="766" y="500" width="1" height="15" fill="rgb(208,160,31)"/><text x="769.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (1 samples, 0.12%)</title><rect x="767" y="452" width="2" height="15" fill="rgb(227,227,36)"/><text x="770.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (1 samples, 0.12%)</title><rect x="767" y="468" width="2" height="15" fill="rgb(251,125,46)"/><text x="770.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (1 samples, 0.12%)</title><rect x="767" y="484" width="2" height="15" fill="rgb(232,105,43)"/><text x="770.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:454) (1 samples, 0.12%)</title><rect x="769" y="452" width="1" height="15" fill="rgb(222,172,29)"/><text x="772.00" y="462.50"></text></g><g><title>std::min&lt;float&gt; (stl_algobase.h:200) (1 samples, 0.12%)</title><rect x="769" y="468" width="1" height="15" fill="rgb(233,228,25)"/><text x="772.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:308) (1 samples, 0.12%)</title><rect x="770" y="484" width="1" height="15" fill="rgb(224,107,2)"/><text x="773.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.12%)</title><rect x="770" y="500" width="1" height="15" fill="rgb(216,176,25)"/><text x="773.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="770" y="516" width="1" height="15" fill="rgb(205,6,18)"/><text x="773.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.24%)</title><rect x="771" y="500" width="3" height="15" fill="rgb(237,187,21)"/><text x="774.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.24%)</title><rect x="771" y="516" width="3" height="15" fill="rgb(235,33,12)"/><text x="774.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.24%)</title><rect x="771" y="532" width="3" height="15" fill="rgb(218,53,30)"/><text x="774.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.24%)</title><rect x="771" y="548" width="3" height="15" fill="rgb(206,22,7)"/><text x="774.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="771" y="564" width="3" height="15" fill="rgb(246,225,13)"/><text x="774.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="771" y="580" width="3" height="15" fill="rgb(250,74,0)"/><text x="774.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.12%)</title><rect x="774" y="500" width="2" height="15" fill="rgb(209,192,52)"/><text x="777.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.12%)</title><rect x="774" y="516" width="2" height="15" fill="rgb(240,156,45)"/><text x="777.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.12%)</title><rect x="774" y="532" width="2" height="15" fill="rgb(226,189,22)"/><text x="777.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.12%)</title><rect x="774" y="548" width="2" height="15" fill="rgb(227,210,29)"/><text x="777.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.12%)</title><rect x="774" y="564" width="2" height="15" fill="rgb(225,147,4)"/><text x="777.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.12%)</title><rect x="774" y="580" width="2" height="15" fill="rgb(243,112,17)"/><text x="777.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.12%)</title><rect x="774" y="596" width="2" height="15" fill="rgb(244,189,0)"/><text x="777.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.12%)</title><rect x="774" y="612" width="2" height="15" fill="rgb(244,215,15)"/><text x="777.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (1 samples, 0.12%)</title><rect x="774" y="628" width="2" height="15" fill="rgb(207,37,1)"/><text x="777.00" y="638.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.12%)</title><rect x="776" y="500" width="1" height="15" fill="rgb(241,212,50)"/><text x="779.00" y="510.50"></text></g><g><title>0x7fa28db59d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="776" y="516" width="1" height="15" fill="rgb(221,3,38)"/><text x="779.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="777" y="500" width="1" height="15" fill="rgb(226,30,7)"/><text x="780.00" y="510.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="777" y="516" width="1" height="15" fill="rgb(228,82,12)"/><text x="780.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (6 samples, 0.71%)</title><rect x="771" y="484" width="9" height="15" fill="rgb(237,165,38)"/><text x="774.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:443) (1 samples, 0.12%)</title><rect x="778" y="500" width="2" height="15" fill="rgb(246,37,33)"/><text x="781.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (1 samples, 0.12%)</title><rect x="780" y="484" width="1" height="15" fill="rgb(206,185,47)"/><text x="783.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.12%)</title><rect x="780" y="500" width="1" height="15" fill="rgb(237,26,43)"/><text x="783.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="780" y="516" width="1" height="15" fill="rgb(206,57,44)"/><text x="783.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="780" y="532" width="1" height="15" fill="rgb(244,193,19)"/><text x="783.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="780" y="548" width="1" height="15" fill="rgb(208,188,12)"/><text x="783.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="780" y="564" width="1" height="15" fill="rgb(250,100,10)"/><text x="783.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="780" y="580" width="1" height="15" fill="rgb(250,13,17)"/><text x="783.00" y="590.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (1 samples, 0.12%)</title><rect x="781" y="484" width="2" height="15" fill="rgb(229,171,13)"/><text x="784.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:45) (311 samples, 36.85%)</title><rect x="349" y="52" width="435" height="15" fill="rgb(227,148,15)"/><text x="352.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000..</text></g><g><title>profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:44) (311 samples, 36.85%)</title><rect x="349" y="68" width="435" height="15" fill="rgb(229,35,37)"/><text x="352.00" y="78.50">profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:29) (309 samples, 36.61%)</title><rect x="352" y="84" width="432" height="15" fill="rgb(252,24,43)"/><text x="355.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:23) (238 samples, 28.20%)</title><rect x="451" y="100" width="333" height="15" fill="rgb(226,205,37)"/><text x="454.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_k..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (238 samples, 28.20%)</title><rect x="451" y="116" width="333" height="15" fill="rgb(225,45,28)"/><text x="454.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (238 samples, 28.20%)</title><rect x="451" y="132" width="333" height="15" fill="rgb(235,206,41)"/><text x="454.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (238 samples, 28.20%)</title><rect x="451" y="148" width="333" height="15" fill="rgb(239,225,31)"/><text x="454.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (238 samples, 28.20%)</title><rect x="451" y="164" width="333" height="15" fill="rgb(215,178,17)"/><text x="454.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (238 samples, 28.20%)</title><rect x="451" y="180" width="333" height="15" fill="rgb(239,208,0)"/><text x="454.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (238 samples, 28.20%)</title><rect x="451" y="196" width="333" height="15" fill="rgb(232,63,44)"/><text x="454.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (238 samples, 28.20%)</title><rect x="451" y="212" width="333" height="15" fill="rgb(222,92,13)"/><text x="454.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (238 samples, 28.20%)</title><rect x="451" y="228" width="333" height="15" fill="rgb(210,104,40)"/><text x="454.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classif..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (238 samples, 28.20%)</title><rect x="451" y="244" width="333" height="15" fill="rgb(216,53,1)"/><text x="454.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11...</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (238 samples, 28.20%)</title><rect x="451" y="260" width="333" height="15" fill="rgb(219,74,43)"/><text x="454.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (238 samples, 28.20%)</title><rect x="451" y="276" width="333" height="15" fill="rgb(209,116,12)"/><text x="454.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (238 samples, 28.20%)</title><rect x="451" y="292" width="333" height="15" fill="rgb(238,213,52)"/><text x="454.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMC..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (238 samples, 28.20%)</title><rect x="451" y="308" width="333" height="15" fill="rgb(244,91,26)"/><text x="454.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMC..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (238 samples, 28.20%)</title><rect x="451" y="324" width="333" height="15" fill="rgb(247,144,11)"/><text x="454.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (238 samples, 28.20%)</title><rect x="451" y="340" width="333" height="15" fill="rgb(215,212,21)"/><text x="454.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy..</text></g><g><title>pybind11::array::~array (numpy.h:538) (238 samples, 28.20%)</title><rect x="451" y="356" width="333" height="15" fill="rgb(214,209,13)"/><text x="454.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (238 samples, 28.20%)</title><rect x="451" y="372" width="333" height="15" fill="rgb(247,14,44)"/><text x="454.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1311)</text></g><g><title>pybind11::object::~object (pytypes.h:240) (238 samples, 28.20%)</title><rect x="451" y="388" width="333" height="15" fill="rgb(245,81,19)"/><text x="454.00" y="398.50">pybind11::object::~object (pytypes.h:240)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (238 samples, 28.20%)</title><rect x="451" y="404" width="333" height="15" fill="rgb(229,207,24)"/><text x="454.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h:197)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (238 samples, 28.20%)</title><rect x="451" y="420" width="333" height="15" fill="rgb(226,131,47)"/><text x="454.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodi..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (238 samples, 28.20%)</title><rect x="451" y="436" width="333" height="15" fill="rgb(216,64,42)"/><text x="454.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_rel..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (10 samples, 1.18%)</title><rect x="770" y="452" width="14" height="15" fill="rgb(251,86,33)"/><text x="773.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (10 samples, 1.18%)</title><rect x="770" y="468" width="14" height="15" fill="rgb(220,1,30)"/><text x="773.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (1 samples, 0.12%)</title><rect x="783" y="484" width="1" height="15" fill="rgb(248,179,19)"/><text x="786.00" y="494.50"></text></g><g><title>0x7fa24db69ff9 (?) (1 samples, 0.12%)</title><rect x="787" y="212" width="1" height="15" fill="rgb(207,72,24)"/><text x="790.00" y="222.50"></text></g><g><title>0x7fa24db64ef6 (?) (1 samples, 0.12%)</title><rect x="787" y="228" width="1" height="15" fill="rgb(231,180,32)"/><text x="790.00" y="238.50"></text></g><g><title>0x7fa24db59962 (?) (1 samples, 0.12%)</title><rect x="787" y="244" width="1" height="15" fill="rgb(243,24,1)"/><text x="790.00" y="254.50"></text></g><g><title>0x7fa24db8d7a7 (?) (1 samples, 0.12%)</title><rect x="787" y="260" width="1" height="15" fill="rgb(249,26,47)"/><text x="790.00" y="270.50"></text></g><g><title>0x7fa24db8d379 (?) (1 samples, 0.12%)</title><rect x="787" y="276" width="1" height="15" fill="rgb(229,167,8)"/><text x="790.00" y="286.50"></text></g><g><title>0x7fa24dfeb8b8 (?) (1 samples, 0.12%)</title><rect x="787" y="292" width="1" height="15" fill="rgb(215,147,54)"/><text x="790.00" y="302.50"></text></g><g><title>0x7fa24dfe9c7f (?) (1 samples, 0.12%)</title><rect x="787" y="308" width="1" height="15" fill="rgb(224,125,43)"/><text x="790.00" y="318.50"></text></g><g><title>0x7fa24dffc99c (?) (1 samples, 0.12%)</title><rect x="787" y="324" width="1" height="15" fill="rgb(244,34,9)"/><text x="790.00" y="334.50"></text></g><g><title>0x7fa24dd01c62 (?) (1 samples, 0.12%)</title><rect x="787" y="340" width="1" height="15" fill="rgb(244,190,14)"/><text x="790.00" y="350.50"></text></g><g><title>expf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="787" y="356" width="1" height="15" fill="rgb(242,215,29)"/><text x="790.00" y="366.50"></text></g><g><title>0x7fa28dd0bc7f (libm-2.29.so) (1 samples, 0.12%)</title><rect x="787" y="372" width="1" height="15" fill="rgb(246,1,51)"/><text x="790.00" y="382.50"></text></g><g><title>0x7fa28db39998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="827" y="356" width="2" height="15" fill="rgb(211,139,46)"/><text x="830.00" y="366.50"></text></g><g><title>0x7fa28db39bd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="829" y="356" width="1" height="15" fill="rgb(228,157,30)"/><text x="832.00" y="366.50"></text></g><g><title>0x7fa28dc851b0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="834" y="372" width="2" height="15" fill="rgb(226,222,22)"/><text x="837.00" y="382.50"></text></g><g><title>0x7fa28dd0bc32 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="836" y="372" width="1" height="15" fill="rgb(245,62,4)"/><text x="839.00" y="382.50"></text></g><g><title>0x7fa28dd0bc52 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="837" y="372" width="2" height="15" fill="rgb(222,181,44)"/><text x="840.00" y="382.50"></text></g><g><title>0x7fa28dd0bc7b (libm-2.29.so) (1 samples, 0.12%)</title><rect x="839" y="372" width="1" height="15" fill="rgb(228,175,14)"/><text x="842.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (8 samples, 0.95%)</title><rect x="830" y="356" width="11" height="15" fill="rgb(211,125,43)"/><text x="833.00" y="366.50"></text></g><g><title>0x7fa28dd0bc7f (libm-2.29.so) (1 samples, 0.12%)</title><rect x="840" y="372" width="1" height="15" fill="rgb(247,177,4)"/><text x="843.00" y="382.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="841" y="356" width="6" height="15" fill="rgb(228,169,53)"/><text x="844.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="844" y="372" width="3" height="15" fill="rgb(226,84,19)"/><text x="847.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="844" y="388" width="3" height="15" fill="rgb(212,64,2)"/><text x="847.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="844" y="404" width="3" height="15" fill="rgb(223,65,51)"/><text x="847.00" y="414.50"></text></g><g><title>0x7fa28db59d5f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="847" y="372" width="1" height="15" fill="rgb(249,171,26)"/><text x="850.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 5.21%)</title><rect x="788" y="260" width="62" height="15" fill="rgb(209,63,8)"/><text x="791.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 5.21%)</title><rect x="788" y="276" width="62" height="15" fill="rgb(215,78,31)"/><text x="791.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 5.21%)</title><rect x="788" y="292" width="62" height="15" fill="rgb(248,166,19)"/><text x="791.00" y="302.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 5.21%)</title><rect x="788" y="308" width="62" height="15" fill="rgb(210,19,30)"/><text x="791.00" y="318.50">onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 5.21%)</title><rect x="788" y="324" width="62" height="15" fill="rgb(229,200,35)"/><text x="791.00" y="334.50">onnxru..</text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 5.21%)</title><rect x="788" y="340" width="62" height="15" fill="rgb(237,98,4)"/><text x="791.00" y="350.50">onnxru..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="847" y="356" width="3" height="15" fill="rgb(231,197,16)"/><text x="850.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="848" y="372" width="2" height="15" fill="rgb(228,86,27)"/><text x="851.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="848" y="388" width="2" height="15" fill="rgb(251,127,30)"/><text x="851.00" y="398.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:18) (51 samples, 6.04%)</title><rect x="784" y="100" width="71" height="15" fill="rgb(225,141,13)"/><text x="787.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (50 samples, 5.92%)</title><rect x="785" y="116" width="70" height="15" fill="rgb(253,61,14)"/><text x="788.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (49 samples, 5.81%)</title><rect x="787" y="132" width="68" height="15" fill="rgb(205,142,47)"/><text x="790.00" y="142.50">&lt;lambda..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (49 samples, 5.81%)</title><rect x="787" y="148" width="68" height="15" fill="rgb(228,78,4)"/><text x="790.00" y="158.50">run (ml..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (49 samples, 5.81%)</title><rect x="787" y="164" width="68" height="15" fill="rgb(219,139,23)"/><text x="790.00" y="174.50">_run_wh..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (49 samples, 5.81%)</title><rect x="787" y="180" width="68" height="15" fill="rgb(236,204,12)"/><text x="790.00" y="190.50">run (ml..</text></g><g><title>run (onnxruntime/capi/session.py:136) (49 samples, 5.81%)</title><rect x="787" y="196" width="68" height="15" fill="rgb(219,30,21)"/><text x="790.00" y="206.50">run (on..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 5.69%)</title><rect x="788" y="212" width="67" height="15" fill="rgb(232,115,7)"/><text x="791.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 5.69%)</title><rect x="788" y="228" width="67" height="15" fill="rgb(252,124,31)"/><text x="791.00" y="238.50">void py..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 5.69%)</title><rect x="788" y="244" width="67" height="15" fill="rgb(227,221,7)"/><text x="791.00" y="254.50">onnxrun..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="850" y="260" width="5" height="15" fill="rgb(228,73,23)"/><text x="853.00" y="270.50"></text></g><g><title>0x7fa28dd0bba0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1066" y="372" width="2" height="15" fill="rgb(240,69,47)"/><text x="1069.00" y="382.50"></text></g><g><title>0x7fa28dd0bbb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1068" y="372" width="1" height="15" fill="rgb(224,99,12)"/><text x="1071.00" y="382.50"></text></g><g><title>0x7fa28dd0bbc3 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1069" y="372" width="2" height="15" fill="rgb(211,109,49)"/><text x="1072.00" y="382.50"></text></g><g><title>0x7fa28dd0bbe2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1071" y="372" width="1" height="15" fill="rgb(234,135,26)"/><text x="1074.00" y="382.50"></text></g><g><title>0x7fa28dd0bbeb (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1072" y="372" width="1" height="15" fill="rgb(250,225,34)"/><text x="1075.00" y="382.50"></text></g><g><title>0x7fa28dd0bc04 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1073" y="372" width="3" height="15" fill="rgb(254,228,19)"/><text x="1076.00" y="382.50"></text></g><g><title>0x7fa28dd0bc10 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="1076" y="372" width="4" height="15" fill="rgb(226,86,8)"/><text x="1079.00" y="382.50"></text></g><g><title>0x7fa28dd0bc28 (libm-2.29.so) (4 samples, 0.47%)</title><rect x="1080" y="372" width="6" height="15" fill="rgb(222,186,33)"/><text x="1083.00" y="382.50"></text></g><g><title>0x7fa28dd0bc32 (libm-2.29.so) (5 samples, 0.59%)</title><rect x="1086" y="372" width="7" height="15" fill="rgb(229,125,22)"/><text x="1089.00" y="382.50"></text></g><g><title>0x7fa28dd0bc3e (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1093" y="372" width="3" height="15" fill="rgb(206,73,36)"/><text x="1096.00" y="382.50"></text></g><g><title>0x7fa28dd0bc46 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="1096" y="372" width="4" height="15" fill="rgb(234,100,48)"/><text x="1099.00" y="382.50"></text></g><g><title>0x7fa28dd0bc52 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="1100" y="372" width="4" height="15" fill="rgb(214,206,25)"/><text x="1103.00" y="382.50"></text></g><g><title>0x7fa28dd0bc5a (libm-2.29.so) (3 samples, 0.36%)</title><rect x="1104" y="372" width="4" height="15" fill="rgb(216,150,40)"/><text x="1107.00" y="382.50"></text></g><g><title>0x7fa28dd0bc6e (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1108" y="372" width="3" height="15" fill="rgb(229,69,51)"/><text x="1111.00" y="382.50"></text></g><g><title>0x7fa28dd0bc7b (libm-2.29.so) (8 samples, 0.95%)</title><rect x="1111" y="372" width="11" height="15" fill="rgb(206,9,24)"/><text x="1114.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (55 samples, 6.52%)</title><rect x="1048" y="356" width="77" height="15" fill="rgb(240,147,52)"/><text x="1051.00" y="366.50">expf32x ..</text></g><g><title>0x7fa28dd0bc7f (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1122" y="372" width="3" height="15" fill="rgb(221,101,20)"/><text x="1125.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1125" y="356" width="2" height="15" fill="rgb(254,133,12)"/><text x="1128.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1125" y="372" width="2" height="15" fill="rgb(216,180,32)"/><text x="1128.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1125" y="388" width="2" height="15" fill="rgb(236,43,23)"/><text x="1128.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1125" y="404" width="2" height="15" fill="rgb(234,164,9)"/><text x="1128.00" y="414.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1125" y="420" width="2" height="15" fill="rgb(205,167,37)"/><text x="1128.00" y="430.50"></text></g><g><title>0x7fa28db3991c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1149" y="388" width="1" height="15" fill="rgb(227,86,12)"/><text x="1152.00" y="398.50"></text></g><g><title>0x7fa28db39991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1150" y="388" width="2" height="15" fill="rgb(250,43,41)"/><text x="1153.00" y="398.50"></text></g><g><title>0x7fa28db39a4d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1152" y="388" width="1" height="15" fill="rgb(217,36,42)"/><text x="1155.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1153" y="388" width="2" height="15" fill="rgb(215,46,1)"/><text x="1156.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.61%)</title><rect x="1127" y="356" width="30" height="15" fill="rgb(239,161,9)"/><text x="1130.00" y="366.50">on..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.07%)</title><rect x="1145" y="372" width="12" height="15" fill="rgb(219,146,48)"/><text x="1148.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="1155" y="388" width="2" height="15" fill="rgb(245,92,7)"/><text x="1158.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1156" y="404" width="1" height="15" fill="rgb(236,94,1)"/><text x="1159.00" y="414.50"></text></g><g><title>0x7fa27d6067a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1160" y="372" width="2" height="15" fill="rgb(227,185,16)"/><text x="1163.00" y="382.50"></text></g><g><title>0x7fa28db3990e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1162" y="372" width="1" height="15" fill="rgb(239,13,44)"/><text x="1165.00" y="382.50"></text></g><g><title>0x7fa28db39982 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1163" y="372" width="1" height="15" fill="rgb(248,214,29)"/><text x="1166.00" y="382.50"></text></g><g><title>0x7fa28db59e1b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1164" y="372" width="2" height="15" fill="rgb(231,91,41)"/><text x="1167.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1166" y="372" width="1" height="15" fill="rgb(225,52,29)"/><text x="1169.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.07%)</title><rect x="1157" y="356" width="13" height="15" fill="rgb(206,96,47)"/><text x="1160.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="1167" y="372" width="3" height="15" fill="rgb(223,92,4)"/><text x="1170.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="1167" y="388" width="3" height="15" fill="rgb(229,27,43)"/><text x="1170.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (226 samples, 26.78%)</title><rect x="857" y="340" width="316" height="15" fill="rgb(243,189,21)"/><text x="860.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Com..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="1170" y="356" width="3" height="15" fill="rgb(244,3,21)"/><text x="1173.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1171" y="372" width="2" height="15" fill="rgb(226,190,6)"/><text x="1174.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1171" y="388" width="2" height="15" fill="rgb(217,221,28)"/><text x="1174.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.59%)</title><rect x="1173" y="356" width="7" height="15" fill="rgb(228,226,29)"/><text x="1176.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.59%)</title><rect x="1173" y="372" width="7" height="15" fill="rgb(225,82,23)"/><text x="1176.00" y="382.50"></text></g><g><title>0x7fa28db3ab61 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1178" y="388" width="2" height="15" fill="rgb(220,229,21)"/><text x="1181.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (233 samples, 27.61%)</title><rect x="857" y="260" width="326" height="15" fill="rgb(225,87,9)"/><text x="860.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (233 samples, 27.61%)</title><rect x="857" y="276" width="326" height="15" fill="rgb(239,72,29)"/><text x="860.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (233 samples, 27.61%)</title><rect x="857" y="292" width="326" height="15" fill="rgb(228,12,37)"/><text x="860.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (233 samples, 27.61%)</title><rect x="857" y="308" width="326" height="15" fill="rgb(235,37,21)"/><text x="860.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (233 samples, 27.61%)</title><rect x="857" y="324" width="326" height="15" fill="rgb(242,73,47)"/><text x="860.00" y="334.50">onnxruntime::SequentialExecutor::Execute (on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.83%)</title><rect x="1173" y="340" width="10" height="15" fill="rgb(240,121,35)"/><text x="1176.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="1180" y="356" width="3" height="15" fill="rgb(236,22,27)"/><text x="1183.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1181" y="372" width="2" height="15" fill="rgb(232,139,1)"/><text x="1184.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1181" y="388" width="2" height="15" fill="rgb(244,116,49)"/><text x="1184.00" y="398.50"></text></g><g><title>0x7fa28db3b028 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1181" y="404" width="2" height="15" fill="rgb(221,186,17)"/><text x="1184.00" y="414.50"></text></g><g><title>0x7fa28db38c20 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1181" y="420" width="2" height="15" fill="rgb(218,131,40)"/><text x="1184.00" y="430.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="1183" y="260" width="4" height="15" fill="rgb(252,15,35)"/><text x="1186.00" y="270.50"></text></g><g><title>0x7fa28db39d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(243,223,31)"/><text x="1190.00" y="302.50"></text></g><g><title>all (844 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(227,218,43)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:52) (290 samples, 34.36%)</title><rect x="784" y="52" width="406" height="15" fill="rgb(233,2,19)"/><text x="787.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_..</text></g><g><title>profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:51) (290 samples, 34.36%)</title><rect x="784" y="68" width="406" height="15" fill="rgb(250,201,4)"/><text x="787.00" y="78.50">profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelr..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:29) (290 samples, 34.36%)</title><rect x="784" y="84" width="406" height="15" fill="rgb(216,2,53)"/><text x="787.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kerne..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py:23) (239 samples, 28.32%)</title><rect x="855" y="100" width="335" height="15" fill="rgb(244,26,36)"/><text x="858.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_k..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (238 samples, 28.20%)</title><rect x="857" y="116" width="333" height="15" fill="rgb(225,112,1)"/><text x="860.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (238 samples, 28.20%)</title><rect x="857" y="132" width="333" height="15" fill="rgb(239,217,21)"/><text x="860.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (238 samples, 28.20%)</title><rect x="857" y="148" width="333" height="15" fill="rgb(244,121,7)"/><text x="860.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (238 samples, 28.20%)</title><rect x="857" y="164" width="333" height="15" fill="rgb(210,75,18)"/><text x="860.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (238 samples, 28.20%)</title><rect x="857" y="180" width="333" height="15" fill="rgb(235,23,32)"/><text x="860.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (238 samples, 28.20%)</title><rect x="857" y="196" width="333" height="15" fill="rgb(229,112,41)"/><text x="860.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (238 samples, 28.20%)</title><rect x="857" y="212" width="333" height="15" fill="rgb(238,25,36)"/><text x="860.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrunti..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (238 samples, 28.20%)</title><rect x="857" y="228" width="333" height="15" fill="rgb(230,37,31)"/><text x="860.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxr..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (238 samples, 28.20%)</title><rect x="857" y="244" width="333" height="15" fill="rgb(208,39,40)"/><text x="860.00" y="254.50">onnxruntime::python::addObjectMethods(pybind1..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(209,214,27)"/><text x="1190.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(226,0,13)"/><text x="1190.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(253,222,3)"/><text x="1191.00" y="302.50"></text></g><g><title>0x7fa28db39d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(226,124,3)"/><text x="1191.00" y="318.50"></text></g></g></svg>