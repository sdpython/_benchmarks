<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1494" onload="init(evt)" viewBox="0 0 1200 1494" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1494" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1477.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1477.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(222,103,30)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(232,133,39)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(253,228,45)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(213,36,45)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(220,133,27)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(240,71,26)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(217,212,15)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(226,98,7)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(225,191,15)"/><text x="13.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(214,199,13)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(229,165,49)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(223,182,22)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(235,206,51)"/><text x="14.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(216,107,51)"/><text x="14.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(210,204,29)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(231,34,8)"/><text x="14.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.22%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(211,193,4)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.22%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(229,191,24)"/><text x="14.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.22%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(216,115,23)"/><text x="14.00" y="1022.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="12" y="1028" width="1" height="15" fill="rgb(230,99,35)"/><text x="15.00" y="1038.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(230,135,0)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(233,70,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(245,87,14)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(233,74,24)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(240,151,36)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(216,15,13)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.54%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(205,215,45)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(235,182,10)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(246,190,52)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(209,172,42)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(217,47,14)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(241,124,19)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.54%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(246,45,6)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(222,139,41)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(252,150,33)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(248,137,30)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(219,107,44)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(240,32,37)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.54%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(216,180,35)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(218,60,46)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(208,27,35)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(226,28,41)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(230,82,17)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(211,164,33)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(206,14,11)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(209,129,17)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(206,92,42)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(243,67,20)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(218,144,42)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(253,72,0)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(254,16,38)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(214,29,27)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(233,55,10)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(244,47,7)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(242,105,33)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(221,109,9)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(231,3,4)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(211,31,3)"/><text x="16.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(206,103,12)"/><text x="16.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(250,190,33)"/><text x="16.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(236,131,9)"/><text x="16.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.22%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(238,159,1)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.22%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(251,20,18)"/><text x="16.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(213,219,33)"/><text x="18.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(250,162,12)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(224,151,38)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="820" width="1" height="15" fill="rgb(219,78,42)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(221,19,25)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(238,101,5)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(233,212,39)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(243,71,22)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(247,217,41)"/><text x="19.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(220,165,46)"/><text x="19.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(205,86,46)"/><text x="19.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(210,26,4)"/><text x="19.00" y="958.50"></text></g><g><title>0x7f98b9794933 (?) (1 samples, 0.11%)</title><rect x="16" y="964" width="1" height="15" fill="rgb(234,108,24)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(219,40,19)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(228,112,30)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(220,216,19)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(235,178,5)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(248,212,10)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(227,155,46)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.22%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(211,187,36)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="308" width="2" height="15" fill="rgb(210,109,39)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="324" width="2" height="15" fill="rgb(228,184,23)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="340" width="2" height="15" fill="rgb(241,63,1)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="356" width="2" height="15" fill="rgb(217,142,13)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="372" width="2" height="15" fill="rgb(234,174,7)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.22%)</title><rect x="16" y="388" width="2" height="15" fill="rgb(209,87,33)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="404" width="2" height="15" fill="rgb(207,67,51)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="420" width="2" height="15" fill="rgb(244,188,29)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="436" width="2" height="15" fill="rgb(222,29,32)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="452" width="2" height="15" fill="rgb(233,207,5)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="468" width="2" height="15" fill="rgb(244,57,30)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.22%)</title><rect x="16" y="484" width="2" height="15" fill="rgb(207,42,38)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="500" width="2" height="15" fill="rgb(226,207,48)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="516" width="2" height="15" fill="rgb(213,25,33)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="532" width="2" height="15" fill="rgb(208,132,51)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="548" width="2" height="15" fill="rgb(244,87,51)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="564" width="2" height="15" fill="rgb(210,61,25)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.22%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(228,24,49)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(231,187,41)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(226,79,21)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(237,47,13)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(217,56,17)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(234,134,45)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.22%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(212,181,27)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(244,146,51)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(207,173,1)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(212,139,22)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="740" width="2" height="15" fill="rgb(214,119,48)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="756" width="2" height="15" fill="rgb(230,54,2)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.22%)</title><rect x="16" y="772" width="2" height="15" fill="rgb(247,57,44)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="788" width="1" height="15" fill="rgb(206,147,51)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="804" width="1" height="15" fill="rgb(245,43,54)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="820" width="1" height="15" fill="rgb(232,116,12)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="836" width="1" height="15" fill="rgb(230,211,53)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="852" width="1" height="15" fill="rgb(211,4,46)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="868" width="1" height="15" fill="rgb(222,121,16)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="884" width="1" height="15" fill="rgb(229,171,0)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.11%)</title><rect x="17" y="900" width="1" height="15" fill="rgb(240,216,34)"/><text x="20.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="916" width="1" height="15" fill="rgb(210,214,33)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="932" width="1" height="15" fill="rgb(228,187,29)"/><text x="20.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="948" width="1" height="15" fill="rgb(220,187,13)"/><text x="20.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="964" width="1" height="15" fill="rgb(244,80,44)"/><text x="20.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="980" width="1" height="15" fill="rgb(207,36,41)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="17" y="996" width="1" height="15" fill="rgb(213,82,34)"/><text x="20.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1012" width="1" height="15" fill="rgb(239,221,22)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1028" width="1" height="15" fill="rgb(245,67,24)"/><text x="20.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1044" width="1" height="15" fill="rgb(209,109,15)"/><text x="20.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1060" width="1" height="15" fill="rgb(251,150,51)"/><text x="20.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1076" width="1" height="15" fill="rgb(229,144,49)"/><text x="20.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/misc/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="1092" width="1" height="15" fill="rgb(250,127,2)"/><text x="20.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1108" width="1" height="15" fill="rgb(215,172,24)"/><text x="20.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1124" width="1" height="15" fill="rgb(239,109,54)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1140" width="1" height="15" fill="rgb(216,164,28)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1156" width="1" height="15" fill="rgb(210,111,36)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1172" width="1" height="15" fill="rgb(233,1,9)"/><text x="20.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1188" width="1" height="15" fill="rgb(209,155,49)"/><text x="20.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1204" width="1" height="15" fill="rgb(246,180,32)"/><text x="20.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1220" width="1" height="15" fill="rgb(232,145,20)"/><text x="20.00" y="1230.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1236" width="1" height="15" fill="rgb(222,148,40)"/><text x="20.00" y="1246.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.11%)</title><rect x="17" y="1252" width="1" height="15" fill="rgb(229,108,34)"/><text x="20.00" y="1262.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1268" width="1" height="15" fill="rgb(245,5,14)"/><text x="20.00" y="1278.50"></text></g><g><title>0x7f98ce50a237 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1284" width="1" height="15" fill="rgb(214,18,33)"/><text x="20.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(251,207,7)"/><text x="21.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(219,183,39)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(237,17,34)"/><text x="21.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(246,156,11)"/><text x="21.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(234,118,46)"/><text x="21.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(206,127,11)"/><text x="21.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="1348" width="2" height="15" fill="rgb(250,223,47)"/><text x="21.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1364" width="2" height="15" fill="rgb(212,57,38)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1380" width="2" height="15" fill="rgb(223,123,13)"/><text x="21.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1396" width="2" height="15" fill="rgb(240,21,29)"/><text x="21.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1412" width="2" height="15" fill="rgb(211,173,0)"/><text x="21.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1428" width="2" height="15" fill="rgb(243,89,21)"/><text x="21.00" y="1438.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1444" width="2" height="15" fill="rgb(235,174,6)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="18" y="340" width="3" height="15" fill="rgb(228,170,29)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="356" width="3" height="15" fill="rgb(248,62,16)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="372" width="3" height="15" fill="rgb(232,167,27)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="388" width="3" height="15" fill="rgb(241,76,19)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="404" width="3" height="15" fill="rgb(246,94,23)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="420" width="3" height="15" fill="rgb(244,135,39)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (2 samples, 0.22%)</title><rect x="18" y="436" width="3" height="15" fill="rgb(206,130,35)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="452" width="3" height="15" fill="rgb(252,168,12)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="468" width="3" height="15" fill="rgb(236,107,22)"/><text x="21.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="484" width="3" height="15" fill="rgb(244,99,20)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="500" width="3" height="15" fill="rgb(216,104,7)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="516" width="3" height="15" fill="rgb(230,158,36)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="532" width="3" height="15" fill="rgb(238,180,18)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="548" width="3" height="15" fill="rgb(240,67,8)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="564" width="3" height="15" fill="rgb(212,210,24)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.22%)</title><rect x="18" y="580" width="3" height="15" fill="rgb(233,30,4)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="596" width="3" height="15" fill="rgb(244,197,22)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="612" width="3" height="15" fill="rgb(214,70,26)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="628" width="3" height="15" fill="rgb(212,156,41)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="644" width="3" height="15" fill="rgb(253,224,37)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="660" width="3" height="15" fill="rgb(215,86,41)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.22%)</title><rect x="18" y="676" width="3" height="15" fill="rgb(237,95,32)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="692" width="3" height="15" fill="rgb(222,29,6)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="708" width="3" height="15" fill="rgb(212,28,47)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="724" width="3" height="15" fill="rgb(252,201,30)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="740" width="3" height="15" fill="rgb(240,49,47)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="756" width="3" height="15" fill="rgb(235,41,22)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.22%)</title><rect x="18" y="772" width="3" height="15" fill="rgb(254,188,50)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="788" width="3" height="15" fill="rgb(236,228,26)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="804" width="3" height="15" fill="rgb(211,89,4)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="820" width="3" height="15" fill="rgb(206,222,44)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="836" width="3" height="15" fill="rgb(218,79,11)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="852" width="3" height="15" fill="rgb(236,101,30)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.22%)</title><rect x="18" y="868" width="3" height="15" fill="rgb(211,102,28)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(244,195,11)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(208,43,0)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(248,189,2)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(217,124,25)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(233,209,23)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(207,212,46)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="980" width="3" height="15" fill="rgb(224,50,15)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="996" width="3" height="15" fill="rgb(241,109,1)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.22%)</title><rect x="18" y="1012" width="3" height="15" fill="rgb(254,40,37)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1028" width="3" height="15" fill="rgb(244,8,15)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1044" width="3" height="15" fill="rgb(247,46,49)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1060" width="3" height="15" fill="rgb(205,74,2)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="1076" width="3" height="15" fill="rgb(227,48,42)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1092" width="3" height="15" fill="rgb(207,216,6)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.22%)</title><rect x="18" y="1108" width="3" height="15" fill="rgb(237,36,35)"/><text x="21.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1124" width="3" height="15" fill="rgb(254,130,24)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1140" width="3" height="15" fill="rgb(247,161,16)"/><text x="21.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1156" width="3" height="15" fill="rgb(251,59,48)"/><text x="21.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="1172" width="3" height="15" fill="rgb(229,227,8)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1188" width="3" height="15" fill="rgb(229,95,38)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.22%)</title><rect x="18" y="1204" width="3" height="15" fill="rgb(211,31,42)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1220" width="3" height="15" fill="rgb(227,12,52)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1236" width="3" height="15" fill="rgb(228,183,33)"/><text x="21.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(214,217,46)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(239,3,14)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(217,43,6)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(230,5,35)"/><text x="23.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(205,156,5)"/><text x="23.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.11%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(208,189,39)"/><text x="23.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.11%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(224,71,25)"/><text x="23.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.11%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(227,168,16)"/><text x="23.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.11%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(217,184,51)"/><text x="23.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(244,2,18)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py) (1 samples, 0.11%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(237,98,14)"/><text x="24.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py) (2 samples, 0.22%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(250,94,32)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(234,143,39)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(243,224,34)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(213,29,18)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(238,12,18)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="564" width="3" height="15" fill="rgb(206,190,26)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py) (2 samples, 0.22%)</title><rect x="21" y="580" width="3" height="15" fill="rgb(233,122,13)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="596" width="3" height="15" fill="rgb(237,178,30)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="612" width="3" height="15" fill="rgb(213,122,13)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(224,2,53)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(224,77,24)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(242,113,23)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py) (2 samples, 0.22%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(214,168,20)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(245,164,31)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(217,197,50)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(217,21,11)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(208,143,44)"/><text x="24.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(234,46,51)"/><text x="25.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(247,27,32)"/><text x="25.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 0.54%)</title><rect x="18" y="244" width="7" height="15" fill="rgb(214,74,33)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="18" y="260" width="7" height="15" fill="rgb(247,11,18)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="18" y="276" width="7" height="15" fill="rgb(208,58,35)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="18" y="292" width="7" height="15" fill="rgb(244,85,12)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="18" y="308" width="7" height="15" fill="rgb(235,27,30)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="18" y="324" width="7" height="15" fill="rgb(246,188,43)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.32%)</title><rect x="21" y="340" width="4" height="15" fill="rgb(250,38,10)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="21" y="356" width="4" height="15" fill="rgb(217,144,37)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="21" y="372" width="4" height="15" fill="rgb(237,36,51)"/><text x="24.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="21" y="388" width="4" height="15" fill="rgb(236,94,10)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="21" y="404" width="4" height="15" fill="rgb(211,82,46)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="21" y="420" width="4" height="15" fill="rgb(230,99,32)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="21" y="436" width="4" height="15" fill="rgb(241,78,51)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="21" y="452" width="4" height="15" fill="rgb(252,86,6)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="21" y="468" width="4" height="15" fill="rgb(223,108,45)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.11%)</title><rect x="24" y="484" width="1" height="15" fill="rgb(217,177,14)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="500" width="1" height="15" fill="rgb(229,59,12)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="516" width="1" height="15" fill="rgb(228,64,48)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="532" width="1" height="15" fill="rgb(216,168,22)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="548" width="1" height="15" fill="rgb(240,119,0)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="564" width="1" height="15" fill="rgb(215,141,35)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.11%)</title><rect x="24" y="580" width="1" height="15" fill="rgb(232,71,1)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="596" width="1" height="15" fill="rgb(233,1,44)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="612" width="1" height="15" fill="rgb(218,117,48)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="628" width="1" height="15" fill="rgb(216,19,31)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="644" width="1" height="15" fill="rgb(220,156,9)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="660" width="1" height="15" fill="rgb(212,43,18)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.11%)</title><rect x="24" y="676" width="1" height="15" fill="rgb(210,97,7)"/><text x="27.00" y="686.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="24" y="692" width="1" height="15" fill="rgb(236,76,42)"/><text x="27.00" y="702.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="24" y="708" width="1" height="15" fill="rgb(210,139,14)"/><text x="27.00" y="718.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="24" y="724" width="1" height="15" fill="rgb(222,112,20)"/><text x="27.00" y="734.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="740" width="1" height="15" fill="rgb(254,29,3)"/><text x="27.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="756" width="1" height="15" fill="rgb(206,105,28)"/><text x="27.00" y="766.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="772" width="1" height="15" fill="rgb(244,58,50)"/><text x="27.00" y="782.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py) (1 samples, 0.11%)</title><rect x="25" y="500" width="1" height="15" fill="rgb(214,163,48)"/><text x="28.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py) (1 samples, 0.11%)</title><rect x="25" y="516" width="1" height="15" fill="rgb(222,99,49)"/><text x="28.00" y="526.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.22%)</title><rect x="25" y="372" width="2" height="15" fill="rgb(235,146,13)"/><text x="28.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="25" y="388" width="2" height="15" fill="rgb(207,81,18)"/><text x="28.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="25" y="404" width="2" height="15" fill="rgb(240,156,6)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="25" y="420" width="2" height="15" fill="rgb(245,42,48)"/><text x="28.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="25" y="436" width="2" height="15" fill="rgb(233,180,27)"/><text x="28.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="25" y="452" width="2" height="15" fill="rgb(247,189,38)"/><text x="28.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="25" y="468" width="2" height="15" fill="rgb(219,208,8)"/><text x="28.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="25" y="484" width="2" height="15" fill="rgb(219,123,33)"/><text x="28.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.11%)</title><rect x="26" y="500" width="1" height="15" fill="rgb(215,161,36)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="516" width="1" height="15" fill="rgb(228,98,14)"/><text x="29.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="532" width="1" height="15" fill="rgb(206,210,15)"/><text x="29.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="548" width="1" height="15" fill="rgb(246,228,26)"/><text x="29.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="564" width="1" height="15" fill="rgb(219,133,24)"/><text x="29.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="580" width="1" height="15" fill="rgb(214,168,18)"/><text x="29.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.11%)</title><rect x="26" y="596" width="1" height="15" fill="rgb(206,29,37)"/><text x="29.00" y="606.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(248,165,35)"/><text x="29.00" y="622.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="26" y="628" width="1" height="15" fill="rgb(239,48,44)"/><text x="29.00" y="638.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="26" y="644" width="1" height="15" fill="rgb(205,25,33)"/><text x="29.00" y="654.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="26" y="660" width="1" height="15" fill="rgb(245,175,8)"/><text x="29.00" y="670.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="26" y="676" width="1" height="15" fill="rgb(242,70,29)"/><text x="29.00" y="686.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="26" y="692" width="1" height="15" fill="rgb(228,11,17)"/><text x="29.00" y="702.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="26" y="708" width="1" height="15" fill="rgb(214,55,45)"/><text x="29.00" y="718.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="26" y="724" width="1" height="15" fill="rgb(215,11,54)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.62%)</title><rect x="10" y="68" width="19" height="15" fill="rgb(207,45,46)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.62%)</title><rect x="10" y="84" width="19" height="15" fill="rgb(250,67,33)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.62%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(251,48,53)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.62%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(227,37,7)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.62%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(249,144,22)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (15 samples, 1.62%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(212,116,47)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.62%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(214,206,11)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.62%)</title><rect x="10" y="180" width="19" height="15" fill="rgb(232,83,54)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="18" y="196" width="11" height="15" fill="rgb(237,110,37)"/><text x="21.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.87%)</title><rect x="18" y="212" width="11" height="15" fill="rgb(224,167,45)"/><text x="21.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.87%)</title><rect x="18" y="228" width="11" height="15" fill="rgb(248,9,45)"/><text x="21.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.32%)</title><rect x="25" y="244" width="4" height="15" fill="rgb(217,141,49)"/><text x="28.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="25" y="260" width="4" height="15" fill="rgb(243,76,52)"/><text x="28.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="25" y="276" width="4" height="15" fill="rgb(225,93,40)"/><text x="28.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="25" y="292" width="4" height="15" fill="rgb(240,177,23)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="25" y="308" width="4" height="15" fill="rgb(237,2,3)"/><text x="28.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="25" y="324" width="4" height="15" fill="rgb(231,225,16)"/><text x="28.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="25" y="340" width="4" height="15" fill="rgb(242,202,21)"/><text x="28.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="25" y="356" width="4" height="15" fill="rgb(232,175,11)"/><text x="28.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="372" width="2" height="15" fill="rgb(232,135,14)"/><text x="30.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="388" width="2" height="15" fill="rgb(254,9,27)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="404" width="2" height="15" fill="rgb(238,110,33)"/><text x="30.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="420" width="2" height="15" fill="rgb(243,150,53)"/><text x="30.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="436" width="2" height="15" fill="rgb(240,166,9)"/><text x="30.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="452" width="2" height="15" fill="rgb(225,214,46)"/><text x="30.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.11%)</title><rect x="27" y="468" width="2" height="15" fill="rgb(231,60,32)"/><text x="30.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="484" width="2" height="15" fill="rgb(208,90,4)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(251,123,26)"/><text x="30.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(230,61,13)"/><text x="30.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(246,187,43)"/><text x="30.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(243,211,38)"/><text x="30.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py) (1 samples, 0.11%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(210,217,23)"/><text x="30.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(217,191,54)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(223,41,2)"/><text x="30.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(241,185,47)"/><text x="30.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(237,175,40)"/><text x="30.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(222,218,21)"/><text x="30.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py) (1 samples, 0.11%)</title><rect x="27" y="660" width="2" height="15" fill="rgb(205,167,43)"/><text x="30.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="676" width="2" height="15" fill="rgb(220,108,7)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="692" width="2" height="15" fill="rgb(226,213,27)"/><text x="30.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="708" width="2" height="15" fill="rgb(208,47,14)"/><text x="30.00" y="718.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(246,46,51)"/><text x="30.00" y="734.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(223,218,49)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(245,118,39)"/><text x="30.00" y="766.50"></text></g><g><title>0x7f98c2186926 (?) (1 samples, 0.11%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(243,57,49)"/><text x="30.00" y="782.50"></text></g><g><title>0x7f98ce4c9bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="61" y="132" width="1" height="15" fill="rgb(222,198,20)"/><text x="64.00" y="142.50"></text></g><g><title>0x7f98ce4c9bc6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="62" y="132" width="1" height="15" fill="rgb(214,41,0)"/><text x="65.00" y="142.50"></text></g><g><title>0x7f98ce4c9bdf (libc-2.29.so) (3 samples, 0.32%)</title><rect x="63" y="132" width="4" height="15" fill="rgb(233,27,16)"/><text x="66.00" y="142.50"></text></g><g><title>0x7f98ce4c9c10 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="67" y="132" width="1" height="15" fill="rgb(245,218,29)"/><text x="70.00" y="142.50"></text></g><g><title>0x7f98ce4c9c20 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="68" y="132" width="2" height="15" fill="rgb(214,227,12)"/><text x="71.00" y="142.50"></text></g><g><title>0x7f98ce4c9c25 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="70" y="132" width="1" height="15" fill="rgb(228,212,52)"/><text x="73.00" y="142.50"></text></g><g><title>0x7f98ce4c9c2d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="71" y="132" width="1" height="15" fill="rgb(223,123,40)"/><text x="74.00" y="142.50"></text></g><g><title>0x7f98ce4c9c49 (libc-2.29.so) (3 samples, 0.32%)</title><rect x="72" y="132" width="4" height="15" fill="rgb(243,30,10)"/><text x="75.00" y="142.50"></text></g><g><title>0x7f98ce4c9c73 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="76" y="132" width="2" height="15" fill="rgb(252,130,46)"/><text x="79.00" y="142.50"></text></g><g><title>0x7f98ce4c9aa4 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="76" y="148" width="2" height="15" fill="rgb(205,105,1)"/><text x="79.00" y="158.50"></text></g><g><title>0x7f98ce4caeb0 (libc-2.29.so) (15 samples, 1.62%)</title><rect x="61" y="116" width="19" height="15" fill="rgb(212,58,19)"/><text x="64.00" y="126.50"></text></g><g><title>0x7f98ce4c9ca7 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="78" y="132" width="2" height="15" fill="rgb(225,136,15)"/><text x="81.00" y="142.50"></text></g><g><title>0x7f98ce4c9aa8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="78" y="148" width="2" height="15" fill="rgb(207,228,25)"/><text x="81.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.22%)</title><rect x="80" y="116" width="2" height="15" fill="rgb(216,106,23)"/><text x="83.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.22%)</title><rect x="80" y="132" width="2" height="15" fill="rgb(248,205,16)"/><text x="83.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.22%)</title><rect x="80" y="148" width="2" height="15" fill="rgb(246,36,6)"/><text x="83.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.22%)</title><rect x="91" y="180" width="3" height="15" fill="rgb(222,28,2)"/><text x="94.00" y="190.50"></text></g><g><title>0x7f988e4faff9 (?) (1 samples, 0.11%)</title><rect x="96" y="212" width="2" height="15" fill="rgb(232,159,31)"/><text x="99.00" y="222.50"></text></g><g><title>0x7f988e4f5ef6 (?) (1 samples, 0.11%)</title><rect x="96" y="228" width="2" height="15" fill="rgb(235,172,46)"/><text x="99.00" y="238.50"></text></g><g><title>0x7f988e4ea962 (?) (1 samples, 0.11%)</title><rect x="96" y="244" width="2" height="15" fill="rgb(218,173,19)"/><text x="99.00" y="254.50"></text></g><g><title>0x7f988e51e7a7 (?) (1 samples, 0.11%)</title><rect x="96" y="260" width="2" height="15" fill="rgb(242,127,1)"/><text x="99.00" y="270.50"></text></g><g><title>0x7f988e51e379 (?) (1 samples, 0.11%)</title><rect x="96" y="276" width="2" height="15" fill="rgb(206,192,31)"/><text x="99.00" y="286.50"></text></g><g><title>0x7f988e97c8b8 (?) (1 samples, 0.11%)</title><rect x="96" y="292" width="2" height="15" fill="rgb(246,89,10)"/><text x="99.00" y="302.50"></text></g><g><title>0x7f988e97ac7f (?) (1 samples, 0.11%)</title><rect x="96" y="308" width="2" height="15" fill="rgb(237,156,1)"/><text x="99.00" y="318.50"></text></g><g><title>0x7f988e98d99c (?) (1 samples, 0.11%)</title><rect x="96" y="324" width="2" height="15" fill="rgb(225,221,25)"/><text x="99.00" y="334.50"></text></g><g><title>0x7f988e672ae6 (?) (1 samples, 0.11%)</title><rect x="96" y="340" width="2" height="15" fill="rgb(228,111,5)"/><text x="99.00" y="350.50"></text></g><g><title>0x7ffd1ad79a01 ([vdso]) (1 samples, 0.11%)</title><rect x="98" y="212" width="1" height="15" fill="rgb(227,176,2)"/><text x="101.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.32%)</title><rect x="99" y="212" width="4" height="15" fill="rgb(213,125,42)"/><text x="102.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="99" y="228" width="4" height="15" fill="rgb(223,75,35)"/><text x="102.00" y="238.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="101" y="244" width="2" height="15" fill="rgb(243,157,4)"/><text x="104.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="103" y="228" width="1" height="15" fill="rgb(238,77,48)"/><text x="106.00" y="238.50"></text></g><g><title>0x7f98ce4cad07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="103" y="244" width="1" height="15" fill="rgb(226,193,46)"/><text x="106.00" y="254.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="104" y="228" width="1" height="15" fill="rgb(246,205,14)"/><text x="107.00" y="238.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="104" y="244" width="1" height="15" fill="rgb(208,61,47)"/><text x="107.00" y="254.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="107" y="292" width="1" height="15" fill="rgb(220,183,34)"/><text x="110.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="107" y="308" width="1" height="15" fill="rgb(238,184,15)"/><text x="110.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="109" y="340" width="1" height="15" fill="rgb(223,69,32)"/><text x="112.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(238,88,52)"/><text x="113.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="110" y="356" width="2" height="15" fill="rgb(249,117,42)"/><text x="113.00" y="366.50"></text></g><g><title>0x7f98ce4ead50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="310" y="372" width="1" height="15" fill="rgb(225,163,31)"/><text x="313.00" y="382.50"></text></g><g><title>0x7f98ce4ead97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="311" y="372" width="1" height="15" fill="rgb(205,203,37)"/><text x="314.00" y="382.50"></text></g><g><title>0x7f98ce4eadb3 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="312" y="372" width="3" height="15" fill="rgb(238,2,45)"/><text x="315.00" y="382.50"></text></g><g><title>0x7f98ce649e0a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="315" y="372" width="1" height="15" fill="rgb(236,200,38)"/><text x="318.00" y="382.50"></text></g><g><title>0x7f98ce649e2f (libm-2.29.so) (1 samples, 0.11%)</title><rect x="316" y="372" width="1" height="15" fill="rgb(234,58,43)"/><text x="319.00" y="382.50"></text></g><g><title>0x7f98ce649e4a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="317" y="372" width="2" height="15" fill="rgb(247,69,41)"/><text x="320.00" y="382.50"></text></g><g><title>0x7f98ce649e4e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(245,49,30)"/><text x="322.00" y="382.50"></text></g><g><title>0x7f98ce649e62 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="320" y="372" width="1" height="15" fill="rgb(221,109,13)"/><text x="323.00" y="382.50"></text></g><g><title>0x7f98ce649e6d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="372" width="1" height="15" fill="rgb(242,188,25)"/><text x="324.00" y="382.50"></text></g><g><title>0x7f98ce649e7a (libm-2.29.so) (2 samples, 0.22%)</title><rect x="322" y="372" width="3" height="15" fill="rgb(220,22,3)"/><text x="325.00" y="382.50"></text></g><g><title>0x7f98ce649e92 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="325" y="372" width="1" height="15" fill="rgb(222,168,5)"/><text x="328.00" y="382.50"></text></g><g><title>0x7f98ce649e9e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="326" y="372" width="1" height="15" fill="rgb(243,146,47)"/><text x="329.00" y="382.50"></text></g><g><title>0x7f98ce649ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="327" y="372" width="2" height="15" fill="rgb(234,208,7)"/><text x="330.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 18.61%)</title><rect x="112" y="340" width="219" height="15" fill="rgb(212,12,25)"/><text x="115.00" y="350.50">onnxruntime::ml::LinearClass..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 3.25%)</title><rect x="293" y="356" width="38" height="15" fill="rgb(241,5,37)"/><text x="296.00" y="366.50">onn..</text></g><g><title>0x7f98ce649ea6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="329" y="372" width="2" height="15" fill="rgb(237,192,24)"/><text x="332.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.95%)</title><rect x="331" y="340" width="23" height="15" fill="rgb(254,13,3)"/><text x="334.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.95%)</title><rect x="331" y="356" width="23" height="15" fill="rgb(221,211,48)"/><text x="334.00" y="366.50">o..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="372" width="1" height="15" fill="rgb(252,8,52)"/><text x="356.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="388" width="1" height="15" fill="rgb(252,15,20)"/><text x="356.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="404" width="1" height="15" fill="rgb(220,50,9)"/><text x="356.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="420" width="1" height="15" fill="rgb(212,201,28)"/><text x="356.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="436" width="1" height="15" fill="rgb(230,171,21)"/><text x="356.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="452" width="1" height="15" fill="rgb(213,161,8)"/><text x="356.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="468" width="1" height="15" fill="rgb(210,177,37)"/><text x="356.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="484" width="1" height="15" fill="rgb(247,186,52)"/><text x="356.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="353" y="500" width="1" height="15" fill="rgb(208,64,17)"/><text x="356.00" y="510.50"></text></g><g><title>0x7f98bdf96d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="375" y="372" width="1" height="15" fill="rgb(208,186,25)"/><text x="378.00" y="382.50"></text></g><g><title>0x7f98ce4cbb1c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="440" y="388" width="1" height="15" fill="rgb(245,82,34)"/><text x="443.00" y="398.50"></text></g><g><title>0x7f98ce4cbb24 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="441" y="388" width="1" height="15" fill="rgb(208,65,31)"/><text x="444.00" y="398.50"></text></g><g><title>0x7f98ce4cbb49 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="442" y="388" width="3" height="15" fill="rgb(252,202,40)"/><text x="445.00" y="398.50"></text></g><g><title>0x7f98ce4cbb61 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="445" y="388" width="1" height="15" fill="rgb(238,180,36)"/><text x="448.00" y="398.50"></text></g><g><title>0x7f98ce4cbd54 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="446" y="388" width="3" height="15" fill="rgb(234,102,3)"/><text x="449.00" y="398.50"></text></g><g><title>0x7f98ce4cbd81 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="449" y="388" width="2" height="15" fill="rgb(247,222,31)"/><text x="452.00" y="398.50"></text></g><g><title>0x7f98ce4cbd8d (libc-2.29.so) (2 samples, 0.22%)</title><rect x="451" y="388" width="3" height="15" fill="rgb(224,99,30)"/><text x="454.00" y="398.50"></text></g><g><title>0x7f98ce4cbdb4 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="454" y="388" width="2" height="15" fill="rgb(230,74,39)"/><text x="457.00" y="398.50"></text></g><g><title>0x7f98ce4cbdd2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="456" y="388" width="2" height="15" fill="rgb(225,203,17)"/><text x="459.00" y="398.50"></text></g><g><title>0x7f98ce4cbdec (libc-2.29.so) (1 samples, 0.11%)</title><rect x="458" y="388" width="1" height="15" fill="rgb(207,107,24)"/><text x="461.00" y="398.50"></text></g><g><title>0x7f98ce4cbf2a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="459" y="388" width="3" height="15" fill="rgb(236,107,12)"/><text x="462.00" y="398.50"></text></g><g><title>0x7f98ce4cbfde (libc-2.29.so) (1 samples, 0.11%)</title><rect x="462" y="388" width="1" height="15" fill="rgb(218,105,32)"/><text x="465.00" y="398.50"></text></g><g><title>0x7f98ce4cbfe6 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="463" y="388" width="2" height="15" fill="rgb(218,119,29)"/><text x="466.00" y="398.50"></text></g><g><title>0x7f98ce4cc033 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="465" y="388" width="2" height="15" fill="rgb(210,23,21)"/><text x="468.00" y="398.50"></text></g><g><title>0x7f98ce4cc368 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="467" y="388" width="1" height="15" fill="rgb(205,34,22)"/><text x="470.00" y="398.50"></text></g><g><title>0x7f98ce4cc384 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="468" y="388" width="1" height="15" fill="rgb(250,116,4)"/><text x="471.00" y="398.50"></text></g><g><title>0x7f98ce4cc3d1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="469" y="388" width="2" height="15" fill="rgb(234,65,11)"/><text x="472.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (79 samples, 8.55%)</title><rect x="372" y="356" width="101" height="15" fill="rgb(235,40,17)"/><text x="375.00" y="366.50">operator new..</text></g><g><title>malloc (libc-2.29.so) (76 samples, 8.23%)</title><rect x="376" y="372" width="97" height="15" fill="rgb(244,89,39)"/><text x="379.00" y="382.50">malloc (lib..</text></g><g><title>0x7f98ce4cc3e0 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="471" y="388" width="2" height="15" fill="rgb(218,118,25)"/><text x="474.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="473" y="356" width="1" height="15" fill="rgb(205,215,46)"/><text x="476.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.41%)</title><rect x="474" y="356" width="17" height="15" fill="rgb(240,130,3)"/><text x="477.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="487" y="372" width="4" height="15" fill="rgb(220,73,27)"/><text x="490.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (9 samples, 0.97%)</title><rect x="491" y="356" width="11" height="15" fill="rgb(244,34,28)"/><text x="494.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (314 samples, 33.98%)</title><rect x="108" y="292" width="401" height="15" fill="rgb(230,117,19)"/><text x="111.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (314 samples, 33.98%)</title><rect x="108" y="308" width="401" height="15" fill="rgb(243,118,32)"/><text x="111.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (314 samples, 33.98%)</title><rect x="108" y="324" width="401" height="15" fill="rgb(225,31,54)"/><text x="111.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 13.10%)</title><rect x="354" y="340" width="155" height="15" fill="rgb(205,119,0)"/><text x="357.00" y="350.50">onnxruntime::ml::Zi..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="502" y="356" width="7" height="15" fill="rgb(237,168,38)"/><text x="505.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (316 samples, 34.20%)</title><rect x="107" y="260" width="403" height="15" fill="rgb(226,20,53)"/><text x="110.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (316 samples, 34.20%)</title><rect x="107" y="276" width="403" height="15" fill="rgb(225,152,22)"/><text x="110.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>std::default_delete&lt;onnxruntime::logging::Logger&gt;::operator() [clone .isra.476] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="509" y="292" width="1" height="15" fill="rgb(248,97,8)"/><text x="512.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="510" y="260" width="1" height="15" fill="rgb(219,77,30)"/><text x="513.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="511" y="260" width="2" height="15" fill="rgb(219,205,49)"/><text x="514.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.11%)</title><rect x="511" y="276" width="2" height="15" fill="rgb(222,73,35)"/><text x="514.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="511" y="292" width="2" height="15" fill="rgb(213,24,28)"/><text x="514.00" y="302.50"></text></g><g><title>0x7f98ce4ead97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="511" y="308" width="2" height="15" fill="rgb(212,66,23)"/><text x="514.00" y="318.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="513" y="260" width="1" height="15" fill="rgb(216,152,20)"/><text x="516.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="513" y="276" width="1" height="15" fill="rgb(237,116,47)"/><text x="516.00" y="286.50"></text></g><g><title>0x7f988e4c2870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="661" y="276" width="1" height="15" fill="rgb(213,24,42)"/><text x="664.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 2.49%)</title><rect x="662" y="276" width="29" height="15" fill="rgb(254,214,39)"/><text x="665.00" y="286.50">py..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 15.26%)</title><rect x="514" y="260" width="180" height="15" fill="rgb(206,115,2)"/><text x="517.00" y="270.50">pybind11::detail::map_c..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="691" y="276" width="3" height="15" fill="rgb(222,0,8)"/><text x="694.00" y="286.50"></text></g><g><title>0x7f988e4c20f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="697" y="292" width="1" height="15" fill="rgb(215,201,25)"/><text x="700.00" y="302.50"></text></g><g><title>0x7f98ce4ca91e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="698" y="292" width="1" height="15" fill="rgb(208,163,29)"/><text x="701.00" y="302.50"></text></g><g><title>0x7f98ce4ca9d3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="699" y="292" width="1" height="15" fill="rgb(229,74,36)"/><text x="702.00" y="302.50"></text></g><g><title>0x7f98ce4caa33 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="700" y="292" width="2" height="15" fill="rgb(208,99,2)"/><text x="703.00" y="302.50"></text></g><g><title>0x7f98ce4caa4b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="702" y="292" width="1" height="15" fill="rgb(220,35,54)"/><text x="705.00" y="302.50"></text></g><g><title>0x7f98ce4caa51 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="703" y="292" width="1" height="15" fill="rgb(235,199,39)"/><text x="706.00" y="302.50"></text></g><g><title>0x7f98ce4cacf0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="704" y="292" width="1" height="15" fill="rgb(236,202,17)"/><text x="707.00" y="302.50"></text></g><g><title>0x7f98ce4cad07 (libc-2.29.so) (9 samples, 0.97%)</title><rect x="705" y="292" width="12" height="15" fill="rgb(205,16,20)"/><text x="708.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.54%)</title><rect x="717" y="292" width="6" height="15" fill="rgb(227,20,15)"/><text x="720.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="723" y="292" width="2" height="15" fill="rgb(234,14,19)"/><text x="726.00" y="302.50"></text></g><g><title>0x7f98ce4ca945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="727" y="308" width="1" height="15" fill="rgb(209,120,6)"/><text x="730.00" y="318.50"></text></g><g><title>0x7f98ce4ca961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="728" y="308" width="2" height="15" fill="rgb(225,180,6)"/><text x="731.00" y="318.50"></text></g><g><title>0x7f98ce4cad07 (libc-2.29.so) (5 samples, 0.54%)</title><rect x="730" y="308" width="6" height="15" fill="rgb(216,159,12)"/><text x="733.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (495 samples, 53.57%)</title><rect x="105" y="244" width="632" height="15" fill="rgb(217,28,16)"/><text x="108.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Inferenc..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 3.68%)</title><rect x="694" y="260" width="43" height="15" fill="rgb(219,154,10)"/><text x="697.00" y="270.50">std:..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 3.68%)</title><rect x="694" y="276" width="43" height="15" fill="rgb(210,222,51)"/><text x="697.00" y="286.50">onnx..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.08%)</title><rect x="725" y="292" width="12" height="15" fill="rgb(205,208,20)"/><text x="728.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="736" y="308" width="1" height="15" fill="rgb(216,152,42)"/><text x="739.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="737" y="244" width="3" height="15" fill="rgb(211,132,31)"/><text x="740.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="737" y="260" width="3" height="15" fill="rgb(223,91,0)"/><text x="740.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="739" y="276" width="1" height="15" fill="rgb(254,162,50)"/><text x="742.00" y="286.50"></text></g><g><title>0x7f98ce4eadb3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="739" y="292" width="1" height="15" fill="rgb(232,195,54)"/><text x="742.00" y="302.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (558 samples, 60.39%)</title><rect x="29" y="68" width="712" height="15" fill="rgb(212,83,15)"/><text x="32.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (558 samples, 60.39%)</title><rect x="29" y="84" width="712" height="15" fill="rgb(245,216,47)"/><text x="32.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (558 samples, 60.39%)</title><rect x="29" y="100" width="712" height="15" fill="rgb(240,186,39)"/><text x="32.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (516 samples, 55.84%)</title><rect x="82" y="116" width="659" height="15" fill="rgb(213,176,50)"/><text x="85.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (514 samples, 55.63%)</title><rect x="85" y="132" width="656" height="15" fill="rgb(225,153,54)"/><text x="88.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (514 samples, 55.63%)</title><rect x="85" y="148" width="656" height="15" fill="rgb(240,133,21)"/><text x="88.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (513 samples, 55.52%)</title><rect x="86" y="164" width="655" height="15" fill="rgb(254,110,0)"/><text x="89.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (507 samples, 54.87%)</title><rect x="94" y="180" width="647" height="15" fill="rgb(248,15,27)"/><text x="97.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (507 samples, 54.87%)</title><rect x="94" y="196" width="647" height="15" fill="rgb(230,34,50)"/><text x="97.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (500 samples, 54.11%)</title><rect x="103" y="212" width="638" height="15" fill="rgb(221,111,2)"/><text x="106.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (498 samples, 53.90%)</title><rect x="105" y="228" width="636" height="15" fill="rgb(209,19,32)"/><text x="108.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11:..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="740" y="244" width="1" height="15" fill="rgb(206,80,44)"/><text x="743.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="740" y="260" width="1" height="15" fill="rgb(209,52,49)"/><text x="743.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="740" y="276" width="1" height="15" fill="rgb(220,110,53)"/><text x="743.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="757" y="196" width="1" height="15" fill="rgb(235,104,13)"/><text x="760.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.11%)</title><rect x="763" y="260" width="1" height="15" fill="rgb(220,202,11)"/><text x="766.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.11%)</title><rect x="763" y="276" width="1" height="15" fill="rgb(226,197,44)"/><text x="766.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="763" y="292" width="1" height="15" fill="rgb(218,195,46)"/><text x="766.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="763" y="308" width="1" height="15" fill="rgb(248,105,54)"/><text x="766.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.22%)</title><rect x="763" y="212" width="3" height="15" fill="rgb(216,106,0)"/><text x="766.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.22%)</title><rect x="763" y="228" width="3" height="15" fill="rgb(213,115,50)"/><text x="766.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.22%)</title><rect x="763" y="244" width="3" height="15" fill="rgb(231,54,29)"/><text x="766.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.11%)</title><rect x="764" y="260" width="2" height="15" fill="rgb(249,170,18)"/><text x="767.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="764" y="276" width="2" height="15" fill="rgb(215,1,38)"/><text x="767.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="764" y="292" width="2" height="15" fill="rgb(234,59,47)"/><text x="767.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="764" y="308" width="2" height="15" fill="rgb(215,75,17)"/><text x="767.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="764" y="324" width="2" height="15" fill="rgb(225,219,54)"/><text x="767.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="764" y="340" width="2" height="15" fill="rgb(209,110,38)"/><text x="767.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.22%)</title><rect x="766" y="212" width="2" height="15" fill="rgb(232,210,5)"/><text x="769.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.22%)</title><rect x="766" y="228" width="2" height="15" fill="rgb(208,46,10)"/><text x="769.00" y="238.50"></text></g><g><title>0x7f98ce4e0757 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="777" y="324" width="1" height="15" fill="rgb(252,205,32)"/><text x="780.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (6 samples, 0.65%)</title><rect x="772" y="244" width="8" height="15" fill="rgb(252,20,50)"/><text x="775.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.54%)</title><rect x="773" y="260" width="7" height="15" fill="rgb(253,218,24)"/><text x="776.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 0.54%)</title><rect x="773" y="276" width="7" height="15" fill="rgb(229,70,33)"/><text x="776.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.32%)</title><rect x="776" y="292" width="4" height="15" fill="rgb(219,84,1)"/><text x="779.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.32%)</title><rect x="776" y="308" width="4" height="15" fill="rgb(233,185,8)"/><text x="779.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.11%)</title><rect x="778" y="324" width="2" height="15" fill="rgb(227,201,51)"/><text x="781.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="786" y="340" width="1" height="15" fill="rgb(230,34,51)"/><text x="789.00" y="350.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.11%)</title><rect x="787" y="372" width="2" height="15" fill="rgb(210,81,35)"/><text x="790.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="787" y="388" width="2" height="15" fill="rgb(245,17,20)"/><text x="790.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (22 samples, 2.38%)</title><rect x="783" y="276" width="28" height="15" fill="rgb(233,60,49)"/><text x="786.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (22 samples, 2.38%)</title><rect x="783" y="292" width="28" height="15" fill="rgb(217,124,5)"/><text x="786.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (20 samples, 2.16%)</title><rect x="786" y="308" width="25" height="15" fill="rgb(237,152,45)"/><text x="789.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (20 samples, 2.16%)</title><rect x="786" y="324" width="25" height="15" fill="rgb(214,72,6)"/><text x="789.00" y="334.50">c..</text></g><g><title>gemm (cblasfuncs.c) (19 samples, 2.06%)</title><rect x="787" y="340" width="24" height="15" fill="rgb(229,125,32)"/><text x="790.00" y="350.50">g..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 2.06%)</title><rect x="787" y="356" width="24" height="15" fill="rgb(243,161,48)"/><text x="790.00" y="366.50">c..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 1.95%)</title><rect x="789" y="372" width="22" height="15" fill="rgb(223,106,26)"/><text x="792.00" y="382.50">s..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 1.84%)</title><rect x="790" y="388" width="21" height="15" fill="rgb(214,168,13)"/><text x="793.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.22%)</title><rect x="811" y="276" width="3" height="15" fill="rgb(239,175,1)"/><text x="814.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (68 samples, 7.36%)</title><rect x="780" y="244" width="86" height="15" fill="rgb(230,208,10)"/><text x="783.00" y="254.50">numpy_dot_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (65 samples, 7.03%)</title><rect x="783" y="260" width="83" height="15" fill="rgb(225,228,7)"/><text x="786.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (41 samples, 4.44%)</title><rect x="814" y="276" width="52" height="15" fill="rgb(248,218,28)"/><text x="817.00" y="286.50">sgemm..</text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="869" y="292" width="1" height="15" fill="rgb(244,112,17)"/><text x="872.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.11%)</title><rect x="873" y="308" width="1" height="15" fill="rgb(252,120,28)"/><text x="876.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="873" y="324" width="1" height="15" fill="rgb(239,60,23)"/><text x="876.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="874" y="308" width="1" height="15" fill="rgb(214,154,35)"/><text x="877.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="874" y="324" width="1" height="15" fill="rgb(244,78,34)"/><text x="877.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="874" y="340" width="1" height="15" fill="rgb(224,136,28)"/><text x="877.00" y="350.50"></text></g><g><title>0x7f98ce4ead50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="879" y="356" width="1" height="15" fill="rgb(217,110,6)"/><text x="882.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 0.97%)</title><rect x="870" y="292" width="12" height="15" fill="rgb(247,49,28)"/><text x="873.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.54%)</title><rect x="875" y="308" width="7" height="15" fill="rgb(225,180,32)"/><text x="878.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.54%)</title><rect x="875" y="324" width="7" height="15" fill="rgb(220,61,49)"/><text x="878.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.54%)</title><rect x="875" y="340" width="7" height="15" fill="rgb(214,121,39)"/><text x="878.00" y="350.50"></text></g><g><title>0x7f98ce4eadbe (libc-2.29.so) (1 samples, 0.11%)</title><rect x="880" y="356" width="2" height="15" fill="rgb(250,61,4)"/><text x="883.00" y="366.50"></text></g><g><title>0x7f98b97b233a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.43%)</title><rect x="882" y="308" width="5" height="15" fill="rgb(225,184,21)"/><text x="885.00" y="318.50"></text></g><g><title>0x7f98b97d4204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="887" y="324" width="1" height="15" fill="rgb(227,126,45)"/><text x="890.00" y="334.50"></text></g><g><title>0x7f98b9792890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="888" y="340" width="3" height="15" fill="rgb(252,117,5)"/><text x="891.00" y="350.50"></text></g><g><title>0x7f98ce6161a0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="896" y="356" width="1" height="15" fill="rgb(242,26,24)"/><text x="899.00" y="366.50"></text></g><g><title>0x7f98ce649e00 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="897" y="356" width="3" height="15" fill="rgb(239,50,23)"/><text x="900.00" y="366.50"></text></g><g><title>0x7f98ce649e62 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="900" y="356" width="1" height="15" fill="rgb(229,156,43)"/><text x="903.00" y="366.50"></text></g><g><title>0x7f98ce649e71 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="901" y="356" width="4" height="15" fill="rgb(251,20,35)"/><text x="904.00" y="366.50"></text></g><g><title>0x7f98ce649e96 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="905" y="356" width="1" height="15" fill="rgb(232,39,10)"/><text x="908.00" y="366.50"></text></g><g><title>0x7f98b97d4214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 1.73%)</title><rect x="888" y="324" width="21" height="15" fill="rgb(249,13,21)"/><text x="891.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (14 samples, 1.52%)</title><rect x="891" y="340" width="18" height="15" fill="rgb(220,130,7)"/><text x="894.00" y="350.50"></text></g><g><title>0x7f98ce649ea6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="906" y="356" width="3" height="15" fill="rgb(218,174,42)"/><text x="909.00" y="366.50"></text></g><g><title>0x7f98b97d4224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="909" y="324" width="1" height="15" fill="rgb(209,24,18)"/><text x="912.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (39 samples, 4.22%)</title><rect x="869" y="260" width="50" height="15" fill="rgb(206,16,4)"/><text x="872.00" y="270.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (39 samples, 4.22%)</title><rect x="869" y="276" width="50" height="15" fill="rgb(238,19,23)"/><text x="872.00" y="286.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (29 samples, 3.14%)</title><rect x="882" y="292" width="37" height="15" fill="rgb(223,97,13)"/><text x="885.00" y="302.50">tri..</text></g><g><title>0x7f98b97b233d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 2.71%)</title><rect x="887" y="308" width="32" height="15" fill="rgb(241,2,3)"/><text x="890.00" y="318.50">0x..</text></g><g><title>0x7f98b97d4228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.76%)</title><rect x="910" y="324" width="9" height="15" fill="rgb(238,194,51)"/><text x="913.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (119 samples, 12.88%)</title><rect x="768" y="228" width="152" height="15" fill="rgb(216,153,28)"/><text x="771.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (42 samples, 4.55%)</title><rect x="866" y="244" width="54" height="15" fill="rgb(234,199,25)"/><text x="869.00" y="254.50">ufunc..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="919" y="260" width="1" height="15" fill="rgb(223,106,37)"/><text x="922.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="921" y="260" width="2" height="15" fill="rgb(232,198,2)"/><text x="924.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="921" y="276" width="2" height="15" fill="rgb(224,140,24)"/><text x="924.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.22%)</title><rect x="925" y="372" width="3" height="15" fill="rgb(231,174,29)"/><text x="928.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.22%)</title><rect x="925" y="388" width="3" height="15" fill="rgb(233,136,37)"/><text x="928.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.22%)</title><rect x="925" y="404" width="3" height="15" fill="rgb(207,188,40)"/><text x="928.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="926" y="420" width="2" height="15" fill="rgb(209,83,8)"/><text x="929.00" y="430.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="926" y="436" width="2" height="15" fill="rgb(215,198,50)"/><text x="929.00" y="446.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="926" y="452" width="2" height="15" fill="rgb(235,122,53)"/><text x="929.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 0.65%)</title><rect x="924" y="356" width="8" height="15" fill="rgb(218,85,32)"/><text x="927.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.32%)</title><rect x="928" y="372" width="4" height="15" fill="rgb(223,4,8)"/><text x="931.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.32%)</title><rect x="928" y="388" width="4" height="15" fill="rgb(236,191,51)"/><text x="931.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (3 samples, 0.32%)</title><rect x="928" y="404" width="4" height="15" fill="rgb(221,167,2)"/><text x="931.00" y="414.50"></text></g><g><title>array_sum (methods.c) (8 samples, 0.87%)</title><rect x="923" y="260" width="10" height="15" fill="rgb(239,125,24)"/><text x="926.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (7 samples, 0.76%)</title><rect x="924" y="276" width="9" height="15" fill="rgb(235,100,16)"/><text x="927.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 0.76%)</title><rect x="924" y="292" width="9" height="15" fill="rgb(244,130,50)"/><text x="927.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 0.76%)</title><rect x="924" y="308" width="9" height="15" fill="rgb(235,198,37)"/><text x="927.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 0.76%)</title><rect x="924" y="324" width="9" height="15" fill="rgb(231,163,41)"/><text x="927.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 0.76%)</title><rect x="924" y="340" width="9" height="15" fill="rgb(218,120,7)"/><text x="927.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="932" y="356" width="1" height="15" fill="rgb(211,93,38)"/><text x="935.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="932" y="372" width="1" height="15" fill="rgb(226,181,53)"/><text x="935.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="932" y="388" width="1" height="15" fill="rgb(227,184,44)"/><text x="935.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="933" y="308" width="1" height="15" fill="rgb(241,21,47)"/><text x="936.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="933" y="324" width="1" height="15" fill="rgb(237,14,49)"/><text x="936.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="933" y="340" width="1" height="15" fill="rgb(207,27,48)"/><text x="936.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="933" y="356" width="1" height="15" fill="rgb(247,25,50)"/><text x="936.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="933" y="372" width="1" height="15" fill="rgb(254,203,0)"/><text x="936.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="933" y="388" width="1" height="15" fill="rgb(252,86,13)"/><text x="936.00" y="398.50"></text></g><g><title>0x7f98ce4cc214 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="933" y="404" width="1" height="15" fill="rgb(207,84,22)"/><text x="936.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="934" y="324" width="1" height="15" fill="rgb(245,203,51)"/><text x="937.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="934" y="340" width="1" height="15" fill="rgb(228,98,34)"/><text x="937.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="934" y="356" width="1" height="15" fill="rgb(241,0,40)"/><text x="937.00" y="366.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="934" y="372" width="1" height="15" fill="rgb(234,225,18)"/><text x="937.00" y="382.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="934" y="388" width="1" height="15" fill="rgb(242,78,27)"/><text x="937.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="935" y="324" width="2" height="15" fill="rgb(207,34,41)"/><text x="938.00" y="334.50"></text></g><g><title>0x7f98ce4caf71 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="935" y="340" width="2" height="15" fill="rgb(248,80,32)"/><text x="938.00" y="350.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (154 samples, 16.67%)</title><rect x="741" y="68" width="197" height="15" fill="rgb(242,138,16)"/><text x="744.00" y="78.50">profile_pyrt (bench_Logis..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (154 samples, 16.67%)</title><rect x="741" y="84" width="197" height="15" fill="rgb(233,172,8)"/><text x="744.00" y="94.50">setup_profile (bench_Logi..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (154 samples, 16.67%)</title><rect x="741" y="100" width="197" height="15" fill="rgb(249,105,10)"/><text x="744.00" y="110.50">profile (bench_LogisticRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (153 samples, 16.56%)</title><rect x="743" y="116" width="195" height="15" fill="rgb(235,198,51)"/><text x="746.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (153 samples, 16.56%)</title><rect x="743" y="132" width="195" height="15" fill="rgb(229,187,52)"/><text x="746.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (153 samples, 16.56%)</title><rect x="743" y="148" width="195" height="15" fill="rgb(230,13,50)"/><text x="746.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (153 samples, 16.56%)</title><rect x="743" y="164" width="195" height="15" fill="rgb(222,18,48)"/><text x="746.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (151 samples, 16.34%)</title><rect x="745" y="180" width="193" height="15" fill="rgb(236,36,27)"/><text x="748.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (141 samples, 15.26%)</title><rect x="758" y="196" width="180" height="15" fill="rgb(253,110,17)"/><text x="761.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (133 samples, 14.39%)</title><rect x="768" y="212" width="170" height="15" fill="rgb(209,57,43)"/><text x="771.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (14 samples, 1.52%)</title><rect x="920" y="228" width="18" height="15" fill="rgb(233,164,46)"/><text x="923.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (14 samples, 1.52%)</title><rect x="920" y="244" width="18" height="15" fill="rgb(253,20,46)"/><text x="923.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.43%)</title><rect x="933" y="260" width="5" height="15" fill="rgb(224,150,19)"/><text x="936.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.43%)</title><rect x="933" y="276" width="5" height="15" fill="rgb(241,37,12)"/><text x="936.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.43%)</title><rect x="933" y="292" width="5" height="15" fill="rgb(239,137,45)"/><text x="936.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.32%)</title><rect x="934" y="308" width="4" height="15" fill="rgb(217,67,19)"/><text x="937.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.11%)</title><rect x="937" y="324" width="1" height="15" fill="rgb(218,81,7)"/><text x="940.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="937" y="340" width="1" height="15" fill="rgb(247,74,33)"/><text x="940.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="937" y="356" width="1" height="15" fill="rgb(236,0,2)"/><text x="940.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="946" y="244" width="1" height="15" fill="rgb(248,42,6)"/><text x="949.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="946" y="260" width="1" height="15" fill="rgb(231,46,41)"/><text x="949.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="946" y="276" width="1" height="15" fill="rgb(249,159,54)"/><text x="949.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="946" y="292" width="1" height="15" fill="rgb(227,176,11)"/><text x="949.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="946" y="308" width="1" height="15" fill="rgb(205,86,0)"/><text x="949.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="947" y="292" width="1" height="15" fill="rgb(205,196,11)"/><text x="950.00" y="302.50"></text></g><g><title>0x7f98ce4ca97c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="947" y="308" width="1" height="15" fill="rgb(222,16,34)"/><text x="950.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="948" y="324" width="1" height="15" fill="rgb(249,131,23)"/><text x="951.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="948" y="340" width="1" height="15" fill="rgb(243,33,53)"/><text x="951.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="948" y="356" width="1" height="15" fill="rgb(238,12,41)"/><text x="951.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.22%)</title><rect x="948" y="292" width="3" height="15" fill="rgb(243,112,53)"/><text x="951.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.22%)</title><rect x="948" y="308" width="3" height="15" fill="rgb(223,107,17)"/><text x="951.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="949" y="324" width="2" height="15" fill="rgb(216,202,26)"/><text x="952.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="949" y="340" width="2" height="15" fill="rgb(213,92,6)"/><text x="952.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.22%)</title><rect x="953" y="308" width="3" height="15" fill="rgb(243,6,13)"/><text x="956.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (2 samples, 0.22%)</title><rect x="953" y="324" width="3" height="15" fill="rgb(252,65,50)"/><text x="956.00" y="334.50"></text></g><g><title>array_sum (methods.c) (14 samples, 1.52%)</title><rect x="946" y="180" width="17" height="15" fill="rgb(250,192,21)"/><text x="949.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 1.52%)</title><rect x="946" y="196" width="17" height="15" fill="rgb(205,219,11)"/><text x="949.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 1.52%)</title><rect x="946" y="212" width="17" height="15" fill="rgb(233,30,20)"/><text x="949.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 1.52%)</title><rect x="946" y="228" width="17" height="15" fill="rgb(252,222,30)"/><text x="949.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 1.41%)</title><rect x="947" y="244" width="16" height="15" fill="rgb(207,92,44)"/><text x="950.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 1.41%)</title><rect x="947" y="260" width="16" height="15" fill="rgb(218,194,2)"/><text x="950.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (13 samples, 1.41%)</title><rect x="947" y="276" width="16" height="15" fill="rgb(209,214,2)"/><text x="950.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (10 samples, 1.08%)</title><rect x="951" y="292" width="12" height="15" fill="rgb(237,21,54)"/><text x="954.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.65%)</title><rect x="956" y="308" width="7" height="15" fill="rgb(249,153,44)"/><text x="959.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.11%)</title><rect x="966" y="276" width="1" height="15" fill="rgb(228,36,52)"/><text x="969.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="966" y="292" width="1" height="15" fill="rgb(206,183,18)"/><text x="969.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="966" y="308" width="1" height="15" fill="rgb(226,8,54)"/><text x="969.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="967" y="276" width="2" height="15" fill="rgb(207,6,51)"/><text x="970.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="969" y="276" width="1" height="15" fill="rgb(230,47,43)"/><text x="972.00" y="286.50"></text></g><g><title>0x7f98ce4ead50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="971" y="324" width="1" height="15" fill="rgb(245,38,9)"/><text x="974.00" y="334.50"></text></g><g><title>0x7f98ce4ead6f (libc-2.29.so) (2 samples, 0.22%)</title><rect x="972" y="324" width="3" height="15" fill="rgb(224,194,22)"/><text x="975.00" y="334.50"></text></g><g><title>array_add (number.c) (8 samples, 0.87%)</title><rect x="966" y="196" width="10" height="15" fill="rgb(210,85,46)"/><text x="969.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 0.87%)</title><rect x="966" y="212" width="10" height="15" fill="rgb(234,57,23)"/><text x="969.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 0.87%)</title><rect x="966" y="228" width="10" height="15" fill="rgb(221,169,36)"/><text x="969.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 0.87%)</title><rect x="966" y="244" width="10" height="15" fill="rgb(237,29,51)"/><text x="969.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 0.87%)</title><rect x="966" y="260" width="10" height="15" fill="rgb(219,100,21)"/><text x="969.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.54%)</title><rect x="970" y="276" width="6" height="15" fill="rgb(229,8,42)"/><text x="973.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.54%)</title><rect x="970" y="292" width="6" height="15" fill="rgb(248,93,43)"/><text x="973.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.54%)</title><rect x="970" y="308" width="6" height="15" fill="rgb(212,70,48)"/><text x="973.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="975" y="324" width="1" height="15" fill="rgb(229,100,36)"/><text x="978.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.22%)</title><rect x="976" y="196" width="3" height="15" fill="rgb(230,143,26)"/><text x="979.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.22%)</title><rect x="976" y="212" width="3" height="15" fill="rgb(239,24,16)"/><text x="979.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.22%)</title><rect x="976" y="228" width="3" height="15" fill="rgb(234,161,43)"/><text x="979.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.22%)</title><rect x="988" y="212" width="2" height="15" fill="rgb(250,14,24)"/><text x="991.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.11%)</title><rect x="990" y="212" width="2" height="15" fill="rgb(229,193,8)"/><text x="993.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="993" y="228" width="4" height="15" fill="rgb(237,143,4)"/><text x="996.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 0.54%)</title><rect x="992" y="212" width="6" height="15" fill="rgb(250,78,46)"/><text x="995.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="997" y="228" width="1" height="15" fill="rgb(205,213,15)"/><text x="1000.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 0.76%)</title><rect x="998" y="212" width="9" height="15" fill="rgb(214,74,46)"/><text x="1001.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.11%)</title><rect x="1006" y="228" width="1" height="15" fill="rgb(247,23,4)"/><text x="1009.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.11%)</title><rect x="1006" y="244" width="1" height="15" fill="rgb(223,205,16)"/><text x="1009.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.11%)</title><rect x="1007" y="212" width="1" height="15" fill="rgb(232,125,10)"/><text x="1010.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (25 samples, 2.71%)</title><rect x="979" y="196" width="32" height="15" fill="rgb(250,215,31)"/><text x="982.00" y="206.50">ch..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.22%)</title><rect x="1008" y="212" width="3" height="15" fill="rgb(225,106,32)"/><text x="1011.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.22%)</title><rect x="1008" y="228" width="3" height="15" fill="rgb(209,200,42)"/><text x="1011.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.22%)</title><rect x="1013" y="212" width="3" height="15" fill="rgb(223,50,42)"/><text x="1016.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1015" y="228" width="1" height="15" fill="rgb(205,86,34)"/><text x="1018.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.54%)</title><rect x="1011" y="196" width="6" height="15" fill="rgb(234,129,41)"/><text x="1014.00" y="206.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.11%)</title><rect x="1016" y="212" width="1" height="15" fill="rgb(234,216,24)"/><text x="1019.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.22%)</title><rect x="1018" y="212" width="3" height="15" fill="rgb(211,157,48)"/><text x="1021.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 2.71%)</title><rect x="1021" y="212" width="32" height="15" fill="rgb(246,163,22)"/><text x="1024.00" y="222.50">dg..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.11%)</title><rect x="1053" y="212" width="1" height="15" fill="rgb(233,69,12)"/><text x="1056.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (23 samples, 2.49%)</title><rect x="1057" y="260" width="29" height="15" fill="rgb(241,91,37)"/><text x="1060.00" y="270.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 2.38%)</title><rect x="1058" y="276" width="28" height="15" fill="rgb(232,187,41)"/><text x="1061.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 2.38%)</title><rect x="1058" y="292" width="28" height="15" fill="rgb(219,222,25)"/><text x="1061.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 2.27%)</title><rect x="1059" y="308" width="27" height="15" fill="rgb(254,82,25)"/><text x="1062.00" y="318.50">d..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (23 samples, 2.49%)</title><rect x="1087" y="276" width="30" height="15" fill="rgb(230,10,32)"/><text x="1090.00" y="286.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (23 samples, 2.49%)</title><rect x="1087" y="292" width="30" height="15" fill="rgb(253,210,1)"/><text x="1090.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (23 samples, 2.49%)</title><rect x="1087" y="308" width="30" height="15" fill="rgb(232,11,31)"/><text x="1090.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (23 samples, 2.49%)</title><rect x="1087" y="324" width="30" height="15" fill="rgb(216,144,25)"/><text x="1090.00" y="334.50">_a..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (25 samples, 2.71%)</title><rect x="1086" y="260" width="32" height="15" fill="rgb(234,24,52)"/><text x="1089.00" y="270.50">Np..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1117" y="276" width="1" height="15" fill="rgb(244,93,12)"/><text x="1120.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1117" y="292" width="1" height="15" fill="rgb(232,91,18)"/><text x="1120.00" y="302.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="1118" y="260" width="1" height="15" fill="rgb(247,207,13)"/><text x="1121.00" y="270.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.11%)</title><rect x="1119" y="260" width="2" height="15" fill="rgb(250,177,9)"/><text x="1122.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (124 samples, 13.42%)</title><rect x="963" y="180" width="159" height="15" fill="rgb(206,70,13)"/><text x="966.00" y="190.50">decision_function (s..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (82 samples, 8.87%)</title><rect x="1017" y="196" width="105" height="15" fill="rgb(212,127,9)"/><text x="1020.00" y="206.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (53 samples, 5.74%)</title><rect x="1054" y="212" width="68" height="15" fill="rgb(248,66,42)"/><text x="1057.00" y="222.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (52 samples, 5.63%)</title><rect x="1055" y="228" width="67" height="15" fill="rgb(220,81,42)"/><text x="1058.00" y="238.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (52 samples, 5.63%)</title><rect x="1055" y="244" width="67" height="15" fill="rgb(229,76,51)"/><text x="1058.00" y="254.50">PyUFunc..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1121" y="260" width="1" height="15" fill="rgb(227,48,38)"/><text x="1124.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.11%)</title><rect x="1121" y="276" width="1" height="15" fill="rgb(221,57,30)"/><text x="1124.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.22%)</title><rect x="1122" y="228" width="2" height="15" fill="rgb(233,153,36)"/><text x="1125.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.22%)</title><rect x="1122" y="244" width="2" height="15" fill="rgb(205,148,45)"/><text x="1125.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.22%)</title><rect x="1122" y="260" width="2" height="15" fill="rgb(251,227,39)"/><text x="1125.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.22%)</title><rect x="1122" y="276" width="2" height="15" fill="rgb(249,204,32)"/><text x="1125.00" y="286.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="1123" y="292" width="1" height="15" fill="rgb(253,74,36)"/><text x="1126.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="1123" y="308" width="1" height="15" fill="rgb(253,107,43)"/><text x="1126.00" y="318.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1124" y="292" width="2" height="15" fill="rgb(246,101,3)"/><text x="1127.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (4 samples, 0.43%)</title><rect x="1124" y="244" width="5" height="15" fill="rgb(250,156,46)"/><text x="1127.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (4 samples, 0.43%)</title><rect x="1124" y="260" width="5" height="15" fill="rgb(229,192,48)"/><text x="1127.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (4 samples, 0.43%)</title><rect x="1124" y="276" width="5" height="15" fill="rgb(246,110,53)"/><text x="1127.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.32%)</title><rect x="1126" y="292" width="3" height="15" fill="rgb(233,103,24)"/><text x="1129.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1129" y="244" width="2" height="15" fill="rgb(231,151,18)"/><text x="1132.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1129" y="260" width="2" height="15" fill="rgb(212,177,46)"/><text x="1132.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.54%)</title><rect x="1131" y="244" width="6" height="15" fill="rgb(227,120,12)"/><text x="1134.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.54%)</title><rect x="1131" y="260" width="6" height="15" fill="rgb(216,23,25)"/><text x="1134.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.54%)</title><rect x="1131" y="276" width="6" height="15" fill="rgb(209,71,23)"/><text x="1134.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.32%)</title><rect x="1133" y="292" width="4" height="15" fill="rgb(226,112,8)"/><text x="1136.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 1.19%)</title><rect x="1124" y="228" width="14" height="15" fill="rgb(238,225,4)"/><text x="1127.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="1137" y="244" width="1" height="15" fill="rgb(251,132,3)"/><text x="1140.00" y="254.50"></text></g><g><title>0x7f98b97d4254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1138" y="260" width="2" height="15" fill="rgb(249,163,26)"/><text x="1141.00" y="270.50"></text></g><g><title>0x7f98ce69cbb4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1147" y="292" width="2" height="15" fill="rgb(232,91,25)"/><text x="1150.00" y="302.50"></text></g><g><title>0x7f98ce69cbd3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1149" y="292" width="1" height="15" fill="rgb(242,195,45)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7f98ce69cbe7 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1150" y="292" width="1" height="15" fill="rgb(227,102,33)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7f98ce69cbf9 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1151" y="292" width="1" height="15" fill="rgb(222,30,50)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f98ce69cc2e (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1152" y="292" width="3" height="15" fill="rgb(232,4,48)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7f98ce69cc3e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1155" y="292" width="1" height="15" fill="rgb(218,105,22)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7f98ce69cc56 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1156" y="292" width="2" height="15" fill="rgb(208,11,5)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7f98b97d4265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.62%)</title><rect x="1140" y="260" width="19" height="15" fill="rgb(253,25,43)"/><text x="1143.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (14 samples, 1.52%)</title><rect x="1141" y="276" width="18" height="15" fill="rgb(233,100,14)"/><text x="1144.00" y="286.50"></text></g><g><title>0x7f98ce69cc6a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1158" y="292" width="1" height="15" fill="rgb(208,129,47)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7f98b97b39dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 2.71%)</title><rect x="1138" y="244" width="32" height="15" fill="rgb(250,69,29)"/><text x="1141.00" y="254.50">0x..</text></g><g><title>0x7f98b97d4279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.97%)</title><rect x="1159" y="260" width="11" height="15" fill="rgb(230,68,39)"/><text x="1162.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (40 samples, 4.33%)</title><rect x="1122" y="212" width="51" height="15" fill="rgb(233,180,5)"/><text x="1125.00" y="222.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (27 samples, 2.92%)</title><rect x="1138" y="228" width="35" height="15" fill="rgb(211,217,44)"/><text x="1141.00" y="238.50">tr..</text></g><g><title>0x7f98b97b39e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="1170" y="244" width="3" height="15" fill="rgb(224,151,14)"/><text x="1173.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.11%)</title><rect x="1173" y="228" width="1" height="15" fill="rgb(224,210,15)"/><text x="1176.00" y="238.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1174" y="228" width="1" height="15" fill="rgb(211,150,12)"/><text x="1177.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.43%)</title><rect x="1173" y="212" width="5" height="15" fill="rgb(229,72,47)"/><text x="1176.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1175" y="228" width="3" height="15" fill="rgb(228,109,17)"/><text x="1178.00" y="238.50"></text></g><g><title>_borrowed_reference (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1177" y="244" width="1" height="15" fill="rgb(229,203,6)"/><text x="1180.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (186 samples, 20.13%)</title><rect x="943" y="164" width="238" height="15" fill="rgb(248,22,35)"/><text x="946.00" y="174.50">_predict_proba_lr (sklearn/line..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (46 samples, 4.98%)</title><rect x="1122" y="180" width="59" height="15" fill="rgb(241,129,2)"/><text x="1125.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (46 samples, 4.98%)</title><rect x="1122" y="196" width="59" height="15" fill="rgb(227,149,49)"/><text x="1125.00" y="206.50">PyUFun..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="1178" y="212" width="3" height="15" fill="rgb(221,177,10)"/><text x="1181.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="1178" y="228" width="3" height="15" fill="rgb(237,45,37)"/><text x="1181.00" y="238.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1179" y="244" width="2" height="15" fill="rgb(253,42,1)"/><text x="1182.00" y="254.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.11%)</title><rect x="1181" y="164" width="1" height="15" fill="rgb(223,43,31)"/><text x="1184.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="1187" y="196" width="1" height="15" fill="rgb(234,13,15)"/><text x="1190.00" y="206.50"></text></g><g><title>all (924 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,48,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (924 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(246,31,54)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (197 samples, 21.32%)</title><rect x="938" y="68" width="252" height="15" fill="rgb(214,196,24)"/><text x="941.00" y="78.50">profile_skl (bench_LogisticRegres..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (197 samples, 21.32%)</title><rect x="938" y="84" width="252" height="15" fill="rgb(242,16,10)"/><text x="941.00" y="94.50">setup_profile (bench_LogisticRegr..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py) (197 samples, 21.32%)</title><rect x="938" y="100" width="252" height="15" fill="rgb(236,160,26)"/><text x="941.00" y="110.50">profile (bench_LogisticRegression..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (197 samples, 21.32%)</title><rect x="938" y="116" width="252" height="15" fill="rgb(243,178,5)"/><text x="941.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (195 samples, 21.10%)</title><rect x="940" y="132" width="250" height="15" fill="rgb(249,210,18)"/><text x="943.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (195 samples, 21.10%)</title><rect x="940" y="148" width="250" height="15" fill="rgb(240,74,46)"/><text x="943.00" y="158.50">predict_proba (sklearn/linear_mod..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.65%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(246,39,28)"/><text x="1185.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.43%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(232,105,13)"/><text x="1187.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(240,161,26)"/><text x="1191.00" y="206.50"></text></g></g></svg>