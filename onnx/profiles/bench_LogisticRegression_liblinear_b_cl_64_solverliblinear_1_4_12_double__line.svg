<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1638" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1621.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1621.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:31) (1 samples, 0.34%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(247,115,35)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:11) (1 samples, 0.34%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(235,183,42)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:39) (1 samples, 0.34%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(250,94,7)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.34%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(228,124,28)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:82) (1 samples, 0.34%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(254,97,3)"/><text x="13.00" y="126.50"></text></g><g><title>_get_xdtype (mlprodict/asv_benchmark/common_asv_skl.py:75) (1 samples, 0.34%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(237,228,53)"/><text x="13.00" y="142.50"></text></g><g><title>0x7f486810a120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(220,56,52)"/><text x="13.00" y="158.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:22) (1 samples, 0.34%)</title><rect x="14" y="100" width="4" height="15" fill="rgb(216,142,39)"/><text x="17.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.34%)</title><rect x="26" y="164" width="4" height="15" fill="rgb(244,219,32)"/><text x="29.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.34%)</title><rect x="30" y="164" width="4" height="15" fill="rgb(247,131,19)"/><text x="33.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.34%)</title><rect x="30" y="180" width="4" height="15" fill="rgb(238,13,22)"/><text x="33.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.34%)</title><rect x="38" y="180" width="4" height="15" fill="rgb(242,120,34)"/><text x="41.00" y="190.50"></text></g><g><title>0x7f486810a1ea (libc-2.29.so) (1 samples, 0.34%)</title><rect x="62" y="196" width="4" height="15" fill="rgb(246,171,40)"/><text x="65.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.02%)</title><rect x="66" y="196" width="12" height="15" fill="rgb(210,94,29)"/><text x="69.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 3.75%)</title><rect x="42" y="180" width="44" height="15" fill="rgb(233,0,47)"/><text x="45.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.68%)</title><rect x="78" y="196" width="8" height="15" fill="rgb(217,162,14)"/><text x="81.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 4.78%)</title><rect x="34" y="164" width="56" height="15" fill="rgb(216,70,52)"/><text x="37.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.34%)</title><rect x="86" y="180" width="4" height="15" fill="rgb(245,53,29)"/><text x="89.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="86" y="196" width="4" height="15" fill="rgb(239,194,9)"/><text x="89.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (17 samples, 5.80%)</title><rect x="26" y="148" width="68" height="15" fill="rgb(216,101,43)"/><text x="29.00" y="158.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.34%)</title><rect x="90" y="164" width="4" height="15" fill="rgb(254,167,49)"/><text x="93.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.34%)</title><rect x="94" y="148" width="4" height="15" fill="rgb(220,223,28)"/><text x="97.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1648) (2 samples, 0.68%)</title><rect x="98" y="148" width="8" height="15" fill="rgb(222,102,48)"/><text x="101.00" y="158.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.02%)</title><rect x="150" y="228" width="13" height="15" fill="rgb(217,133,36)"/><text x="153.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 4.10%)</title><rect x="126" y="212" width="49" height="15" fill="rgb(246,193,2)"/><text x="129.00" y="222.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.02%)</title><rect x="163" y="228" width="12" height="15" fill="rgb(250,98,24)"/><text x="166.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (17 samples, 5.80%)</title><rect x="122" y="180" width="69" height="15" fill="rgb(228,92,45)"/><text x="125.00" y="190.50">decisio..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (17 samples, 5.80%)</title><rect x="122" y="196" width="69" height="15" fill="rgb(254,84,2)"/><text x="125.00" y="206.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.37%)</title><rect x="175" y="212" width="16" height="15" fill="rgb(224,17,40)"/><text x="178.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="187" y="228" width="4" height="15" fill="rgb(214,193,3)"/><text x="190.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:461) (1 samples, 0.34%)</title><rect x="199" y="196" width="4" height="15" fill="rgb(209,180,34)"/><text x="202.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.34%)</title><rect x="203" y="196" width="4" height="15" fill="rgb(229,33,26)"/><text x="206.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.34%)</title><rect x="219" y="212" width="4" height="15" fill="rgb(209,114,15)"/><text x="222.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 1.71%)</title><rect x="207" y="196" width="20" height="15" fill="rgb(253,97,19)"/><text x="210.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.34%)</title><rect x="223" y="212" width="4" height="15" fill="rgb(235,178,4)"/><text x="226.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:503) (1 samples, 0.34%)</title><rect x="227" y="196" width="4" height="15" fill="rgb(212,205,53)"/><text x="230.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 1.71%)</title><rect x="231" y="228" width="20" height="15" fill="rgb(250,174,20)"/><text x="234.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 2.05%)</title><rect x="231" y="196" width="24" height="15" fill="rgb(206,165,34)"/><text x="234.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (6 samples, 2.05%)</title><rect x="231" y="212" width="24" height="15" fill="rgb(212,9,26)"/><text x="234.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.34%)</title><rect x="251" y="228" width="4" height="15" fill="rgb(210,94,5)"/><text x="254.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.02%)</title><rect x="255" y="196" width="12" height="15" fill="rgb(237,122,45)"/><text x="258.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.34%)</title><rect x="263" y="212" width="4" height="15" fill="rgb(207,214,1)"/><text x="266.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.34%)</title><rect x="267" y="196" width="4" height="15" fill="rgb(209,168,19)"/><text x="270.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.34%)</title><rect x="267" y="212" width="4" height="15" fill="rgb(234,229,17)"/><text x="270.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.68%)</title><rect x="271" y="228" width="8" height="15" fill="rgb(222,109,20)"/><text x="274.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 1.02%)</title><rect x="271" y="212" width="12" height="15" fill="rgb(221,168,19)"/><text x="274.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.34%)</title><rect x="279" y="228" width="4" height="15" fill="rgb(234,146,32)"/><text x="282.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.34%)</title><rect x="283" y="228" width="4" height="15" fill="rgb(227,28,27)"/><text x="286.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.71%)</title><rect x="271" y="196" width="20" height="15" fill="rgb(224,35,37)"/><text x="274.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.68%)</title><rect x="283" y="212" width="8" height="15" fill="rgb(236,38,1)"/><text x="286.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.34%)</title><rect x="287" y="228" width="4" height="15" fill="rgb(211,58,4)"/><text x="290.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.34%)</title><rect x="287" y="244" width="4" height="15" fill="rgb(230,51,7)"/><text x="290.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.34%)</title><rect x="291" y="196" width="4" height="15" fill="rgb(235,30,27)"/><text x="294.00" y="206.50"></text></g><g><title>0x7f48681c7dd1 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="308" y="228" width="4" height="15" fill="rgb(205,51,48)"/><text x="311.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (5 samples, 1.71%)</title><rect x="312" y="228" width="20" height="15" fill="rgb(211,7,29)"/><text x="315.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (2 samples, 0.68%)</title><rect x="332" y="228" width="8" height="15" fill="rgb(207,189,7)"/><text x="335.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.68%)</title><rect x="340" y="228" width="8" height="15" fill="rgb(235,176,38)"/><text x="343.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (14 samples, 4.78%)</title><rect x="295" y="196" width="57" height="15" fill="rgb(229,215,9)"/><text x="298.00" y="206.50">check_..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (14 samples, 4.78%)</title><rect x="295" y="212" width="57" height="15" fill="rgb(247,114,24)"/><text x="298.00" y="222.50">_asser..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="348" y="228" width="4" height="15" fill="rgb(228,78,41)"/><text x="351.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.34%)</title><rect x="352" y="212" width="4" height="15" fill="rgb(219,189,43)"/><text x="355.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.68%)</title><rect x="356" y="212" width="8" height="15" fill="rgb(236,18,26)"/><text x="359.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.34%)</title><rect x="364" y="212" width="4" height="15" fill="rgb(234,180,27)"/><text x="367.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (2 samples, 0.68%)</title><rect x="368" y="212" width="8" height="15" fill="rgb(209,207,45)"/><text x="371.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (49 samples, 16.72%)</title><rect x="191" y="180" width="197" height="15" fill="rgb(221,149,2)"/><text x="194.00" y="190.50">decision_function (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 3.07%)</title><rect x="352" y="196" width="36" height="15" fill="rgb(233,176,6)"/><text x="355.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.02%)</title><rect x="376" y="212" width="12" height="15" fill="rgb(233,179,35)"/><text x="379.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.02%)</title><rect x="376" y="228" width="12" height="15" fill="rgb(224,204,50)"/><text x="379.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.68%)</title><rect x="380" y="244" width="8" height="15" fill="rgb(245,7,16)"/><text x="383.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.34%)</title><rect x="388" y="180" width="4" height="15" fill="rgb(249,120,43)"/><text x="391.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.34%)</title><rect x="392" y="180" width="4" height="15" fill="rgb(245,7,27)"/><text x="395.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:726) (1 samples, 0.34%)</title><rect x="392" y="196" width="4" height="15" fill="rgb(244,99,13)"/><text x="395.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.34%)</title><rect x="392" y="212" width="4" height="15" fill="rgb(215,79,3)"/><text x="395.00" y="222.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.34%)</title><rect x="392" y="228" width="4" height="15" fill="rgb(251,199,16)"/><text x="395.00" y="238.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.34%)</title><rect x="392" y="244" width="4" height="15" fill="rgb(236,119,45)"/><text x="395.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="396" y="212" width="4" height="15" fill="rgb(227,99,19)"/><text x="399.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="396" y="228" width="4" height="15" fill="rgb(249,20,33)"/><text x="399.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="396" y="244" width="4" height="15" fill="rgb(250,48,37)"/><text x="399.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.34%)</title><rect x="396" y="260" width="4" height="15" fill="rgb(244,25,7)"/><text x="399.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3116) (1 samples, 0.34%)</title><rect x="400" y="228" width="4" height="15" fill="rgb(222,187,1)"/><text x="403.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="404" y="228" width="4" height="15" fill="rgb(252,59,35)"/><text x="407.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.34%)</title><rect x="404" y="244" width="4" height="15" fill="rgb(218,4,3)"/><text x="407.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.34%)</title><rect x="408" y="260" width="4" height="15" fill="rgb(207,115,16)"/><text x="411.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1515) (1 samples, 0.34%)</title><rect x="412" y="260" width="4" height="15" fill="rgb(235,14,9)"/><text x="415.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="416" y="276" width="4" height="15" fill="rgb(217,41,20)"/><text x="419.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.34%)</title><rect x="416" y="292" width="4" height="15" fill="rgb(222,219,32)"/><text x="419.00" y="302.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.34%)</title><rect x="416" y="308" width="4" height="15" fill="rgb(221,23,38)"/><text x="419.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.34%)</title><rect x="416" y="324" width="4" height="15" fill="rgb(228,103,41)"/><text x="419.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.34%)</title><rect x="416" y="340" width="4" height="15" fill="rgb(205,105,20)"/><text x="419.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.68%)</title><rect x="416" y="260" width="8" height="15" fill="rgb(221,107,52)"/><text x="419.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="420" y="276" width="4" height="15" fill="rgb(246,207,14)"/><text x="423.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.34%)</title><rect x="420" y="292" width="4" height="15" fill="rgb(221,43,41)"/><text x="423.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.34%)</title><rect x="424" y="260" width="4" height="15" fill="rgb(245,210,54)"/><text x="427.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.34%)</title><rect x="424" y="276" width="4" height="15" fill="rgb(245,9,51)"/><text x="427.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.34%)</title><rect x="428" y="260" width="4" height="15" fill="rgb(232,65,41)"/><text x="431.00" y="270.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1220) (1 samples, 0.34%)</title><rect x="428" y="276" width="4" height="15" fill="rgb(219,223,14)"/><text x="431.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 2.39%)</title><rect x="408" y="244" width="28" height="15" fill="rgb(250,110,34)"/><text x="411.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.34%)</title><rect x="432" y="260" width="4" height="15" fill="rgb(237,56,38)"/><text x="435.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:656) (1 samples, 0.34%)</title><rect x="432" y="276" width="4" height="15" fill="rgb(251,5,6)"/><text x="435.00" y="286.50"></text></g><g><title>array_add (number.c:330) (11 samples, 3.75%)</title><rect x="396" y="196" width="44" height="15" fill="rgb(252,52,14)"/><text x="399.00" y="206.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 3.41%)</title><rect x="400" y="212" width="40" height="15" fill="rgb(244,160,24)"/><text x="403.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.73%)</title><rect x="408" y="228" width="32" height="15" fill="rgb(217,30,39)"/><text x="411.00" y="238.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.34%)</title><rect x="436" y="244" width="4" height="15" fill="rgb(210,86,25)"/><text x="439.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:540) (1 samples, 0.34%)</title><rect x="440" y="196" width="4" height="15" fill="rgb(208,166,24)"/><text x="443.00" y="206.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="448" y="260" width="5" height="15" fill="rgb(227,173,28)"/><text x="451.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1487) (1 samples, 0.34%)</title><rect x="448" y="276" width="5" height="15" fill="rgb(235,135,31)"/><text x="451.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.68%)</title><rect x="448" y="244" width="9" height="15" fill="rgb(225,107,4)"/><text x="451.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="453" y="260" width="4" height="15" fill="rgb(215,113,49)"/><text x="456.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.34%)</title><rect x="453" y="276" width="4" height="15" fill="rgb(217,214,26)"/><text x="456.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.34%)</title><rect x="453" y="292" width="4" height="15" fill="rgb(242,116,31)"/><text x="456.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="453" y="308" width="4" height="15" fill="rgb(218,115,15)"/><text x="456.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.34%)</title><rect x="453" y="324" width="4" height="15" fill="rgb(208,196,13)"/><text x="456.00" y="334.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.34%)</title><rect x="453" y="340" width="4" height="15" fill="rgb(207,15,20)"/><text x="456.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.34%)</title><rect x="457" y="244" width="4" height="15" fill="rgb(218,145,15)"/><text x="460.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.34%)</title><rect x="457" y="260" width="4" height="15" fill="rgb(253,160,11)"/><text x="460.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="457" y="276" width="4" height="15" fill="rgb(238,83,25)"/><text x="460.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="457" y="292" width="4" height="15" fill="rgb(218,78,42)"/><text x="460.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.34%)</title><rect x="461" y="244" width="4" height="15" fill="rgb(215,227,40)"/><text x="464.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:411) (1 samples, 0.34%)</title><rect x="461" y="260" width="4" height="15" fill="rgb(240,4,24)"/><text x="464.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.34%)</title><rect x="461" y="276" width="4" height="15" fill="rgb(248,0,49)"/><text x="464.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.71%)</title><rect x="448" y="212" width="21" height="15" fill="rgb(248,143,43)"/><text x="451.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (5 samples, 1.71%)</title><rect x="448" y="228" width="21" height="15" fill="rgb(210,4,13)"/><text x="451.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3090) (1 samples, 0.34%)</title><rect x="465" y="244" width="4" height="15" fill="rgb(241,63,33)"/><text x="468.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="469" y="212" width="4" height="15" fill="rgb(213,54,23)"/><text x="472.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.34%)</title><rect x="469" y="228" width="4" height="15" fill="rgb(237,79,49)"/><text x="472.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (8 samples, 2.73%)</title><rect x="444" y="196" width="33" height="15" fill="rgb(216,73,31)"/><text x="447.00" y="206.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.34%)</title><rect x="473" y="212" width="4" height="15" fill="rgb(229,146,24)"/><text x="476.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (90 samples, 30.72%)</title><rect x="122" y="164" width="363" height="15" fill="rgb(215,151,21)"/><text x="125.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (22 samples, 7.51%)</title><rect x="396" y="180" width="89" height="15" fill="rgb(228,197,44)"/><text x="399.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.68%)</title><rect x="477" y="196" width="8" height="15" fill="rgb(241,73,27)"/><text x="480.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.68%)</title><rect x="493" y="180" width="8" height="15" fill="rgb(247,182,54)"/><text x="496.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.68%)</title><rect x="493" y="196" width="8" height="15" fill="rgb(248,2,19)"/><text x="496.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.68%)</title><rect x="493" y="212" width="8" height="15" fill="rgb(211,227,10)"/><text x="496.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.68%)</title><rect x="493" y="228" width="8" height="15" fill="rgb(247,218,3)"/><text x="496.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="497" y="244" width="4" height="15" fill="rgb(243,102,53)"/><text x="500.00" y="254.50"></text></g><g><title>0x7f48681c7130 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="497" y="260" width="4" height="15" fill="rgb(228,54,16)"/><text x="500.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:370) (1 samples, 0.34%)</title><rect x="501" y="276" width="4" height="15" fill="rgb(223,3,19)"/><text x="504.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h:96) (1 samples, 0.34%)</title><rect x="501" y="292" width="4" height="15" fill="rgb(213,107,7)"/><text x="504.00" y="302.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.34%)</title><rect x="501" y="308" width="4" height="15" fill="rgb(252,187,12)"/><text x="504.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.68%)</title><rect x="501" y="228" width="8" height="15" fill="rgb(217,133,37)"/><text x="504.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.68%)</title><rect x="501" y="244" width="8" height="15" fill="rgb(238,60,18)"/><text x="504.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.68%)</title><rect x="501" y="260" width="8" height="15" fill="rgb(245,225,21)"/><text x="504.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.34%)</title><rect x="505" y="276" width="4" height="15" fill="rgb(212,67,23)"/><text x="508.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:312) (1 samples, 0.34%)</title><rect x="505" y="292" width="4" height="15" fill="rgb(229,43,3)"/><text x="508.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h:135) (1 samples, 0.34%)</title><rect x="505" y="308" width="4" height="15" fill="rgb(207,23,20)"/><text x="508.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.02%)</title><rect x="501" y="180" width="12" height="15" fill="rgb(239,87,3)"/><text x="504.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.02%)</title><rect x="501" y="196" width="12" height="15" fill="rgb(221,135,53)"/><text x="504.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 1.02%)</title><rect x="501" y="212" width="12" height="15" fill="rgb(209,69,22)"/><text x="504.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:733) (1 samples, 0.34%)</title><rect x="509" y="228" width="4" height="15" fill="rgb(218,104,47)"/><text x="512.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.34%)</title><rect x="509" y="244" width="4" height="15" fill="rgb(252,84,21)"/><text x="512.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (8 samples, 2.73%)</title><rect x="485" y="164" width="32" height="15" fill="rgb(225,121,24)"/><text x="488.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="513" y="180" width="4" height="15" fill="rgb(210,215,27)"/><text x="516.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.34%)</title><rect x="513" y="196" width="4" height="15" fill="rgb(217,146,6)"/><text x="516.00" y="206.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.34%)</title><rect x="537" y="180" width="4" height="15" fill="rgb(229,175,39)"/><text x="540.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.34%)</title><rect x="541" y="196" width="4" height="15" fill="rgb(240,119,11)"/><text x="544.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.34%)</title><rect x="541" y="212" width="4" height="15" fill="rgb(213,24,3)"/><text x="544.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.68%)</title><rect x="541" y="180" width="8" height="15" fill="rgb(236,226,41)"/><text x="544.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.34%)</title><rect x="545" y="196" width="4" height="15" fill="rgb(223,93,50)"/><text x="548.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.34%)</title><rect x="545" y="212" width="4" height="15" fill="rgb(206,91,14)"/><text x="548.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.34%)</title><rect x="553" y="228" width="4" height="15" fill="rgb(254,83,30)"/><text x="556.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:63) (1 samples, 0.34%)</title><rect x="557" y="308" width="4" height="15" fill="rgb(218,171,32)"/><text x="560.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 1.37%)</title><rect x="557" y="228" width="16" height="15" fill="rgb(249,10,51)"/><text x="560.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.37%)</title><rect x="557" y="244" width="16" height="15" fill="rgb(220,212,15)"/><text x="560.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 1.37%)</title><rect x="557" y="260" width="16" height="15" fill="rgb(244,89,29)"/><text x="560.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 1.37%)</title><rect x="557" y="276" width="16" height="15" fill="rgb(246,35,46)"/><text x="560.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 1.37%)</title><rect x="557" y="292" width="16" height="15" fill="rgb(253,74,45)"/><text x="560.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (3 samples, 1.02%)</title><rect x="561" y="308" width="12" height="15" fill="rgb(243,227,18)"/><text x="564.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.68%)</title><rect x="573" y="244" width="8" height="15" fill="rgb(237,3,7)"/><text x="576.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.34%)</title><rect x="581" y="244" width="4" height="15" fill="rgb(224,177,50)"/><text x="584.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.34%)</title><rect x="581" y="260" width="4" height="15" fill="rgb(229,52,48)"/><text x="584.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.34%)</title><rect x="581" y="276" width="4" height="15" fill="rgb(210,1,31)"/><text x="584.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.34%)</title><rect x="585" y="260" width="4" height="15" fill="rgb(210,85,1)"/><text x="588.00" y="270.50"></text></g><g><title>0x7f486730ac90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="585" y="276" width="4" height="15" fill="rgb(245,100,36)"/><text x="588.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.34%)</title><rect x="589" y="276" width="4" height="15" fill="rgb(215,203,26)"/><text x="592.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.34%)</title><rect x="589" y="292" width="4" height="15" fill="rgb(216,1,25)"/><text x="592.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.34%)</title><rect x="589" y="308" width="4" height="15" fill="rgb(242,160,7)"/><text x="592.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="589" y="324" width="4" height="15" fill="rgb(236,157,30)"/><text x="592.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="589" y="340" width="4" height="15" fill="rgb(237,147,50)"/><text x="592.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.34%)</title><rect x="593" y="276" width="4" height="15" fill="rgb(226,16,26)"/><text x="596.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.34%)</title><rect x="593" y="292" width="4" height="15" fill="rgb(227,71,33)"/><text x="596.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.34%)</title><rect x="593" y="308" width="4" height="15" fill="rgb(223,141,53)"/><text x="596.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.34%)</title><rect x="593" y="324" width="4" height="15" fill="rgb(252,174,17)"/><text x="596.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 4.44%)</title><rect x="549" y="180" width="53" height="15" fill="rgb(250,193,36)"/><text x="552.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 4.44%)</title><rect x="549" y="196" width="53" height="15" fill="rgb(254,90,43)"/><text x="552.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 4.10%)</title><rect x="553" y="212" width="49" height="15" fill="rgb(236,224,30)"/><text x="556.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.39%)</title><rect x="573" y="228" width="29" height="15" fill="rgb(223,48,4)"/><text x="576.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.37%)</title><rect x="585" y="244" width="17" height="15" fill="rgb(226,210,31)"/><text x="588.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.02%)</title><rect x="589" y="260" width="13" height="15" fill="rgb(209,224,47)"/><text x="592.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.34%)</title><rect x="597" y="276" width="5" height="15" fill="rgb(235,185,32)"/><text x="600.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.34%)</title><rect x="602" y="196" width="4" height="15" fill="rgb(240,25,34)"/><text x="605.00" y="206.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.34%)</title><rect x="602" y="212" width="4" height="15" fill="rgb(217,90,49)"/><text x="605.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.34%)</title><rect x="606" y="228" width="4" height="15" fill="rgb(206,187,14)"/><text x="609.00" y="238.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1037) (1 samples, 0.34%)</title><rect x="606" y="244" width="4" height="15" fill="rgb(239,131,50)"/><text x="609.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.02%)</title><rect x="602" y="180" width="12" height="15" fill="rgb(248,20,49)"/><text x="605.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.68%)</title><rect x="606" y="196" width="8" height="15" fill="rgb(213,216,47)"/><text x="609.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.68%)</title><rect x="606" y="212" width="8" height="15" fill="rgb(244,54,50)"/><text x="609.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.34%)</title><rect x="610" y="228" width="4" height="15" fill="rgb(243,204,5)"/><text x="613.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.34%)</title><rect x="610" y="244" width="4" height="15" fill="rgb(240,206,32)"/><text x="613.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:38) (150 samples, 51.19%)</title><rect x="14" y="52" width="604" height="15" fill="rgb(227,85,12)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:37) (150 samples, 51.19%)</title><rect x="14" y="68" width="604" height="15" fill="rgb(222,74,49)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_doub..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:29) (150 samples, 51.19%)</title><rect x="14" y="84" width="604" height="15" fill="rgb(226,210,54)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_do..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:23) (149 samples, 50.85%)</title><rect x="18" y="100" width="600" height="15" fill="rgb(235,2,12)"/><text x="21.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (147 samples, 50.17%)</title><rect x="26" y="116" width="592" height="15" fill="rgb(245,32,11)"/><text x="29.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (147 samples, 50.17%)</title><rect x="26" y="132" width="592" height="15" fill="rgb(234,59,28)"/><text x="29.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (127 samples, 43.34%)</title><rect x="106" y="148" width="512" height="15" fill="rgb(250,112,29)"/><text x="109.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (25 samples, 8.53%)</title><rect x="517" y="164" width="101" height="15" fill="rgb(215,2,45)"/><text x="520.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.34%)</title><rect x="614" y="180" width="4" height="15" fill="rgb(243,158,22)"/><text x="617.00" y="190.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.34%)</title><rect x="618" y="852" width="4" height="15" fill="rgb(229,15,18)"/><text x="621.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.34%)</title><rect x="618" y="868" width="4" height="15" fill="rgb(234,11,3)"/><text x="621.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.34%)</title><rect x="618" y="884" width="4" height="15" fill="rgb(247,26,37)"/><text x="621.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.34%)</title><rect x="618" y="900" width="4" height="15" fill="rgb(243,12,16)"/><text x="621.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.34%)</title><rect x="618" y="916" width="4" height="15" fill="rgb(205,51,5)"/><text x="621.00" y="926.50"></text></g><g><title>join (posixpath.py:92) (1 samples, 0.34%)</title><rect x="618" y="932" width="4" height="15" fill="rgb(239,27,29)"/><text x="621.00" y="942.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="618" y="948" width="4" height="15" fill="rgb(214,134,3)"/><text x="621.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.34%)</title><rect x="622" y="852" width="4" height="15" fill="rgb(249,222,39)"/><text x="625.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.34%)</title><rect x="622" y="868" width="4" height="15" fill="rgb(234,101,47)"/><text x="625.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.34%)</title><rect x="622" y="884" width="4" height="15" fill="rgb(208,32,29)"/><text x="625.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.34%)</title><rect x="622" y="900" width="4" height="15" fill="rgb(243,141,18)"/><text x="625.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.34%)</title><rect x="622" y="916" width="4" height="15" fill="rgb(208,11,35)"/><text x="625.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.34%)</title><rect x="622" y="932" width="4" height="15" fill="rgb(215,119,12)"/><text x="625.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.34%)</title><rect x="622" y="948" width="4" height="15" fill="rgb(210,175,3)"/><text x="625.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.34%)</title><rect x="622" y="964" width="4" height="15" fill="rgb(236,176,38)"/><text x="625.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.34%)</title><rect x="622" y="980" width="4" height="15" fill="rgb(228,129,15)"/><text x="625.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.34%)</title><rect x="622" y="996" width="4" height="15" fill="rgb(231,208,25)"/><text x="625.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.34%)</title><rect x="622" y="1012" width="4" height="15" fill="rgb(227,87,32)"/><text x="625.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.34%)</title><rect x="626" y="884" width="4" height="15" fill="rgb(205,17,31)"/><text x="629.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.34%)</title><rect x="626" y="900" width="4" height="15" fill="rgb(224,157,28)"/><text x="629.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="626" y="916" width="4" height="15" fill="rgb(229,196,15)"/><text x="629.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="626" y="932" width="4" height="15" fill="rgb(208,176,6)"/><text x="629.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.34%)</title><rect x="626" y="948" width="4" height="15" fill="rgb(229,157,8)"/><text x="629.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.34%)</title><rect x="626" y="964" width="4" height="15" fill="rgb(237,61,50)"/><text x="629.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (4 samples, 1.37%)</title><rect x="618" y="148" width="16" height="15" fill="rgb(217,131,0)"/><text x="621.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="164" width="16" height="15" fill="rgb(233,145,15)"/><text x="621.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.37%)</title><rect x="618" y="180" width="16" height="15" fill="rgb(215,168,26)"/><text x="621.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="196" width="16" height="15" fill="rgb(213,1,15)"/><text x="621.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="212" width="16" height="15" fill="rgb(208,135,34)"/><text x="621.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="618" y="228" width="16" height="15" fill="rgb(239,19,4)"/><text x="621.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="618" y="244" width="16" height="15" fill="rgb(214,134,27)"/><text x="621.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="618" y="260" width="16" height="15" fill="rgb(205,79,22)"/><text x="621.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="276" width="16" height="15" fill="rgb(241,8,1)"/><text x="621.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.37%)</title><rect x="618" y="292" width="16" height="15" fill="rgb(241,20,45)"/><text x="621.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="308" width="16" height="15" fill="rgb(242,219,16)"/><text x="621.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="618" y="324" width="16" height="15" fill="rgb(250,137,41)"/><text x="621.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="618" y="340" width="16" height="15" fill="rgb(235,46,18)"/><text x="621.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="618" y="356" width="16" height="15" fill="rgb(216,103,46)"/><text x="621.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="372" width="16" height="15" fill="rgb(216,112,53)"/><text x="621.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.37%)</title><rect x="618" y="388" width="16" height="15" fill="rgb(239,28,13)"/><text x="621.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="404" width="16" height="15" fill="rgb(224,18,9)"/><text x="621.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="618" y="420" width="16" height="15" fill="rgb(227,146,51)"/><text x="621.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="618" y="436" width="16" height="15" fill="rgb(212,229,49)"/><text x="621.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="618" y="452" width="16" height="15" fill="rgb(208,2,42)"/><text x="621.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="468" width="16" height="15" fill="rgb(214,3,26)"/><text x="621.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.37%)</title><rect x="618" y="484" width="16" height="15" fill="rgb(229,60,8)"/><text x="621.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="500" width="16" height="15" fill="rgb(207,159,33)"/><text x="621.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="618" y="516" width="16" height="15" fill="rgb(247,93,45)"/><text x="621.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="618" y="532" width="16" height="15" fill="rgb(225,196,15)"/><text x="621.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="618" y="548" width="16" height="15" fill="rgb(220,182,54)"/><text x="621.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="564" width="16" height="15" fill="rgb(210,166,46)"/><text x="621.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.37%)</title><rect x="618" y="580" width="16" height="15" fill="rgb(210,153,53)"/><text x="621.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="596" width="16" height="15" fill="rgb(227,175,52)"/><text x="621.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.37%)</title><rect x="618" y="612" width="16" height="15" fill="rgb(230,42,54)"/><text x="621.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="628" width="16" height="15" fill="rgb(218,89,44)"/><text x="621.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="644" width="16" height="15" fill="rgb(213,10,30)"/><text x="621.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="618" y="660" width="16" height="15" fill="rgb(240,100,19)"/><text x="621.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="618" y="676" width="16" height="15" fill="rgb(209,210,49)"/><text x="621.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="618" y="692" width="16" height="15" fill="rgb(215,100,42)"/><text x="621.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="708" width="16" height="15" fill="rgb(242,128,44)"/><text x="621.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.37%)</title><rect x="618" y="724" width="16" height="15" fill="rgb(228,138,39)"/><text x="621.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="618" y="740" width="16" height="15" fill="rgb(218,108,9)"/><text x="621.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="618" y="756" width="16" height="15" fill="rgb(239,79,30)"/><text x="621.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="618" y="772" width="16" height="15" fill="rgb(249,50,5)"/><text x="621.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="618" y="788" width="16" height="15" fill="rgb(244,47,45)"/><text x="621.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="618" y="804" width="16" height="15" fill="rgb(227,108,47)"/><text x="621.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.37%)</title><rect x="618" y="820" width="16" height="15" fill="rgb(240,194,19)"/><text x="621.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.37%)</title><rect x="618" y="836" width="16" height="15" fill="rgb(236,198,53)"/><text x="621.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.68%)</title><rect x="626" y="852" width="8" height="15" fill="rgb(244,167,12)"/><text x="629.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.68%)</title><rect x="626" y="868" width="8" height="15" fill="rgb(213,149,53)"/><text x="629.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.34%)</title><rect x="630" y="884" width="4" height="15" fill="rgb(211,7,4)"/><text x="633.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.34%)</title><rect x="630" y="900" width="4" height="15" fill="rgb(244,71,52)"/><text x="633.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.34%)</title><rect x="630" y="916" width="4" height="15" fill="rgb(233,127,8)"/><text x="633.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.34%)</title><rect x="630" y="932" width="4" height="15" fill="rgb(220,120,37)"/><text x="633.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.34%)</title><rect x="630" y="948" width="4" height="15" fill="rgb(242,172,21)"/><text x="633.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.34%)</title><rect x="630" y="964" width="4" height="15" fill="rgb(239,211,13)"/><text x="633.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.34%)</title><rect x="630" y="980" width="4" height="15" fill="rgb(207,30,40)"/><text x="633.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="630" y="996" width="4" height="15" fill="rgb(247,139,21)"/><text x="633.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.34%)</title><rect x="630" y="1012" width="4" height="15" fill="rgb(236,136,30)"/><text x="633.00" y="1022.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.34%)</title><rect x="630" y="1028" width="4" height="15" fill="rgb(244,184,9)"/><text x="633.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (1 samples, 0.34%)</title><rect x="634" y="148" width="4" height="15" fill="rgb(250,46,32)"/><text x="637.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="164" width="4" height="15" fill="rgb(205,7,23)"/><text x="637.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="180" width="4" height="15" fill="rgb(251,186,42)"/><text x="637.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="634" y="196" width="4" height="15" fill="rgb(235,156,26)"/><text x="637.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="634" y="212" width="4" height="15" fill="rgb(252,155,35)"/><text x="637.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="228" width="4" height="15" fill="rgb(228,74,16)"/><text x="637.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (1 samples, 0.34%)</title><rect x="634" y="244" width="4" height="15" fill="rgb(205,208,44)"/><text x="637.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="260" width="4" height="15" fill="rgb(218,63,42)"/><text x="637.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="276" width="4" height="15" fill="rgb(250,42,31)"/><text x="637.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="634" y="292" width="4" height="15" fill="rgb(209,215,52)"/><text x="637.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="634" y="308" width="4" height="15" fill="rgb(225,45,9)"/><text x="637.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="324" width="4" height="15" fill="rgb(236,20,38)"/><text x="637.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:23) (1 samples, 0.34%)</title><rect x="634" y="340" width="4" height="15" fill="rgb(248,50,14)"/><text x="637.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="356" width="4" height="15" fill="rgb(238,147,31)"/><text x="637.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="372" width="4" height="15" fill="rgb(220,201,3)"/><text x="637.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="634" y="388" width="4" height="15" fill="rgb(217,11,24)"/><text x="637.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="634" y="404" width="4" height="15" fill="rgb(227,141,19)"/><text x="637.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="420" width="4" height="15" fill="rgb(247,145,7)"/><text x="637.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py:19) (1 samples, 0.34%)</title><rect x="634" y="436" width="4" height="15" fill="rgb(243,73,53)"/><text x="637.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="452" width="4" height="15" fill="rgb(251,5,51)"/><text x="637.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="468" width="4" height="15" fill="rgb(236,23,12)"/><text x="637.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="634" y="484" width="4" height="15" fill="rgb(208,180,3)"/><text x="637.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="634" y="500" width="4" height="15" fill="rgb(230,7,1)"/><text x="637.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="516" width="4" height="15" fill="rgb(252,88,41)"/><text x="637.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py:28) (1 samples, 0.34%)</title><rect x="634" y="532" width="4" height="15" fill="rgb(250,152,52)"/><text x="637.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="548" width="4" height="15" fill="rgb(231,101,17)"/><text x="637.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="564" width="4" height="15" fill="rgb(208,26,33)"/><text x="637.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="634" y="580" width="4" height="15" fill="rgb(224,143,50)"/><text x="637.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="634" y="596" width="4" height="15" fill="rgb(223,65,32)"/><text x="637.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="612" width="4" height="15" fill="rgb(208,64,36)"/><text x="637.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:38) (1 samples, 0.34%)</title><rect x="634" y="628" width="4" height="15" fill="rgb(221,149,48)"/><text x="637.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="634" y="644" width="4" height="15" fill="rgb(241,99,29)"/><text x="637.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="660" width="4" height="15" fill="rgb(206,82,23)"/><text x="637.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="676" width="4" height="15" fill="rgb(252,202,19)"/><text x="637.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="692" width="4" height="15" fill="rgb(247,16,49)"/><text x="637.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="634" y="708" width="4" height="15" fill="rgb(243,227,5)"/><text x="637.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="634" y="724" width="4" height="15" fill="rgb(211,65,8)"/><text x="637.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="740" width="4" height="15" fill="rgb(240,182,4)"/><text x="637.00" y="750.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/__init__.py:8) (1 samples, 0.34%)</title><rect x="634" y="756" width="4" height="15" fill="rgb(243,183,17)"/><text x="637.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="772" width="4" height="15" fill="rgb(251,71,13)"/><text x="637.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="788" width="4" height="15" fill="rgb(211,30,16)"/><text x="637.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="634" y="804" width="4" height="15" fill="rgb(235,97,35)"/><text x="637.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="634" y="820" width="4" height="15" fill="rgb(214,19,43)"/><text x="637.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="836" width="4" height="15" fill="rgb(225,179,48)"/><text x="637.00" y="846.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/_supervised.py:23) (1 samples, 0.34%)</title><rect x="634" y="852" width="4" height="15" fill="rgb(251,181,30)"/><text x="637.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="634" y="868" width="4" height="15" fill="rgb(228,141,0)"/><text x="637.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="634" y="884" width="4" height="15" fill="rgb(235,224,4)"/><text x="637.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.34%)</title><rect x="634" y="900" width="4" height="15" fill="rgb(224,97,22)"/><text x="637.00" y="910.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.34%)</title><rect x="634" y="916" width="4" height="15" fill="rgb(239,57,40)"/><text x="637.00" y="926.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.34%)</title><rect x="634" y="932" width="4" height="15" fill="rgb(217,190,0)"/><text x="637.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="634" y="948" width="4" height="15" fill="rgb(250,115,28)"/><text x="637.00" y="958.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="964" width="4" height="15" fill="rgb(243,19,36)"/><text x="637.00" y="974.50"></text></g><g><title>0x7f4868371995 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="980" width="4" height="15" fill="rgb(234,186,15)"/><text x="637.00" y="990.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="996" width="4" height="15" fill="rgb(210,12,30)"/><text x="637.00" y="1006.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="1012" width="4" height="15" fill="rgb(208,155,3)"/><text x="637.00" y="1022.50"></text></g><g><title>0x7f4868371258 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="1028" width="4" height="15" fill="rgb(210,170,17)"/><text x="637.00" y="1038.50"></text></g><g><title>0x7f48683bed7a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="1044" width="4" height="15" fill="rgb(249,206,22)"/><text x="637.00" y="1054.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="1060" width="4" height="15" fill="rgb(208,46,49)"/><text x="637.00" y="1070.50"></text></g><g><title>0x7f48683bf18b (ld-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="1076" width="4" height="15" fill="rgb(217,144,1)"/><text x="637.00" y="1086.50"></text></g><g><title>0x7f48683b4afb (ld-2.29.so) (1 samples, 0.34%)</title><rect x="634" y="1092" width="4" height="15" fill="rgb(231,203,24)"/><text x="637.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:17) (1 samples, 0.34%)</title><rect x="638" y="580" width="4" height="15" fill="rgb(247,112,36)"/><text x="641.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="638" y="596" width="4" height="15" fill="rgb(221,106,39)"/><text x="641.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="638" y="612" width="4" height="15" fill="rgb(241,200,53)"/><text x="641.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="638" y="628" width="4" height="15" fill="rgb(248,30,47)"/><text x="641.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="638" y="644" width="4" height="15" fill="rgb(239,0,28)"/><text x="641.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="638" y="660" width="4" height="15" fill="rgb(246,70,37)"/><text x="641.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py:60) (1 samples, 0.34%)</title><rect x="638" y="676" width="4" height="15" fill="rgb(238,205,46)"/><text x="641.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py:36) (1 samples, 0.34%)</title><rect x="638" y="692" width="4" height="15" fill="rgb(219,146,4)"/><text x="641.00" y="702.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.68%)</title><rect x="638" y="244" width="8" height="15" fill="rgb(253,14,35)"/><text x="641.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="638" y="260" width="8" height="15" fill="rgb(225,144,46)"/><text x="641.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="638" y="276" width="8" height="15" fill="rgb(220,117,10)"/><text x="641.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="638" y="292" width="8" height="15" fill="rgb(223,155,47)"/><text x="641.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="638" y="308" width="8" height="15" fill="rgb(234,127,13)"/><text x="641.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="638" y="324" width="8" height="15" fill="rgb(250,40,45)"/><text x="641.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.68%)</title><rect x="638" y="340" width="8" height="15" fill="rgb(254,185,52)"/><text x="641.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="638" y="356" width="8" height="15" fill="rgb(211,83,43)"/><text x="641.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.68%)</title><rect x="638" y="372" width="8" height="15" fill="rgb(248,113,54)"/><text x="641.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="638" y="388" width="8" height="15" fill="rgb(251,184,14)"/><text x="641.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="638" y="404" width="8" height="15" fill="rgb(247,167,8)"/><text x="641.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="638" y="420" width="8" height="15" fill="rgb(205,142,54)"/><text x="641.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="638" y="436" width="8" height="15" fill="rgb(246,75,0)"/><text x="641.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="638" y="452" width="8" height="15" fill="rgb(212,71,22)"/><text x="641.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="638" y="468" width="8" height="15" fill="rgb(228,41,30)"/><text x="641.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.68%)</title><rect x="638" y="484" width="8" height="15" fill="rgb(214,21,37)"/><text x="641.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="638" y="500" width="8" height="15" fill="rgb(252,134,42)"/><text x="641.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="638" y="516" width="8" height="15" fill="rgb(225,155,31)"/><text x="641.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="638" y="532" width="8" height="15" fill="rgb(214,28,53)"/><text x="641.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="638" y="548" width="8" height="15" fill="rgb(249,8,2)"/><text x="641.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="638" y="564" width="8" height="15" fill="rgb(248,216,2)"/><text x="641.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.34%)</title><rect x="642" y="580" width="4" height="15" fill="rgb(231,136,7)"/><text x="645.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="596" width="4" height="15" fill="rgb(210,146,46)"/><text x="645.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="612" width="4" height="15" fill="rgb(230,149,18)"/><text x="645.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="628" width="4" height="15" fill="rgb(242,93,29)"/><text x="645.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="644" width="4" height="15" fill="rgb(221,41,1)"/><text x="645.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="660" width="4" height="15" fill="rgb(232,131,32)"/><text x="645.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.34%)</title><rect x="642" y="676" width="4" height="15" fill="rgb(223,91,19)"/><text x="645.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="692" width="4" height="15" fill="rgb(254,189,29)"/><text x="645.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="708" width="4" height="15" fill="rgb(252,28,12)"/><text x="645.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="724" width="4" height="15" fill="rgb(253,156,49)"/><text x="645.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="740" width="4" height="15" fill="rgb(224,141,27)"/><text x="645.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="756" width="4" height="15" fill="rgb(242,182,9)"/><text x="645.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.34%)</title><rect x="642" y="772" width="4" height="15" fill="rgb(217,92,18)"/><text x="645.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="788" width="4" height="15" fill="rgb(243,45,7)"/><text x="645.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="804" width="4" height="15" fill="rgb(245,48,16)"/><text x="645.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="820" width="4" height="15" fill="rgb(219,0,15)"/><text x="645.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="836" width="4" height="15" fill="rgb(210,31,43)"/><text x="645.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="852" width="4" height="15" fill="rgb(238,41,33)"/><text x="645.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.34%)</title><rect x="642" y="868" width="4" height="15" fill="rgb(226,157,11)"/><text x="645.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="884" width="4" height="15" fill="rgb(231,65,17)"/><text x="645.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="900" width="4" height="15" fill="rgb(209,207,0)"/><text x="645.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="916" width="4" height="15" fill="rgb(206,176,37)"/><text x="645.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="932" width="4" height="15" fill="rgb(229,204,3)"/><text x="645.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="948" width="4" height="15" fill="rgb(228,141,16)"/><text x="645.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.34%)</title><rect x="642" y="964" width="4" height="15" fill="rgb(211,11,2)"/><text x="645.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="980" width="4" height="15" fill="rgb(213,141,5)"/><text x="645.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="996" width="4" height="15" fill="rgb(228,105,18)"/><text x="645.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="1012" width="4" height="15" fill="rgb(217,107,3)"/><text x="645.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="1028" width="4" height="15" fill="rgb(238,59,11)"/><text x="645.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="1044" width="4" height="15" fill="rgb(247,23,21)"/><text x="645.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.34%)</title><rect x="642" y="1060" width="4" height="15" fill="rgb(232,126,46)"/><text x="645.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="1076" width="4" height="15" fill="rgb(241,31,41)"/><text x="645.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.34%)</title><rect x="642" y="1092" width="4" height="15" fill="rgb(214,126,3)"/><text x="645.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="1108" width="4" height="15" fill="rgb(238,24,12)"/><text x="645.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="1124" width="4" height="15" fill="rgb(238,153,9)"/><text x="645.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="1140" width="4" height="15" fill="rgb(241,50,54)"/><text x="645.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="1156" width="4" height="15" fill="rgb(245,78,40)"/><text x="645.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="1172" width="4" height="15" fill="rgb(220,202,18)"/><text x="645.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="1188" width="4" height="15" fill="rgb(227,207,54)"/><text x="645.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.34%)</title><rect x="642" y="1204" width="4" height="15" fill="rgb(240,151,17)"/><text x="645.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="1220" width="4" height="15" fill="rgb(245,140,1)"/><text x="645.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="1236" width="4" height="15" fill="rgb(239,30,16)"/><text x="645.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="1252" width="4" height="15" fill="rgb(234,104,12)"/><text x="645.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="1268" width="4" height="15" fill="rgb(235,51,11)"/><text x="645.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="1284" width="4" height="15" fill="rgb(207,178,39)"/><text x="645.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.34%)</title><rect x="642" y="1300" width="4" height="15" fill="rgb(247,5,46)"/><text x="645.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="642" y="1316" width="4" height="15" fill="rgb(246,187,13)"/><text x="645.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="642" y="1332" width="4" height="15" fill="rgb(231,55,15)"/><text x="645.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="642" y="1348" width="4" height="15" fill="rgb(246,69,36)"/><text x="645.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="642" y="1364" width="4" height="15" fill="rgb(216,124,50)"/><text x="645.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="642" y="1380" width="4" height="15" fill="rgb(207,190,37)"/><text x="645.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:82) (1 samples, 0.34%)</title><rect x="642" y="1396" width="4" height="15" fill="rgb(242,166,23)"/><text x="645.00" y="1406.50"></text></g><g><title>namedtuple (collections/__init__.py:360) (1 samples, 0.34%)</title><rect x="642" y="1412" width="4" height="15" fill="rgb(206,57,36)"/><text x="645.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:4) (8 samples, 2.73%)</title><rect x="618" y="52" width="32" height="15" fill="rgb(250,104,25)"/><text x="621.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.73%)</title><rect x="618" y="68" width="32" height="15" fill="rgb(237,53,50)"/><text x="621.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.73%)</title><rect x="618" y="84" width="32" height="15" fill="rgb(242,122,41)"/><text x="621.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.73%)</title><rect x="618" y="100" width="32" height="15" fill="rgb(234,8,44)"/><text x="621.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.73%)</title><rect x="618" y="116" width="32" height="15" fill="rgb(241,227,35)"/><text x="621.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.73%)</title><rect x="618" y="132" width="32" height="15" fill="rgb(209,23,37)"/><text x="621.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (3 samples, 1.02%)</title><rect x="638" y="148" width="12" height="15" fill="rgb(242,137,30)"/><text x="641.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="638" y="164" width="12" height="15" fill="rgb(208,228,53)"/><text x="641.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="638" y="180" width="12" height="15" fill="rgb(219,110,22)"/><text x="641.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="638" y="196" width="12" height="15" fill="rgb(218,62,17)"/><text x="641.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="638" y="212" width="12" height="15" fill="rgb(245,218,21)"/><text x="641.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="638" y="228" width="12" height="15" fill="rgb(237,10,22)"/><text x="641.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (1 samples, 0.34%)</title><rect x="646" y="244" width="4" height="15" fill="rgb(246,60,7)"/><text x="649.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="260" width="4" height="15" fill="rgb(231,197,49)"/><text x="649.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="276" width="4" height="15" fill="rgb(239,228,2)"/><text x="649.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="292" width="4" height="15" fill="rgb(216,96,38)"/><text x="649.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="308" width="4" height="15" fill="rgb(212,136,20)"/><text x="649.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="324" width="4" height="15" fill="rgb(240,59,27)"/><text x="649.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (1 samples, 0.34%)</title><rect x="646" y="340" width="4" height="15" fill="rgb(233,140,39)"/><text x="649.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="356" width="4" height="15" fill="rgb(211,222,1)"/><text x="649.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="372" width="4" height="15" fill="rgb(221,34,34)"/><text x="649.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="388" width="4" height="15" fill="rgb(251,180,13)"/><text x="649.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="404" width="4" height="15" fill="rgb(208,48,21)"/><text x="649.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="420" width="4" height="15" fill="rgb(223,213,16)"/><text x="649.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.34%)</title><rect x="646" y="436" width="4" height="15" fill="rgb(209,212,42)"/><text x="649.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="452" width="4" height="15" fill="rgb(226,12,14)"/><text x="649.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.34%)</title><rect x="646" y="468" width="4" height="15" fill="rgb(234,157,2)"/><text x="649.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="484" width="4" height="15" fill="rgb(213,137,43)"/><text x="649.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="500" width="4" height="15" fill="rgb(219,73,49)"/><text x="649.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="516" width="4" height="15" fill="rgb(218,57,35)"/><text x="649.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="532" width="4" height="15" fill="rgb(221,151,3)"/><text x="649.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="548" width="4" height="15" fill="rgb(249,174,10)"/><text x="649.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="564" width="4" height="15" fill="rgb(249,118,34)"/><text x="649.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.34%)</title><rect x="646" y="580" width="4" height="15" fill="rgb(246,65,37)"/><text x="649.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="596" width="4" height="15" fill="rgb(237,191,17)"/><text x="649.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="612" width="4" height="15" fill="rgb(242,98,14)"/><text x="649.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="628" width="4" height="15" fill="rgb(230,132,11)"/><text x="649.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="644" width="4" height="15" fill="rgb(221,63,8)"/><text x="649.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="660" width="4" height="15" fill="rgb(222,190,27)"/><text x="649.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.34%)</title><rect x="646" y="676" width="4" height="15" fill="rgb(243,108,44)"/><text x="649.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="692" width="4" height="15" fill="rgb(206,203,13)"/><text x="649.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="708" width="4" height="15" fill="rgb(240,179,41)"/><text x="649.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="724" width="4" height="15" fill="rgb(235,29,27)"/><text x="649.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="740" width="4" height="15" fill="rgb(234,170,42)"/><text x="649.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="756" width="4" height="15" fill="rgb(210,45,45)"/><text x="649.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.34%)</title><rect x="646" y="772" width="4" height="15" fill="rgb(254,85,35)"/><text x="649.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="788" width="4" height="15" fill="rgb(213,40,34)"/><text x="649.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="804" width="4" height="15" fill="rgb(254,218,33)"/><text x="649.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="820" width="4" height="15" fill="rgb(236,175,37)"/><text x="649.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="836" width="4" height="15" fill="rgb(215,83,35)"/><text x="649.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="852" width="4" height="15" fill="rgb(237,187,9)"/><text x="649.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.34%)</title><rect x="646" y="868" width="4" height="15" fill="rgb(243,14,23)"/><text x="649.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="884" width="4" height="15" fill="rgb(210,177,8)"/><text x="649.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.34%)</title><rect x="646" y="900" width="4" height="15" fill="rgb(224,144,25)"/><text x="649.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="916" width="4" height="15" fill="rgb(253,150,18)"/><text x="649.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="932" width="4" height="15" fill="rgb(254,16,35)"/><text x="649.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="948" width="4" height="15" fill="rgb(214,112,30)"/><text x="649.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="964" width="4" height="15" fill="rgb(220,56,30)"/><text x="649.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="980" width="4" height="15" fill="rgb(243,74,43)"/><text x="649.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="996" width="4" height="15" fill="rgb(222,4,44)"/><text x="649.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.34%)</title><rect x="646" y="1012" width="4" height="15" fill="rgb(250,148,40)"/><text x="649.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="1028" width="4" height="15" fill="rgb(206,109,51)"/><text x="649.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="1044" width="4" height="15" fill="rgb(241,80,24)"/><text x="649.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="1060" width="4" height="15" fill="rgb(240,50,13)"/><text x="649.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="1076" width="4" height="15" fill="rgb(246,23,21)"/><text x="649.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="1092" width="4" height="15" fill="rgb(232,227,21)"/><text x="649.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.34%)</title><rect x="646" y="1108" width="4" height="15" fill="rgb(252,195,26)"/><text x="649.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="646" y="1124" width="4" height="15" fill="rgb(217,86,44)"/><text x="649.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="1140" width="4" height="15" fill="rgb(239,10,5)"/><text x="649.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="1156" width="4" height="15" fill="rgb(254,75,29)"/><text x="649.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="1172" width="4" height="15" fill="rgb(209,173,38)"/><text x="649.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="1188" width="4" height="15" fill="rgb(215,48,2)"/><text x="649.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="1204" width="4" height="15" fill="rgb(216,142,38)"/><text x="649.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="1220" width="4" height="15" fill="rgb(239,43,12)"/><text x="649.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.34%)</title><rect x="646" y="1236" width="4" height="15" fill="rgb(251,140,44)"/><text x="649.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="646" y="1252" width="4" height="15" fill="rgb(238,98,5)"/><text x="649.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="1268" width="4" height="15" fill="rgb(249,54,32)"/><text x="649.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="1284" width="4" height="15" fill="rgb(210,201,27)"/><text x="649.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="1300" width="4" height="15" fill="rgb(241,95,12)"/><text x="649.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="1316" width="4" height="15" fill="rgb(208,107,13)"/><text x="649.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="1332" width="4" height="15" fill="rgb(221,83,28)"/><text x="649.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="1348" width="4" height="15" fill="rgb(210,174,47)"/><text x="649.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.34%)</title><rect x="646" y="1364" width="4" height="15" fill="rgb(252,177,49)"/><text x="649.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="646" y="1380" width="4" height="15" fill="rgb(214,159,38)"/><text x="649.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="646" y="1396" width="4" height="15" fill="rgb(212,138,28)"/><text x="649.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="646" y="1412" width="4" height="15" fill="rgb(209,184,54)"/><text x="649.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="646" y="1428" width="4" height="15" fill="rgb(233,229,18)"/><text x="649.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="646" y="1444" width="4" height="15" fill="rgb(229,6,35)"/><text x="649.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.34%)</title><rect x="646" y="1460" width="4" height="15" fill="rgb(247,143,26)"/><text x="649.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.34%)</title><rect x="646" y="1476" width="4" height="15" fill="rgb(216,75,40)"/><text x="649.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.34%)</title><rect x="646" y="1492" width="4" height="15" fill="rgb(249,220,18)"/><text x="649.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.34%)</title><rect x="646" y="1508" width="4" height="15" fill="rgb(246,164,8)"/><text x="649.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.34%)</title><rect x="646" y="1524" width="4" height="15" fill="rgb(246,221,40)"/><text x="649.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.34%)</title><rect x="646" y="1540" width="4" height="15" fill="rgb(206,22,32)"/><text x="649.00" y="1550.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.34%)</title><rect x="646" y="1556" width="4" height="15" fill="rgb(239,116,14)"/><text x="649.00" y="1566.50"></text></g><g><title>new_context (jinja2/runtime.py:67) (1 samples, 0.34%)</title><rect x="646" y="1572" width="4" height="15" fill="rgb(228,123,26)"/><text x="649.00" y="1582.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="646" y="1588" width="4" height="15" fill="rgb(239,96,22)"/><text x="649.00" y="1598.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:28) (1 samples, 0.34%)</title><rect x="650" y="84" width="4" height="15" fill="rgb(239,158,13)"/><text x="653.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.34%)</title><rect x="650" y="100" width="4" height="15" fill="rgb(216,165,10)"/><text x="653.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.34%)</title><rect x="650" y="116" width="4" height="15" fill="rgb(225,132,3)"/><text x="653.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.34%)</title><rect x="650" y="132" width="4" height="15" fill="rgb(245,79,9)"/><text x="653.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.34%)</title><rect x="650" y="148" width="4" height="15" fill="rgb(207,195,49)"/><text x="653.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.34%)</title><rect x="650" y="164" width="4" height="15" fill="rgb(225,145,40)"/><text x="653.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.34%)</title><rect x="650" y="180" width="4" height="15" fill="rgb(214,40,9)"/><text x="653.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.34%)</title><rect x="650" y="196" width="4" height="15" fill="rgb(254,129,35)"/><text x="653.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="650" y="212" width="4" height="15" fill="rgb(223,31,6)"/><text x="653.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="650" y="228" width="4" height="15" fill="rgb(240,29,0)"/><text x="653.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="650" y="244" width="4" height="15" fill="rgb(206,78,0)"/><text x="653.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="650" y="260" width="4" height="15" fill="rgb(206,169,18)"/><text x="653.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="650" y="276" width="4" height="15" fill="rgb(248,79,12)"/><text x="653.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.34%)</title><rect x="650" y="292" width="4" height="15" fill="rgb(231,103,49)"/><text x="653.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="650" y="308" width="4" height="15" fill="rgb(206,220,40)"/><text x="653.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="650" y="324" width="4" height="15" fill="rgb(225,91,41)"/><text x="653.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="650" y="340" width="4" height="15" fill="rgb(214,81,53)"/><text x="653.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="650" y="356" width="4" height="15" fill="rgb(233,61,54)"/><text x="653.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="650" y="372" width="4" height="15" fill="rgb(251,149,24)"/><text x="653.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.34%)</title><rect x="650" y="388" width="4" height="15" fill="rgb(224,226,54)"/><text x="653.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.34%)</title><rect x="650" y="404" width="4" height="15" fill="rgb(212,191,4)"/><text x="653.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.34%)</title><rect x="650" y="420" width="4" height="15" fill="rgb(239,87,2)"/><text x="653.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.34%)</title><rect x="650" y="436" width="4" height="15" fill="rgb(252,197,37)"/><text x="653.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="650" y="452" width="4" height="15" fill="rgb(220,88,14)"/><text x="653.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:71) (1 samples, 0.34%)</title><rect x="650" y="468" width="4" height="15" fill="rgb(236,207,3)"/><text x="653.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.34%)</title><rect x="650" y="484" width="4" height="15" fill="rgb(235,193,39)"/><text x="653.00" y="494.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:18) (1 samples, 0.34%)</title><rect x="654" y="100" width="4" height="15" fill="rgb(239,138,10)"/><text x="657.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.34%)</title><rect x="654" y="116" width="4" height="15" fill="rgb(240,221,27)"/><text x="657.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.34%)</title><rect x="654" y="132" width="4" height="15" fill="rgb(231,88,46)"/><text x="657.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.34%)</title><rect x="654" y="148" width="4" height="15" fill="rgb(239,172,49)"/><text x="657.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.34%)</title><rect x="654" y="164" width="4" height="15" fill="rgb(231,131,36)"/><text x="657.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.34%)</title><rect x="654" y="180" width="4" height="15" fill="rgb(242,134,37)"/><text x="657.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.34%)</title><rect x="654" y="196" width="4" height="15" fill="rgb(246,24,6)"/><text x="657.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.34%)</title><rect x="654" y="212" width="4" height="15" fill="rgb(219,88,54)"/><text x="657.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.34%)</title><rect x="654" y="228" width="4" height="15" fill="rgb(232,36,28)"/><text x="657.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.34%)</title><rect x="654" y="244" width="4" height="15" fill="rgb(240,50,13)"/><text x="657.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.34%)</title><rect x="662" y="148" width="4" height="15" fill="rgb(214,29,22)"/><text x="665.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.68%)</title><rect x="670" y="164" width="8" height="15" fill="rgb(223,22,0)"/><text x="673.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.34%)</title><rect x="678" y="164" width="4" height="15" fill="rgb(254,220,38)"/><text x="681.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 0.68%)</title><rect x="682" y="164" width="8" height="15" fill="rgb(244,199,47)"/><text x="685.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (12 samples, 4.10%)</title><rect x="698" y="180" width="48" height="15" fill="rgb(223,217,7)"/><text x="701.00" y="190.50">run ..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.34%)</title><rect x="742" y="196" width="4" height="15" fill="rgb(206,115,52)"/><text x="745.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.34%)</title><rect x="775" y="244" width="4" height="15" fill="rgb(224,204,13)"/><text x="778.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.34%)</title><rect x="775" y="260" width="4" height="15" fill="rgb(221,30,1)"/><text x="778.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1246) (1 samples, 0.34%)</title><rect x="779" y="260" width="4" height="15" fill="rgb(231,40,32)"/><text x="782.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 1.37%)</title><rect x="771" y="212" width="16" height="15" fill="rgb(242,217,2)"/><text x="774.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 1.02%)</title><rect x="775" y="228" width="12" height="15" fill="rgb(235,69,12)"/><text x="778.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (2 samples, 0.68%)</title><rect x="779" y="244" width="8" height="15" fill="rgb(226,91,28)"/><text x="782.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.34%)</title><rect x="783" y="260" width="4" height="15" fill="rgb(227,18,42)"/><text x="786.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.34%)</title><rect x="783" y="276" width="4" height="15" fill="rgb(210,61,32)"/><text x="786.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.34%)</title><rect x="783" y="292" width="4" height="15" fill="rgb(224,101,28)"/><text x="786.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.34%)</title><rect x="783" y="308" width="4" height="15" fill="rgb(207,207,13)"/><text x="786.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.34%)</title><rect x="783" y="324" width="4" height="15" fill="rgb(216,69,14)"/><text x="786.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (8 samples, 2.73%)</title><rect x="763" y="196" width="32" height="15" fill="rgb(216,52,16)"/><text x="766.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.68%)</title><rect x="787" y="212" width="8" height="15" fill="rgb(224,122,31)"/><text x="790.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (2 samples, 0.68%)</title><rect x="787" y="228" width="8" height="15" fill="rgb(242,133,35)"/><text x="790.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.34%)</title><rect x="819" y="260" width="4" height="15" fill="rgb(241,175,16)"/><text x="822.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.34%)</title><rect x="823" y="276" width="4" height="15" fill="rgb(249,214,0)"/><text x="826.00" y="286.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.68%)</title><rect x="823" y="260" width="8" height="15" fill="rgb(230,93,7)"/><text x="826.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:98) (1 samples, 0.34%)</title><rect x="827" y="276" width="4" height="15" fill="rgb(231,96,28)"/><text x="830.00" y="286.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.34%)</title><rect x="831" y="260" width="4" height="15" fill="rgb(226,147,43)"/><text x="834.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.34%)</title><rect x="831" y="276" width="4" height="15" fill="rgb(216,174,27)"/><text x="834.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.34%)</title><rect x="831" y="292" width="4" height="15" fill="rgb(224,135,48)"/><text x="834.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="831" y="308" width="4" height="15" fill="rgb(225,55,25)"/><text x="834.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.34%)</title><rect x="831" y="324" width="4" height="15" fill="rgb(232,160,30)"/><text x="834.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.34%)</title><rect x="839" y="388" width="4" height="15" fill="rgb(254,179,24)"/><text x="842.00" y="398.50"></text></g><g><title>0x7f48681c7fa0 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="839" y="404" width="4" height="15" fill="rgb(219,3,33)"/><text x="842.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 1.02%)</title><rect x="839" y="308" width="12" height="15" fill="rgb(216,1,3)"/><text x="842.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.02%)</title><rect x="839" y="324" width="12" height="15" fill="rgb(215,111,51)"/><text x="842.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.02%)</title><rect x="839" y="340" width="12" height="15" fill="rgb(215,91,0)"/><text x="842.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.02%)</title><rect x="839" y="356" width="12" height="15" fill="rgb(206,4,13)"/><text x="842.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.02%)</title><rect x="839" y="372" width="12" height="15" fill="rgb(213,211,7)"/><text x="842.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.68%)</title><rect x="843" y="388" width="8" height="15" fill="rgb(227,25,24)"/><text x="846.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (3 samples, 1.02%)</title><rect x="851" y="324" width="12" height="15" fill="rgb(219,205,32)"/><text x="854.00" y="334.50"></text></g><g><title>0x7f48680ff763 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="859" y="340" width="4" height="15" fill="rgb(210,69,35)"/><text x="862.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4554) (1 samples, 0.34%)</title><rect x="863" y="324" width="4" height="15" fill="rgb(247,119,28)"/><text x="866.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.34%)</title><rect x="867" y="340" width="4" height="15" fill="rgb(219,49,37)"/><text x="870.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.34%)</title><rect x="867" y="356" width="4" height="15" fill="rgb(247,50,8)"/><text x="870.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.34%)</title><rect x="871" y="340" width="4" height="15" fill="rgb(206,121,35)"/><text x="874.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.34%)</title><rect x="871" y="356" width="4" height="15" fill="rgb(241,44,13)"/><text x="874.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.34%)</title><rect x="875" y="388" width="4" height="15" fill="rgb(232,103,21)"/><text x="878.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="875" y="404" width="4" height="15" fill="rgb(244,62,24)"/><text x="878.00" y="414.50"></text></g><g><title>0x7f48680a1a19 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="875" y="420" width="4" height="15" fill="rgb(226,64,39)"/><text x="878.00" y="430.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.34%)</title><rect x="875" y="436" width="4" height="15" fill="rgb(250,142,3)"/><text x="878.00" y="446.50"></text></g><g><title>allocate_reduce_result (reduction.c:63) (1 samples, 0.34%)</title><rect x="879" y="388" width="4" height="15" fill="rgb(226,220,4)"/><text x="882.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="883" y="420" width="4" height="15" fill="rgb(238,30,22)"/><text x="886.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="883" y="436" width="4" height="15" fill="rgb(215,172,47)"/><text x="886.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (4 samples, 1.37%)</title><rect x="875" y="356" width="16" height="15" fill="rgb(240,203,16)"/><text x="878.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (4 samples, 1.37%)</title><rect x="875" y="372" width="16" height="15" fill="rgb(249,224,3)"/><text x="878.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.68%)</title><rect x="883" y="388" width="8" height="15" fill="rgb(210,89,38)"/><text x="886.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.68%)</title><rect x="883" y="404" width="8" height="15" fill="rgb(251,93,38)"/><text x="886.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.34%)</title><rect x="887" y="420" width="4" height="15" fill="rgb(253,136,50)"/><text x="890.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.34%)</title><rect x="887" y="436" width="4" height="15" fill="rgb(249,175,29)"/><text x="890.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.34%)</title><rect x="887" y="452" width="4" height="15" fill="rgb(213,179,14)"/><text x="890.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.34%)</title><rect x="891" y="356" width="5" height="15" fill="rgb(228,162,1)"/><text x="894.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.34%)</title><rect x="891" y="372" width="5" height="15" fill="rgb(236,65,22)"/><text x="894.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.34%)</title><rect x="896" y="356" width="4" height="15" fill="rgb(210,183,16)"/><text x="899.00" y="366.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.34%)</title><rect x="896" y="372" width="4" height="15" fill="rgb(252,111,39)"/><text x="899.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (17 samples, 5.80%)</title><rect x="835" y="260" width="69" height="15" fill="rgb(222,103,52)"/><text x="838.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 5.80%)</title><rect x="835" y="276" width="69" height="15" fill="rgb(231,0,3)"/><text x="838.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 5.80%)</title><rect x="835" y="292" width="69" height="15" fill="rgb(215,36,14)"/><text x="838.00" y="302.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 4.44%)</title><rect x="851" y="308" width="53" height="15" fill="rgb(233,10,24)"/><text x="854.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 3.07%)</title><rect x="867" y="324" width="37" height="15" fill="rgb(238,187,27)"/><text x="870.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 2.39%)</title><rect x="875" y="340" width="29" height="15" fill="rgb(219,150,2)"/><text x="878.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.34%)</title><rect x="900" y="356" width="4" height="15" fill="rgb(247,180,32)"/><text x="903.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.34%)</title><rect x="900" y="372" width="4" height="15" fill="rgb(212,138,46)"/><text x="903.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.34%)</title><rect x="900" y="388" width="4" height="15" fill="rgb(250,51,3)"/><text x="903.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1877) (1 samples, 0.34%)</title><rect x="900" y="404" width="4" height="15" fill="rgb(249,125,54)"/><text x="903.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="904" y="276" width="4" height="15" fill="rgb(250,227,18)"/><text x="907.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.34%)</title><rect x="904" y="292" width="4" height="15" fill="rgb(205,207,20)"/><text x="907.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.34%)</title><rect x="904" y="308" width="4" height="15" fill="rgb(220,97,0)"/><text x="907.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.34%)</title><rect x="908" y="276" width="4" height="15" fill="rgb(232,199,35)"/><text x="911.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.34%)</title><rect x="912" y="292" width="4" height="15" fill="rgb(250,10,2)"/><text x="915.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.34%)</title><rect x="912" y="308" width="4" height="15" fill="rgb(254,224,14)"/><text x="915.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.34%)</title><rect x="912" y="324" width="4" height="15" fill="rgb(254,88,24)"/><text x="915.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="912" y="340" width="4" height="15" fill="rgb(230,198,15)"/><text x="915.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="912" y="356" width="4" height="15" fill="rgb(209,115,15)"/><text x="915.00" y="366.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (27 samples, 9.22%)</title><rect x="811" y="244" width="109" height="15" fill="rgb(231,26,18)"/><text x="814.00" y="254.50">norm_l1 (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.37%)</title><rect x="904" y="260" width="16" height="15" fill="rgb(241,74,19)"/><text x="907.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.68%)</title><rect x="912" y="276" width="8" height="15" fill="rgb(211,10,20)"/><text x="915.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.34%)</title><rect x="916" y="292" width="4" height="15" fill="rgb(231,203,17)"/><text x="919.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.34%)</title><rect x="916" y="308" width="4" height="15" fill="rgb(248,195,8)"/><text x="919.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.34%)</title><rect x="920" y="276" width="4" height="15" fill="rgb(224,221,22)"/><text x="923.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.34%)</title><rect x="920" y="292" width="4" height="15" fill="rgb(227,65,32)"/><text x="923.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.34%)</title><rect x="924" y="276" width="4" height="15" fill="rgb(218,174,20)"/><text x="927.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1714) (1 samples, 0.34%)</title><rect x="928" y="292" width="4" height="15" fill="rgb(211,186,30)"/><text x="931.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="932" y="324" width="4" height="15" fill="rgb(231,103,41)"/><text x="935.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.34%)</title><rect x="932" y="340" width="4" height="15" fill="rgb(228,184,42)"/><text x="935.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1100) (1 samples, 0.34%)</title><rect x="932" y="356" width="4" height="15" fill="rgb(235,170,11)"/><text x="935.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.34%)</title><rect x="936" y="324" width="4" height="15" fill="rgb(227,183,7)"/><text x="939.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.34%)</title><rect x="940" y="340" width="4" height="15" fill="rgb(208,104,14)"/><text x="943.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.34%)</title><rect x="944" y="340" width="4" height="15" fill="rgb(221,100,7)"/><text x="947.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (3 samples, 1.02%)</title><rect x="940" y="324" width="12" height="15" fill="rgb(215,188,23)"/><text x="943.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1676) (1 samples, 0.34%)</title><rect x="948" y="340" width="4" height="15" fill="rgb(254,7,50)"/><text x="951.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.34%)</title><rect x="952" y="324" width="4" height="15" fill="rgb(254,27,50)"/><text x="955.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2150) (1 samples, 0.34%)</title><rect x="952" y="340" width="4" height="15" fill="rgb(252,164,46)"/><text x="955.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (7 samples, 2.39%)</title><rect x="932" y="308" width="28" height="15" fill="rgb(213,176,18)"/><text x="935.00" y="318.50">i..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.34%)</title><rect x="956" y="324" width="4" height="15" fill="rgb(249,193,32)"/><text x="959.00" y="334.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1360) (1 samples, 0.34%)</title><rect x="956" y="340" width="4" height="15" fill="rgb(209,182,33)"/><text x="959.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (42 samples, 14.33%)</title><rect x="795" y="196" width="169" height="15" fill="rgb(213,141,41)"/><text x="798.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (41 samples, 13.99%)</title><rect x="799" y="212" width="165" height="15" fill="rgb(238,27,8)"/><text x="802.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (41 samples, 13.99%)</title><rect x="799" y="228" width="165" height="15" fill="rgb(249,166,20)"/><text x="802.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (11 samples, 3.75%)</title><rect x="920" y="244" width="44" height="15" fill="rgb(225,220,53)"/><text x="923.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 3.75%)</title><rect x="920" y="260" width="44" height="15" fill="rgb(212,82,29)"/><text x="923.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 3.07%)</title><rect x="928" y="276" width="36" height="15" fill="rgb(234,192,26)"/><text x="931.00" y="286.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.73%)</title><rect x="932" y="292" width="32" height="15" fill="rgb(249,77,46)"/><text x="935.00" y="302.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.34%)</title><rect x="960" y="308" width="4" height="15" fill="rgb(234,64,27)"/><text x="963.00" y="318.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1040) (1 samples, 0.34%)</title><rect x="960" y="324" width="4" height="15" fill="rgb(254,167,4)"/><text x="963.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.34%)</title><rect x="964" y="196" width="4" height="15" fill="rgb(247,99,32)"/><text x="967.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.34%)</title><rect x="964" y="212" width="4" height="15" fill="rgb(230,192,14)"/><text x="967.00" y="222.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.34%)</title><rect x="980" y="244" width="4" height="15" fill="rgb(248,223,0)"/><text x="983.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.34%)</title><rect x="984" y="260" width="4" height="15" fill="rgb(219,185,25)"/><text x="987.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.34%)</title><rect x="988" y="308" width="4" height="15" fill="rgb(234,211,19)"/><text x="991.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.34%)</title><rect x="988" y="324" width="4" height="15" fill="rgb(211,124,44)"/><text x="991.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.34%)</title><rect x="988" y="340" width="4" height="15" fill="rgb(244,215,43)"/><text x="991.00" y="350.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.34%)</title><rect x="992" y="308" width="4" height="15" fill="rgb(237,151,17)"/><text x="995.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.34%)</title><rect x="992" y="324" width="4" height="15" fill="rgb(212,57,29)"/><text x="995.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2142) (1 samples, 0.34%)</title><rect x="992" y="340" width="4" height="15" fill="rgb(253,206,47)"/><text x="995.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.34%)</title><rect x="996" y="324" width="4" height="15" fill="rgb(222,229,54)"/><text x="999.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:70) (1 samples, 0.34%)</title><rect x="996" y="340" width="4" height="15" fill="rgb(252,223,7)"/><text x="999.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.37%)</title><rect x="988" y="276" width="16" height="15" fill="rgb(232,133,1)"/><text x="991.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.37%)</title><rect x="988" y="292" width="16" height="15" fill="rgb(223,12,39)"/><text x="991.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.68%)</title><rect x="996" y="308" width="8" height="15" fill="rgb(242,202,53)"/><text x="999.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.34%)</title><rect x="1000" y="324" width="4" height="15" fill="rgb(228,75,43)"/><text x="1003.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.34%)</title><rect x="1000" y="340" width="4" height="15" fill="rgb(229,152,1)"/><text x="1003.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (8 samples, 2.73%)</title><rect x="976" y="228" width="32" height="15" fill="rgb(210,139,7)"/><text x="979.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (6 samples, 2.05%)</title><rect x="984" y="244" width="24" height="15" fill="rgb(208,200,14)"/><text x="987.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 1.71%)</title><rect x="988" y="260" width="20" height="15" fill="rgb(225,97,24)"/><text x="991.00" y="270.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="1004" y="276" width="4" height="15" fill="rgb(209,145,37)"/><text x="1007.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="1012" y="260" width="4" height="15" fill="rgb(253,48,50)"/><text x="1015.00" y="270.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:699) (1 samples, 0.34%)</title><rect x="1012" y="276" width="4" height="15" fill="rgb(239,17,36)"/><text x="1015.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="1016" y="308" width="4" height="15" fill="rgb(214,101,30)"/><text x="1019.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.34%)</title><rect x="1016" y="324" width="4" height="15" fill="rgb(206,224,42)"/><text x="1019.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.34%)</title><rect x="1016" y="340" width="4" height="15" fill="rgb(224,201,30)"/><text x="1019.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.68%)</title><rect x="1016" y="292" width="8" height="15" fill="rgb(252,170,50)"/><text x="1019.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.34%)</title><rect x="1020" y="308" width="4" height="15" fill="rgb(230,99,7)"/><text x="1023.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.34%)</title><rect x="1024" y="292" width="4" height="15" fill="rgb(234,7,22)"/><text x="1027.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.34%)</title><rect x="1024" y="308" width="4" height="15" fill="rgb(244,63,38)"/><text x="1027.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.37%)</title><rect x="1016" y="276" width="16" height="15" fill="rgb(205,1,1)"/><text x="1019.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.34%)</title><rect x="1028" y="292" width="4" height="15" fill="rgb(242,156,2)"/><text x="1031.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.34%)</title><rect x="1028" y="308" width="4" height="15" fill="rgb(234,101,24)"/><text x="1031.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1028" y="324" width="4" height="15" fill="rgb(254,104,4)"/><text x="1031.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.71%)</title><rect x="1016" y="260" width="20" height="15" fill="rgb(226,211,40)"/><text x="1019.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.34%)</title><rect x="1032" y="276" width="4" height="15" fill="rgb(242,220,35)"/><text x="1035.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="1032" y="292" width="4" height="15" fill="rgb(234,143,23)"/><text x="1035.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="1032" y="308" width="4" height="15" fill="rgb(242,132,0)"/><text x="1035.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (8 samples, 2.73%)</title><rect x="1008" y="228" width="32" height="15" fill="rgb(246,158,35)"/><text x="1011.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.39%)</title><rect x="1012" y="244" width="28" height="15" fill="rgb(233,160,0)"/><text x="1015.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.34%)</title><rect x="1036" y="260" width="4" height="15" fill="rgb(210,20,5)"/><text x="1039.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.34%)</title><rect x="1045" y="276" width="4" height="15" fill="rgb(206,185,11)"/><text x="1048.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.68%)</title><rect x="1045" y="244" width="8" height="15" fill="rgb(254,103,3)"/><text x="1048.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.68%)</title><rect x="1045" y="260" width="8" height="15" fill="rgb(239,113,39)"/><text x="1048.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="1049" y="276" width="4" height="15" fill="rgb(243,100,26)"/><text x="1052.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.34%)</title><rect x="1049" y="292" width="4" height="15" fill="rgb(231,123,46)"/><text x="1052.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="1049" y="308" width="4" height="15" fill="rgb(214,32,24)"/><text x="1052.00" y="318.50"></text></g><g><title>0x7f48681c8004 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1049" y="324" width="4" height="15" fill="rgb(254,57,2)"/><text x="1052.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="1053" y="260" width="4" height="15" fill="rgb(253,183,50)"/><text x="1056.00" y="270.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:293) (1 samples, 0.34%)</title><rect x="1053" y="276" width="4" height="15" fill="rgb(243,13,42)"/><text x="1056.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.34%)</title><rect x="1057" y="308" width="4" height="15" fill="rgb(251,88,50)"/><text x="1060.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.34%)</title><rect x="1057" y="324" width="4" height="15" fill="rgb(250,210,17)"/><text x="1060.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1057" y="340" width="4" height="15" fill="rgb(247,45,16)"/><text x="1060.00" y="350.50"></text></g><g><title>0x7f48680a1797 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1057" y="356" width="4" height="15" fill="rgb(239,190,16)"/><text x="1060.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.68%)</title><rect x="1057" y="292" width="8" height="15" fill="rgb(216,160,19)"/><text x="1060.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.34%)</title><rect x="1061" y="308" width="4" height="15" fill="rgb(250,200,36)"/><text x="1064.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:560) (1 samples, 0.34%)</title><rect x="1061" y="324" width="4" height="15" fill="rgb(244,141,37)"/><text x="1064.00" y="334.50"></text></g><g><title>0x7f48680e990a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1061" y="340" width="4" height="15" fill="rgb(229,169,52)"/><text x="1064.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 1.02%)</title><rect x="1057" y="276" width="12" height="15" fill="rgb(221,13,14)"/><text x="1060.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:731) (1 samples, 0.34%)</title><rect x="1065" y="292" width="4" height="15" fill="rgb(233,53,34)"/><text x="1068.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (8 samples, 2.73%)</title><rect x="1040" y="228" width="33" height="15" fill="rgb(210,66,33)"/><text x="1043.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.71%)</title><rect x="1053" y="244" width="20" height="15" fill="rgb(235,123,20)"/><text x="1056.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.37%)</title><rect x="1057" y="260" width="16" height="15" fill="rgb(240,134,19)"/><text x="1060.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.34%)</title><rect x="1069" y="276" width="4" height="15" fill="rgb(225,11,4)"/><text x="1072.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.34%)</title><rect x="1069" y="292" width="4" height="15" fill="rgb(223,11,10)"/><text x="1072.00" y="302.50"></text></g><g><title>0x7f48533d29dd (?) (1 samples, 0.34%)</title><rect x="1069" y="308" width="4" height="15" fill="rgb(245,51,46)"/><text x="1072.00" y="318.50"></text></g><g><title>0x7f48533f325c (?) (1 samples, 0.34%)</title><rect x="1069" y="324" width="4" height="15" fill="rgb(216,116,41)"/><text x="1072.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.34%)</title><rect x="1073" y="228" width="4" height="15" fill="rgb(252,166,12)"/><text x="1076.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.34%)</title><rect x="1101" y="356" width="4" height="15" fill="rgb(214,60,33)"/><text x="1104.00" y="366.50"></text></g><g><title>0x7f4868109dbb (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1101" y="372" width="4" height="15" fill="rgb(209,166,5)"/><text x="1104.00" y="382.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (2 samples, 0.68%)</title><rect x="1101" y="324" width="8" height="15" fill="rgb(227,141,12)"/><text x="1104.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.68%)</title><rect x="1101" y="340" width="8" height="15" fill="rgb(205,22,21)"/><text x="1104.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.34%)</title><rect x="1105" y="356" width="4" height="15" fill="rgb(233,166,25)"/><text x="1108.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:121) (1 samples, 0.34%)</title><rect x="1105" y="372" width="4" height="15" fill="rgb(232,162,5)"/><text x="1108.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (91 samples, 31.06%)</title><rect x="746" y="180" width="367" height="15" fill="rgb(243,201,39)"/><text x="749.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (36 samples, 12.29%)</title><rect x="968" y="196" width="145" height="15" fill="rgb(210,104,37)"/><text x="971.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 11.95%)</title><rect x="972" y="212" width="141" height="15" fill="rgb(248,173,25)"/><text x="975.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (9 samples, 3.07%)</title><rect x="1077" y="228" width="36" height="15" fill="rgb(212,137,11)"/><text x="1080.00" y="238.50">_ru..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (8 samples, 2.73%)</title><rect x="1081" y="244" width="32" height="15" fill="rgb(232,182,24)"/><text x="1084.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 2.73%)</title><rect x="1081" y="260" width="32" height="15" fill="rgb(205,30,50)"/><text x="1084.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 1.71%)</title><rect x="1093" y="276" width="20" height="15" fill="rgb(251,31,20)"/><text x="1096.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.02%)</title><rect x="1101" y="292" width="12" height="15" fill="rgb(243,112,31)"/><text x="1104.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 1.02%)</title><rect x="1101" y="308" width="12" height="15" fill="rgb(214,151,6)"/><text x="1104.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:42) (1 samples, 0.34%)</title><rect x="1109" y="324" width="4" height="15" fill="rgb(242,66,39)"/><text x="1112.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (5 samples, 1.71%)</title><rect x="1113" y="180" width="20" height="15" fill="rgb(250,31,37)"/><text x="1116.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 1.02%)</title><rect x="1133" y="180" width="12" height="15" fill="rgb(214,14,14)"/><text x="1136.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.34%)</title><rect x="1145" y="180" width="4" height="15" fill="rgb(225,199,51)"/><text x="1148.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (119 samples, 40.61%)</title><rect x="690" y="164" width="479" height="15" fill="rgb(251,171,27)"/><text x="693.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 1.71%)</title><rect x="1149" y="180" width="20" height="15" fill="rgb(205,213,40)"/><text x="1152.00" y="190.50"></text></g><g><title>0x7f486810a14e (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1165" y="196" width="4" height="15" fill="rgb(242,18,10)"/><text x="1168.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:534) (1 samples, 0.34%)</title><rect x="1169" y="164" width="4" height="15" fill="rgb(244,104,13)"/><text x="1172.00" y="174.50"></text></g><g><title>all (293 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,57,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:45) (134 samples, 45.73%)</title><rect x="650" y="52" width="540" height="15" fill="rgb(222,37,28)"/><text x="653.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_1..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:44) (134 samples, 45.73%)</title><rect x="650" y="68" width="540" height="15" fill="rgb(212,227,51)"/><text x="653.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:29) (133 samples, 45.39%)</title><rect x="654" y="84" width="536" height="15" fill="rgb(237,132,52)"/><text x="657.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_double_.py:23) (132 samples, 45.05%)</title><rect x="658" y="100" width="532" height="15" fill="rgb(207,202,30)"/><text x="661.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (131 samples, 44.71%)</title><rect x="662" y="116" width="528" height="15" fill="rgb(231,181,43)"/><text x="665.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (131 samples, 44.71%)</title><rect x="662" y="132" width="528" height="15" fill="rgb(238,168,22)"/><text x="665.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (130 samples, 44.37%)</title><rect x="666" y="148" width="524" height="15" fill="rgb(207,167,32)"/><text x="669.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.37%)</title><rect x="1173" y="164" width="17" height="15" fill="rgb(227,119,43)"/><text x="1176.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.34%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(224,47,20)"/><text x="1188.00" y="190.50"></text></g></g></svg>