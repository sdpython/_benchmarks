<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(213,77,30)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(218,31,32)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(214,145,4)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(214,118,15)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(248,128,27)"/><text x="13.00" y="942.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(218,142,7)"/><text x="16.00" y="926.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.68%)</title><rect x="17" y="1012" width="8" height="15" fill="rgb(207,114,13)"/><text x="20.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(240,166,40)"/><text x="24.00" y="1038.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="17" y="932" width="12" height="15" fill="rgb(213,18,9)"/><text x="20.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="17" y="948" width="12" height="15" fill="rgb(213,53,31)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="17" y="964" width="12" height="15" fill="rgb(205,110,40)"/><text x="20.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (3 samples, 1.01%)</title><rect x="17" y="980" width="12" height="15" fill="rgb(205,229,9)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (3 samples, 1.01%)</title><rect x="17" y="996" width="12" height="15" fill="rgb(241,192,5)"/><text x="20.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.34%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(221,188,27)"/><text x="28.00" y="1022.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(217,135,34)"/><text x="32.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (6 samples, 2.03%)</title><rect x="13" y="868" width="24" height="15" fill="rgb(235,148,37)"/><text x="16.00" y="878.50">_..</text></g><g><title>__init__ (pkg_resources/__init__.py) (6 samples, 2.03%)</title><rect x="13" y="884" width="24" height="15" fill="rgb(246,41,6)"/><text x="16.00" y="894.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (6 samples, 2.03%)</title><rect x="13" y="900" width="24" height="15" fill="rgb(221,142,48)"/><text x="16.00" y="910.50">a..</text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 1.69%)</title><rect x="17" y="916" width="20" height="15" fill="rgb(218,99,53)"/><text x="20.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="29" y="932" width="8" height="15" fill="rgb(243,156,25)"/><text x="32.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.34%)</title><rect x="33" y="948" width="4" height="15" fill="rgb(244,175,50)"/><text x="36.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="964" width="4" height="15" fill="rgb(211,185,39)"/><text x="36.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="980" width="4" height="15" fill="rgb(206,135,6)"/><text x="36.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="596" width="31" height="15" fill="rgb(231,167,28)"/><text x="13.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="612" width="31" height="15" fill="rgb(211,70,9)"/><text x="13.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="628" width="31" height="15" fill="rgb(242,132,48)"/><text x="13.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="644" width="31" height="15" fill="rgb(244,2,50)"/><text x="13.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="660" width="31" height="15" fill="rgb(211,31,24)"/><text x="13.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="676" width="31" height="15" fill="rgb(213,143,40)"/><text x="13.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.70%)</title><rect x="10" y="692" width="31" height="15" fill="rgb(243,129,42)"/><text x="13.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="708" width="31" height="15" fill="rgb(237,138,35)"/><text x="13.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 2.70%)</title><rect x="10" y="724" width="31" height="15" fill="rgb(209,160,29)"/><text x="13.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="740" width="31" height="15" fill="rgb(216,145,53)"/><text x="13.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="756" width="31" height="15" fill="rgb(211,128,47)"/><text x="13.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="772" width="31" height="15" fill="rgb(251,118,52)"/><text x="13.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.70%)</title><rect x="10" y="788" width="31" height="15" fill="rgb(242,62,13)"/><text x="13.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="10" y="804" width="31" height="15" fill="rgb(224,171,51)"/><text x="13.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 2.70%)</title><rect x="10" y="820" width="31" height="15" fill="rgb(219,155,8)"/><text x="13.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (8 samples, 2.70%)</title><rect x="10" y="836" width="31" height="15" fill="rgb(247,94,44)"/><text x="13.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (8 samples, 2.70%)</title><rect x="10" y="852" width="31" height="15" fill="rgb(248,134,40)"/><text x="13.00" y="862.50">_i..</text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="868" width="4" height="15" fill="rgb(224,196,50)"/><text x="40.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="884" width="4" height="15" fill="rgb(222,206,44)"/><text x="40.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="900" width="4" height="15" fill="rgb(252,186,8)"/><text x="40.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="916" width="4" height="15" fill="rgb(247,8,32)"/><text x="40.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="932" width="4" height="15" fill="rgb(215,69,17)"/><text x="40.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="948" width="4" height="15" fill="rgb(253,143,37)"/><text x="40.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.34%)</title><rect x="37" y="964" width="4" height="15" fill="rgb(244,64,19)"/><text x="40.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="37" y="980" width="4" height="15" fill="rgb(232,188,24)"/><text x="40.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (9 samples, 3.04%)</title><rect x="10" y="292" width="35" height="15" fill="rgb(215,102,10)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="308" width="35" height="15" fill="rgb(245,45,4)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="324" width="35" height="15" fill="rgb(212,69,46)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="340" width="35" height="15" fill="rgb(230,60,13)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.04%)</title><rect x="10" y="356" width="35" height="15" fill="rgb(225,120,11)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="372" width="35" height="15" fill="rgb(233,54,22)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (9 samples, 3.04%)</title><rect x="10" y="388" width="35" height="15" fill="rgb(227,111,15)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="404" width="35" height="15" fill="rgb(230,111,36)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="420" width="35" height="15" fill="rgb(228,164,35)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="436" width="35" height="15" fill="rgb(251,74,20)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.04%)</title><rect x="10" y="452" width="35" height="15" fill="rgb(251,186,31)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="468" width="35" height="15" fill="rgb(223,207,7)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (9 samples, 3.04%)</title><rect x="10" y="484" width="35" height="15" fill="rgb(228,173,39)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="500" width="35" height="15" fill="rgb(206,163,45)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="516" width="35" height="15" fill="rgb(243,44,25)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="532" width="35" height="15" fill="rgb(241,151,18)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.04%)</title><rect x="10" y="548" width="35" height="15" fill="rgb(242,90,21)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="10" y="564" width="35" height="15" fill="rgb(216,24,31)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (9 samples, 3.04%)</title><rect x="10" y="580" width="35" height="15" fill="rgb(240,60,33)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="596" width="4" height="15" fill="rgb(217,41,19)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="612" width="4" height="15" fill="rgb(212,174,33)"/><text x="44.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="628" width="4" height="15" fill="rgb(234,3,44)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="644" width="4" height="15" fill="rgb(211,189,6)"/><text x="44.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="660" width="4" height="15" fill="rgb(239,121,2)"/><text x="44.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="676" width="4" height="15" fill="rgb(231,91,33)"/><text x="44.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="692" width="4" height="15" fill="rgb(226,73,30)"/><text x="44.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.34%)</title><rect x="41" y="708" width="4" height="15" fill="rgb(214,80,35)"/><text x="44.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.39%)</title><rect x="10" y="196" width="51" height="15" fill="rgb(237,38,36)"/><text x="13.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.39%)</title><rect x="10" y="212" width="51" height="15" fill="rgb(217,8,51)"/><text x="13.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.39%)</title><rect x="10" y="228" width="51" height="15" fill="rgb(208,128,42)"/><text x="13.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.39%)</title><rect x="10" y="244" width="51" height="15" fill="rgb(217,96,3)"/><text x="13.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 4.39%)</title><rect x="10" y="260" width="51" height="15" fill="rgb(214,64,49)"/><text x="13.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.39%)</title><rect x="10" y="276" width="51" height="15" fill="rgb(253,40,15)"/><text x="13.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.35%)</title><rect x="45" y="292" width="16" height="15" fill="rgb(231,193,21)"/><text x="48.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="308" width="16" height="15" fill="rgb(247,122,36)"/><text x="48.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="324" width="16" height="15" fill="rgb(248,91,17)"/><text x="48.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="340" width="16" height="15" fill="rgb(233,40,17)"/><text x="48.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="356" width="16" height="15" fill="rgb(209,124,50)"/><text x="48.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="372" width="16" height="15" fill="rgb(211,125,35)"/><text x="48.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.35%)</title><rect x="45" y="388" width="16" height="15" fill="rgb(220,103,8)"/><text x="48.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="404" width="16" height="15" fill="rgb(209,57,32)"/><text x="48.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="420" width="16" height="15" fill="rgb(239,148,36)"/><text x="48.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="436" width="16" height="15" fill="rgb(253,165,41)"/><text x="48.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="452" width="16" height="15" fill="rgb(209,45,23)"/><text x="48.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="468" width="16" height="15" fill="rgb(248,56,21)"/><text x="48.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.35%)</title><rect x="45" y="484" width="16" height="15" fill="rgb(243,138,6)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="500" width="16" height="15" fill="rgb(229,9,17)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="516" width="16" height="15" fill="rgb(209,32,1)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="532" width="16" height="15" fill="rgb(241,70,29)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="548" width="16" height="15" fill="rgb(242,74,17)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="564" width="16" height="15" fill="rgb(234,167,44)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 1.35%)</title><rect x="45" y="580" width="16" height="15" fill="rgb(243,152,16)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="596" width="16" height="15" fill="rgb(254,10,23)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="612" width="16" height="15" fill="rgb(222,185,48)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="628" width="16" height="15" fill="rgb(214,52,49)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="644" width="16" height="15" fill="rgb(247,73,24)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="660" width="16" height="15" fill="rgb(211,225,51)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 1.35%)</title><rect x="45" y="676" width="16" height="15" fill="rgb(250,32,28)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="692" width="16" height="15" fill="rgb(205,15,37)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="708" width="16" height="15" fill="rgb(212,79,3)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="724" width="16" height="15" fill="rgb(230,170,25)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="740" width="16" height="15" fill="rgb(235,165,48)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="756" width="16" height="15" fill="rgb(235,219,1)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (4 samples, 1.35%)</title><rect x="45" y="772" width="16" height="15" fill="rgb(214,186,45)"/><text x="48.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="788" width="16" height="15" fill="rgb(231,11,10)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="804" width="16" height="15" fill="rgb(210,168,35)"/><text x="48.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="820" width="16" height="15" fill="rgb(241,32,8)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="836" width="16" height="15" fill="rgb(210,97,24)"/><text x="48.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="852" width="16" height="15" fill="rgb(219,171,50)"/><text x="48.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="868" width="16" height="15" fill="rgb(205,207,4)"/><text x="48.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="884" width="16" height="15" fill="rgb(234,13,32)"/><text x="48.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (4 samples, 1.35%)</title><rect x="45" y="900" width="16" height="15" fill="rgb(247,88,0)"/><text x="48.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="916" width="16" height="15" fill="rgb(235,118,46)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="932" width="16" height="15" fill="rgb(228,165,47)"/><text x="48.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="948" width="16" height="15" fill="rgb(208,73,7)"/><text x="48.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="964" width="16" height="15" fill="rgb(229,175,18)"/><text x="48.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="980" width="16" height="15" fill="rgb(236,157,23)"/><text x="48.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (4 samples, 1.35%)</title><rect x="45" y="996" width="16" height="15" fill="rgb(237,113,21)"/><text x="48.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1012" width="16" height="15" fill="rgb(239,104,30)"/><text x="48.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1028" width="16" height="15" fill="rgb(249,102,8)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1044" width="16" height="15" fill="rgb(217,14,23)"/><text x="48.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1060" width="16" height="15" fill="rgb(208,178,18)"/><text x="48.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1076" width="16" height="15" fill="rgb(227,167,46)"/><text x="48.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="1092" width="16" height="15" fill="rgb(206,210,51)"/><text x="48.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1108" width="16" height="15" fill="rgb(211,179,4)"/><text x="48.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py) (4 samples, 1.35%)</title><rect x="45" y="1124" width="16" height="15" fill="rgb(247,168,13)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1140" width="16" height="15" fill="rgb(208,44,31)"/><text x="48.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1156" width="16" height="15" fill="rgb(247,135,24)"/><text x="48.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1172" width="16" height="15" fill="rgb(215,138,32)"/><text x="48.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="1188" width="16" height="15" fill="rgb(222,43,41)"/><text x="48.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1204" width="16" height="15" fill="rgb(208,88,38)"/><text x="48.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/__init__.py) (4 samples, 1.35%)</title><rect x="45" y="1220" width="16" height="15" fill="rgb(214,79,37)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1236" width="16" height="15" fill="rgb(252,91,3)"/><text x="48.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1252" width="16" height="15" fill="rgb(211,221,11)"/><text x="48.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1268" width="16" height="15" fill="rgb(225,117,7)"/><text x="48.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="45" y="1284" width="16" height="15" fill="rgb(221,202,13)"/><text x="48.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="45" y="1300" width="16" height="15" fill="rgb(248,22,48)"/><text x="48.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/ivp.py) (4 samples, 1.35%)</title><rect x="45" y="1316" width="16" height="15" fill="rgb(228,194,44)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="49" y="1332" width="12" height="15" fill="rgb(224,176,22)"/><text x="52.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="53" y="1348" width="8" height="15" fill="rgb(252,181,18)"/><text x="56.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="53" y="1364" width="8" height="15" fill="rgb(238,6,17)"/><text x="56.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="53" y="1380" width="8" height="15" fill="rgb(237,116,20)"/><text x="56.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="53" y="1396" width="8" height="15" fill="rgb(213,178,14)"/><text x="56.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/radau.py) (2 samples, 0.68%)</title><rect x="53" y="1412" width="8" height="15" fill="rgb(246,21,29)"/><text x="56.00" y="1422.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="57" y="1428" width="4" height="15" fill="rgb(225,229,2)"/><text x="60.00" y="1438.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.34%)</title><rect x="57" y="1444" width="4" height="15" fill="rgb(207,14,24)"/><text x="60.00" y="1454.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="57" y="1460" width="4" height="15" fill="rgb(241,121,5)"/><text x="60.00" y="1470.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.34%)</title><rect x="57" y="1476" width="4" height="15" fill="rgb(249,1,23)"/><text x="60.00" y="1486.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.34%)</title><rect x="57" y="1492" width="4" height="15" fill="rgb(227,15,42)"/><text x="60.00" y="1502.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.34%)</title><rect x="57" y="1508" width="4" height="15" fill="rgb(247,221,25)"/><text x="60.00" y="1518.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h) (1 samples, 0.34%)</title><rect x="57" y="1524" width="4" height="15" fill="rgb(217,79,44)"/><text x="60.00" y="1534.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.34%)</title><rect x="57" y="1540" width="4" height="15" fill="rgb(252,175,4)"/><text x="60.00" y="1550.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="61" y="1508" width="4" height="15" fill="rgb(217,42,11)"/><text x="64.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.68%)</title><rect x="61" y="772" width="8" height="15" fill="rgb(246,81,10)"/><text x="64.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="788" width="8" height="15" fill="rgb(244,124,18)"/><text x="64.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="804" width="8" height="15" fill="rgb(207,111,4)"/><text x="64.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="820" width="8" height="15" fill="rgb(254,18,7)"/><text x="64.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="61" y="836" width="8" height="15" fill="rgb(247,31,19)"/><text x="64.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="852" width="8" height="15" fill="rgb(225,19,2)"/><text x="64.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.68%)</title><rect x="61" y="868" width="8" height="15" fill="rgb(215,55,50)"/><text x="64.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="884" width="8" height="15" fill="rgb(209,106,50)"/><text x="64.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="900" width="8" height="15" fill="rgb(220,77,24)"/><text x="64.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="916" width="8" height="15" fill="rgb(222,75,3)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="932" width="8" height="15" fill="rgb(239,176,40)"/><text x="64.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="948" width="8" height="15" fill="rgb(206,110,28)"/><text x="64.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="964" width="8" height="15" fill="rgb(237,66,15)"/><text x="64.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="61" y="980" width="8" height="15" fill="rgb(216,109,34)"/><text x="64.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="996" width="8" height="15" fill="rgb(212,146,15)"/><text x="64.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.68%)</title><rect x="61" y="1012" width="8" height="15" fill="rgb(245,134,4)"/><text x="64.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1028" width="8" height="15" fill="rgb(209,76,20)"/><text x="64.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1044" width="8" height="15" fill="rgb(248,90,52)"/><text x="64.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1060" width="8" height="15" fill="rgb(216,29,7)"/><text x="64.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="61" y="1076" width="8" height="15" fill="rgb(226,216,46)"/><text x="64.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1092" width="8" height="15" fill="rgb(229,148,42)"/><text x="64.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.68%)</title><rect x="61" y="1108" width="8" height="15" fill="rgb(252,161,34)"/><text x="64.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1124" width="8" height="15" fill="rgb(237,198,25)"/><text x="64.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1140" width="8" height="15" fill="rgb(252,146,1)"/><text x="64.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1156" width="8" height="15" fill="rgb(229,158,19)"/><text x="64.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1172" width="8" height="15" fill="rgb(230,39,26)"/><text x="64.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1188" width="8" height="15" fill="rgb(232,226,0)"/><text x="64.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="61" y="1204" width="8" height="15" fill="rgb(242,102,11)"/><text x="64.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1220" width="8" height="15" fill="rgb(220,122,2)"/><text x="64.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.68%)</title><rect x="61" y="1236" width="8" height="15" fill="rgb(226,160,33)"/><text x="64.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1252" width="8" height="15" fill="rgb(238,68,28)"/><text x="64.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1268" width="8" height="15" fill="rgb(214,19,38)"/><text x="64.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1284" width="8" height="15" fill="rgb(229,36,14)"/><text x="64.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1300" width="8" height="15" fill="rgb(210,45,10)"/><text x="64.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1316" width="8" height="15" fill="rgb(219,46,16)"/><text x="64.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="61" y="1332" width="8" height="15" fill="rgb(250,132,29)"/><text x="64.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1348" width="8" height="15" fill="rgb(240,141,10)"/><text x="64.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.68%)</title><rect x="61" y="1364" width="8" height="15" fill="rgb(229,131,30)"/><text x="64.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1380" width="8" height="15" fill="rgb(223,208,27)"/><text x="64.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1396" width="8" height="15" fill="rgb(236,142,22)"/><text x="64.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1412" width="8" height="15" fill="rgb(233,226,12)"/><text x="64.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="61" y="1428" width="8" height="15" fill="rgb(241,164,53)"/><text x="64.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="61" y="1444" width="8" height="15" fill="rgb(240,5,26)"/><text x="64.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.68%)</title><rect x="61" y="1460" width="8" height="15" fill="rgb(215,37,16)"/><text x="64.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.68%)</title><rect x="61" y="1476" width="8" height="15" fill="rgb(219,198,5)"/><text x="64.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.68%)</title><rect x="61" y="1492" width="8" height="15" fill="rgb(222,61,1)"/><text x="64.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.34%)</title><rect x="65" y="1508" width="4" height="15" fill="rgb(219,16,35)"/><text x="68.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.34%)</title><rect x="65" y="1524" width="4" height="15" fill="rgb(217,201,40)"/><text x="68.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="65" y="1540" width="4" height="15" fill="rgb(245,158,36)"/><text x="68.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="65" y="1556" width="4" height="15" fill="rgb(210,132,35)"/><text x="68.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.34%)</title><rect x="65" y="1572" width="4" height="15" fill="rgb(244,108,37)"/><text x="68.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="484" width="12" height="15" fill="rgb(232,106,4)"/><text x="64.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="500" width="12" height="15" fill="rgb(219,113,9)"/><text x="64.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="516" width="12" height="15" fill="rgb(215,128,29)"/><text x="64.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="532" width="12" height="15" fill="rgb(240,174,41)"/><text x="64.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="61" y="548" width="12" height="15" fill="rgb(206,205,9)"/><text x="64.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="564" width="12" height="15" fill="rgb(248,202,2)"/><text x="64.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.01%)</title><rect x="61" y="580" width="12" height="15" fill="rgb(252,205,3)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="596" width="12" height="15" fill="rgb(229,90,41)"/><text x="64.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="612" width="12" height="15" fill="rgb(218,139,29)"/><text x="64.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="628" width="12" height="15" fill="rgb(206,84,5)"/><text x="64.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="61" y="644" width="12" height="15" fill="rgb(234,110,53)"/><text x="64.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="660" width="12" height="15" fill="rgb(207,10,40)"/><text x="64.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 1.01%)</title><rect x="61" y="676" width="12" height="15" fill="rgb(252,73,1)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="692" width="12" height="15" fill="rgb(252,190,2)"/><text x="64.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="708" width="12" height="15" fill="rgb(241,224,19)"/><text x="64.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="724" width="12" height="15" fill="rgb(233,35,4)"/><text x="64.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="61" y="740" width="12" height="15" fill="rgb(226,189,51)"/><text x="64.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="61" y="756" width="12" height="15" fill="rgb(251,91,45)"/><text x="64.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.34%)</title><rect x="69" y="772" width="4" height="15" fill="rgb(225,64,7)"/><text x="72.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="788" width="4" height="15" fill="rgb(248,66,41)"/><text x="72.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="804" width="4" height="15" fill="rgb(239,19,24)"/><text x="72.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="820" width="4" height="15" fill="rgb(231,69,36)"/><text x="72.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="836" width="4" height="15" fill="rgb(215,57,52)"/><text x="72.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="852" width="4" height="15" fill="rgb(233,169,25)"/><text x="72.00" y="862.50"></text></g><g><title>0x7fc9accbb40e (?) (1 samples, 0.34%)</title><rect x="73" y="916" width="4" height="15" fill="rgb(253,139,17)"/><text x="76.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="932" width="4" height="15" fill="rgb(213,104,39)"/><text x="76.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="948" width="4" height="15" fill="rgb(228,207,50)"/><text x="76.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="964" width="4" height="15" fill="rgb(227,188,53)"/><text x="76.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="73" y="980" width="4" height="15" fill="rgb(231,115,52)"/><text x="76.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="996" width="4" height="15" fill="rgb(240,142,29)"/><text x="76.00" y="1006.50"></text></g><g><title>0x7fc9aca74cd2 (?) (1 samples, 0.34%)</title><rect x="73" y="1012" width="4" height="15" fill="rgb(219,82,49)"/><text x="76.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1028" width="4" height="15" fill="rgb(246,202,11)"/><text x="76.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1044" width="4" height="15" fill="rgb(220,151,12)"/><text x="76.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1060" width="4" height="15" fill="rgb(245,176,40)"/><text x="76.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="73" y="1076" width="4" height="15" fill="rgb(245,124,2)"/><text x="76.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1092" width="4" height="15" fill="rgb(240,76,53)"/><text x="76.00" y="1102.50"></text></g><g><title>0x7fc9ac16a0e5 (?) (1 samples, 0.34%)</title><rect x="73" y="1108" width="4" height="15" fill="rgb(246,212,51)"/><text x="76.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1124" width="4" height="15" fill="rgb(235,109,52)"/><text x="76.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1140" width="4" height="15" fill="rgb(224,81,25)"/><text x="76.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1156" width="4" height="15" fill="rgb(254,65,27)"/><text x="76.00" y="1166.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1172" width="4" height="15" fill="rgb(228,210,41)"/><text x="76.00" y="1182.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="73" y="1188" width="4" height="15" fill="rgb(214,213,3)"/><text x="76.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="73" y="1204" width="4" height="15" fill="rgb(206,192,15)"/><text x="76.00" y="1214.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1220" width="4" height="15" fill="rgb(243,98,7)"/><text x="76.00" y="1230.50"></text></g><g><title>0x7fc9d7a12995 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1236" width="4" height="15" fill="rgb(232,75,31)"/><text x="76.00" y="1246.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1252" width="4" height="15" fill="rgb(220,83,26)"/><text x="76.00" y="1262.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1268" width="4" height="15" fill="rgb(227,198,17)"/><text x="76.00" y="1278.50"></text></g><g><title>0x7fc9d7a12258 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1284" width="4" height="15" fill="rgb(229,102,26)"/><text x="76.00" y="1294.50"></text></g><g><title>0x7fc9d7a5fd7a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1300" width="4" height="15" fill="rgb(228,72,24)"/><text x="76.00" y="1310.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1316" width="4" height="15" fill="rgb(235,61,34)"/><text x="76.00" y="1326.50"></text></g><g><title>0x7fc9d7a601f0 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1332" width="4" height="15" fill="rgb(213,217,30)"/><text x="76.00" y="1342.50"></text></g><g><title>0x7fc9d7a5a876 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1348" width="4" height="15" fill="rgb(220,47,10)"/><text x="76.00" y="1358.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1364" width="4" height="15" fill="rgb(221,13,16)"/><text x="76.00" y="1374.50"></text></g><g><title>0x7fc9d7a5a501 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1380" width="4" height="15" fill="rgb(214,34,47)"/><text x="76.00" y="1390.50"></text></g><g><title>0x7fc9d7a55b07 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1396" width="4" height="15" fill="rgb(239,226,38)"/><text x="76.00" y="1406.50"></text></g><g><title>0x7fc9d7a6804a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="73" y="1412" width="4" height="15" fill="rgb(214,82,19)"/><text x="76.00" y="1422.50"></text></g><g><title>0x7fc9abeeb335 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="77" y="1204" width="4" height="15" fill="rgb(241,142,51)"/><text x="80.00" y="1214.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="77" y="1220" width="4" height="15" fill="rgb(227,107,12)"/><text x="80.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 1.01%)</title><rect x="73" y="724" width="12" height="15" fill="rgb(234,176,5)"/><text x="76.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="740" width="12" height="15" fill="rgb(226,140,19)"/><text x="76.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="756" width="12" height="15" fill="rgb(252,125,17)"/><text x="76.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="772" width="12" height="15" fill="rgb(233,90,48)"/><text x="76.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="73" y="788" width="12" height="15" fill="rgb(215,72,11)"/><text x="76.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="804" width="12" height="15" fill="rgb(211,65,12)"/><text x="76.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 1.01%)</title><rect x="73" y="820" width="12" height="15" fill="rgb(246,86,48)"/><text x="76.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="836" width="12" height="15" fill="rgb(231,157,33)"/><text x="76.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="852" width="12" height="15" fill="rgb(218,85,19)"/><text x="76.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="868" width="12" height="15" fill="rgb(217,39,27)"/><text x="76.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="73" y="884" width="12" height="15" fill="rgb(247,11,13)"/><text x="76.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="73" y="900" width="12" height="15" fill="rgb(230,74,21)"/><text x="76.00" y="910.50"></text></g><g><title>0x7fc9accbb40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="77" y="916" width="8" height="15" fill="rgb(248,165,30)"/><text x="80.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="932" width="8" height="15" fill="rgb(220,4,44)"/><text x="80.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="948" width="8" height="15" fill="rgb(243,151,43)"/><text x="80.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="964" width="8" height="15" fill="rgb(210,228,50)"/><text x="80.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="77" y="980" width="8" height="15" fill="rgb(250,25,0)"/><text x="80.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="996" width="8" height="15" fill="rgb(206,22,54)"/><text x="80.00" y="1006.50"></text></g><g><title>0x7fc9aca74cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="77" y="1012" width="8" height="15" fill="rgb(239,2,0)"/><text x="80.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1028" width="8" height="15" fill="rgb(237,38,36)"/><text x="80.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1044" width="8" height="15" fill="rgb(223,77,40)"/><text x="80.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1060" width="8" height="15" fill="rgb(222,131,18)"/><text x="80.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="77" y="1076" width="8" height="15" fill="rgb(235,190,33)"/><text x="80.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1092" width="8" height="15" fill="rgb(248,35,41)"/><text x="80.00" y="1102.50"></text></g><g><title>0x7fc9ac16a0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="77" y="1108" width="8" height="15" fill="rgb(239,204,53)"/><text x="80.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1124" width="8" height="15" fill="rgb(214,180,13)"/><text x="80.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1140" width="8" height="15" fill="rgb(214,27,49)"/><text x="80.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1156" width="8" height="15" fill="rgb(248,215,5)"/><text x="80.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="77" y="1172" width="8" height="15" fill="rgb(233,177,50)"/><text x="80.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="77" y="1188" width="8" height="15" fill="rgb(230,216,16)"/><text x="80.00" y="1198.50"></text></g><g><title>0x7fc9abeeee68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="81" y="1204" width="4" height="15" fill="rgb(248,18,11)"/><text x="84.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1220" width="4" height="15" fill="rgb(229,18,47)"/><text x="84.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1236" width="4" height="15" fill="rgb(241,11,37)"/><text x="84.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1252" width="4" height="15" fill="rgb(236,216,35)"/><text x="84.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="81" y="1268" width="4" height="15" fill="rgb(247,198,16)"/><text x="84.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1284" width="4" height="15" fill="rgb(215,61,21)"/><text x="84.00" y="1294.50"></text></g><g><title>0x7fc9abc7f2fb (?) (1 samples, 0.34%)</title><rect x="81" y="1300" width="4" height="15" fill="rgb(216,138,21)"/><text x="84.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1316" width="4" height="15" fill="rgb(238,125,41)"/><text x="84.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1332" width="4" height="15" fill="rgb(247,221,47)"/><text x="84.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1348" width="4" height="15" fill="rgb(231,99,48)"/><text x="84.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="81" y="1364" width="4" height="15" fill="rgb(216,157,9)"/><text x="84.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1380" width="4" height="15" fill="rgb(217,219,5)"/><text x="84.00" y="1390.50"></text></g><g><title>0x7fc9aba63153 (?) (1 samples, 0.34%)</title><rect x="81" y="1396" width="4" height="15" fill="rgb(211,98,9)"/><text x="84.00" y="1406.50"></text></g><g><title>0x7fc9aba61c13 (?) (1 samples, 0.34%)</title><rect x="81" y="1412" width="4" height="15" fill="rgb(230,180,8)"/><text x="84.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1428" width="4" height="15" fill="rgb(232,96,26)"/><text x="84.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1444" width="4" height="15" fill="rgb(254,6,39)"/><text x="84.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1460" width="4" height="15" fill="rgb(231,191,4)"/><text x="84.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="81" y="1476" width="4" height="15" fill="rgb(207,88,15)"/><text x="84.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="81" y="1492" width="4" height="15" fill="rgb(242,194,54)"/><text x="84.00" y="1502.50"></text></g><g><title>0x7fc9ab7fe181 (?) (1 samples, 0.34%)</title><rect x="81" y="1508" width="4" height="15" fill="rgb(213,129,39)"/><text x="84.00" y="1518.50"></text></g><g><title>0x7fc9ab8011c9 (?) (1 samples, 0.34%)</title><rect x="81" y="1524" width="4" height="15" fill="rgb(243,171,12)"/><text x="84.00" y="1534.50"></text></g><g><title>0x7fc9ab82d167 (?) (1 samples, 0.34%)</title><rect x="81" y="1540" width="4" height="15" fill="rgb(208,156,41)"/><text x="84.00" y="1550.50"></text></g><g><title>0x7fc9ab828b64 (?) (1 samples, 0.34%)</title><rect x="81" y="1556" width="4" height="15" fill="rgb(235,50,1)"/><text x="84.00" y="1566.50"></text></g><g><title>0x7fc9ab80c07b (?) (1 samples, 0.34%)</title><rect x="81" y="1572" width="4" height="15" fill="rgb(239,213,39)"/><text x="84.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.34%)</title><rect x="81" y="1588" width="4" height="15" fill="rgb(242,154,26)"/><text x="84.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.34%)</title><rect x="81" y="1604" width="4" height="15" fill="rgb(237,11,15)"/><text x="84.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.34%)</title><rect x="81" y="1620" width="4" height="15" fill="rgb(227,51,4)"/><text x="84.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.34%)</title><rect x="81" y="1636" width="4" height="15" fill="rgb(236,82,3)"/><text x="84.00" y="1646.50"></text></g><g><title>isatty (libc-2.29.so) (1 samples, 0.34%)</title><rect x="81" y="1652" width="4" height="15" fill="rgb(231,107,54)"/><text x="84.00" y="1662.50"></text></g><g><title>tcgetattr (libc-2.29.so) (1 samples, 0.34%)</title><rect x="81" y="1668" width="4" height="15" fill="rgb(211,122,26)"/><text x="84.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.36%)</title><rect x="61" y="340" width="28" height="15" fill="rgb(221,72,7)"/><text x="64.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.36%)</title><rect x="61" y="356" width="28" height="15" fill="rgb(247,216,27)"/><text x="64.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.36%)</title><rect x="61" y="372" width="28" height="15" fill="rgb(208,37,5)"/><text x="64.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.36%)</title><rect x="61" y="388" width="28" height="15" fill="rgb(217,58,9)"/><text x="64.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.36%)</title><rect x="61" y="404" width="28" height="15" fill="rgb(246,60,14)"/><text x="64.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.36%)</title><rect x="61" y="420" width="28" height="15" fill="rgb(229,128,15)"/><text x="64.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 2.36%)</title><rect x="61" y="436" width="28" height="15" fill="rgb(245,208,16)"/><text x="64.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.36%)</title><rect x="61" y="452" width="28" height="15" fill="rgb(239,215,27)"/><text x="64.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.36%)</title><rect x="61" y="468" width="28" height="15" fill="rgb(240,91,35)"/><text x="64.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="484" width="16" height="15" fill="rgb(226,126,29)"/><text x="76.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="73" y="500" width="16" height="15" fill="rgb(225,131,14)"/><text x="76.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="516" width="16" height="15" fill="rgb(235,69,11)"/><text x="76.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.35%)</title><rect x="73" y="532" width="16" height="15" fill="rgb(237,8,41)"/><text x="76.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="548" width="16" height="15" fill="rgb(205,146,0)"/><text x="76.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="564" width="16" height="15" fill="rgb(242,19,11)"/><text x="76.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="580" width="16" height="15" fill="rgb(230,216,42)"/><text x="76.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="73" y="596" width="16" height="15" fill="rgb(219,131,36)"/><text x="76.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="612" width="16" height="15" fill="rgb(241,106,25)"/><text x="76.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.35%)</title><rect x="73" y="628" width="16" height="15" fill="rgb(219,204,36)"/><text x="76.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="644" width="16" height="15" fill="rgb(233,203,20)"/><text x="76.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="660" width="16" height="15" fill="rgb(215,191,31)"/><text x="76.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="676" width="16" height="15" fill="rgb(223,19,24)"/><text x="76.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="73" y="692" width="16" height="15" fill="rgb(248,29,31)"/><text x="76.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="73" y="708" width="16" height="15" fill="rgb(240,95,5)"/><text x="76.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.34%)</title><rect x="85" y="724" width="4" height="15" fill="rgb(221,97,36)"/><text x="88.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="740" width="4" height="15" fill="rgb(238,142,38)"/><text x="88.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="756" width="4" height="15" fill="rgb(229,49,25)"/><text x="88.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="772" width="4" height="15" fill="rgb(217,162,3)"/><text x="88.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="788" width="4" height="15" fill="rgb(229,100,35)"/><text x="88.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="804" width="4" height="15" fill="rgb(247,114,34)"/><text x="88.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.34%)</title><rect x="85" y="820" width="4" height="15" fill="rgb(238,45,15)"/><text x="88.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="836" width="4" height="15" fill="rgb(223,36,54)"/><text x="88.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="852" width="4" height="15" fill="rgb(218,46,38)"/><text x="88.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="868" width="4" height="15" fill="rgb(231,14,37)"/><text x="88.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="884" width="4" height="15" fill="rgb(243,93,23)"/><text x="88.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="900" width="4" height="15" fill="rgb(213,60,25)"/><text x="88.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.34%)</title><rect x="85" y="916" width="4" height="15" fill="rgb(218,32,11)"/><text x="88.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="932" width="4" height="15" fill="rgb(206,133,10)"/><text x="88.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="948" width="4" height="15" fill="rgb(235,206,54)"/><text x="88.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="964" width="4" height="15" fill="rgb(231,145,20)"/><text x="88.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="980" width="4" height="15" fill="rgb(211,102,38)"/><text x="88.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="996" width="4" height="15" fill="rgb(235,173,28)"/><text x="88.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.34%)</title><rect x="85" y="1012" width="4" height="15" fill="rgb(241,115,45)"/><text x="88.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1028" width="4" height="15" fill="rgb(234,142,32)"/><text x="88.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1044" width="4" height="15" fill="rgb(243,13,39)"/><text x="88.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1060" width="4" height="15" fill="rgb(215,162,51)"/><text x="88.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1076" width="4" height="15" fill="rgb(230,40,45)"/><text x="88.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1092" width="4" height="15" fill="rgb(234,183,54)"/><text x="88.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.34%)</title><rect x="85" y="1108" width="4" height="15" fill="rgb(242,208,37)"/><text x="88.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1124" width="4" height="15" fill="rgb(243,35,44)"/><text x="88.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1140" width="4" height="15" fill="rgb(223,167,6)"/><text x="88.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1156" width="4" height="15" fill="rgb(229,139,50)"/><text x="88.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1172" width="4" height="15" fill="rgb(238,163,36)"/><text x="88.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1188" width="4" height="15" fill="rgb(226,148,8)"/><text x="88.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.34%)</title><rect x="85" y="1204" width="4" height="15" fill="rgb(236,13,52)"/><text x="88.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1220" width="4" height="15" fill="rgb(246,164,41)"/><text x="88.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1236" width="4" height="15" fill="rgb(241,83,50)"/><text x="88.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1252" width="4" height="15" fill="rgb(216,194,53)"/><text x="88.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1268" width="4" height="15" fill="rgb(227,146,54)"/><text x="88.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1284" width="4" height="15" fill="rgb(206,133,15)"/><text x="88.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.34%)</title><rect x="85" y="1300" width="4" height="15" fill="rgb(226,126,12)"/><text x="88.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1316" width="4" height="15" fill="rgb(223,105,8)"/><text x="88.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1332" width="4" height="15" fill="rgb(209,180,37)"/><text x="88.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1348" width="4" height="15" fill="rgb(253,152,24)"/><text x="88.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1364" width="4" height="15" fill="rgb(229,179,45)"/><text x="88.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1380" width="4" height="15" fill="rgb(214,188,53)"/><text x="88.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.34%)</title><rect x="85" y="1396" width="4" height="15" fill="rgb(211,24,49)"/><text x="88.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1412" width="4" height="15" fill="rgb(214,166,27)"/><text x="88.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1428" width="4" height="15" fill="rgb(236,19,27)"/><text x="88.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1444" width="4" height="15" fill="rgb(207,68,18)"/><text x="88.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1460" width="4" height="15" fill="rgb(246,18,41)"/><text x="88.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1476" width="4" height="15" fill="rgb(233,215,42)"/><text x="88.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.34%)</title><rect x="85" y="1492" width="4" height="15" fill="rgb(211,106,0)"/><text x="88.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1508" width="4" height="15" fill="rgb(205,72,43)"/><text x="88.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1524" width="4" height="15" fill="rgb(238,91,4)"/><text x="88.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1540" width="4" height="15" fill="rgb(206,30,7)"/><text x="88.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1556" width="4" height="15" fill="rgb(219,28,16)"/><text x="88.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1572" width="4" height="15" fill="rgb(216,51,6)"/><text x="88.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1588" width="4" height="15" fill="rgb(251,160,9)"/><text x="88.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1604" width="4" height="15" fill="rgb(219,157,13)"/><text x="88.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1620" width="4" height="15" fill="rgb(213,73,34)"/><text x="88.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.34%)</title><rect x="85" y="1636" width="4" height="15" fill="rgb(249,150,5)"/><text x="88.00" y="1646.50"></text></g><g><title>_check_versions (matplotlib/__init__.py) (1 samples, 0.34%)</title><rect x="85" y="1652" width="4" height="15" fill="rgb(233,66,15)"/><text x="88.00" y="1662.50"></text></g><g><title>import_module (importlib/__init__.py) (1 samples, 0.34%)</title><rect x="85" y="1668" width="4" height="15" fill="rgb(234,99,16)"/><text x="88.00" y="1678.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1684" width="4" height="15" fill="rgb(211,4,30)"/><text x="88.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1700" width="4" height="15" fill="rgb(210,204,31)"/><text x="88.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1716" width="4" height="15" fill="rgb(225,3,8)"/><text x="88.00" y="1726.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="85" y="1732" width="4" height="15" fill="rgb(252,190,28)"/><text x="88.00" y="1742.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1748" width="4" height="15" fill="rgb(228,102,10)"/><text x="88.00" y="1758.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1764" width="4" height="15" fill="rgb(210,12,15)"/><text x="88.00" y="1774.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1780" width="4" height="15" fill="rgb(224,82,18)"/><text x="88.00" y="1790.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="85" y="1796" width="4" height="15" fill="rgb(217,138,33)"/><text x="88.00" y="1806.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.70%)</title><rect x="61" y="244" width="32" height="15" fill="rgb(240,217,25)"/><text x="64.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="61" y="260" width="32" height="15" fill="rgb(228,121,34)"/><text x="64.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="61" y="276" width="32" height="15" fill="rgb(225,105,52)"/><text x="64.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="61" y="292" width="32" height="15" fill="rgb(251,56,50)"/><text x="64.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.70%)</title><rect x="61" y="308" width="32" height="15" fill="rgb(224,11,45)"/><text x="64.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.70%)</title><rect x="61" y="324" width="32" height="15" fill="rgb(207,177,26)"/><text x="64.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.34%)</title><rect x="89" y="340" width="4" height="15" fill="rgb(210,64,31)"/><text x="92.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="356" width="4" height="15" fill="rgb(247,192,7)"/><text x="92.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="372" width="4" height="15" fill="rgb(209,0,40)"/><text x="92.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="388" width="4" height="15" fill="rgb(213,60,26)"/><text x="92.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="404" width="4" height="15" fill="rgb(226,143,11)"/><text x="92.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="420" width="4" height="15" fill="rgb(219,174,51)"/><text x="92.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="436" width="4" height="15" fill="rgb(218,161,24)"/><text x="92.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="89" y="452" width="4" height="15" fill="rgb(246,15,19)"/><text x="92.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="468" width="4" height="15" fill="rgb(211,106,4)"/><text x="92.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.34%)</title><rect x="89" y="484" width="4" height="15" fill="rgb(254,210,11)"/><text x="92.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="500" width="4" height="15" fill="rgb(219,140,52)"/><text x="92.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="516" width="4" height="15" fill="rgb(244,28,29)"/><text x="92.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="532" width="4" height="15" fill="rgb(254,224,42)"/><text x="92.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="89" y="548" width="4" height="15" fill="rgb(230,100,49)"/><text x="92.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="564" width="4" height="15" fill="rgb(226,102,31)"/><text x="92.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.34%)</title><rect x="89" y="580" width="4" height="15" fill="rgb(229,138,9)"/><text x="92.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="596" width="4" height="15" fill="rgb(240,158,30)"/><text x="92.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="612" width="4" height="15" fill="rgb(233,84,42)"/><text x="92.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="89" y="628" width="4" height="15" fill="rgb(239,71,25)"/><text x="92.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="89" y="644" width="4" height="15" fill="rgb(228,212,34)"/><text x="92.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="89" y="660" width="4" height="15" fill="rgb(225,37,37)"/><text x="92.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="89" y="676" width="4" height="15" fill="rgb(248,140,18)"/><text x="92.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.43%)</title><rect x="10" y="68" width="87" height="15" fill="rgb(247,167,34)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.43%)</title><rect x="10" y="84" width="87" height="15" fill="rgb(215,81,13)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.43%)</title><rect x="10" y="100" width="87" height="15" fill="rgb(248,98,33)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 7.43%)</title><rect x="10" y="116" width="87" height="15" fill="rgb(239,210,39)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.43%)</title><rect x="10" y="132" width="87" height="15" fill="rgb(221,56,52)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (22 samples, 7.43%)</title><rect x="10" y="148" width="87" height="15" fill="rgb(208,50,2)"/><text x="13.00" y="158.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.43%)</title><rect x="10" y="164" width="87" height="15" fill="rgb(231,174,0)"/><text x="13.00" y="174.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.43%)</title><rect x="10" y="180" width="87" height="15" fill="rgb(212,45,40)"/><text x="13.00" y="190.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="61" y="196" width="36" height="15" fill="rgb(241,108,25)"/><text x="64.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.04%)</title><rect x="61" y="212" width="36" height="15" fill="rgb(224,28,39)"/><text x="64.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.04%)</title><rect x="61" y="228" width="36" height="15" fill="rgb(207,134,41)"/><text x="64.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.34%)</title><rect x="93" y="244" width="4" height="15" fill="rgb(234,107,50)"/><text x="96.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="260" width="4" height="15" fill="rgb(223,208,26)"/><text x="96.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="276" width="4" height="15" fill="rgb(232,17,41)"/><text x="96.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="292" width="4" height="15" fill="rgb(231,217,47)"/><text x="96.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="308" width="4" height="15" fill="rgb(244,105,40)"/><text x="96.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="324" width="4" height="15" fill="rgb(229,62,15)"/><text x="96.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="93" y="340" width="4" height="15" fill="rgb(218,190,42)"/><text x="96.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="356" width="4" height="15" fill="rgb(211,215,37)"/><text x="96.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.34%)</title><rect x="93" y="372" width="4" height="15" fill="rgb(237,27,26)"/><text x="96.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="388" width="4" height="15" fill="rgb(211,0,51)"/><text x="96.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="404" width="4" height="15" fill="rgb(232,61,3)"/><text x="96.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="420" width="4" height="15" fill="rgb(216,228,49)"/><text x="96.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="436" width="4" height="15" fill="rgb(247,145,45)"/><text x="96.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="93" y="452" width="4" height="15" fill="rgb(224,43,30)"/><text x="96.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="93" y="468" width="4" height="15" fill="rgb(205,46,40)"/><text x="96.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="93" y="484" width="4" height="15" fill="rgb(206,125,50)"/><text x="96.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="93" y="500" width="4" height="15" fill="rgb(219,20,27)"/><text x="96.00" y="510.50"></text></g><g><title>0x7fc993603ff9 (?) (1 samples, 0.34%)</title><rect x="97" y="212" width="4" height="15" fill="rgb(225,142,41)"/><text x="100.00" y="222.50"></text></g><g><title>0x7fc9935feef6 (?) (1 samples, 0.34%)</title><rect x="97" y="228" width="4" height="15" fill="rgb(247,229,52)"/><text x="100.00" y="238.50"></text></g><g><title>0x7fc9935f3962 (?) (1 samples, 0.34%)</title><rect x="97" y="244" width="4" height="15" fill="rgb(210,102,39)"/><text x="100.00" y="254.50"></text></g><g><title>0x7fc9936277a7 (?) (1 samples, 0.34%)</title><rect x="97" y="260" width="4" height="15" fill="rgb(253,124,16)"/><text x="100.00" y="270.50"></text></g><g><title>0x7fc993627379 (?) (1 samples, 0.34%)</title><rect x="97" y="276" width="4" height="15" fill="rgb(215,135,0)"/><text x="100.00" y="286.50"></text></g><g><title>0x7fc993a858b8 (?) (1 samples, 0.34%)</title><rect x="97" y="292" width="4" height="15" fill="rgb(230,154,22)"/><text x="100.00" y="302.50"></text></g><g><title>0x7fc993a83c7f (?) (1 samples, 0.34%)</title><rect x="97" y="308" width="4" height="15" fill="rgb(214,140,5)"/><text x="100.00" y="318.50"></text></g><g><title>0x7fc993a9699c (?) (1 samples, 0.34%)</title><rect x="97" y="324" width="4" height="15" fill="rgb(243,100,31)"/><text x="100.00" y="334.50"></text></g><g><title>0x7fc9937b419e (?) (1 samples, 0.34%)</title><rect x="97" y="340" width="4" height="15" fill="rgb(248,55,6)"/><text x="100.00" y="350.50"></text></g><g><title>0x7fc9937b0ec8 (?) (1 samples, 0.34%)</title><rect x="97" y="356" width="4" height="15" fill="rgb(222,176,29)"/><text x="100.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="105" y="356" width="4" height="15" fill="rgb(251,34,41)"/><text x="108.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (70 samples, 23.65%)</title><rect x="109" y="356" width="279" height="15" fill="rgb(206,43,2)"/><text x="112.00" y="366.50">onnxruntime::ml::TreeEnsembleClassifi..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="384" y="372" width="4" height="15" fill="rgb(230,84,44)"/><text x="387.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.66%)</title><rect x="101" y="260" width="291" height="15" fill="rgb(227,35,25)"/><text x="104.00" y="270.50">onnxruntime::InferenceSession::Run (onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.66%)</title><rect x="101" y="276" width="291" height="15" fill="rgb(210,158,41)"/><text x="104.00" y="286.50">onnxruntime::InferenceSession::Run (onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.66%)</title><rect x="101" y="292" width="291" height="15" fill="rgb(217,188,33)"/><text x="104.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.66%)</title><rect x="101" y="308" width="291" height="15" fill="rgb(243,10,22)"/><text x="104.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.66%)</title><rect x="101" y="324" width="291" height="15" fill="rgb(252,5,51)"/><text x="104.00" y="334.50">onnxruntime::SequentialExecutor::Execut..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.66%)</title><rect x="101" y="340" width="291" height="15" fill="rgb(247,157,34)"/><text x="104.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifier..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="388" y="356" width="4" height="15" fill="rgb(241,205,10)"/><text x="391.00" y="366.50"></text></g><g><title>0x7fc9d778a971 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="388" y="372" width="4" height="15" fill="rgb(209,145,29)"/><text x="391.00" y="382.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (77 samples, 26.01%)</title><rect x="97" y="68" width="307" height="15" fill="rgb(227,72,19)"/><text x="100.00" y="78.50">profile_ort (bench_RandomForestClassifier..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (77 samples, 26.01%)</title><rect x="97" y="84" width="307" height="15" fill="rgb(223,145,6)"/><text x="100.00" y="94.50">setup_profile (bench_RandomForestClassifi..</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (77 samples, 26.01%)</title><rect x="97" y="100" width="307" height="15" fill="rgb(222,13,8)"/><text x="100.00" y="110.50">profile (bench_RandomForestClassifier_def..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (77 samples, 26.01%)</title><rect x="97" y="116" width="307" height="15" fill="rgb(218,157,53)"/><text x="100.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (77 samples, 26.01%)</title><rect x="97" y="132" width="307" height="15" fill="rgb(235,142,31)"/><text x="100.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (77 samples, 26.01%)</title><rect x="97" y="148" width="307" height="15" fill="rgb(211,14,2)"/><text x="100.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (77 samples, 26.01%)</title><rect x="97" y="164" width="307" height="15" fill="rgb(244,130,2)"/><text x="100.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (77 samples, 26.01%)</title><rect x="97" y="180" width="307" height="15" fill="rgb(218,89,1)"/><text x="100.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.p..</text></g><g><title>run (onnxruntime/capi/session.py) (77 samples, 26.01%)</title><rect x="97" y="196" width="307" height="15" fill="rgb(215,225,22)"/><text x="100.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 25.68%)</title><rect x="101" y="212" width="303" height="15" fill="rgb(225,59,46)"/><text x="104.00" y="222.50">pybind11::cpp_function::dispatcher (onnx..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 25.68%)</title><rect x="101" y="228" width="303" height="15" fill="rgb(254,86,44)"/><text x="104.00" y="238.50">void pybind11::cpp_function::initialize&lt;..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 25.68%)</title><rect x="101" y="244" width="303" height="15" fill="rgb(234,54,26)"/><text x="104.00" y="254.50">onnxruntime::python::addObjectMethods(py..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="392" y="260" width="12" height="15" fill="rgb(220,128,33)"/><text x="395.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="400" y="276" width="4" height="15" fill="rgb(237,54,33)"/><text x="403.00" y="286.50"></text></g><g><title>0x7fc998428422 (?) (1 samples, 0.34%)</title><rect x="412" y="244" width="4" height="15" fill="rgb(237,199,15)"/><text x="415.00" y="254.50"></text></g><g><title>0x7fc99842e89e (?) (1 samples, 0.34%)</title><rect x="412" y="260" width="4" height="15" fill="rgb(250,145,0)"/><text x="415.00" y="270.50"></text></g><g><title>0x7fc99842e74f (?) (1 samples, 0.34%)</title><rect x="412" y="276" width="4" height="15" fill="rgb(211,79,21)"/><text x="415.00" y="286.50"></text></g><g><title>0x7fc998434a3a (?) (1 samples, 0.34%)</title><rect x="412" y="292" width="4" height="15" fill="rgb(232,178,48)"/><text x="415.00" y="302.50"></text></g><g><title>0x7fc9a1746cfa (?) (1 samples, 0.34%)</title><rect x="412" y="308" width="4" height="15" fill="rgb(217,3,46)"/><text x="415.00" y="318.50"></text></g><g><title>0x7fc9a174fdaa (?) (1 samples, 0.34%)</title><rect x="412" y="324" width="4" height="15" fill="rgb(217,152,31)"/><text x="415.00" y="334.50"></text></g><g><title>0x7fc9a1751d1e (?) (1 samples, 0.34%)</title><rect x="412" y="340" width="4" height="15" fill="rgb(220,39,31)"/><text x="415.00" y="350.50"></text></g><g><title>0x7fc9a1751ea0 (libgomp.so.1.0.0) (1 samples, 0.34%)</title><rect x="416" y="468" width="4" height="15" fill="rgb(217,174,33)"/><text x="419.00" y="478.50"></text></g><g><title>0x7fc9a1751ea9 (libgomp.so.1.0.0) (1 samples, 0.34%)</title><rect x="420" y="468" width="4" height="15" fill="rgb(206,227,19)"/><text x="423.00" y="478.50"></text></g><g><title>0x7fc9a1751eab (libgomp.so.1.0.0) (4 samples, 1.35%)</title><rect x="424" y="468" width="16" height="15" fill="rgb(225,138,34)"/><text x="427.00" y="478.50"></text></g><g><title>0x7fc9a1751ead (libgomp.so.1.0.0) (8 samples, 2.70%)</title><rect x="440" y="468" width="32" height="15" fill="rgb(219,196,25)"/><text x="443.00" y="478.50">0x..</text></g><g><title>0x7fc9a1750ab9 (libgomp.so.1.0.0) (18 samples, 6.08%)</title><rect x="416" y="452" width="72" height="15" fill="rgb(249,14,6)"/><text x="419.00" y="462.50">0x7fc9a1..</text></g><g><title>0x7fc9a1751ee1 (libgomp.so.1.0.0) (4 samples, 1.35%)</title><rect x="472" y="468" width="16" height="15" fill="rgb(218,105,38)"/><text x="475.00" y="478.50"></text></g><g><title>0x7fc9a1751cf0 (libgomp.so.1.0.0) (2 samples, 0.68%)</title><rect x="488" y="484" width="8" height="15" fill="rgb(244,65,32)"/><text x="491.00" y="494.50"></text></g><g><title>0x7fc9a1751cf9 (libgomp.so.1.0.0) (2 samples, 0.68%)</title><rect x="496" y="484" width="8" height="15" fill="rgb(250,90,13)"/><text x="499.00" y="494.50"></text></g><g><title>0x7fc9a1751cfb (libgomp.so.1.0.0) (8 samples, 2.70%)</title><rect x="504" y="484" width="32" height="15" fill="rgb(240,151,48)"/><text x="507.00" y="494.50">0x..</text></g><g><title>0x7fc9a1751cfd (libgomp.so.1.0.0) (2 samples, 0.68%)</title><rect x="536" y="484" width="8" height="15" fill="rgb(250,48,17)"/><text x="539.00" y="494.50"></text></g><g><title>0x7fc9a174fdaa (libgomp.so.1.0.0) (15 samples, 5.07%)</title><rect x="488" y="468" width="60" height="15" fill="rgb(252,188,9)"/><text x="491.00" y="478.50">0x7fc9..</text></g><g><title>0x7fc9a1751d1e (libgomp.so.1.0.0) (1 samples, 0.34%)</title><rect x="544" y="484" width="4" height="15" fill="rgb(221,155,8)"/><text x="547.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_end (stl_tree.h) (1 samples, 0.34%)</title><rect x="592" y="532" width="4" height="15" fill="rgb(234,46,14)"/><text x="595.00" y="542.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h) (11 samples, 3.72%)</title><rect x="592" y="500" width="43" height="15" fill="rgb(221,159,8)"/><text x="595.00" y="510.50">std:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h) (11 samples, 3.72%)</title><rect x="592" y="516" width="43" height="15" fill="rgb(221,163,49)"/><text x="595.00" y="526.50">std:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h) (10 samples, 3.38%)</title><rect x="596" y="532" width="39" height="15" fill="rgb(241,189,54)"/><text x="599.00" y="542.50">std..</text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h) (2 samples, 0.68%)</title><rect x="635" y="500" width="8" height="15" fill="rgb(238,52,28)"/><text x="638.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.34%)</title><rect x="643" y="500" width="4" height="15" fill="rgb(228,197,41)"/><text x="646.00" y="510.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (62 samples, 20.95%)</title><rect x="404" y="100" width="247" height="15" fill="rgb(213,79,27)"/><text x="407.00" y="110.50">profile (bench_RandomForestClass..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (62 samples, 20.95%)</title><rect x="404" y="116" width="247" height="15" fill="rgb(242,29,31)"/><text x="407.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (62 samples, 20.95%)</title><rect x="404" y="132" width="247" height="15" fill="rgb(222,133,4)"/><text x="407.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (62 samples, 20.95%)</title><rect x="404" y="148" width="247" height="15" fill="rgb(230,183,37)"/><text x="407.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (62 samples, 20.95%)</title><rect x="404" y="164" width="247" height="15" fill="rgb(222,190,26)"/><text x="407.00" y="174.50">_run_sequence_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (62 samples, 20.95%)</title><rect x="404" y="180" width="247" height="15" fill="rgb(249,117,29)"/><text x="407.00" y="190.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (61 samples, 20.61%)</title><rect x="408" y="196" width="243" height="15" fill="rgb(240,134,14)"/><text x="411.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (61 samples, 20.61%)</title><rect x="408" y="212" width="243" height="15" fill="rgb(244,93,13)"/><text x="411.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (60 samples, 20.27%)</title><rect x="412" y="228" width="239" height="15" fill="rgb(238,216,0)"/><text x="415.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (59 samples, 19.93%)</title><rect x="416" y="244" width="235" height="15" fill="rgb(236,51,27)"/><text x="419.00" y="254.50">pybind11::cpp_function::dispatc..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (59 samples, 19.93%)</title><rect x="416" y="260" width="235" height="15" fill="rgb(237,30,11)"/><text x="419.00" y="270.50">void pybind11::cpp_function::in..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (59 samples, 19.93%)</title><rect x="416" y="276" width="235" height="15" fill="rgb(241,183,46)"/><text x="419.00" y="286.50">void pybind11::cpp_function::in..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (59 samples, 19.93%)</title><rect x="416" y="292" width="235" height="15" fill="rgb(240,149,19)"/><text x="419.00" y="302.50">pybind11::detail::argument_load..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (59 samples, 19.93%)</title><rect x="416" y="308" width="235" height="15" fill="rgb(218,66,39)"/><text x="419.00" y="318.50">pybind11::detail::argument_load..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (59 samples, 19.93%)</title><rect x="416" y="324" width="235" height="15" fill="rgb(235,200,28)"/><text x="419.00" y="334.50">pybind11::cpp_function::cpp_fun..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (59 samples, 19.93%)</title><rect x="416" y="340" width="235" height="15" fill="rgb(233,89,7)"/><text x="419.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~..</text></g><g><title>pybind11::array::~array (numpy.h) (59 samples, 19.93%)</title><rect x="416" y="356" width="235" height="15" fill="rgb(213,120,33)"/><text x="419.00" y="366.50">pybind11::array::~array (numpy...</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (59 samples, 19.93%)</title><rect x="416" y="372" width="235" height="15" fill="rgb(252,168,31)"/><text x="419.00" y="382.50">pybind11::buffer::~buffer (pyty..</text></g><g><title>pybind11::object::~object (pytypes.h) (59 samples, 19.93%)</title><rect x="416" y="388" width="235" height="15" fill="rgb(233,56,23)"/><text x="419.00" y="398.50">pybind11::object::~object (pyty..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (59 samples, 19.93%)</title><rect x="416" y="404" width="235" height="15" fill="rgb(221,158,49)"/><text x="419.00" y="414.50">pybind11::handle::dec_ref &amp; (py..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (59 samples, 19.93%)</title><rect x="416" y="420" width="235" height="15" fill="rgb(240,117,5)"/><text x="419.00" y="430.50">RuntimeTreeEnsembleClassifier&lt;f..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (59 samples, 19.93%)</title><rect x="416" y="436" width="235" height="15" fill="rgb(250,64,9)"/><text x="419.00" y="446.50">pybind11::gil_scoped_release::~..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (41 samples, 13.85%)</title><rect x="488" y="452" width="163" height="15" fill="rgb(224,64,53)"/><text x="491.00" y="462.50">GOMP_parallel (libgom..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (26 samples, 8.78%)</title><rect x="548" y="468" width="103" height="15" fill="rgb(212,224,32)"/><text x="551.00" y="478.50">RuntimeTreeE..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (26 samples, 8.78%)</title><rect x="548" y="484" width="103" height="15" fill="rgb(207,36,28)"/><text x="551.00" y="494.50">RuntimeTreeE..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (1 samples, 0.34%)</title><rect x="647" y="500" width="4" height="15" fill="rgb(233,201,45)"/><text x="650.00" y="510.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (63 samples, 21.28%)</title><rect x="404" y="68" width="251" height="15" fill="rgb(239,56,7)"/><text x="407.00" y="78.50">profile_pyrt (bench_RandomForestC..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (63 samples, 21.28%)</title><rect x="404" y="84" width="251" height="15" fill="rgb(217,207,37)"/><text x="407.00" y="94.50">setup_profile (bench_RandomForest..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="651" y="100" width="4" height="15" fill="rgb(210,20,18)"/><text x="654.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="651" y="116" width="4" height="15" fill="rgb(245,195,28)"/><text x="654.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="651" y="132" width="4" height="15" fill="rgb(208,124,34)"/><text x="654.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="651" y="148" width="4" height="15" fill="rgb(242,212,21)"/><text x="654.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="651" y="164" width="4" height="15" fill="rgb(229,160,3)"/><text x="654.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="651" y="180" width="4" height="15" fill="rgb(240,84,31)"/><text x="654.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.34%)</title><rect x="651" y="196" width="4" height="15" fill="rgb(247,218,30)"/><text x="654.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.34%)</title><rect x="651" y="212" width="4" height="15" fill="rgb(241,102,36)"/><text x="654.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.34%)</title><rect x="651" y="228" width="4" height="15" fill="rgb(226,21,34)"/><text x="654.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="651" y="244" width="4" height="15" fill="rgb(245,224,5)"/><text x="654.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.34%)</title><rect x="651" y="260" width="4" height="15" fill="rgb(215,145,6)"/><text x="654.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="651" y="276" width="4" height="15" fill="rgb(237,63,19)"/><text x="654.00" y="286.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.34%)</title><rect x="651" y="292" width="4" height="15" fill="rgb(251,52,3)"/><text x="654.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.34%)</title><rect x="651" y="308" width="4" height="15" fill="rgb(231,43,34)"/><text x="654.00" y="318.50"></text></g><g><title>0x7fc9c5ad47c9 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="651" y="324" width="4" height="15" fill="rgb(252,46,8)"/><text x="654.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="651" y="340" width="4" height="15" fill="rgb(238,202,18)"/><text x="654.00" y="350.50"></text></g><g><title>_initialize_backend (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="655" y="180" width="4" height="15" fill="rgb(231,165,36)"/><text x="658.00" y="190.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.34%)</title><rect x="703" y="228" width="4" height="15" fill="rgb(227,28,42)"/><text x="706.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (7 samples, 2.36%)</title><rect x="687" y="196" width="28" height="15" fill="rgb(229,126,19)"/><text x="690.00" y="206.50">&lt;..</text></g><g><title>delayed (joblib/parallel.py) (4 samples, 1.35%)</title><rect x="699" y="212" width="16" height="15" fill="rgb(245,134,5)"/><text x="702.00" y="222.50"></text></g><g><title>wraps (functools.py) (2 samples, 0.68%)</title><rect x="707" y="228" width="8" height="15" fill="rgb(209,173,46)"/><text x="710.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.35%)</title><rect x="727" y="228" width="16" height="15" fill="rgb(211,80,49)"/><text x="730.00" y="238.50"></text></g><g><title>0x7fc9d77ab120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="739" y="244" width="4" height="15" fill="rgb(245,92,4)"/><text x="742.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="763" y="292" width="4" height="15" fill="rgb(253,53,14)"/><text x="766.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="763" y="308" width="4" height="15" fill="rgb(219,36,30)"/><text x="766.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="763" y="324" width="4" height="15" fill="rgb(220,173,33)"/><text x="766.00" y="334.50"></text></g><g><title>0x7fc9b11dc2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="775" y="356" width="4" height="15" fill="rgb(231,155,1)"/><text x="778.00" y="366.50"></text></g><g><title>0x7fc9b11c0d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="775" y="372" width="4" height="15" fill="rgb(215,64,13)"/><text x="778.00" y="382.50"></text></g><g><title>0x7fc9b11c0666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="775" y="388" width="4" height="15" fill="rgb(224,22,38)"/><text x="778.00" y="398.50"></text></g><g><title>0x7fc9b11b62fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="775" y="404" width="4" height="15" fill="rgb(238,17,22)"/><text x="778.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.34%)</title><rect x="775" y="420" width="4" height="15" fill="rgb(216,63,32)"/><text x="778.00" y="430.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="775" y="436" width="4" height="15" fill="rgb(250,55,30)"/><text x="778.00" y="446.50"></text></g><g><title>0x7fc9b11dc436 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="779" y="356" width="4" height="15" fill="rgb(220,126,6)"/><text x="782.00" y="366.50"></text></g><g><title>0x7fc9b11dc592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="783" y="356" width="8" height="15" fill="rgb(228,156,43)"/><text x="786.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.68%)</title><rect x="783" y="372" width="8" height="15" fill="rgb(220,113,25)"/><text x="786.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.68%)</title><rect x="783" y="388" width="8" height="15" fill="rgb(222,33,49)"/><text x="786.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.34%)</title><rect x="787" y="404" width="4" height="15" fill="rgb(226,24,21)"/><text x="790.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.34%)</title><rect x="787" y="420" width="4" height="15" fill="rgb(231,80,43)"/><text x="790.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="787" y="436" width="4" height="15" fill="rgb(233,177,54)"/><text x="790.00" y="446.50"></text></g><g><title>0x7fc9b11dc690 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="791" y="356" width="4" height="15" fill="rgb(206,132,2)"/><text x="794.00" y="366.50"></text></g><g><title>0x7fc9b11dc69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="795" y="356" width="4" height="15" fill="rgb(220,158,41)"/><text x="798.00" y="366.50"></text></g><g><title>0x7fc9b11dc6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="799" y="356" width="8" height="15" fill="rgb(247,51,8)"/><text x="802.00" y="366.50"></text></g><g><title>0x7fc9b11dc6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="807" y="356" width="8" height="15" fill="rgb(231,63,48)"/><text x="810.00" y="366.50"></text></g><g><title>0x7fc9b11dc6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="815" y="356" width="4" height="15" fill="rgb(207,173,39)"/><text x="818.00" y="366.50"></text></g><g><title>0x7fc9b11dc6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="819" y="356" width="4" height="15" fill="rgb(250,49,0)"/><text x="822.00" y="366.50"></text></g><g><title>0x7fc9b11cdfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.39%)</title><rect x="775" y="324" width="52" height="15" fill="rgb(231,207,40)"/><text x="778.00" y="334.50">0x7fc..</text></g><g><title>0x7fc9b11dd405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.39%)</title><rect x="775" y="340" width="52" height="15" fill="rgb(209,141,34)"/><text x="778.00" y="350.50">0x7fc..</text></g><g><title>0x7fc9b11dc7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="823" y="356" width="4" height="15" fill="rgb(246,123,36)"/><text x="826.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.34%)</title><rect x="831" y="356" width="4" height="15" fill="rgb(229,13,43)"/><text x="834.00" y="366.50"></text></g><g><title>0x7fc9d69acd20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="831" y="372" width="4" height="15" fill="rgb(230,68,27)"/><text x="834.00" y="382.50"></text></g><g><title>0x7fc9b11ce05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.01%)</title><rect x="827" y="324" width="12" height="15" fill="rgb(237,10,20)"/><text x="830.00" y="334.50"></text></g><g><title>array_take (methods.c) (3 samples, 1.01%)</title><rect x="827" y="340" width="12" height="15" fill="rgb(217,163,19)"/><text x="830.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.34%)</title><rect x="835" y="356" width="4" height="15" fill="rgb(254,26,14)"/><text x="838.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.34%)</title><rect x="835" y="372" width="4" height="15" fill="rgb(247,114,34)"/><text x="838.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.34%)</title><rect x="835" y="388" width="4" height="15" fill="rgb(214,213,25)"/><text x="838.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="835" y="404" width="4" height="15" fill="rgb(211,76,45)"/><text x="838.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.34%)</title><rect x="835" y="420" width="4" height="15" fill="rgb(228,178,4)"/><text x="838.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="835" y="436" width="4" height="15" fill="rgb(227,118,10)"/><text x="838.00" y="446.50"></text></g><g><title>0x7fc9b11ce328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="839" y="324" width="4" height="15" fill="rgb(215,198,52)"/><text x="842.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.34%)</title><rect x="839" y="340" width="4" height="15" fill="rgb(216,171,23)"/><text x="842.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.34%)</title><rect x="839" y="356" width="4" height="15" fill="rgb(221,32,45)"/><text x="842.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.34%)</title><rect x="839" y="372" width="4" height="15" fill="rgb(223,168,27)"/><text x="842.00" y="382.50"></text></g><g><title>0x7fc9b11ced2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 6.08%)</title><rect x="775" y="308" width="72" height="15" fill="rgb(254,186,23)"/><text x="778.00" y="318.50">0x7fc9b1..</text></g><g><title>0x7fc9b11ce5e8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="843" y="324" width="4" height="15" fill="rgb(231,208,54)"/><text x="846.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.68%)</title><rect x="847" y="308" width="8" height="15" fill="rgb(219,206,37)"/><text x="850.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.68%)</title><rect x="847" y="324" width="8" height="15" fill="rgb(223,73,17)"/><text x="850.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.68%)</title><rect x="847" y="340" width="8" height="15" fill="rgb(243,129,32)"/><text x="850.00" y="350.50"></text></g><g><title>array_richcompare (arrayobject.c) (2 samples, 0.68%)</title><rect x="855" y="308" width="8" height="15" fill="rgb(220,219,52)"/><text x="858.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.68%)</title><rect x="855" y="324" width="8" height="15" fill="rgb(244,148,20)"/><text x="858.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.68%)</title><rect x="855" y="340" width="8" height="15" fill="rgb(215,217,31)"/><text x="858.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.68%)</title><rect x="855" y="356" width="8" height="15" fill="rgb(205,24,17)"/><text x="858.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.68%)</title><rect x="855" y="372" width="8" height="15" fill="rgb(206,223,25)"/><text x="858.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (2 samples, 0.68%)</title><rect x="855" y="388" width="8" height="15" fill="rgb(245,50,12)"/><text x="858.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (2 samples, 0.68%)</title><rect x="855" y="404" width="8" height="15" fill="rgb(206,171,27)"/><text x="858.00" y="414.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="859" y="420" width="4" height="15" fill="rgb(214,102,29)"/><text x="862.00" y="430.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.68%)</title><rect x="863" y="308" width="8" height="15" fill="rgb(241,45,19)"/><text x="866.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.68%)</title><rect x="863" y="324" width="8" height="15" fill="rgb(238,137,17)"/><text x="866.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.34%)</title><rect x="867" y="340" width="4" height="15" fill="rgb(220,194,3)"/><text x="870.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="867" y="356" width="4" height="15" fill="rgb(235,130,40)"/><text x="870.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="867" y="372" width="4" height="15" fill="rgb(223,214,5)"/><text x="870.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.34%)</title><rect x="867" y="388" width="4" height="15" fill="rgb(212,26,15)"/><text x="870.00" y="398.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.34%)</title><rect x="867" y="404" width="4" height="15" fill="rgb(221,207,0)"/><text x="870.00" y="414.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.34%)</title><rect x="875" y="388" width="4" height="15" fill="rgb(219,135,53)"/><text x="878.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.68%)</title><rect x="887" y="420" width="8" height="15" fill="rgb(237,2,21)"/><text x="890.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.34%)</title><rect x="891" y="436" width="4" height="15" fill="rgb(216,27,32)"/><text x="894.00" y="446.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.34%)</title><rect x="895" y="420" width="3" height="15" fill="rgb(215,58,40)"/><text x="898.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.34%)</title><rect x="898" y="420" width="4" height="15" fill="rgb(220,122,4)"/><text x="901.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="898" y="436" width="4" height="15" fill="rgb(208,72,43)"/><text x="901.00" y="446.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="898" y="452" width="4" height="15" fill="rgb(210,20,31)"/><text x="901.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src) (9 samples, 3.04%)</title><rect x="910" y="436" width="36" height="15" fill="rgb(205,21,41)"/><text x="913.00" y="446.50">DOU..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 1.35%)</title><rect x="930" y="452" width="16" height="15" fill="rgb(226,201,23)"/><text x="933.00" y="462.50"></text></g><g><title>array_sum (methods.c) (21 samples, 7.09%)</title><rect x="871" y="308" width="83" height="15" fill="rgb(217,7,49)"/><text x="874.00" y="318.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c) (21 samples, 7.09%)</title><rect x="871" y="324" width="83" height="15" fill="rgb(219,220,43)"/><text x="874.00" y="334.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py) (21 samples, 7.09%)</title><rect x="871" y="340" width="83" height="15" fill="rgb(229,33,13)"/><text x="874.00" y="350.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c) (20 samples, 6.76%)</title><rect x="875" y="356" width="79" height="15" fill="rgb(254,222,34)"/><text x="878.00" y="366.50">ufunc_red..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (20 samples, 6.76%)</title><rect x="875" y="372" width="79" height="15" fill="rgb(216,45,45)"/><text x="878.00" y="382.50">PyUFunc_G..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (19 samples, 6.42%)</title><rect x="879" y="388" width="75" height="15" fill="rgb(232,51,20)"/><text x="882.00" y="398.50">PyUFunc_..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (18 samples, 6.08%)</title><rect x="883" y="404" width="71" height="15" fill="rgb(210,216,17)"/><text x="886.00" y="414.50">PyUFunc_..</text></g><g><title>reduce_loop (ufunc_object.c) (13 samples, 4.39%)</title><rect x="902" y="420" width="52" height="15" fill="rgb(235,188,1)"/><text x="905.00" y="430.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.68%)</title><rect x="946" y="436" width="8" height="15" fill="rgb(208,178,37)"/><text x="949.00" y="446.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.69%)</title><rect x="954" y="324" width="20" height="15" fill="rgb(234,34,9)"/><text x="957.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.34%)</title><rect x="970" y="340" width="4" height="15" fill="rgb(254,193,38)"/><text x="973.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 2.03%)</title><rect x="954" y="308" width="24" height="15" fill="rgb(252,106,51)"/><text x="957.00" y="318.50">c..</text></g><g><title>mmap64 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="974" y="324" width="4" height="15" fill="rgb(217,208,1)"/><text x="977.00" y="334.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (4 samples, 1.35%)</title><rect x="978" y="372" width="16" height="15" fill="rgb(245,101,10)"/><text x="981.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (4 samples, 1.35%)</title><rect x="978" y="388" width="16" height="15" fill="rgb(208,226,29)"/><text x="981.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (4 samples, 1.35%)</title><rect x="978" y="404" width="16" height="15" fill="rgb(205,44,34)"/><text x="981.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 1.35%)</title><rect x="978" y="420" width="16" height="15" fill="rgb(227,134,36)"/><text x="981.00" y="430.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.34%)</title><rect x="994" y="372" width="4" height="15" fill="rgb(244,4,53)"/><text x="997.00" y="382.50"></text></g><g><title>0x7fc9d778a902 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="994" y="388" width="4" height="15" fill="rgb(245,62,11)"/><text x="997.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.70%)</title><rect x="978" y="340" width="32" height="15" fill="rgb(224,36,29)"/><text x="981.00" y="350.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 2.70%)</title><rect x="978" y="356" width="32" height="15" fill="rgb(241,55,47)"/><text x="981.00" y="366.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 1.01%)</title><rect x="998" y="372" width="12" height="15" fill="rgb(205,175,15)"/><text x="1001.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 1.01%)</title><rect x="998" y="388" width="12" height="15" fill="rgb(239,227,3)"/><text x="1001.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 1.01%)</title><rect x="998" y="404" width="12" height="15" fill="rgb(224,161,4)"/><text x="1001.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (62 samples, 20.95%)</title><rect x="767" y="292" width="247" height="15" fill="rgb(235,70,49)"/><text x="770.00" y="302.50">predict_proba (sklearn/tree/_cla..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 3.04%)</title><rect x="978" y="308" width="36" height="15" fill="rgb(241,30,31)"/><text x="981.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 3.04%)</title><rect x="978" y="324" width="36" height="15" fill="rgb(232,138,17)"/><text x="981.00" y="334.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1010" y="340" width="4" height="15" fill="rgb(232,78,24)"/><text x="1013.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="1014" y="308" width="4" height="15" fill="rgb(213,106,40)"/><text x="1017.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="1014" y="324" width="4" height="15" fill="rgb(252,46,2)"/><text x="1017.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1018" y="388" width="4" height="15" fill="rgb(228,193,39)"/><text x="1021.00" y="398.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.68%)</title><rect x="1018" y="372" width="8" height="15" fill="rgb(208,178,44)"/><text x="1021.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1022" y="388" width="4" height="15" fill="rgb(245,54,17)"/><text x="1025.00" y="398.50"></text></g><g><title>0x7fc9d77427a5 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1022" y="404" width="4" height="15" fill="rgb(246,59,34)"/><text x="1025.00" y="414.50"></text></g><g><title>0x7fc9d77427c2 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1022" y="420" width="4" height="15" fill="rgb(223,129,54)"/><text x="1025.00" y="430.50"></text></g><g><title>0x7fc9d7742a6f (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1022" y="436" width="4" height="15" fill="rgb(236,87,19)"/><text x="1025.00" y="446.50"></text></g><g><title>0x7fc9d77aad50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1022" y="452" width="4" height="15" fill="rgb(251,52,17)"/><text x="1025.00" y="462.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 1.01%)</title><rect x="1018" y="340" width="12" height="15" fill="rgb(236,80,14)"/><text x="1021.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 1.01%)</title><rect x="1018" y="356" width="12" height="15" fill="rgb(227,28,33)"/><text x="1021.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1026" y="372" width="4" height="15" fill="rgb(219,163,51)"/><text x="1029.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1026" y="388" width="4" height="15" fill="rgb(228,195,4)"/><text x="1029.00" y="398.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="1026" y="404" width="4" height="15" fill="rgb(227,125,17)"/><text x="1029.00" y="414.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.34%)</title><rect x="1030" y="404" width="4" height="15" fill="rgb(250,187,2)"/><text x="1033.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.69%)</title><rect x="1018" y="324" width="20" height="15" fill="rgb(213,41,31)"/><text x="1021.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.68%)</title><rect x="1030" y="340" width="8" height="15" fill="rgb(234,38,32)"/><text x="1033.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.68%)</title><rect x="1030" y="356" width="8" height="15" fill="rgb(232,146,12)"/><text x="1033.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.68%)</title><rect x="1030" y="372" width="8" height="15" fill="rgb(251,147,48)"/><text x="1033.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.68%)</title><rect x="1030" y="388" width="8" height="15" fill="rgb(210,136,21)"/><text x="1033.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.34%)</title><rect x="1034" y="404" width="4" height="15" fill="rgb(224,112,48)"/><text x="1037.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (72 samples, 24.32%)</title><rect x="755" y="276" width="287" height="15" fill="rgb(229,2,10)"/><text x="758.00" y="286.50">_accumulate_prediction (sklearn/ensemb..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.36%)</title><rect x="1014" y="292" width="28" height="15" fill="rgb(223,152,13)"/><text x="1017.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.03%)</title><rect x="1018" y="308" width="24" height="15" fill="rgb(250,100,52)"/><text x="1021.00" y="318.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1038" y="324" width="4" height="15" fill="rgb(240,198,3)"/><text x="1041.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (74 samples, 25.00%)</title><rect x="751" y="260" width="295" height="15" fill="rgb(254,87,0)"/><text x="754.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="1042" y="276" width="4" height="15" fill="rgb(211,13,12)"/><text x="1045.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="1042" y="292" width="4" height="15" fill="rgb(214,66,19)"/><text x="1045.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="1042" y="308" width="4" height="15" fill="rgb(236,44,43)"/><text x="1045.00" y="318.50"></text></g><g><title>__exit__ (joblib/parallel.py) (6 samples, 2.03%)</title><rect x="1046" y="260" width="24" height="15" fill="rgb(237,188,44)"/><text x="1049.00" y="270.50">_..</text></g><g><title>unregister (joblib/parallel.py) (4 samples, 1.35%)</title><rect x="1054" y="276" width="16" height="15" fill="rgb(220,142,50)"/><text x="1057.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (92 samples, 31.08%)</title><rect x="715" y="196" width="367" height="15" fill="rgb(215,87,13)"/><text x="718.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (90 samples, 30.41%)</title><rect x="723" y="212" width="359" height="15" fill="rgb(219,119,29)"/><text x="726.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (85 samples, 28.72%)</title><rect x="743" y="228" width="339" height="15" fill="rgb(231,175,25)"/><text x="746.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (85 samples, 28.72%)</title><rect x="743" y="244" width="339" height="15" fill="rgb(232,48,26)"/><text x="746.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 1.01%)</title><rect x="1070" y="260" width="12" height="15" fill="rgb(240,198,40)"/><text x="1073.00" y="270.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.34%)</title><rect x="1098" y="212" width="4" height="15" fill="rgb(240,185,42)"/><text x="1101.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.34%)</title><rect x="1102" y="212" width="4" height="15" fill="rgb(230,132,10)"/><text x="1105.00" y="222.50"></text></g><g><title>_get (queue.py) (1 samples, 0.34%)</title><rect x="1106" y="212" width="4" height="15" fill="rgb(239,51,42)"/><text x="1109.00" y="222.50"></text></g><g><title>get (queue.py) (10 samples, 3.38%)</title><rect x="1082" y="196" width="40" height="15" fill="rgb(213,69,6)"/><text x="1085.00" y="206.50">get..</text></g><g><title>notify (threading.py) (3 samples, 1.01%)</title><rect x="1110" y="212" width="12" height="15" fill="rgb(211,91,51)"/><text x="1113.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.34%)</title><rect x="1118" y="228" width="4" height="15" fill="rgb(252,76,18)"/><text x="1121.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (10 samples, 3.38%)</title><rect x="1126" y="212" width="40" height="15" fill="rgb(246,71,28)"/><text x="1129.00" y="222.50">get..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.35%)</title><rect x="1150" y="228" width="16" height="15" fill="rgb(224,113,40)"/><text x="1153.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (12 samples, 4.05%)</title><rect x="1122" y="196" width="48" height="15" fill="rgb(243,180,36)"/><text x="1125.00" y="206.50">get_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1166" y="212" width="4" height="15" fill="rgb(216,170,38)"/><text x="1169.00" y="222.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.34%)</title><rect x="1166" y="228" width="4" height="15" fill="rgb(254,166,33)"/><text x="1169.00" y="238.50"></text></g><g><title>_put (queue.py) (1 samples, 0.34%)</title><rect x="1170" y="212" width="4" height="15" fill="rgb(218,91,22)"/><text x="1173.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (130 samples, 43.92%)</title><rect x="659" y="180" width="519" height="15" fill="rgb(221,195,28)"/><text x="662.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (2 samples, 0.68%)</title><rect x="1170" y="196" width="8" height="15" fill="rgb(237,161,20)"/><text x="1173.00" y="206.50"></text></g><g><title>notify (threading.py) (1 samples, 0.34%)</title><rect x="1174" y="212" width="4" height="15" fill="rgb(231,142,16)"/><text x="1177.00" y="222.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (132 samples, 44.59%)</title><rect x="655" y="68" width="527" height="15" fill="rgb(238,11,5)"/><text x="658.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_...</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (132 samples, 44.59%)</title><rect x="655" y="84" width="527" height="15" fill="rgb(208,146,37)"/><text x="658.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float..</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (132 samples, 44.59%)</title><rect x="655" y="100" width="527" height="15" fill="rgb(229,155,37)"/><text x="658.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 44.59%)</title><rect x="655" y="116" width="527" height="15" fill="rgb(210,66,48)"/><text x="658.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 44.59%)</title><rect x="655" y="132" width="527" height="15" fill="rgb(210,173,2)"/><text x="658.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (132 samples, 44.59%)</title><rect x="655" y="148" width="527" height="15" fill="rgb(246,48,36)"/><text x="658.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>__call__ (joblib/parallel.py) (132 samples, 44.59%)</title><rect x="655" y="164" width="527" height="15" fill="rgb(228,55,27)"/><text x="658.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="1178" y="180" width="4" height="15" fill="rgb(254,111,5)"/><text x="1181.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.34%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(249,27,21)"/><text x="1185.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.34%)</title><rect x="1182" y="148" width="4" height="15" fill="rgb(215,20,3)"/><text x="1185.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.34%)</title><rect x="1182" y="164" width="4" height="15" fill="rgb(206,173,0)"/><text x="1185.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.34%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(231,133,22)"/><text x="1185.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.34%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(210,29,20)"/><text x="1185.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/base.py) (1 samples, 0.34%)</title><rect x="1182" y="212" width="4" height="15" fill="rgb(234,21,49)"/><text x="1185.00" y="222.50"></text></g><g><title>all (296 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,54,26)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (296 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(248,149,33)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1000_5_12_float_.py) (2 samples, 0.68%)</title><rect x="1182" y="68" width="8" height="15" fill="rgb(227,185,16)"/><text x="1185.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (2 samples, 0.68%)</title><rect x="1182" y="84" width="8" height="15" fill="rgb(215,179,1)"/><text x="1185.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.68%)</title><rect x="1182" y="100" width="8" height="15" fill="rgb(233,77,39)"/><text x="1185.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (2 samples, 0.68%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(251,6,3)"/><text x="1185.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(244,162,7)"/><text x="1189.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(236,28,24)"/><text x="1189.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(234,227,49)"/><text x="1189.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (1 samples, 0.34%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(217,164,51)"/><text x="1189.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.34%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(227,229,21)"/><text x="1189.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(246,7,8)"/><text x="1189.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(233,185,52)"/><text x="1189.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (1 samples, 0.34%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(216,88,45)"/><text x="1189.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.34%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(233,109,0)"/><text x="1189.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.34%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(241,206,8)"/><text x="1189.00" y="286.50"></text></g><g><title>check_classification_targets (sklearn/utils/multiclass.py) (1 samples, 0.34%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(253,47,12)"/><text x="1189.00" y="302.50"></text></g><g><title>type_of_target (sklearn/utils/multiclass.py) (1 samples, 0.34%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(205,26,1)"/><text x="1189.00" y="318.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.34%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(236,23,30)"/><text x="1189.00" y="334.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.34%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(254,205,29)"/><text x="1189.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(214,116,12)"/><text x="1189.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.34%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(220,128,4)"/><text x="1189.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(218,195,8)"/><text x="1189.00" y="398.50"></text></g></g></svg>