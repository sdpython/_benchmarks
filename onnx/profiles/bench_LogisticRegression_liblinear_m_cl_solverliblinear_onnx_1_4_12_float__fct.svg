<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>_compile (tokenize.py) (1 samples, 0.34%)</title><rect x="10" y="1252" width="3" height="15" fill="rgb(233,48,47)"/><text x="13.00" y="1262.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="10" y="1268" width="3" height="15" fill="rgb(222,181,54)"/><text x="13.00" y="1278.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="10" y="1284" width="3" height="15" fill="rgb(218,23,51)"/><text x="13.00" y="1294.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.68%)</title><rect x="10" y="1236" width="7" height="15" fill="rgb(243,133,19)"/><text x="13.00" y="1246.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.34%)</title><rect x="13" y="1252" width="4" height="15" fill="rgb(216,90,12)"/><text x="16.00" y="1262.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="13" y="1268" width="4" height="15" fill="rgb(254,213,4)"/><text x="16.00" y="1278.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="13" y="1284" width="4" height="15" fill="rgb(245,27,36)"/><text x="16.00" y="1294.50"></text></g><g><title>0x7f42fcc342f8 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="13" y="1300" width="4" height="15" fill="rgb(211,177,28)"/><text x="16.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="980" width="11" height="15" fill="rgb(216,149,51)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="996" width="11" height="15" fill="rgb(219,115,54)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="1012" width="11" height="15" fill="rgb(220,92,45)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="1028" width="11" height="15" fill="rgb(240,227,7)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="1044" width="11" height="15" fill="rgb(220,30,4)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (3 samples, 1.01%)</title><rect x="10" y="1060" width="11" height="15" fill="rgb(245,107,1)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="1076" width="11" height="15" fill="rgb(219,16,22)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="1092" width="11" height="15" fill="rgb(227,81,0)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="1108" width="11" height="15" fill="rgb(226,135,25)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="1124" width="11" height="15" fill="rgb(221,55,43)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="1140" width="11" height="15" fill="rgb(230,22,8)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (3 samples, 1.01%)</title><rect x="10" y="1156" width="11" height="15" fill="rgb(220,35,7)"/><text x="13.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (3 samples, 1.01%)</title><rect x="10" y="1172" width="11" height="15" fill="rgb(229,64,17)"/><text x="13.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (3 samples, 1.01%)</title><rect x="10" y="1188" width="11" height="15" fill="rgb(240,25,7)"/><text x="13.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (3 samples, 1.01%)</title><rect x="10" y="1204" width="11" height="15" fill="rgb(238,137,36)"/><text x="13.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (3 samples, 1.01%)</title><rect x="10" y="1220" width="11" height="15" fill="rgb(207,113,14)"/><text x="13.00" y="1230.50"></text></g><g><title>tokeneater (inspect.py) (1 samples, 0.34%)</title><rect x="17" y="1236" width="4" height="15" fill="rgb(249,33,24)"/><text x="20.00" y="1246.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.35%)</title><rect x="10" y="628" width="15" height="15" fill="rgb(238,178,51)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="644" width="15" height="15" fill="rgb(254,41,54)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="660" width="15" height="15" fill="rgb(225,169,35)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="676" width="15" height="15" fill="rgb(252,128,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="10" y="692" width="15" height="15" fill="rgb(205,70,37)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="708" width="15" height="15" fill="rgb(210,166,28)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.35%)</title><rect x="10" y="724" width="15" height="15" fill="rgb(207,171,19)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="740" width="15" height="15" fill="rgb(219,196,9)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="756" width="15" height="15" fill="rgb(243,223,16)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="772" width="15" height="15" fill="rgb(251,37,41)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="788" width="15" height="15" fill="rgb(212,117,50)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="804" width="15" height="15" fill="rgb(242,77,4)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="820" width="15" height="15" fill="rgb(205,87,38)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="10" y="836" width="15" height="15" fill="rgb(244,118,39)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="852" width="15" height="15" fill="rgb(214,186,15)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.35%)</title><rect x="10" y="868" width="15" height="15" fill="rgb(236,42,3)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="884" width="15" height="15" fill="rgb(247,85,39)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="900" width="15" height="15" fill="rgb(228,167,44)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="916" width="15" height="15" fill="rgb(214,208,6)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="10" y="932" width="15" height="15" fill="rgb(237,27,37)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="10" y="948" width="15" height="15" fill="rgb(228,66,20)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.35%)</title><rect x="10" y="964" width="15" height="15" fill="rgb(229,45,45)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(234,212,27)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(218,74,24)"/><text x="24.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(236,43,30)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(216,170,46)"/><text x="24.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1044" width="4" height="15" fill="rgb(210,66,40)"/><text x="24.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="1060" width="4" height="15" fill="rgb(244,164,49)"/><text x="24.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1076" width="4" height="15" fill="rgb(248,210,12)"/><text x="24.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.34%)</title><rect x="21" y="1092" width="4" height="15" fill="rgb(231,46,34)"/><text x="24.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1108" width="4" height="15" fill="rgb(230,52,9)"/><text x="24.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1124" width="4" height="15" fill="rgb(238,143,30)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1140" width="4" height="15" fill="rgb(254,59,46)"/><text x="24.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1156" width="4" height="15" fill="rgb(219,104,8)"/><text x="24.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1172" width="4" height="15" fill="rgb(244,133,4)"/><text x="24.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="1188" width="4" height="15" fill="rgb(206,42,48)"/><text x="24.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1204" width="4" height="15" fill="rgb(245,177,9)"/><text x="24.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.34%)</title><rect x="21" y="1220" width="4" height="15" fill="rgb(248,116,2)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1236" width="4" height="15" fill="rgb(218,11,39)"/><text x="24.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1252" width="4" height="15" fill="rgb(249,170,31)"/><text x="24.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1268" width="4" height="15" fill="rgb(235,192,54)"/><text x="24.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="1284" width="4" height="15" fill="rgb(254,131,2)"/><text x="24.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1300" width="4" height="15" fill="rgb(243,209,44)"/><text x="24.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="21" y="1316" width="4" height="15" fill="rgb(254,160,31)"/><text x="24.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="21" y="1332" width="4" height="15" fill="rgb(224,19,0)"/><text x="24.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="21" y="1348" width="4" height="15" fill="rgb(240,23,18)"/><text x="24.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.34%)</title><rect x="21" y="1364" width="4" height="15" fill="rgb(218,92,49)"/><text x="24.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.34%)</title><rect x="21" y="1380" width="4" height="15" fill="rgb(205,138,24)"/><text x="24.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="21" y="1396" width="4" height="15" fill="rgb(245,145,17)"/><text x="24.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="21" y="1412" width="4" height="15" fill="rgb(216,63,53)"/><text x="24.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.34%)</title><rect x="21" y="1428" width="4" height="15" fill="rgb(254,173,46)"/><text x="24.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.34%)</title><rect x="21" y="1444" width="4" height="15" fill="rgb(208,220,0)"/><text x="24.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.34%)</title><rect x="21" y="1460" width="4" height="15" fill="rgb(228,62,7)"/><text x="24.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.34%)</title><rect x="25" y="1140" width="4" height="15" fill="rgb(232,43,30)"/><text x="28.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="1156" width="4" height="15" fill="rgb(205,14,45)"/><text x="28.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="1172" width="4" height="15" fill="rgb(214,162,36)"/><text x="28.00" y="1182.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="1188" width="4" height="15" fill="rgb(243,135,25)"/><text x="28.00" y="1198.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="25" y="1204" width="4" height="15" fill="rgb(216,192,26)"/><text x="28.00" y="1214.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="25" y="1220" width="4" height="15" fill="rgb(249,96,15)"/><text x="28.00" y="1230.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="25" y="1236" width="4" height="15" fill="rgb(237,26,45)"/><text x="28.00" y="1246.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="25" y="1252" width="4" height="15" fill="rgb(220,222,11)"/><text x="28.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="340" width="23" height="15" fill="rgb(227,91,36)"/><text x="13.00" y="350.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="356" width="23" height="15" fill="rgb(206,219,28)"/><text x="13.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="372" width="23" height="15" fill="rgb(247,189,15)"/><text x="13.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="388" width="23" height="15" fill="rgb(208,168,31)"/><text x="13.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.03%)</title><rect x="10" y="404" width="23" height="15" fill="rgb(232,143,3)"/><text x="13.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="420" width="23" height="15" fill="rgb(205,107,45)"/><text x="13.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 2.03%)</title><rect x="10" y="436" width="23" height="15" fill="rgb(227,219,34)"/><text x="13.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="452" width="23" height="15" fill="rgb(210,83,29)"/><text x="13.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="468" width="23" height="15" fill="rgb(251,167,45)"/><text x="13.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="484" width="23" height="15" fill="rgb(233,143,15)"/><text x="13.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.03%)</title><rect x="10" y="500" width="23" height="15" fill="rgb(216,42,7)"/><text x="13.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="516" width="23" height="15" fill="rgb(220,18,26)"/><text x="13.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 2.03%)</title><rect x="10" y="532" width="23" height="15" fill="rgb(236,204,15)"/><text x="13.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="548" width="23" height="15" fill="rgb(250,49,35)"/><text x="13.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="564" width="23" height="15" fill="rgb(238,76,14)"/><text x="13.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="580" width="23" height="15" fill="rgb(242,148,0)"/><text x="13.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.03%)</title><rect x="10" y="596" width="23" height="15" fill="rgb(229,22,25)"/><text x="13.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="612" width="23" height="15" fill="rgb(227,147,38)"/><text x="13.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.68%)</title><rect x="25" y="628" width="8" height="15" fill="rgb(212,167,4)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="644" width="8" height="15" fill="rgb(224,51,8)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="660" width="8" height="15" fill="rgb(229,24,2)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="676" width="8" height="15" fill="rgb(207,112,1)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="25" y="692" width="8" height="15" fill="rgb(219,2,27)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="708" width="8" height="15" fill="rgb(230,219,25)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.68%)</title><rect x="25" y="724" width="8" height="15" fill="rgb(251,122,2)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="740" width="8" height="15" fill="rgb(248,39,51)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="756" width="8" height="15" fill="rgb(234,77,13)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="772" width="8" height="15" fill="rgb(246,60,42)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="25" y="788" width="8" height="15" fill="rgb(234,178,18)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="804" width="8" height="15" fill="rgb(207,32,30)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.68%)</title><rect x="25" y="820" width="8" height="15" fill="rgb(208,111,2)"/><text x="28.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="836" width="8" height="15" fill="rgb(229,104,9)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="852" width="8" height="15" fill="rgb(247,180,47)"/><text x="28.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="868" width="8" height="15" fill="rgb(209,3,37)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="884" width="8" height="15" fill="rgb(242,187,20)"/><text x="28.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="900" width="8" height="15" fill="rgb(207,7,44)"/><text x="28.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="25" y="916" width="8" height="15" fill="rgb(253,70,16)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="932" width="8" height="15" fill="rgb(211,198,1)"/><text x="28.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.68%)</title><rect x="25" y="948" width="8" height="15" fill="rgb(252,83,0)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="964" width="8" height="15" fill="rgb(207,166,48)"/><text x="28.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="980" width="8" height="15" fill="rgb(221,196,21)"/><text x="28.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="996" width="8" height="15" fill="rgb(223,12,49)"/><text x="28.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="25" y="1012" width="8" height="15" fill="rgb(221,64,45)"/><text x="28.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="1028" width="8" height="15" fill="rgb(214,102,26)"/><text x="28.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.68%)</title><rect x="25" y="1044" width="8" height="15" fill="rgb(244,9,53)"/><text x="28.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="1060" width="8" height="15" fill="rgb(210,67,27)"/><text x="28.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="1076" width="8" height="15" fill="rgb(251,126,24)"/><text x="28.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="1092" width="8" height="15" fill="rgb(205,89,20)"/><text x="28.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="25" y="1108" width="8" height="15" fill="rgb(246,143,10)"/><text x="28.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="25" y="1124" width="8" height="15" fill="rgb(243,109,41)"/><text x="28.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="29" y="1140" width="4" height="15" fill="rgb(221,71,18)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1156" width="4" height="15" fill="rgb(219,79,19)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1172" width="4" height="15" fill="rgb(251,40,26)"/><text x="32.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1188" width="4" height="15" fill="rgb(243,182,33)"/><text x="32.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1204" width="4" height="15" fill="rgb(241,113,5)"/><text x="32.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1220" width="4" height="15" fill="rgb(213,102,36)"/><text x="32.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.34%)</title><rect x="29" y="1236" width="4" height="15" fill="rgb(242,32,8)"/><text x="32.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1252" width="4" height="15" fill="rgb(249,53,4)"/><text x="32.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1268" width="4" height="15" fill="rgb(220,123,34)"/><text x="32.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1284" width="4" height="15" fill="rgb(216,72,47)"/><text x="32.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1300" width="4" height="15" fill="rgb(229,46,6)"/><text x="32.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1316" width="4" height="15" fill="rgb(253,160,25)"/><text x="32.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.34%)</title><rect x="29" y="1332" width="4" height="15" fill="rgb(224,2,47)"/><text x="32.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1348" width="4" height="15" fill="rgb(253,82,21)"/><text x="32.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1364" width="4" height="15" fill="rgb(249,175,28)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1380" width="4" height="15" fill="rgb(216,113,42)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1396" width="4" height="15" fill="rgb(251,17,25)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1412" width="4" height="15" fill="rgb(253,223,51)"/><text x="32.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1428" width="4" height="15" fill="rgb(206,120,49)"/><text x="32.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1444" width="4" height="15" fill="rgb(210,215,36)"/><text x="32.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1460" width="4" height="15" fill="rgb(210,129,44)"/><text x="32.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="1476" width="4" height="15" fill="rgb(234,9,15)"/><text x="32.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1492" width="4" height="15" fill="rgb(212,93,22)"/><text x="32.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1508" width="4" height="15" fill="rgb(246,14,11)"/><text x="32.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1524" width="4" height="15" fill="rgb(239,73,30)"/><text x="32.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1540" width="4" height="15" fill="rgb(216,51,52)"/><text x="32.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1556" width="4" height="15" fill="rgb(216,101,53)"/><text x="32.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1572" width="4" height="15" fill="rgb(237,192,54)"/><text x="32.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1796" width="4" height="15" fill="rgb(210,183,29)"/><text x="36.00" y="1806.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.34%)</title><rect x="33" y="1812" width="4" height="15" fill="rgb(248,222,10)"/><text x="36.00" y="1822.50"></text></g><g><title>setParseAction (pyparsing.py) (1 samples, 0.34%)</title><rect x="33" y="1828" width="4" height="15" fill="rgb(233,67,18)"/><text x="36.00" y="1838.50"></text></g><g><title>_trim_arity (pyparsing.py) (1 samples, 0.34%)</title><rect x="33" y="1844" width="4" height="15" fill="rgb(212,181,51)"/><text x="36.00" y="1854.50"></text></g><g><title>extract_stack (pyparsing.py) (1 samples, 0.34%)</title><rect x="33" y="1860" width="4" height="15" fill="rgb(224,228,22)"/><text x="36.00" y="1870.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.34%)</title><rect x="33" y="1876" width="4" height="15" fill="rgb(221,163,19)"/><text x="36.00" y="1886.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.34%)</title><rect x="33" y="1892" width="4" height="15" fill="rgb(236,84,8)"/><text x="36.00" y="1902.50"></text></g><g><title>line (traceback.py) (1 samples, 0.34%)</title><rect x="33" y="1908" width="4" height="15" fill="rgb(225,226,4)"/><text x="36.00" y="1918.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.34%)</title><rect x="33" y="1924" width="4" height="15" fill="rgb(245,138,32)"/><text x="36.00" y="1934.50"></text></g><g><title>getlines (linecache.py) (1 samples, 0.34%)</title><rect x="33" y="1940" width="4" height="15" fill="rgb(216,97,14)"/><text x="36.00" y="1950.50"></text></g><g><title>updatecache (linecache.py) (1 samples, 0.34%)</title><rect x="33" y="1956" width="4" height="15" fill="rgb(250,18,23)"/><text x="36.00" y="1966.50"></text></g><g><title>0x7f42fcc43456 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1972" width="4" height="15" fill="rgb(252,44,10)"/><text x="36.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1396" width="8" height="15" fill="rgb(215,49,9)"/><text x="36.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1412" width="8" height="15" fill="rgb(209,228,13)"/><text x="36.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1428" width="8" height="15" fill="rgb(212,118,44)"/><text x="36.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1444" width="8" height="15" fill="rgb(228,95,14)"/><text x="36.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="1460" width="8" height="15" fill="rgb(235,218,25)"/><text x="36.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1476" width="8" height="15" fill="rgb(249,116,20)"/><text x="36.00" y="1486.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (2 samples, 0.68%)</title><rect x="33" y="1492" width="8" height="15" fill="rgb(227,69,52)"/><text x="36.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1508" width="8" height="15" fill="rgb(238,12,36)"/><text x="36.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1524" width="8" height="15" fill="rgb(229,134,51)"/><text x="36.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1540" width="8" height="15" fill="rgb(237,202,40)"/><text x="36.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1556" width="8" height="15" fill="rgb(233,43,23)"/><text x="36.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1572" width="8" height="15" fill="rgb(251,190,38)"/><text x="36.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="1588" width="8" height="15" fill="rgb(212,126,29)"/><text x="36.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1604" width="8" height="15" fill="rgb(252,191,25)"/><text x="36.00" y="1614.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (2 samples, 0.68%)</title><rect x="33" y="1620" width="8" height="15" fill="rgb(210,71,21)"/><text x="36.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1636" width="8" height="15" fill="rgb(209,82,37)"/><text x="36.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1652" width="8" height="15" fill="rgb(249,77,33)"/><text x="36.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1668" width="8" height="15" fill="rgb(210,83,6)"/><text x="36.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="1684" width="8" height="15" fill="rgb(210,8,7)"/><text x="36.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1700" width="8" height="15" fill="rgb(212,205,8)"/><text x="36.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (2 samples, 0.68%)</title><rect x="33" y="1716" width="8" height="15" fill="rgb(210,159,9)"/><text x="36.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1732" width="8" height="15" fill="rgb(239,87,51)"/><text x="36.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1748" width="8" height="15" fill="rgb(250,78,7)"/><text x="36.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1764" width="8" height="15" fill="rgb(206,110,5)"/><text x="36.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="1780" width="8" height="15" fill="rgb(229,23,52)"/><text x="36.00" y="1790.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1796" width="4" height="15" fill="rgb(228,91,45)"/><text x="40.00" y="1806.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1812" width="4" height="15" fill="rgb(228,13,43)"/><text x="40.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="33" y="1364" width="12" height="15" fill="rgb(254,25,42)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="33" y="1380" width="12" height="15" fill="rgb(250,86,9)"/><text x="36.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1396" width="4" height="15" fill="rgb(252,3,50)"/><text x="44.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1412" width="4" height="15" fill="rgb(212,186,36)"/><text x="44.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1428" width="4" height="15" fill="rgb(247,26,1)"/><text x="44.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.34%)</title><rect x="41" y="1444" width="4" height="15" fill="rgb(245,93,30)"/><text x="44.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1460" width="4" height="15" fill="rgb(240,226,11)"/><text x="44.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1476" width="4" height="15" fill="rgb(242,169,50)"/><text x="44.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1492" width="4" height="15" fill="rgb(246,210,14)"/><text x="44.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1508" width="4" height="15" fill="rgb(210,143,12)"/><text x="44.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1524" width="4" height="15" fill="rgb(212,219,38)"/><text x="44.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.34%)</title><rect x="41" y="1540" width="4" height="15" fill="rgb(228,44,16)"/><text x="44.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1556" width="4" height="15" fill="rgb(250,19,15)"/><text x="44.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1572" width="4" height="15" fill="rgb(253,178,21)"/><text x="44.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1588" width="4" height="15" fill="rgb(254,51,36)"/><text x="44.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1604" width="4" height="15" fill="rgb(215,145,39)"/><text x="44.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1620" width="4" height="15" fill="rgb(217,92,28)"/><text x="44.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.34%)</title><rect x="41" y="1636" width="4" height="15" fill="rgb(215,97,37)"/><text x="44.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1652" width="4" height="15" fill="rgb(236,145,33)"/><text x="44.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1668" width="4" height="15" fill="rgb(210,115,12)"/><text x="44.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1684" width="4" height="15" fill="rgb(213,58,31)"/><text x="44.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1700" width="4" height="15" fill="rgb(251,142,4)"/><text x="44.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1716" width="4" height="15" fill="rgb(230,70,5)"/><text x="44.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.34%)</title><rect x="41" y="1732" width="4" height="15" fill="rgb(214,112,39)"/><text x="44.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1748" width="4" height="15" fill="rgb(216,31,0)"/><text x="44.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1764" width="4" height="15" fill="rgb(209,159,23)"/><text x="44.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1780" width="4" height="15" fill="rgb(223,77,32)"/><text x="44.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1796" width="4" height="15" fill="rgb(222,129,29)"/><text x="44.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1812" width="4" height="15" fill="rgb(213,204,18)"/><text x="44.00" y="1822.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.34%)</title><rect x="41" y="1828" width="4" height="15" fill="rgb(241,22,30)"/><text x="44.00" y="1838.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1844" width="4" height="15" fill="rgb(225,196,30)"/><text x="44.00" y="1854.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1860" width="4" height="15" fill="rgb(224,163,3)"/><text x="44.00" y="1870.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1876" width="4" height="15" fill="rgb(223,130,23)"/><text x="44.00" y="1886.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1892" width="4" height="15" fill="rgb(246,71,39)"/><text x="44.00" y="1902.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1908" width="4" height="15" fill="rgb(222,188,2)"/><text x="44.00" y="1918.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1924" width="4" height="15" fill="rgb(238,196,46)"/><text x="44.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 3.38%)</title><rect x="10" y="292" width="39" height="15" fill="rgb(218,119,33)"/><text x="13.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.38%)</title><rect x="10" y="308" width="39" height="15" fill="rgb(253,174,28)"/><text x="13.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.38%)</title><rect x="10" y="324" width="39" height="15" fill="rgb(239,18,10)"/><text x="13.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="340" width="16" height="15" fill="rgb(226,163,29)"/><text x="36.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="356" width="16" height="15" fill="rgb(225,123,48)"/><text x="36.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="372" width="16" height="15" fill="rgb(205,103,29)"/><text x="36.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.35%)</title><rect x="33" y="388" width="16" height="15" fill="rgb(227,162,54)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="404" width="16" height="15" fill="rgb(239,202,32)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="420" width="16" height="15" fill="rgb(235,69,0)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="436" width="16" height="15" fill="rgb(210,101,13)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="452" width="16" height="15" fill="rgb(228,224,12)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="468" width="16" height="15" fill="rgb(227,93,4)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.35%)</title><rect x="33" y="484" width="16" height="15" fill="rgb(247,66,17)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="500" width="16" height="15" fill="rgb(241,83,26)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="516" width="16" height="15" fill="rgb(233,88,29)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="532" width="16" height="15" fill="rgb(231,171,32)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="548" width="16" height="15" fill="rgb(229,142,33)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="564" width="16" height="15" fill="rgb(206,211,16)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.35%)</title><rect x="33" y="580" width="16" height="15" fill="rgb(239,163,36)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="596" width="16" height="15" fill="rgb(214,161,25)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="612" width="16" height="15" fill="rgb(241,12,4)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="628" width="16" height="15" fill="rgb(218,215,42)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="644" width="16" height="15" fill="rgb(221,151,17)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="660" width="16" height="15" fill="rgb(245,181,41)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.35%)</title><rect x="33" y="676" width="16" height="15" fill="rgb(211,22,2)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="692" width="16" height="15" fill="rgb(238,119,36)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="708" width="16" height="15" fill="rgb(230,206,22)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="724" width="16" height="15" fill="rgb(220,98,36)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="740" width="16" height="15" fill="rgb(236,124,49)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="756" width="16" height="15" fill="rgb(234,57,29)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.35%)</title><rect x="33" y="772" width="16" height="15" fill="rgb(212,165,19)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="788" width="16" height="15" fill="rgb(214,45,11)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="804" width="16" height="15" fill="rgb(242,50,16)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="820" width="16" height="15" fill="rgb(249,161,5)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="836" width="16" height="15" fill="rgb(253,37,36)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="852" width="16" height="15" fill="rgb(251,156,39)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.35%)</title><rect x="33" y="868" width="16" height="15" fill="rgb(236,172,16)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="884" width="16" height="15" fill="rgb(228,39,5)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="900" width="16" height="15" fill="rgb(222,152,39)"/><text x="36.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="916" width="16" height="15" fill="rgb(213,127,4)"/><text x="36.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="932" width="16" height="15" fill="rgb(253,122,28)"/><text x="36.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="948" width="16" height="15" fill="rgb(221,141,27)"/><text x="36.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (4 samples, 1.35%)</title><rect x="33" y="964" width="16" height="15" fill="rgb(208,63,51)"/><text x="36.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="980" width="16" height="15" fill="rgb(252,177,13)"/><text x="36.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="996" width="16" height="15" fill="rgb(247,223,12)"/><text x="36.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1012" width="16" height="15" fill="rgb(248,132,10)"/><text x="36.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="1028" width="16" height="15" fill="rgb(232,46,50)"/><text x="36.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1044" width="16" height="15" fill="rgb(247,135,36)"/><text x="36.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (4 samples, 1.35%)</title><rect x="33" y="1060" width="16" height="15" fill="rgb(213,136,53)"/><text x="36.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1076" width="16" height="15" fill="rgb(245,169,7)"/><text x="36.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1092" width="16" height="15" fill="rgb(221,127,8)"/><text x="36.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1108" width="16" height="15" fill="rgb(244,153,31)"/><text x="36.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="1124" width="16" height="15" fill="rgb(233,79,24)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1140" width="16" height="15" fill="rgb(233,134,2)"/><text x="36.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (4 samples, 1.35%)</title><rect x="33" y="1156" width="16" height="15" fill="rgb(241,176,0)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1172" width="16" height="15" fill="rgb(210,144,24)"/><text x="36.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1188" width="16" height="15" fill="rgb(245,1,5)"/><text x="36.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1204" width="16" height="15" fill="rgb(215,6,40)"/><text x="36.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="1220" width="16" height="15" fill="rgb(250,8,14)"/><text x="36.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1236" width="16" height="15" fill="rgb(237,177,35)"/><text x="36.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (4 samples, 1.35%)</title><rect x="33" y="1252" width="16" height="15" fill="rgb(237,15,47)"/><text x="36.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1268" width="16" height="15" fill="rgb(219,191,49)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1284" width="16" height="15" fill="rgb(205,161,12)"/><text x="36.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1300" width="16" height="15" fill="rgb(234,106,12)"/><text x="36.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="33" y="1316" width="16" height="15" fill="rgb(242,149,46)"/><text x="36.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="33" y="1332" width="16" height="15" fill="rgb(209,125,13)"/><text x="36.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (4 samples, 1.35%)</title><rect x="33" y="1348" width="16" height="15" fill="rgb(239,183,1)"/><text x="36.00" y="1358.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1364" width="4" height="15" fill="rgb(239,18,10)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1380" width="4" height="15" fill="rgb(214,35,9)"/><text x="48.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1396" width="4" height="15" fill="rgb(236,72,34)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1412" width="4" height="15" fill="rgb(252,30,49)"/><text x="48.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1428" width="4" height="15" fill="rgb(210,107,46)"/><text x="48.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1444" width="4" height="15" fill="rgb(211,43,49)"/><text x="48.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1460" width="4" height="15" fill="rgb(254,75,8)"/><text x="48.00" y="1470.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py) (1 samples, 0.34%)</title><rect x="45" y="1476" width="4" height="15" fill="rgb(250,47,43)"/><text x="48.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1492" width="4" height="15" fill="rgb(222,6,9)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1508" width="4" height="15" fill="rgb(242,18,30)"/><text x="48.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1524" width="4" height="15" fill="rgb(211,13,51)"/><text x="48.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1540" width="4" height="15" fill="rgb(252,89,53)"/><text x="48.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1556" width="4" height="15" fill="rgb(217,116,36)"/><text x="48.00" y="1566.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py) (1 samples, 0.34%)</title><rect x="45" y="1572" width="4" height="15" fill="rgb(242,165,33)"/><text x="48.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1588" width="4" height="15" fill="rgb(215,195,24)"/><text x="48.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1604" width="4" height="15" fill="rgb(253,129,38)"/><text x="48.00" y="1614.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1620" width="4" height="15" fill="rgb(214,127,53)"/><text x="48.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.72%)</title><rect x="10" y="196" width="43" height="15" fill="rgb(228,114,15)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.72%)</title><rect x="10" y="212" width="43" height="15" fill="rgb(207,40,25)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.72%)</title><rect x="10" y="228" width="43" height="15" fill="rgb(210,176,39)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.72%)</title><rect x="10" y="244" width="43" height="15" fill="rgb(226,163,16)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.72%)</title><rect x="10" y="260" width="43" height="15" fill="rgb(239,168,31)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.72%)</title><rect x="10" y="276" width="43" height="15" fill="rgb(220,91,17)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="292" width="4" height="15" fill="rgb(248,192,44)"/><text x="52.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="308" width="4" height="15" fill="rgb(207,134,45)"/><text x="52.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="324" width="4" height="15" fill="rgb(238,196,21)"/><text x="52.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="340" width="4" height="15" fill="rgb(238,105,40)"/><text x="52.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="356" width="4" height="15" fill="rgb(220,182,12)"/><text x="52.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="372" width="4" height="15" fill="rgb(216,100,24)"/><text x="52.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (1 samples, 0.34%)</title><rect x="49" y="388" width="4" height="15" fill="rgb(248,67,52)"/><text x="52.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="404" width="4" height="15" fill="rgb(211,218,8)"/><text x="52.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="420" width="4" height="15" fill="rgb(242,80,2)"/><text x="52.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="436" width="4" height="15" fill="rgb(220,164,16)"/><text x="52.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="452" width="4" height="15" fill="rgb(250,27,17)"/><text x="52.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="468" width="4" height="15" fill="rgb(225,209,4)"/><text x="52.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (1 samples, 0.34%)</title><rect x="49" y="484" width="4" height="15" fill="rgb(222,170,50)"/><text x="52.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="500" width="4" height="15" fill="rgb(206,182,19)"/><text x="52.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="516" width="4" height="15" fill="rgb(248,84,4)"/><text x="52.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="532" width="4" height="15" fill="rgb(224,109,14)"/><text x="52.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="548" width="4" height="15" fill="rgb(232,36,5)"/><text x="52.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="564" width="4" height="15" fill="rgb(225,37,50)"/><text x="52.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (1 samples, 0.34%)</title><rect x="49" y="580" width="4" height="15" fill="rgb(228,145,34)"/><text x="52.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="596" width="4" height="15" fill="rgb(249,195,40)"/><text x="52.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="612" width="4" height="15" fill="rgb(231,101,51)"/><text x="52.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="628" width="4" height="15" fill="rgb(233,216,26)"/><text x="52.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="644" width="4" height="15" fill="rgb(224,118,9)"/><text x="52.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="660" width="4" height="15" fill="rgb(207,195,28)"/><text x="52.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="676" width="4" height="15" fill="rgb(230,119,22)"/><text x="52.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="692" width="4" height="15" fill="rgb(248,6,28)"/><text x="52.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="708" width="4" height="15" fill="rgb(210,200,48)"/><text x="52.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="724" width="4" height="15" fill="rgb(234,14,34)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="740" width="4" height="15" fill="rgb(237,109,21)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="756" width="4" height="15" fill="rgb(251,101,13)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="772" width="4" height="15" fill="rgb(239,167,20)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="788" width="4" height="15" fill="rgb(244,142,22)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="804" width="4" height="15" fill="rgb(240,135,27)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="820" width="4" height="15" fill="rgb(222,0,33)"/><text x="52.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="836" width="4" height="15" fill="rgb(238,207,14)"/><text x="52.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="852" width="4" height="15" fill="rgb(215,181,44)"/><text x="52.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="868" width="4" height="15" fill="rgb(230,53,39)"/><text x="52.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="884" width="4" height="15" fill="rgb(226,155,50)"/><text x="52.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="900" width="4" height="15" fill="rgb(242,143,45)"/><text x="52.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="916" width="4" height="15" fill="rgb(231,110,46)"/><text x="52.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="932" width="4" height="15" fill="rgb(254,52,45)"/><text x="52.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.34%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(219,142,52)"/><text x="52.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(236,15,53)"/><text x="52.00" y="974.50"></text></g><g><title>0x7f42fcc72237 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(236,145,40)"/><text x="52.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="68" width="47" height="15" fill="rgb(214,79,39)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="84" width="47" height="15" fill="rgb(219,46,18)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="100" width="47" height="15" fill="rgb(245,209,16)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.05%)</title><rect x="10" y="116" width="47" height="15" fill="rgb(213,227,15)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="132" width="47" height="15" fill="rgb(212,86,11)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (12 samples, 4.05%)</title><rect x="10" y="148" width="47" height="15" fill="rgb(252,39,33)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="164" width="47" height="15" fill="rgb(230,125,45)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="180" width="47" height="15" fill="rgb(210,185,37)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="196" width="4" height="15" fill="rgb(235,120,30)"/><text x="56.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="212" width="4" height="15" fill="rgb(226,190,32)"/><text x="56.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="228" width="4" height="15" fill="rgb(205,152,25)"/><text x="56.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.34%)</title><rect x="53" y="244" width="4" height="15" fill="rgb(246,41,10)"/><text x="56.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="260" width="4" height="15" fill="rgb(253,215,52)"/><text x="56.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="276" width="4" height="15" fill="rgb(225,39,28)"/><text x="56.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="292" width="4" height="15" fill="rgb(245,215,45)"/><text x="56.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="308" width="4" height="15" fill="rgb(210,108,39)"/><text x="56.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="324" width="4" height="15" fill="rgb(211,86,39)"/><text x="56.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.34%)</title><rect x="53" y="340" width="4" height="15" fill="rgb(208,111,14)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="356" width="4" height="15" fill="rgb(253,132,31)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="372" width="4" height="15" fill="rgb(233,62,45)"/><text x="56.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="388" width="4" height="15" fill="rgb(250,175,22)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="404" width="4" height="15" fill="rgb(235,159,7)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="420" width="4" height="15" fill="rgb(226,126,53)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="436" width="4" height="15" fill="rgb(238,117,11)"/><text x="56.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="452" width="4" height="15" fill="rgb(222,20,48)"/><text x="56.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="468" width="4" height="15" fill="rgb(218,192,39)"/><text x="56.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.34%)</title><rect x="53" y="484" width="4" height="15" fill="rgb(241,199,8)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="500" width="4" height="15" fill="rgb(235,3,26)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="516" width="4" height="15" fill="rgb(212,166,31)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="532" width="4" height="15" fill="rgb(227,83,44)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="548" width="4" height="15" fill="rgb(252,34,35)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="564" width="4" height="15" fill="rgb(236,139,4)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.34%)</title><rect x="53" y="580" width="4" height="15" fill="rgb(241,142,8)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="596" width="4" height="15" fill="rgb(216,1,42)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="612" width="4" height="15" fill="rgb(215,5,5)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="628" width="4" height="15" fill="rgb(235,224,4)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="644" width="4" height="15" fill="rgb(239,90,2)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="660" width="4" height="15" fill="rgb(217,220,43)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py) (1 samples, 0.34%)</title><rect x="53" y="676" width="4" height="15" fill="rgb(234,48,1)"/><text x="56.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py) (1 samples, 0.34%)</title><rect x="53" y="692" width="4" height="15" fill="rgb(234,211,35)"/><text x="56.00" y="702.50"></text></g><g><title>&lt;listcomp&gt; (pyquickhelper/pycode/build_helper.py) (1 samples, 0.34%)</title><rect x="53" y="708" width="4" height="15" fill="rgb(249,155,48)"/><text x="56.00" y="718.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.34%)</title><rect x="53" y="724" width="4" height="15" fill="rgb(237,227,36)"/><text x="56.00" y="734.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.34%)</title><rect x="53" y="740" width="4" height="15" fill="rgb(220,49,12)"/><text x="56.00" y="750.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="61" y="116" width="4" height="15" fill="rgb(245,180,41)"/><text x="64.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="61" y="132" width="4" height="15" fill="rgb(237,60,43)"/><text x="64.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="61" y="148" width="4" height="15" fill="rgb(221,110,9)"/><text x="64.00" y="158.50"></text></g><g><title>0x7f42bd49bff9 (?) (1 samples, 0.34%)</title><rect x="89" y="212" width="4" height="15" fill="rgb(208,172,3)"/><text x="92.00" y="222.50"></text></g><g><title>0x7f42bd496ef6 (?) (1 samples, 0.34%)</title><rect x="89" y="228" width="4" height="15" fill="rgb(248,205,32)"/><text x="92.00" y="238.50"></text></g><g><title>0x7f42bd48b962 (?) (1 samples, 0.34%)</title><rect x="89" y="244" width="4" height="15" fill="rgb(210,180,22)"/><text x="92.00" y="254.50"></text></g><g><title>0x7f42bd4bf7a7 (?) (1 samples, 0.34%)</title><rect x="89" y="260" width="4" height="15" fill="rgb(214,178,3)"/><text x="92.00" y="270.50"></text></g><g><title>0x7f42bd4bf379 (?) (1 samples, 0.34%)</title><rect x="89" y="276" width="4" height="15" fill="rgb(225,56,29)"/><text x="92.00" y="286.50"></text></g><g><title>0x7f42bd91d8b8 (?) (1 samples, 0.34%)</title><rect x="89" y="292" width="4" height="15" fill="rgb(227,157,49)"/><text x="92.00" y="302.50"></text></g><g><title>0x7f42bd91bc7f (?) (1 samples, 0.34%)</title><rect x="89" y="308" width="4" height="15" fill="rgb(245,79,10)"/><text x="92.00" y="318.50"></text></g><g><title>0x7f42bd92e99c (?) (1 samples, 0.34%)</title><rect x="89" y="324" width="4" height="15" fill="rgb(233,139,28)"/><text x="92.00" y="334.50"></text></g><g><title>0x7f42bd61390a (?) (1 samples, 0.34%)</title><rect x="89" y="340" width="4" height="15" fill="rgb(249,56,15)"/><text x="92.00" y="350.50"></text></g><g><title>0x7f42bd8ea5e6 (?) (1 samples, 0.34%)</title><rect x="89" y="356" width="4" height="15" fill="rgb(209,181,46)"/><text x="92.00" y="366.50"></text></g><g><title>0x7f42bd8ea486 (?) (1 samples, 0.34%)</title><rect x="89" y="372" width="4" height="15" fill="rgb(253,82,46)"/><text x="92.00" y="382.50"></text></g><g><title>0x7f42bd8d4c8d (?) (1 samples, 0.34%)</title><rect x="89" y="388" width="4" height="15" fill="rgb(249,15,14)"/><text x="92.00" y="398.50"></text></g><g><title>0x7f42bd8d3922 (?) (1 samples, 0.34%)</title><rect x="89" y="404" width="4" height="15" fill="rgb(239,28,48)"/><text x="92.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.68%)</title><rect x="93" y="212" width="8" height="15" fill="rgb(211,215,28)"/><text x="96.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="97" y="228" width="4" height="15" fill="rgb(245,217,45)"/><text x="100.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="97" y="244" width="4" height="15" fill="rgb(248,139,25)"/><text x="100.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="97" y="260" width="4" height="15" fill="rgb(242,55,16)"/><text x="100.00" y="270.50"></text></g><g><title>0x7f42fcc32991 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="105" y="276" width="4" height="15" fill="rgb(219,99,52)"/><text x="108.00" y="286.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="340" width="4" height="15" fill="rgb(221,104,50)"/><text x="112.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="356" width="4" height="15" fill="rgb(212,101,5)"/><text x="112.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="372" width="4" height="15" fill="rgb(240,195,20)"/><text x="112.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="388" width="4" height="15" fill="rgb(220,48,3)"/><text x="112.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="404" width="4" height="15" fill="rgb(220,108,45)"/><text x="112.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="420" width="4" height="15" fill="rgb(205,87,14)"/><text x="112.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="436" width="4" height="15" fill="rgb(231,116,2)"/><text x="112.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="452" width="4" height="15" fill="rgb(213,122,46)"/><text x="112.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="468" width="4" height="15" fill="rgb(248,161,10)"/><text x="112.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::unlock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="109" y="484" width="4" height="15" fill="rgb(230,175,31)"/><text x="112.00" y="494.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="113" y="340" width="8" height="15" fill="rgb(254,189,5)"/><text x="116.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="117" y="356" width="4" height="15" fill="rgb(222,38,37)"/><text x="120.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="117" y="372" width="4" height="15" fill="rgb(237,116,21)"/><text x="120.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="117" y="388" width="4" height="15" fill="rgb(224,175,33)"/><text x="120.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="121" y="340" width="4" height="15" fill="rgb(248,156,10)"/><text x="124.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="121" y="356" width="4" height="15" fill="rgb(228,79,54)"/><text x="124.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="121" y="372" width="4" height="15" fill="rgb(237,130,34)"/><text x="124.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="125" y="340" width="8" height="15" fill="rgb(217,145,18)"/><text x="128.00" y="350.50"></text></g><g><title>0x7f42fcc32965 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="129" y="356" width="4" height="15" fill="rgb(247,96,34)"/><text x="132.00" y="366.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="133" y="340" width="4" height="15" fill="rgb(207,38,43)"/><text x="136.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="133" y="356" width="4" height="15" fill="rgb(210,172,1)"/><text x="136.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.70%)</title><rect x="109" y="308" width="32" height="15" fill="rgb(243,197,51)"/><text x="112.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.70%)</title><rect x="109" y="324" width="32" height="15" fill="rgb(225,140,40)"/><text x="112.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="137" y="340" width="4" height="15" fill="rgb(217,28,9)"/><text x="140.00" y="350.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.04%)</title><rect x="109" y="292" width="36" height="15" fill="rgb(231,167,43)"/><text x="112.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="141" y="308" width="4" height="15" fill="rgb(209,28,45)"/><text x="144.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="141" y="324" width="4" height="15" fill="rgb(211,185,8)"/><text x="144.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="141" y="340" width="4" height="15" fill="rgb(239,27,29)"/><text x="144.00" y="350.50"></text></g><g><title>0x7f42fcd10130 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="141" y="356" width="4" height="15" fill="rgb(220,14,12)"/><text x="144.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.38%)</title><rect x="109" y="276" width="40" height="15" fill="rgb(237,156,1)"/><text x="112.00" y="286.50">onn..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="145" y="292" width="4" height="15" fill="rgb(237,181,14)"/><text x="148.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.34%)</title><rect x="145" y="308" width="4" height="15" fill="rgb(209,140,1)"/><text x="148.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.73%)</title><rect x="101" y="260" width="56" height="15" fill="rgb(220,30,32)"/><text x="104.00" y="270.50">onnxr..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="149" y="276" width="8" height="15" fill="rgb(242,151,26)"/><text x="152.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="157" y="260" width="8" height="15" fill="rgb(243,229,28)"/><text x="160.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="161" y="276" width="4" height="15" fill="rgb(214,114,1)"/><text x="164.00" y="286.50"></text></g><g><title>onnxruntime::CPUAllocator::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="161" y="292" width="4" height="15" fill="rgb(230,26,25)"/><text x="164.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="165" y="260" width="8" height="15" fill="rgb(222,139,28)"/><text x="168.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="169" y="276" width="4" height="15" fill="rgb(235,41,39)"/><text x="172.00" y="286.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="173" y="260" width="4" height="15" fill="rgb(251,32,46)"/><text x="176.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="177" y="276" width="4" height="15" fill="rgb(230,224,35)"/><text x="180.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="177" y="292" width="4" height="15" fill="rgb(242,52,11)"/><text x="180.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="177" y="308" width="4" height="15" fill="rgb(234,209,6)"/><text x="180.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="177" y="324" width="4" height="15" fill="rgb(234,225,23)"/><text x="180.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="177" y="340" width="4" height="15" fill="rgb(243,220,31)"/><text x="180.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="177" y="356" width="4" height="15" fill="rgb(210,196,32)"/><text x="180.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="177" y="372" width="4" height="15" fill="rgb(242,215,7)"/><text x="180.00" y="382.50"></text></g><g><title>run (onnxruntime/capi/session.py) (25 samples, 8.45%)</title><rect x="85" y="196" width="100" height="15" fill="rgb(236,2,37)"/><text x="88.00" y="206.50">run (onnxrun..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 7.09%)</title><rect x="101" y="212" width="84" height="15" fill="rgb(254,187,0)"/><text x="104.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 7.09%)</title><rect x="101" y="228" width="84" height="15" fill="rgb(228,142,52)"/><text x="104.00" y="238.50">void pybi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 7.09%)</title><rect x="101" y="244" width="84" height="15" fill="rgb(253,15,32)"/><text x="104.00" y="254.50">onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="177" y="260" width="8" height="15" fill="rgb(251,61,4)"/><text x="180.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="181" y="276" width="4" height="15" fill="rgb(219,73,42)"/><text x="184.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="181" y="292" width="4" height="15" fill="rgb(237,132,53)"/><text x="184.00" y="302.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (33 samples, 11.15%)</title><rect x="57" y="68" width="132" height="15" fill="rgb(207,29,31)"/><text x="60.00" y="78.50">profile_ort (ben..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (33 samples, 11.15%)</title><rect x="57" y="84" width="132" height="15" fill="rgb(209,95,19)"/><text x="60.00" y="94.50">setup_profile (b..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (33 samples, 11.15%)</title><rect x="57" y="100" width="132" height="15" fill="rgb(245,17,30)"/><text x="60.00" y="110.50">profile (bench_L..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 10.47%)</title><rect x="65" y="116" width="124" height="15" fill="rgb(207,37,4)"/><text x="68.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 10.47%)</title><rect x="65" y="132" width="124" height="15" fill="rgb(251,38,4)"/><text x="68.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (31 samples, 10.47%)</title><rect x="65" y="148" width="124" height="15" fill="rgb(214,65,23)"/><text x="68.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (29 samples, 9.80%)</title><rect x="73" y="164" width="116" height="15" fill="rgb(238,129,31)"/><text x="76.00" y="174.50">_run_whole_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (26 samples, 8.78%)</title><rect x="85" y="180" width="104" height="15" fill="rgb(254,213,30)"/><text x="88.00" y="190.50">run (mlprodi..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="185" y="196" width="4" height="15" fill="rgb(215,51,34)"/><text x="188.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.34%)</title><rect x="348" y="196" width="4" height="15" fill="rgb(253,210,54)"/><text x="351.00" y="206.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="364" y="276" width="4" height="15" fill="rgb(215,217,24)"/><text x="367.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.68%)</title><rect x="364" y="212" width="8" height="15" fill="rgb(229,95,1)"/><text x="367.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.68%)</title><rect x="364" y="228" width="8" height="15" fill="rgb(236,180,11)"/><text x="367.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.68%)</title><rect x="364" y="244" width="8" height="15" fill="rgb(251,73,31)"/><text x="367.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.68%)</title><rect x="364" y="260" width="8" height="15" fill="rgb(233,150,48)"/><text x="367.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.34%)</title><rect x="368" y="276" width="4" height="15" fill="rgb(207,217,51)"/><text x="371.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="368" y="292" width="4" height="15" fill="rgb(249,29,8)"/><text x="371.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.68%)</title><rect x="372" y="212" width="8" height="15" fill="rgb(245,57,40)"/><text x="375.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.68%)</title><rect x="372" y="228" width="8" height="15" fill="rgb(225,137,42)"/><text x="375.00" y="238.50"></text></g><g><title>0x7f42fcd1013a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="408" y="244" width="4" height="15" fill="rgb(238,85,12)"/><text x="411.00" y="254.50"></text></g><g><title>0x7f42fcc48730 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="432" y="324" width="4" height="15" fill="rgb(207,15,3)"/><text x="435.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="436" y="340" width="4" height="15" fill="rgb(251,17,20)"/><text x="439.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="436" y="356" width="4" height="15" fill="rgb(223,96,38)"/><text x="439.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="436" y="372" width="4" height="15" fill="rgb(244,138,28)"/><text x="439.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (8 samples, 2.70%)</title><rect x="412" y="244" width="32" height="15" fill="rgb(238,10,37)"/><text x="415.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 2.36%)</title><rect x="416" y="260" width="28" height="15" fill="rgb(240,103,39)"/><text x="419.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (7 samples, 2.36%)</title><rect x="416" y="276" width="28" height="15" fill="rgb(236,66,20)"/><text x="419.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 2.03%)</title><rect x="420" y="292" width="24" height="15" fill="rgb(246,25,38)"/><text x="423.00" y="302.50">_..</text></g><g><title>array_argmax (methods.c) (4 samples, 1.35%)</title><rect x="428" y="308" width="16" height="15" fill="rgb(250,31,54)"/><text x="431.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.68%)</title><rect x="436" y="324" width="8" height="15" fill="rgb(210,7,37)"/><text x="439.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="440" y="340" width="4" height="15" fill="rgb(226,174,1)"/><text x="443.00" y="350.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="460" y="324" width="4" height="15" fill="rgb(251,152,38)"/><text x="463.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.34%)</title><rect x="464" y="340" width="4" height="15" fill="rgb(241,73,33)"/><text x="467.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.34%)</title><rect x="468" y="340" width="4" height="15" fill="rgb(227,222,20)"/><text x="471.00" y="350.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.34%)</title><rect x="472" y="340" width="4" height="15" fill="rgb(214,196,54)"/><text x="475.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="472" y="356" width="4" height="15" fill="rgb(252,1,0)"/><text x="475.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 3.04%)</title><rect x="444" y="244" width="36" height="15" fill="rgb(214,56,45)"/><text x="447.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (6 samples, 2.03%)</title><rect x="456" y="260" width="24" height="15" fill="rgb(226,104,20)"/><text x="459.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.69%)</title><rect x="460" y="276" width="20" height="15" fill="rgb(217,149,54)"/><text x="463.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.69%)</title><rect x="460" y="292" width="20" height="15" fill="rgb(210,178,11)"/><text x="463.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.69%)</title><rect x="460" y="308" width="20" height="15" fill="rgb(205,18,43)"/><text x="463.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 1.35%)</title><rect x="464" y="324" width="16" height="15" fill="rgb(246,176,6)"/><text x="467.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.34%)</title><rect x="476" y="340" width="4" height="15" fill="rgb(223,149,41)"/><text x="479.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="480" y="260" width="4" height="15" fill="rgb(224,36,23)"/><text x="483.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="480" y="276" width="4" height="15" fill="rgb(230,36,28)"/><text x="483.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="492" y="276" width="4" height="15" fill="rgb(213,6,18)"/><text x="495.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="492" y="292" width="4" height="15" fill="rgb(218,228,50)"/><text x="495.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.34%)</title><rect x="496" y="324" width="4" height="15" fill="rgb(215,18,4)"/><text x="499.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="496" y="340" width="4" height="15" fill="rgb(216,34,7)"/><text x="499.00" y="350.50"></text></g><g><title>0x7f42fcbea7a0 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="496" y="356" width="4" height="15" fill="rgb(206,66,3)"/><text x="499.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.68%)</title><rect x="496" y="292" width="8" height="15" fill="rgb(247,20,36)"/><text x="499.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.68%)</title><rect x="496" y="308" width="8" height="15" fill="rgb(253,86,28)"/><text x="499.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.34%)</title><rect x="500" y="324" width="4" height="15" fill="rgb(246,61,0)"/><text x="503.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.34%)</title><rect x="500" y="340" width="4" height="15" fill="rgb(224,64,9)"/><text x="503.00" y="350.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.34%)</title><rect x="504" y="308" width="4" height="15" fill="rgb(247,104,41)"/><text x="507.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.34%)</title><rect x="504" y="324" width="4" height="15" fill="rgb(238,190,0)"/><text x="507.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.34%)</title><rect x="504" y="340" width="4" height="15" fill="rgb(209,220,43)"/><text x="507.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.35%)</title><rect x="496" y="276" width="16" height="15" fill="rgb(215,17,50)"/><text x="499.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.68%)</title><rect x="504" y="292" width="8" height="15" fill="rgb(208,168,25)"/><text x="507.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.34%)</title><rect x="508" y="308" width="4" height="15" fill="rgb(247,21,35)"/><text x="511.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="508" y="324" width="4" height="15" fill="rgb(230,187,54)"/><text x="511.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="512" y="276" width="4" height="15" fill="rgb(223,219,10)"/><text x="515.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.34%)</title><rect x="512" y="292" width="4" height="15" fill="rgb(246,12,37)"/><text x="515.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 3.04%)</title><rect x="484" y="260" width="36" height="15" fill="rgb(231,62,12)"/><text x="487.00" y="270.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="516" y="276" width="4" height="15" fill="rgb(212,93,0)"/><text x="519.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="516" y="292" width="4" height="15" fill="rgb(209,154,36)"/><text x="519.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (36 samples, 12.16%)</title><rect x="380" y="228" width="144" height="15" fill="rgb(216,206,15)"/><text x="383.00" y="238.50">_run (mlprodict/on..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.72%)</title><rect x="480" y="244" width="44" height="15" fill="rgb(215,149,1)"/><text x="483.00" y="254.50">ufun..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.34%)</title><rect x="520" y="260" width="4" height="15" fill="rgb(219,60,20)"/><text x="523.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.34%)</title><rect x="520" y="276" width="4" height="15" fill="rgb(232,173,51)"/><text x="523.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.68%)</title><rect x="552" y="260" width="8" height="15" fill="rgb(209,120,42)"/><text x="555.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.34%)</title><rect x="556" y="276" width="4" height="15" fill="rgb(211,6,2)"/><text x="559.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.34%)</title><rect x="556" y="292" width="4" height="15" fill="rgb(249,215,19)"/><text x="559.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="556" y="308" width="4" height="15" fill="rgb(218,187,43)"/><text x="559.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.34%)</title><rect x="556" y="324" width="4" height="15" fill="rgb(215,58,43)"/><text x="559.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="564" y="324" width="4" height="15" fill="rgb(211,56,28)"/><text x="567.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="564" y="340" width="4" height="15" fill="rgb(239,66,20)"/><text x="567.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.34%)</title><rect x="564" y="356" width="4" height="15" fill="rgb(241,53,14)"/><text x="567.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.34%)</title><rect x="564" y="372" width="4" height="15" fill="rgb(230,31,3)"/><text x="567.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.34%)</title><rect x="564" y="388" width="4" height="15" fill="rgb(208,164,50)"/><text x="567.00" y="398.50"></text></g><g><title>0x7f42fcc48e7a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="564" y="404" width="4" height="15" fill="rgb(223,63,25)"/><text x="567.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.34%)</title><rect x="572" y="372" width="4" height="15" fill="rgb(215,21,3)"/><text x="575.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.34%)</title><rect x="572" y="388" width="4" height="15" fill="rgb(227,178,0)"/><text x="575.00" y="398.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.34%)</title><rect x="576" y="372" width="4" height="15" fill="rgb(244,103,30)"/><text x="579.00" y="382.50"></text></g><g><title>array_sum (methods.c) (6 samples, 2.03%)</title><rect x="560" y="260" width="24" height="15" fill="rgb(248,115,15)"/><text x="563.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (6 samples, 2.03%)</title><rect x="560" y="276" width="24" height="15" fill="rgb(216,221,18)"/><text x="563.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (6 samples, 2.03%)</title><rect x="560" y="292" width="24" height="15" fill="rgb(223,31,16)"/><text x="563.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 1.69%)</title><rect x="564" y="308" width="20" height="15" fill="rgb(234,56,18)"/><text x="567.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.35%)</title><rect x="568" y="324" width="16" height="15" fill="rgb(230,101,36)"/><text x="571.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.01%)</title><rect x="572" y="340" width="12" height="15" fill="rgb(253,43,24)"/><text x="575.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 1.01%)</title><rect x="572" y="356" width="12" height="15" fill="rgb(244,93,30)"/><text x="575.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.34%)</title><rect x="580" y="372" width="4" height="15" fill="rgb(216,9,47)"/><text x="583.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="580" y="388" width="4" height="15" fill="rgb(242,47,38)"/><text x="583.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="580" y="404" width="4" height="15" fill="rgb(251,150,51)"/><text x="583.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="580" y="420" width="4" height="15" fill="rgb(216,95,25)"/><text x="583.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.34%)</title><rect x="580" y="436" width="4" height="15" fill="rgb(230,113,53)"/><text x="583.00" y="446.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.68%)</title><rect x="584" y="276" width="8" height="15" fill="rgb(214,58,52)"/><text x="587.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.68%)</title><rect x="584" y="292" width="8" height="15" fill="rgb(254,168,33)"/><text x="587.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.34%)</title><rect x="588" y="308" width="4" height="15" fill="rgb(218,185,26)"/><text x="591.00" y="318.50"></text></g><g><title>0x7f42fcc48e7a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="588" y="324" width="4" height="15" fill="rgb(211,225,17)"/><text x="591.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.34%)</title><rect x="596" y="340" width="4" height="15" fill="rgb(225,151,20)"/><text x="599.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.68%)</title><rect x="596" y="324" width="7" height="15" fill="rgb(242,207,26)"/><text x="599.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.34%)</title><rect x="600" y="340" width="3" height="15" fill="rgb(248,30,50)"/><text x="603.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.68%)</title><rect x="603" y="324" width="8" height="15" fill="rgb(241,219,44)"/><text x="606.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="607" y="340" width="4" height="15" fill="rgb(231,87,48)"/><text x="610.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.03%)</title><rect x="592" y="292" width="23" height="15" fill="rgb(225,117,47)"/><text x="595.00" y="302.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.03%)</title><rect x="592" y="308" width="23" height="15" fill="rgb(250,69,52)"/><text x="595.00" y="318.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.34%)</title><rect x="611" y="324" width="4" height="15" fill="rgb(211,188,3)"/><text x="614.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="611" y="340" width="4" height="15" fill="rgb(234,11,0)"/><text x="614.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.34%)</title><rect x="615" y="308" width="4" height="15" fill="rgb(223,139,43)"/><text x="618.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.34%)</title><rect x="615" y="324" width="4" height="15" fill="rgb(221,227,24)"/><text x="618.00" y="334.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="619" y="324" width="4" height="15" fill="rgb(239,69,26)"/><text x="622.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="619" y="340" width="4" height="15" fill="rgb(213,132,24)"/><text x="622.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="619" y="356" width="4" height="15" fill="rgb(254,37,7)"/><text x="622.00" y="366.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (103 samples, 34.80%)</title><rect x="217" y="164" width="410" height="15" fill="rgb(233,32,9)"/><text x="220.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (96 samples, 32.43%)</title><rect x="245" y="180" width="382" height="15" fill="rgb(215,74,25)"/><text x="248.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (69 samples, 23.31%)</title><rect x="352" y="196" width="275" height="15" fill="rgb(214,131,30)"/><text x="355.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (62 samples, 20.95%)</title><rect x="380" y="212" width="247" height="15" fill="rgb(234,58,28)"/><text x="383.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (26 samples, 8.78%)</title><rect x="524" y="228" width="103" height="15" fill="rgb(222,203,53)"/><text x="527.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (26 samples, 8.78%)</title><rect x="524" y="244" width="103" height="15" fill="rgb(206,87,15)"/><text x="527.00" y="254.50">norm_l1 (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.72%)</title><rect x="584" y="260" width="43" height="15" fill="rgb(239,107,1)"/><text x="587.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 3.04%)</title><rect x="592" y="276" width="35" height="15" fill="rgb(217,160,49)"/><text x="595.00" y="286.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 1.01%)</title><rect x="615" y="292" width="12" height="15" fill="rgb(233,85,41)"/><text x="618.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.68%)</title><rect x="619" y="308" width="8" height="15" fill="rgb(232,4,20)"/><text x="622.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="623" y="324" width="4" height="15" fill="rgb(217,76,6)"/><text x="626.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (108 samples, 36.49%)</title><rect x="201" y="132" width="430" height="15" fill="rgb(251,177,27)"/><text x="204.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (108 samples, 36.49%)</title><rect x="201" y="148" width="430" height="15" fill="rgb(251,63,18)"/><text x="204.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="627" y="164" width="4" height="15" fill="rgb(246,203,21)"/><text x="630.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="627" y="180" width="4" height="15" fill="rgb(248,117,28)"/><text x="630.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="627" y="196" width="4" height="15" fill="rgb(243,154,31)"/><text x="630.00" y="206.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (112 samples, 37.84%)</title><rect x="189" y="68" width="446" height="15" fill="rgb(237,195,34)"/><text x="192.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solver..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (112 samples, 37.84%)</title><rect x="189" y="84" width="446" height="15" fill="rgb(243,78,34)"/><text x="192.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (112 samples, 37.84%)</title><rect x="189" y="100" width="446" height="15" fill="rgb(222,146,28)"/><text x="192.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverlibli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 36.82%)</title><rect x="201" y="116" width="434" height="15" fill="rgb(235,222,17)"/><text x="204.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="631" y="132" width="4" height="15" fill="rgb(212,9,51)"/><text x="634.00" y="142.50"></text></g><g><title>0x7f42fcd1174a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="667" y="164" width="4" height="15" fill="rgb(241,106,35)"/><text x="670.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.34%)</title><rect x="679" y="180" width="4" height="15" fill="rgb(205,3,35)"/><text x="682.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="691" y="244" width="4" height="15" fill="rgb(251,15,45)"/><text x="694.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="691" y="260" width="4" height="15" fill="rgb(224,78,26)"/><text x="694.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.34%)</title><rect x="691" y="276" width="4" height="15" fill="rgb(229,217,13)"/><text x="694.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.34%)</title><rect x="691" y="292" width="4" height="15" fill="rgb(213,189,41)"/><text x="694.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.34%)</title><rect x="691" y="308" width="4" height="15" fill="rgb(222,227,7)"/><text x="694.00" y="318.50"></text></g><g><title>0x7f42fcc5314e (libc-2.29.so) (1 samples, 0.34%)</title><rect x="703" y="308" width="4" height="15" fill="rgb(223,116,20)"/><text x="706.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.01%)</title><rect x="699" y="292" width="12" height="15" fill="rgb(216,50,37)"/><text x="702.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.34%)</title><rect x="707" y="308" width="4" height="15" fill="rgb(212,187,9)"/><text x="710.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="711" y="324" width="4" height="15" fill="rgb(231,179,5)"/><text x="714.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="711" y="340" width="4" height="15" fill="rgb(237,195,9)"/><text x="714.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.68%)</title><rect x="711" y="292" width="8" height="15" fill="rgb(226,193,9)"/><text x="714.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.68%)</title><rect x="711" y="308" width="8" height="15" fill="rgb(239,170,8)"/><text x="714.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="715" y="324" width="4" height="15" fill="rgb(252,4,51)"/><text x="718.00" y="334.50"></text></g><g><title>0x7f42fcbeaa19 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="715" y="340" width="4" height="15" fill="rgb(206,0,2)"/><text x="718.00" y="350.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.34%)</title><rect x="715" y="356" width="4" height="15" fill="rgb(218,72,47)"/><text x="718.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.68%)</title><rect x="719" y="292" width="8" height="15" fill="rgb(209,204,52)"/><text x="722.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.68%)</title><rect x="719" y="308" width="8" height="15" fill="rgb(211,174,30)"/><text x="722.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.68%)</title><rect x="719" y="324" width="8" height="15" fill="rgb(214,54,36)"/><text x="722.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="723" y="340" width="4" height="15" fill="rgb(216,170,24)"/><text x="726.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 3.04%)</title><rect x="695" y="276" width="36" height="15" fill="rgb(238,91,21)"/><text x="698.00" y="286.50">PyU..</text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="727" y="292" width="4" height="15" fill="rgb(249,229,50)"/><text x="730.00" y="302.50"></text></g><g><title>array_sum (methods.c) (13 samples, 4.39%)</title><rect x="683" y="180" width="52" height="15" fill="rgb(215,162,28)"/><text x="686.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (12 samples, 4.05%)</title><rect x="687" y="196" width="48" height="15" fill="rgb(212,114,36)"/><text x="690.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 3.72%)</title><rect x="691" y="212" width="44" height="15" fill="rgb(250,72,46)"/><text x="694.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 3.72%)</title><rect x="691" y="228" width="44" height="15" fill="rgb(211,148,9)"/><text x="694.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 3.38%)</title><rect x="695" y="244" width="40" height="15" fill="rgb(247,78,0)"/><text x="698.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 3.38%)</title><rect x="695" y="260" width="40" height="15" fill="rgb(230,217,8)"/><text x="698.00" y="270.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.34%)</title><rect x="731" y="276" width="4" height="15" fill="rgb(251,198,28)"/><text x="734.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.34%)</title><rect x="739" y="196" width="4" height="15" fill="rgb(246,54,16)"/><text x="742.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.34%)</title><rect x="739" y="212" width="4" height="15" fill="rgb(232,221,48)"/><text x="742.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="739" y="228" width="4" height="15" fill="rgb(226,127,16)"/><text x="742.00" y="238.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="759" y="292" width="4" height="15" fill="rgb(251,149,21)"/><text x="762.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.01%)</title><rect x="755" y="276" width="12" height="15" fill="rgb(237,8,31)"/><text x="758.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.34%)</title><rect x="763" y="292" width="4" height="15" fill="rgb(218,163,37)"/><text x="766.00" y="302.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.34%)</title><rect x="763" y="308" width="4" height="15" fill="rgb(254,12,53)"/><text x="766.00" y="318.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="763" y="324" width="4" height="15" fill="rgb(240,39,2)"/><text x="766.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.68%)</title><rect x="767" y="276" width="8" height="15" fill="rgb(246,85,20)"/><text x="770.00" y="286.50"></text></g><g><title>0x7f42fcc32902 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="771" y="292" width="4" height="15" fill="rgb(232,98,26)"/><text x="774.00" y="302.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.34%)</title><rect x="775" y="276" width="4" height="15" fill="rgb(212,132,24)"/><text x="778.00" y="286.50"></text></g><g><title>array_add (number.c) (10 samples, 3.38%)</title><rect x="743" y="196" width="40" height="15" fill="rgb(235,139,12)"/><text x="746.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 3.04%)</title><rect x="747" y="212" width="36" height="15" fill="rgb(242,46,28)"/><text x="750.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 2.70%)</title><rect x="751" y="228" width="32" height="15" fill="rgb(226,215,27)"/><text x="754.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.36%)</title><rect x="755" y="244" width="28" height="15" fill="rgb(244,12,30)"/><text x="758.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.36%)</title><rect x="755" y="260" width="28" height="15" fill="rgb(237,154,42)"/><text x="758.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.34%)</title><rect x="779" y="276" width="4" height="15" fill="rgb(247,180,43)"/><text x="782.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="779" y="292" width="4" height="15" fill="rgb(254,163,19)"/><text x="782.00" y="302.50"></text></g><g><title>array_transpose_get (getset.c) (1 samples, 0.34%)</title><rect x="783" y="196" width="4" height="15" fill="rgb(235,212,38)"/><text x="786.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.34%)</title><rect x="815" y="212" width="4" height="15" fill="rgb(251,154,40)"/><text x="818.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.68%)</title><rect x="819" y="212" width="8" height="15" fill="rgb(208,104,15)"/><text x="822.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (5 samples, 1.69%)</title><rect x="827" y="212" width="20" height="15" fill="rgb(206,136,50)"/><text x="830.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="855" y="228" width="4" height="15" fill="rgb(229,102,51)"/><text x="858.00" y="238.50"></text></g><g><title>0x7f42fcc48e50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="855" y="244" width="4" height="15" fill="rgb(235,202,42)"/><text x="858.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 1.69%)</title><rect x="847" y="212" width="20" height="15" fill="rgb(228,78,24)"/><text x="850.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.68%)</title><rect x="859" y="228" width="8" height="15" fill="rgb(242,34,18)"/><text x="862.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.69%)</title><rect x="867" y="212" width="20" height="15" fill="rgb(244,110,14)"/><text x="870.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.34%)</title><rect x="883" y="228" width="4" height="15" fill="rgb(207,186,5)"/><text x="886.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.34%)</title><rect x="887" y="212" width="4" height="15" fill="rgb(238,32,27)"/><text x="890.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.68%)</title><rect x="891" y="212" width="7" height="15" fill="rgb(247,222,32)"/><text x="894.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.34%)</title><rect x="910" y="228" width="4" height="15" fill="rgb(238,177,16)"/><text x="913.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 1.69%)</title><rect x="898" y="212" width="20" height="15" fill="rgb(213,28,49)"/><text x="901.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.34%)</title><rect x="914" y="228" width="4" height="15" fill="rgb(223,60,48)"/><text x="917.00" y="238.50"></text></g><g><title>0x7f42fcc48e7a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="914" y="244" width="4" height="15" fill="rgb(236,227,4)"/><text x="917.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (39 samples, 13.18%)</title><rect x="787" y="196" width="155" height="15" fill="rgb(253,158,3)"/><text x="790.00" y="206.50">check_array (sklear..</text></g><g><title>simplefilter (warnings.py) (6 samples, 2.03%)</title><rect x="918" y="212" width="24" height="15" fill="rgb(231,82,36)"/><text x="921.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py) (5 samples, 1.69%)</title><rect x="922" y="228" width="20" height="15" fill="rgb(212,94,47)"/><text x="925.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.68%)</title><rect x="966" y="228" width="8" height="15" fill="rgb(250,209,30)"/><text x="969.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 3.04%)</title><rect x="942" y="196" width="36" height="15" fill="rgb(238,23,32)"/><text x="945.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.69%)</title><rect x="958" y="212" width="20" height="15" fill="rgb(212,140,25)"/><text x="961.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="974" y="228" width="4" height="15" fill="rgb(219,52,25)"/><text x="977.00" y="238.50"></text></g><g><title>0x7f42fcc32902 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="998" y="260" width="4" height="15" fill="rgb(245,110,15)"/><text x="1001.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.34%)</title><rect x="1006" y="308" width="4" height="15" fill="rgb(229,69,31)"/><text x="1009.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1006" y="324" width="4" height="15" fill="rgb(228,146,27)"/><text x="1009.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1006" y="340" width="4" height="15" fill="rgb(224,138,33)"/><text x="1009.00" y="350.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1006" y="356" width="4" height="15" fill="rgb(250,9,14)"/><text x="1009.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.01%)</title><rect x="1002" y="260" width="12" height="15" fill="rgb(236,52,54)"/><text x="1005.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 1.01%)</title><rect x="1002" y="276" width="12" height="15" fill="rgb(252,153,17)"/><text x="1005.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.68%)</title><rect x="1006" y="292" width="8" height="15" fill="rgb(243,207,32)"/><text x="1009.00" y="302.50"></text></g><g><title>broadcast_strides (array_assign.c) (1 samples, 0.34%)</title><rect x="1010" y="308" width="4" height="15" fill="rgb(231,129,41)"/><text x="1013.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (4 samples, 1.35%)</title><rect x="1014" y="260" width="16" height="15" fill="rgb(211,52,4)"/><text x="1017.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.68%)</title><rect x="1022" y="276" width="8" height="15" fill="rgb(208,215,26)"/><text x="1025.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.68%)</title><rect x="1022" y="292" width="8" height="15" fill="rgb(239,64,49)"/><text x="1025.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.68%)</title><rect x="1022" y="308" width="8" height="15" fill="rgb(215,49,14)"/><text x="1025.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.34%)</title><rect x="1030" y="260" width="4" height="15" fill="rgb(220,126,45)"/><text x="1033.00" y="270.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.34%)</title><rect x="1034" y="260" width="4" height="15" fill="rgb(213,192,31)"/><text x="1037.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1038" y="276" width="4" height="15" fill="rgb(207,198,20)"/><text x="1041.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1038" y="292" width="4" height="15" fill="rgb(253,157,52)"/><text x="1041.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="1038" y="308" width="4" height="15" fill="rgb(226,15,50)"/><text x="1041.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.68%)</title><rect x="1038" y="260" width="8" height="15" fill="rgb(252,167,29)"/><text x="1041.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1042" y="276" width="4" height="15" fill="rgb(224,7,18)"/><text x="1045.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1042" y="292" width="4" height="15" fill="rgb(233,171,27)"/><text x="1045.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1042" y="308" width="4" height="15" fill="rgb(212,162,3)"/><text x="1045.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.73%)</title><rect x="994" y="228" width="56" height="15" fill="rgb(251,23,46)"/><text x="997.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 4.73%)</title><rect x="994" y="244" width="56" height="15" fill="rgb(246,130,5)"/><text x="997.00" y="254.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="1046" y="260" width="4" height="15" fill="rgb(243,175,35)"/><text x="1049.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="1046" y="276" width="4" height="15" fill="rgb(209,142,29)"/><text x="1049.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="1046" y="292" width="4" height="15" fill="rgb(240,170,9)"/><text x="1049.00" y="302.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (80 samples, 27.03%)</title><rect x="735" y="180" width="319" height="15" fill="rgb(238,137,47)"/><text x="738.00" y="190.50">decision_function (sklearn/linear_model/_ba..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (19 samples, 6.42%)</title><rect x="978" y="196" width="76" height="15" fill="rgb(234,4,34)"/><text x="981.00" y="206.50">safe_spa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 5.41%)</title><rect x="990" y="212" width="64" height="15" fill="rgb(237,167,10)"/><text x="993.00" y="222.50">ufunc_g..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1050" y="228" width="4" height="15" fill="rgb(206,136,36)"/><text x="1053.00" y="238.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1058" y="260" width="4" height="15" fill="rgb(221,125,34)"/><text x="1061.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1058" y="276" width="4" height="15" fill="rgb(248,177,12)"/><text x="1061.00" y="286.50"></text></g><g><title>0x7f42fcbea7a5 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1058" y="292" width="4" height="15" fill="rgb(229,215,3)"/><text x="1061.00" y="302.50"></text></g><g><title>0x7f42fcc52d50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1058" y="308" width="4" height="15" fill="rgb(221,175,26)"/><text x="1061.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.35%)</title><rect x="1058" y="228" width="16" height="15" fill="rgb(212,217,6)"/><text x="1061.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.35%)</title><rect x="1058" y="244" width="16" height="15" fill="rgb(241,12,30)"/><text x="1061.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 1.01%)</title><rect x="1062" y="260" width="12" height="15" fill="rgb(251,11,49)"/><text x="1065.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (3 samples, 1.01%)</title><rect x="1062" y="276" width="12" height="15" fill="rgb(242,85,42)"/><text x="1065.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (2 samples, 0.68%)</title><rect x="1066" y="292" width="8" height="15" fill="rgb(252,215,17)"/><text x="1069.00" y="302.50"></text></g><g><title>to_128 (npy_extint128.h) (2 samples, 0.68%)</title><rect x="1066" y="308" width="8" height="15" fill="rgb(228,4,4)"/><text x="1069.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.68%)</title><rect x="1074" y="260" width="8" height="15" fill="rgb(231,81,5)"/><text x="1077.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1078" y="276" width="4" height="15" fill="rgb(252,196,14)"/><text x="1081.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1078" y="292" width="4" height="15" fill="rgb(218,92,46)"/><text x="1081.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1078" y="308" width="4" height="15" fill="rgb(250,227,23)"/><text x="1081.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.01%)</title><rect x="1074" y="244" width="12" height="15" fill="rgb(215,104,14)"/><text x="1077.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1082" y="260" width="4" height="15" fill="rgb(237,164,28)"/><text x="1085.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.70%)</title><rect x="1058" y="212" width="32" height="15" fill="rgb(213,150,21)"/><text x="1061.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.35%)</title><rect x="1074" y="228" width="16" height="15" fill="rgb(233,96,33)"/><text x="1077.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.34%)</title><rect x="1086" y="244" width="4" height="15" fill="rgb(237,121,40)"/><text x="1089.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="1086" y="260" width="4" height="15" fill="rgb(224,50,3)"/><text x="1089.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (106 samples, 35.81%)</title><rect x="671" y="164" width="423" height="15" fill="rgb(234,56,36)"/><text x="674.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.38%)</title><rect x="1054" y="180" width="40" height="15" fill="rgb(213,113,7)"/><text x="1057.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 3.38%)</title><rect x="1054" y="196" width="40" height="15" fill="rgb(233,90,21)"/><text x="1057.00" y="206.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1090" y="212" width="4" height="15" fill="rgb(248,166,42)"/><text x="1093.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 3.72%)</title><rect x="1114" y="180" width="44" height="15" fill="rgb(240,66,12)"/><text x="1117.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.01%)</title><rect x="1146" y="196" width="12" height="15" fill="rgb(239,21,15)"/><text x="1149.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (134 samples, 45.27%)</title><rect x="635" y="100" width="535" height="15" fill="rgb(221,7,38)"/><text x="638.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (134 samples, 45.27%)</title><rect x="635" y="116" width="535" height="15" fill="rgb(222,16,41)"/><text x="638.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 44.26%)</title><rect x="647" y="132" width="523" height="15" fill="rgb(253,129,48)"/><text x="650.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (130 samples, 43.92%)</title><rect x="651" y="148" width="519" height="15" fill="rgb(240,32,54)"/><text x="654.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (19 samples, 6.42%)</title><rect x="1094" y="164" width="76" height="15" fill="rgb(238,60,27)"/><text x="1097.00" y="174.50">check_is..</text></g><g><title>isclass (inspect.py) (3 samples, 1.01%)</title><rect x="1158" y="180" width="12" height="15" fill="rgb(233,129,6)"/><text x="1161.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1170" y="308" width="4" height="15" fill="rgb(207,114,14)"/><text x="1173.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/plotting.py) (1 samples, 0.34%)</title><rect x="1170" y="324" width="4" height="15" fill="rgb(213,109,43)"/><text x="1173.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1170" y="340" width="4" height="15" fill="rgb(230,228,53)"/><text x="1173.00" y="350.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (136 samples, 45.95%)</title><rect x="635" y="68" width="543" height="15" fill="rgb(242,87,44)"/><text x="638.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (136 samples, 45.95%)</title><rect x="635" y="84" width="543" height="15" fill="rgb(253,200,43)"/><text x="638.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onn..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.68%)</title><rect x="1170" y="100" width="8" height="15" fill="rgb(221,156,2)"/><text x="1173.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (2 samples, 0.68%)</title><rect x="1170" y="116" width="8" height="15" fill="rgb(250,84,12)"/><text x="1173.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (2 samples, 0.68%)</title><rect x="1170" y="132" width="8" height="15" fill="rgb(225,79,36)"/><text x="1173.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1170" y="148" width="8" height="15" fill="rgb(229,148,11)"/><text x="1173.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1170" y="164" width="8" height="15" fill="rgb(222,73,1)"/><text x="1173.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1170" y="180" width="8" height="15" fill="rgb(244,42,15)"/><text x="1173.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="1170" y="196" width="8" height="15" fill="rgb(227,39,50)"/><text x="1173.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1170" y="212" width="8" height="15" fill="rgb(252,111,44)"/><text x="1173.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (2 samples, 0.68%)</title><rect x="1170" y="228" width="8" height="15" fill="rgb(224,151,7)"/><text x="1173.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1170" y="244" width="8" height="15" fill="rgb(237,80,31)"/><text x="1173.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1170" y="260" width="8" height="15" fill="rgb(208,154,5)"/><text x="1173.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1170" y="276" width="8" height="15" fill="rgb(215,47,39)"/><text x="1173.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="1170" y="292" width="8" height="15" fill="rgb(253,183,28)"/><text x="1173.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1174" y="308" width="4" height="15" fill="rgb(238,8,20)"/><text x="1177.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1174" y="324" width="4" height="15" fill="rgb(222,9,48)"/><text x="1177.00" y="334.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="1174" y="340" width="4" height="15" fill="rgb(210,147,11)"/><text x="1177.00" y="350.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="1178" y="148" width="4" height="15" fill="rgb(233,92,7)"/><text x="1181.00" y="158.50"></text></g><g><title>0x7f42ef50da66 (?) (1 samples, 0.34%)</title><rect x="1178" y="164" width="4" height="15" fill="rgb(245,229,11)"/><text x="1181.00" y="174.50"></text></g><g><title>0x7f42ef4ff579 (?) (1 samples, 0.34%)</title><rect x="1178" y="180" width="4" height="15" fill="rgb(239,139,10)"/><text x="1181.00" y="190.50"></text></g><g><title>0x7f42eee40017 (?) (1 samples, 0.34%)</title><rect x="1178" y="196" width="4" height="15" fill="rgb(245,145,51)"/><text x="1181.00" y="206.50"></text></g><g><title>0x7f42eebd7aa9 (?) (1 samples, 0.34%)</title><rect x="1178" y="212" width="4" height="15" fill="rgb(215,38,16)"/><text x="1181.00" y="222.50"></text></g><g><title>0x7f42eebc8d1f (?) (1 samples, 0.34%)</title><rect x="1178" y="228" width="4" height="15" fill="rgb(208,100,53)"/><text x="1181.00" y="238.50"></text></g><g><title>0x7f42eebcf76f (?) (1 samples, 0.34%)</title><rect x="1178" y="244" width="4" height="15" fill="rgb(244,144,25)"/><text x="1181.00" y="254.50"></text></g><g><title>0x7f42eebe2100 (?) (1 samples, 0.34%)</title><rect x="1178" y="260" width="4" height="15" fill="rgb(239,170,51)"/><text x="1181.00" y="270.50"></text></g><g><title>0x7f42eebd70b6 (?) (1 samples, 0.34%)</title><rect x="1178" y="276" width="4" height="15" fill="rgb(238,75,2)"/><text x="1181.00" y="286.50"></text></g><g><title>0x7f42eebd6d6a (?) (1 samples, 0.34%)</title><rect x="1178" y="292" width="4" height="15" fill="rgb(207,101,15)"/><text x="1181.00" y="302.50"></text></g><g><title>getrandbits (random.py) (1 samples, 0.34%)</title><rect x="1178" y="308" width="4" height="15" fill="rgb(225,154,20)"/><text x="1181.00" y="318.50"></text></g><g><title>os_urandom (python3.7) (1 samples, 0.34%)</title><rect x="1178" y="324" width="4" height="15" fill="rgb(233,198,31)"/><text x="1181.00" y="334.50"></text></g><g><title>syscall (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1178" y="340" width="4" height="15" fill="rgb(252,13,2)"/><text x="1181.00" y="350.50"></text></g><g><title>compute_class_weight (sklearn/utils/class_weight.py) (1 samples, 0.34%)</title><rect x="1182" y="148" width="4" height="15" fill="rgb(252,89,45)"/><text x="1185.00" y="158.50"></text></g><g><title>all (296 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,144,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (296 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(246,228,27)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py) (3 samples, 1.01%)</title><rect x="1178" y="68" width="12" height="15" fill="rgb(206,207,24)"/><text x="1181.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (3 samples, 1.01%)</title><rect x="1178" y="84" width="12" height="15" fill="rgb(248,59,11)"/><text x="1181.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.01%)</title><rect x="1178" y="100" width="12" height="15" fill="rgb(249,178,0)"/><text x="1181.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py) (3 samples, 1.01%)</title><rect x="1178" y="116" width="12" height="15" fill="rgb(226,226,35)"/><text x="1181.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py) (3 samples, 1.01%)</title><rect x="1178" y="132" width="12" height="15" fill="rgb(252,161,36)"/><text x="1181.00" y="142.50"></text></g><g><title>fit_transform (sklearn/preprocessing/_label.py) (1 samples, 0.34%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(236,7,12)"/><text x="1189.00" y="158.50"></text></g><g><title>_encode (sklearn/preprocessing/_label.py) (1 samples, 0.34%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(205,191,54)"/><text x="1189.00" y="174.50"></text></g><g><title>_encode_numpy (sklearn/preprocessing/_label.py) (1 samples, 0.34%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(214,96,10)"/><text x="1189.00" y="190.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (1 samples, 0.34%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(211,20,33)"/><text x="1189.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.34%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(239,142,43)"/><text x="1189.00" y="222.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (1 samples, 0.34%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(238,6,26)"/><text x="1189.00" y="238.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (1 samples, 0.34%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(217,39,0)"/><text x="1189.00" y="254.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (1 samples, 0.34%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(230,53,16)"/><text x="1189.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.34%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(220,151,28)"/><text x="1189.00" y="286.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(221,84,17)"/><text x="1189.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(213,18,9)"/><text x="1189.00" y="318.50"></text></g><g><title>array_cumsum (methods.c) (1 samples, 0.34%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(245,193,0)"/><text x="1189.00" y="334.50"></text></g><g><title>PyArray_CumSum (calculation.c) (1 samples, 0.34%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(219,190,51)"/><text x="1189.00" y="350.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (1 samples, 0.34%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(242,1,47)"/><text x="1189.00" y="366.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(242,219,3)"/><text x="1189.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(215,146,18)"/><text x="1189.00" y="398.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1186" y="404" width="4" height="15" fill="rgb(250,92,34)"/><text x="1189.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1186" y="420" width="4" height="15" fill="rgb(234,96,51)"/><text x="1189.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1186" y="436" width="4" height="15" fill="rgb(232,121,25)"/><text x="1189.00" y="446.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1186" y="452" width="4" height="15" fill="rgb(216,69,18)"/><text x="1189.00" y="462.50"></text></g></g></svg>