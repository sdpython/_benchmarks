<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1862" onload="init(evt)" viewBox="0 0 1200 1862" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1862" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1845.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1845.00"> </text><g id="frames"><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.12%)</title><rect x="10" y="1156" width="1" height="15" fill="rgb(210,15,22)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1172" width="1" height="15" fill="rgb(224,109,46)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1188" width="1" height="15" fill="rgb(242,39,31)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1204" width="1" height="15" fill="rgb(238,223,28)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1220" width="1" height="15" fill="rgb(210,83,22)"/><text x="13.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1236" width="1" height="15" fill="rgb(237,65,8)"/><text x="13.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="1252" width="1" height="15" fill="rgb(251,55,23)"/><text x="13.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1268" width="1" height="15" fill="rgb(247,71,45)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1284" width="1" height="15" fill="rgb(214,101,43)"/><text x="13.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1300" width="1" height="15" fill="rgb(250,91,31)"/><text x="13.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1316" width="1" height="15" fill="rgb(230,19,24)"/><text x="13.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1332" width="1" height="15" fill="rgb(235,172,40)"/><text x="13.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/_hashing.py) (1 samples, 0.12%)</title><rect x="10" y="1348" width="1" height="15" fill="rgb(232,124,31)"/><text x="13.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1364" width="1" height="15" fill="rgb(210,208,24)"/><text x="13.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1380" width="1" height="15" fill="rgb(208,213,49)"/><text x="13.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1396" width="1" height="15" fill="rgb(218,129,43)"/><text x="13.00" y="1406.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1412" width="1" height="15" fill="rgb(242,179,14)"/><text x="13.00" y="1422.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1428" width="1" height="15" fill="rgb(244,188,45)"/><text x="13.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1444" width="1" height="15" fill="rgb(243,205,43)"/><text x="13.00" y="1454.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1460" width="1" height="15" fill="rgb(212,14,38)"/><text x="13.00" y="1470.50"></text></g><g><title>0x7fd416ae2995 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1476" width="1" height="15" fill="rgb(217,158,54)"/><text x="13.00" y="1486.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1492" width="1" height="15" fill="rgb(208,123,47)"/><text x="13.00" y="1502.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1508" width="1" height="15" fill="rgb(247,39,54)"/><text x="13.00" y="1518.50"></text></g><g><title>0x7fd416ae2258 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1524" width="1" height="15" fill="rgb(248,221,12)"/><text x="13.00" y="1534.50"></text></g><g><title>0x7fd416b2fd7a (ld-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1540" width="1" height="15" fill="rgb(246,199,10)"/><text x="13.00" y="1550.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1556" width="1" height="15" fill="rgb(229,21,53)"/><text x="13.00" y="1566.50"></text></g><g><title>0x7fd416b301f0 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1572" width="1" height="15" fill="rgb(214,214,11)"/><text x="13.00" y="1582.50"></text></g><g><title>0x7fd416b2a876 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1588" width="1" height="15" fill="rgb(217,66,20)"/><text x="13.00" y="1598.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1604" width="1" height="15" fill="rgb(247,216,28)"/><text x="13.00" y="1614.50"></text></g><g><title>0x7fd416b2a501 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1620" width="1" height="15" fill="rgb(237,185,11)"/><text x="13.00" y="1630.50"></text></g><g><title>0x7fd416b25ad9 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1636" width="1" height="15" fill="rgb(205,185,53)"/><text x="13.00" y="1646.50"></text></g><g><title>0x7fd416b2d4c5 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1652" width="1" height="15" fill="rgb(253,27,54)"/><text x="13.00" y="1662.50"></text></g><g><title>0x7fd416b393f8 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1668" width="1" height="15" fill="rgb(233,193,17)"/><text x="13.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(253,159,50)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(223,72,30)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(249,39,8)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(222,0,15)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="1044" width="2" height="15" fill="rgb(212,192,37)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.24%)</title><rect x="10" y="1060" width="2" height="15" fill="rgb(211,199,28)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="1076" width="2" height="15" fill="rgb(233,115,20)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="1092" width="2" height="15" fill="rgb(226,172,53)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="1108" width="2" height="15" fill="rgb(236,116,54)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="10" y="1124" width="2" height="15" fill="rgb(250,201,33)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="10" y="1140" width="2" height="15" fill="rgb(246,88,4)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.12%)</title><rect x="11" y="1156" width="1" height="15" fill="rgb(213,144,24)"/><text x="14.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1172" width="1" height="15" fill="rgb(229,141,2)"/><text x="14.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1188" width="1" height="15" fill="rgb(245,154,0)"/><text x="14.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1204" width="1" height="15" fill="rgb(229,101,40)"/><text x="14.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="11" y="1220" width="1" height="15" fill="rgb(249,33,20)"/><text x="14.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1236" width="1" height="15" fill="rgb(220,45,30)"/><text x="14.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.12%)</title><rect x="11" y="1252" width="1" height="15" fill="rgb(212,140,7)"/><text x="14.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1268" width="1" height="15" fill="rgb(243,107,11)"/><text x="14.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1284" width="1" height="15" fill="rgb(249,29,48)"/><text x="14.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1300" width="1" height="15" fill="rgb(230,133,26)"/><text x="14.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="11" y="1316" width="1" height="15" fill="rgb(239,108,23)"/><text x="14.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1332" width="1" height="15" fill="rgb(227,13,50)"/><text x="14.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.12%)</title><rect x="11" y="1348" width="1" height="15" fill="rgb(243,132,19)"/><text x="14.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1364" width="1" height="15" fill="rgb(216,119,50)"/><text x="14.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1380" width="1" height="15" fill="rgb(216,132,43)"/><text x="14.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1396" width="1" height="15" fill="rgb(229,105,23)"/><text x="14.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="11" y="1412" width="1" height="15" fill="rgb(236,99,54)"/><text x="14.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1428" width="1" height="15" fill="rgb(247,152,23)"/><text x="14.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.12%)</title><rect x="11" y="1444" width="1" height="15" fill="rgb(208,96,53)"/><text x="14.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1460" width="1" height="15" fill="rgb(222,103,26)"/><text x="14.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1476" width="1" height="15" fill="rgb(207,86,48)"/><text x="14.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1492" width="1" height="15" fill="rgb(225,184,8)"/><text x="14.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="11" y="1508" width="1" height="15" fill="rgb(251,52,0)"/><text x="14.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1524" width="1" height="15" fill="rgb(217,156,48)"/><text x="14.00" y="1534.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.12%)</title><rect x="11" y="1540" width="1" height="15" fill="rgb(244,126,42)"/><text x="14.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1556" width="1" height="15" fill="rgb(232,218,43)"/><text x="14.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1572" width="1" height="15" fill="rgb(249,9,5)"/><text x="14.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1588" width="1" height="15" fill="rgb(206,123,19)"/><text x="14.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="11" y="1604" width="1" height="15" fill="rgb(248,112,9)"/><text x="14.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="11" y="1620" width="1" height="15" fill="rgb(254,9,42)"/><text x="14.00" y="1630.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_theil_sen.py) (1 samples, 0.12%)</title><rect x="11" y="1636" width="1" height="15" fill="rgb(245,156,2)"/><text x="14.00" y="1646.50"></text></g><g><title>TheilSenRegressor (sklearn/linear_model/_theil_sen.py) (1 samples, 0.12%)</title><rect x="11" y="1652" width="1" height="15" fill="rgb(211,4,50)"/><text x="14.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(225,24,26)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(216,25,26)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(212,146,10)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(217,209,8)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(219,1,38)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(250,162,16)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.37%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(229,157,31)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(246,38,25)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(240,199,36)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(219,112,10)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(239,33,6)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(207,159,21)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.37%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(253,217,51)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(240,214,34)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(208,136,20)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(224,19,42)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(231,145,37)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(239,204,3)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.37%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(224,149,24)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(221,20,5)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(237,144,27)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(216,128,48)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(249,129,17)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(226,206,51)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.37%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(208,2,52)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(240,50,22)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(244,96,8)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(209,186,4)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(224,206,51)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(218,94,45)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(239,0,15)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(212,23,17)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(241,218,22)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.37%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(213,100,5)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(208,136,42)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(210,117,50)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(205,20,17)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(237,220,12)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(239,163,36)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.37%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(238,92,48)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(235,217,4)"/><text x="15.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(214,19,24)"/><text x="15.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(231,103,51)"/><text x="15.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1028" width="2" height="15" fill="rgb(233,47,4)"/><text x="15.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1044" width="2" height="15" fill="rgb(225,175,16)"/><text x="15.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="12" y="1060" width="2" height="15" fill="rgb(226,54,35)"/><text x="15.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1076" width="2" height="15" fill="rgb(229,72,33)"/><text x="15.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="1092" width="2" height="15" fill="rgb(229,195,35)"/><text x="15.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1108" width="2" height="15" fill="rgb(218,205,0)"/><text x="15.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1124" width="2" height="15" fill="rgb(237,182,13)"/><text x="15.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1140" width="2" height="15" fill="rgb(231,139,15)"/><text x="15.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1156" width="2" height="15" fill="rgb(231,67,30)"/><text x="15.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1172" width="2" height="15" fill="rgb(210,222,37)"/><text x="15.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="12" y="1188" width="2" height="15" fill="rgb(217,175,18)"/><text x="15.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1204" width="2" height="15" fill="rgb(206,14,37)"/><text x="15.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.12%)</title><rect x="12" y="1220" width="2" height="15" fill="rgb(221,69,8)"/><text x="15.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1236" width="2" height="15" fill="rgb(214,38,45)"/><text x="15.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1252" width="2" height="15" fill="rgb(210,204,0)"/><text x="15.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1268" width="2" height="15" fill="rgb(253,36,43)"/><text x="15.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="12" y="1284" width="2" height="15" fill="rgb(225,58,0)"/><text x="15.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="12" y="1300" width="2" height="15" fill="rgb(220,120,45)"/><text x="15.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.12%)</title><rect x="12" y="1316" width="2" height="15" fill="rgb(254,125,40)"/><text x="15.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.12%)</title><rect x="12" y="1332" width="2" height="15" fill="rgb(222,126,7)"/><text x="15.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.12%)</title><rect x="12" y="1348" width="2" height="15" fill="rgb(230,88,20)"/><text x="15.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.12%)</title><rect x="12" y="1364" width="2" height="15" fill="rgb(221,147,4)"/><text x="15.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.12%)</title><rect x="12" y="1380" width="2" height="15" fill="rgb(251,123,44)"/><text x="15.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.12%)</title><rect x="12" y="1396" width="2" height="15" fill="rgb(219,172,19)"/><text x="15.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="12" y="1412" width="2" height="15" fill="rgb(210,22,46)"/><text x="15.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.12%)</title><rect x="12" y="1428" width="2" height="15" fill="rgb(244,111,33)"/><text x="15.00" y="1438.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.12%)</title><rect x="12" y="1444" width="2" height="15" fill="rgb(232,141,13)"/><text x="15.00" y="1454.50"></text></g><g><title>0x7fd4069160e9 (?) (1 samples, 0.12%)</title><rect x="12" y="1460" width="2" height="15" fill="rgb(235,64,41)"/><text x="15.00" y="1470.50"></text></g><g><title>0x7fd4069185b8 (?) (1 samples, 0.12%)</title><rect x="12" y="1476" width="2" height="15" fill="rgb(253,120,7)"/><text x="15.00" y="1486.50"></text></g><g><title>0x7fd40690f74d (?) (1 samples, 0.12%)</title><rect x="12" y="1492" width="2" height="15" fill="rgb(230,128,26)"/><text x="15.00" y="1502.50"></text></g><g><title>0x7fd40690f566 (?) (1 samples, 0.12%)</title><rect x="12" y="1508" width="2" height="15" fill="rgb(237,96,15)"/><text x="15.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="628" width="1" height="15" fill="rgb(206,88,19)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="644" width="1" height="15" fill="rgb(230,196,22)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="660" width="1" height="15" fill="rgb(234,126,10)"/><text x="17.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="676" width="1" height="15" fill="rgb(233,96,0)"/><text x="17.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="14" y="692" width="1" height="15" fill="rgb(243,133,54)"/><text x="17.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="708" width="1" height="15" fill="rgb(247,101,37)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="724" width="1" height="15" fill="rgb(223,43,6)"/><text x="17.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="740" width="1" height="15" fill="rgb(224,166,44)"/><text x="17.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="756" width="1" height="15" fill="rgb(205,129,48)"/><text x="17.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="772" width="1" height="15" fill="rgb(207,185,42)"/><text x="17.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="14" y="788" width="1" height="15" fill="rgb(234,223,19)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="804" width="1" height="15" fill="rgb(241,163,44)"/><text x="17.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.12%)</title><rect x="14" y="820" width="1" height="15" fill="rgb(223,130,23)"/><text x="17.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="836" width="1" height="15" fill="rgb(208,155,36)"/><text x="17.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="852" width="1" height="15" fill="rgb(253,159,50)"/><text x="17.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(215,92,33)"/><text x="17.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(236,64,13)"/><text x="17.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(207,165,13)"/><text x="17.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(243,45,42)"/><text x="17.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(238,192,54)"/><text x="17.00" y="942.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.12%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(223,9,43)"/><text x="17.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(215,55,30)"/><text x="17.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="980" width="1" height="15" fill="rgb(220,88,4)"/><text x="17.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="14" y="996" width="1" height="15" fill="rgb(240,180,44)"/><text x="17.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="14" y="1012" width="1" height="15" fill="rgb(207,48,21)"/><text x="17.00" y="1022.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="14" y="1028" width="1" height="15" fill="rgb(225,43,3)"/><text x="17.00" y="1038.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="14" y="1044" width="1" height="15" fill="rgb(219,86,49)"/><text x="17.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.12%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(242,216,50)"/><text x="18.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(214,47,36)"/><text x="18.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(209,226,5)"/><text x="18.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(225,146,18)"/><text x="18.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(233,204,9)"/><text x="18.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(246,122,29)"/><text x="18.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.12%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(205,210,39)"/><text x="18.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(254,227,34)"/><text x="18.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(245,201,10)"/><text x="18.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(215,184,33)"/><text x="18.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(212,25,28)"/><text x="18.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(239,8,23)"/><text x="18.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.12%)</title><rect x="15" y="1156" width="2" height="15" fill="rgb(242,215,33)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1172" width="2" height="15" fill="rgb(231,134,43)"/><text x="18.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(212,73,7)"/><text x="18.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(239,151,21)"/><text x="18.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(242,88,33)"/><text x="18.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(243,108,37)"/><text x="18.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.12%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(219,100,36)"/><text x="18.00" y="1262.50"></text></g><g><title>IntervalIndex (pandas/core/indexes/interval.py) (1 samples, 0.12%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(226,88,33)"/><text x="18.00" y="1278.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.12%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(208,79,20)"/><text x="18.00" y="1294.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.12%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(241,214,36)"/><text x="18.00" y="1310.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="15" y="1316" width="2" height="15" fill="rgb(235,225,17)"/><text x="18.00" y="1326.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.12%)</title><rect x="17" y="1508" width="1" height="15" fill="rgb(217,1,37)"/><text x="20.00" y="1518.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.12%)</title><rect x="17" y="1524" width="1" height="15" fill="rgb(245,146,44)"/><text x="20.00" y="1534.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.12%)</title><rect x="17" y="1540" width="1" height="15" fill="rgb(226,207,43)"/><text x="20.00" y="1550.50"></text></g><g><title>__contains__ (_collections_abc.py) (1 samples, 0.12%)</title><rect x="17" y="1556" width="1" height="15" fill="rgb(240,118,22)"/><text x="20.00" y="1566.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="18" y="1764" width="2" height="15" fill="rgb(244,197,46)"/><text x="21.00" y="1774.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="18" y="1780" width="2" height="15" fill="rgb(250,210,23)"/><text x="21.00" y="1790.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (5 samples, 0.61%)</title><rect x="14" y="580" width="7" height="15" fill="rgb(247,161,11)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.61%)</title><rect x="14" y="596" width="7" height="15" fill="rgb(214,150,19)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.61%)</title><rect x="14" y="612" width="7" height="15" fill="rgb(217,92,53)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="628" width="6" height="15" fill="rgb(232,198,39)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="15" y="644" width="6" height="15" fill="rgb(208,198,28)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="660" width="6" height="15" fill="rgb(221,49,19)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 0.49%)</title><rect x="15" y="676" width="6" height="15" fill="rgb(220,138,41)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="692" width="6" height="15" fill="rgb(246,59,24)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="708" width="6" height="15" fill="rgb(207,202,38)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="724" width="6" height="15" fill="rgb(224,181,17)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="15" y="740" width="6" height="15" fill="rgb(210,52,2)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="756" width="6" height="15" fill="rgb(216,140,27)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 0.49%)</title><rect x="15" y="772" width="6" height="15" fill="rgb(212,83,48)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="788" width="6" height="15" fill="rgb(213,108,28)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="804" width="6" height="15" fill="rgb(211,59,44)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="820" width="6" height="15" fill="rgb(218,60,45)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="15" y="836" width="6" height="15" fill="rgb(224,77,30)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="852" width="6" height="15" fill="rgb(229,228,10)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 0.49%)</title><rect x="15" y="868" width="6" height="15" fill="rgb(211,206,0)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="884" width="6" height="15" fill="rgb(248,179,51)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="900" width="6" height="15" fill="rgb(214,117,40)"/><text x="18.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="916" width="6" height="15" fill="rgb(233,20,24)"/><text x="18.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="15" y="932" width="6" height="15" fill="rgb(209,121,6)"/><text x="18.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="15" y="948" width="6" height="15" fill="rgb(224,93,44)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.37%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(246,72,24)"/><text x="20.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(217,145,25)"/><text x="20.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(253,77,34)"/><text x="20.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(233,31,3)"/><text x="20.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="17" y="1028" width="4" height="15" fill="rgb(224,7,5)"/><text x="20.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1044" width="4" height="15" fill="rgb(213,25,9)"/><text x="20.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.37%)</title><rect x="17" y="1060" width="4" height="15" fill="rgb(251,222,49)"/><text x="20.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1076" width="4" height="15" fill="rgb(236,2,52)"/><text x="20.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1092" width="4" height="15" fill="rgb(249,117,34)"/><text x="20.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1108" width="4" height="15" fill="rgb(214,211,43)"/><text x="20.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="17" y="1124" width="4" height="15" fill="rgb(220,44,17)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1140" width="4" height="15" fill="rgb(235,0,7)"/><text x="20.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.37%)</title><rect x="17" y="1156" width="4" height="15" fill="rgb(221,195,24)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1172" width="4" height="15" fill="rgb(250,37,49)"/><text x="20.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1188" width="4" height="15" fill="rgb(249,7,25)"/><text x="20.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1204" width="4" height="15" fill="rgb(254,72,53)"/><text x="20.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="17" y="1220" width="4" height="15" fill="rgb(252,72,24)"/><text x="20.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1236" width="4" height="15" fill="rgb(247,28,22)"/><text x="20.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.37%)</title><rect x="17" y="1252" width="4" height="15" fill="rgb(243,43,31)"/><text x="20.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1268" width="4" height="15" fill="rgb(221,92,6)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1284" width="4" height="15" fill="rgb(207,216,27)"/><text x="20.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1300" width="4" height="15" fill="rgb(233,172,54)"/><text x="20.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="17" y="1316" width="4" height="15" fill="rgb(214,175,45)"/><text x="20.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1332" width="4" height="15" fill="rgb(241,123,18)"/><text x="20.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.37%)</title><rect x="17" y="1348" width="4" height="15" fill="rgb(205,226,40)"/><text x="20.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1364" width="4" height="15" fill="rgb(223,83,38)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1380" width="4" height="15" fill="rgb(227,181,4)"/><text x="20.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1396" width="4" height="15" fill="rgb(229,69,9)"/><text x="20.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1412" width="4" height="15" fill="rgb(222,91,14)"/><text x="20.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1428" width="4" height="15" fill="rgb(241,211,20)"/><text x="20.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1444" width="4" height="15" fill="rgb(222,141,30)"/><text x="20.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.37%)</title><rect x="17" y="1460" width="4" height="15" fill="rgb(254,42,49)"/><text x="20.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.37%)</title><rect x="17" y="1476" width="4" height="15" fill="rgb(223,85,11)"/><text x="20.00" y="1486.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (3 samples, 0.37%)</title><rect x="17" y="1492" width="4" height="15" fill="rgb(242,47,54)"/><text x="20.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1508" width="3" height="15" fill="rgb(209,28,26)"/><text x="21.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1524" width="3" height="15" fill="rgb(252,115,20)"/><text x="21.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1540" width="3" height="15" fill="rgb(254,17,39)"/><text x="21.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1556" width="3" height="15" fill="rgb(210,153,31)"/><text x="21.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1572" width="3" height="15" fill="rgb(226,57,33)"/><text x="21.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="18" y="1588" width="3" height="15" fill="rgb(226,8,37)"/><text x="21.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1604" width="3" height="15" fill="rgb(239,126,51)"/><text x="21.00" y="1614.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (2 samples, 0.24%)</title><rect x="18" y="1620" width="3" height="15" fill="rgb(222,6,24)"/><text x="21.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1636" width="3" height="15" fill="rgb(217,178,38)"/><text x="21.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1652" width="3" height="15" fill="rgb(253,228,35)"/><text x="21.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1668" width="3" height="15" fill="rgb(214,1,13)"/><text x="21.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="18" y="1684" width="3" height="15" fill="rgb(241,219,2)"/><text x="21.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1700" width="3" height="15" fill="rgb(233,145,53)"/><text x="21.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py) (2 samples, 0.24%)</title><rect x="18" y="1716" width="3" height="15" fill="rgb(246,205,47)"/><text x="21.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1732" width="3" height="15" fill="rgb(246,222,35)"/><text x="21.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1748" width="3" height="15" fill="rgb(222,151,24)"/><text x="21.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="20" y="1764" width="1" height="15" fill="rgb(228,64,40)"/><text x="23.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="20" y="1780" width="1" height="15" fill="rgb(228,187,41)"/><text x="23.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="20" y="1796" width="1" height="15" fill="rgb(243,127,39)"/><text x="23.00" y="1806.50"></text></g><g><title>&lt;module&gt; (matplotlib/_color_data.py) (1 samples, 0.12%)</title><rect x="20" y="1812" width="1" height="15" fill="rgb(213,193,45)"/><text x="23.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 1.10%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(253,136,11)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.10%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(209,143,37)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.10%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(221,139,14)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="340" width="8" height="15" fill="rgb(206,212,53)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="14" y="356" width="8" height="15" fill="rgb(239,19,11)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="372" width="8" height="15" fill="rgb(221,94,9)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 0.73%)</title><rect x="14" y="388" width="8" height="15" fill="rgb(220,100,10)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="404" width="8" height="15" fill="rgb(232,101,31)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="420" width="8" height="15" fill="rgb(222,12,5)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="436" width="8" height="15" fill="rgb(236,109,48)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="14" y="452" width="8" height="15" fill="rgb(211,136,30)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="468" width="8" height="15" fill="rgb(209,65,31)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (6 samples, 0.73%)</title><rect x="14" y="484" width="8" height="15" fill="rgb(239,201,32)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="500" width="8" height="15" fill="rgb(207,16,29)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="516" width="8" height="15" fill="rgb(230,60,37)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="532" width="8" height="15" fill="rgb(246,220,41)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="14" y="548" width="8" height="15" fill="rgb(226,181,16)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="14" y="564" width="8" height="15" fill="rgb(243,42,8)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/api.py) (1 samples, 0.12%)</title><rect x="21" y="580" width="1" height="15" fill="rgb(228,195,15)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="596" width="1" height="15" fill="rgb(213,22,16)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="612" width="1" height="15" fill="rgb(225,149,0)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="628" width="1" height="15" fill="rgb(241,112,47)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="644" width="1" height="15" fill="rgb(228,5,20)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="660" width="1" height="15" fill="rgb(238,221,37)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/eval.py) (1 samples, 0.12%)</title><rect x="21" y="676" width="1" height="15" fill="rgb(241,110,44)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="692" width="1" height="15" fill="rgb(240,69,45)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="708" width="1" height="15" fill="rgb(214,153,18)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(223,161,27)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(219,137,53)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(232,71,19)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/engines.py) (1 samples, 0.12%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(230,31,33)"/><text x="24.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(254,90,12)"/><text x="24.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(254,211,25)"/><text x="24.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(218,92,32)"/><text x="24.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(227,159,10)"/><text x="24.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(235,34,48)"/><text x="24.00" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(248,228,6)"/><text x="24.00" y="878.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(223,135,35)"/><text x="25.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(226,38,22)"/><text x="25.00" y="926.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.12%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(215,61,1)"/><text x="25.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(232,34,23)"/><text x="25.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(251,35,40)"/><text x="25.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="24" y="900" width="1" height="15" fill="rgb(239,102,45)"/><text x="27.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="24" y="916" width="1" height="15" fill="rgb(241,225,23)"/><text x="27.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="24" y="932" width="1" height="15" fill="rgb(217,90,42)"/><text x="27.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(229,36,6)"/><text x="28.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="884" width="2" height="15" fill="rgb(234,38,14)"/><text x="28.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="900" width="2" height="15" fill="rgb(228,109,49)"/><text x="28.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(214,173,23)"/><text x="28.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(249,27,8)"/><text x="28.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(209,107,18)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(254,85,24)"/><text x="28.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(241,57,11)"/><text x="28.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="25" y="996" width="2" height="15" fill="rgb(251,16,52)"/><text x="28.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="25" y="1012" width="2" height="15" fill="rgb(214,104,1)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="27" y="916" width="1" height="15" fill="rgb(253,91,49)"/><text x="30.00" y="926.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="27" y="932" width="1" height="15" fill="rgb(247,215,51)"/><text x="30.00" y="942.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="27" y="948" width="1" height="15" fill="rgb(216,28,12)"/><text x="30.00" y="958.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.61%)</title><rect x="22" y="836" width="8" height="15" fill="rgb(221,211,26)"/><text x="25.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.61%)</title><rect x="22" y="852" width="8" height="15" fill="rgb(226,123,53)"/><text x="25.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(208,79,31)"/><text x="30.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(248,198,25)"/><text x="30.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(213,229,33)"/><text x="30.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(233,228,32)"/><text x="31.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(254,78,22)"/><text x="31.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.84%)</title><rect x="10" y="196" width="21" height="15" fill="rgb(234,162,51)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.84%)</title><rect x="10" y="212" width="21" height="15" fill="rgb(240,213,52)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.84%)</title><rect x="10" y="228" width="21" height="15" fill="rgb(250,6,10)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.84%)</title><rect x="10" y="244" width="21" height="15" fill="rgb(239,202,4)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.84%)</title><rect x="10" y="260" width="21" height="15" fill="rgb(233,178,47)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.84%)</title><rect x="10" y="276" width="21" height="15" fill="rgb(209,210,32)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.73%)</title><rect x="22" y="292" width="9" height="15" fill="rgb(219,129,22)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="308" width="9" height="15" fill="rgb(214,24,21)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="324" width="9" height="15" fill="rgb(210,149,54)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="340" width="9" height="15" fill="rgb(224,13,50)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="22" y="356" width="9" height="15" fill="rgb(246,14,34)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="372" width="9" height="15" fill="rgb(247,42,24)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.73%)</title><rect x="22" y="388" width="9" height="15" fill="rgb(233,91,17)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="404" width="9" height="15" fill="rgb(241,100,27)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="420" width="9" height="15" fill="rgb(219,30,4)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="436" width="9" height="15" fill="rgb(209,72,21)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="22" y="452" width="9" height="15" fill="rgb(245,158,51)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="468" width="9" height="15" fill="rgb(248,68,6)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.73%)</title><rect x="22" y="484" width="9" height="15" fill="rgb(219,204,20)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="500" width="9" height="15" fill="rgb(213,199,43)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="516" width="9" height="15" fill="rgb(230,51,1)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="532" width="9" height="15" fill="rgb(210,4,52)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="22" y="548" width="9" height="15" fill="rgb(247,194,5)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="564" width="9" height="15" fill="rgb(219,209,10)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.73%)</title><rect x="22" y="580" width="9" height="15" fill="rgb(208,200,47)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="596" width="9" height="15" fill="rgb(240,111,34)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="612" width="9" height="15" fill="rgb(219,80,10)"/><text x="25.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="628" width="9" height="15" fill="rgb(216,2,50)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="644" width="9" height="15" fill="rgb(215,68,28)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="660" width="9" height="15" fill="rgb(245,9,0)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="676" width="9" height="15" fill="rgb(216,47,17)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="22" y="692" width="9" height="15" fill="rgb(219,35,9)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="708" width="9" height="15" fill="rgb(235,142,41)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.73%)</title><rect x="22" y="724" width="9" height="15" fill="rgb(217,76,12)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="740" width="9" height="15" fill="rgb(247,138,14)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="756" width="9" height="15" fill="rgb(206,112,27)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="772" width="9" height="15" fill="rgb(231,23,48)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.73%)</title><rect x="22" y="788" width="9" height="15" fill="rgb(239,118,52)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.73%)</title><rect x="22" y="804" width="9" height="15" fill="rgb(236,184,22)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.73%)</title><rect x="22" y="820" width="9" height="15" fill="rgb(213,143,7)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="30" y="836" width="1" height="15" fill="rgb(207,31,34)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="30" y="852" width="1" height="15" fill="rgb(244,99,35)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="30" y="868" width="1" height="15" fill="rgb(253,189,11)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="30" y="884" width="1" height="15" fill="rgb(234,132,28)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="30" y="900" width="1" height="15" fill="rgb(237,10,47)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.12%)</title><rect x="30" y="916" width="1" height="15" fill="rgb(227,135,26)"/><text x="33.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.12%)</title><rect x="30" y="932" width="1" height="15" fill="rgb(249,111,23)"/><text x="33.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.12%)</title><rect x="30" y="948" width="1" height="15" fill="rgb(210,217,9)"/><text x="33.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="30" y="964" width="1" height="15" fill="rgb(250,180,22)"/><text x="33.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="980" width="1" height="15" fill="rgb(223,227,46)"/><text x="33.00" y="990.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="996" width="1" height="15" fill="rgb(248,42,14)"/><text x="33.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="1012" width="1" height="15" fill="rgb(212,223,4)"/><text x="33.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="1028" width="1" height="15" fill="rgb(224,57,25)"/><text x="33.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="1044" width="1" height="15" fill="rgb(221,46,11)"/><text x="33.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="1060" width="1" height="15" fill="rgb(210,138,43)"/><text x="33.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="1076" width="1" height="15" fill="rgb(222,212,40)"/><text x="33.00" y="1086.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.12%)</title><rect x="30" y="1092" width="1" height="15" fill="rgb(216,195,1)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.12%)</title><rect x="31" y="244" width="2" height="15" fill="rgb(248,172,23)"/><text x="34.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="260" width="2" height="15" fill="rgb(211,104,44)"/><text x="34.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="276" width="2" height="15" fill="rgb(232,129,14)"/><text x="34.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="292" width="2" height="15" fill="rgb(219,59,2)"/><text x="34.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="308" width="2" height="15" fill="rgb(206,78,18)"/><text x="34.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="324" width="2" height="15" fill="rgb(215,200,49)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.12%)</title><rect x="31" y="340" width="2" height="15" fill="rgb(233,12,50)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="356" width="2" height="15" fill="rgb(247,192,40)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(220,222,11)"/><text x="34.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="388" width="2" height="15" fill="rgb(224,82,30)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="404" width="2" height="15" fill="rgb(227,226,0)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="420" width="2" height="15" fill="rgb(232,2,2)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="436" width="2" height="15" fill="rgb(216,31,46)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="452" width="2" height="15" fill="rgb(242,38,10)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="468" width="2" height="15" fill="rgb(226,187,30)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.12%)</title><rect x="31" y="484" width="2" height="15" fill="rgb(211,32,11)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="500" width="2" height="15" fill="rgb(240,174,23)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="516" width="2" height="15" fill="rgb(211,46,31)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="532" width="2" height="15" fill="rgb(253,127,13)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="548" width="2" height="15" fill="rgb(207,178,14)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="564" width="2" height="15" fill="rgb(241,139,25)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.12%)</title><rect x="31" y="580" width="2" height="15" fill="rgb(237,19,1)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="596" width="2" height="15" fill="rgb(212,49,6)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="612" width="2" height="15" fill="rgb(239,126,16)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="628" width="2" height="15" fill="rgb(207,130,52)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="644" width="2" height="15" fill="rgb(220,137,41)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="660" width="2" height="15" fill="rgb(237,202,27)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.12%)</title><rect x="31" y="676" width="2" height="15" fill="rgb(231,106,20)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="692" width="2" height="15" fill="rgb(234,108,31)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="708" width="2" height="15" fill="rgb(228,193,47)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="724" width="2" height="15" fill="rgb(254,86,35)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="740" width="2" height="15" fill="rgb(211,63,17)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="756" width="2" height="15" fill="rgb(210,92,31)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.12%)</title><rect x="31" y="772" width="2" height="15" fill="rgb(247,30,33)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="788" width="2" height="15" fill="rgb(241,195,36)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="804" width="2" height="15" fill="rgb(206,129,19)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="820" width="2" height="15" fill="rgb(210,216,21)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="836" width="2" height="15" fill="rgb(226,145,17)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="852" width="2" height="15" fill="rgb(247,108,32)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(248,60,36)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(209,6,28)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.12%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(211,76,51)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(238,150,2)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(222,179,1)"/><text x="34.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(250,123,20)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="964" width="2" height="15" fill="rgb(240,113,53)"/><text x="34.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="980" width="2" height="15" fill="rgb(214,29,2)"/><text x="34.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="996" width="2" height="15" fill="rgb(254,8,45)"/><text x="34.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1012" width="2" height="15" fill="rgb(207,150,17)"/><text x="34.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1028" width="2" height="15" fill="rgb(253,116,48)"/><text x="34.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.12%)</title><rect x="31" y="1044" width="2" height="15" fill="rgb(247,154,22)"/><text x="34.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1060" width="2" height="15" fill="rgb(249,20,30)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1076" width="2" height="15" fill="rgb(207,35,4)"/><text x="34.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1092" width="2" height="15" fill="rgb(237,116,10)"/><text x="34.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1108" width="2" height="15" fill="rgb(229,134,45)"/><text x="34.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(222,3,5)"/><text x="34.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(233,224,33)"/><text x="34.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(248,226,43)"/><text x="34.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.12%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(214,8,3)"/><text x="34.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(221,130,29)"/><text x="34.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(224,120,50)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(212,146,54)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1236" width="2" height="15" fill="rgb(238,215,21)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1252" width="2" height="15" fill="rgb(253,97,17)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1268" width="2" height="15" fill="rgb(247,19,13)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(248,30,35)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.12%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(250,56,43)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(221,49,47)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1332" width="2" height="15" fill="rgb(241,218,40)"/><text x="34.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1348" width="2" height="15" fill="rgb(205,142,11)"/><text x="34.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1364" width="2" height="15" fill="rgb(225,29,35)"/><text x="34.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1380" width="2" height="15" fill="rgb(229,146,32)"/><text x="34.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.12%)</title><rect x="31" y="1396" width="2" height="15" fill="rgb(225,62,37)"/><text x="34.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1412" width="2" height="15" fill="rgb(207,66,23)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1428" width="2" height="15" fill="rgb(240,197,33)"/><text x="34.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1444" width="2" height="15" fill="rgb(229,199,8)"/><text x="34.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1460" width="2" height="15" fill="rgb(207,225,18)"/><text x="34.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1476" width="2" height="15" fill="rgb(250,144,51)"/><text x="34.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py) (1 samples, 0.12%)</title><rect x="31" y="1492" width="2" height="15" fill="rgb(250,164,33)"/><text x="34.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1508" width="2" height="15" fill="rgb(220,167,8)"/><text x="34.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1524" width="2" height="15" fill="rgb(212,68,39)"/><text x="34.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1540" width="2" height="15" fill="rgb(207,9,26)"/><text x="34.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1556" width="2" height="15" fill="rgb(223,2,31)"/><text x="34.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1572" width="2" height="15" fill="rgb(225,112,34)"/><text x="34.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1588" width="2" height="15" fill="rgb(215,59,2)"/><text x="34.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1604" width="2" height="15" fill="rgb(242,2,54)"/><text x="34.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/constant_time.py) (1 samples, 0.12%)</title><rect x="31" y="1620" width="2" height="15" fill="rgb(243,22,34)"/><text x="34.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1636" width="2" height="15" fill="rgb(244,152,2)"/><text x="34.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1652" width="2" height="15" fill="rgb(248,220,24)"/><text x="34.00" y="1662.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="1668" width="2" height="15" fill="rgb(207,215,18)"/><text x="34.00" y="1678.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1684" width="2" height="15" fill="rgb(240,138,21)"/><text x="34.00" y="1694.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1700" width="2" height="15" fill="rgb(229,13,48)"/><text x="34.00" y="1710.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1716" width="2" height="15" fill="rgb(230,21,37)"/><text x="34.00" y="1726.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="1732" width="2" height="15" fill="rgb(253,177,43)"/><text x="34.00" y="1742.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="31" y="1748" width="2" height="15" fill="rgb(205,217,27)"/><text x="34.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.08%)</title><rect x="10" y="68" width="24" height="15" fill="rgb(246,119,34)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.08%)</title><rect x="10" y="84" width="24" height="15" fill="rgb(252,34,51)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.08%)</title><rect x="10" y="100" width="24" height="15" fill="rgb(228,201,12)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 2.08%)</title><rect x="10" y="116" width="24" height="15" fill="rgb(219,167,49)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.08%)</title><rect x="10" y="132" width="24" height="15" fill="rgb(236,2,27)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (17 samples, 2.08%)</title><rect x="10" y="148" width="24" height="15" fill="rgb(225,201,50)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.08%)</title><rect x="10" y="164" width="24" height="15" fill="rgb(222,207,43)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.08%)</title><rect x="10" y="180" width="24" height="15" fill="rgb(222,221,51)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="31" y="196" width="3" height="15" fill="rgb(222,138,53)"/><text x="34.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="31" y="212" width="3" height="15" fill="rgb(240,140,42)"/><text x="34.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="31" y="228" width="3" height="15" fill="rgb(207,32,6)"/><text x="34.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.12%)</title><rect x="33" y="244" width="1" height="15" fill="rgb(248,136,18)"/><text x="36.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="260" width="1" height="15" fill="rgb(238,210,52)"/><text x="36.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="276" width="1" height="15" fill="rgb(239,160,20)"/><text x="36.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="292" width="1" height="15" fill="rgb(240,118,25)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="308" width="1" height="15" fill="rgb(240,69,43)"/><text x="36.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="324" width="1" height="15" fill="rgb(221,12,39)"/><text x="36.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="340" width="1" height="15" fill="rgb(213,137,29)"/><text x="36.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="356" width="1" height="15" fill="rgb(207,162,3)"/><text x="36.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.12%)</title><rect x="33" y="372" width="1" height="15" fill="rgb(227,156,45)"/><text x="36.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="388" width="1" height="15" fill="rgb(245,9,35)"/><text x="36.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="404" width="1" height="15" fill="rgb(224,64,21)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="420" width="1" height="15" fill="rgb(230,133,36)"/><text x="36.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="436" width="1" height="15" fill="rgb(215,157,39)"/><text x="36.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="452" width="1" height="15" fill="rgb(218,141,28)"/><text x="36.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="468" width="1" height="15" fill="rgb(230,101,25)"/><text x="36.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="484" width="1" height="15" fill="rgb(243,166,51)"/><text x="36.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.12%)</title><rect x="33" y="500" width="1" height="15" fill="rgb(237,127,3)"/><text x="36.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="516" width="1" height="15" fill="rgb(252,215,8)"/><text x="36.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="532" width="1" height="15" fill="rgb(208,31,6)"/><text x="36.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="548" width="1" height="15" fill="rgb(243,109,9)"/><text x="36.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="564" width="1" height="15" fill="rgb(241,49,44)"/><text x="36.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="580" width="1" height="15" fill="rgb(225,55,51)"/><text x="36.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="596" width="1" height="15" fill="rgb(238,26,25)"/><text x="36.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="612" width="1" height="15" fill="rgb(235,128,27)"/><text x="36.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.12%)</title><rect x="33" y="628" width="1" height="15" fill="rgb(238,104,22)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="644" width="1" height="15" fill="rgb(232,108,45)"/><text x="36.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="660" width="1" height="15" fill="rgb(232,113,53)"/><text x="36.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="676" width="1" height="15" fill="rgb(224,49,29)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="692" width="1" height="15" fill="rgb(207,141,25)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="708" width="1" height="15" fill="rgb(231,45,9)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="724" width="1" height="15" fill="rgb(249,141,8)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="740" width="1" height="15" fill="rgb(239,120,40)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="756" width="1" height="15" fill="rgb(217,216,29)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.12%)</title><rect x="33" y="772" width="1" height="15" fill="rgb(245,15,31)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="788" width="1" height="15" fill="rgb(227,226,27)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="804" width="1" height="15" fill="rgb(206,128,38)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="820" width="1" height="15" fill="rgb(248,183,1)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="836" width="1" height="15" fill="rgb(254,66,20)"/><text x="36.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="852" width="1" height="15" fill="rgb(209,108,4)"/><text x="36.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="868" width="1" height="15" fill="rgb(243,205,30)"/><text x="36.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="884" width="1" height="15" fill="rgb(234,156,35)"/><text x="36.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.12%)</title><rect x="33" y="900" width="1" height="15" fill="rgb(248,150,12)"/><text x="36.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="916" width="1" height="15" fill="rgb(235,118,22)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="932" width="1" height="15" fill="rgb(214,109,42)"/><text x="36.00" y="942.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="33" y="948" width="1" height="15" fill="rgb(244,60,2)"/><text x="36.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="964" width="1" height="15" fill="rgb(207,184,21)"/><text x="36.00" y="974.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="980" width="1" height="15" fill="rgb(251,49,17)"/><text x="36.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="996" width="1" height="15" fill="rgb(225,30,36)"/><text x="36.00" y="1006.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="33" y="1012" width="1" height="15" fill="rgb(232,37,22)"/><text x="36.00" y="1022.50"></text></g><g><title>0x7fd416859bc6 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="74" y="132" width="3" height="15" fill="rgb(253,191,2)"/><text x="77.00" y="142.50"></text></g><g><title>0x7fd416859bdf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="77" y="132" width="2" height="15" fill="rgb(218,70,14)"/><text x="80.00" y="142.50"></text></g><g><title>0x7fd416859bfd (libc-2.29.so) (1 samples, 0.12%)</title><rect x="79" y="132" width="1" height="15" fill="rgb(252,151,43)"/><text x="82.00" y="142.50"></text></g><g><title>0x7fd416859c20 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="80" y="132" width="2" height="15" fill="rgb(205,79,11)"/><text x="83.00" y="142.50"></text></g><g><title>0x7fd416859c25 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="82" y="132" width="1" height="15" fill="rgb(219,154,27)"/><text x="85.00" y="142.50"></text></g><g><title>0x7fd416859c2d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="83" y="132" width="2" height="15" fill="rgb(247,140,35)"/><text x="86.00" y="142.50"></text></g><g><title>0x7fd416859c3d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="85" y="132" width="1" height="15" fill="rgb(227,71,35)"/><text x="88.00" y="142.50"></text></g><g><title>0x7fd416859c4d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="86" y="132" width="1" height="15" fill="rgb(231,99,51)"/><text x="89.00" y="142.50"></text></g><g><title>0x7fd416859c67 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="87" y="132" width="2" height="15" fill="rgb(246,10,33)"/><text x="90.00" y="142.50"></text></g><g><title>0x7fd416859c6a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="89" y="132" width="1" height="15" fill="rgb(243,208,15)"/><text x="92.00" y="142.50"></text></g><g><title>0x7fd416859c6e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="90" y="132" width="2" height="15" fill="rgb(211,219,17)"/><text x="93.00" y="142.50"></text></g><g><title>0x7fd416859c73 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="92" y="132" width="3" height="15" fill="rgb(227,211,46)"/><text x="95.00" y="142.50"></text></g><g><title>0x7fd416859aa4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="93" y="148" width="2" height="15" fill="rgb(216,172,48)"/><text x="96.00" y="158.50"></text></g><g><title>0x7fd41685aeb0 (libc-2.29.so) (16 samples, 1.96%)</title><rect x="74" y="116" width="24" height="15" fill="rgb(227,11,33)"/><text x="77.00" y="126.50">0..</text></g><g><title>0x7fd416859ca7 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="95" y="132" width="3" height="15" fill="rgb(211,5,52)"/><text x="98.00" y="142.50"></text></g><g><title>0x7fd416859aa0 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="95" y="148" width="3" height="15" fill="rgb(243,183,52)"/><text x="98.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.12%)</title><rect x="98" y="116" width="1" height="15" fill="rgb(245,66,6)"/><text x="101.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.12%)</title><rect x="98" y="132" width="1" height="15" fill="rgb(211,69,39)"/><text x="101.00" y="142.50"></text></g><g><title>0x7fd3d70c3ff9 (?) (1 samples, 0.12%)</title><rect x="116" y="212" width="2" height="15" fill="rgb(220,46,37)"/><text x="119.00" y="222.50"></text></g><g><title>0x7fd3d70beef6 (?) (1 samples, 0.12%)</title><rect x="116" y="228" width="2" height="15" fill="rgb(209,93,25)"/><text x="119.00" y="238.50"></text></g><g><title>0x7fd3d70b3d49 (?) (1 samples, 0.12%)</title><rect x="116" y="244" width="2" height="15" fill="rgb(251,83,0)"/><text x="119.00" y="254.50"></text></g><g><title>0x7fd3d70c1c1a (?) (1 samples, 0.12%)</title><rect x="116" y="260" width="2" height="15" fill="rgb(229,102,12)"/><text x="119.00" y="270.50"></text></g><g><title>0x7fd3d74ea66c (?) (1 samples, 0.12%)</title><rect x="116" y="276" width="2" height="15" fill="rgb(220,79,47)"/><text x="119.00" y="286.50"></text></g><g><title>0x7fd3d70a1df4 (?) (1 samples, 0.12%)</title><rect x="116" y="292" width="2" height="15" fill="rgb(217,156,10)"/><text x="119.00" y="302.50"></text></g><g><title>0x7ffd41f5fa01 ([vdso]) (1 samples, 0.12%)</title><rect x="118" y="212" width="1" height="15" fill="rgb(212,32,12)"/><text x="121.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.12%)</title><rect x="119" y="212" width="2" height="15" fill="rgb(235,220,44)"/><text x="122.00" y="222.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="121" y="292" width="1" height="15" fill="rgb(244,131,36)"/><text x="124.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="121" y="308" width="1" height="15" fill="rgb(224,84,31)"/><text x="124.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="121" y="324" width="1" height="15" fill="rgb(228,217,0)"/><text x="124.00" y="334.50"></text></g><g><title>0x7fd41685c554 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="121" y="340" width="1" height="15" fill="rgb(209,155,37)"/><text x="124.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="122" y="292" width="2" height="15" fill="rgb(240,167,33)"/><text x="125.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="124" y="340" width="1" height="15" fill="rgb(222,45,36)"/><text x="127.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="124" y="356" width="1" height="15" fill="rgb(228,223,18)"/><text x="127.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="124" y="372" width="1" height="15" fill="rgb(235,128,42)"/><text x="127.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="124" y="388" width="1" height="15" fill="rgb(225,92,47)"/><text x="127.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="124" y="404" width="1" height="15" fill="rgb(217,194,37)"/><text x="127.00" y="414.50"></text></g><g><title>onnxruntime::SessionState::GetExecutionPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="124" y="420" width="1" height="15" fill="rgb(252,168,28)"/><text x="127.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="125" y="340" width="1" height="15" fill="rgb(222,196,46)"/><text x="128.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="125" y="356" width="1" height="15" fill="rgb(210,20,46)"/><text x="128.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="125" y="372" width="1" height="15" fill="rgb(253,204,22)"/><text x="128.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="125" y="388" width="1" height="15" fill="rgb(224,7,52)"/><text x="128.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="291" y="452" width="2" height="15" fill="rgb(236,134,3)"/><text x="294.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="291" y="468" width="2" height="15" fill="rgb(211,138,0)"/><text x="294.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="291" y="484" width="2" height="15" fill="rgb(223,3,47)"/><text x="294.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="291" y="500" width="2" height="15" fill="rgb(242,102,11)"/><text x="294.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="291" y="516" width="2" height="15" fill="rgb(222,30,22)"/><text x="294.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="291" y="532" width="2" height="15" fill="rgb(245,217,39)"/><text x="294.00" y="542.50"></text></g><g><title>0x7fd41685c1a0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="291" y="548" width="2" height="15" fill="rgb(206,44,9)"/><text x="294.00" y="558.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="291" y="356" width="3" height="15" fill="rgb(222,171,2)"/><text x="294.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="291" y="372" width="3" height="15" fill="rgb(212,212,0)"/><text x="294.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="291" y="388" width="3" height="15" fill="rgb(223,10,4)"/><text x="294.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="291" y="404" width="3" height="15" fill="rgb(218,189,33)"/><text x="294.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="291" y="420" width="3" height="15" fill="rgb(205,188,9)"/><text x="294.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="291" y="436" width="3" height="15" fill="rgb(230,45,40)"/><text x="294.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="293" y="452" width="1" height="15" fill="rgb(210,186,6)"/><text x="296.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="293" y="468" width="1" height="15" fill="rgb(206,213,30)"/><text x="296.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="293" y="484" width="1" height="15" fill="rgb(229,218,50)"/><text x="296.00" y="494.50"></text></g><g><title>0x7fd4168696aa (libc-2.29.so) (1 samples, 0.12%)</title><rect x="293" y="500" width="1" height="15" fill="rgb(231,112,13)"/><text x="296.00" y="510.50"></text></g><g><title>0x7fd41687adb3 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="316" y="372" width="3" height="15" fill="rgb(237,55,38)"/><text x="319.00" y="382.50"></text></g><g><title>0x7fd4169d9e0a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(243,226,33)"/><text x="322.00" y="382.50"></text></g><g><title>0x7fd4169d9e0e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="320" y="372" width="1" height="15" fill="rgb(236,163,37)"/><text x="323.00" y="382.50"></text></g><g><title>0x7fd4169d9e14 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="321" y="372" width="2" height="15" fill="rgb(215,155,48)"/><text x="324.00" y="382.50"></text></g><g><title>0x7fd4169d9e17 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(220,222,19)"/><text x="326.00" y="382.50"></text></g><g><title>0x7fd4169d9e4a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="324" y="372" width="2" height="15" fill="rgb(207,67,10)"/><text x="327.00" y="382.50"></text></g><g><title>0x7fd4169d9e7a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="326" y="372" width="1" height="15" fill="rgb(234,80,9)"/><text x="329.00" y="382.50"></text></g><g><title>0x7fd4169d9e7e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="327" y="372" width="2" height="15" fill="rgb(215,14,11)"/><text x="330.00" y="382.50"></text></g><g><title>0x7fd4169d9e86 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="329" y="372" width="1" height="15" fill="rgb(230,220,2)"/><text x="332.00" y="382.50"></text></g><g><title>0x7fd4169d9e96 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="330" y="372" width="2" height="15" fill="rgb(219,108,1)"/><text x="333.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 17.50%)</title><rect x="126" y="340" width="207" height="15" fill="rgb(208,0,20)"/><text x="129.00" y="350.50">onnxruntime::ml::LinearClas..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.30%)</title><rect x="294" y="356" width="39" height="15" fill="rgb(235,117,30)"/><text x="297.00" y="366.50">onn..</text></g><g><title>0x7fd4169d9ea6 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="332" y="372" width="1" height="15" fill="rgb(221,186,5)"/><text x="335.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.86%)</title><rect x="333" y="340" width="10" height="15" fill="rgb(224,10,27)"/><text x="336.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.86%)</title><rect x="333" y="356" width="10" height="15" fill="rgb(239,56,48)"/><text x="336.00" y="366.50"></text></g><g><title>0x7fd41685bb39 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="424" y="388" width="3" height="15" fill="rgb(249,121,15)"/><text x="427.00" y="398.50"></text></g><g><title>0x7fd41685bb49 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="427" y="388" width="1" height="15" fill="rgb(252,21,45)"/><text x="430.00" y="398.50"></text></g><g><title>0x7fd41685bb76 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="428" y="388" width="2" height="15" fill="rgb(209,218,20)"/><text x="431.00" y="398.50"></text></g><g><title>0x7fd41685bd27 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="430" y="388" width="1" height="15" fill="rgb(205,204,20)"/><text x="433.00" y="398.50"></text></g><g><title>0x7fd41685bd36 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="431" y="388" width="2" height="15" fill="rgb(219,71,53)"/><text x="434.00" y="398.50"></text></g><g><title>0x7fd41685bd48 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="433" y="388" width="1" height="15" fill="rgb(240,210,13)"/><text x="436.00" y="398.50"></text></g><g><title>0x7fd41685bd54 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="434" y="388" width="2" height="15" fill="rgb(230,59,11)"/><text x="437.00" y="398.50"></text></g><g><title>0x7fd41685bd8d (libc-2.29.so) (2 samples, 0.24%)</title><rect x="436" y="388" width="2" height="15" fill="rgb(234,1,8)"/><text x="439.00" y="398.50"></text></g><g><title>0x7fd41685bd9f (libc-2.29.so) (2 samples, 0.24%)</title><rect x="438" y="388" width="3" height="15" fill="rgb(246,10,45)"/><text x="441.00" y="398.50"></text></g><g><title>0x7fd41685bdb4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="441" y="388" width="2" height="15" fill="rgb(248,112,35)"/><text x="444.00" y="398.50"></text></g><g><title>0x7fd41685c064 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="443" y="388" width="3" height="15" fill="rgb(210,203,5)"/><text x="446.00" y="398.50"></text></g><g><title>0x7fd41685c06d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="446" y="388" width="1" height="15" fill="rgb(207,90,53)"/><text x="449.00" y="398.50"></text></g><g><title>0x7fd41685c07f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="447" y="388" width="2" height="15" fill="rgb(209,215,40)"/><text x="450.00" y="398.50"></text></g><g><title>0x7fd41685c097 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="449" y="388" width="2" height="15" fill="rgb(220,202,20)"/><text x="452.00" y="398.50"></text></g><g><title>0x7fd41685c368 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="451" y="388" width="2" height="15" fill="rgb(206,168,12)"/><text x="454.00" y="398.50"></text></g><g><title>0x7fd41685c395 (libc-2.29.so) (4 samples, 0.49%)</title><rect x="453" y="388" width="6" height="15" fill="rgb(237,15,42)"/><text x="456.00" y="398.50"></text></g><g><title>0x7fd41685c3c4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="459" y="388" width="1" height="15" fill="rgb(233,14,44)"/><text x="462.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (74 samples, 9.06%)</title><rect x="356" y="356" width="107" height="15" fill="rgb(211,226,39)"/><text x="359.00" y="366.50">operator new ..</text></g><g><title>malloc (libc-2.29.so) (74 samples, 9.06%)</title><rect x="356" y="372" width="107" height="15" fill="rgb(207,147,8)"/><text x="359.00" y="382.50">malloc (libc-..</text></g><g><title>0x7fd41685c3e0 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="460" y="388" width="3" height="15" fill="rgb(247,55,3)"/><text x="463.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="463" y="356" width="1" height="15" fill="rgb(241,80,32)"/><text x="466.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.37%)</title><rect x="464" y="356" width="5" height="15" fill="rgb(238,173,26)"/><text x="467.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.49%)</title><rect x="469" y="356" width="6" height="15" fill="rgb(252,179,5)"/><text x="472.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (249 samples, 30.48%)</title><rect x="121" y="260" width="359" height="15" fill="rgb(249,120,34)"/><text x="124.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (249 samples, 30.48%)</title><rect x="121" y="276" width="359" height="15" fill="rgb(211,87,45)"/><text x="124.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (247 samples, 30.23%)</title><rect x="124" y="292" width="356" height="15" fill="rgb(212,3,22)"/><text x="127.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (247 samples, 30.23%)</title><rect x="124" y="308" width="356" height="15" fill="rgb(213,105,27)"/><text x="127.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (247 samples, 30.23%)</title><rect x="124" y="324" width="356" height="15" fill="rgb(239,185,16)"/><text x="127.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (95 samples, 11.63%)</title><rect x="343" y="340" width="137" height="15" fill="rgb(254,130,39)"/><text x="346.00" y="350.50">onnxruntime::ml::..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.49%)</title><rect x="475" y="356" width="5" height="15" fill="rgb(215,1,45)"/><text x="478.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="480" y="260" width="2" height="15" fill="rgb(253,0,3)"/><text x="483.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="482" y="260" width="1" height="15" fill="rgb(237,177,10)"/><text x="485.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.12%)</title><rect x="482" y="276" width="1" height="15" fill="rgb(209,35,27)"/><text x="485.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.12%)</title><rect x="482" y="292" width="1" height="15" fill="rgb(227,112,18)"/><text x="485.00" y="302.50"></text></g><g><title>0x7fd3d708b870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="557" y="276" width="1" height="15" fill="rgb(209,85,39)"/><text x="560.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 3.79%)</title><rect x="558" y="276" width="45" height="15" fill="rgb(225,89,26)"/><text x="561.00" y="286.50">pybi..</text></g><g><title>0x7fd3d708b310 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="602" y="292" width="1" height="15" fill="rgb(218,193,7)"/><text x="605.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 10.53%)</title><rect x="483" y="260" width="124" height="15" fill="rgb(239,24,50)"/><text x="486.00" y="270.50">pybind11::detai..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.37%)</title><rect x="603" y="276" width="4" height="15" fill="rgb(254,93,16)"/><text x="606.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="276" width="2" height="15" fill="rgb(214,26,31)"/><text x="610.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="292" width="2" height="15" fill="rgb(238,169,19)"/><text x="610.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="308" width="2" height="15" fill="rgb(228,193,10)"/><text x="610.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="324" width="2" height="15" fill="rgb(240,86,19)"/><text x="610.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="340" width="2" height="15" fill="rgb(218,132,24)"/><text x="610.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="356" width="2" height="15" fill="rgb(249,197,24)"/><text x="610.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="372" width="2" height="15" fill="rgb(223,61,43)"/><text x="610.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="607" y="388" width="2" height="15" fill="rgb(240,133,0)"/><text x="610.00" y="398.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="607" y="404" width="2" height="15" fill="rgb(245,46,1)"/><text x="610.00" y="414.50"></text></g><g><title>0x7fd3d708b0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="612" y="292" width="1" height="15" fill="rgb(234,21,1)"/><text x="615.00" y="302.50"></text></g><g><title>0x7fd41685a90e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="613" y="292" width="2" height="15" fill="rgb(221,173,36)"/><text x="616.00" y="302.50"></text></g><g><title>0x7fd41685a91e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="615" y="292" width="1" height="15" fill="rgb(242,105,26)"/><text x="618.00" y="302.50"></text></g><g><title>0x7fd41685a971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(226,142,47)"/><text x="619.00" y="302.50"></text></g><g><title>0x7fd41685a99b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="618" y="292" width="1" height="15" fill="rgb(236,113,13)"/><text x="621.00" y="302.50"></text></g><g><title>0x7fd41685ad02 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="619" y="292" width="1" height="15" fill="rgb(229,102,32)"/><text x="622.00" y="302.50"></text></g><g><title>0x7fd41685ad07 (libc-2.29.so) (11 samples, 1.35%)</title><rect x="620" y="292" width="16" height="15" fill="rgb(211,150,38)"/><text x="623.00" y="302.50"></text></g><g><title>0x7fd41685ad13 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="636" y="292" width="2" height="15" fill="rgb(225,57,22)"/><text x="639.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.37%)</title><rect x="638" y="292" width="4" height="15" fill="rgb(209,18,34)"/><text x="641.00" y="302.50"></text></g><g><title>0x7fd41685a906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="642" y="308" width="2" height="15" fill="rgb(212,175,54)"/><text x="645.00" y="318.50"></text></g><g><title>0x7fd41685a971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="644" y="308" width="1" height="15" fill="rgb(223,56,52)"/><text x="647.00" y="318.50"></text></g><g><title>0x7fd41685aa4b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="645" y="308" width="1" height="15" fill="rgb(217,225,40)"/><text x="648.00" y="318.50"></text></g><g><title>0x7fd41685acf0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="646" y="308" width="2" height="15" fill="rgb(237,213,28)"/><text x="649.00" y="318.50"></text></g><g><title>0x7fd41685ad07 (libc-2.29.so) (10 samples, 1.22%)</title><rect x="648" y="308" width="14" height="15" fill="rgb(237,216,20)"/><text x="651.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (436 samples, 53.37%)</title><rect x="34" y="100" width="630" height="15" fill="rgb(224,146,52)"/><text x="37.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (391 samples, 47.86%)</title><rect x="99" y="116" width="565" height="15" fill="rgb(208,75,8)"/><text x="102.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (390 samples, 47.74%)</title><rect x="100" y="132" width="564" height="15" fill="rgb(239,166,46)"/><text x="103.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (388 samples, 47.49%)</title><rect x="103" y="148" width="561" height="15" fill="rgb(220,112,52)"/><text x="106.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (386 samples, 47.25%)</title><rect x="106" y="164" width="558" height="15" fill="rgb(223,169,48)"/><text x="109.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (384 samples, 47.00%)</title><rect x="109" y="180" width="555" height="15" fill="rgb(251,36,31)"/><text x="112.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (380 samples, 46.51%)</title><rect x="115" y="196" width="549" height="15" fill="rgb(215,206,1)"/><text x="118.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (376 samples, 46.02%)</title><rect x="121" y="212" width="543" height="15" fill="rgb(236,146,9)"/><text x="124.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (376 samples, 46.02%)</title><rect x="121" y="228" width="543" height="15" fill="rgb(240,175,15)"/><text x="124.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMeth..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (376 samples, 46.02%)</title><rect x="121" y="244" width="543" height="15" fill="rgb(226,206,0)"/><text x="124.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxrunt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 4.77%)</title><rect x="607" y="260" width="57" height="15" fill="rgb(231,227,35)"/><text x="610.00" y="270.50">std::v..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 4.65%)</title><rect x="609" y="276" width="55" height="15" fill="rgb(248,44,15)"/><text x="612.00" y="286.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.84%)</title><rect x="642" y="292" width="22" height="15" fill="rgb(244,159,22)"/><text x="645.00" y="302.50">s..</text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(240,53,26)"/><text x="665.00" y="318.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.12%)</title><rect x="664" y="132" width="1" height="15" fill="rgb(227,113,51)"/><text x="667.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.12%)</title><rect x="664" y="148" width="1" height="15" fill="rgb(249,84,19)"/><text x="667.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.12%)</title><rect x="664" y="164" width="1" height="15" fill="rgb(225,197,3)"/><text x="667.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="180" width="1" height="15" fill="rgb(249,218,19)"/><text x="667.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="196" width="1" height="15" fill="rgb(220,90,38)"/><text x="667.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="212" width="1" height="15" fill="rgb(225,164,53)"/><text x="667.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="664" y="228" width="1" height="15" fill="rgb(228,154,24)"/><text x="667.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="244" width="1" height="15" fill="rgb(226,109,27)"/><text x="667.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.12%)</title><rect x="664" y="260" width="1" height="15" fill="rgb(213,36,33)"/><text x="667.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="276" width="1" height="15" fill="rgb(230,154,35)"/><text x="667.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="292" width="1" height="15" fill="rgb(244,97,25)"/><text x="667.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="308" width="1" height="15" fill="rgb(236,97,21)"/><text x="667.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="664" y="324" width="1" height="15" fill="rgb(242,77,18)"/><text x="667.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="664" y="340" width="1" height="15" fill="rgb(251,12,49)"/><text x="667.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.12%)</title><rect x="664" y="356" width="1" height="15" fill="rgb(243,202,40)"/><text x="667.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.12%)</title><rect x="664" y="372" width="1" height="15" fill="rgb(231,185,0)"/><text x="667.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.12%)</title><rect x="664" y="388" width="1" height="15" fill="rgb(238,96,17)"/><text x="667.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.12%)</title><rect x="664" y="404" width="1" height="15" fill="rgb(207,140,48)"/><text x="667.00" y="414.50"></text></g><g><title>communicate (subprocess.py) (1 samples, 0.12%)</title><rect x="664" y="420" width="1" height="15" fill="rgb(252,213,42)"/><text x="667.00" y="430.50"></text></g><g><title>wait (subprocess.py) (1 samples, 0.12%)</title><rect x="664" y="436" width="1" height="15" fill="rgb(217,175,18)"/><text x="667.00" y="446.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (438 samples, 53.61%)</title><rect x="34" y="68" width="633" height="15" fill="rgb(224,27,7)"/><text x="37.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (438 samples, 53.61%)</title><rect x="34" y="84" width="633" height="15" fill="rgb(234,201,32)"/><text x="37.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.24%)</title><rect x="664" y="100" width="3" height="15" fill="rgb(215,60,50)"/><text x="667.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.24%)</title><rect x="664" y="116" width="3" height="15" fill="rgb(219,148,18)"/><text x="667.00" y="126.50"></text></g><g><title>_optimize_onnx (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (1 samples, 0.12%)</title><rect x="665" y="132" width="2" height="15" fill="rgb(232,157,7)"/><text x="668.00" y="142.50"></text></g><g><title>onnx_optimisations (mlprodict/onnxrt/optim/_main_onnx_optim.py) (1 samples, 0.12%)</title><rect x="665" y="148" width="2" height="15" fill="rgb(240,54,9)"/><text x="668.00" y="158.50"></text></g><g><title>onnx_remove_node (mlprodict/onnxrt/optim/onnx_optimisation.py) (1 samples, 0.12%)</title><rect x="665" y="164" width="2" height="15" fill="rgb(224,92,36)"/><text x="668.00" y="174.50"></text></g><g><title>_apply_optimisation_on_graph (mlprodict/onnxrt/optim/_onnx_optimisation_common.py) (1 samples, 0.12%)</title><rect x="665" y="180" width="2" height="15" fill="rgb(211,130,10)"/><text x="668.00" y="190.50"></text></g><g><title>onnx_remove_node (mlprodict/onnxrt/optim/onnx_optimisation.py) (1 samples, 0.12%)</title><rect x="665" y="196" width="2" height="15" fill="rgb(248,22,40)"/><text x="668.00" y="206.50"></text></g><g><title>onnx_remove_node_redundant (mlprodict/onnxrt/optim/onnx_optimisation_redundant.py) (1 samples, 0.12%)</title><rect x="665" y="212" width="2" height="15" fill="rgb(236,140,13)"/><text x="668.00" y="222.50"></text></g><g><title>_hash_obj_content (mlprodict/onnxrt/optim/onnx_optimisation_redundant.py) (1 samples, 0.12%)</title><rect x="665" y="228" width="2" height="15" fill="rgb(254,132,38)"/><text x="668.00" y="238.50"></text></g><g><title>_hash_obj_content (mlprodict/onnxrt/optim/onnx_optimisation_redundant.py) (1 samples, 0.12%)</title><rect x="665" y="244" width="2" height="15" fill="rgb(210,121,39)"/><text x="668.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.24%)</title><rect x="681" y="180" width="3" height="15" fill="rgb(210,44,50)"/><text x="684.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.12%)</title><rect x="683" y="196" width="1" height="15" fill="rgb(251,114,15)"/><text x="686.00" y="206.50"></text></g><g><title>0x7fd416938e61 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="683" y="212" width="1" height="15" fill="rgb(246,218,37)"/><text x="686.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.12%)</title><rect x="704" y="212" width="2" height="15" fill="rgb(247,118,22)"/><text x="707.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.12%)</title><rect x="704" y="228" width="2" height="15" fill="rgb(242,72,42)"/><text x="707.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.12%)</title><rect x="706" y="212" width="1" height="15" fill="rgb(253,126,51)"/><text x="709.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.12%)</title><rect x="706" y="228" width="1" height="15" fill="rgb(231,147,0)"/><text x="709.00" y="238.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 0.49%)</title><rect x="716" y="324" width="6" height="15" fill="rgb(249,159,25)"/><text x="719.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (3 samples, 0.37%)</title><rect x="717" y="340" width="5" height="15" fill="rgb(240,69,53)"/><text x="720.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (9 samples, 1.10%)</title><rect x="710" y="244" width="13" height="15" fill="rgb(205,135,17)"/><text x="713.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 1.10%)</title><rect x="710" y="260" width="13" height="15" fill="rgb(217,206,41)"/><text x="713.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (8 samples, 0.98%)</title><rect x="711" y="276" width="12" height="15" fill="rgb(235,27,26)"/><text x="714.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 0.86%)</title><rect x="713" y="292" width="10" height="15" fill="rgb(250,12,22)"/><text x="716.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (6 samples, 0.73%)</title><rect x="714" y="308" width="9" height="15" fill="rgb(205,42,7)"/><text x="717.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.12%)</title><rect x="722" y="324" width="1" height="15" fill="rgb(239,225,54)"/><text x="725.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.12%)</title><rect x="723" y="324" width="1" height="15" fill="rgb(212,142,40)"/><text x="726.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.12%)</title><rect x="723" y="340" width="1" height="15" fill="rgb(218,159,53)"/><text x="726.00" y="350.50"></text></g><g><title>0x7fd41687b103 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="724" y="340" width="2" height="15" fill="rgb(244,146,32)"/><text x="727.00" y="350.50"></text></g><g><title>gemm (cblasfuncs.c) (13 samples, 1.59%)</title><rect x="726" y="340" width="19" height="15" fill="rgb(230,21,31)"/><text x="729.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 1.59%)</title><rect x="726" y="356" width="19" height="15" fill="rgb(221,162,1)"/><text x="729.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 1.59%)</title><rect x="726" y="372" width="19" height="15" fill="rgb(251,94,0)"/><text x="729.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 1.59%)</title><rect x="726" y="388" width="19" height="15" fill="rgb(227,26,14)"/><text x="729.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.12%)</title><rect x="745" y="388" width="1" height="15" fill="rgb(213,100,10)"/><text x="748.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (17 samples, 2.08%)</title><rect x="723" y="276" width="25" height="15" fill="rgb(207,117,23)"/><text x="726.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (17 samples, 2.08%)</title><rect x="723" y="292" width="25" height="15" fill="rgb(233,24,13)"/><text x="726.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (17 samples, 2.08%)</title><rect x="723" y="308" width="25" height="15" fill="rgb(213,33,19)"/><text x="726.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (16 samples, 1.96%)</title><rect x="724" y="324" width="24" height="15" fill="rgb(211,49,6)"/><text x="727.00" y="334.50">c..</text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.24%)</title><rect x="745" y="340" width="3" height="15" fill="rgb(227,144,35)"/><text x="748.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.24%)</title><rect x="745" y="356" width="3" height="15" fill="rgb(232,74,33)"/><text x="748.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.24%)</title><rect x="745" y="372" width="3" height="15" fill="rgb(228,26,1)"/><text x="748.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.12%)</title><rect x="746" y="388" width="2" height="15" fill="rgb(236,138,23)"/><text x="749.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.12%)</title><rect x="746" y="404" width="2" height="15" fill="rgb(213,205,25)"/><text x="749.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.12%)</title><rect x="746" y="420" width="2" height="15" fill="rgb(217,53,54)"/><text x="749.00" y="430.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.37%)</title><rect x="748" y="276" width="4" height="15" fill="rgb(227,31,41)"/><text x="751.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (56 samples, 6.85%)</title><rect x="723" y="244" width="81" height="15" fill="rgb(211,153,23)"/><text x="726.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (56 samples, 6.85%)</title><rect x="723" y="260" width="81" height="15" fill="rgb(225,219,9)"/><text x="726.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (36 samples, 4.41%)</title><rect x="752" y="276" width="52" height="15" fill="rgb(227,131,43)"/><text x="755.00" y="286.50">sgemm..</text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.24%)</title><rect x="804" y="260" width="3" height="15" fill="rgb(244,78,45)"/><text x="807.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.24%)</title><rect x="804" y="276" width="3" height="15" fill="rgb(221,209,5)"/><text x="807.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.24%)</title><rect x="804" y="292" width="3" height="15" fill="rgb(235,15,28)"/><text x="807.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.12%)</title><rect x="805" y="308" width="2" height="15" fill="rgb(205,147,0)"/><text x="808.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.12%)</title><rect x="808" y="292" width="2" height="15" fill="rgb(207,52,30)"/><text x="811.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.12%)</title><rect x="808" y="308" width="2" height="15" fill="rgb(238,163,45)"/><text x="811.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.12%)</title><rect x="808" y="324" width="2" height="15" fill="rgb(209,82,48)"/><text x="811.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.12%)</title><rect x="808" y="340" width="2" height="15" fill="rgb(222,175,15)"/><text x="811.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.12%)</title><rect x="808" y="356" width="2" height="15" fill="rgb(245,88,12)"/><text x="811.00" y="366.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.12%)</title><rect x="810" y="324" width="1" height="15" fill="rgb(215,44,30)"/><text x="813.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.12%)</title><rect x="810" y="340" width="1" height="15" fill="rgb(240,128,14)"/><text x="813.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.24%)</title><rect x="810" y="308" width="3" height="15" fill="rgb(223,113,41)"/><text x="813.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.12%)</title><rect x="811" y="324" width="2" height="15" fill="rgb(213,149,33)"/><text x="814.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.12%)</title><rect x="811" y="340" width="2" height="15" fill="rgb(206,186,23)"/><text x="814.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.12%)</title><rect x="811" y="356" width="2" height="15" fill="rgb(237,85,27)"/><text x="814.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.12%)</title><rect x="811" y="372" width="2" height="15" fill="rgb(235,141,36)"/><text x="814.00" y="382.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.12%)</title><rect x="813" y="308" width="1" height="15" fill="rgb(244,160,51)"/><text x="816.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.22%)</title><rect x="810" y="292" width="14" height="15" fill="rgb(252,219,20)"/><text x="813.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.86%)</title><rect x="814" y="308" width="10" height="15" fill="rgb(239,87,33)"/><text x="817.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.86%)</title><rect x="814" y="324" width="10" height="15" fill="rgb(228,111,11)"/><text x="817.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.86%)</title><rect x="814" y="340" width="10" height="15" fill="rgb(205,36,14)"/><text x="817.00" y="350.50"></text></g><g><title>0x7fd41687ad97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="823" y="356" width="1" height="15" fill="rgb(212,227,36)"/><text x="826.00" y="366.50"></text></g><g><title>0x7fd3f8c5f33a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.37%)</title><rect x="824" y="308" width="4" height="15" fill="rgb(224,110,34)"/><text x="827.00" y="318.50"></text></g><g><title>0x7fd3f8d8ac70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="831" y="340" width="2" height="15" fill="rgb(206,0,13)"/><text x="834.00" y="350.50"></text></g><g><title>0x7fd4169a61a0 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="844" y="356" width="3" height="15" fill="rgb(228,186,38)"/><text x="847.00" y="366.50"></text></g><g><title>0x7fd4169d9e17 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="847" y="356" width="2" height="15" fill="rgb(242,92,45)"/><text x="850.00" y="366.50"></text></g><g><title>0x7fd4169d9e4e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="849" y="356" width="1" height="15" fill="rgb(223,120,46)"/><text x="852.00" y="366.50"></text></g><g><title>0x7fd4169d9e62 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="850" y="356" width="2" height="15" fill="rgb(222,63,5)"/><text x="853.00" y="366.50"></text></g><g><title>0x7fd3f8c81214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 2.08%)</title><rect x="828" y="324" width="25" height="15" fill="rgb(206,35,33)"/><text x="831.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (14 samples, 1.71%)</title><rect x="833" y="340" width="20" height="15" fill="rgb(240,205,5)"/><text x="836.00" y="350.50"></text></g><g><title>0x7fd4169d9e7e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="852" y="356" width="1" height="15" fill="rgb(246,132,33)"/><text x="855.00" y="366.50"></text></g><g><title>0x7fd3f8c81224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="853" y="324" width="1" height="15" fill="rgb(224,166,32)"/><text x="856.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (36 samples, 4.41%)</title><rect x="807" y="260" width="52" height="15" fill="rgb(205,173,33)"/><text x="810.00" y="270.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (35 samples, 4.28%)</title><rect x="808" y="276" width="51" height="15" fill="rgb(244,148,41)"/><text x="811.00" y="286.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (24 samples, 2.94%)</title><rect x="824" y="292" width="35" height="15" fill="rgb(215,1,49)"/><text x="827.00" y="302.50">tr..</text></g><g><title>0x7fd3f8c5f33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 2.57%)</title><rect x="828" y="308" width="31" height="15" fill="rgb(216,180,42)"/><text x="831.00" y="318.50">0x..</text></g><g><title>0x7fd3f8c81228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.37%)</title><rect x="854" y="324" width="5" height="15" fill="rgb(206,164,5)"/><text x="857.00" y="334.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.12%)</title><rect x="859" y="260" width="1" height="15" fill="rgb(252,77,3)"/><text x="862.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (107 samples, 13.10%)</title><rect x="707" y="228" width="155" height="15" fill="rgb(245,112,48)"/><text x="710.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (40 samples, 4.90%)</title><rect x="804" y="244" width="58" height="15" fill="rgb(238,84,0)"/><text x="807.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.12%)</title><rect x="860" y="260" width="2" height="15" fill="rgb(229,69,14)"/><text x="863.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.12%)</title><rect x="866" y="260" width="1" height="15" fill="rgb(227,35,25)"/><text x="869.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.12%)</title><rect x="866" y="276" width="1" height="15" fill="rgb(220,86,16)"/><text x="869.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.12%)</title><rect x="867" y="260" width="2" height="15" fill="rgb(249,85,16)"/><text x="870.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.12%)</title><rect x="867" y="276" width="2" height="15" fill="rgb(252,102,50)"/><text x="870.00" y="286.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.12%)</title><rect x="869" y="388" width="1" height="15" fill="rgb(218,21,10)"/><text x="872.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.37%)</title><rect x="869" y="324" width="4" height="15" fill="rgb(217,89,11)"/><text x="872.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.37%)</title><rect x="869" y="340" width="4" height="15" fill="rgb(228,187,26)"/><text x="872.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.37%)</title><rect x="869" y="356" width="4" height="15" fill="rgb(207,83,21)"/><text x="872.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.37%)</title><rect x="869" y="372" width="4" height="15" fill="rgb(252,77,18)"/><text x="872.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.24%)</title><rect x="870" y="388" width="3" height="15" fill="rgb(227,8,23)"/><text x="873.00" y="398.50"></text></g><g><title>0x7fd416870e7a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="872" y="404" width="1" height="15" fill="rgb(241,225,26)"/><text x="875.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.12%)</title><rect x="873" y="372" width="2" height="15" fill="rgb(254,204,27)"/><text x="876.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.12%)</title><rect x="873" y="388" width="2" height="15" fill="rgb(246,215,26)"/><text x="876.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.12%)</title><rect x="873" y="404" width="2" height="15" fill="rgb(224,101,46)"/><text x="876.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="873" y="420" width="2" height="15" fill="rgb(254,132,2)"/><text x="876.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (4 samples, 0.49%)</title><rect x="878" y="388" width="5" height="15" fill="rgb(242,92,21)"/><text x="881.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.24%)</title><rect x="880" y="404" width="3" height="15" fill="rgb(223,204,28)"/><text x="883.00" y="414.50"></text></g><g><title>array_sum (methods.c) (14 samples, 1.71%)</title><rect x="869" y="260" width="20" height="15" fill="rgb(244,189,23)"/><text x="872.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 1.71%)</title><rect x="869" y="276" width="20" height="15" fill="rgb(207,157,33)"/><text x="872.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 1.71%)</title><rect x="869" y="292" width="20" height="15" fill="rgb(246,59,21)"/><text x="872.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 1.71%)</title><rect x="869" y="308" width="20" height="15" fill="rgb(217,15,18)"/><text x="872.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 1.35%)</title><rect x="873" y="324" width="16" height="15" fill="rgb(248,191,27)"/><text x="876.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 1.35%)</title><rect x="873" y="340" width="16" height="15" fill="rgb(234,229,30)"/><text x="876.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 1.35%)</title><rect x="873" y="356" width="16" height="15" fill="rgb(226,186,17)"/><text x="876.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (10 samples, 1.22%)</title><rect x="875" y="372" width="14" height="15" fill="rgb(249,44,30)"/><text x="878.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 0.49%)</title><rect x="883" y="388" width="6" height="15" fill="rgb(223,129,14)"/><text x="886.00" y="398.50"></text></g><g><title>0x7fd41687b120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="889" y="292" width="2" height="15" fill="rgb(221,123,14)"/><text x="892.00" y="302.50"></text></g><g><title>FLOAT_divide (loops.c.src) (2 samples, 0.24%)</title><rect x="891" y="324" width="2" height="15" fill="rgb(205,127,33)"/><text x="894.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (2 samples, 0.24%)</title><rect x="891" y="340" width="2" height="15" fill="rgb(214,227,6)"/><text x="894.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.24%)</title><rect x="891" y="356" width="2" height="15" fill="rgb(210,88,5)"/><text x="894.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.24%)</title><rect x="891" y="372" width="2" height="15" fill="rgb(249,198,41)"/><text x="894.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="893" y="340" width="2" height="15" fill="rgb(219,34,48)"/><text x="896.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.24%)</title><rect x="893" y="324" width="3" height="15" fill="rgb(214,159,1)"/><text x="896.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.12%)</title><rect x="895" y="340" width="1" height="15" fill="rgb(237,215,54)"/><text x="898.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.12%)</title><rect x="896" y="324" width="2" height="15" fill="rgb(242,99,41)"/><text x="899.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 0.86%)</title><rect x="889" y="276" width="10" height="15" fill="rgb(228,107,27)"/><text x="892.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.73%)</title><rect x="891" y="292" width="8" height="15" fill="rgb(226,209,48)"/><text x="894.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 0.73%)</title><rect x="891" y="308" width="8" height="15" fill="rgb(235,1,36)"/><text x="894.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.12%)</title><rect x="898" y="324" width="1" height="15" fill="rgb(236,168,53)"/><text x="901.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.12%)</title><rect x="898" y="340" width="1" height="15" fill="rgb(214,114,6)"/><text x="901.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="898" y="356" width="1" height="15" fill="rgb(209,62,45)"/><text x="901.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="898" y="372" width="1" height="15" fill="rgb(219,171,51)"/><text x="901.00" y="382.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (2 samples, 0.24%)</title><rect x="899" y="276" width="3" height="15" fill="rgb(236,134,36)"/><text x="902.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.12%)</title><rect x="901" y="292" width="1" height="15" fill="rgb(248,15,10)"/><text x="904.00" y="302.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (160 samples, 19.58%)</title><rect x="672" y="164" width="232" height="15" fill="rgb(254,98,28)"/><text x="675.00" y="174.50">_run_sequence_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (152 samples, 18.60%)</title><rect x="684" y="180" width="220" height="15" fill="rgb(233,191,5)"/><text x="687.00" y="190.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (141 samples, 17.26%)</title><rect x="700" y="196" width="204" height="15" fill="rgb(248,114,7)"/><text x="703.00" y="206.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (136 samples, 16.65%)</title><rect x="707" y="212" width="197" height="15" fill="rgb(234,120,44)"/><text x="710.00" y="222.50">run (mlprodict/onnxrt/ops..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (29 samples, 3.55%)</title><rect x="862" y="228" width="42" height="15" fill="rgb(226,138,33)"/><text x="865.00" y="238.50">_ru..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (29 samples, 3.55%)</title><rect x="862" y="244" width="42" height="15" fill="rgb(219,168,5)"/><text x="865.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.22%)</title><rect x="889" y="260" width="15" height="15" fill="rgb(220,130,44)"/><text x="892.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.12%)</title><rect x="902" y="276" width="2" height="15" fill="rgb(253,146,28)"/><text x="905.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.12%)</title><rect x="904" y="180" width="1" height="15" fill="rgb(213,30,9)"/><text x="907.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.12%)</title><rect x="904" y="196" width="1" height="15" fill="rgb(251,54,18)"/><text x="907.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (166 samples, 20.32%)</title><rect x="667" y="100" width="239" height="15" fill="rgb(211,86,43)"/><text x="670.00" y="110.50">profile (bench_LogisticRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 20.20%)</title><rect x="668" y="116" width="238" height="15" fill="rgb(210,36,44)"/><text x="671.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (163 samples, 19.95%)</title><rect x="671" y="132" width="235" height="15" fill="rgb(229,186,12)"/><text x="674.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (162 samples, 19.83%)</title><rect x="672" y="148" width="234" height="15" fill="rgb(254,95,5)"/><text x="675.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.24%)</title><rect x="904" y="164" width="2" height="15" fill="rgb(223,155,1)"/><text x="907.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.12%)</title><rect x="905" y="180" width="1" height="15" fill="rgb(249,92,40)"/><text x="908.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.12%)</title><rect x="905" y="196" width="1" height="15" fill="rgb(236,6,29)"/><text x="908.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.12%)</title><rect x="905" y="212" width="1" height="15" fill="rgb(236,132,49)"/><text x="908.00" y="222.50"></text></g><g><title>change_style (mlprodict/tools/code_helper.py) (1 samples, 0.12%)</title><rect x="906" y="500" width="2" height="15" fill="rgb(214,64,0)"/><text x="909.00" y="510.50"></text></g><g><title>sub (re.py) (1 samples, 0.12%)</title><rect x="906" y="516" width="2" height="15" fill="rgb(228,183,47)"/><text x="909.00" y="526.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.12%)</title><rect x="906" y="532" width="2" height="15" fill="rgb(241,51,11)"/><text x="909.00" y="542.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (168 samples, 20.56%)</title><rect x="667" y="68" width="242" height="15" fill="rgb(227,159,15)"/><text x="670.00" y="78.50">profile_pyrt (bench_LogisticRegr..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (168 samples, 20.56%)</title><rect x="667" y="84" width="242" height="15" fill="rgb(219,225,45)"/><text x="670.00" y="94.50">setup_profile (bench_LogisticReg..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.24%)</title><rect x="906" y="100" width="3" height="15" fill="rgb(238,130,27)"/><text x="909.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.24%)</title><rect x="906" y="116" width="3" height="15" fill="rgb(227,111,8)"/><text x="909.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.24%)</title><rect x="906" y="132" width="3" height="15" fill="rgb(211,17,43)"/><text x="909.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.24%)</title><rect x="906" y="148" width="3" height="15" fill="rgb(237,51,4)"/><text x="909.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.24%)</title><rect x="906" y="164" width="3" height="15" fill="rgb(226,207,43)"/><text x="909.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.24%)</title><rect x="906" y="180" width="3" height="15" fill="rgb(220,183,22)"/><text x="909.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.24%)</title><rect x="906" y="196" width="3" height="15" fill="rgb(249,126,49)"/><text x="909.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="212" width="3" height="15" fill="rgb(236,98,51)"/><text x="909.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="228" width="3" height="15" fill="rgb(223,8,48)"/><text x="909.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="244" width="3" height="15" fill="rgb(234,150,7)"/><text x="909.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="906" y="260" width="3" height="15" fill="rgb(208,54,23)"/><text x="909.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="276" width="3" height="15" fill="rgb(247,225,22)"/><text x="909.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.24%)</title><rect x="906" y="292" width="3" height="15" fill="rgb(213,123,15)"/><text x="909.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="308" width="3" height="15" fill="rgb(207,85,53)"/><text x="909.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="324" width="3" height="15" fill="rgb(231,216,8)"/><text x="909.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="340" width="3" height="15" fill="rgb(207,47,8)"/><text x="909.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="906" y="356" width="3" height="15" fill="rgb(219,3,16)"/><text x="909.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="906" y="372" width="3" height="15" fill="rgb(209,228,29)"/><text x="909.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.24%)</title><rect x="906" y="388" width="3" height="15" fill="rgb(222,186,49)"/><text x="909.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.24%)</title><rect x="906" y="404" width="3" height="15" fill="rgb(254,55,30)"/><text x="909.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.24%)</title><rect x="906" y="420" width="3" height="15" fill="rgb(228,128,21)"/><text x="909.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.24%)</title><rect x="906" y="436" width="3" height="15" fill="rgb(215,129,49)"/><text x="909.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.24%)</title><rect x="906" y="452" width="3" height="15" fill="rgb(242,162,51)"/><text x="909.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.24%)</title><rect x="906" y="468" width="3" height="15" fill="rgb(227,24,6)"/><text x="909.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.24%)</title><rect x="906" y="484" width="3" height="15" fill="rgb(232,47,43)"/><text x="909.00" y="494.50"></text></g><g><title>format_option (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.12%)</title><rect x="908" y="500" width="1" height="15" fill="rgb(242,31,8)"/><text x="911.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="908" y="516" width="1" height="15" fill="rgb(214,151,4)"/><text x="911.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}, onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter const*, &gt;(pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}&amp;&amp;, onnx::OpSchema::FormalParameterOption (*)(onnx::OpSchema::FormalParameter const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="908" y="532" width="1" height="15" fill="rgb(230,6,21)"/><text x="911.00" y="542.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="908" y="548" width="1" height="15" fill="rgb(240,210,50)"/><text x="911.00" y="558.50"></text></g><g><title>pybind11::class_&lt;onnx::OpSchema::FormalParameterOption, &gt;::init_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="908" y="564" width="1" height="15" fill="rgb(237,110,13)"/><text x="911.00" y="574.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="908" y="580" width="1" height="15" fill="rgb(245,189,42)"/><text x="911.00" y="590.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.24%)</title><rect x="915" y="180" width="3" height="15" fill="rgb(207,43,51)"/><text x="918.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.12%)</title><rect x="917" y="196" width="1" height="15" fill="rgb(230,33,16)"/><text x="920.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.12%)</title><rect x="917" y="212" width="1" height="15" fill="rgb(233,121,15)"/><text x="920.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.24%)</title><rect x="918" y="244" width="3" height="15" fill="rgb(207,141,40)"/><text x="921.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.24%)</title><rect x="918" y="260" width="3" height="15" fill="rgb(229,109,42)"/><text x="921.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.24%)</title><rect x="918" y="276" width="3" height="15" fill="rgb(232,148,14)"/><text x="921.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.24%)</title><rect x="918" y="292" width="3" height="15" fill="rgb(245,25,37)"/><text x="921.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.24%)</title><rect x="918" y="308" width="3" height="15" fill="rgb(206,160,26)"/><text x="921.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.12%)</title><rect x="922" y="260" width="2" height="15" fill="rgb(236,111,41)"/><text x="925.00" y="270.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.12%)</title><rect x="924" y="308" width="1" height="15" fill="rgb(251,54,24)"/><text x="927.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.12%)</title><rect x="924" y="324" width="1" height="15" fill="rgb(225,62,42)"/><text x="927.00" y="334.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.12%)</title><rect x="924" y="340" width="1" height="15" fill="rgb(229,168,19)"/><text x="927.00" y="350.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="924" y="356" width="1" height="15" fill="rgb(239,20,48)"/><text x="927.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.12%)</title><rect x="925" y="308" width="2" height="15" fill="rgb(206,217,51)"/><text x="928.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.12%)</title><rect x="925" y="324" width="2" height="15" fill="rgb(227,198,42)"/><text x="928.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.12%)</title><rect x="927" y="308" width="1" height="15" fill="rgb(253,60,0)"/><text x="930.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.49%)</title><rect x="924" y="292" width="6" height="15" fill="rgb(231,134,44)"/><text x="927.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.12%)</title><rect x="928" y="308" width="2" height="15" fill="rgb(226,138,17)"/><text x="931.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.12%)</title><rect x="928" y="324" width="2" height="15" fill="rgb(211,174,29)"/><text x="931.00" y="334.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h) (1 samples, 0.12%)</title><rect x="928" y="340" width="2" height="15" fill="rgb(247,7,14)"/><text x="931.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.12%)</title><rect x="930" y="292" width="1" height="15" fill="rgb(249,228,45)"/><text x="933.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.12%)</title><rect x="930" y="308" width="1" height="15" fill="rgb(227,187,7)"/><text x="933.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.12%)</title><rect x="930" y="324" width="1" height="15" fill="rgb(236,92,53)"/><text x="933.00" y="334.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="930" y="340" width="1" height="15" fill="rgb(239,141,20)"/><text x="933.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (14 samples, 1.71%)</title><rect x="924" y="276" width="20" height="15" fill="rgb(214,38,24)"/><text x="927.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (9 samples, 1.10%)</title><rect x="931" y="292" width="13" height="15" fill="rgb(225,26,8)"/><text x="934.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 0.98%)</title><rect x="932" y="308" width="12" height="15" fill="rgb(249,84,30)"/><text x="935.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 0.61%)</title><rect x="937" y="324" width="7" height="15" fill="rgb(251,31,8)"/><text x="940.00" y="334.50"></text></g><g><title>array_sum (methods.c) (19 samples, 2.33%)</title><rect x="918" y="180" width="27" height="15" fill="rgb(207,167,42)"/><text x="921.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (19 samples, 2.33%)</title><rect x="918" y="196" width="27" height="15" fill="rgb(237,209,8)"/><text x="921.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (19 samples, 2.33%)</title><rect x="918" y="212" width="27" height="15" fill="rgb(212,221,38)"/><text x="921.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (19 samples, 2.33%)</title><rect x="918" y="228" width="27" height="15" fill="rgb(230,50,16)"/><text x="921.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (17 samples, 2.08%)</title><rect x="921" y="244" width="24" height="15" fill="rgb(239,62,2)"/><text x="924.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (15 samples, 1.84%)</title><rect x="924" y="260" width="21" height="15" fill="rgb(229,112,12)"/><text x="927.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.12%)</title><rect x="944" y="276" width="1" height="15" fill="rgb(241,118,5)"/><text x="947.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.12%)</title><rect x="944" y="292" width="1" height="15" fill="rgb(218,89,12)"/><text x="947.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.12%)</title><rect x="944" y="308" width="1" height="15" fill="rgb(206,126,43)"/><text x="947.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.12%)</title><rect x="945" y="276" width="2" height="15" fill="rgb(236,105,6)"/><text x="948.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.12%)</title><rect x="945" y="292" width="2" height="15" fill="rgb(219,141,29)"/><text x="948.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.12%)</title><rect x="945" y="308" width="2" height="15" fill="rgb(230,186,38)"/><text x="948.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.12%)</title><rect x="945" y="324" width="2" height="15" fill="rgb(225,8,44)"/><text x="948.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.24%)</title><rect x="947" y="292" width="3" height="15" fill="rgb(248,128,46)"/><text x="950.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.12%)</title><rect x="948" y="308" width="2" height="15" fill="rgb(225,205,28)"/><text x="951.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.12%)</title><rect x="948" y="324" width="2" height="15" fill="rgb(233,171,30)"/><text x="951.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.12%)</title><rect x="948" y="340" width="2" height="15" fill="rgb(242,160,48)"/><text x="951.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.12%)</title><rect x="948" y="356" width="2" height="15" fill="rgb(236,221,11)"/><text x="951.00" y="366.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.12%)</title><rect x="950" y="292" width="1" height="15" fill="rgb(235,49,19)"/><text x="953.00" y="302.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.12%)</title><rect x="951" y="292" width="2" height="15" fill="rgb(233,161,29)"/><text x="954.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.61%)</title><rect x="947" y="276" width="7" height="15" fill="rgb(239,160,37)"/><text x="950.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.12%)</title><rect x="953" y="292" width="1" height="15" fill="rgb(206,122,32)"/><text x="956.00" y="302.50"></text></g><g><title>0x7fd415a7d1c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="953" y="308" width="1" height="15" fill="rgb(235,79,5)"/><text x="956.00" y="318.50"></text></g><g><title>array_add (number.c) (7 samples, 0.86%)</title><rect x="945" y="196" width="11" height="15" fill="rgb(242,67,49)"/><text x="948.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 0.86%)</title><rect x="945" y="212" width="11" height="15" fill="rgb(213,22,51)"/><text x="948.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 0.86%)</title><rect x="945" y="228" width="11" height="15" fill="rgb(251,9,26)"/><text x="948.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.86%)</title><rect x="945" y="244" width="11" height="15" fill="rgb(237,221,44)"/><text x="948.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 0.86%)</title><rect x="945" y="260" width="11" height="15" fill="rgb(245,25,25)"/><text x="948.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.12%)</title><rect x="954" y="276" width="2" height="15" fill="rgb(235,201,23)"/><text x="957.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.12%)</title><rect x="954" y="292" width="2" height="15" fill="rgb(237,26,36)"/><text x="957.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="954" y="308" width="2" height="15" fill="rgb(249,190,26)"/><text x="957.00" y="318.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.12%)</title><rect x="963" y="212" width="1" height="15" fill="rgb(242,110,26)"/><text x="966.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.37%)</title><rect x="964" y="212" width="5" height="15" fill="rgb(222,104,1)"/><text x="967.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="976" y="228" width="1" height="15" fill="rgb(241,202,9)"/><text x="979.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 0.86%)</title><rect x="969" y="212" width="10" height="15" fill="rgb(237,171,12)"/><text x="972.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.12%)</title><rect x="977" y="228" width="2" height="15" fill="rgb(228,169,36)"/><text x="980.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 0.73%)</title><rect x="979" y="212" width="8" height="15" fill="rgb(231,110,15)"/><text x="982.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.12%)</title><rect x="986" y="228" width="1" height="15" fill="rgb(245,190,26)"/><text x="989.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.12%)</title><rect x="986" y="244" width="1" height="15" fill="rgb(212,202,10)"/><text x="989.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 0.61%)</title><rect x="987" y="212" width="8" height="15" fill="rgb(230,135,17)"/><text x="990.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (3 samples, 0.37%)</title><rect x="990" y="228" width="5" height="15" fill="rgb(239,94,20)"/><text x="993.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 3.43%)</title><rect x="956" y="196" width="40" height="15" fill="rgb(241,167,31)"/><text x="959.00" y="206.50">che..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.12%)</title><rect x="995" y="212" width="1" height="15" fill="rgb(220,73,28)"/><text x="998.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="1002" y="228" width="1" height="15" fill="rgb(246,119,6)"/><text x="1005.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.73%)</title><rect x="996" y="196" width="9" height="15" fill="rgb(209,171,28)"/><text x="999.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 0.73%)</title><rect x="996" y="212" width="9" height="15" fill="rgb(247,150,5)"/><text x="999.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="1003" y="228" width="2" height="15" fill="rgb(221,208,22)"/><text x="1006.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="1008" y="212" width="1" height="15" fill="rgb(207,111,20)"/><text x="1011.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 2.69%)</title><rect x="1009" y="212" width="32" height="15" fill="rgb(211,133,17)"/><text x="1012.00" y="222.50">dg..</text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="1044" y="292" width="1" height="15" fill="rgb(227,172,32)"/><text x="1047.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (17 samples, 2.08%)</title><rect x="1044" y="260" width="24" height="15" fill="rgb(233,25,14)"/><text x="1047.00" y="270.50">D..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 2.08%)</title><rect x="1044" y="276" width="24" height="15" fill="rgb(242,23,38)"/><text x="1047.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 1.96%)</title><rect x="1045" y="292" width="23" height="15" fill="rgb(218,146,35)"/><text x="1048.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 1.84%)</title><rect x="1047" y="308" width="21" height="15" fill="rgb(221,5,38)"/><text x="1050.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.12%)</title><rect x="1068" y="324" width="2" height="15" fill="rgb(243,141,0)"/><text x="1071.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (27 samples, 3.30%)</title><rect x="1068" y="292" width="39" height="15" fill="rgb(245,23,16)"/><text x="1071.00" y="302.50">PyA..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (27 samples, 3.30%)</title><rect x="1068" y="308" width="39" height="15" fill="rgb(229,170,17)"/><text x="1071.00" y="318.50">raw..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (26 samples, 3.18%)</title><rect x="1070" y="324" width="37" height="15" fill="rgb(233,140,17)"/><text x="1073.00" y="334.50">_al..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (28 samples, 3.43%)</title><rect x="1068" y="276" width="41" height="15" fill="rgb(212,64,21)"/><text x="1071.00" y="286.50">npy..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.12%)</title><rect x="1107" y="292" width="2" height="15" fill="rgb(216,26,50)"/><text x="1110.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.12%)</title><rect x="1107" y="308" width="2" height="15" fill="rgb(213,61,45)"/><text x="1110.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.12%)</title><rect x="1107" y="324" width="2" height="15" fill="rgb(207,174,10)"/><text x="1110.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.12%)</title><rect x="1107" y="340" width="2" height="15" fill="rgb(210,161,21)"/><text x="1110.00" y="350.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.12%)</title><rect x="1107" y="356" width="2" height="15" fill="rgb(252,110,32)"/><text x="1110.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (29 samples, 3.55%)</title><rect x="1068" y="260" width="42" height="15" fill="rgb(254,166,52)"/><text x="1071.00" y="270.50">Npy..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.12%)</title><rect x="1109" y="276" width="1" height="15" fill="rgb(225,128,30)"/><text x="1112.00" y="286.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.12%)</title><rect x="1110" y="260" width="2" height="15" fill="rgb(221,36,16)"/><text x="1113.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (50 samples, 6.12%)</title><rect x="1041" y="228" width="72" height="15" fill="rgb(215,184,3)"/><text x="1044.00" y="238.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (50 samples, 6.12%)</title><rect x="1041" y="244" width="72" height="15" fill="rgb(227,104,23)"/><text x="1044.00" y="254.50">PyUFunc_..</text></g><g><title>npyiter_iternext_sizeone (nditer_templ.c.src) (1 samples, 0.12%)</title><rect x="1112" y="260" width="1" height="15" fill="rgb(232,76,8)"/><text x="1115.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (117 samples, 14.32%)</title><rect x="945" y="180" width="169" height="15" fill="rgb(233,103,25)"/><text x="948.00" y="190.50">decision_function (sk..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (76 samples, 9.30%)</title><rect x="1005" y="196" width="109" height="15" fill="rgb(217,156,13)"/><text x="1008.00" y="206.50">safe_sparse_d..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (51 samples, 6.24%)</title><rect x="1041" y="212" width="73" height="15" fill="rgb(235,53,31)"/><text x="1044.00" y="222.50">ufunc_ge..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.12%)</title><rect x="1113" y="228" width="1" height="15" fill="rgb(236,100,16)"/><text x="1116.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.12%)</title><rect x="1113" y="244" width="1" height="15" fill="rgb(235,186,43)"/><text x="1116.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.12%)</title><rect x="1114" y="244" width="2" height="15" fill="rgb(240,176,34)"/><text x="1117.00" y="254.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.37%)</title><rect x="1114" y="228" width="5" height="15" fill="rgb(228,132,18)"/><text x="1117.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.24%)</title><rect x="1116" y="244" width="3" height="15" fill="rgb(253,208,1)"/><text x="1119.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.12%)</title><rect x="1117" y="260" width="2" height="15" fill="rgb(232,28,37)"/><text x="1120.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.12%)</title><rect x="1117" y="276" width="2" height="15" fill="rgb(214,9,36)"/><text x="1120.00" y="286.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.12%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(210,124,49)"/><text x="1120.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (13 samples, 1.59%)</title><rect x="1119" y="244" width="19" height="15" fill="rgb(248,162,12)"/><text x="1122.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (13 samples, 1.59%)</title><rect x="1119" y="260" width="19" height="15" fill="rgb(240,118,30)"/><text x="1122.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (13 samples, 1.59%)</title><rect x="1119" y="276" width="19" height="15" fill="rgb(245,137,43)"/><text x="1122.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (13 samples, 1.59%)</title><rect x="1119" y="292" width="19" height="15" fill="rgb(248,8,19)"/><text x="1122.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.12%)</title><rect x="1138" y="260" width="1" height="15" fill="rgb(243,137,12)"/><text x="1141.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1138" y="276" width="1" height="15" fill="rgb(239,114,9)"/><text x="1141.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (18 samples, 2.20%)</title><rect x="1119" y="228" width="26" height="15" fill="rgb(242,226,10)"/><text x="1122.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.61%)</title><rect x="1138" y="244" width="7" height="15" fill="rgb(229,192,20)"/><text x="1141.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.49%)</title><rect x="1139" y="260" width="6" height="15" fill="rgb(224,215,54)"/><text x="1142.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.49%)</title><rect x="1139" y="276" width="6" height="15" fill="rgb(235,109,40)"/><text x="1142.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="1143" y="292" width="2" height="15" fill="rgb(227,130,1)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7fd4169a61b0 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1148" y="292" width="3" height="15" fill="rgb(207,84,45)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7fd416a2cbb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1151" y="292" width="1" height="15" fill="rgb(224,7,43)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fd416a2cbe7 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1152" y="292" width="1" height="15" fill="rgb(227,88,44)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7fd416a2cc3e (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1153" y="292" width="3" height="15" fill="rgb(221,224,48)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7fd416a2cc56 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1156" y="292" width="2" height="15" fill="rgb(249,164,39)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fd3f8c81265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.35%)</title><rect x="1145" y="260" width="16" height="15" fill="rgb(222,132,5)"/><text x="1148.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (11 samples, 1.35%)</title><rect x="1145" y="276" width="16" height="15" fill="rgb(219,53,32)"/><text x="1148.00" y="286.50"></text></g><g><title>0x7fd416a2cc7b (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1158" y="292" width="3" height="15" fill="rgb(238,182,17)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7fd3f8c81275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="1161" y="260" width="3" height="15" fill="rgb(208,190,23)"/><text x="1164.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 5.14%)</title><rect x="1114" y="196" width="61" height="15" fill="rgb(223,170,28)"/><text x="1117.00" y="206.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (42 samples, 5.14%)</title><rect x="1114" y="212" width="61" height="15" fill="rgb(215,70,42)"/><text x="1117.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (21 samples, 2.57%)</title><rect x="1145" y="228" width="30" height="15" fill="rgb(220,173,14)"/><text x="1148.00" y="238.50">tr..</text></g><g><title>0x7fd3f8c609dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 2.57%)</title><rect x="1145" y="244" width="30" height="15" fill="rgb(223,110,47)"/><text x="1148.00" y="254.50">0x..</text></g><g><title>0x7fd3f8c81279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.98%)</title><rect x="1164" y="260" width="11" height="15" fill="rgb(250,212,16)"/><text x="1167.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (183 samples, 22.40%)</title><rect x="912" y="164" width="265" height="15" fill="rgb(223,147,35)"/><text x="915.00" y="174.50">_predict_proba_lr (sklearn/linear_m..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (43 samples, 5.26%)</title><rect x="1114" y="180" width="63" height="15" fill="rgb(244,154,24)"/><text x="1117.00" y="190.50">ufunc_..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.12%)</title><rect x="1175" y="196" width="2" height="15" fill="rgb(242,16,45)"/><text x="1178.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.24%)</title><rect x="1181" y="180" width="3" height="15" fill="rgb(205,181,41)"/><text x="1184.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(225,79,6)"/><text x="1185.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (815 samples, 99.76%)</title><rect x="10" y="52" width="1177" height="15" fill="rgb(236,64,48)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (192 samples, 23.50%)</title><rect x="909" y="68" width="278" height="15" fill="rgb(231,187,7)"/><text x="912.00" y="78.50">profile_skl (bench_LogisticRegression..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (192 samples, 23.50%)</title><rect x="909" y="84" width="278" height="15" fill="rgb(247,132,51)"/><text x="912.00" y="94.50">setup_profile (bench_LogisticRegressi..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py) (192 samples, 23.50%)</title><rect x="909" y="100" width="278" height="15" fill="rgb(214,152,21)"/><text x="912.00" y="110.50">profile (bench_LogisticRegression_lib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (191 samples, 23.38%)</title><rect x="911" y="116" width="276" height="15" fill="rgb(207,176,35)"/><text x="914.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (190 samples, 23.26%)</title><rect x="912" y="132" width="275" height="15" fill="rgb(251,181,6)"/><text x="915.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (190 samples, 23.26%)</title><rect x="912" y="148" width="275" height="15" fill="rgb(224,56,50)"/><text x="915.00" y="158.50">predict_proba (sklearn/linear_model/..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 0.86%)</title><rect x="1177" y="164" width="10" height="15" fill="rgb(230,176,35)"/><text x="1180.00" y="174.50"></text></g><g><title>isclass (inspect.py) (2 samples, 0.24%)</title><rect x="1184" y="180" width="3" height="15" fill="rgb(229,108,18)"/><text x="1187.00" y="190.50"></text></g><g><title>all (817 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(212,226,1)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (2 samples, 0.24%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(214,214,13)"/><text x="1190.00" y="62.50"></text></g></g></svg>