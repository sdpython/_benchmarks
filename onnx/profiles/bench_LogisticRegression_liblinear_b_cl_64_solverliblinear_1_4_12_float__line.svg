<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:18) (1 samples, 0.31%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(212,85,33)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(241,90,33)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.31%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(217,228,44)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.31%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(249,24,36)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.31%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(220,57,20)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.31%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(229,118,25)"/><text x="13.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.31%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(215,80,27)"/><text x="13.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.31%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(221,52,33)"/><text x="13.00" y="222.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:22) (2 samples, 0.62%)</title><rect x="13" y="100" width="7" height="15" fill="rgb(252,186,35)"/><text x="16.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.62%)</title><rect x="24" y="116" width="7" height="15" fill="rgb(240,24,11)"/><text x="27.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.62%)</title><rect x="24" y="132" width="7" height="15" fill="rgb(251,87,30)"/><text x="27.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.62%)</title><rect x="24" y="148" width="7" height="15" fill="rgb(221,63,10)"/><text x="27.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.31%)</title><rect x="53" y="164" width="4" height="15" fill="rgb(217,113,35)"/><text x="56.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.31%)</title><rect x="57" y="164" width="4" height="15" fill="rgb(209,139,27)"/><text x="60.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.31%)</title><rect x="57" y="180" width="4" height="15" fill="rgb(208,116,12)"/><text x="60.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.55%)</title><rect x="83" y="196" width="18" height="15" fill="rgb(207,97,33)"/><text x="86.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (15 samples, 4.64%)</title><rect x="50" y="148" width="54" height="15" fill="rgb(236,71,23)"/><text x="53.00" y="158.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 3.72%)</title><rect x="61" y="164" width="43" height="15" fill="rgb(219,209,43)"/><text x="64.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 3.41%)</title><rect x="64" y="180" width="40" height="15" fill="rgb(227,167,7)"/><text x="67.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="101" y="196" width="3" height="15" fill="rgb(251,225,7)"/><text x="104.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.31%)</title><rect x="104" y="148" width="4" height="15" fill="rgb(243,100,40)"/><text x="107.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.31%)</title><rect x="126" y="196" width="4" height="15" fill="rgb(214,101,12)"/><text x="129.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.31%)</title><rect x="130" y="196" width="4" height="15" fill="rgb(242,198,6)"/><text x="133.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.31%)</title><rect x="141" y="212" width="4" height="15" fill="rgb(215,54,20)"/><text x="144.00" y="222.50"></text></g><g><title>0x7f422a4471ea (libc-2.29.so) (1 samples, 0.31%)</title><rect x="156" y="228" width="3" height="15" fill="rgb(228,196,31)"/><text x="159.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.62%)</title><rect x="159" y="228" width="8" height="15" fill="rgb(230,132,35)"/><text x="162.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.48%)</title><rect x="145" y="212" width="29" height="15" fill="rgb(250,55,22)"/><text x="148.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.62%)</title><rect x="167" y="228" width="7" height="15" fill="rgb(230,39,44)"/><text x="170.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (14 samples, 4.33%)</title><rect x="126" y="180" width="52" height="15" fill="rgb(225,187,16)"/><text x="129.00" y="190.50">decis..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 3.72%)</title><rect x="134" y="196" width="44" height="15" fill="rgb(240,29,30)"/><text x="137.00" y="206.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.31%)</title><rect x="174" y="212" width="4" height="15" fill="rgb(238,61,15)"/><text x="177.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="174" y="228" width="4" height="15" fill="rgb(246,227,31)"/><text x="177.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.31%)</title><rect x="181" y="196" width="4" height="15" fill="rgb(236,103,21)"/><text x="184.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.31%)</title><rect x="189" y="212" width="3" height="15" fill="rgb(206,166,53)"/><text x="192.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.31%)</title><rect x="192" y="212" width="4" height="15" fill="rgb(254,100,4)"/><text x="195.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.31%)</title><rect x="196" y="212" width="3" height="15" fill="rgb(209,44,10)"/><text x="199.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (3 samples, 0.93%)</title><rect x="199" y="212" width="11" height="15" fill="rgb(217,98,23)"/><text x="202.00" y="222.50"></text></g><g><title>0x7f422a447174 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="207" y="228" width="3" height="15" fill="rgb(242,7,39)"/><text x="210.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (10 samples, 3.10%)</title><rect x="185" y="196" width="36" height="15" fill="rgb(238,48,50)"/><text x="188.00" y="206.50">che..</text></g><g><title>__init__ (warnings.py:462) (3 samples, 0.93%)</title><rect x="210" y="212" width="11" height="15" fill="rgb(233,167,12)"/><text x="213.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.31%)</title><rect x="225" y="212" width="4" height="15" fill="rgb(253,162,44)"/><text x="228.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.31%)</title><rect x="229" y="212" width="3" height="15" fill="rgb(226,11,31)"/><text x="232.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.93%)</title><rect x="236" y="228" width="11" height="15" fill="rgb(229,93,13)"/><text x="239.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.31%)</title><rect x="247" y="228" width="4" height="15" fill="rgb(221,204,46)"/><text x="250.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.62%)</title><rect x="251" y="228" width="7" height="15" fill="rgb(244,226,45)"/><text x="254.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (11 samples, 3.41%)</title><rect x="221" y="196" width="41" height="15" fill="rgb(205,139,20)"/><text x="224.00" y="206.50">che..</text></g><g><title>simplefilter (warnings.py:179) (8 samples, 2.48%)</title><rect x="232" y="212" width="30" height="15" fill="rgb(237,74,40)"/><text x="235.00" y="222.50">si..</text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.31%)</title><rect x="258" y="228" width="4" height="15" fill="rgb(244,164,36)"/><text x="261.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.31%)</title><rect x="262" y="196" width="3" height="15" fill="rgb(211,187,26)"/><text x="265.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.31%)</title><rect x="262" y="212" width="3" height="15" fill="rgb(211,66,50)"/><text x="265.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.31%)</title><rect x="262" y="228" width="3" height="15" fill="rgb(238,20,24)"/><text x="265.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.31%)</title><rect x="265" y="196" width="4" height="15" fill="rgb(243,121,39)"/><text x="268.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.31%)</title><rect x="265" y="212" width="4" height="15" fill="rgb(246,51,14)"/><text x="268.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.31%)</title><rect x="273" y="212" width="3" height="15" fill="rgb(221,180,35)"/><text x="276.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.93%)</title><rect x="269" y="196" width="11" height="15" fill="rgb(250,146,16)"/><text x="272.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.31%)</title><rect x="276" y="212" width="4" height="15" fill="rgb(221,66,25)"/><text x="279.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (3 samples, 0.93%)</title><rect x="283" y="228" width="11" height="15" fill="rgb(247,173,43)"/><text x="286.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.55%)</title><rect x="280" y="196" width="18" height="15" fill="rgb(225,135,54)"/><text x="283.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 1.24%)</title><rect x="283" y="212" width="15" height="15" fill="rgb(251,73,14)"/><text x="286.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.31%)</title><rect x="294" y="228" width="4" height="15" fill="rgb(252,53,31)"/><text x="297.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.31%)</title><rect x="298" y="196" width="4" height="15" fill="rgb(241,15,12)"/><text x="301.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.62%)</title><rect x="316" y="228" width="8" height="15" fill="rgb(218,13,52)"/><text x="319.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (7 samples, 2.17%)</title><rect x="302" y="212" width="25" height="15" fill="rgb(225,102,11)"/><text x="305.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.31%)</title><rect x="324" y="228" width="3" height="15" fill="rgb(217,47,5)"/><text x="327.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 2.48%)</title><rect x="302" y="196" width="29" height="15" fill="rgb(229,116,11)"/><text x="305.00" y="206.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.31%)</title><rect x="327" y="212" width="4" height="15" fill="rgb(252,69,42)"/><text x="330.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.31%)</title><rect x="338" y="212" width="4" height="15" fill="rgb(206,15,39)"/><text x="341.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.31%)</title><rect x="342" y="212" width="4" height="15" fill="rgb(237,46,9)"/><text x="345.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.31%)</title><rect x="346" y="212" width="3" height="15" fill="rgb(237,150,31)"/><text x="349.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.31%)</title><rect x="349" y="212" width="4" height="15" fill="rgb(225,218,9)"/><text x="352.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 3.10%)</title><rect x="331" y="196" width="37" height="15" fill="rgb(220,82,28)"/><text x="334.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.24%)</title><rect x="353" y="212" width="15" height="15" fill="rgb(208,175,50)"/><text x="356.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.24%)</title><rect x="353" y="228" width="15" height="15" fill="rgb(242,109,15)"/><text x="356.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.62%)</title><rect x="360" y="244" width="8" height="15" fill="rgb(241,28,24)"/><text x="363.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:573) (2 samples, 0.62%)</title><rect x="368" y="196" width="7" height="15" fill="rgb(249,167,2)"/><text x="371.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (55 samples, 17.03%)</title><rect x="178" y="180" width="200" height="15" fill="rgb(253,156,47)"/><text x="181.00" y="190.50">decision_function (sklearn..</text></g><g><title>check_array (sklearn/utils/validation.py:598) (1 samples, 0.31%)</title><rect x="375" y="196" width="3" height="15" fill="rgb(253,202,24)"/><text x="378.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.31%)</title><rect x="378" y="180" width="4" height="15" fill="rgb(236,192,15)"/><text x="381.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:665) (2 samples, 0.62%)</title><rect x="386" y="196" width="7" height="15" fill="rgb(210,33,20)"/><text x="389.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (4 samples, 1.24%)</title><rect x="382" y="180" width="15" height="15" fill="rgb(218,21,25)"/><text x="385.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.31%)</title><rect x="393" y="196" width="4" height="15" fill="rgb(207,121,16)"/><text x="396.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.31%)</title><rect x="393" y="212" width="4" height="15" fill="rgb(248,196,52)"/><text x="396.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.31%)</title><rect x="393" y="228" width="4" height="15" fill="rgb(210,156,33)"/><text x="396.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.31%)</title><rect x="393" y="244" width="4" height="15" fill="rgb(232,126,3)"/><text x="396.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="411" y="228" width="4" height="15" fill="rgb(249,220,52)"/><text x="414.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.31%)</title><rect x="411" y="244" width="4" height="15" fill="rgb(222,113,30)"/><text x="414.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.31%)</title><rect x="411" y="260" width="4" height="15" fill="rgb(243,108,12)"/><text x="414.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.31%)</title><rect x="411" y="276" width="4" height="15" fill="rgb(236,51,29)"/><text x="414.00" y="286.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.31%)</title><rect x="411" y="292" width="4" height="15" fill="rgb(246,180,40)"/><text x="414.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="415" y="228" width="4" height="15" fill="rgb(218,58,2)"/><text x="418.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2029) (1 samples, 0.31%)</title><rect x="415" y="244" width="4" height="15" fill="rgb(210,57,53)"/><text x="418.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.31%)</title><rect x="419" y="276" width="3" height="15" fill="rgb(217,100,51)"/><text x="422.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.62%)</title><rect x="419" y="260" width="7" height="15" fill="rgb(217,191,16)"/><text x="422.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="422" y="276" width="4" height="15" fill="rgb(236,55,53)"/><text x="425.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.31%)</title><rect x="422" y="292" width="4" height="15" fill="rgb(212,4,23)"/><text x="425.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.31%)</title><rect x="426" y="276" width="4" height="15" fill="rgb(241,125,18)"/><text x="429.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1717) (1 samples, 0.31%)</title><rect x="426" y="292" width="4" height="15" fill="rgb(222,219,40)"/><text x="429.00" y="302.50"></text></g><g><title>array_add (number.c:330) (7 samples, 2.17%)</title><rect x="408" y="196" width="25" height="15" fill="rgb(225,146,45)"/><text x="411.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.86%)</title><rect x="411" y="212" width="22" height="15" fill="rgb(209,36,14)"/><text x="414.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.24%)</title><rect x="419" y="228" width="14" height="15" fill="rgb(235,164,16)"/><text x="422.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.24%)</title><rect x="419" y="244" width="14" height="15" fill="rgb(248,160,54)"/><text x="422.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.62%)</title><rect x="426" y="260" width="7" height="15" fill="rgb(254,14,35)"/><text x="429.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.31%)</title><rect x="430" y="276" width="3" height="15" fill="rgb(215,14,20)"/><text x="433.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1773) (1 samples, 0.31%)</title><rect x="430" y="292" width="3" height="15" fill="rgb(231,21,42)"/><text x="433.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="433" y="196" width="4" height="15" fill="rgb(229,61,42)"/><text x="436.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="433" y="212" width="4" height="15" fill="rgb(241,108,8)"/><text x="436.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="433" y="228" width="4" height="15" fill="rgb(244,47,1)"/><text x="436.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.31%)</title><rect x="437" y="196" width="4" height="15" fill="rgb(230,131,25)"/><text x="440.00" y="206.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="441" y="212" width="3" height="15" fill="rgb(222,160,43)"/><text x="444.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.31%)</title><rect x="444" y="228" width="4" height="15" fill="rgb(250,146,25)"/><text x="447.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2588) (1 samples, 0.31%)</title><rect x="448" y="244" width="4" height="15" fill="rgb(243,32,37)"/><text x="451.00" y="254.50"></text></g><g><title>0x7f422a447120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="448" y="260" width="4" height="15" fill="rgb(238,173,20)"/><text x="451.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.31%)</title><rect x="452" y="260" width="3" height="15" fill="rgb(229,161,44)"/><text x="455.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (3 samples, 0.93%)</title><rect x="452" y="244" width="11" height="15" fill="rgb(234,214,43)"/><text x="455.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.62%)</title><rect x="455" y="260" width="8" height="15" fill="rgb(226,66,38)"/><text x="458.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.31%)</title><rect x="459" y="276" width="4" height="15" fill="rgb(244,218,50)"/><text x="462.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2819) (1 samples, 0.31%)</title><rect x="463" y="244" width="3" height="15" fill="rgb(228,81,22)"/><text x="466.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.31%)</title><rect x="463" y="260" width="3" height="15" fill="rgb(212,16,29)"/><text x="466.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.31%)</title><rect x="466" y="244" width="4" height="15" fill="rgb(212,203,10)"/><text x="469.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.31%)</title><rect x="466" y="260" width="4" height="15" fill="rgb(222,165,10)"/><text x="469.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (2 samples, 0.62%)</title><rect x="470" y="292" width="7" height="15" fill="rgb(241,14,34)"/><text x="473.00" y="302.50"></text></g><g><title>broadcast_strides (array_assign.c:34) (1 samples, 0.31%)</title><rect x="473" y="308" width="4" height="15" fill="rgb(240,102,31)"/><text x="476.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.31%)</title><rect x="477" y="308" width="4" height="15" fill="rgb(223,0,38)"/><text x="480.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (4 samples, 1.24%)</title><rect x="470" y="244" width="14" height="15" fill="rgb(250,92,1)"/><text x="473.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 1.24%)</title><rect x="470" y="260" width="14" height="15" fill="rgb(233,58,33)"/><text x="473.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 1.24%)</title><rect x="470" y="276" width="14" height="15" fill="rgb(206,36,22)"/><text x="473.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.62%)</title><rect x="477" y="292" width="7" height="15" fill="rgb(234,18,9)"/><text x="480.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.31%)</title><rect x="481" y="308" width="3" height="15" fill="rgb(240,167,3)"/><text x="484.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.31%)</title><rect x="481" y="324" width="3" height="15" fill="rgb(252,178,48)"/><text x="484.00" y="334.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.31%)</title><rect x="481" y="340" width="3" height="15" fill="rgb(252,35,2)"/><text x="484.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.31%)</title><rect x="484" y="260" width="4" height="15" fill="rgb(208,85,13)"/><text x="487.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="488" y="276" width="4" height="15" fill="rgb(216,56,18)"/><text x="491.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="488" y="292" width="4" height="15" fill="rgb(228,99,33)"/><text x="491.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.31%)</title><rect x="488" y="308" width="4" height="15" fill="rgb(250,209,10)"/><text x="491.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 4.33%)</title><rect x="444" y="212" width="51" height="15" fill="rgb(209,76,44)"/><text x="447.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (13 samples, 4.02%)</title><rect x="448" y="228" width="47" height="15" fill="rgb(247,205,28)"/><text x="451.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (3 samples, 0.93%)</title><rect x="484" y="244" width="11" height="15" fill="rgb(253,120,38)"/><text x="487.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.62%)</title><rect x="488" y="260" width="7" height="15" fill="rgb(208,170,53)"/><text x="491.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.31%)</title><rect x="492" y="276" width="3" height="15" fill="rgb(251,183,16)"/><text x="495.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.31%)</title><rect x="492" y="292" width="3" height="15" fill="rgb(207,148,36)"/><text x="495.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (16 samples, 4.95%)</title><rect x="441" y="196" width="58" height="15" fill="rgb(245,142,22)"/><text x="444.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.31%)</title><rect x="495" y="212" width="4" height="15" fill="rgb(239,47,34)"/><text x="498.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.31%)</title><rect x="495" y="228" width="4" height="15" fill="rgb(244,144,6)"/><text x="498.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.31%)</title><rect x="495" y="244" width="4" height="15" fill="rgb(225,208,41)"/><text x="498.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (106 samples, 32.82%)</title><rect x="119" y="164" width="387" height="15" fill="rgb(212,138,9)"/><text x="122.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:307)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (30 samples, 9.29%)</title><rect x="397" y="180" width="109" height="15" fill="rgb(219,12,20)"/><text x="400.00" y="190.50">decision_func..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.62%)</title><rect x="499" y="196" width="7" height="15" fill="rgb(221,98,18)"/><text x="502.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.31%)</title><rect x="503" y="212" width="3" height="15" fill="rgb(209,135,29)"/><text x="506.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="506" y="196" width="4" height="15" fill="rgb(231,57,9)"/><text x="509.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.31%)</title><rect x="506" y="212" width="4" height="15" fill="rgb(251,214,34)"/><text x="509.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:811) (1 samples, 0.31%)</title><rect x="510" y="244" width="4" height="15" fill="rgb(213,91,53)"/><text x="513.00" y="254.50"></text></g><g><title>strides_to_terms (mem_overlap.c:735) (1 samples, 0.31%)</title><rect x="510" y="260" width="4" height="15" fill="rgb(219,205,11)"/><text x="513.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.31%)</title><rect x="514" y="244" width="3" height="15" fill="rgb(230,176,24)"/><text x="517.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:601) (1 samples, 0.31%)</title><rect x="514" y="260" width="3" height="15" fill="rgb(215,115,46)"/><text x="517.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.31%)</title><rect x="517" y="276" width="4" height="15" fill="rgb(205,175,14)"/><text x="520.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:311) (1 samples, 0.31%)</title><rect x="517" y="292" width="4" height="15" fill="rgb(206,71,45)"/><text x="520.00" y="302.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:398) (1 samples, 0.31%)</title><rect x="521" y="276" width="4" height="15" fill="rgb(228,228,18)"/><text x="524.00" y="286.50"></text></g><g><title>add_128 (npy_extint128.h:139) (1 samples, 0.31%)</title><rect x="521" y="292" width="4" height="15" fill="rgb(239,96,48)"/><text x="524.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (6 samples, 1.86%)</title><rect x="506" y="164" width="22" height="15" fill="rgb(213,185,51)"/><text x="509.00" y="174.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.86%)</title><rect x="506" y="180" width="22" height="15" fill="rgb(242,44,45)"/><text x="509.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.55%)</title><rect x="510" y="196" width="18" height="15" fill="rgb(206,139,3)"/><text x="513.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (5 samples, 1.55%)</title><rect x="510" y="212" width="18" height="15" fill="rgb(247,194,44)"/><text x="513.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (5 samples, 1.55%)</title><rect x="510" y="228" width="18" height="15" fill="rgb(220,163,54)"/><text x="513.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (3 samples, 0.93%)</title><rect x="517" y="244" width="11" height="15" fill="rgb(213,157,0)"/><text x="520.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (3 samples, 0.93%)</title><rect x="517" y="260" width="11" height="15" fill="rgb(214,25,34)"/><text x="520.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.31%)</title><rect x="525" y="276" width="3" height="15" fill="rgb(235,12,35)"/><text x="528.00" y="286.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.31%)</title><rect x="525" y="292" width="3" height="15" fill="rgb(219,148,1)"/><text x="528.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h:151) (1 samples, 0.31%)</title><rect x="525" y="308" width="3" height="15" fill="rgb(245,2,35)"/><text x="528.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.31%)</title><rect x="528" y="164" width="4" height="15" fill="rgb(241,214,26)"/><text x="531.00" y="174.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.31%)</title><rect x="547" y="180" width="3" height="15" fill="rgb(251,216,28)"/><text x="550.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.31%)</title><rect x="547" y="196" width="3" height="15" fill="rgb(233,136,20)"/><text x="550.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.31%)</title><rect x="547" y="212" width="3" height="15" fill="rgb(219,75,2)"/><text x="550.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:994) (1 samples, 0.31%)</title><rect x="547" y="228" width="3" height="15" fill="rgb(240,38,17)"/><text x="550.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.31%)</title><rect x="550" y="308" width="4" height="15" fill="rgb(209,201,31)"/><text x="553.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (6 samples, 1.86%)</title><rect x="550" y="228" width="22" height="15" fill="rgb(218,42,51)"/><text x="553.00" y="238.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (6 samples, 1.86%)</title><rect x="550" y="244" width="22" height="15" fill="rgb(231,96,4)"/><text x="553.00" y="254.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (6 samples, 1.86%)</title><rect x="550" y="260" width="22" height="15" fill="rgb(216,5,52)"/><text x="553.00" y="270.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (6 samples, 1.86%)</title><rect x="550" y="276" width="22" height="15" fill="rgb(238,97,22)"/><text x="553.00" y="286.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (6 samples, 1.86%)</title><rect x="550" y="292" width="22" height="15" fill="rgb(244,41,5)"/><text x="553.00" y="302.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h:80) (5 samples, 1.55%)</title><rect x="554" y="308" width="18" height="15" fill="rgb(218,171,6)"/><text x="557.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:436) (1 samples, 0.31%)</title><rect x="572" y="292" width="4" height="15" fill="rgb(240,69,27)"/><text x="575.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.31%)</title><rect x="576" y="324" width="3" height="15" fill="rgb(238,72,46)"/><text x="579.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.31%)</title><rect x="576" y="340" width="3" height="15" fill="rgb(252,13,54)"/><text x="579.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:948) (1 samples, 0.31%)</title><rect x="579" y="356" width="4" height="15" fill="rgb(227,204,17)"/><text x="582.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (4 samples, 1.24%)</title><rect x="572" y="276" width="15" height="15" fill="rgb(219,131,37)"/><text x="575.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.93%)</title><rect x="576" y="292" width="11" height="15" fill="rgb(238,116,49)"/><text x="579.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 0.93%)</title><rect x="576" y="308" width="11" height="15" fill="rgb(240,13,27)"/><text x="579.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.62%)</title><rect x="579" y="324" width="8" height="15" fill="rgb(211,4,1)"/><text x="582.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (2 samples, 0.62%)</title><rect x="579" y="340" width="8" height="15" fill="rgb(221,212,46)"/><text x="582.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.31%)</title><rect x="583" y="356" width="4" height="15" fill="rgb(245,96,38)"/><text x="586.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3475) (1 samples, 0.31%)</title><rect x="587" y="292" width="3" height="15" fill="rgb(245,109,21)"/><text x="590.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.31%)</title><rect x="590" y="292" width="4" height="15" fill="rgb(250,90,0)"/><text x="593.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.31%)</title><rect x="590" y="308" width="4" height="15" fill="rgb(237,215,5)"/><text x="593.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.93%)</title><rect x="587" y="276" width="11" height="15" fill="rgb(226,224,38)"/><text x="590.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.31%)</title><rect x="594" y="292" width="4" height="15" fill="rgb(236,99,41)"/><text x="597.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.31%)</title><rect x="594" y="308" width="4" height="15" fill="rgb(211,82,47)"/><text x="597.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.31%)</title><rect x="594" y="324" width="4" height="15" fill="rgb(218,3,34)"/><text x="597.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 4.33%)</title><rect x="550" y="180" width="51" height="15" fill="rgb(206,168,27)"/><text x="553.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 4.33%)</title><rect x="550" y="196" width="51" height="15" fill="rgb(234,33,10)"/><text x="553.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.33%)</title><rect x="550" y="212" width="51" height="15" fill="rgb(219,44,32)"/><text x="553.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 2.48%)</title><rect x="572" y="228" width="29" height="15" fill="rgb(242,42,4)"/><text x="575.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 2.48%)</title><rect x="572" y="244" width="29" height="15" fill="rgb(248,0,45)"/><text x="575.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 2.48%)</title><rect x="572" y="260" width="29" height="15" fill="rgb(251,135,52)"/><text x="575.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.31%)</title><rect x="598" y="276" width="3" height="15" fill="rgb(253,147,39)"/><text x="601.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.31%)</title><rect x="598" y="292" width="3" height="15" fill="rgb(210,111,43)"/><text x="601.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="598" y="308" width="3" height="15" fill="rgb(207,6,37)"/><text x="601.00" y="318.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.31%)</title><rect x="601" y="212" width="4" height="15" fill="rgb(237,57,4)"/><text x="604.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.93%)</title><rect x="601" y="196" width="11" height="15" fill="rgb(230,110,15)"/><text x="604.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.62%)</title><rect x="605" y="212" width="7" height="15" fill="rgb(213,71,39)"/><text x="608.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.31%)</title><rect x="609" y="228" width="3" height="15" fill="rgb(213,31,36)"/><text x="612.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.31%)</title><rect x="609" y="244" width="3" height="15" fill="rgb(251,165,51)"/><text x="612.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.31%)</title><rect x="609" y="260" width="3" height="15" fill="rgb(210,161,46)"/><text x="612.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (156 samples, 48.30%)</title><rect x="46" y="132" width="570" height="15" fill="rgb(218,98,54)"/><text x="49.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (139 samples, 43.03%)</title><rect x="108" y="148" width="508" height="15" fill="rgb(215,128,3)"/><text x="111.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (23 samples, 7.12%)</title><rect x="532" y="164" width="84" height="15" fill="rgb(216,21,9)"/><text x="535.00" y="174.50">_predict_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.24%)</title><rect x="601" y="180" width="15" height="15" fill="rgb(234,18,4)"/><text x="604.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="612" y="196" width="4" height="15" fill="rgb(210,187,32)"/><text x="615.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.31%)</title><rect x="612" y="212" width="4" height="15" fill="rgb(219,168,42)"/><text x="615.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.31%)</title><rect x="612" y="228" width="4" height="15" fill="rgb(241,74,42)"/><text x="615.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.31%)</title><rect x="612" y="244" width="4" height="15" fill="rgb(224,10,4)"/><text x="615.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="612" y="260" width="4" height="15" fill="rgb(226,11,15)"/><text x="615.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:38) (167 samples, 51.70%)</title><rect x="10" y="52" width="610" height="15" fill="rgb(241,41,16)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.p..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:37) (167 samples, 51.70%)</title><rect x="10" y="68" width="610" height="15" fill="rgb(244,79,54)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:29) (167 samples, 51.70%)</title><rect x="10" y="84" width="610" height="15" fill="rgb(251,20,47)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_flo..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:23) (164 samples, 50.77%)</title><rect x="20" y="100" width="600" height="15" fill="rgb(252,105,3)"/><text x="23.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_...</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (161 samples, 49.85%)</title><rect x="31" y="116" width="589" height="15" fill="rgb(223,100,40)"/><text x="34.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="616" y="132" width="4" height="15" fill="rgb(245,91,53)"/><text x="619.00" y="142.50"></text></g><g><title>0x7f422a504134 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="616" y="148" width="4" height="15" fill="rgb(207,220,19)"/><text x="619.00" y="158.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.31%)</title><rect x="620" y="916" width="3" height="15" fill="rgb(215,161,6)"/><text x="623.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.31%)</title><rect x="620" y="932" width="3" height="15" fill="rgb(240,170,19)"/><text x="623.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="620" y="948" width="3" height="15" fill="rgb(251,2,54)"/><text x="623.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="620" y="964" width="3" height="15" fill="rgb(224,180,8)"/><text x="623.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.31%)</title><rect x="620" y="980" width="3" height="15" fill="rgb(246,213,42)"/><text x="623.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.31%)</title><rect x="620" y="996" width="3" height="15" fill="rgb(223,205,20)"/><text x="623.00" y="1006.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.31%)</title><rect x="623" y="932" width="4" height="15" fill="rgb(249,161,18)"/><text x="626.00" y="942.50"></text></g><g><title>dirname (posixpath.py:158) (1 samples, 0.31%)</title><rect x="623" y="948" width="4" height="15" fill="rgb(206,29,23)"/><text x="626.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.31%)</title><rect x="623" y="964" width="4" height="15" fill="rgb(216,96,35)"/><text x="626.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.93%)</title><rect x="620" y="852" width="11" height="15" fill="rgb(230,204,1)"/><text x="623.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.93%)</title><rect x="620" y="868" width="11" height="15" fill="rgb(206,9,28)"/><text x="623.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.93%)</title><rect x="620" y="884" width="11" height="15" fill="rgb(241,41,41)"/><text x="623.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.93%)</title><rect x="620" y="900" width="11" height="15" fill="rgb(234,147,38)"/><text x="623.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.62%)</title><rect x="623" y="916" width="8" height="15" fill="rgb(215,209,25)"/><text x="626.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.31%)</title><rect x="627" y="932" width="4" height="15" fill="rgb(217,28,54)"/><text x="630.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.31%)</title><rect x="627" y="948" width="4" height="15" fill="rgb(224,79,51)"/><text x="630.00" y="958.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="627" y="964" width="4" height="15" fill="rgb(251,187,2)"/><text x="630.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (4 samples, 1.24%)</title><rect x="620" y="148" width="14" height="15" fill="rgb(223,159,27)"/><text x="623.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="164" width="14" height="15" fill="rgb(220,78,0)"/><text x="623.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.24%)</title><rect x="620" y="180" width="14" height="15" fill="rgb(217,129,13)"/><text x="623.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="196" width="14" height="15" fill="rgb(247,22,15)"/><text x="623.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="212" width="14" height="15" fill="rgb(211,175,2)"/><text x="623.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="620" y="228" width="14" height="15" fill="rgb(214,47,17)"/><text x="623.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="620" y="244" width="14" height="15" fill="rgb(251,133,53)"/><text x="623.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="620" y="260" width="14" height="15" fill="rgb(231,203,52)"/><text x="623.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="276" width="14" height="15" fill="rgb(218,129,12)"/><text x="623.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.24%)</title><rect x="620" y="292" width="14" height="15" fill="rgb(247,38,16)"/><text x="623.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="308" width="14" height="15" fill="rgb(254,124,50)"/><text x="623.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="620" y="324" width="14" height="15" fill="rgb(233,71,20)"/><text x="623.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="620" y="340" width="14" height="15" fill="rgb(240,99,32)"/><text x="623.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="620" y="356" width="14" height="15" fill="rgb(236,34,35)"/><text x="623.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="372" width="14" height="15" fill="rgb(249,132,10)"/><text x="623.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.24%)</title><rect x="620" y="388" width="14" height="15" fill="rgb(213,74,9)"/><text x="623.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="404" width="14" height="15" fill="rgb(251,187,14)"/><text x="623.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="620" y="420" width="14" height="15" fill="rgb(211,73,2)"/><text x="623.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="620" y="436" width="14" height="15" fill="rgb(212,76,43)"/><text x="623.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="620" y="452" width="14" height="15" fill="rgb(251,55,35)"/><text x="623.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="468" width="14" height="15" fill="rgb(248,174,11)"/><text x="623.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.24%)</title><rect x="620" y="484" width="14" height="15" fill="rgb(247,91,32)"/><text x="623.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="500" width="14" height="15" fill="rgb(239,132,6)"/><text x="623.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="620" y="516" width="14" height="15" fill="rgb(222,129,10)"/><text x="623.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="620" y="532" width="14" height="15" fill="rgb(229,130,38)"/><text x="623.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="620" y="548" width="14" height="15" fill="rgb(229,204,44)"/><text x="623.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="564" width="14" height="15" fill="rgb(222,175,24)"/><text x="623.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.24%)</title><rect x="620" y="580" width="14" height="15" fill="rgb(232,30,39)"/><text x="623.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="596" width="14" height="15" fill="rgb(236,74,3)"/><text x="623.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.24%)</title><rect x="620" y="612" width="14" height="15" fill="rgb(225,25,36)"/><text x="623.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="628" width="14" height="15" fill="rgb(211,214,31)"/><text x="623.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="644" width="14" height="15" fill="rgb(248,20,1)"/><text x="623.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="620" y="660" width="14" height="15" fill="rgb(222,129,10)"/><text x="623.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="620" y="676" width="14" height="15" fill="rgb(235,49,20)"/><text x="623.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="620" y="692" width="14" height="15" fill="rgb(218,73,6)"/><text x="623.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="708" width="14" height="15" fill="rgb(228,10,7)"/><text x="623.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.24%)</title><rect x="620" y="724" width="14" height="15" fill="rgb(206,74,25)"/><text x="623.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="620" y="740" width="14" height="15" fill="rgb(252,198,6)"/><text x="623.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="620" y="756" width="14" height="15" fill="rgb(250,161,20)"/><text x="623.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="620" y="772" width="14" height="15" fill="rgb(253,165,21)"/><text x="623.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="620" y="788" width="14" height="15" fill="rgb(250,215,30)"/><text x="623.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="620" y="804" width="14" height="15" fill="rgb(243,49,52)"/><text x="623.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.24%)</title><rect x="620" y="820" width="14" height="15" fill="rgb(239,75,1)"/><text x="623.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.24%)</title><rect x="620" y="836" width="14" height="15" fill="rgb(243,20,43)"/><text x="623.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="631" y="852" width="3" height="15" fill="rgb(253,34,24)"/><text x="634.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="631" y="868" width="3" height="15" fill="rgb(220,228,23)"/><text x="634.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.31%)</title><rect x="631" y="884" width="3" height="15" fill="rgb(212,70,51)"/><text x="634.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.31%)</title><rect x="631" y="900" width="3" height="15" fill="rgb(238,170,22)"/><text x="634.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.31%)</title><rect x="631" y="916" width="3" height="15" fill="rgb(220,177,22)"/><text x="634.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.31%)</title><rect x="631" y="932" width="3" height="15" fill="rgb(254,135,44)"/><text x="634.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.31%)</title><rect x="631" y="948" width="3" height="15" fill="rgb(214,8,24)"/><text x="634.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.31%)</title><rect x="631" y="964" width="3" height="15" fill="rgb(221,64,14)"/><text x="634.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.31%)</title><rect x="631" y="980" width="3" height="15" fill="rgb(224,64,8)"/><text x="634.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.31%)</title><rect x="631" y="996" width="3" height="15" fill="rgb(235,52,25)"/><text x="634.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.31%)</title><rect x="631" y="1012" width="3" height="15" fill="rgb(231,209,19)"/><text x="634.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="631" y="1028" width="3" height="15" fill="rgb(252,206,18)"/><text x="634.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="631" y="1044" width="3" height="15" fill="rgb(249,47,17)"/><text x="634.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.31%)</title><rect x="634" y="484" width="4" height="15" fill="rgb(236,128,17)"/><text x="637.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="634" y="500" width="4" height="15" fill="rgb(251,192,3)"/><text x="637.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="634" y="516" width="4" height="15" fill="rgb(236,222,29)"/><text x="637.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="634" y="532" width="4" height="15" fill="rgb(210,229,36)"/><text x="637.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="634" y="548" width="4" height="15" fill="rgb(251,120,3)"/><text x="637.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="634" y="564" width="4" height="15" fill="rgb(234,107,46)"/><text x="637.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="634" y="580" width="4" height="15" fill="rgb(225,159,12)"/><text x="637.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="634" y="596" width="4" height="15" fill="rgb(223,68,49)"/><text x="637.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:3) (1 samples, 0.31%)</title><rect x="634" y="612" width="4" height="15" fill="rgb(205,168,26)"/><text x="637.00" y="622.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.31%)</title><rect x="634" y="628" width="4" height="15" fill="rgb(235,142,42)"/><text x="637.00" y="638.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (2 samples, 0.62%)</title><rect x="634" y="148" width="8" height="15" fill="rgb(242,141,8)"/><text x="637.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="634" y="164" width="8" height="15" fill="rgb(233,37,18)"/><text x="637.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="634" y="180" width="8" height="15" fill="rgb(206,15,1)"/><text x="637.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="634" y="196" width="8" height="15" fill="rgb(211,67,5)"/><text x="637.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="634" y="212" width="8" height="15" fill="rgb(207,43,26)"/><text x="637.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="634" y="228" width="8" height="15" fill="rgb(236,22,23)"/><text x="637.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="634" y="244" width="8" height="15" fill="rgb(252,52,45)"/><text x="637.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="634" y="260" width="8" height="15" fill="rgb(254,225,33)"/><text x="637.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="634" y="276" width="8" height="15" fill="rgb(244,229,15)"/><text x="637.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.62%)</title><rect x="634" y="292" width="8" height="15" fill="rgb(216,184,44)"/><text x="637.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="634" y="308" width="8" height="15" fill="rgb(216,150,36)"/><text x="637.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="634" y="324" width="8" height="15" fill="rgb(218,215,6)"/><text x="637.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="634" y="340" width="8" height="15" fill="rgb(244,167,34)"/><text x="637.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="634" y="356" width="8" height="15" fill="rgb(245,109,49)"/><text x="637.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="634" y="372" width="8" height="15" fill="rgb(246,89,9)"/><text x="637.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.62%)</title><rect x="634" y="388" width="8" height="15" fill="rgb(236,214,7)"/><text x="637.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="634" y="404" width="8" height="15" fill="rgb(238,144,28)"/><text x="637.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="634" y="420" width="8" height="15" fill="rgb(205,101,37)"/><text x="637.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="634" y="436" width="8" height="15" fill="rgb(225,19,45)"/><text x="637.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="634" y="452" width="8" height="15" fill="rgb(234,155,32)"/><text x="637.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="634" y="468" width="8" height="15" fill="rgb(248,19,44)"/><text x="637.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.31%)</title><rect x="638" y="484" width="4" height="15" fill="rgb(206,59,51)"/><text x="641.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="500" width="4" height="15" fill="rgb(249,95,35)"/><text x="641.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="516" width="4" height="15" fill="rgb(244,17,11)"/><text x="641.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="532" width="4" height="15" fill="rgb(209,184,14)"/><text x="641.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="548" width="4" height="15" fill="rgb(249,77,15)"/><text x="641.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="564" width="4" height="15" fill="rgb(247,59,2)"/><text x="641.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.31%)</title><rect x="638" y="580" width="4" height="15" fill="rgb(220,173,10)"/><text x="641.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="596" width="4" height="15" fill="rgb(244,159,51)"/><text x="641.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="612" width="4" height="15" fill="rgb(242,116,54)"/><text x="641.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="628" width="4" height="15" fill="rgb(214,164,21)"/><text x="641.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="644" width="4" height="15" fill="rgb(240,9,53)"/><text x="641.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="660" width="4" height="15" fill="rgb(241,156,7)"/><text x="641.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.31%)</title><rect x="638" y="676" width="4" height="15" fill="rgb(245,108,35)"/><text x="641.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="692" width="4" height="15" fill="rgb(238,20,16)"/><text x="641.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="708" width="4" height="15" fill="rgb(246,158,17)"/><text x="641.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="724" width="4" height="15" fill="rgb(227,133,15)"/><text x="641.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="740" width="4" height="15" fill="rgb(213,150,18)"/><text x="641.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="756" width="4" height="15" fill="rgb(236,33,28)"/><text x="641.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.31%)</title><rect x="638" y="772" width="4" height="15" fill="rgb(251,198,1)"/><text x="641.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="638" y="788" width="4" height="15" fill="rgb(214,99,12)"/><text x="641.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="804" width="4" height="15" fill="rgb(219,154,32)"/><text x="641.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="820" width="4" height="15" fill="rgb(244,145,12)"/><text x="641.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="836" width="4" height="15" fill="rgb(220,229,22)"/><text x="641.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="852" width="4" height="15" fill="rgb(238,161,33)"/><text x="641.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="868" width="4" height="15" fill="rgb(236,121,38)"/><text x="641.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="884" width="4" height="15" fill="rgb(236,121,28)"/><text x="641.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.31%)</title><rect x="638" y="900" width="4" height="15" fill="rgb(237,2,17)"/><text x="641.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="916" width="4" height="15" fill="rgb(221,200,10)"/><text x="641.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="932" width="4" height="15" fill="rgb(213,132,42)"/><text x="641.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="948" width="4" height="15" fill="rgb(223,192,15)"/><text x="641.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="964" width="4" height="15" fill="rgb(234,25,24)"/><text x="641.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="980" width="4" height="15" fill="rgb(233,228,15)"/><text x="641.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.31%)</title><rect x="638" y="996" width="4" height="15" fill="rgb(236,38,36)"/><text x="641.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="638" y="1012" width="4" height="15" fill="rgb(207,190,38)"/><text x="641.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="1028" width="4" height="15" fill="rgb(227,4,16)"/><text x="641.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="1044" width="4" height="15" fill="rgb(242,168,28)"/><text x="641.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="1060" width="4" height="15" fill="rgb(239,171,50)"/><text x="641.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="1076" width="4" height="15" fill="rgb(244,18,37)"/><text x="641.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="1092" width="4" height="15" fill="rgb(222,38,47)"/><text x="641.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="1108" width="4" height="15" fill="rgb(225,160,12)"/><text x="641.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.31%)</title><rect x="638" y="1124" width="4" height="15" fill="rgb(240,131,21)"/><text x="641.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="1140" width="4" height="15" fill="rgb(233,167,25)"/><text x="641.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="1156" width="4" height="15" fill="rgb(211,221,2)"/><text x="641.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="1172" width="4" height="15" fill="rgb(234,181,47)"/><text x="641.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="1188" width="4" height="15" fill="rgb(210,79,12)"/><text x="641.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="1204" width="4" height="15" fill="rgb(249,123,43)"/><text x="641.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.31%)</title><rect x="638" y="1220" width="4" height="15" fill="rgb(219,226,39)"/><text x="641.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="1236" width="4" height="15" fill="rgb(244,126,9)"/><text x="641.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="1252" width="4" height="15" fill="rgb(211,128,34)"/><text x="641.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="1268" width="4" height="15" fill="rgb(213,204,52)"/><text x="641.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="1284" width="4" height="15" fill="rgb(251,72,28)"/><text x="641.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="1300" width="4" height="15" fill="rgb(210,194,53)"/><text x="641.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.31%)</title><rect x="638" y="1316" width="4" height="15" fill="rgb(238,69,48)"/><text x="641.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="1332" width="4" height="15" fill="rgb(212,170,49)"/><text x="641.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="1348" width="4" height="15" fill="rgb(237,61,22)"/><text x="641.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="1364" width="4" height="15" fill="rgb(209,204,30)"/><text x="641.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="1380" width="4" height="15" fill="rgb(223,117,0)"/><text x="641.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="1396" width="4" height="15" fill="rgb(243,34,8)"/><text x="641.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.31%)</title><rect x="638" y="1412" width="4" height="15" fill="rgb(247,42,45)"/><text x="641.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="1428" width="4" height="15" fill="rgb(251,8,10)"/><text x="641.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="1444" width="4" height="15" fill="rgb(235,190,43)"/><text x="641.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="1460" width="4" height="15" fill="rgb(214,222,49)"/><text x="641.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="1476" width="4" height="15" fill="rgb(215,26,3)"/><text x="641.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="1492" width="4" height="15" fill="rgb(231,151,16)"/><text x="641.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:116) (1 samples, 0.31%)</title><rect x="638" y="1508" width="4" height="15" fill="rgb(231,37,30)"/><text x="641.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="1524" width="4" height="15" fill="rgb(216,135,36)"/><text x="641.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="1540" width="4" height="15" fill="rgb(216,107,49)"/><text x="641.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="638" y="1556" width="4" height="15" fill="rgb(236,154,43)"/><text x="641.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="638" y="1572" width="4" height="15" fill="rgb(252,209,35)"/><text x="641.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="638" y="1588" width="4" height="15" fill="rgb(245,206,33)"/><text x="641.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/eigen/__init__.py:12) (1 samples, 0.31%)</title><rect x="638" y="1604" width="4" height="15" fill="rgb(209,171,7)"/><text x="641.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="638" y="1620" width="4" height="15" fill="rgb(208,213,52)"/><text x="641.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="638" y="1636" width="4" height="15" fill="rgb(220,210,0)"/><text x="641.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.31%)</title><rect x="638" y="1652" width="4" height="15" fill="rgb(248,211,19)"/><text x="641.00" y="1662.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.31%)</title><rect x="638" y="1668" width="4" height="15" fill="rgb(236,203,1)"/><text x="641.00" y="1678.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:567) (1 samples, 0.31%)</title><rect x="638" y="1684" width="4" height="15" fill="rgb(241,165,49)"/><text x="641.00" y="1694.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.31%)</title><rect x="642" y="628" width="3" height="15" fill="rgb(210,104,16)"/><text x="645.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="644" width="3" height="15" fill="rgb(246,181,32)"/><text x="645.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="660" width="3" height="15" fill="rgb(227,225,49)"/><text x="645.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="676" width="3" height="15" fill="rgb(243,30,53)"/><text x="645.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="642" y="692" width="3" height="15" fill="rgb(250,88,52)"/><text x="645.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="708" width="3" height="15" fill="rgb(247,165,52)"/><text x="645.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.31%)</title><rect x="642" y="724" width="3" height="15" fill="rgb(225,115,9)"/><text x="645.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="740" width="3" height="15" fill="rgb(252,182,27)"/><text x="645.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="756" width="3" height="15" fill="rgb(247,60,28)"/><text x="645.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="772" width="3" height="15" fill="rgb(231,87,29)"/><text x="645.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="642" y="788" width="3" height="15" fill="rgb(242,19,51)"/><text x="645.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="804" width="3" height="15" fill="rgb(205,81,38)"/><text x="645.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.31%)</title><rect x="642" y="820" width="3" height="15" fill="rgb(213,117,5)"/><text x="645.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="836" width="3" height="15" fill="rgb(205,27,12)"/><text x="645.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="852" width="3" height="15" fill="rgb(244,215,51)"/><text x="645.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="868" width="3" height="15" fill="rgb(239,88,46)"/><text x="645.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="642" y="884" width="3" height="15" fill="rgb(232,211,42)"/><text x="645.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="900" width="3" height="15" fill="rgb(205,120,0)"/><text x="645.00" y="910.50"></text></g><g><title>0x7f42015ad40e (?) (1 samples, 0.31%)</title><rect x="642" y="916" width="3" height="15" fill="rgb(241,109,49)"/><text x="645.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="932" width="3" height="15" fill="rgb(217,24,5)"/><text x="645.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="948" width="3" height="15" fill="rgb(217,141,6)"/><text x="645.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="964" width="3" height="15" fill="rgb(212,14,2)"/><text x="645.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="642" y="980" width="3" height="15" fill="rgb(215,60,38)"/><text x="645.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="996" width="3" height="15" fill="rgb(241,184,42)"/><text x="645.00" y="1006.50"></text></g><g><title>0x7f4201366cd2 (?) (1 samples, 0.31%)</title><rect x="642" y="1012" width="3" height="15" fill="rgb(246,220,35)"/><text x="645.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="1028" width="3" height="15" fill="rgb(214,47,0)"/><text x="645.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="1044" width="3" height="15" fill="rgb(224,136,11)"/><text x="645.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="1060" width="3" height="15" fill="rgb(244,173,11)"/><text x="645.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="642" y="1076" width="3" height="15" fill="rgb(221,38,47)"/><text x="645.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="1092" width="3" height="15" fill="rgb(208,17,38)"/><text x="645.00" y="1102.50"></text></g><g><title>0x7f4200a5c0e5 (?) (1 samples, 0.31%)</title><rect x="642" y="1108" width="3" height="15" fill="rgb(235,23,13)"/><text x="645.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="1124" width="3" height="15" fill="rgb(220,38,16)"/><text x="645.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="1140" width="3" height="15" fill="rgb(224,122,51)"/><text x="645.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="1156" width="3" height="15" fill="rgb(254,109,16)"/><text x="645.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="642" y="1172" width="3" height="15" fill="rgb(218,204,30)"/><text x="645.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="1188" width="3" height="15" fill="rgb(250,136,15)"/><text x="645.00" y="1198.50"></text></g><g><title>0x7f42007e0e68 (?) (1 samples, 0.31%)</title><rect x="642" y="1204" width="3" height="15" fill="rgb(232,207,2)"/><text x="645.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="1220" width="3" height="15" fill="rgb(240,149,26)"/><text x="645.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="1236" width="3" height="15" fill="rgb(207,103,19)"/><text x="645.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="1252" width="3" height="15" fill="rgb(234,218,13)"/><text x="645.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="642" y="1268" width="3" height="15" fill="rgb(225,57,6)"/><text x="645.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="1284" width="3" height="15" fill="rgb(253,201,25)"/><text x="645.00" y="1294.50"></text></g><g><title>0x7f42005712fb (?) (1 samples, 0.31%)</title><rect x="642" y="1300" width="3" height="15" fill="rgb(231,170,18)"/><text x="645.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="1316" width="3" height="15" fill="rgb(242,65,10)"/><text x="645.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="1332" width="3" height="15" fill="rgb(214,76,31)"/><text x="645.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="1348" width="3" height="15" fill="rgb(223,55,33)"/><text x="645.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="642" y="1364" width="3" height="15" fill="rgb(205,7,42)"/><text x="645.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="1380" width="3" height="15" fill="rgb(237,24,53)"/><text x="645.00" y="1390.50"></text></g><g><title>0x7f4200355153 (?) (1 samples, 0.31%)</title><rect x="642" y="1396" width="3" height="15" fill="rgb(243,186,28)"/><text x="645.00" y="1406.50"></text></g><g><title>0x7f4200353c13 (?) (1 samples, 0.31%)</title><rect x="642" y="1412" width="3" height="15" fill="rgb(210,149,49)"/><text x="645.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="642" y="1428" width="3" height="15" fill="rgb(229,9,52)"/><text x="645.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="642" y="1444" width="3" height="15" fill="rgb(241,46,8)"/><text x="645.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="642" y="1460" width="3" height="15" fill="rgb(253,121,19)"/><text x="645.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="642" y="1476" width="3" height="15" fill="rgb(208,106,51)"/><text x="645.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="642" y="1492" width="3" height="15" fill="rgb(242,148,21)"/><text x="645.00" y="1502.50"></text></g><g><title>0x7f42000b0181 (?) (1 samples, 0.31%)</title><rect x="642" y="1508" width="3" height="15" fill="rgb(236,46,22)"/><text x="645.00" y="1518.50"></text></g><g><title>0x7f42000b31c9 (?) (1 samples, 0.31%)</title><rect x="642" y="1524" width="3" height="15" fill="rgb(220,125,13)"/><text x="645.00" y="1534.50"></text></g><g><title>0x7f42000df167 (?) (1 samples, 0.31%)</title><rect x="642" y="1540" width="3" height="15" fill="rgb(238,137,31)"/><text x="645.00" y="1550.50"></text></g><g><title>0x7f42000dab64 (?) (1 samples, 0.31%)</title><rect x="642" y="1556" width="3" height="15" fill="rgb(214,169,39)"/><text x="645.00" y="1566.50"></text></g><g><title>0x7f42000be07b (?) (1 samples, 0.31%)</title><rect x="642" y="1572" width="3" height="15" fill="rgb(239,92,31)"/><text x="645.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.31%)</title><rect x="642" y="1588" width="3" height="15" fill="rgb(228,142,10)"/><text x="645.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.31%)</title><rect x="642" y="1604" width="3" height="15" fill="rgb(236,111,48)"/><text x="645.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.31%)</title><rect x="642" y="1620" width="3" height="15" fill="rgb(232,83,0)"/><text x="645.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:108) (1 samples, 0.31%)</title><rect x="642" y="1636" width="3" height="15" fill="rgb(226,35,20)"/><text x="645.00" y="1646.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="642" y="1652" width="3" height="15" fill="rgb(221,151,7)"/><text x="645.00" y="1662.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.31%)</title><rect x="645" y="1012" width="4" height="15" fill="rgb(253,99,23)"/><text x="648.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="645" y="1028" width="4" height="15" fill="rgb(239,120,47)"/><text x="648.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="645" y="1044" width="4" height="15" fill="rgb(252,5,54)"/><text x="648.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="645" y="1060" width="4" height="15" fill="rgb(234,7,8)"/><text x="648.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="645" y="1076" width="4" height="15" fill="rgb(230,206,3)"/><text x="648.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="645" y="1092" width="4" height="15" fill="rgb(253,137,20)"/><text x="648.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="645" y="1108" width="4" height="15" fill="rgb(221,98,38)"/><text x="648.00" y="1118.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.62%)</title><rect x="645" y="916" width="7" height="15" fill="rgb(249,56,49)"/><text x="648.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="645" y="932" width="7" height="15" fill="rgb(219,122,25)"/><text x="648.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="645" y="948" width="7" height="15" fill="rgb(217,62,35)"/><text x="648.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="645" y="964" width="7" height="15" fill="rgb(228,141,1)"/><text x="648.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="645" y="980" width="7" height="15" fill="rgb(218,205,48)"/><text x="648.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="645" y="996" width="7" height="15" fill="rgb(235,7,4)"/><text x="648.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.31%)</title><rect x="649" y="1012" width="3" height="15" fill="rgb(224,206,16)"/><text x="652.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1028" width="3" height="15" fill="rgb(242,116,5)"/><text x="652.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1044" width="3" height="15" fill="rgb(243,97,6)"/><text x="652.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1060" width="3" height="15" fill="rgb(217,197,44)"/><text x="652.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1076" width="3" height="15" fill="rgb(215,21,29)"/><text x="652.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1092" width="3" height="15" fill="rgb(231,118,42)"/><text x="652.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.31%)</title><rect x="649" y="1108" width="3" height="15" fill="rgb(246,174,44)"/><text x="652.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1124" width="3" height="15" fill="rgb(253,107,39)"/><text x="652.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1140" width="3" height="15" fill="rgb(251,100,52)"/><text x="652.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1156" width="3" height="15" fill="rgb(214,158,17)"/><text x="652.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1172" width="3" height="15" fill="rgb(250,215,17)"/><text x="652.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1188" width="3" height="15" fill="rgb(222,198,23)"/><text x="652.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.31%)</title><rect x="649" y="1204" width="3" height="15" fill="rgb(223,42,33)"/><text x="652.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1220" width="3" height="15" fill="rgb(215,102,24)"/><text x="652.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1236" width="3" height="15" fill="rgb(226,179,9)"/><text x="652.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1252" width="3" height="15" fill="rgb(249,18,22)"/><text x="652.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1268" width="3" height="15" fill="rgb(210,158,49)"/><text x="652.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1284" width="3" height="15" fill="rgb(217,163,54)"/><text x="652.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.31%)</title><rect x="649" y="1300" width="3" height="15" fill="rgb(238,14,1)"/><text x="652.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1316" width="3" height="15" fill="rgb(229,210,13)"/><text x="652.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1332" width="3" height="15" fill="rgb(230,141,33)"/><text x="652.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1348" width="3" height="15" fill="rgb(233,204,20)"/><text x="652.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1364" width="3" height="15" fill="rgb(221,97,53)"/><text x="652.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1380" width="3" height="15" fill="rgb(246,174,10)"/><text x="652.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.31%)</title><rect x="649" y="1396" width="3" height="15" fill="rgb(212,165,39)"/><text x="652.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1412" width="3" height="15" fill="rgb(224,145,38)"/><text x="652.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1428" width="3" height="15" fill="rgb(254,120,17)"/><text x="652.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1444" width="3" height="15" fill="rgb(231,33,2)"/><text x="652.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1460" width="3" height="15" fill="rgb(227,20,31)"/><text x="652.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1476" width="3" height="15" fill="rgb(228,166,43)"/><text x="652.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.31%)</title><rect x="649" y="1492" width="3" height="15" fill="rgb(241,44,15)"/><text x="652.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1508" width="3" height="15" fill="rgb(237,157,47)"/><text x="652.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1524" width="3" height="15" fill="rgb(230,114,14)"/><text x="652.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1540" width="3" height="15" fill="rgb(252,30,27)"/><text x="652.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1556" width="3" height="15" fill="rgb(247,2,36)"/><text x="652.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1572" width="3" height="15" fill="rgb(231,91,41)"/><text x="652.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.31%)</title><rect x="649" y="1588" width="3" height="15" fill="rgb(228,110,44)"/><text x="652.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1604" width="3" height="15" fill="rgb(249,193,6)"/><text x="652.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1620" width="3" height="15" fill="rgb(214,214,34)"/><text x="652.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1636" width="3" height="15" fill="rgb(247,51,43)"/><text x="652.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1652" width="3" height="15" fill="rgb(222,14,30)"/><text x="652.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1668" width="3" height="15" fill="rgb(237,156,6)"/><text x="652.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.31%)</title><rect x="649" y="1684" width="3" height="15" fill="rgb(220,26,25)"/><text x="652.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1700" width="3" height="15" fill="rgb(216,121,7)"/><text x="652.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1716" width="3" height="15" fill="rgb(228,119,49)"/><text x="652.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1732" width="3" height="15" fill="rgb(239,51,10)"/><text x="652.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1748" width="3" height="15" fill="rgb(249,144,40)"/><text x="652.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1764" width="3" height="15" fill="rgb(237,89,44)"/><text x="652.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.31%)</title><rect x="649" y="1780" width="3" height="15" fill="rgb(232,124,30)"/><text x="652.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1796" width="3" height="15" fill="rgb(230,68,52)"/><text x="652.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1812" width="3" height="15" fill="rgb(232,131,10)"/><text x="652.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1828" width="3" height="15" fill="rgb(250,166,5)"/><text x="652.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1844" width="3" height="15" fill="rgb(243,152,47)"/><text x="652.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1860" width="3" height="15" fill="rgb(220,82,35)"/><text x="652.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.31%)</title><rect x="649" y="1876" width="3" height="15" fill="rgb(210,189,30)"/><text x="652.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="649" y="1892" width="3" height="15" fill="rgb(241,144,45)"/><text x="652.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1908" width="3" height="15" fill="rgb(229,11,54)"/><text x="652.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="649" y="1924" width="3" height="15" fill="rgb(212,93,16)"/><text x="652.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="649" y="1940" width="3" height="15" fill="rgb(221,173,8)"/><text x="652.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="649" y="1956" width="3" height="15" fill="rgb(206,124,33)"/><text x="652.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="649" y="1972" width="3" height="15" fill="rgb(236,126,11)"/><text x="652.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="649" y="1988" width="3" height="15" fill="rgb(208,221,23)"/><text x="652.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.31%)</title><rect x="649" y="2004" width="3" height="15" fill="rgb(222,145,3)"/><text x="652.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.31%)</title><rect x="649" y="2020" width="3" height="15" fill="rgb(246,222,4)"/><text x="652.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1372) (1 samples, 0.31%)</title><rect x="649" y="2036" width="3" height="15" fill="rgb(231,52,24)"/><text x="652.00" y="2046.50"></text></g><g><title>aliased_name (matplotlib/artist.py:1334) (1 samples, 0.31%)</title><rect x="649" y="2052" width="3" height="15" fill="rgb(230,56,49)"/><text x="652.00" y="2062.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.24%)</title><rect x="642" y="436" width="14" height="15" fill="rgb(223,197,20)"/><text x="645.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="642" y="452" width="14" height="15" fill="rgb(228,39,3)"/><text x="645.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="642" y="468" width="14" height="15" fill="rgb(245,95,29)"/><text x="645.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="642" y="484" width="14" height="15" fill="rgb(248,107,13)"/><text x="645.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="642" y="500" width="14" height="15" fill="rgb(225,112,51)"/><text x="645.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="642" y="516" width="14" height="15" fill="rgb(252,188,2)"/><text x="645.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.24%)</title><rect x="642" y="532" width="14" height="15" fill="rgb(236,151,44)"/><text x="645.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="642" y="548" width="14" height="15" fill="rgb(244,32,25)"/><text x="645.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="642" y="564" width="14" height="15" fill="rgb(234,134,43)"/><text x="645.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="642" y="580" width="14" height="15" fill="rgb(221,3,0)"/><text x="645.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="642" y="596" width="14" height="15" fill="rgb(209,175,38)"/><text x="645.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="642" y="612" width="14" height="15" fill="rgb(213,166,16)"/><text x="645.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.93%)</title><rect x="645" y="628" width="11" height="15" fill="rgb(247,218,8)"/><text x="648.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="645" y="644" width="11" height="15" fill="rgb(212,9,33)"/><text x="648.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="645" y="660" width="11" height="15" fill="rgb(231,105,13)"/><text x="648.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="645" y="676" width="11" height="15" fill="rgb(222,134,49)"/><text x="648.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="645" y="692" width="11" height="15" fill="rgb(244,83,36)"/><text x="648.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="645" y="708" width="11" height="15" fill="rgb(220,191,46)"/><text x="648.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.93%)</title><rect x="645" y="724" width="11" height="15" fill="rgb(206,215,32)"/><text x="648.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="645" y="740" width="11" height="15" fill="rgb(248,150,51)"/><text x="648.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="645" y="756" width="11" height="15" fill="rgb(205,147,18)"/><text x="648.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="645" y="772" width="11" height="15" fill="rgb(252,63,38)"/><text x="648.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="645" y="788" width="11" height="15" fill="rgb(253,26,44)"/><text x="648.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="645" y="804" width="11" height="15" fill="rgb(228,61,0)"/><text x="648.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.93%)</title><rect x="645" y="820" width="11" height="15" fill="rgb(228,215,10)"/><text x="648.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="645" y="836" width="11" height="15" fill="rgb(223,40,12)"/><text x="648.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="645" y="852" width="11" height="15" fill="rgb(253,161,49)"/><text x="648.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="645" y="868" width="11" height="15" fill="rgb(216,65,23)"/><text x="648.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="645" y="884" width="11" height="15" fill="rgb(251,125,13)"/><text x="648.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="645" y="900" width="11" height="15" fill="rgb(228,34,11)"/><text x="648.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.31%)</title><rect x="652" y="916" width="4" height="15" fill="rgb(226,227,13)"/><text x="655.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="652" y="932" width="4" height="15" fill="rgb(244,217,0)"/><text x="655.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="652" y="948" width="4" height="15" fill="rgb(245,116,43)"/><text x="655.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="652" y="964" width="4" height="15" fill="rgb(254,17,32)"/><text x="655.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="652" y="980" width="4" height="15" fill="rgb(238,203,22)"/><text x="655.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="652" y="996" width="4" height="15" fill="rgb(221,52,6)"/><text x="655.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="652" y="1012" width="4" height="15" fill="rgb(220,55,45)"/><text x="655.00" y="1022.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.31%)</title><rect x="656" y="1108" width="4" height="15" fill="rgb(251,205,50)"/><text x="659.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="656" y="1124" width="4" height="15" fill="rgb(211,83,50)"/><text x="659.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="656" y="1140" width="4" height="15" fill="rgb(236,167,34)"/><text x="659.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="656" y="1156" width="4" height="15" fill="rgb(213,189,22)"/><text x="659.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="656" y="1172" width="4" height="15" fill="rgb(247,44,9)"/><text x="659.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="656" y="1188" width="4" height="15" fill="rgb(214,217,50)"/><text x="659.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.31%)</title><rect x="656" y="1204" width="4" height="15" fill="rgb(251,25,9)"/><text x="659.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="656" y="1220" width="4" height="15" fill="rgb(237,105,42)"/><text x="659.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="656" y="1236" width="4" height="15" fill="rgb(217,196,11)"/><text x="659.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="656" y="1252" width="4" height="15" fill="rgb(228,119,5)"/><text x="659.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="656" y="1268" width="4" height="15" fill="rgb(207,194,49)"/><text x="659.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="656" y="1284" width="4" height="15" fill="rgb(227,172,3)"/><text x="659.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="656" y="1300" width="4" height="15" fill="rgb(247,214,0)"/><text x="659.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="656" y="1316" width="4" height="15" fill="rgb(240,35,19)"/><text x="659.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="656" y="1332" width="4" height="15" fill="rgb(254,33,39)"/><text x="659.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:20) (1 samples, 0.31%)</title><rect x="656" y="1348" width="4" height="15" fill="rgb(220,43,7)"/><text x="659.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="656" y="1364" width="4" height="15" fill="rgb(218,85,18)"/><text x="659.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="656" y="1380" width="4" height="15" fill="rgb(205,133,27)"/><text x="659.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="656" y="1396" width="4" height="15" fill="rgb(239,69,29)"/><text x="659.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="656" y="1412" width="4" height="15" fill="rgb(244,65,34)"/><text x="659.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="656" y="1428" width="4" height="15" fill="rgb(212,158,45)"/><text x="659.00" y="1438.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="656" y="1444" width="4" height="15" fill="rgb(228,46,50)"/><text x="659.00" y="1454.50"></text></g><g><title>root (&lt;template&gt;:22) (1 samples, 0.31%)</title><rect x="660" y="1572" width="3" height="15" fill="rgb(235,100,16)"/><text x="663.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.31%)</title><rect x="660" y="1588" width="3" height="15" fill="rgb(219,76,18)"/><text x="663.00" y="1598.50"></text></g><g><title>format_name_with_domain (skl2onnx/algebra/automation.py:145) (1 samples, 0.31%)</title><rect x="660" y="1604" width="3" height="15" fill="rgb(206,83,22)"/><text x="663.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="660" y="1620" width="3" height="15" fill="rgb(245,136,15)"/><text x="663.00" y="1630.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.62%)</title><rect x="660" y="1492" width="7" height="15" fill="rgb(210,223,4)"/><text x="663.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.62%)</title><rect x="660" y="1508" width="7" height="15" fill="rgb(232,183,31)"/><text x="663.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.62%)</title><rect x="660" y="1524" width="7" height="15" fill="rgb(231,125,20)"/><text x="663.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.62%)</title><rect x="660" y="1540" width="7" height="15" fill="rgb(250,185,3)"/><text x="663.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.62%)</title><rect x="660" y="1556" width="7" height="15" fill="rgb(235,45,15)"/><text x="663.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:99) (1 samples, 0.31%)</title><rect x="663" y="1572" width="4" height="15" fill="rgb(209,127,24)"/><text x="666.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:247) (1 samples, 0.31%)</title><rect x="663" y="1588" width="4" height="15" fill="rgb(246,105,45)"/><text x="666.00" y="1598.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::DepthToSpace_Onnx_ver1&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="667" y="1572" width="4" height="15" fill="rgb(218,13,39)"/><text x="670.00" y="1582.50"></text></g><g><title>onnx::OpSchema::TypeConstraint (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="667" y="1588" width="4" height="15" fill="rgb(225,71,51)"/><text x="670.00" y="1598.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="667" y="1604" width="4" height="15" fill="rgb(205,184,49)"/><text x="670.00" y="1614.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;_typeobject* const, std::vector&lt;pybind11::detail::type_info*, std::allocator&lt;pybind11::detail::type_info*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.776] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="667" y="1620" width="4" height="15" fill="rgb(236,32,36)"/><text x="670.00" y="1630.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="667" y="1636" width="4" height="15" fill="rgb(227,177,31)"/><text x="670.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="667" y="1652" width="4" height="15" fill="rgb(247,88,34)"/><text x="670.00" y="1662.50"></text></g><g><title>0x7f422a428700 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="667" y="1668" width="4" height="15" fill="rgb(206,126,40)"/><text x="670.00" y="1678.50"></text></g><g><title>0x7f422a425ad1 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="667" y="1684" width="4" height="15" fill="rgb(224,198,31)"/><text x="670.00" y="1694.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:4) (15 samples, 4.64%)</title><rect x="620" y="52" width="54" height="15" fill="rgb(253,80,3)"/><text x="623.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 4.64%)</title><rect x="620" y="68" width="54" height="15" fill="rgb(213,163,34)"/><text x="623.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 4.64%)</title><rect x="620" y="84" width="54" height="15" fill="rgb(249,114,52)"/><text x="623.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 4.64%)</title><rect x="620" y="100" width="54" height="15" fill="rgb(253,220,26)"/><text x="623.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 4.64%)</title><rect x="620" y="116" width="54" height="15" fill="rgb(226,209,45)"/><text x="623.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 4.64%)</title><rect x="620" y="132" width="54" height="15" fill="rgb(215,161,41)"/><text x="623.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (9 samples, 2.79%)</title><rect x="642" y="148" width="32" height="15" fill="rgb(231,39,28)"/><text x="645.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.79%)</title><rect x="642" y="164" width="32" height="15" fill="rgb(248,53,27)"/><text x="645.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.79%)</title><rect x="642" y="180" width="32" height="15" fill="rgb(209,122,36)"/><text x="645.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.79%)</title><rect x="642" y="196" width="32" height="15" fill="rgb(241,177,10)"/><text x="645.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.79%)</title><rect x="642" y="212" width="32" height="15" fill="rgb(242,64,40)"/><text x="645.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.79%)</title><rect x="642" y="228" width="32" height="15" fill="rgb(233,130,28)"/><text x="645.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 2.79%)</title><rect x="642" y="244" width="32" height="15" fill="rgb(254,77,29)"/><text x="645.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.79%)</title><rect x="642" y="260" width="32" height="15" fill="rgb(238,78,20)"/><text x="645.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.79%)</title><rect x="642" y="276" width="32" height="15" fill="rgb(206,132,24)"/><text x="645.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.79%)</title><rect x="642" y="292" width="32" height="15" fill="rgb(245,3,49)"/><text x="645.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.79%)</title><rect x="642" y="308" width="32" height="15" fill="rgb(251,76,11)"/><text x="645.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.79%)</title><rect x="642" y="324" width="32" height="15" fill="rgb(242,132,14)"/><text x="645.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (9 samples, 2.79%)</title><rect x="642" y="340" width="32" height="15" fill="rgb(239,210,51)"/><text x="645.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.79%)</title><rect x="642" y="356" width="32" height="15" fill="rgb(207,212,43)"/><text x="645.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.79%)</title><rect x="642" y="372" width="32" height="15" fill="rgb(243,111,34)"/><text x="645.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.79%)</title><rect x="642" y="388" width="32" height="15" fill="rgb(214,126,32)"/><text x="645.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.79%)</title><rect x="642" y="404" width="32" height="15" fill="rgb(212,212,35)"/><text x="645.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.79%)</title><rect x="642" y="420" width="32" height="15" fill="rgb(225,147,4)"/><text x="645.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.55%)</title><rect x="656" y="436" width="18" height="15" fill="rgb(249,210,4)"/><text x="659.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="452" width="18" height="15" fill="rgb(241,2,14)"/><text x="659.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.55%)</title><rect x="656" y="468" width="18" height="15" fill="rgb(209,127,48)"/><text x="659.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="484" width="18" height="15" fill="rgb(208,85,8)"/><text x="659.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="500" width="18" height="15" fill="rgb(206,145,48)"/><text x="659.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.55%)</title><rect x="656" y="516" width="18" height="15" fill="rgb(214,6,2)"/><text x="659.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.55%)</title><rect x="656" y="532" width="18" height="15" fill="rgb(227,194,5)"/><text x="659.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.55%)</title><rect x="656" y="548" width="18" height="15" fill="rgb(243,219,9)"/><text x="659.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="564" width="18" height="15" fill="rgb(223,119,17)"/><text x="659.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.55%)</title><rect x="656" y="580" width="18" height="15" fill="rgb(253,10,15)"/><text x="659.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="596" width="18" height="15" fill="rgb(234,116,22)"/><text x="659.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.55%)</title><rect x="656" y="612" width="18" height="15" fill="rgb(253,198,14)"/><text x="659.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.55%)</title><rect x="656" y="628" width="18" height="15" fill="rgb(221,49,14)"/><text x="659.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.55%)</title><rect x="656" y="644" width="18" height="15" fill="rgb(241,128,7)"/><text x="659.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="660" width="18" height="15" fill="rgb(220,214,54)"/><text x="659.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.55%)</title><rect x="656" y="676" width="18" height="15" fill="rgb(227,0,29)"/><text x="659.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="692" width="18" height="15" fill="rgb(244,179,32)"/><text x="659.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.55%)</title><rect x="656" y="708" width="18" height="15" fill="rgb(214,89,7)"/><text x="659.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.55%)</title><rect x="656" y="724" width="18" height="15" fill="rgb(254,74,7)"/><text x="659.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.55%)</title><rect x="656" y="740" width="18" height="15" fill="rgb(254,68,34)"/><text x="659.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="756" width="18" height="15" fill="rgb(215,160,13)"/><text x="659.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.55%)</title><rect x="656" y="772" width="18" height="15" fill="rgb(215,0,29)"/><text x="659.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="788" width="18" height="15" fill="rgb(242,50,44)"/><text x="659.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.55%)</title><rect x="656" y="804" width="18" height="15" fill="rgb(226,198,1)"/><text x="659.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.55%)</title><rect x="656" y="820" width="18" height="15" fill="rgb(250,196,37)"/><text x="659.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.55%)</title><rect x="656" y="836" width="18" height="15" fill="rgb(224,155,30)"/><text x="659.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="852" width="18" height="15" fill="rgb(254,206,16)"/><text x="659.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.55%)</title><rect x="656" y="868" width="18" height="15" fill="rgb(209,24,32)"/><text x="659.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="884" width="18" height="15" fill="rgb(225,112,10)"/><text x="659.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.55%)</title><rect x="656" y="900" width="18" height="15" fill="rgb(236,44,48)"/><text x="659.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="916" width="18" height="15" fill="rgb(222,203,29)"/><text x="659.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="932" width="18" height="15" fill="rgb(240,118,37)"/><text x="659.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.55%)</title><rect x="656" y="948" width="18" height="15" fill="rgb(241,114,28)"/><text x="659.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.55%)</title><rect x="656" y="964" width="18" height="15" fill="rgb(213,207,28)"/><text x="659.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.55%)</title><rect x="656" y="980" width="18" height="15" fill="rgb(239,33,5)"/><text x="659.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="996" width="18" height="15" fill="rgb(248,93,54)"/><text x="659.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.55%)</title><rect x="656" y="1012" width="18" height="15" fill="rgb(227,46,24)"/><text x="659.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.55%)</title><rect x="656" y="1028" width="18" height="15" fill="rgb(224,158,14)"/><text x="659.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.55%)</title><rect x="656" y="1044" width="18" height="15" fill="rgb(216,178,47)"/><text x="659.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.55%)</title><rect x="656" y="1060" width="18" height="15" fill="rgb(243,126,52)"/><text x="659.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.55%)</title><rect x="656" y="1076" width="18" height="15" fill="rgb(252,166,11)"/><text x="659.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.55%)</title><rect x="656" y="1092" width="18" height="15" fill="rgb(231,24,34)"/><text x="659.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.24%)</title><rect x="660" y="1108" width="14" height="15" fill="rgb(236,153,51)"/><text x="663.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.24%)</title><rect x="660" y="1124" width="14" height="15" fill="rgb(244,153,26)"/><text x="663.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="660" y="1140" width="14" height="15" fill="rgb(249,208,18)"/><text x="663.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="660" y="1156" width="14" height="15" fill="rgb(222,3,52)"/><text x="663.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="660" y="1172" width="14" height="15" fill="rgb(232,164,30)"/><text x="663.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="660" y="1188" width="14" height="15" fill="rgb(216,226,23)"/><text x="663.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="660" y="1204" width="14" height="15" fill="rgb(250,68,29)"/><text x="663.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="660" y="1220" width="14" height="15" fill="rgb(233,171,20)"/><text x="663.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.24%)</title><rect x="660" y="1236" width="14" height="15" fill="rgb(247,29,18)"/><text x="663.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.24%)</title><rect x="660" y="1252" width="14" height="15" fill="rgb(244,80,32)"/><text x="663.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="660" y="1268" width="14" height="15" fill="rgb(232,117,15)"/><text x="663.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="660" y="1284" width="14" height="15" fill="rgb(213,102,45)"/><text x="663.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="660" y="1300" width="14" height="15" fill="rgb(243,225,22)"/><text x="663.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="660" y="1316" width="14" height="15" fill="rgb(228,128,54)"/><text x="663.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="660" y="1332" width="14" height="15" fill="rgb(226,229,44)"/><text x="663.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="660" y="1348" width="14" height="15" fill="rgb(205,114,12)"/><text x="663.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.24%)</title><rect x="660" y="1364" width="14" height="15" fill="rgb(235,122,32)"/><text x="663.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.24%)</title><rect x="660" y="1380" width="14" height="15" fill="rgb(232,64,42)"/><text x="663.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.24%)</title><rect x="660" y="1396" width="14" height="15" fill="rgb(244,27,2)"/><text x="663.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.24%)</title><rect x="660" y="1412" width="14" height="15" fill="rgb(231,179,2)"/><text x="663.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.24%)</title><rect x="660" y="1428" width="14" height="15" fill="rgb(209,59,38)"/><text x="663.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.24%)</title><rect x="660" y="1444" width="14" height="15" fill="rgb(247,78,14)"/><text x="663.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 1.24%)</title><rect x="660" y="1460" width="14" height="15" fill="rgb(211,84,9)"/><text x="663.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 1.24%)</title><rect x="660" y="1476" width="14" height="15" fill="rgb(230,126,12)"/><text x="663.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (2 samples, 0.62%)</title><rect x="667" y="1492" width="7" height="15" fill="rgb(216,57,5)"/><text x="670.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="667" y="1508" width="7" height="15" fill="rgb(213,49,7)"/><text x="670.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="667" y="1524" width="7" height="15" fill="rgb(235,193,3)"/><text x="670.00" y="1534.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="667" y="1540" width="7" height="15" fill="rgb(218,43,18)"/><text x="670.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver1::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="667" y="1556" width="7" height="15" fill="rgb(254,47,42)"/><text x="670.00" y="1566.50"></text></g><g><title>onnx::RegisterSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="671" y="1572" width="3" height="15" fill="rgb(236,104,17)"/><text x="674.00" y="1582.50"></text></g><g><title>onnx::OpSchemaRegistry::OpSchemaRegisterOnce::OpSchemaRegisterOnce (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="671" y="1588" width="3" height="15" fill="rgb(232,4,15)"/><text x="674.00" y="1598.50"></text></g><g><title>onnx::OpSchema::Finalize (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="671" y="1604" width="3" height="15" fill="rgb(252,142,12)"/><text x="674.00" y="1614.50"></text></g><g><title>onnx::OpSchema::ParseAndSetTypes (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="671" y="1620" width="3" height="15" fill="rgb(225,64,26)"/><text x="674.00" y="1630.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::operator= (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="671" y="1636" width="3" height="15" fill="rgb(223,174,36)"/><text x="674.00" y="1646.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::operator=(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#2}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="671" y="1652" width="3" height="15" fill="rgb(236,190,29)"/><text x="674.00" y="1662.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="671" y="1668" width="3" height="15" fill="rgb(230,179,22)"/><text x="674.00" y="1678.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="671" y="1684" width="3" height="15" fill="rgb(234,229,43)"/><text x="674.00" y="1694.50"></text></g><g><title>0x7f422a4286df (libc-2.29.so) (1 samples, 0.31%)</title><rect x="671" y="1700" width="3" height="15" fill="rgb(235,206,39)"/><text x="674.00" y="1710.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.62%)</title><rect x="678" y="148" width="7" height="15" fill="rgb(247,83,11)"/><text x="681.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:423) (1 samples, 0.31%)</title><rect x="693" y="164" width="3" height="15" fill="rgb(242,167,4)"/><text x="696.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.31%)</title><rect x="696" y="164" width="4" height="15" fill="rgb(218,138,16)"/><text x="699.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.31%)</title><rect x="707" y="180" width="4" height="15" fill="rgb(241,220,4)"/><text x="710.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (10 samples, 3.10%)</title><rect x="711" y="180" width="36" height="15" fill="rgb(212,184,48)"/><text x="714.00" y="190.50">run..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.93%)</title><rect x="736" y="196" width="11" height="15" fill="rgb(252,58,28)"/><text x="739.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.31%)</title><rect x="788" y="244" width="3" height="15" fill="rgb(227,182,27)"/><text x="791.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.31%)</title><rect x="788" y="260" width="3" height="15" fill="rgb(227,91,54)"/><text x="791.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.31%)</title><rect x="788" y="276" width="3" height="15" fill="rgb(243,125,2)"/><text x="791.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.31%)</title><rect x="788" y="292" width="3" height="15" fill="rgb(222,203,3)"/><text x="791.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.31%)</title><rect x="788" y="308" width="3" height="15" fill="rgb(244,111,28)"/><text x="791.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.93%)</title><rect x="784" y="212" width="11" height="15" fill="rgb(223,94,41)"/><text x="787.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.93%)</title><rect x="784" y="228" width="11" height="15" fill="rgb(229,166,40)"/><text x="787.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.31%)</title><rect x="791" y="244" width="4" height="15" fill="rgb(214,210,1)"/><text x="794.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.31%)</title><rect x="791" y="260" width="4" height="15" fill="rgb(244,93,10)"/><text x="794.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:141) (1 samples, 0.31%)</title><rect x="791" y="276" width="4" height="15" fill="rgb(208,215,2)"/><text x="794.00" y="286.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.31%)</title><rect x="799" y="228" width="3" height="15" fill="rgb(209,108,49)"/><text x="802.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (7 samples, 2.17%)</title><rect x="780" y="196" width="26" height="15" fill="rgb(240,153,30)"/><text x="783.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 0.93%)</title><rect x="795" y="212" width="11" height="15" fill="rgb(209,41,20)"/><text x="798.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.31%)</title><rect x="802" y="228" width="4" height="15" fill="rgb(214,44,8)"/><text x="805.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:264) (1 samples, 0.31%)</title><rect x="806" y="212" width="4" height="15" fill="rgb(219,113,52)"/><text x="809.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="828" y="260" width="3" height="15" fill="rgb(238,221,47)"/><text x="831.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="828" y="276" width="3" height="15" fill="rgb(205,54,16)"/><text x="831.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="828" y="292" width="3" height="15" fill="rgb(231,97,37)"/><text x="831.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.31%)</title><rect x="835" y="340" width="4" height="15" fill="rgb(233,46,37)"/><text x="838.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.31%)</title><rect x="839" y="388" width="3" height="15" fill="rgb(232,153,9)"/><text x="842.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.93%)</title><rect x="835" y="308" width="11" height="15" fill="rgb(248,161,10)"/><text x="838.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.93%)</title><rect x="835" y="324" width="11" height="15" fill="rgb(211,21,48)"/><text x="838.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.62%)</title><rect x="839" y="340" width="7" height="15" fill="rgb(206,190,29)"/><text x="842.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.62%)</title><rect x="839" y="356" width="7" height="15" fill="rgb(244,31,19)"/><text x="842.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.62%)</title><rect x="839" y="372" width="7" height="15" fill="rgb(233,215,26)"/><text x="842.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.31%)</title><rect x="842" y="388" width="4" height="15" fill="rgb(217,92,50)"/><text x="845.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.31%)</title><rect x="846" y="324" width="4" height="15" fill="rgb(218,76,34)"/><text x="849.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.31%)</title><rect x="846" y="340" width="4" height="15" fill="rgb(242,76,14)"/><text x="849.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.31%)</title><rect x="846" y="356" width="4" height="15" fill="rgb(213,152,10)"/><text x="849.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.31%)</title><rect x="846" y="372" width="4" height="15" fill="rgb(235,134,6)"/><text x="849.00" y="382.50"></text></g><g><title>0x7f4229648600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="846" y="388" width="4" height="15" fill="rgb(242,116,54)"/><text x="849.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.31%)</title><rect x="850" y="340" width="3" height="15" fill="rgb(206,27,40)"/><text x="853.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c:2486) (1 samples, 0.31%)</title><rect x="850" y="356" width="3" height="15" fill="rgb(251,197,39)"/><text x="853.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:488) (1 samples, 0.31%)</title><rect x="853" y="372" width="4" height="15" fill="rgb(247,165,40)"/><text x="856.00" y="382.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.31%)</title><rect x="853" y="388" width="4" height="15" fill="rgb(245,100,19)"/><text x="856.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.62%)</title><rect x="853" y="340" width="8" height="15" fill="rgb(241,12,12)"/><text x="856.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.62%)</title><rect x="853" y="356" width="8" height="15" fill="rgb(219,151,37)"/><text x="856.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.31%)</title><rect x="857" y="372" width="4" height="15" fill="rgb(219,196,10)"/><text x="860.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.31%)</title><rect x="857" y="388" width="4" height="15" fill="rgb(222,9,22)"/><text x="860.00" y="398.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.31%)</title><rect x="857" y="404" width="4" height="15" fill="rgb(206,153,46)"/><text x="860.00" y="414.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.31%)</title><rect x="861" y="404" width="3" height="15" fill="rgb(244,214,35)"/><text x="864.00" y="414.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (2 samples, 0.62%)</title><rect x="861" y="388" width="7" height="15" fill="rgb(224,16,13)"/><text x="864.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="864" y="404" width="4" height="15" fill="rgb(230,31,38)"/><text x="867.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="864" y="420" width="4" height="15" fill="rgb(252,190,29)"/><text x="867.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (3 samples, 0.93%)</title><rect x="861" y="356" width="11" height="15" fill="rgb(220,145,24)"/><text x="864.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (3 samples, 0.93%)</title><rect x="861" y="372" width="11" height="15" fill="rgb(245,46,20)"/><text x="864.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.31%)</title><rect x="868" y="388" width="4" height="15" fill="rgb(208,190,15)"/><text x="871.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="868" y="404" width="4" height="15" fill="rgb(232,75,50)"/><text x="871.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.31%)</title><rect x="868" y="420" width="4" height="15" fill="rgb(212,201,40)"/><text x="871.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.31%)</title><rect x="868" y="436" width="4" height="15" fill="rgb(214,203,54)"/><text x="871.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.31%)</title><rect x="868" y="452" width="4" height="15" fill="rgb(224,143,48)"/><text x="871.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.31%)</title><rect x="872" y="356" width="3" height="15" fill="rgb(243,43,49)"/><text x="875.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.31%)</title><rect x="872" y="372" width="3" height="15" fill="rgb(217,44,12)"/><text x="875.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:538) (1 samples, 0.31%)</title><rect x="875" y="356" width="4" height="15" fill="rgb(250,163,48)"/><text x="878.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.31%)</title><rect x="879" y="356" width="4" height="15" fill="rgb(232,40,43)"/><text x="882.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="879" y="372" width="4" height="15" fill="rgb(232,42,15)"/><text x="882.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.31%)</title><rect x="879" y="388" width="4" height="15" fill="rgb(254,26,2)"/><text x="882.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.31%)</title><rect x="879" y="404" width="4" height="15" fill="rgb(251,184,22)"/><text x="882.00" y="414.50"></text></g><g><title>array_sum (methods.c:2215) (15 samples, 4.64%)</title><rect x="831" y="260" width="55" height="15" fill="rgb(205,175,11)"/><text x="834.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 4.64%)</title><rect x="831" y="276" width="55" height="15" fill="rgb(228,136,13)"/><text x="834.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.33%)</title><rect x="835" y="292" width="51" height="15" fill="rgb(241,122,15)"/><text x="838.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 3.41%)</title><rect x="846" y="308" width="40" height="15" fill="rgb(242,100,32)"/><text x="849.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 3.10%)</title><rect x="850" y="324" width="36" height="15" fill="rgb(235,185,34)"/><text x="853.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 2.17%)</title><rect x="861" y="340" width="25" height="15" fill="rgb(210,49,4)"/><text x="864.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:563) (1 samples, 0.31%)</title><rect x="883" y="356" width="3" height="15" fill="rgb(249,56,4)"/><text x="886.00" y="366.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1222) (1 samples, 0.31%)</title><rect x="883" y="372" width="3" height="15" fill="rgb(235,174,3)"/><text x="886.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="886" y="276" width="4" height="15" fill="rgb(228,66,26)"/><text x="889.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.31%)</title><rect x="886" y="292" width="4" height="15" fill="rgb(229,50,35)"/><text x="889.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (21 samples, 6.50%)</title><rect x="817" y="244" width="77" height="15" fill="rgb(217,54,27)"/><text x="820.00" y="254.50">norm_l1 ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.62%)</title><rect x="886" y="260" width="8" height="15" fill="rgb(234,71,39)"/><text x="889.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="890" y="276" width="4" height="15" fill="rgb(250,187,46)"/><text x="893.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.31%)</title><rect x="890" y="292" width="4" height="15" fill="rgb(251,220,29)"/><text x="893.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.31%)</title><rect x="890" y="308" width="4" height="15" fill="rgb(223,196,21)"/><text x="893.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.31%)</title><rect x="890" y="324" width="4" height="15" fill="rgb(216,169,5)"/><text x="893.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:194) (1 samples, 0.31%)</title><rect x="890" y="340" width="4" height="15" fill="rgb(246,157,48)"/><text x="893.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="894" y="260" width="3" height="15" fill="rgb(211,67,41)"/><text x="897.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="894" y="276" width="3" height="15" fill="rgb(227,201,25)"/><text x="897.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.31%)</title><rect x="894" y="292" width="3" height="15" fill="rgb(250,129,38)"/><text x="897.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="897" y="276" width="4" height="15" fill="rgb(245,26,2)"/><text x="900.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.31%)</title><rect x="897" y="292" width="4" height="15" fill="rgb(236,73,31)"/><text x="900.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.31%)</title><rect x="897" y="308" width="4" height="15" fill="rgb(214,50,22)"/><text x="900.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.31%)</title><rect x="897" y="324" width="4" height="15" fill="rgb(226,37,11)"/><text x="900.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.31%)</title><rect x="897" y="340" width="4" height="15" fill="rgb(250,64,12)"/><text x="900.00" y="350.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.31%)</title><rect x="897" y="356" width="4" height="15" fill="rgb(214,39,54)"/><text x="900.00" y="366.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:402) (1 samples, 0.31%)</title><rect x="897" y="372" width="4" height="15" fill="rgb(242,25,48)"/><text x="900.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="901" y="324" width="4" height="15" fill="rgb(235,120,11)"/><text x="904.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.31%)</title><rect x="901" y="340" width="4" height="15" fill="rgb(210,214,54)"/><text x="904.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.31%)</title><rect x="905" y="324" width="3" height="15" fill="rgb(228,76,52)"/><text x="908.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.93%)</title><rect x="901" y="308" width="11" height="15" fill="rgb(224,0,42)"/><text x="904.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.31%)</title><rect x="908" y="324" width="4" height="15" fill="rgb(252,50,26)"/><text x="911.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2224) (1 samples, 0.31%)</title><rect x="908" y="340" width="4" height="15" fill="rgb(230,36,18)"/><text x="911.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:319) (1 samples, 0.31%)</title><rect x="912" y="324" width="4" height="15" fill="rgb(245,34,31)"/><text x="915.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (31 samples, 9.60%)</title><rect x="806" y="196" width="113" height="15" fill="rgb(216,228,34)"/><text x="809.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 9.29%)</title><rect x="810" y="212" width="109" height="15" fill="rgb(218,89,37)"/><text x="813.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (29 samples, 8.98%)</title><rect x="813" y="228" width="106" height="15" fill="rgb(230,75,30)"/><text x="816.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 2.17%)</title><rect x="894" y="244" width="25" height="15" fill="rgb(228,175,23)"/><text x="897.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.86%)</title><rect x="897" y="260" width="22" height="15" fill="rgb(226,191,7)"/><text x="900.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.55%)</title><rect x="901" y="276" width="18" height="15" fill="rgb(238,22,16)"/><text x="904.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.55%)</title><rect x="901" y="292" width="18" height="15" fill="rgb(209,11,1)"/><text x="904.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.62%)</title><rect x="912" y="308" width="7" height="15" fill="rgb(247,80,21)"/><text x="915.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.31%)</title><rect x="916" y="324" width="3" height="15" fill="rgb(212,154,14)"/><text x="919.00" y="334.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1777) (1 samples, 0.31%)</title><rect x="916" y="340" width="3" height="15" fill="rgb(249,165,42)"/><text x="919.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.31%)</title><rect x="919" y="196" width="4" height="15" fill="rgb(212,117,18)"/><text x="922.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.31%)</title><rect x="919" y="212" width="4" height="15" fill="rgb(237,195,48)"/><text x="922.00" y="222.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:949) (1 samples, 0.31%)</title><rect x="937" y="308" width="4" height="15" fill="rgb(247,159,17)"/><text x="940.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.31%)</title><rect x="937" y="324" width="4" height="15" fill="rgb(225,180,36)"/><text x="940.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.31%)</title><rect x="937" y="340" width="4" height="15" fill="rgb(250,117,6)"/><text x="940.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:579) (1 samples, 0.31%)</title><rect x="941" y="324" width="4" height="15" fill="rgb(235,170,22)"/><text x="944.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (7 samples, 2.17%)</title><rect x="923" y="228" width="25" height="15" fill="rgb(223,124,0)"/><text x="926.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (4 samples, 1.24%)</title><rect x="934" y="244" width="14" height="15" fill="rgb(234,46,34)"/><text x="937.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 0.93%)</title><rect x="937" y="260" width="11" height="15" fill="rgb(210,43,54)"/><text x="940.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.93%)</title><rect x="937" y="276" width="11" height="15" fill="rgb(229,79,40)"/><text x="940.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.93%)</title><rect x="937" y="292" width="11" height="15" fill="rgb(228,196,54)"/><text x="940.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.62%)</title><rect x="941" y="308" width="7" height="15" fill="rgb(212,199,20)"/><text x="944.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.31%)</title><rect x="945" y="324" width="3" height="15" fill="rgb(248,0,31)"/><text x="948.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.31%)</title><rect x="945" y="340" width="3" height="15" fill="rgb(216,87,38)"/><text x="948.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="945" y="356" width="3" height="15" fill="rgb(241,65,29)"/><text x="948.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="948" y="260" width="4" height="15" fill="rgb(207,165,33)"/><text x="951.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.31%)</title><rect x="948" y="276" width="4" height="15" fill="rgb(205,118,43)"/><text x="951.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.31%)</title><rect x="952" y="308" width="4" height="15" fill="rgb(251,158,36)"/><text x="955.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="952" y="324" width="4" height="15" fill="rgb(220,159,44)"/><text x="955.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="956" y="308" width="3" height="15" fill="rgb(245,105,19)"/><text x="959.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.31%)</title><rect x="956" y="324" width="3" height="15" fill="rgb(236,67,53)"/><text x="959.00" y="334.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:963) (1 samples, 0.31%)</title><rect x="956" y="340" width="3" height="15" fill="rgb(246,214,36)"/><text x="959.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 1.24%)</title><rect x="948" y="228" width="15" height="15" fill="rgb(228,105,45)"/><text x="951.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.24%)</title><rect x="948" y="244" width="15" height="15" fill="rgb(238,110,40)"/><text x="951.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.93%)</title><rect x="952" y="260" width="11" height="15" fill="rgb(238,67,21)"/><text x="955.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.93%)</title><rect x="952" y="276" width="11" height="15" fill="rgb(211,38,19)"/><text x="955.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.93%)</title><rect x="952" y="292" width="11" height="15" fill="rgb(248,115,43)"/><text x="955.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.31%)</title><rect x="959" y="308" width="4" height="15" fill="rgb(225,59,52)"/><text x="962.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3165) (1 samples, 0.31%)</title><rect x="959" y="324" width="4" height="15" fill="rgb(237,18,17)"/><text x="962.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="967" y="260" width="3" height="15" fill="rgb(225,8,49)"/><text x="970.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.31%)</title><rect x="967" y="276" width="3" height="15" fill="rgb(227,205,39)"/><text x="970.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (3 samples, 0.93%)</title><rect x="963" y="228" width="11" height="15" fill="rgb(214,83,33)"/><text x="966.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.62%)</title><rect x="967" y="244" width="7" height="15" fill="rgb(231,129,30)"/><text x="970.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="970" y="260" width="4" height="15" fill="rgb(248,203,32)"/><text x="973.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.31%)</title><rect x="970" y="276" width="4" height="15" fill="rgb(246,48,28)"/><text x="973.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.31%)</title><rect x="970" y="292" width="4" height="15" fill="rgb(211,118,6)"/><text x="973.00" y="302.50"></text></g><g><title>0x7f421570e33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="970" y="308" width="4" height="15" fill="rgb(216,13,38)"/><text x="973.00" y="318.50"></text></g><g><title>0x7f4215730214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="970" y="324" width="4" height="15" fill="rgb(234,85,37)"/><text x="973.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.31%)</title><rect x="970" y="340" width="4" height="15" fill="rgb(244,210,15)"/><text x="973.00" y="350.50"></text></g><g><title>0x7f422a5a5e00 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="970" y="356" width="4" height="15" fill="rgb(235,201,37)"/><text x="973.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.31%)</title><rect x="974" y="228" width="4" height="15" fill="rgb(252,33,6)"/><text x="977.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.31%)</title><rect x="981" y="244" width="4" height="15" fill="rgb(216,17,3)"/><text x="984.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (19 samples, 5.88%)</title><rect x="923" y="196" width="69" height="15" fill="rgb(225,150,24)"/><text x="926.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (19 samples, 5.88%)</title><rect x="923" y="212" width="69" height="15" fill="rgb(206,123,9)"/><text x="926.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (4 samples, 1.24%)</title><rect x="978" y="228" width="14" height="15" fill="rgb(213,172,22)"/><text x="981.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.62%)</title><rect x="985" y="244" width="7" height="15" fill="rgb(212,4,27)"/><text x="988.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.62%)</title><rect x="985" y="260" width="7" height="15" fill="rgb(225,200,52)"/><text x="988.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (2 samples, 0.62%)</title><rect x="985" y="276" width="7" height="15" fill="rgb(213,63,47)"/><text x="988.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.31%)</title><rect x="989" y="292" width="3" height="15" fill="rgb(222,41,35)"/><text x="992.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.31%)</title><rect x="989" y="308" width="3" height="15" fill="rgb(216,57,35)"/><text x="992.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (1 samples, 0.31%)</title><rect x="989" y="324" width="3" height="15" fill="rgb(231,6,42)"/><text x="992.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1864) (1 samples, 0.31%)</title><rect x="989" y="340" width="3" height="15" fill="rgb(241,177,38)"/><text x="992.00" y="350.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.31%)</title><rect x="989" y="356" width="3" height="15" fill="rgb(253,100,20)"/><text x="992.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (68 samples, 21.05%)</title><rect x="747" y="180" width="249" height="15" fill="rgb(225,91,18)"/><text x="750.00" y="190.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.31%)</title><rect x="992" y="196" width="4" height="15" fill="rgb(205,15,14)"/><text x="995.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.93%)</title><rect x="996" y="180" width="11" height="15" fill="rgb(244,228,1)"/><text x="999.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.62%)</title><rect x="1007" y="180" width="7" height="15" fill="rgb(205,128,44)"/><text x="1010.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 1.86%)</title><rect x="1014" y="180" width="22" height="15" fill="rgb(210,169,27)"/><text x="1017.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (94 samples, 29.10%)</title><rect x="700" y="164" width="343" height="15" fill="rgb(235,137,50)"/><text x="703.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.62%)</title><rect x="1036" y="180" width="7" height="15" fill="rgb(239,200,24)"/><text x="1039.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (103 samples, 31.89%)</title><rect x="678" y="132" width="376" height="15" fill="rgb(247,3,36)"/><text x="681.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (101 samples, 31.27%)</title><rect x="685" y="148" width="369" height="15" fill="rgb(242,95,11)"/><text x="688.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 0.93%)</title><rect x="1043" y="164" width="11" height="15" fill="rgb(237,147,53)"/><text x="1046.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.31%)</title><rect x="1051" y="180" width="3" height="15" fill="rgb(236,156,0)"/><text x="1054.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:45) (106 samples, 32.82%)</title><rect x="674" y="52" width="388" height="15" fill="rgb(226,108,36)"/><text x="677.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:44) (106 samples, 32.82%)</title><rect x="674" y="68" width="388" height="15" fill="rgb(213,218,13)"/><text x="677.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:29) (106 samples, 32.82%)</title><rect x="674" y="84" width="388" height="15" fill="rgb(210,128,8)"/><text x="677.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:23) (106 samples, 32.82%)</title><rect x="674" y="100" width="388" height="15" fill="rgb(251,57,17)"/><text x="677.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (106 samples, 32.82%)</title><rect x="674" y="116" width="388" height="15" fill="rgb(236,112,28)"/><text x="677.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.62%)</title><rect x="1054" y="132" width="8" height="15" fill="rgb(229,106,25)"/><text x="1057.00" y="142.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:22) (1 samples, 0.31%)</title><rect x="1062" y="100" width="3" height="15" fill="rgb(243,179,2)"/><text x="1065.00" y="110.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.31%)</title><rect x="1098" y="196" width="4" height="15" fill="rgb(206,115,26)"/><text x="1101.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.93%)</title><rect x="1102" y="196" width="11" height="15" fill="rgb(217,28,13)"/><text x="1105.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.62%)</title><rect x="1105" y="212" width="8" height="15" fill="rgb(208,139,29)"/><text x="1108.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1109" y="228" width="4" height="15" fill="rgb(236,84,10)"/><text x="1112.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1109" y="244" width="4" height="15" fill="rgb(242,72,45)"/><text x="1112.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1109" y="260" width="4" height="15" fill="rgb(223,12,41)"/><text x="1112.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1109" y="276" width="4" height="15" fill="rgb(222,101,9)"/><text x="1112.00" y="286.50"></text></g><g><title>0x7f41ea496ff9 (?) (1 samples, 0.31%)</title><rect x="1120" y="212" width="4" height="15" fill="rgb(215,26,10)"/><text x="1123.00" y="222.50"></text></g><g><title>0x7f41ea491ef6 (?) (1 samples, 0.31%)</title><rect x="1120" y="228" width="4" height="15" fill="rgb(240,217,48)"/><text x="1123.00" y="238.50"></text></g><g><title>0x7f41ea486962 (?) (1 samples, 0.31%)</title><rect x="1120" y="244" width="4" height="15" fill="rgb(237,178,13)"/><text x="1123.00" y="254.50"></text></g><g><title>0x7f41ea4ba7a7 (?) (1 samples, 0.31%)</title><rect x="1120" y="260" width="4" height="15" fill="rgb(237,19,36)"/><text x="1123.00" y="270.50"></text></g><g><title>0x7f41ea4b9f9c (?) (1 samples, 0.31%)</title><rect x="1120" y="276" width="4" height="15" fill="rgb(216,192,18)"/><text x="1123.00" y="286.50"></text></g><g><title>0x7f41ea8d468a (?) (1 samples, 0.31%)</title><rect x="1120" y="292" width="4" height="15" fill="rgb(224,7,41)"/><text x="1123.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1120" y="308" width="4" height="15" fill="rgb(228,104,41)"/><text x="1123.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1120" y="324" width="4" height="15" fill="rgb(252,45,21)"/><text x="1123.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1124" y="292" width="3" height="15" fill="rgb(216,41,3)"/><text x="1127.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1124" y="308" width="3" height="15" fill="rgb(248,175,50)"/><text x="1127.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1124" y="324" width="3" height="15" fill="rgb(229,21,15)"/><text x="1127.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1127" y="292" width="4" height="15" fill="rgb(232,224,7)"/><text x="1130.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1127" y="308" width="4" height="15" fill="rgb(234,218,52)"/><text x="1130.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1127" y="324" width="4" height="15" fill="rgb(225,65,2)"/><text x="1130.00" y="334.50"></text></g><g><title>0x7f422a42800a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1127" y="340" width="4" height="15" fill="rgb(228,72,31)"/><text x="1130.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1135" y="340" width="3" height="15" fill="rgb(253,168,44)"/><text x="1138.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1135" y="356" width="3" height="15" fill="rgb(241,202,8)"/><text x="1138.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1135" y="372" width="3" height="15" fill="rgb(213,162,18)"/><text x="1138.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1138" y="356" width="4" height="15" fill="rgb(206,68,26)"/><text x="1141.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1138" y="372" width="4" height="15" fill="rgb(253,207,10)"/><text x="1141.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1138" y="388" width="4" height="15" fill="rgb(238,109,41)"/><text x="1141.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1138" y="340" width="8" height="15" fill="rgb(219,2,0)"/><text x="1141.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetEnableMemoryPattern (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1142" y="356" width="4" height="15" fill="rgb(229,95,36)"/><text x="1145.00" y="366.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1146" y="340" width="3" height="15" fill="rgb(240,169,16)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1149" y="340" width="4" height="15" fill="rgb(253,166,44)"/><text x="1152.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.10%)</title><rect x="1124" y="260" width="36" height="15" fill="rgb(206,108,44)"/><text x="1127.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.10%)</title><rect x="1124" y="276" width="36" height="15" fill="rgb(231,192,10)"/><text x="1127.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.48%)</title><rect x="1131" y="292" width="29" height="15" fill="rgb(243,126,9)"/><text x="1134.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.48%)</title><rect x="1131" y="308" width="29" height="15" fill="rgb(212,213,11)"/><text x="1134.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.48%)</title><rect x="1131" y="324" width="29" height="15" fill="rgb(206,204,6)"/><text x="1134.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1153" y="340" width="7" height="15" fill="rgb(214,80,0)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1153" y="356" width="7" height="15" fill="rgb(228,19,46)"/><text x="1156.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1153" y="372" width="7" height="15" fill="rgb(250,221,5)"/><text x="1156.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1157" y="388" width="3" height="15" fill="rgb(220,147,46)"/><text x="1160.00" y="398.50"></text></g><g><title>onnxruntime::DataTypeImpl::IsSparseTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1157" y="404" width="3" height="15" fill="rgb(232,208,4)"/><text x="1160.00" y="414.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1160" y="260" width="8" height="15" fill="rgb(238,149,37)"/><text x="1163.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1164" y="276" width="4" height="15" fill="rgb(246,57,6)"/><text x="1167.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1168" y="260" width="3" height="15" fill="rgb(238,2,19)"/><text x="1171.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.31%)</title><rect x="1168" y="276" width="3" height="15" fill="rgb(234,177,49)"/><text x="1171.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.31%)</title><rect x="1168" y="292" width="3" height="15" fill="rgb(207,130,42)"/><text x="1171.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.31%)</title><rect x="1168" y="308" width="3" height="15" fill="rgb(248,163,0)"/><text x="1171.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.64%)</title><rect x="1124" y="244" width="55" height="15" fill="rgb(250,134,50)"/><text x="1127.00" y="254.50">onnxr..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1171" y="260" width="8" height="15" fill="rgb(226,132,29)"/><text x="1174.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1171" y="276" width="8" height="15" fill="rgb(249,175,54)"/><text x="1174.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1171" y="292" width="8" height="15" fill="rgb(238,37,42)"/><text x="1174.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1171" y="308" width="8" height="15" fill="rgb(205,229,30)"/><text x="1174.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1171" y="324" width="8" height="15" fill="rgb(205,225,53)"/><text x="1174.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1171" y="340" width="8" height="15" fill="rgb(226,164,29)"/><text x="1174.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1175" y="356" width="4" height="15" fill="rgb(254,36,22)"/><text x="1178.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1175" y="372" width="4" height="15" fill="rgb(242,43,16)"/><text x="1178.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1175" y="388" width="4" height="15" fill="rgb(251,200,5)"/><text x="1178.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1175" y="404" width="4" height="15" fill="rgb(254,17,29)"/><text x="1178.00" y="414.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (25 samples, 7.74%)</title><rect x="1091" y="164" width="91" height="15" fill="rgb(248,161,25)"/><text x="1094.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (23 samples, 7.12%)</title><rect x="1098" y="180" width="84" height="15" fill="rgb(227,155,29)"/><text x="1101.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (19 samples, 5.88%)</title><rect x="1113" y="196" width="69" height="15" fill="rgb(210,78,10)"/><text x="1116.00" y="206.50">run (on..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.95%)</title><rect x="1124" y="212" width="58" height="15" fill="rgb(243,64,2)"/><text x="1127.00" y="222.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.95%)</title><rect x="1124" y="228" width="58" height="15" fill="rgb(222,68,31)"/><text x="1127.00" y="238.50">void p..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(253,123,43)"/><text x="1182.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="260" width="3" height="15" fill="rgb(243,106,47)"/><text x="1182.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(216,40,4)"/><text x="1182.00" y="286.50"></text></g><g><title>all (323 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(226,130,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:52) (35 samples, 10.84%)</title><rect x="1062" y="52" width="128" height="15" fill="rgb(245,131,38)"/><text x="1065.00" y="62.50">&lt;module&gt; (bench_..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:51) (35 samples, 10.84%)</title><rect x="1062" y="68" width="128" height="15" fill="rgb(236,148,36)"/><text x="1065.00" y="78.50">profile_ort (ben..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:29) (35 samples, 10.84%)</title><rect x="1062" y="84" width="128" height="15" fill="rgb(224,132,24)"/><text x="1065.00" y="94.50">setup_profile (b..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py:23) (34 samples, 10.53%)</title><rect x="1065" y="100" width="125" height="15" fill="rgb(253,25,17)"/><text x="1068.00" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (33 samples, 10.22%)</title><rect x="1069" y="116" width="121" height="15" fill="rgb(254,113,25)"/><text x="1072.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (31 samples, 9.60%)</title><rect x="1076" y="132" width="114" height="15" fill="rgb(205,102,5)"/><text x="1079.00" y="142.50">&lt;lambda&gt; (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (30 samples, 9.29%)</title><rect x="1080" y="148" width="110" height="15" fill="rgb(208,83,42)"/><text x="1083.00" y="158.50">run (mlprodic..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.62%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(237,17,20)"/><text x="1185.00" y="174.50"></text></g></g></svg>